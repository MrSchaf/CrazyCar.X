

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jan 25 22:56:06 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=4,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=4,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=4,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=4,class=CODE,delta=1
    93                           	psect	text78,global,reloc=4,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=4,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=4,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=4,class=CODE,delta=1
   103                           	psect	text88,global,reloc=4,class=CODE,delta=1
   104                           	psect	text89,global,reloc=4,class=CODE,delta=1
   105                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	text90,global,reloc=4,class=CODE,delta=1
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110  0000                     
   111                           ; Version 2.20
   112                           ; Generated 05/05/2020 GMT
   113                           ; 
   114                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F46K42 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     _ADERRL	set	16098
   146  0000                     _ADERRH	set	16099
   147  0000                     _ADPREVL	set	16109
   148  0000                     _ADPREVH	set	16110
   149  0000                     _ADFLTRL	set	16102
   150  0000                     _ADFLTRH	set	16103
   151  0000                     _ADACCL	set	16104
   152  0000                     _ADACCH	set	16105
   153  0000                     _ADCNT	set	16107
   154  0000                     _ADRESL	set	16111
   155  0000                     _ADRESH	set	16112
   156  0000                     _ADCON0	set	16120
   157  0000                     _ADCON1	set	16121
   158  0000                     _ADPREH	set	16119
   159  0000                     _ADPREL	set	16118
   160  0000                     _ADCAP	set	16117
   161  0000                     _ADACQH	set	16116
   162  0000                     _ADPCH	set	16113
   163  0000                     _ADRPT	set	16108
   164  0000                     _ADACCU	set	16106
   165  0000                     _ADSTPTH	set	16101
   166  0000                     _ADSTPTL	set	16100
   167  0000                     _ADUTHH	set	16097
   168  0000                     _ADUTHL	set	16096
   169  0000                     _ADLTHH	set	16095
   170  0000                     _T2CON	set	16300
   171  0000                     _T2TMR	set	16298
   172  0000                     _T2PR	set	16299
   173  0000                     _T2HLT	set	16301
   174  0000                     _T2CLKCON	set	16302
   175  0000                     _SMT1SIG	set	16162
   176  0000                     _SMT1WIN	set	16163
   177  0000                     _SMT1CLK	set	16161
   178  0000                     _SMT1STAT	set	16160
   179  0000                     _SMT1CON1	set	16159
   180  0000                     _PWM8DCL	set	16224
   181  0000                     _PWM8DCH	set	16225
   182  0000                     _PWM8CON	set	16226
   183  0000                     _CCPTMRS1bits	set	16223
   184  0000                     _PWM7DCL	set	16228
   185  0000                     _PWM7DCH	set	16229
   186  0000                     _PWM7CON	set	16230
   187  0000                     _T4CON	set	16288
   188  0000                     _PIR7bits	set	14759
   189  0000                     _T4TMR	set	16286
   190  0000                     _T4PR	set	16287
   191  0000                     _T4RST	set	16291
   192  0000                     _T4HLT	set	16289
   193  0000                     _T4CLKCON	set	16290
   194  0000                     _T3CON	set	16294
   195  0000                     _TMR3L	set	16292
   196  0000                     _TMR3H	set	16293
   197  0000                     _T3CLK	set	16297
   198  0000                     _T3GATE	set	16296
   199  0000                     _T3GCON	set	16295
   200  0000                     _T5CON	set	16282
   201  0000                     _T5CLK	set	16285
   202  0000                     _T5GATE	set	16284
   203  0000                     _CCPR4L	set	16240
   204  0000                     _CCPR4H	set	16241
   205  0000                     _CCP4CAP	set	16243
   206  0000                     _CCP4CON	set	16242
   207  0000                     _IPR9bits	set	14729
   208  0000                     _IVTBASEL	set	16341
   209  0000                     _IVTBASEH	set	16342
   210  0000                     _IVTBASEU	set	16343
   211  0000                     _CCP4PPS	set	15056
   212  0000                     _SMT1WINPPS	set	15057
   213  0000                     _CLCIN0PPS	set	15065
   214  0000                     _CLCIN3PPS	set	15068
   215  0000                     _TRISD	set	16325
   216  0000                     _TRISC	set	16324
   217  0000                     _TRISB	set	16323
   218  0000                     _LATC	set	16316
   219  0000                     _LATB	set	16315
   220  0000                     _OSCTUNE	set	14814
   221  0000                     _OSCFRQ	set	14815
   222                           
   223                           	psect	nvCOMRAM
   224  000040                     __pnvCOMRAM:
   225                           	callstack 0
   226  000040                     _uart1TxBufferRemaining:
   227                           	callstack 0
   228  000040                     	ds	1
   229                           
   230                           	psect	nvBANK0
   231  0000E9                     __pnvBANK0:
   232                           	callstack 0
   233  0000E9                     _TMR4_InterruptHandler:
   234                           	callstack 0
   235  0000E9                     	ds	2
   236  0000EB                     _timer3ReloadVal:
   237                           	callstack 0
   238  0000EB                     	ds	2
   239  0000ED                     _TMR5_GateInterruptHandler:
   240                           	callstack 0
   241  0000ED                     	ds	2
   242  0000EF                     _timer5ReloadVal:
   243                           	callstack 0
   244  0000EF                     	ds	2
   245  0000F1                     _CCP4_CallBack:
   246                           	callstack 0
   247  0000F1                     	ds	2
   248  0000F3                     _CCP3_CallBack:
   249                           	callstack 0
   250  0000F3                     	ds	2
   251  0000F5                     _UART1_ErrorHandler:
   252                           	callstack 0
   253  0000F5                     	ds	2
   254  0000F7                     _UART1_OverrunErrorHandler:
   255                           	callstack 0
   256  0000F7                     	ds	2
   257  0000F9                     _UART1_FramingErrorHandler:
   258                           	callstack 0
   259  0000F9                     	ds	2
   260  0000FB                     _UART1_TxInterruptHandler:
   261                           	callstack 0
   262  0000FB                     	ds	2
   263  0000FD                     _UART1_RxInterruptHandler:
   264                           	callstack 0
   265  0000FD                     	ds	2
   266  0000                     _CLC3CON	set	15456
   267  0000                     _U1ERRIRbits	set	15865
   268  0000                     _ADCON1bits	set	16121
   269  0000                     _ADSTATbits	set	16124
   270  0000                     _ADCON2bits	set	16122
   271  0000                     _ADCON3bits	set	16123
   272  0000                     _ADCON0bits	set	16120
   273  0000                     _SMT1PR	set	16155
   274  0000                     _SMT1STATbits	set	16160
   275  0000                     _SMT1CON0bits	set	16158
   276  0000                     _SMT1CON1bits	set	16159
   277  0000                     _PR2	set	16299
   278  0000                     _TMR2	set	16298
   279  0000                     _T2CONbits	set	16300
   280  0000                     _T2RSTbits	set	16303
   281  0000                     _T2HLTbits	set	16301
   282  0000                     _PR4	set	16287
   283  0000                     _TMR4	set	16286
   284  0000                     _T4CONbits	set	16288
   285  0000                     _T4RSTbits	set	16291
   286  0000                     _T4HLTbits	set	16289
   287  0000                     _T3GCONbits	set	16295
   288  0000                     _T3CONbits	set	16294
   289  0000                     _T5GCONbits	set	16283
   290  0000                     _T5CONbits	set	16282
   291  0000                     _IVTLOCKbits	set	16340
   292  0000                     _GIE	set	130711
   293  0000                     _IPR1bits	set	14721
   294  0000                     _IPR3bits	set	14723
   295  0000                     _PIE3bits	set	14739
   296  0000                     _PMD0	set	14784
   297  0000                     _OSCCON1	set	14809
   298  0000                     _OSCCON3	set	14811
   299  0000                     _OSCEN	set	14813
   300  0000                     _RA0PPS	set	14848
   301  0000                     _RA1PPS	set	14849
   302  0000                     _ANSELA	set	14912
   303  0000                     _ANSELB	set	14928
   304  0000                     _ANSELC	set	14944
   305  0000                     _ANSELD	set	14960
   306  0000                     _LATA	set	16314
   307  0000                     _LATD	set	16317
   308  0000                     _LATE	set	16318
   309  0000                     _PMD7	set	14791
   310  0000                     _PMD6	set	14790
   311  0000                     _PMD5	set	14789
   312  0000                     _PMD4	set	14788
   313  0000                     _PMD3	set	14787
   314  0000                     _PMD2	set	14786
   315  0000                     _PMD1	set	14785
   316  0000                     _TRISA	set	16322
   317  0000                     _TRISE	set	16326
   318  0000                     _PORTBbits	set	16331
   319  0000                     _PORTDbits	set	16333
   320  0000                     _INTCON0bits	set	16338
   321  0000                     _INLVLD	set	14964
   322  0000                     _SLRCOND	set	14963
   323  0000                     _ODCOND	set	14962
   324  0000                     _RD0I2C	set	14970
   325  0000                     _WPUD	set	14961
   326  0000                     _ANSELE	set	14976
   327  0000                     _INLVLC	set	14948
   328  0000                     _SLRCONC	set	14947
   329  0000                     _ODCONC	set	14946
   330  0000                     _RC3I2C	set	14954
   331  0000                     _WPUC	set	14945
   332  0000                     _INLVLB	set	14932
   333  0000                     _SLRCONB	set	14931
   334  0000                     _ODCONB	set	14930
   335  0000                     _RB1I2C	set	14938
   336  0000                     _WPUB	set	14929
   337  0000                     _T5GPPS	set	15049
   338  0000                     _CCP3PPS	set	15055
   339  0000                     _INLVLE	set	14980
   340  0000                     _SLRCONE	set	14979
   341  0000                     _ODCONE	set	14978
   342  0000                     _WPUE	set	14977
   343  0000                     _INLVLA	set	14916
   344  0000                     _SLRCONA	set	14915
   345  0000                     _ODCONA	set	14914
   346  0000                     _WPUA	set	14913
   347  0000                     _RB2I2C	set	14939
   348  0000                     _RC4I2C	set	14955
   349  0000                     _RD1I2C	set	14971
   350  0000                     _U1RXPPS	set	15077
   351  0000                     _RA3PPS	set	14851
   352  0000                     _RA4PPS	set	14852
   353  0000                     _CLC3CONbits	set	15456
   354  0000                     _U1RXB	set	15848
   355  0000                     _U1TXB	set	15850
   356  0000                     _U1P1L	set	15852
   357  0000                     _RB3PPS	set	14859
   358  0000                     _CLCIN2PPS	set	15067
   359  0000                     _SMT1SIGPPS	set	15058
   360  0000                     _PIE7bits	set	14743
   361  0000                     _PIE8bits	set	14744
   362  0000                     _PIE9bits	set	14745
   363  0000                     _PIR9bits	set	14761
   364  0000                     _SMT1TMR	set	16146
   365  0000                     _SMT1CPR	set	16149
   366  0000                     _SMT1CPW	set	16152
   367  0000                     _ADLTHL	set	16094
   368  0000                     _SMT1PRL	set	16155
   369  0000                     _SMT1PRH	set	16156
   370  0000                     _SMT1PRU	set	16157
   371  0000                     _SMT1CON0	set	16158
   372  0000                     _CCPTMRS0bits	set	16222
   373  0000                     _CCPR3L	set	16244
   374  0000                     _CCPR3H	set	16245
   375  0000                     _CCP3CON	set	16246
   376  0000                     _U1ERRIE	set	15866
   377  0000                     _U1ERRIR	set	15865
   378  0000                     _U1UIR	set	15864
   379  0000                     _U1FIFO	set	15863
   380  0000                     _U1BRGH	set	15862
   381  0000                     _U1BRGL	set	15861
   382  0000                     _U1CON2	set	15860
   383  0000                     _U1CON1	set	15859
   384  0000                     _U1CON0	set	15858
   385  0000                     _U1P3H	set	15857
   386  0000                     _U1P3L	set	15856
   387  0000                     _U1P2H	set	15855
   388  0000                     _U1P2L	set	15854
   389  0000                     _U1P1H	set	15853
   390  0000                     _IVTLOCK	set	16340
   391  0000                     _IPR7bits	set	14727
   392  0000                     _IPR8bits	set	14728
   393  0000                     _IPR10bits	set	14730
   394  0000                     _PIE1bits	set	14737
   395  0000                     _TMR5L	set	16280
   396  0000                     _TMR5H	set	16281
   397  0000                     _T5GCON	set	16283
   398  0000                     _CCP3CAP	set	16247
   399  0000                     _PIR10bits	set	14762
   400  0000                     _PIR1bits	set	14753
   401  0000                     _PIR6bits	set	14758
   402  0000                     _PIR8bits	set	14760
   403  0000                     _PIE10bits	set	14746
   404  0000                     _PWM6DCL	set	16232
   405  0000                     _PWM6DCH	set	16233
   406  0000                     _PWM6CON	set	16234
   407  0000                     _PWM5DCL	set	16236
   408  0000                     _PWM5DCH	set	16237
   409  0000                     _PWM5CON	set	16238
   410  0000                     _PIR4bits	set	14756
   411  0000                     _CLC3GLS3	set	15465
   412  0000                     _CLC3GLS2	set	15464
   413  0000                     _CLC3GLS1	set	15463
   414  0000                     _CLC3GLS0	set	15462
   415  0000                     _CLC3SEL3	set	15461
   416  0000                     _CLC3SEL2	set	15460
   417  0000                     _CLC3SEL1	set	15459
   418  0000                     _CLC3SEL0	set	15458
   419  0000                     _CLC3POL	set	15457
   420  0000                     _T2RST	set	16303
   421  0000                     _ADACQL	set	16115
   422  0000                     _ADCLK	set	16127
   423  0000                     _ADACT	set	16126
   424  0000                     _ADREF	set	16125
   425  0000                     _ADSTAT	set	16124
   426  0000                     _ADCON3	set	16123
   427  0000                     _ADCON2	set	16122
   428                           
   429                           	psect	smallconst
   430  001000                     __psmallconst:
   431                           	callstack 0
   432  001000  00                 	db	0
   433  001001                     STR_1:
   434                           
   435                           ; BSR set to: 0
   436  001001  74                 	db	116	;'t'
   437  001002  65                 	db	101	;'e'
   438  001003  6D                 	db	109	;'m'
   439  001004  70                 	db	112	;'p'
   440  001005  43                 	db	67	;'C'
   441  001006  4E                 	db	78	;'N'
   442  001007  54                 	db	84	;'T'
   443  001008  20                 	db	32
   444  001009  4F                 	db	79	;'O'
   445  00100A  76                 	db	118	;'v'
   446  00100B  65                 	db	101	;'e'
   447  00100C  72                 	db	114	;'r'
   448  00100D  66                 	db	102	;'f'
   449  00100E  6C                 	db	108	;'l'
   450  00100F  6F                 	db	111	;'o'
   451  001010  77                 	db	119	;'w'
   452  001011  00                 	db	0
   453  001012                     STR_2:
   454                           
   455                           ; BSR set to: 0
   456  001012  42                 	db	66	;'B'
   457  001013  56                 	db	86	;'V'
   458  001014  6F                 	db	111	;'o'
   459  001015  6C                 	db	108	;'l'
   460  001016  74                 	db	116	;'t'
   461  001017  3A                 	db	58	;':'
   462  001018  20                 	db	32
   463  001019  25                 	db	37
   464  00101A  75                 	db	117	;'u'
   465  00101B  0A                 	db	10
   466  00101C  00                 	db	0
   467  00101D  00                 	db	0	; dummy byte at the end
   468  0000                     
   469                           ; #config settings
   470                           
   471                           	psect	cinit
   472  003A1C                     __pcinit:
   473                           	callstack 0
   474  003A1C                     start_initialization:
   475                           	callstack 0
   476  003A1C                     __initialization:
   477                           	callstack 0
   478                           
   479                           ; Clear objects allocated to BANK1 (32 bytes)
   480  003A1C  EE00  F100         	lfsr	0,__pbssBANK1
   481  003A20  0E20               	movlw	32
   482  003A22                     clear_0:
   483  003A22  6AEE               	clrf	postinc0,c
   484  003A24  06E8               	decf	wreg,f,c
   485  003A26  E1FD               	bnz	clear_0
   486                           
   487                           ; Clear objects allocated to BANK0 (58 bytes)
   488  003A28  EE00  F0AF         	lfsr	0,__pbssBANK0
   489  003A2C  0E3A               	movlw	58
   490  003A2E                     clear_1:
   491  003A2E  6AEE               	clrf	postinc0,c
   492  003A30  06E8               	decf	wreg,f,c
   493  003A32  E1FD               	bnz	clear_1
   494                           
   495                           ; Clear objects allocated to COMRAM (30 bytes)
   496  003A34  EE00  F022         	lfsr	0,__pbssCOMRAM
   497  003A38  0E1E               	movlw	30
   498  003A3A                     clear_2:
   499  003A3A  6AEE               	clrf	postinc0,c
   500  003A3C  06E8               	decf	wreg,f,c
   501  003A3E  E1FD               	bnz	clear_2
   502                           
   503                           ;
   504                           ; Setup IVTBASE
   505                           ;
   506  003A40  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   507  003A42  6ED5               	movwf	213,c
   508  003A44  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   509  003A46  6ED6               	movwf	214,c
   510  003A48  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   511  003A4A  6ED7               	movwf	215,c
   512  003A4C                     end_of_initialization:
   513                           	callstack 0
   514  003A4C                     __end_of__initialization:
   515                           	callstack 0
   516  003A4C  0100               	movlb	0
   517  003A4E  EFD9  F01E         	goto	_main	;jump to C main() function
   518                           
   519                           	psect	bssCOMRAM
   520  000022                     __pbssCOMRAM:
   521                           	callstack 0
   522  000022                     _flags:
   523                           	callstack 0
   524  000022                     	ds	2
   525  000024                     _BatteryVolt:
   526                           	callstack 0
   527  000024                     	ds	2
   528  000026                     _actMotorPow:
   529                           	callstack 0
   530  000026                     	ds	2
   531  000028                     _oldDistLeft:
   532                           	callstack 0
   533  000028                     	ds	2
   534  00002A                     TMR4_ISR@CountCallBack:
   535                           	callstack 0
   536  00002A                     	ds	2
   537  00002C                     _distRight:
   538                           	callstack 0
   539  00002C                     	ds	2
   540  00002E                     _distLeft:
   541                           	callstack 0
   542  00002E                     	ds	2
   543  000030                     _battCheckCount:
   544                           	callstack 0
   545  000030                     	ds	1
   546  000031                     _reverseCount:
   547                           	callstack 0
   548  000031                     	ds	1
   549  000032                     _delay:
   550                           	callstack 0
   551  000032                     	ds	1
   552  000033                     _cycle10ms:
   553                           	callstack 0
   554  000033                     	ds	1
   555  000034                     _curveMode:
   556                           	callstack 0
   557  000034                     	ds	1
   558  000035                     _driveMode:
   559                           	callstack 0
   560  000035                     	ds	1
   561  000036                     _uart1RxLastError:
   562                           	callstack 0
   563  000036                     	ds	1
   564  000037                     _uart1RxCount:
   565                           	callstack 0
   566  000037                     	ds	1
   567  000038                     _uart1RxTail:
   568                           	callstack 0
   569  000038                     	ds	1
   570  000039                     _uart1RxHead:
   571                           	callstack 0
   572  000039                     	ds	1
   573  00003A                     _uart1TxTail:
   574                           	callstack 0
   575  00003A                     	ds	1
   576  00003B                     _uart1TxHead:
   577                           	callstack 0
   578  00003B                     	ds	1
   579  00003C                     _smtPeriod:
   580                           	callstack 0
   581  00003C                     	ds	4
   582                           
   583                           	psect	bssBANK0
   584  0000AF                     __pbssBANK0:
   585                           	callstack 0
   586  0000AF                     _uart1RxStatusBuffer:
   587                           	callstack 0
   588  0000AF                     	ds	8
   589  0000B7                     _uart1RxBuffer:
   590                           	callstack 0
   591  0000B7                     	ds	8
   592  0000BF                     _uart1TxBuffer:
   593                           	callstack 0
   594  0000BF                     	ds	8
   595  0000C7                     _smtWay:
   596                           	callstack 0
   597  0000C7                     	ds	4
   598  0000CB                     _smtDuty:
   599                           	callstack 0
   600  0000CB                     	ds	4
   601  0000CF                     _nout:
   602                           	callstack 0
   603  0000CF                     	ds	2
   604  0000D1                     _width:
   605                           	callstack 0
   606  0000D1                     	ds	2
   607  0000D3                     _prec:
   608                           	callstack 0
   609  0000D3                     	ds	2
   610  0000D5                     _tempCNT:
   611                           	callstack 0
   612  0000D5                     	ds	2
   613  0000D7                     _reverseTime:
   614                           	callstack 0
   615  0000D7                     	ds	2
   616  0000D9                     _oldSpeed:
   617                           	callstack 0
   618  0000D9                     	ds	2
   619  0000DB                     _currentSpeed:
   620                           	callstack 0
   621  0000DB                     	ds	2
   622  0000DD                     _setSpeed:
   623                           	callstack 0
   624  0000DD                     	ds	2
   625  0000DF                     _motPow:
   626                           	callstack 0
   627  0000DF                     	ds	2
   628  0000E1                     _oldDistRight:
   629                           	callstack 0
   630  0000E1                     	ds	2
   631  0000E3                     _distRightM:
   632                           	callstack 0
   633  0000E3                     	ds	2
   634  0000E5                     _distLeftM:
   635                           	callstack 0
   636  0000E5                     	ds	2
   637  0000E7                     _distFront:
   638                           	callstack 0
   639  0000E7                     	ds	2
   640                           
   641                           	psect	bssBANK1
   642  000100                     __pbssBANK1:
   643                           	callstack 0
   644  000100                     _dbuf:
   645                           	callstack 0
   646  000100                     	ds	32
   647                           
   648                           	psect	cstackBANK1
   649  000120                     __pcstackBANK1:
   650                           	callstack 0
   651  000120                     ?_vfprintf:
   652                           	callstack 0
   653  000120                     vfprintf@fp:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x0
   657  000120                     	ds	2
   658  000122                     vfprintf@fmt:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x2
   662  000122                     	ds	2
   663  000124                     vfprintf@ap:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x4
   667  000124                     	ds	2
   668  000126                     ?_printf:
   669                           	callstack 0
   670  000126                     printf@fmt:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x6
   674  000126                     	ds	4
   675  00012A                     printf@ap:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0xA
   679  00012A                     	ds	2
   680                           
   681                           	psect	cstackBANK0
   682  000060                     __pcstackBANK0:
   683                           	callstack 0
   684  000060                     ??_TMR5_Initialize:
   685  000060                     ??_PWM7_LoadDutyValue:
   686  000060                     ??_PWM8_LoadDutyValue:
   687  000060                     ??_PWM5_LoadDutyValue:
   688  000060                     ??_PWM6_LoadDutyValue:
   689  000060                     ??_ADCC_GetSingleConversion:
   690  000060                     ?___awdiv:
   691                           	callstack 0
   692  000060                     ?___aldiv:
   693                           	callstack 0
   694  000060                     ?___xxtofl:
   695                           	callstack 0
   696  000060                     ?___lodiv:
   697                           	callstack 0
   698  000060                     ?___lomod:
   699                           	callstack 0
   700  000060                     getCurve@deltaLeft:
   701                           	callstack 0
   702  000060                     ___awdiv@dividend:
   703                           	callstack 0
   704  000060                     fputc@c:
   705                           	callstack 0
   706  000060                     strlen@a:
   707                           	callstack 0
   708  000060                     ___aldiv@dividend:
   709                           	callstack 0
   710  000060                     ___xxtofl@val:
   711                           	callstack 0
   712  000060                     ___lodiv@dividend:
   713                           	callstack 0
   714  000060                     ___lomod@dividend:
   715                           	callstack 0
   716                           
   717                           ; 8 bytes @ 0x0
   718  000060                     	ds	2
   719  000062                     ADCC_GetSingleConversion@channel:
   720                           	callstack 0
   721  000062                     getCurve@deltaRight:
   722                           	callstack 0
   723  000062                     setMotor@motorPower:
   724                           	callstack 0
   725  000062                     ___awdiv@divisor:
   726                           	callstack 0
   727  000062                     fputc@fp:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x2
   731  000062                     	ds	2
   732  000064                     ??_setMotor:
   733  000064                     ??_fputc:
   734  000064                     ??___xxtofl:
   735  000064                     ___awdiv@counter:
   736                           	callstack 0
   737  000064                     ___aldiv@divisor:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x4
   741  000064                     	ds	1
   742  000065                     ___awdiv@sign:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x5
   746  000065                     	ds	1
   747  000066                     ___awdiv@quotient:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x6
   751  000066                     	ds	2
   752  000068                     ___aldiv@counter:
   753                           	callstack 0
   754  000068                     ___xxtofl@sign:
   755                           	callstack 0
   756  000068                     setSteering@steering:
   757                           	callstack 0
   758  000068                     ___lodiv@divisor:
   759                           	callstack 0
   760  000068                     ___lomod@divisor:
   761                           	callstack 0
   762                           
   763                           ; 8 bytes @ 0x8
   764  000068                     	ds	1
   765  000069                     ___aldiv@sign:
   766                           	callstack 0
   767  000069                     ___xxtofl@exp:
   768                           	callstack 0
   769  000069                     fputs@s:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x9
   773  000069                     	ds	1
   774  00006A                     setSteering@steeringMode:
   775                           	callstack 0
   776  00006A                     ___aldiv@quotient:
   777                           	callstack 0
   778  00006A                     ___xxtofl@arg:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0xA
   782  00006A                     	ds	1
   783  00006B                     ??_setSteering:
   784  00006B                     fputs@fp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0xB
   788  00006B                     	ds	2
   789  00006D                     fputs@c:
   790                           	callstack 0
   791  00006D                     setSteering@steeringF:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0xD
   795  00006D                     	ds	1
   796  00006E                     ?___flmul:
   797                           	callstack 0
   798  00006E                     actSpeed@speed:
   799                           	callstack 0
   800  00006E                     fputs@i:
   801                           	callstack 0
   802  00006E                     ___flge@ff1:
   803                           	callstack 0
   804  00006E                     ___flmul@b:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0xE
   808  00006E                     	ds	1
   809  00006F                     setSteering@steeringB:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xF
   813  00006F                     	ds	1
   814  000070                     ?_pad:
   815                           	callstack 0
   816  000070                     pad@fp:
   817                           	callstack 0
   818  000070                     ___lodiv@quotient:
   819                           	callstack 0
   820                           
   821                           ; 8 bytes @ 0x10
   822  000070                     	ds	1
   823  000071                     ??_calcSteering:
   824                           
   825                           ; 1 bytes @ 0x11
   826  000071                     	ds	1
   827  000072                     pad@buf:
   828                           	callstack 0
   829  000072                     ___flge@ff2:
   830                           	callstack 0
   831  000072                     ___flmul@a:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x12
   835  000072                     	ds	1
   836  000073                     calcSteering@delta:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x13
   840  000073                     	ds	1
   841  000074                     pad@p:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x14
   845  000074                     	ds	2
   846  000076                     ??___flmul:
   847  000076                     ??___flge:
   848  000076                     ??_pad:
   849                           
   850                           ; 1 bytes @ 0x16
   851  000076                     	ds	1
   852  000077                     pad@i:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x17
   856  000077                     	ds	1
   857  000078                     ___lodiv@counter:
   858                           	callstack 0
   859                           
   860                           ; 1 bytes @ 0x18
   861  000078                     	ds	1
   862  000079                     pad@w:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x19
   866  000079                     	ds	1
   867  00007A                     ___flmul@sign:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x1A
   871  00007A                     	ds	1
   872  00007B                     ?_utoa:
   873                           	callstack 0
   874  00007B                     ___flmul@aexp:
   875                           	callstack 0
   876  00007B                     utoa@fp:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x1B
   880  00007B                     	ds	1
   881  00007C                     ___flmul@grs:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x1C
   885  00007C                     	ds	1
   886  00007D                     utoa@d:
   887                           	callstack 0
   888                           
   889                           ; 8 bytes @ 0x1D
   890  00007D                     	ds	3
   891  000080                     ___flmul@bexp:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x20
   895  000080                     	ds	1
   896  000081                     ___flmul@prod:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x21
   900  000081                     	ds	4
   901  000085                     ??_utoa:
   902  000085                     ___flmul@temp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x25
   906  000085                     	ds	2
   907  000087                     ?___fladd:
   908                           	callstack 0
   909  000087                     ___fladd@b:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x27
   913  000087                     	ds	4
   914  00008B                     ___fladd@a:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x2B
   918  00008B                     	ds	2
   919  00008D                     utoa@p:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2D
   923  00008D                     	ds	2
   924  00008F                     ??___fladd:
   925  00008F                     utoa@w:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x2F
   929  00008F                     	ds	2
   930  000091                     utoa@n:
   931                           	callstack 0
   932                           
   933                           ; 8 bytes @ 0x31
   934  000091                     	ds	2
   935  000093                     ___fladd@signs:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x33
   939  000093                     	ds	1
   940  000094                     ___fladd@aexp:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x34
   944  000094                     	ds	1
   945  000095                     ___fladd@bexp:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x35
   949  000095                     	ds	1
   950  000096                     ___fladd@grs:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x36
   954  000096                     	ds	1
   955  000097                     ?___fltol:
   956                           	callstack 0
   957  000097                     ___fltol@f1:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x37
   961  000097                     	ds	2
   962  000099                     utoa@i:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x39
   966  000099                     	ds	2
   967  00009B                     ??___fltol:
   968  00009B                     ?_vfpfcnvrt:
   969                           	callstack 0
   970  00009B                     vfpfcnvrt@fp:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x3B
   974  00009B                     	ds	2
   975  00009D                     vfpfcnvrt@fmt:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x3D
   979  00009D                     	ds	2
   980  00009F                     ??_calcSpeed:
   981  00009F                     ??_calcMotorPow:
   982  00009F                     vfpfcnvrt@ap:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x3F
   986  00009F                     	ds	2
   987  0000A1                     ??_vfpfcnvrt:
   988  0000A1                     calcMotorPow@setSpeedDelta:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x41
   992  0000A1                     	ds	2
   993  0000A3                     calcSpeed@speed:
   994                           	callstack 0
   995  0000A3                     calcMotorPow@oldSpeedDelta:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x43
   999  0000A3                     	ds	2
  1000  0000A5                     calcMotorPow@addMPow:
  1001                           	callstack 0
  1002  0000A5                     vfpfcnvrt@llu:
  1003                           	callstack 0
  1004                           
  1005                           ; 8 bytes @ 0x45
  1006  0000A5                     	ds	8
  1007  0000AD                     vfprintf@cfmt:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x4D
  1011  0000AD                     	ds	2
  1012                           
  1013                           	psect	cstackCOMRAM
  1014  000001                     __pcstackCOMRAM:
  1015                           	callstack 0
  1016  000001                     CCP3_DefaultCallBack@capturedValue:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x0
  1020  000001                     	ds	2
  1021  000003                     ??_CCP3_CaptureISR:
  1022                           
  1023                           ; 1 bytes @ 0x2
  1024  000003                     	ds	2
  1025  000005                     CCP3_CaptureISR@module:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x4
  1029  000005                     	ds	2
  1030  000007                     CCP4_DefaultCallBack@capturedValue:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x6
  1034  000007                     	ds	2
  1035  000009                     ??_CCP4_CaptureISR:
  1036                           
  1037                           ; 1 bytes @ 0x8
  1038  000009                     	ds	2
  1039  00000B                     CCP4_CaptureISR@module:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0xA
  1043  00000B                     	ds	2
  1044  00000D                     ?_TMR5_ReadTimer:
  1045                           	callstack 0
  1046  00000D                     TMR5_WriteTimer@timerVal:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0xC
  1050  00000D                     	ds	2
  1051  00000F                     ??_TMR5_ReadTimer:
  1052  00000F                     
  1053                           ; 1 bytes @ 0xE
  1054  00000F                     	ds	2
  1055  000011                     TMR5_ReadTimer@readVal:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x10
  1059  000011                     	ds	2
  1060  000013                     TMR5_ReadTimer@readValHigh:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x12
  1064  000013                     	ds	1
  1065  000014                     TMR5_ReadTimer@readValLow:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x13
  1069  000014                     	ds	1
  1070  000015                     ??_TMR5_GATE_ISR:
  1071                           
  1072                           ; 1 bytes @ 0x14
  1073  000015                     	ds	2
  1074  000017                     ??_UART1_tx_vect_isr:
  1075  000017                     
  1076                           ; 1 bytes @ 0x16
  1077  000017                     	ds	3
  1078  00001A                     ??_UART1_rx_vect_isr:
  1079                           
  1080                           ; 1 bytes @ 0x19
  1081  00001A                     	ds	3
  1082  00001D                     ??_TMR4_ISR:
  1083                           
  1084                           ; 1 bytes @ 0x1C
  1085  00001D                     	ds	3
  1086  000020                     ??_TMR3_Initialize:
  1087  000020                     ??_getCurve:
  1088  000020                     ?_strlen:
  1089                           	callstack 0
  1090  000020                     ?_ADCC_GetSingleConversion:
  1091                           	callstack 0
  1092  000020                     ?_actSpeed:
  1093                           	callstack 0
  1094  000020                     UART1_Write@txData:
  1095                           	callstack 0
  1096  000020                     INTERRUPT_Initialize@state:
  1097                           	callstack 0
  1098  000020                     ___fltol@sign1:
  1099                           	callstack 0
  1100  000020                     ___lomod@counter:
  1101                           	callstack 0
  1102  000020                     UART1_SetFramingErrorHandler@interruptHandler:
  1103                           	callstack 0
  1104  000020                     UART1_SetOverrunErrorHandler@interruptHandler:
  1105                           	callstack 0
  1106  000020                     UART1_SetErrorHandler@interruptHandler:
  1107                           	callstack 0
  1108  000020                     UART1_SetRxInterruptHandler@InterruptHandler:
  1109                           	callstack 0
  1110  000020                     UART1_SetTxInterruptHandler@InterruptHandler:
  1111                           	callstack 0
  1112  000020                     CCP3_SetCallBack@customCallBack:
  1113                           	callstack 0
  1114  000020                     CCP4_SetCallBack@customCallBack:
  1115                           	callstack 0
  1116  000020                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1117                           	callstack 0
  1118  000020                     TMR4_SetInterruptHandler@InterruptHandler:
  1119                           	callstack 0
  1120  000020                     PWM7_LoadDutyValue@dutyValue:
  1121                           	callstack 0
  1122  000020                     PWM8_LoadDutyValue@dutyValue:
  1123                           	callstack 0
  1124  000020                     PWM5_LoadDutyValue@dutyValue:
  1125                           	callstack 0
  1126  000020                     PWM6_LoadDutyValue@dutyValue:
  1127                           	callstack 0
  1128  000020                     strlen@s:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x1F
  1132  000020                     	ds	1
  1133  000021                     putch@txData:
  1134                           	callstack 0
  1135  000021                     ___fltol@exp1:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x20
  1139  000021                     	ds	1
  1140  000022                     
  1141                           ; 1 bytes @ 0x21
  1142 ;;
  1143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1144 ;;
  1145 ;; *************** function _main *****************
  1146 ;; Defined at:
  1147 ;;		line 9 in file "main.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels required when called: 20
  1167 ;; This function calls:
  1168 ;;		_SYSTEM_Initialize
  1169 ;;		_TMR4_SetInterruptHandler
  1170 ;;		_loop
  1171 ;; This function is called by:
  1172 ;;		Startup code after reset
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text0
  1177  003DB2                     __ptext0:
  1178                           	callstack 0
  1179  003DB2                     _main:
  1180                           	callstack 11
  1181  003DB2                     
  1182                           ;main.c: 10:     SYSTEM_Initialize();
  1183  003DB2  ECBC  F01B         	call	_SYSTEM_Initialize	;wreg free
  1184  003DB6                     
  1185                           ;main.c: 11:     (INTCON0bits.GIEH = 1);
  1186  003DB6  8ED2               	bsf	210,7,c	;volatile
  1187  003DB8                     
  1188                           ;main.c: 12:     (INTCON0bits.GIEL = 1);
  1189  003DB8  8CD2               	bsf	210,6,c	;volatile
  1190                           
  1191                           ;main.c: 13:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1192  003DBA  0EFC               	movlw	low _TMR4_10msISR
  1193  003DBC  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1194  003DBE  0E3E               	movlw	high _TMR4_10msISR
  1195  003DC0  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1196  003DC2  EC6C  F01F         	call	_TMR4_SetInterruptHandler	;wreg free
  1197  003DC6                     l6694:
  1198                           
  1199                           ;main.c: 16:         loop();
  1200  003DC6  ECEE  F012         	call	_loop	;wreg free
  1201  003DCA  EFE3  F01E         	goto	l6694
  1202  003DCE  EF57  F000         	goto	start
  1203  003DD2                     __end_of_main:
  1204                           	callstack 0
  1205                           
  1206 ;; *************** function _loop *****************
  1207 ;; Defined at:
  1208 ;;		line 20 in file "main.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 19
  1229 ;; This function calls:
  1230 ;;		___flge
  1231 ;;		___xxtofl
  1232 ;;		_calcMotorPow
  1233 ;;		_calcSpeed
  1234 ;;		_calcSteering
  1235 ;;		_checkBatt
  1236 ;;		_getBatteryVoltage
  1237 ;;		_getCurve
  1238 ;;		_getReverse
  1239 ;;		_printf
  1240 ;;		_setSteering
  1241 ;;		_startAccell
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text1
  1248  0025DC                     __ptext1:
  1249                           	callstack 0
  1250  0025DC                     _loop:
  1251                           	callstack 11
  1252  0025DC                     l1224:
  1253  0025DC  A8CB               	btfss	203,4,c	;volatile
  1254  0025DE  EFF3  F012         	goto	u5881
  1255  0025E2  EFF5  F012         	goto	u5880
  1256  0025E6                     u5881:
  1257  0025E6  EFEE  F012         	goto	l1224
  1258  0025EA                     u5880:
  1259  0025EA                     l6644:
  1260  0025EA  5033               	movf	_cycle10ms^0,w,c	;volatile
  1261  0025EC  B4D8               	btfsc	status,2,c
  1262  0025EE  EFFB  F012         	goto	u5891
  1263  0025F2  EFFD  F012         	goto	u5890
  1264  0025F6                     u5891:
  1265  0025F6  EFF5  F012         	goto	l6644
  1266  0025FA                     u5890:
  1267  0025FA                     
  1268                           ;main.c: 25:         cycle10ms = 0;
  1269  0025FA  0E00               	movlw	0
  1270  0025FC  6E33               	movwf	_cycle10ms^0,c	;volatile
  1271  0025FE                     
  1272                           ;main.c: 26:         getBatteryVoltage();
  1273  0025FE  ECA2  F01E         	call	_getBatteryVoltage	;wreg free
  1274  002602                     
  1275                           ;main.c: 28:     }while(BatteryVolt < ((7.5) * 409.6));
  1276  002602  C024  F060         	movff	_BatteryVolt,___xxtofl@val
  1277  002606  C025  F061         	movff	_BatteryVolt+1,___xxtofl@val+1
  1278  00260A  0100               	movlb	0	; () banked
  1279  00260C  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1280  00260E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1281  002610  0E00               	movlw	0
  1282  002612  ECAB  F00F         	call	___xxtofl
  1283  002616  C060  F06E         	movff	?___xxtofl,___flge@ff1
  1284  00261A  C061  F06F         	movff	?___xxtofl+1,___flge@ff1+1
  1285  00261E  C062  F070         	movff	?___xxtofl+2,___flge@ff1+2
  1286  002622  C063  F071         	movff	?___xxtofl+3,___flge@ff1+3
  1287  002626  0E00               	movlw	0
  1288  002628  0100               	movlb	0	; () banked
  1289  00262A  6F72               	movwf	___flge@ff2& (0+255),b
  1290  00262C  0E00               	movlw	0
  1291  00262E  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  1292  002630  0E40               	movlw	64
  1293  002632  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  1294  002634  0E45               	movlw	69
  1295  002636  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  1296  002638  EC2A  F015         	call	___flge	;wreg free
  1297  00263C  0100               	movlb	0	; () banked
  1298  00263E  A0D8               	btfss	status,0,c
  1299  002640  EF24  F013         	goto	u5901
  1300  002644  EF26  F013         	goto	u5900
  1301  002648                     u5901:
  1302  002648  EFF5  F012         	goto	l6644
  1303  00264C                     u5900:
  1304  00264C                     
  1305                           ; BSR set to: 0
  1306                           ;main.c: 30:     startAccell();
  1307  00264C  ECB6  F01C         	call	_startAccell	;wreg free
  1308  002650                     
  1309                           ;main.c: 32:     oldDistLeft = distLeft;
  1310  002650  C02E  F028         	movff	_distLeft,_oldDistLeft	;volatile
  1311  002654  C02F  F029         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1312  002658                     
  1313                           ;main.c: 33:     oldDistRight = distRight;
  1314  002658  C02C  F0E1         	movff	_distRight,_oldDistRight	;volatile
  1315  00265C  C02D  F0E2         	movff	_distRight+1,_oldDistRight+1	;volatile
  1316  002660                     
  1317                           ;main.c: 34:     cycle10ms = 0;
  1318  002660  0E00               	movlw	0
  1319  002662  6E33               	movwf	_cycle10ms^0,c	;volatile
  1320  002664                     l6660:
  1321  002664  5033               	movf	_cycle10ms^0,w,c	;volatile
  1322  002666  B4D8               	btfsc	status,2,c
  1323  002668  EF38  F013         	goto	u5911
  1324  00266C  EF3A  F013         	goto	u5910
  1325  002670                     u5911:
  1326  002670  EF32  F013         	goto	l6660
  1327  002674                     u5910:
  1328  002674                     
  1329                           ;main.c: 37:         cycle10ms = 0;
  1330  002674  0E00               	movlw	0
  1331  002676  6E33               	movwf	_cycle10ms^0,c	;volatile
  1332  002678                     
  1333                           ;main.c: 39:         if(PORTBbits.RB5){
  1334  002678  AACB               	btfss	203,5,c	;volatile
  1335  00267A  EF41  F013         	goto	u5921
  1336  00267E  EF43  F013         	goto	u5920
  1337  002682                     u5921:
  1338  002682  EF52  F013         	goto	l6670
  1339  002686                     u5920:
  1340  002686                     
  1341                           ;main.c: 40:             setSpeed = 0;
  1342  002686  0E00               	movlw	0
  1343  002688  0100               	movlb	0	; () banked
  1344  00268A  6FDE               	movwf	(_setSpeed+1)& (0+255),b
  1345  00268C  0E00               	movlw	0
  1346  00268E  6FDD               	movwf	_setSpeed& (0+255),b
  1347  002690                     
  1348                           ; BSR set to: 0
  1349                           ;main.c: 41:             setSteering(0,Front);
  1350  002690  0E00               	movlw	0
  1351  002692  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1352  002694  0E00               	movlw	0
  1353  002696  6F68               	movwf	setSteering@steering& (0+255),b
  1354  002698  0E03               	movlw	3
  1355  00269A  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1356  00269C  EC5F  F011         	call	_setSteering	;wreg free
  1357                           
  1358                           ;main.c: 42:             break;
  1359  0026A0  EF86  F013         	goto	l1241
  1360  0026A4                     l6670:
  1361                           
  1362                           ;main.c: 45:         ++tempCNT;
  1363  0026A4  0100               	movlb	0	; () banked
  1364  0026A6  4BD5               	infsnz	_tempCNT& (0+255),f,b
  1365  0026A8  2BD6               	incf	(_tempCNT+1)& (0+255),f,b
  1366  0026AA                     
  1367                           ; BSR set to: 0
  1368                           ;main.c: 46:         if(tempCNT > 1000){
  1369  0026AA  BFD6               	btfsc	(_tempCNT+1)& (0+255),7,b
  1370  0026AC  EF61  F013         	goto	u5931
  1371  0026B0  0EE9               	movlw	233
  1372  0026B2  5DD5               	subwf	_tempCNT& (0+255),w,b
  1373  0026B4  0E03               	movlw	3
  1374  0026B6  59D6               	subwfb	(_tempCNT+1)& (0+255),w,b
  1375  0026B8  A0D8               	btfss	status,0,c
  1376  0026BA  EF61  F013         	goto	u5931
  1377  0026BE  EF63  F013         	goto	u5930
  1378  0026C2                     u5931:
  1379  0026C2  EF6E  F013         	goto	l6678
  1380  0026C6                     u5930:
  1381  0026C6                     
  1382                           ; BSR set to: 0
  1383                           ;main.c: 47:             tempCNT = 0;
  1384  0026C6  0E00               	movlw	0
  1385  0026C8  6FD6               	movwf	(_tempCNT+1)& (0+255),b
  1386  0026CA  0E00               	movlw	0
  1387  0026CC  6FD5               	movwf	_tempCNT& (0+255),b
  1388  0026CE                     
  1389                           ; BSR set to: 0
  1390                           ;main.c: 48:             printf("tempCNT Overflow");
  1391  0026CE  0E01               	movlw	low STR_1
  1392  0026D0  0101               	movlb	1	; () banked
  1393  0026D2  6F26               	movwf	printf@fmt& (0+255),b
  1394  0026D4  0E10               	movlw	high STR_1
  1395  0026D6  6F27               	movwf	(printf@fmt+1)& (0+255),b
  1396  0026D8  EC7A  F01E         	call	_printf	;wreg free
  1397  0026DC                     l6678:
  1398                           
  1399                           ;main.c: 51:         if(checkBatt()){
  1400  0026DC  ECD1  F019         	call	_checkBatt	;wreg free
  1401  0026E0  0900               	iorlw	0
  1402  0026E2  B4D8               	btfsc	status,2,c
  1403  0026E4  EF76  F013         	goto	u5941
  1404  0026E8  EF78  F013         	goto	u5940
  1405  0026EC                     u5941:
  1406  0026EC  EF7A  F013         	goto	l6682
  1407  0026F0                     u5940:
  1408  0026F0  EF86  F013         	goto	l1241
  1409  0026F4                     l6682:
  1410                           
  1411                           ;main.c: 55:         getCurve();
  1412  0026F4  EC87  F010         	call	_getCurve	;wreg free
  1413                           
  1414                           ;main.c: 56:         getReverse();
  1415  0026F8  EC8E  F018         	call	_getReverse	;wreg free
  1416                           
  1417                           ;main.c: 58:         calcSteering();
  1418  0026FC  EC34  F012         	call	_calcSteering	;wreg free
  1419  002700                     
  1420                           ;main.c: 59:         calcSpeed();
  1421  002700  EC98  F00C         	call	_calcSpeed	;wreg free
  1422  002704                     
  1423                           ;main.c: 60:         calcMotorPow();
  1424  002704  EC87  F013         	call	_calcMotorPow	;wreg free
  1425  002708  EF32  F013         	goto	l6660
  1426  00270C                     l1241:
  1427  00270C  0012               	return		;funcret
  1428  00270E                     __end_of_loop:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _startAccell *****************
  1432 ;; Defined at:
  1433 ;;		line 99 in file "main.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 10
  1454 ;; This function calls:
  1455 ;;		_setMotor
  1456 ;;		_setSteering
  1457 ;; This function is called by:
  1458 ;;		_loop
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text2
  1463  00396C                     __ptext2:
  1464                           	callstack 0
  1465  00396C                     _startAccell:
  1466                           	callstack 19
  1467  00396C                     
  1468                           ;main.c: 100:     actMotorPow = (250);
  1469  00396C  0E00               	movlw	0
  1470  00396E  6E27               	movwf	(_actMotorPow+1)^0,c
  1471  003970  0EFA               	movlw	250
  1472  003972  6E26               	movwf	_actMotorPow^0,c
  1473  003974                     
  1474                           ;main.c: 101:     setMotor(actMotorPow);
  1475  003974  C026  F062         	movff	_actMotorPow,setMotor@motorPower
  1476  003978  C027  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  1477  00397C  EC26  F016         	call	_setMotor	;wreg free
  1478  003980                     
  1479                           ;main.c: 102:     setSteering(0,Front);
  1480  003980  0E00               	movlw	0
  1481  003982  0100               	movlb	0	; () banked
  1482  003984  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1483  003986  0E00               	movlw	0
  1484  003988  6F68               	movwf	setSteering@steering& (0+255),b
  1485  00398A  0E03               	movlw	3
  1486  00398C  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1487  00398E  EC5F  F011         	call	_setSteering	;wreg free
  1488                           
  1489                           ;main.c: 103:     cycle10ms = 0;
  1490  003992  0E00               	movlw	0
  1491  003994  6E33               	movwf	_cycle10ms^0,c	;volatile
  1492  003996                     l6404:
  1493  003996  0E18               	movlw	24
  1494  003998  6433               	cpfsgt	_cycle10ms^0,c	;volatile
  1495  00399A  EFD1  F01C         	goto	u5571
  1496  00399E  EFD3  F01C         	goto	u5570
  1497  0039A2                     u5571:
  1498  0039A2  EFCB  F01C         	goto	l6404
  1499  0039A6                     u5570:
  1500  0039A6  0012               	return		;funcret
  1501  0039A8                     __end_of_startAccell:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _getReverse *****************
  1505 ;; Defined at:
  1506 ;;		line 174 in file "main.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 8
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_loop
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text3
  1535  00311C                     __ptext3:
  1536                           	callstack 0
  1537  00311C                     _getReverse:
  1538                           	callstack 21
  1539  00311C                     
  1540                           ;main.c: 175:     if(distFront < (15)){
  1541  00311C  0100               	movlb	0	; () banked
  1542  00311E  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1543  003120  E107               	bnz	u3691
  1544  003122  0E0F               	movlw	15
  1545  003124  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  1546  003126  B0D8               	btfsc	status,0,c
  1547  003128  EF98  F018         	goto	u3691
  1548  00312C  EF9A  F018         	goto	u3690
  1549  003130                     u3691:
  1550  003130  EF9B  F018         	goto	l5104
  1551  003134                     u3690:
  1552  003134                     
  1553                           ; BSR set to: 0
  1554                           ;main.c: 176:         ++reverseCount;
  1555  003134  2A31               	incf	_reverseCount^0,f,c
  1556  003136                     l5104:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;main.c: 179:     if(reverseCount > (50)){
  1560  003136  0E32               	movlw	50
  1561  003138  6431               	cpfsgt	_reverseCount^0,c
  1562  00313A  EFA1  F018         	goto	u3701
  1563  00313E  EFA3  F018         	goto	u3700
  1564  003142                     u3701:
  1565  003142  EFE5  F018         	goto	l1299
  1566  003146                     u3700:
  1567  003146                     
  1568                           ; BSR set to: 0
  1569                           ;main.c: 180:         ++reverseTime;
  1570  003146  4BD7               	infsnz	_reverseTime& (0+255),f,b
  1571  003148  2BD8               	incf	(_reverseTime+1)& (0+255),f,b
  1572  00314A                     
  1573                           ; BSR set to: 0
  1574                           ;main.c: 182:         if(driveMode != ReverseRight && driveMode != ReverseLeft){
  1575  00314A  0E02               	movlw	2
  1576  00314C  1835               	xorwf	_driveMode^0,w,c
  1577  00314E  B4D8               	btfsc	status,2,c
  1578  003150  EFAC  F018         	goto	u3711
  1579  003154  EFAE  F018         	goto	u3710
  1580  003158                     u3711:
  1581  003158  EFC8  F018         	goto	l5118
  1582  00315C                     u3710:
  1583  00315C                     
  1584                           ; BSR set to: 0
  1585  00315C  0E03               	movlw	3
  1586  00315E  1835               	xorwf	_driveMode^0,w,c
  1587  003160  B4D8               	btfsc	status,2,c
  1588  003162  EFB5  F018         	goto	u3721
  1589  003166  EFB7  F018         	goto	u3720
  1590  00316A                     u3721:
  1591  00316A  EFC8  F018         	goto	l5118
  1592  00316E                     u3720:
  1593  00316E                     
  1594                           ; BSR set to: 0
  1595                           ;main.c: 183:             if(distLeft > distRight){
  1596  00316E  502E               	movf	_distLeft^0,w,c	;volatile
  1597  003170  5C2C               	subwf	_distRight^0,w,c	;volatile
  1598  003172  502F               	movf	(_distLeft+1)^0,w,c	;volatile
  1599  003174  582D               	subwfb	(_distRight+1)^0,w,c	;volatile
  1600  003176  B0D8               	btfsc	status,0,c
  1601  003178  EFC0  F018         	goto	u3731
  1602  00317C  EFC2  F018         	goto	u3730
  1603  003180                     u3731:
  1604  003180  EFC6  F018         	goto	l5116
  1605  003184                     u3730:
  1606  003184                     
  1607                           ; BSR set to: 0
  1608                           ;main.c: 185:                 driveMode = ReverseRight;
  1609  003184  0E02               	movlw	2
  1610  003186  6E35               	movwf	_driveMode^0,c
  1611                           
  1612                           ;main.c: 186:             }else{
  1613  003188  EFC8  F018         	goto	l5118
  1614  00318C                     l5116:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 188:                 driveMode = ReverseLeft;
  1618  00318C  0E03               	movlw	3
  1619  00318E  6E35               	movwf	_driveMode^0,c
  1620  003190                     l5118:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;main.c: 192:         if(distFront > (30) || reverseTime > (200)){
  1624  003190  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1625  003192  E107               	bnz	u3741
  1626  003194  0E1F               	movlw	31
  1627  003196  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  1628  003198  B0D8               	btfsc	status,0,c
  1629  00319A  EFD1  F018         	goto	u3741
  1630  00319E  EFD3  F018         	goto	u3740
  1631  0031A2                     u3741:
  1632  0031A2  EFE1  F018         	goto	l5122
  1633  0031A6                     u3740:
  1634  0031A6                     
  1635                           ; BSR set to: 0
  1636  0031A6  BFD8               	btfsc	(_reverseTime+1)& (0+255),7,b
  1637  0031A8  EFDF  F018         	goto	u3751
  1638  0031AC  51D8               	movf	(_reverseTime+1)& (0+255),w,b
  1639  0031AE  E109               	bnz	u3750
  1640  0031B0  0EC9               	movlw	201
  1641  0031B2  5DD7               	subwf	_reverseTime& (0+255),w,b
  1642  0031B4  A0D8               	btfss	status,0,c
  1643  0031B6  EFDF  F018         	goto	u3751
  1644  0031BA  EFE1  F018         	goto	u3750
  1645  0031BE                     u3751:
  1646  0031BE  EFE5  F018         	goto	l1299
  1647  0031C2                     u3750:
  1648  0031C2                     l5122:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;main.c: 194:              driveMode = Straight;
  1652  0031C2  0E00               	movlw	0
  1653  0031C4  6E35               	movwf	_driveMode^0,c
  1654                           
  1655                           ;main.c: 195:              reverseCount = 0;
  1656  0031C6  0E00               	movlw	0
  1657  0031C8  6E31               	movwf	_reverseCount^0,c
  1658  0031CA                     l1299:
  1659                           
  1660                           ; BSR set to: 0
  1661  0031CA  0012               	return		;funcret
  1662  0031CC                     __end_of_getReverse:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _getCurve *****************
  1666 ;; Defined at:
  1667 ;;		line 107 in file "main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  deltaRight      2    2[BANK0 ] short 
  1672 ;;  deltaLeft       2    0[BANK0 ] short 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:        6 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 8
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_loop
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text4
  1697  00210E                     __ptext4:
  1698                           	callstack 0
  1699  00210E                     _getCurve:
  1700                           	callstack 21
  1701  00210E                     
  1702                           ;main.c: 108:     int16_t deltaLeft;;main.c: 109:     int16_t deltaRight;;main.c: 111:  
      +                             switch (curveMode){
  1703  00210E  EF39  F011         	goto	l6476
  1704  002112                     l6430:
  1705                           
  1706                           ;main.c: 113:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1707  002112  5028               	movf	_oldDistLeft^0,w,c
  1708  002114  5C2E               	subwf	_distLeft^0,w,c	;volatile
  1709  002116  0100               	movlb	0	; () banked
  1710  002118  6F60               	movwf	getCurve@deltaLeft& (0+255),b
  1711  00211A  5029               	movf	(_oldDistLeft+1)^0,w,c
  1712  00211C  582F               	subwfb	(_distLeft+1)^0,w,c	;volatile
  1713  00211E  6F61               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1714                           
  1715                           ;main.c: 114:             deltaRight = (int16_t)(distRight - oldDistRight);
  1716  002120  51E1               	movf	_oldDistRight& (0+255),w,b
  1717  002122  5C2C               	subwf	_distRight^0,w,c	;volatile
  1718  002124  6F62               	movwf	getCurve@deltaRight& (0+255),b
  1719  002126  51E2               	movf	(_oldDistRight+1)& (0+255),w,b
  1720  002128  582D               	subwfb	(_distRight+1)^0,w,c	;volatile
  1721  00212A  6F63               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1722                           
  1723                           ;main.c: 117:             if(deltaLeft > (40) && deltaLeft < (300) && oldDistLeft < (150
      +                          )){
  1724  00212C  BF61               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1725  00212E  EFA2  F010         	goto	u5601
  1726  002132  5161               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1727  002134  E109               	bnz	u5600
  1728  002136  0E29               	movlw	41
  1729  002138  5D60               	subwf	getCurve@deltaLeft& (0+255),w,b
  1730  00213A  A0D8               	btfss	status,0,c
  1731  00213C  EFA2  F010         	goto	u5601
  1732  002140  EFA4  F010         	goto	u5600
  1733  002144                     u5601:
  1734  002144  EFC5  F010         	goto	l6438
  1735  002148                     u5600:
  1736  002148                     
  1737                           ; BSR set to: 0
  1738  002148  BF61               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1739  00214A  EFB2  F010         	goto	u5610
  1740  00214E  0E2C               	movlw	44
  1741  002150  5D60               	subwf	getCurve@deltaLeft& (0+255),w,b
  1742  002152  0E01               	movlw	1
  1743  002154  5961               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  1744  002156  B0D8               	btfsc	status,0,c
  1745  002158  EFB0  F010         	goto	u5611
  1746  00215C  EFB2  F010         	goto	u5610
  1747  002160                     u5611:
  1748  002160  EFC5  F010         	goto	l6438
  1749  002164                     u5610:
  1750  002164                     
  1751                           ; BSR set to: 0
  1752  002164  5029               	movf	(_oldDistLeft+1)^0,w,c
  1753  002166  E107               	bnz	u5621
  1754  002168  0E96               	movlw	150
  1755  00216A  5C28               	subwf	_oldDistLeft^0,w,c
  1756  00216C  B0D8               	btfsc	status,0,c
  1757  00216E  EFBB  F010         	goto	u5621
  1758  002172  EFBD  F010         	goto	u5620
  1759  002176                     u5621:
  1760  002176  EFC5  F010         	goto	l6438
  1761  00217A                     u5620:
  1762  00217A                     
  1763                           ; BSR set to: 0
  1764                           ;main.c: 118:                 delay = 0;
  1765  00217A  0E00               	movlw	0
  1766  00217C  6E32               	movwf	_delay^0,c
  1767                           
  1768                           ;main.c: 119:                 curveMode = BeforeCurve;
  1769  00217E  0E01               	movlw	1
  1770  002180  6E34               	movwf	_curveMode^0,c
  1771                           
  1772                           ;main.c: 120:                 driveMode = CurveLeft;
  1773  002182  0E04               	movlw	4
  1774  002184  6E35               	movwf	_driveMode^0,c
  1775                           
  1776                           ;main.c: 123:             } else if(deltaRight > (40) && deltaRight < (300) && oldDistRi
      +                          ght < (150)){
  1777  002186  EF56  F011         	goto	l1272
  1778  00218A                     l6438:
  1779                           
  1780                           ; BSR set to: 0
  1781  00218A  BF63               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1782  00218C  EFD1  F010         	goto	u5631
  1783  002190  5163               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1784  002192  E109               	bnz	u5630
  1785  002194  0E29               	movlw	41
  1786  002196  5D62               	subwf	getCurve@deltaRight& (0+255),w,b
  1787  002198  A0D8               	btfss	status,0,c
  1788  00219A  EFD1  F010         	goto	u5631
  1789  00219E  EFD3  F010         	goto	u5630
  1790  0021A2                     u5631:
  1791  0021A2  EF56  F011         	goto	l1272
  1792  0021A6                     u5630:
  1793  0021A6                     
  1794                           ; BSR set to: 0
  1795  0021A6  BF63               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1796  0021A8  EFE1  F010         	goto	u5640
  1797  0021AC  0E2C               	movlw	44
  1798  0021AE  5D62               	subwf	getCurve@deltaRight& (0+255),w,b
  1799  0021B0  0E01               	movlw	1
  1800  0021B2  5963               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  1801  0021B4  B0D8               	btfsc	status,0,c
  1802  0021B6  EFDF  F010         	goto	u5641
  1803  0021BA  EFE1  F010         	goto	u5640
  1804  0021BE                     u5641:
  1805  0021BE  EF56  F011         	goto	l1272
  1806  0021C2                     u5640:
  1807  0021C2                     
  1808                           ; BSR set to: 0
  1809  0021C2  51E2               	movf	(_oldDistRight+1)& (0+255),w,b
  1810  0021C4  E107               	bnz	u5651
  1811  0021C6  0E96               	movlw	150
  1812  0021C8  5DE1               	subwf	_oldDistRight& (0+255),w,b
  1813  0021CA  B0D8               	btfsc	status,0,c
  1814  0021CC  EFEA  F010         	goto	u5651
  1815  0021D0  EFEC  F010         	goto	u5650
  1816  0021D4                     u5651:
  1817  0021D4  EF56  F011         	goto	l1272
  1818  0021D8                     u5650:
  1819  0021D8                     
  1820                           ; BSR set to: 0
  1821                           ;main.c: 124:                 delay = 0;
  1822  0021D8  0E00               	movlw	0
  1823  0021DA  6E32               	movwf	_delay^0,c
  1824                           
  1825                           ;main.c: 125:                 curveMode = BeforeCurve;
  1826  0021DC  0E01               	movlw	1
  1827  0021DE  6E34               	movwf	_curveMode^0,c
  1828                           
  1829                           ;main.c: 126:                 driveMode = CurveRight;
  1830  0021E0  0E05               	movlw	5
  1831  0021E2  6E35               	movwf	_driveMode^0,c
  1832  0021E4  EF56  F011         	goto	l1272
  1833  0021E8                     l6446:
  1834                           
  1835                           ;main.c: 134:             if(delay > (20)){
  1836  0021E8  0E14               	movlw	20
  1837  0021EA  6432               	cpfsgt	_delay^0,c
  1838  0021EC  EFFA  F010         	goto	u5661
  1839  0021F0  EFFC  F010         	goto	u5660
  1840  0021F4                     u5661:
  1841  0021F4  EF02  F011         	goto	l6450
  1842  0021F8                     u5660:
  1843  0021F8                     
  1844                           ;main.c: 135:                 delay = 0;
  1845  0021F8  0E00               	movlw	0
  1846  0021FA  6E32               	movwf	_delay^0,c
  1847                           
  1848                           ;main.c: 136:                 curveMode = InCurve;
  1849  0021FC  0E02               	movlw	2
  1850  0021FE  6E34               	movwf	_curveMode^0,c
  1851                           
  1852                           ;main.c: 138:             } else {
  1853  002200  EF56  F011         	goto	l1272
  1854  002204                     l6450:
  1855                           
  1856                           ;main.c: 139:                 delay++;
  1857  002204  2A32               	incf	_delay^0,f,c
  1858  002206  EF56  F011         	goto	l1272
  1859  00220A                     l6452:
  1860                           
  1861                           ;main.c: 143:             if(delay > (30)){
  1862  00220A  0E1E               	movlw	30
  1863  00220C  6432               	cpfsgt	_delay^0,c
  1864  00220E  EF0B  F011         	goto	u5671
  1865  002212  EF0D  F011         	goto	u5670
  1866  002216                     u5671:
  1867  002216  EF02  F011         	goto	l6450
  1868  00221A                     u5670:
  1869  00221A                     
  1870                           ;main.c: 150:                 if(distLeft < (40) || distRight < (40)){
  1871  00221A  502F               	movf	(_distLeft+1)^0,w,c	;volatile
  1872  00221C  E109               	bnz	u5680
  1873  00221E  0E28               	movlw	40
  1874  002220  5C2E               	subwf	_distLeft^0,w,c	;volatile
  1875  002222  A0D8               	btfss	status,0,c
  1876  002224  EF16  F011         	goto	u5681
  1877  002228  EF18  F011         	goto	u5680
  1878  00222C                     u5681:
  1879  00222C  EF23  F011         	goto	l6464
  1880  002230                     u5680:
  1881  002230  502D               	movf	(_distRight+1)^0,w,c	;volatile
  1882  002232  E107               	bnz	u5691
  1883  002234  0E28               	movlw	40
  1884  002236  5C2C               	subwf	_distRight^0,w,c	;volatile
  1885  002238  B0D8               	btfsc	status,0,c
  1886  00223A  EF21  F011         	goto	u5691
  1887  00223E  EF23  F011         	goto	u5690
  1888  002242                     u5691:
  1889  002242  EF56  F011         	goto	l1272
  1890  002246                     u5690:
  1891  002246                     l6464:
  1892                           
  1893                           ;main.c: 151:                     delay = 0;
  1894  002246  0E00               	movlw	0
  1895  002248  6E32               	movwf	_delay^0,c
  1896                           
  1897                           ;main.c: 152:                     curveMode = AfterCurve;
  1898  00224A  0E03               	movlw	3
  1899  00224C  6E34               	movwf	_curveMode^0,c
  1900                           
  1901                           ;main.c: 153:                     driveMode = Straight;
  1902  00224E  0E00               	movlw	0
  1903  002250  6E35               	movwf	_driveMode^0,c
  1904  002252  EF56  F011         	goto	l1272
  1905  002256                     l6468:
  1906                           
  1907                           ;main.c: 161:             if(delay > (5)){
  1908  002256  0E05               	movlw	5
  1909  002258  6432               	cpfsgt	_delay^0,c
  1910  00225A  EF31  F011         	goto	u5701
  1911  00225E  EF33  F011         	goto	u5700
  1912  002262                     u5701:
  1913  002262  EF02  F011         	goto	l6450
  1914  002266                     u5700:
  1915  002266                     
  1916                           ;main.c: 162:                 delay = 0;
  1917  002266  0E00               	movlw	0
  1918  002268  6E32               	movwf	_delay^0,c
  1919                           
  1920                           ;main.c: 163:                 curveMode = OutCurve;
  1921  00226A  0E00               	movlw	0
  1922  00226C  6E34               	movwf	_curveMode^0,c
  1923                           
  1924                           ;main.c: 165:             } else {
  1925  00226E  EF56  F011         	goto	l1272
  1926  002272                     l6476:
  1927  002272  5034               	movf	_curveMode^0,w,c
  1928  002274  6E20               	movwf	??_getCurve^0,c
  1929  002276  6A21               	clrf	(??_getCurve+1)^0,c
  1930                           
  1931                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 1, Range of values is 0 to 0
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte            4     3 (average)
  1937                           ;	Chosen strategy is simple_byte
  1938  002278  5021               	movf	(??_getCurve+1)^0,w,c
  1939  00227A  0A00               	xorlw	0	; case 0
  1940  00227C  B4D8               	btfsc	status,2,c
  1941  00227E  EF43  F011         	goto	l6826
  1942  002282  EF56  F011         	goto	l1272
  1943  002286                     l6826:
  1944                           
  1945                           ; Switch size 1, requested type "simple"
  1946                           ; Number of cases is 4, Range of values is 0 to 3
  1947                           ; switch strategies available:
  1948                           ; Name         Instructions Cycles
  1949                           ; simple_byte           13     7 (average)
  1950                           ;	Chosen strategy is simple_byte
  1951  002286  5020               	movf	??_getCurve^0,w,c
  1952  002288  0A00               	xorlw	0	; case 0
  1953  00228A  B4D8               	btfsc	status,2,c
  1954  00228C  EF89  F010         	goto	l6430
  1955  002290  0A01               	xorlw	1	; case 1
  1956  002292  B4D8               	btfsc	status,2,c
  1957  002294  EFF4  F010         	goto	l6446
  1958  002298  0A03               	xorlw	3	; case 2
  1959  00229A  B4D8               	btfsc	status,2,c
  1960  00229C  EF05  F011         	goto	l6452
  1961  0022A0  0A01               	xorlw	1	; case 3
  1962  0022A2  B4D8               	btfsc	status,2,c
  1963  0022A4  EF2B  F011         	goto	l6468
  1964  0022A8  EF56  F011         	goto	l1272
  1965  0022AC                     l1272:
  1966                           
  1967                           ;main.c: 170:     oldDistLeft = distLeft;
  1968  0022AC  C02E  F028         	movff	_distLeft,_oldDistLeft	;volatile
  1969  0022B0  C02F  F029         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1970                           
  1971                           ;main.c: 171:     oldDistRight = distRight;
  1972  0022B4  C02C  F0E1         	movff	_distRight,_oldDistRight	;volatile
  1973  0022B8  C02D  F0E2         	movff	_distRight+1,_oldDistRight+1	;volatile
  1974  0022BC  0012               	return		;funcret
  1975  0022BE                     __end_of_getCurve:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _checkBatt *****************
  1979 ;; Defined at:
  1980 ;;		line 85 in file "main.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      _Bool 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 18
  2001 ;; This function calls:
  2002 ;;		___flge
  2003 ;;		___xxtofl
  2004 ;;		_getBatteryVoltage
  2005 ;;		_setSteering
  2006 ;; This function is called by:
  2007 ;;		_loop
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text5
  2012  0033A2                     __ptext5:
  2013                           	callstack 0
  2014  0033A2                     _checkBatt:
  2015                           	callstack 11
  2016  0033A2                     
  2017                           ;main.c: 86:     ++battCheckCount;
  2018  0033A2  2A30               	incf	_battCheckCount^0,f,c
  2019  0033A4                     
  2020                           ;main.c: 87:     if(battCheckCount > (100)){
  2021  0033A4  0E64               	movlw	100
  2022  0033A6  6430               	cpfsgt	_battCheckCount^0,c
  2023  0033A8  EFD8  F019         	goto	u5581
  2024  0033AC  EFDA  F019         	goto	u5580
  2025  0033B0                     u5581:
  2026  0033B0  EF12  F01A         	goto	l6424
  2027  0033B4                     u5580:
  2028  0033B4                     
  2029                           ;main.c: 88:         battCheckCount = 0;
  2030  0033B4  0E00               	movlw	0
  2031  0033B6  6E30               	movwf	_battCheckCount^0,c
  2032  0033B8                     
  2033                           ;main.c: 89:         getBatteryVoltage();
  2034  0033B8  ECA2  F01E         	call	_getBatteryVoltage	;wreg free
  2035  0033BC                     
  2036                           ;main.c: 90:         if(BatteryVolt < (7.5) * 409.6){
  2037  0033BC  C024  F060         	movff	_BatteryVolt,___xxtofl@val
  2038  0033C0  C025  F061         	movff	_BatteryVolt+1,___xxtofl@val+1
  2039  0033C4  0100               	movlb	0	; () banked
  2040  0033C6  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  2041  0033C8  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  2042  0033CA  0E00               	movlw	0
  2043  0033CC  ECAB  F00F         	call	___xxtofl
  2044  0033D0  C060  F06E         	movff	?___xxtofl,___flge@ff1
  2045  0033D4  C061  F06F         	movff	?___xxtofl+1,___flge@ff1+1
  2046  0033D8  C062  F070         	movff	?___xxtofl+2,___flge@ff1+2
  2047  0033DC  C063  F071         	movff	?___xxtofl+3,___flge@ff1+3
  2048  0033E0  0E00               	movlw	0
  2049  0033E2  0100               	movlb	0	; () banked
  2050  0033E4  6F72               	movwf	___flge@ff2& (0+255),b
  2051  0033E6  0E00               	movlw	0
  2052  0033E8  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  2053  0033EA  0E40               	movlw	64
  2054  0033EC  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  2055  0033EE  0E45               	movlw	69
  2056  0033F0  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  2057  0033F2  EC2A  F015         	call	___flge	;wreg free
  2058  0033F6  0100               	movlb	0	; () banked
  2059  0033F8  B0D8               	btfsc	status,0,c
  2060  0033FA  EF01  F01A         	goto	u5591
  2061  0033FE  EF03  F01A         	goto	u5590
  2062  003402                     u5591:
  2063  003402  EF12  F01A         	goto	l6424
  2064  003406                     u5590:
  2065  003406                     
  2066                           ; BSR set to: 0
  2067                           ;main.c: 91:             setSpeed = 0;
  2068  003406  0E00               	movlw	0
  2069  003408  6FDE               	movwf	(_setSpeed+1)& (0+255),b
  2070  00340A  0E00               	movlw	0
  2071  00340C  6FDD               	movwf	_setSpeed& (0+255),b
  2072  00340E                     
  2073                           ; BSR set to: 0
  2074                           ;main.c: 92:             setSteering(0,Front);
  2075  00340E  0E00               	movlw	0
  2076  003410  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  2077  003412  0E00               	movlw	0
  2078  003414  6F68               	movwf	setSteering@steering& (0+255),b
  2079  003416  0E03               	movlw	3
  2080  003418  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  2081  00341A  EC5F  F011         	call	_setSteering	;wreg free
  2082  00341E                     
  2083                           ;main.c: 93:             return 1;
  2084  00341E  0E01               	movlw	1
  2085  003420  EF13  F01A         	goto	l1258
  2086  003424                     l6424:
  2087                           
  2088                           ;main.c: 96:     return 0;
  2089  003424  0E00               	movlw	0
  2090  003426                     l1258:
  2091  003426  0012               	return		;funcret
  2092  003428                     __end_of_checkBatt:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _getBatteryVoltage *****************
  2096 ;; Defined at:
  2097 ;;		line 80 in file "main.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 17
  2118 ;; This function calls:
  2119 ;;		_ADCC_GetSingleConversion
  2120 ;;		_printf
  2121 ;; This function is called by:
  2122 ;;		_loop
  2123 ;;		_checkBatt
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text6
  2128  003D44                     __ptext6:
  2129                           	callstack 0
  2130  003D44                     _getBatteryVoltage:
  2131                           	callstack 12
  2132  003D44                     
  2133                           ;main.c: 81:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2134  003D44  0E22               	movlw	34
  2135  003D46  EC97  F01C         	call	_ADCC_GetSingleConversion
  2136  003D4A  C020  F024         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2137  003D4E  C021  F025         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2138  003D52                     
  2139                           ;main.c: 82:     printf("BVolt: %u\n", (uint16_t) BatteryVolt);
  2140  003D52  0E12               	movlw	low STR_2
  2141  003D54  0101               	movlb	1	; () banked
  2142  003D56  6F26               	movwf	printf@fmt& (0+255),b
  2143  003D58  0E10               	movlw	high STR_2
  2144  003D5A  6F27               	movwf	(printf@fmt+1)& (0+255),b
  2145  003D5C  C024  F128         	movff	_BatteryVolt,?_printf+2
  2146  003D60  C025  F129         	movff	_BatteryVolt+1,?_printf+3
  2147  003D64  EC7A  F01E         	call	_printf	;wreg free
  2148  003D68  0012               	return		;funcret
  2149  003D6A                     __end_of_getBatteryVoltage:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _printf *****************
  2153 ;; Defined at:
  2154 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  2157 ;;		 -> STR_2(11), STR_1(17), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  ap              2   10[BANK1 ] PTR void [1]
  2160 ;;		 -> ?_printf(2), 
  2161 ;;  ret             2    0        int 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  2    6[BANK1 ] int 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2171 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;Total ram usage:        6 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 16
  2178 ;; This function calls:
  2179 ;;		_vfprintf
  2180 ;; This function is called by:
  2181 ;;		_loop
  2182 ;;		_getBatteryVoltage
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text7
  2187  003CF4                     __ptext7:
  2188                           	callstack 0
  2189  003CF4                     _printf:
  2190                           	callstack 13
  2191  003CF4  0E28               	movlw	low (?_printf+2)
  2192  003CF6  0101               	movlb	1	; () banked
  2193  003CF8  6F2A               	movwf	printf@ap& (0+255),b
  2194  003CFA  0E01               	movlw	high (?_printf+2)
  2195  003CFC  6F2B               	movwf	(printf@ap+1)& (0+255),b
  2196  003CFE                     
  2197                           ; BSR set to: 1
  2198  003CFE  0E00               	movlw	0
  2199  003D00  6F20               	movwf	vfprintf@fp& (0+255),b
  2200  003D02  0E00               	movlw	0
  2201  003D04  6F21               	movwf	(vfprintf@fp+1)& (0+255),b
  2202  003D06  C126  F122         	movff	printf@fmt,vfprintf@fmt
  2203  003D0A  C127  F123         	movff	printf@fmt+1,vfprintf@fmt+1
  2204  003D0E  0E2A               	movlw	low printf@ap
  2205  003D10  6F24               	movwf	vfprintf@ap& (0+255),b
  2206  003D12  0E01               	movlw	high printf@ap
  2207  003D14  6F25               	movwf	(vfprintf@ap+1)& (0+255),b
  2208  003D16  EC14  F01A         	call	_vfprintf	;wreg free
  2209  003D1A  0012               	return		;funcret
  2210  003D1C                     __end_of_printf:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _vfprintf *****************
  2214 ;; Defined at:
  2215 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2218 ;;		 -> NULL(0), 
  2219 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2220 ;;		 -> STR_2(11), STR_1(17), 
  2221 ;;  ap              2    4[BANK1 ] PTR PTR void 
  2222 ;;		 -> printf@ap(2), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  cfmt            2   77[BANK0 ] PTR unsigned char 
  2225 ;;		 -> STR_2(11), STR_1(17), 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  2    0[BANK1 ] int 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2235 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;Total ram usage:        8 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 15
  2242 ;; This function calls:
  2243 ;;		_vfpfcnvrt
  2244 ;; This function is called by:
  2245 ;;		_printf
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text8
  2250  003428                     __ptext8:
  2251                           	callstack 0
  2252  003428                     _vfprintf:
  2253                           	callstack 13
  2254  003428                     
  2255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2256  003428  C122  F0AD         	movff	vfprintf@fmt,vfprintf@cfmt
  2257  00342C  C123  F0AE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2258  003430                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2260  003430  0E00               	movlw	0
  2261  003432  0100               	movlb	0	; () banked
  2262  003434  6FD0               	movwf	(_nout+1)& (0+255),b
  2263  003436  0E00               	movlw	0
  2264  003438  6FCF               	movwf	_nout& (0+255),b
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2267  00343A  EF32  F01A         	goto	l5786
  2268  00343E                     l5784:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2272  00343E  C120  F09B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2273  003442  C121  F09C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2274  003446  0EAD               	movlw	low vfprintf@cfmt
  2275  003448  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2276  00344A  0E00               	movlw	high vfprintf@cfmt
  2277  00344C  6F9E               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2278  00344E  C124  F09F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2279  003452  C125  F0A0         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2280  003456  ECBA  F00E         	call	_vfpfcnvrt	;wreg free
  2281  00345A  0100               	movlb	0	; () banked
  2282  00345C  519B               	movf	?_vfpfcnvrt& (0+255),w,b
  2283  00345E  27CF               	addwf	_nout& (0+255),f,b
  2284  003460  519C               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2285  003462  23D0               	addwfc	(_nout+1)& (0+255),f,b
  2286  003464                     l5786:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2290  003464  0060  F2B7  FFF6   	movff	vfprintf@cfmt,tblptrl
  2291  00346A  0060  F2BB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2292  003470                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2293  003470  6AF8               	clrf	tblptru,c
  2294  003472                     	endif
  2295  003472                     	if	0	;tblptru may be non-zero
  2296  003472                     	endif
  2297  003472  0008               	tblrd		*
  2298  003474  50F5               	movf	tablat,w,c
  2299  003476  0900               	iorlw	0
  2300  003478  A4D8               	btfss	status,2,c
  2301  00347A  EF41  F01A         	goto	u4561
  2302  00347E  EF43  F01A         	goto	u4560
  2303  003482                     u4561:
  2304  003482  EF1F  F01A         	goto	l5784
  2305  003486                     u4560:
  2306  003486                     
  2307                           ; BSR set to: 0
  2308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2309  003486  C0CF  F120         	movff	_nout,?_vfprintf
  2310  00348A  C0D0  F121         	movff	_nout+1,?_vfprintf+1
  2311  00348E                     
  2312                           ; BSR set to: 0
  2313  00348E  0012               	return		;funcret
  2314  003490                     __end_of_vfprintf:
  2315                           	callstack 0
  2316                           
  2317 ;; *************** function _vfpfcnvrt *****************
  2318 ;; Defined at:
  2319 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  2322 ;;		 -> NULL(0), 
  2323 ;;  fmt             2   61[BANK0 ] PTR PTR unsigned char 
  2324 ;;		 -> vfprintf@cfmt(2), 
  2325 ;;  ap              2   63[BANK0 ] PTR PTR void 
  2326 ;;		 -> printf@ap(2), 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  llu             8   69[BANK0 ] unsigned long long 
  2329 ;;  ll              8    0        long long 
  2330 ;;  f               4    0        long long 
  2331 ;;  vp              3    0        PTR void 
  2332 ;;  ct              3    0        unsigned char [3]
  2333 ;;  cp              3    0        PTR unsigned char 
  2334 ;;  i               2    0        int 
  2335 ;;  done            2    0        int 
  2336 ;;  c               1    0        unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  2   59[BANK0 ] int 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2346 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;Total ram usage:       18 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 14
  2353 ;; This function calls:
  2354 ;;		_fputc
  2355 ;;		_utoa
  2356 ;; This function is called by:
  2357 ;;		_vfprintf
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text9
  2362  001D74                     __ptext9:
  2363                           	callstack 0
  2364  001D74                     _vfpfcnvrt:
  2365                           	callstack 13
  2366  001D74                     
  2367                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2368  001D74  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2369  001D7A  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2370  001D80  006F FF7B FFF6     	movff	postinc2,tblptrl
  2371  001D86  006F FF77 FFF7     	movff	postdec2,tblptrh
  2372  001D8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2373  001D8C  6AF8               	clrf	tblptru,c
  2374  001D8E                     	endif
  2375  001D8E                     	if	0	;tblptru may be non-zero
  2376  001D8E                     	endif
  2377  001D8E  0008               	tblrd		*
  2378  001D90  50F5               	movf	tablat,w,c
  2379  001D92  0A25               	xorlw	37
  2380  001D94  A4D8               	btfss	status,2,c
  2381  001D96  EFCF  F00E         	goto	u4531
  2382  001D9A  EFD1  F00E         	goto	u4530
  2383  001D9E                     u4531:
  2384  001D9E  EF87  F00F         	goto	l5772
  2385  001DA2                     u4530:
  2386  001DA2                     
  2387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2388  001DA2  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2389  001DA8  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2390  001DAE  2ADE               	incf	postinc2,f,c
  2391  001DB0  0E00               	movlw	0
  2392  001DB2  22DD               	addwfc	postdec2,f,c
  2393  001DB4                     
  2394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2395  001DB4  0E00               	movlw	0
  2396  001DB6  0100               	movlb	0	; () banked
  2397  001DB8  6FD2               	movwf	(_width+1)& (0+255),b
  2398  001DBA  0E00               	movlw	0
  2399  001DBC  6FD1               	movwf	_width& (0+255),b
  2400  001DBE  C0D1  F022         	movff	_width,_flags
  2401  001DC2  C0D2  F023         	movff	_width+1,_flags+1
  2402  001DC6                     
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2405  001DC6  69D3               	setf	_prec& (0+255),b
  2406  001DC8  69D4               	setf	(_prec+1)& (0+255),b
  2407  001DCA                     
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2410  001DCA  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2411  001DD0  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2412  001DD6  006F FF7B FFF6     	movff	postinc2,tblptrl
  2413  001DDC  006F FF77 FFF7     	movff	postdec2,tblptrh
  2414  001DE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2415  001DE2  6AF8               	clrf	tblptru,c
  2416  001DE4                     	endif
  2417  001DE4                     	if	0	;tblptru may be non-zero
  2418  001DE4                     	endif
  2419  001DE4  0008               	tblrd		*
  2420  001DE6  50F5               	movf	tablat,w,c
  2421  001DE8  0A75               	xorlw	117
  2422  001DEA  A4D8               	btfss	status,2,c
  2423  001DEC  EFFA  F00E         	goto	u4541
  2424  001DF0  EFFC  F00E         	goto	u4540
  2425  001DF4                     u4541:
  2426  001DF4  EF47  F00F         	goto	l5756
  2427  001DF8                     u4540:
  2428  001DF8                     
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2431  001DF8  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2432  001DFE  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  001E04  2ADE               	incf	postinc2,f,c
  2434  001E06  0E00               	movlw	0
  2435  001E08  22DD               	addwfc	postdec2,f,c
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2438  001E0A  0060  F27F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2439  001E10  0060  F283  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2440  001E16  006F FF7C  F0A1    	movff	indf2,??_vfpfcnvrt
  2441  001E1C  0E02               	movlw	2
  2442  001E1E  26DE               	addwf	postinc2,f,c
  2443  001E20  006F FF7C  F0A2    	movff	indf2,??_vfpfcnvrt+1
  2444  001E26  0E00               	movlw	0
  2445  001E28  22DD               	addwfc	postdec2,f,c
  2446  001E2A  0060  F287  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2447  001E30  0060  F28B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2448  001E36  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt+2
  2449  001E3C  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+3
  2450  001E42  C0A3  F0A5         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2451  001E46  C0A4  F0A6         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2452  001E4A  6BA7               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2453  001E4C  6BA8               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2454  001E4E  6BA9               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2455  001E50  6BAA               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2456  001E52  6BAB               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2457  001E54  6BAC               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2458  001E56                     
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2461  001E56  C09B  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  2462  001E5A  C09C  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2463  001E5E  C0A5  F07D         	movff	vfpfcnvrt@llu,utoa@d
  2464  001E62  C0A6  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2465  001E66  C0A7  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2466  001E6A  C0A8  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2467  001E6E  C0A9  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2468  001E72  C0AA  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2469  001E76  C0AB  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2470  001E7A  C0AC  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2471  001E7E  ECB7  F00D         	call	_utoa	;wreg free
  2472  001E82  C07B  F09B         	movff	?_utoa,?_vfpfcnvrt
  2473  001E86  C07C  F09C         	movff	?_utoa+1,?_vfpfcnvrt+1
  2474  001E8A  EFAA  F00F         	goto	l2111
  2475  001E8E                     l5756:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2479  001E8E  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2480  001E94  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2481  001E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2482  001EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2483  001EA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2484  001EA6  6AF8               	clrf	tblptru,c
  2485  001EA8                     	endif
  2486  001EA8                     	if	0	;tblptru may be non-zero
  2487  001EA8                     	endif
  2488  001EA8  0008               	tblrd		*
  2489  001EAA  50F5               	movf	tablat,w,c
  2490  001EAC  0A25               	xorlw	37
  2491  001EAE  A4D8               	btfss	status,2,c
  2492  001EB0  EF5C  F00F         	goto	u4551
  2493  001EB4  EF5E  F00F         	goto	u4550
  2494  001EB8                     u4551:
  2495  001EB8  EF78  F00F         	goto	l5766
  2496  001EBC                     u4550:
  2497  001EBC                     
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2500  001EBC  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2501  001EC2  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2502  001EC8  2ADE               	incf	postinc2,f,c
  2503  001ECA  0E00               	movlw	0
  2504  001ECC  22DD               	addwfc	postdec2,f,c
  2505  001ECE                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2508  001ECE  0E00               	movlw	0
  2509  001ED0  6F61               	movwf	(fputc@c+1)& (0+255),b
  2510  001ED2  0E25               	movlw	37
  2511  001ED4  6F60               	movwf	fputc@c& (0+255),b
  2512  001ED6  C09B  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2513  001EDA  C09C  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2514  001EDE  EC85  F019         	call	_fputc	;wreg free
  2515  001EE2                     l5762:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2518  001EE2  0E00               	movlw	0
  2519  001EE4  0100               	movlb	0	; () banked
  2520  001EE6  6F9C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2521  001EE8  0E01               	movlw	1
  2522  001EEA  6F9B               	movwf	?_vfpfcnvrt& (0+255),b
  2523  001EEC  EFAA  F00F         	goto	l2111
  2524  001EF0                     l5766:
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2528  001EF0  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2529  001EF6  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2530  001EFC  2ADE               	incf	postinc2,f,c
  2531  001EFE  0E00               	movlw	0
  2532  001F00  22DD               	addwfc	postdec2,f,c
  2533  001F02                     
  2534                           ; BSR set to: 0
  2535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2536  001F02  0E00               	movlw	0
  2537  001F04  6F9C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2538  001F06  0E00               	movlw	0
  2539  001F08  6F9B               	movwf	?_vfpfcnvrt& (0+255),b
  2540  001F0A  EFAA  F00F         	goto	l2111
  2541  001F0E                     l5772:
  2542                           
  2543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2544  001F0E  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2545  001F14  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2546  001F1A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2547  001F20  006F FF77 FFF7     	movff	postdec2,tblptrh
  2548  001F26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2549  001F26  6AF8               	clrf	tblptru,c
  2550  001F28                     	endif
  2551  001F28                     	if	0	;tblptru may be non-zero
  2552  001F28                     	endif
  2553  001F28  0008               	tblrd		*
  2554  001F2A  50F5               	movf	tablat,w,c
  2555  001F2C  0100               	movlb	0	; () banked
  2556  001F2E  6F60               	movwf	fputc@c& (0+255),b
  2557  001F30  6B61               	clrf	(fputc@c+1)& (0+255),b
  2558  001F32  C09B  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2559  001F36  C09C  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2560  001F3A  EC85  F019         	call	_fputc	;wreg free
  2561  001F3E                     
  2562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2563  001F3E  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2564  001F44  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2565  001F4A  2ADE               	incf	postinc2,f,c
  2566  001F4C  0E00               	movlw	0
  2567  001F4E  22DD               	addwfc	postdec2,f,c
  2568  001F50  EF71  F00F         	goto	l5762
  2569  001F54                     l2111:
  2570  001F54  0012               	return		;funcret
  2571  001F56                     __end_of_vfpfcnvrt:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _utoa *****************
  2575 ;; Defined at:
  2576 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2579 ;;		 -> NULL(0), 
  2580 ;;  d               8   29[BANK0 ] unsigned long long 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  n               8   49[BANK0 ] unsigned long long 
  2583 ;;  i               2   57[BANK0 ] int 
  2584 ;;  w               2   47[BANK0 ] int 
  2585 ;;  p               2   45[BANK0 ] int 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2   27[BANK0 ] int 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2595 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;Total ram usage:       32 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 13
  2602 ;; This function calls:
  2603 ;;		___lodiv
  2604 ;;		___lomod
  2605 ;;		_pad
  2606 ;; This function is called by:
  2607 ;;		_vfpfcnvrt
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text10
  2612  001B6E                     __ptext10:
  2613                           	callstack 0
  2614  001B6E                     _utoa:
  2615                           	callstack 13
  2616  001B6E                     
  2617                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2618  001B6E  0100               	movlb	0	; () banked
  2619  001B70  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  2620  001B72  EFBD  F00D         	goto	u4461
  2621  001B76  EFBF  F00D         	goto	u4460
  2622  001B7A                     u4461:
  2623  001B7A  EFC0  F00D         	goto	l5708
  2624  001B7E                     u4460:
  2625  001B7E                     
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2628  001B7E  9222               	bcf	_flags^0,1,c
  2629  001B80                     l5708:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2633  001B80  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  2634  001B82  EFCD  F00D         	goto	u4470
  2635  001B86  51D4               	movf	(_prec+1)& (0+255),w,b
  2636  001B88  E106               	bnz	u4471
  2637  001B8A  05D3               	decf	_prec& (0+255),w,b
  2638  001B8C  B0D8               	btfsc	status,0,c
  2639  001B8E  EFCB  F00D         	goto	u4471
  2640  001B92  EFCD  F00D         	goto	u4470
  2641  001B96                     u4471:
  2642  001B96  EFD3  F00D         	goto	l2096
  2643  001B9A                     u4470:
  2644  001B9A                     
  2645                           ; BSR set to: 0
  2646  001B9A  0E00               	movlw	0
  2647  001B9C  6F8E               	movwf	(utoa@p+1)& (0+255),b
  2648  001B9E  0E01               	movlw	1
  2649  001BA0  6F8D               	movwf	utoa@p& (0+255),b
  2650  001BA2  EFD7  F00D         	goto	l2098
  2651  001BA6                     l2096:
  2652                           
  2653                           ; BSR set to: 0
  2654  001BA6  C0D3  F08D         	movff	_prec,utoa@p
  2655  001BAA  C0D4  F08E         	movff	_prec+1,utoa@p+1
  2656  001BAE                     l2098:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2660  001BAE  C0D1  F08F         	movff	_width,utoa@w
  2661  001BB2  C0D2  F090         	movff	_width+1,utoa@w+1
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2664  001BB6  C07D  F091         	movff	utoa@d,utoa@n
  2665  001BBA  C07E  F092         	movff	utoa@d+1,utoa@n+1
  2666  001BBE  C07F  F093         	movff	utoa@d+2,utoa@n+2
  2667  001BC2  C080  F094         	movff	utoa@d+3,utoa@n+3
  2668  001BC6  C081  F095         	movff	utoa@d+4,utoa@n+4
  2669  001BCA  C082  F096         	movff	utoa@d+5,utoa@n+5
  2670  001BCE  C083  F097         	movff	utoa@d+6,utoa@n+6
  2671  001BD2  C084  F098         	movff	utoa@d+7,utoa@n+7
  2672  001BD6                     
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2675  001BD6  0E00               	movlw	0
  2676  001BD8  6F9A               	movwf	(utoa@i+1)& (0+255),b
  2677  001BDA  0E1F               	movlw	31
  2678  001BDC  6F99               	movwf	utoa@i& (0+255),b
  2679  001BDE                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2682  001BDE  0E00               	movlw	0
  2683  001BE0  0101               	movlb	1	; () banked
  2684  001BE2  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2687  001BE4  EF6B  F00E         	goto	l5726
  2688  001BE8                     l5716:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  2692  001BE8  0799               	decf	utoa@i& (0+255),f,b
  2693  001BEA  A0D8               	btfss	status,0,c
  2694  001BEC  079A               	decf	(utoa@i+1)& (0+255),f,b
  2695  001BEE                     
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2698  001BEE  0E00               	movlw	low _dbuf
  2699  001BF0  2599               	addwf	utoa@i& (0+255),w,b
  2700  001BF2  6ED9               	movwf	fsr2l,c
  2701  001BF4  0E01               	movlw	high _dbuf
  2702  001BF6  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  2703  001BF8  6EDA               	movwf	fsr2h,c
  2704  001BFA  C091  F060         	movff	utoa@n,___lomod@dividend
  2705  001BFE  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  2706  001C02  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  2707  001C06  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  2708  001C0A  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  2709  001C0E  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  2710  001C12  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  2711  001C16  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  2712  001C1A  0E0A               	movlw	10
  2713  001C1C  6F68               	movwf	___lomod@divisor& (0+255),b
  2714  001C1E  0E00               	movlw	0
  2715  001C20  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  2716  001C22  0E00               	movlw	0
  2717  001C24  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  2718  001C26  0E00               	movlw	0
  2719  001C28  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  2720  001C2A  0E00               	movlw	0
  2721  001C2C  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  2722  001C2E  0E00               	movlw	0
  2723  001C30  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  2724  001C32  0E00               	movlw	0
  2725  001C34  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  2726  001C36  0E00               	movlw	0
  2727  001C38  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  2728  001C3A  EC99  F016         	call	___lomod	;wreg free
  2729  001C3E  C060  F085         	movff	?___lomod,??_utoa
  2730  001C42  C061  F086         	movff	?___lomod+1,??_utoa+1
  2731  001C46  C062  F087         	movff	?___lomod+2,??_utoa+2
  2732  001C4A  C063  F088         	movff	?___lomod+3,??_utoa+3
  2733  001C4E  C064  F089         	movff	?___lomod+4,??_utoa+4
  2734  001C52  C065  F08A         	movff	?___lomod+5,??_utoa+5
  2735  001C56  C066  F08B         	movff	?___lomod+6,??_utoa+6
  2736  001C5A  C067  F08C         	movff	?___lomod+7,??_utoa+7
  2737  001C5E  0100               	movlb	0	; () banked
  2738  001C60  5185               	movf	??_utoa& (0+255),w,b
  2739  001C62  0F30               	addlw	48
  2740  001C64  6EDF               	movwf	indf2,c
  2741  001C66                     
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  2744  001C66  078D               	decf	utoa@p& (0+255),f,b
  2745  001C68  A0D8               	btfss	status,0,c
  2746  001C6A  078E               	decf	(utoa@p+1)& (0+255),f,b
  2747  001C6C                     
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  2750  001C6C  078F               	decf	utoa@w& (0+255),f,b
  2751  001C6E  A0D8               	btfss	status,0,c
  2752  001C70  0790               	decf	(utoa@w+1)& (0+255),f,b
  2753  001C72                     
  2754                           ; BSR set to: 0
  2755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2756  001C72  C091  F060         	movff	utoa@n,___lodiv@dividend
  2757  001C76  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  2758  001C7A  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  2759  001C7E  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  2760  001C82  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  2761  001C86  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  2762  001C8A  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  2763  001C8E  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  2764  001C92  0E0A               	movlw	10
  2765  001C94  6F68               	movwf	___lodiv@divisor& (0+255),b
  2766  001C96  0E00               	movlw	0
  2767  001C98  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  2768  001C9A  0E00               	movlw	0
  2769  001C9C  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  2770  001C9E  0E00               	movlw	0
  2771  001CA0  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  2772  001CA2  0E00               	movlw	0
  2773  001CA4  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  2774  001CA6  0E00               	movlw	0
  2775  001CA8  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  2776  001CAA  0E00               	movlw	0
  2777  001CAC  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  2778  001CAE  0E00               	movlw	0
  2779  001CB0  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  2780  001CB2  ECAD  F015         	call	___lodiv	;wreg free
  2781  001CB6  C060  F091         	movff	?___lodiv,utoa@n
  2782  001CBA  C061  F092         	movff	?___lodiv+1,utoa@n+1
  2783  001CBE  C062  F093         	movff	?___lodiv+2,utoa@n+2
  2784  001CC2  C063  F094         	movff	?___lodiv+3,utoa@n+3
  2785  001CC6  C064  F095         	movff	?___lodiv+4,utoa@n+4
  2786  001CCA  C065  F096         	movff	?___lodiv+5,utoa@n+5
  2787  001CCE  C066  F097         	movff	?___lodiv+6,utoa@n+6
  2788  001CD2  C067  F098         	movff	?___lodiv+7,utoa@n+7
  2789  001CD6                     l5726:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2792  001CD6  0100               	movlb	0	; () banked
  2793  001CD8  5199               	movf	utoa@i& (0+255),w,b
  2794  001CDA  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  2795  001CDC  B4D8               	btfsc	status,2,c
  2796  001CDE  EF73  F00E         	goto	u4481
  2797  001CE2  EF75  F00E         	goto	u4480
  2798  001CE6                     u4481:
  2799  001CE6  EFA5  F00E         	goto	l5736
  2800  001CEA                     u4480:
  2801  001CEA                     
  2802                           ; BSR set to: 0
  2803  001CEA  5191               	movf	utoa@n& (0+255),w,b
  2804  001CEC  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  2805  001CEE  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  2806  001CF0  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  2807  001CF2  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  2808  001CF4  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  2809  001CF6  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  2810  001CF8  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  2811  001CFA  A4D8               	btfss	status,2,c
  2812  001CFC  EF82  F00E         	goto	u4491
  2813  001D00  EF84  F00E         	goto	u4490
  2814  001D04                     u4491:
  2815  001D04  EFF4  F00D         	goto	l5716
  2816  001D08                     u4490:
  2817  001D08                     
  2818                           ; BSR set to: 0
  2819  001D08  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  2820  001D0A  EF91  F00E         	goto	u4500
  2821  001D0E  518E               	movf	(utoa@p+1)& (0+255),w,b
  2822  001D10  E106               	bnz	u4501
  2823  001D12  058D               	decf	utoa@p& (0+255),w,b
  2824  001D14  B0D8               	btfsc	status,0,c
  2825  001D16  EF8F  F00E         	goto	u4501
  2826  001D1A  EF91  F00E         	goto	u4500
  2827  001D1E                     u4501:
  2828  001D1E  EFF4  F00D         	goto	l5716
  2829  001D22                     u4500:
  2830  001D22                     
  2831                           ; BSR set to: 0
  2832  001D22  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  2833  001D24  EF9C  F00E         	goto	u4511
  2834  001D28  5190               	movf	(utoa@w+1)& (0+255),w,b
  2835  001D2A  E108               	bnz	u4510
  2836  001D2C  058F               	decf	utoa@w& (0+255),w,b
  2837  001D2E  A0D8               	btfss	status,0,c
  2838  001D30  EF9C  F00E         	goto	u4511
  2839  001D34  EF9E  F00E         	goto	u4510
  2840  001D38                     u4511:
  2841  001D38  EFA5  F00E         	goto	l5736
  2842  001D3C                     u4510:
  2843  001D3C                     
  2844                           ; BSR set to: 0
  2845  001D3C  B222               	btfsc	_flags^0,1,c
  2846  001D3E  EFA3  F00E         	goto	u4521
  2847  001D42  EFA5  F00E         	goto	u4520
  2848  001D46                     u4521:
  2849  001D46  EFF4  F00D         	goto	l5716
  2850  001D4A                     u4520:
  2851  001D4A                     l5736:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2855  001D4A  C07B  F070         	movff	utoa@fp,pad@fp
  2856  001D4E  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  2857  001D52  0E00               	movlw	low _dbuf
  2858  001D54  2599               	addwf	utoa@i& (0+255),w,b
  2859  001D56  6F72               	movwf	pad@buf& (0+255),b
  2860  001D58  0E01               	movlw	high _dbuf
  2861  001D5A  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  2862  001D5C  6F73               	movwf	(pad@buf+1)& (0+255),b
  2863  001D5E  C08F  F074         	movff	utoa@w,pad@p
  2864  001D62  C090  F075         	movff	utoa@w+1,pad@p+1
  2865  001D66  EC67  F017         	call	_pad	;wreg free
  2866  001D6A  C070  F07B         	movff	?_pad,?_utoa
  2867  001D6E  C071  F07C         	movff	?_pad+1,?_utoa+1
  2868  001D72  0012               	return		;funcret
  2869  001D74                     __end_of_utoa:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _pad *****************
  2873 ;; Defined at:
  2874 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2877 ;;		 -> NULL(0), 
  2878 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2879 ;;		 -> dbuf(32), 
  2880 ;;  p               2   20[BANK0 ] int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  w               2   25[BANK0 ] int 
  2883 ;;  i               2   23[BANK0 ] int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2   16[BANK0 ] int 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2893 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;Total ram usage:       11 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 12
  2900 ;; This function calls:
  2901 ;;		_fputc
  2902 ;;		_fputs
  2903 ;;		_strlen
  2904 ;; This function is called by:
  2905 ;;		_utoa
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text11
  2910  002ECE                     __ptext11:
  2911                           	callstack 0
  2912  002ECE                     _pad:
  2913                           	callstack 13
  2914  002ECE                     
  2915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2916  002ECE  A022               	btfss	_flags^0,0,c
  2917  002ED0  EF6C  F017         	goto	u4421
  2918  002ED4  EF6E  F017         	goto	u4420
  2919  002ED8                     u4421:
  2920  002ED8  EF78  F017         	goto	l5686
  2921  002EDC                     u4420:
  2922  002EDC                     
  2923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2924  002EDC  C072  F069         	movff	pad@buf,fputs@s
  2925  002EE0  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2926  002EE4  C070  F06B         	movff	pad@fp,fputs@fp
  2927  002EE8  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2928  002EEC  EC51  F01C         	call	_fputs	;wreg free
  2929  002EF0                     l5686:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2932  002EF0  0100               	movlb	0	; () banked
  2933  002EF2  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2934  002EF4  EF7E  F017         	goto	u4431
  2935  002EF8  EF80  F017         	goto	u4430
  2936  002EFC                     u4431:
  2937  002EFC  EF86  F017         	goto	l5690
  2938  002F00                     u4430:
  2939  002F00                     
  2940                           ; BSR set to: 0
  2941  002F00  C074  F079         	movff	pad@p,pad@w
  2942  002F04  C075  F07A         	movff	pad@p+1,pad@w+1
  2943  002F08  EF8A  F017         	goto	l2086
  2944  002F0C                     l5690:
  2945                           
  2946                           ; BSR set to: 0
  2947  002F0C  0E00               	movlw	0
  2948  002F0E  6F7A               	movwf	(pad@w+1)& (0+255),b
  2949  002F10  0E00               	movlw	0
  2950  002F12  6F79               	movwf	pad@w& (0+255),b
  2951  002F14                     l2086:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2955  002F14  0E00               	movlw	0
  2956  002F16  6F78               	movwf	(pad@i+1)& (0+255),b
  2957  002F18  0E00               	movlw	0
  2958  002F1A  6F77               	movwf	pad@i& (0+255),b
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2961  002F1C  EF9D  F017         	goto	l5696
  2962  002F20                     l5692:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2966  002F20  0E00               	movlw	0
  2967  002F22  6F61               	movwf	(fputc@c+1)& (0+255),b
  2968  002F24  0E20               	movlw	32
  2969  002F26  6F60               	movwf	fputc@c& (0+255),b
  2970  002F28  C070  F062         	movff	pad@fp,fputc@fp
  2971  002F2C  C071  F063         	movff	pad@fp+1,fputc@fp+1
  2972  002F30  EC85  F019         	call	_fputc	;wreg free
  2973  002F34                     
  2974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2975  002F34  0100               	movlb	0	; () banked
  2976  002F36  4B77               	infsnz	pad@i& (0+255),f,b
  2977  002F38  2B78               	incf	(pad@i+1)& (0+255),f,b
  2978  002F3A                     l5696:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2982  002F3A  5179               	movf	pad@w& (0+255),w,b
  2983  002F3C  5D77               	subwf	pad@i& (0+255),w,b
  2984  002F3E  5178               	movf	(pad@i+1)& (0+255),w,b
  2985  002F40  0A80               	xorlw	128
  2986  002F42  6F76               	movwf	??_pad& (0+255),b
  2987  002F44  517A               	movf	(pad@w+1)& (0+255),w,b
  2988  002F46  0A80               	xorlw	128
  2989  002F48  5976               	subwfb	??_pad& (0+255),w,b
  2990  002F4A  A0D8               	btfss	status,0,c
  2991  002F4C  EFAA  F017         	goto	u4441
  2992  002F50  EFAC  F017         	goto	u4440
  2993  002F54                     u4441:
  2994  002F54  EF90  F017         	goto	l5692
  2995  002F58                     u4440:
  2996  002F58                     
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2999  002F58  B022               	btfsc	_flags^0,0,c
  3000  002F5A  EFB1  F017         	goto	u4451
  3001  002F5E  EFB3  F017         	goto	u4450
  3002  002F62                     u4451:
  3003  002F62  EFBD  F017         	goto	l5700
  3004  002F66                     u4450:
  3005  002F66                     
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3008  002F66  C072  F069         	movff	pad@buf,fputs@s
  3009  002F6A  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3010  002F6E  C070  F06B         	movff	pad@fp,fputs@fp
  3011  002F72  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3012  002F76  EC51  F01C         	call	_fputs	;wreg free
  3013  002F7A                     l5700:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3016  002F7A  C072  F020         	movff	pad@buf,strlen@s
  3017  002F7E  C073  F021         	movff	pad@buf+1,strlen@s+1
  3018  002F82  ECD4  F01C         	call	_strlen	;wreg free
  3019  002F86  0100               	movlb	0	; () banked
  3020  002F88  5179               	movf	pad@w& (0+255),w,b
  3021  002F8A  2420               	addwf	?_strlen^0,w,c
  3022  002F8C  6F70               	movwf	?_pad& (0+255),b
  3023  002F8E  517A               	movf	(pad@w+1)& (0+255),w,b
  3024  002F90  2021               	addwfc	(?_strlen+1)^0,w,c
  3025  002F92  6F71               	movwf	(?_pad+1)& (0+255),b
  3026  002F94                     
  3027                           ; BSR set to: 0
  3028  002F94  0012               	return		;funcret
  3029  002F96                     __end_of_pad:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _strlen *****************
  3033 ;; Defined at:
  3034 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3037 ;;		 -> dbuf(32), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  3040 ;;		 -> dbuf(32), 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  2   31[COMRAM] unsigned int 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;Total ram usage:        4 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 8
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_pad
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text12
  3065  0039A8                     __ptext12:
  3066                           	callstack 0
  3067  0039A8                     _strlen:
  3068                           	callstack 16
  3069  0039A8  C020  F060         	movff	strlen@s,strlen@a
  3070  0039AC  C021  F061         	movff	strlen@s+1,strlen@a+1
  3071  0039B0  EFDC  F01C         	goto	l5638
  3072  0039B4                     l5636:
  3073  0039B4  4A20               	infsnz	strlen@s^0,f,c
  3074  0039B6  2A21               	incf	(strlen@s+1)^0,f,c
  3075  0039B8                     l5638:
  3076  0039B8  0060  F083  FFD9   	movff	strlen@s,fsr2l
  3077  0039BE  0060  F087  FFDA   	movff	strlen@s+1,fsr2h
  3078  0039C4  50DF               	movf	indf2,w,c
  3079  0039C6  A4D8               	btfss	status,2,c
  3080  0039C8  EFE8  F01C         	goto	u4341
  3081  0039CC  EFEA  F01C         	goto	u4340
  3082  0039D0                     u4341:
  3083  0039D0  EFDA  F01C         	goto	l5636
  3084  0039D4                     u4340:
  3085  0039D4  0100               	movlb	0	; () banked
  3086  0039D6  5160               	movf	strlen@a& (0+255),w,b
  3087  0039D8  5C20               	subwf	strlen@s^0,w,c
  3088  0039DA  6E20               	movwf	?_strlen^0,c
  3089  0039DC  5161               	movf	(strlen@a+1)& (0+255),w,b
  3090  0039DE  5821               	subwfb	(strlen@s+1)^0,w,c
  3091  0039E0  6E21               	movwf	(?_strlen+1)^0,c
  3092  0039E2                     
  3093                           ; BSR set to: 0
  3094  0039E2  0012               	return		;funcret
  3095  0039E4                     __end_of_strlen:
  3096                           	callstack 0
  3097                           
  3098 ;; *************** function _fputs *****************
  3099 ;; Defined at:
  3100 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3103 ;;		 -> dbuf(32), 
  3104 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3105 ;;		 -> NULL(0), 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  i               2   14[BANK0 ] int 
  3108 ;;  c               1   13[BANK0 ] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  2    9[BANK0 ] int 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3118 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;Total ram usage:        7 bytes
  3123 ;; Hardware stack levels used: 1
  3124 ;; Hardware stack levels required when called: 11
  3125 ;; This function calls:
  3126 ;;		_fputc
  3127 ;; This function is called by:
  3128 ;;		_pad
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text13
  3133  0038A2                     __ptext13:
  3134                           	callstack 0
  3135  0038A2                     _fputs:
  3136                           	callstack 13
  3137  0038A2  0E00               	movlw	0
  3138  0038A4  0100               	movlb	0	; () banked
  3139  0038A6  6F6F               	movwf	(fputs@i+1)& (0+255),b
  3140  0038A8  0E00               	movlw	0
  3141  0038AA  6F6E               	movwf	fputs@i& (0+255),b
  3142  0038AC  EF64  F01C         	goto	l5632
  3143  0038B0                     l5628:
  3144                           
  3145                           ; BSR set to: 0
  3146  0038B0  C06D  F060         	movff	fputs@c,fputc@c
  3147  0038B4  6B61               	clrf	(fputc@c+1)& (0+255),b
  3148  0038B6  C06B  F062         	movff	fputs@fp,fputc@fp
  3149  0038BA  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  3150  0038BE  EC85  F019         	call	_fputc	;wreg free
  3151  0038C2  0100               	movlb	0	; () banked
  3152  0038C4  4B6E               	infsnz	fputs@i& (0+255),f,b
  3153  0038C6  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  3154  0038C8                     l5632:
  3155                           
  3156                           ; BSR set to: 0
  3157  0038C8  516E               	movf	fputs@i& (0+255),w,b
  3158  0038CA  2569               	addwf	fputs@s& (0+255),w,b
  3159  0038CC  6ED9               	movwf	fsr2l,c
  3160  0038CE  516F               	movf	(fputs@i+1)& (0+255),w,b
  3161  0038D0  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  3162  0038D2  6EDA               	movwf	fsr2h,c
  3163  0038D4  50DF               	movf	indf2,w,c
  3164  0038D6  6F6D               	movwf	fputs@c& (0+255),b
  3165  0038D8  516D               	movf	fputs@c& (0+255),w,b
  3166  0038DA  A4D8               	btfss	status,2,c
  3167  0038DC  EF72  F01C         	goto	u4331
  3168  0038E0  EF74  F01C         	goto	u4330
  3169  0038E4                     u4331:
  3170  0038E4  EF58  F01C         	goto	l5628
  3171  0038E8                     u4330:
  3172  0038E8                     
  3173                           ; BSR set to: 0
  3174  0038E8  0012               	return		;funcret
  3175  0038EA                     __end_of_fputs:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _fputc *****************
  3179 ;; Defined at:
  3180 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  c               2    0[BANK0 ] int 
  3183 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3184 ;;		 -> NULL(0), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2    0[BANK0 ] int 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3196 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;Total ram usage:        9 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 10
  3203 ;; This function calls:
  3204 ;;		_putch
  3205 ;; This function is called by:
  3206 ;;		_pad
  3207 ;;		_vfpfcnvrt
  3208 ;;		_fputs
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text14
  3213  00330A                     __ptext14:
  3214                           	callstack 0
  3215  00330A                     _fputc:
  3216                           	callstack 13
  3217  00330A  0100               	movlb	0	; () banked
  3218  00330C  5162               	movf	fputc@fp& (0+255),w,b
  3219  00330E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3220  003310  B4D8               	btfsc	status,2,c
  3221  003312  EF8D  F019         	goto	u4291
  3222  003316  EF8F  F019         	goto	u4290
  3223  00331A                     u4291:
  3224  00331A  EF98  F019         	goto	l5616
  3225  00331E                     u4290:
  3226  00331E                     
  3227                           ; BSR set to: 0
  3228  00331E  5162               	movf	fputc@fp& (0+255),w,b
  3229  003320  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3230  003322  A4D8               	btfss	status,2,c
  3231  003324  EF96  F019         	goto	u4301
  3232  003328  EF98  F019         	goto	u4300
  3233  00332C                     u4301:
  3234  00332C  EF9D  F019         	goto	l5618
  3235  003330                     u4300:
  3236  003330                     l5616:
  3237                           
  3238                           ; BSR set to: 0
  3239  003330  5160               	movf	fputc@c& (0+255),w,b
  3240  003332  EC49  F01F         	call	_putch
  3241  003336  EFD0  F019         	goto	l2130
  3242  00333A                     l5618:
  3243                           
  3244                           ; BSR set to: 0
  3245  00333A  EE20 F009          	lfsr	2,9
  3246  00333E  5162               	movf	fputc@fp& (0+255),w,b
  3247  003340  26D9               	addwf	fsr2l,f,c
  3248  003342  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3249  003344  22DA               	addwfc	fsr2h,f,c
  3250  003346  50DE               	movf	postinc2,w,c
  3251  003348  10DE               	iorwf	postinc2,w,c
  3252  00334A  B4D8               	btfsc	status,2,c
  3253  00334C  EFAA  F019         	goto	u4311
  3254  003350  EFAC  F019         	goto	u4310
  3255  003354                     u4311:
  3256  003354  EFC7  F019         	goto	l5622
  3257  003358                     u4310:
  3258  003358                     
  3259                           ; BSR set to: 0
  3260  003358  EE20 F009          	lfsr	2,9
  3261  00335C  5162               	movf	fputc@fp& (0+255),w,b
  3262  00335E  26D9               	addwf	fsr2l,f,c
  3263  003360  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3264  003362  22DA               	addwfc	fsr2h,f,c
  3265  003364  EE10 F003          	lfsr	1,3
  3266  003368  5162               	movf	fputc@fp& (0+255),w,b
  3267  00336A  26E1               	addwf	fsr1l,f,c
  3268  00336C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3269  00336E  22E2               	addwfc	fsr1h,f,c
  3270  003370  50DE               	movf	postinc2,w,c
  3271  003372  5CE6               	subwf	postinc1,w,c
  3272  003374  50E6               	movf	postinc1,w,c
  3273  003376  0A80               	xorlw	128
  3274  003378  6F68               	movwf	(??_fputc+4)& (0+255),b
  3275  00337A  50DE               	movf	postinc2,w,c
  3276  00337C  0A80               	xorlw	128
  3277  00337E  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  3278  003380  B0D8               	btfsc	status,0,c
  3279  003382  EFC5  F019         	goto	u4321
  3280  003386  EFC7  F019         	goto	u4320
  3281  00338A                     u4321:
  3282  00338A  EFD0  F019         	goto	l2130
  3283  00338E                     u4320:
  3284  00338E                     l5622:
  3285                           
  3286                           ; BSR set to: 0
  3287  00338E  EE20 F003          	lfsr	2,3
  3288  003392  5162               	movf	fputc@fp& (0+255),w,b
  3289  003394  26D9               	addwf	fsr2l,f,c
  3290  003396  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3291  003398  22DA               	addwfc	fsr2h,f,c
  3292  00339A  2ADE               	incf	postinc2,f,c
  3293  00339C  0E00               	movlw	0
  3294  00339E  22DD               	addwfc	postdec2,f,c
  3295  0033A0                     l2130:
  3296  0033A0  0012               	return		;funcret
  3297  0033A2                     __end_of_fputc:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _putch *****************
  3301 ;; Defined at:
  3302 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  txData          1    wreg     unsigned char 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  txData          1   32[COMRAM] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 9
  3323 ;; This function calls:
  3324 ;;		_UART1_Write
  3325 ;; This function is called by:
  3326 ;;		_fputc
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text15
  3331  003E92                     __ptext15:
  3332                           	callstack 0
  3333  003E92                     _putch:
  3334                           	callstack 13
  3335                           
  3336                           ;incstack = 0
  3337                           ;putch@txData stored from wreg
  3338  003E92  6E21               	movwf	putch@txData^0,c
  3339  003E94                     
  3340                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3341  003E94  5021               	movf	putch@txData^0,w,c
  3342  003E96  EC48  F01A         	call	_UART1_Write
  3343  003E9A  0012               	return		;funcret
  3344  003E9C                     __end_of_putch:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function _UART1_Write *****************
  3348 ;; Defined at:
  3349 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  txData          1    wreg     unsigned char 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  txData          1   31[COMRAM] unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;Total ram usage:        1 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 8
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_putch
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text16
  3378  003490                     __ptext16:
  3379                           	callstack 0
  3380  003490                     _UART1_Write:
  3381                           	callstack 13
  3382                           
  3383                           ;incstack = 0
  3384                           ;UART1_Write@txData stored from wreg
  3385  003490  6E20               	movwf	UART1_Write@txData^0,c
  3386  003492                     l5594:
  3387                           
  3388                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3389  003492  5040               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  3390  003494  B4D8               	btfsc	status,2,c
  3391  003496  EF4F  F01A         	goto	u4261
  3392  00349A  EF51  F01A         	goto	u4260
  3393  00349E                     u4261:
  3394  00349E  EF49  F01A         	goto	l5594
  3395  0034A2                     u4260:
  3396  0034A2                     
  3397                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3398  0034A2  0139               	movlb	57	; () banked
  3399  0034A4  B993               	btfsc	147,4,b	;volatile
  3400  0034A6  EF57  F01A         	goto	u4271
  3401  0034AA  EF59  F01A         	goto	u4270
  3402  0034AE                     u4271:
  3403  0034AE  EF5E  F01A         	goto	l309
  3404  0034B2                     u4270:
  3405  0034B2                     
  3406                           ; BSR set to: 57
  3407                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3408  0034B2  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3409                           
  3410                           ;mcc_generated_files/uart1.c: 211:     }
  3411  0034B8  EF74  F01A         	goto	l5608
  3412  0034BC                     l309:
  3413                           
  3414                           ; BSR set to: 57
  3415                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3416  0034BC  9993               	bcf	147,4,b	;volatile
  3417  0034BE                     
  3418                           ; BSR set to: 57
  3419                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3420  0034BE  0EBF               	movlw	low _uart1TxBuffer
  3421  0034C0  243B               	addwf	_uart1TxHead^0,w,c	;volatile
  3422  0034C2  6ED9               	movwf	fsr2l,c
  3423  0034C4  6ADA               	clrf	fsr2h,c
  3424  0034C6  0E00               	movlw	high _uart1TxBuffer
  3425  0034C8  22DA               	addwfc	fsr2h,f,c
  3426  0034CA  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
  3427  0034D0                     
  3428                           ; BSR set to: 57
  3429  0034D0  2A3B               	incf	_uart1TxHead^0,f,c	;volatile
  3430  0034D2                     
  3431                           ; BSR set to: 57
  3432                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3433  0034D2  0E07               	movlw	7
  3434  0034D4  643B               	cpfsgt	_uart1TxHead^0,c	;volatile
  3435  0034D6  EF6F  F01A         	goto	u4281
  3436  0034DA  EF71  F01A         	goto	u4280
  3437  0034DE                     u4281:
  3438  0034DE  EF73  F01A         	goto	l5606
  3439  0034E2                     u4280:
  3440  0034E2                     
  3441                           ; BSR set to: 57
  3442                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3443  0034E2  0E00               	movlw	0
  3444  0034E4  6E3B               	movwf	_uart1TxHead^0,c	;volatile
  3445  0034E6                     l5606:
  3446                           
  3447                           ; BSR set to: 57
  3448                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3449  0034E6  0640               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  3450  0034E8                     l5608:
  3451                           
  3452                           ; BSR set to: 57
  3453                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3454  0034E8  8993               	bsf	147,4,b	;volatile
  3455  0034EA                     
  3456                           ; BSR set to: 57
  3457  0034EA  0012               	return		;funcret
  3458  0034EC                     __end_of_UART1_Write:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function ___lomod *****************
  3462 ;; Defined at:
  3463 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3466 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  counter         1   31[COMRAM] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  8    0[BANK0 ] unsigned long long 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3478 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;Total ram usage:       17 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 8
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_utoa
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text17
  3493  002D32                     __ptext17:
  3494                           	callstack 0
  3495  002D32                     ___lomod:
  3496                           	callstack 17
  3497  002D32  0100               	movlb	0	; () banked
  3498  002D34  5168               	movf	___lomod@divisor& (0+255),w,b
  3499  002D36  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3500  002D38  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3501  002D3A  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3502  002D3C  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3503  002D3E  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3504  002D40  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3505  002D42  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3506  002D44  B4D8               	btfsc	status,2,c
  3507  002D46  EFA7  F016         	goto	u4391
  3508  002D4A  EFA9  F016         	goto	u4390
  3509  002D4E                     u4391:
  3510  002D4E  EFF1  F016         	goto	l1831
  3511  002D52                     u4390:
  3512  002D52                     
  3513                           ; BSR set to: 0
  3514  002D52  0E01               	movlw	1
  3515  002D54  6E20               	movwf	___lomod@counter^0,c
  3516  002D56  EFB7  F016         	goto	l5672
  3517  002D5A                     l5670:
  3518                           
  3519                           ; BSR set to: 0
  3520  002D5A  90D8               	bcf	status,0,c
  3521  002D5C  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3522  002D5E  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3523  002D60  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3524  002D62  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3525  002D64  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3526  002D66  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3527  002D68  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3528  002D6A  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3529  002D6C  2A20               	incf	___lomod@counter^0,f,c
  3530  002D6E                     l5672:
  3531                           
  3532                           ; BSR set to: 0
  3533  002D6E  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3534  002D70  EFBC  F016         	goto	u4401
  3535  002D74  EFBE  F016         	goto	u4400
  3536  002D78                     u4401:
  3537  002D78  EFAD  F016         	goto	l5670
  3538  002D7C                     u4400:
  3539  002D7C                     l5674:
  3540                           
  3541                           ; BSR set to: 0
  3542  002D7C  5168               	movf	___lomod@divisor& (0+255),w,b
  3543  002D7E  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3544  002D80  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3545  002D82  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3546  002D84  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3547  002D86  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3548  002D88  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3549  002D8A  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3550  002D8C  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3551  002D8E  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3552  002D90  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3553  002D92  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3554  002D94  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3555  002D96  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3556  002D98  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3557  002D9A  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3558  002D9C  A0D8               	btfss	status,0,c
  3559  002D9E  EFD3  F016         	goto	u4411
  3560  002DA2  EFD5  F016         	goto	u4410
  3561  002DA6                     u4411:
  3562  002DA6  EFE5  F016         	goto	l5678
  3563  002DAA                     u4410:
  3564  002DAA                     
  3565                           ; BSR set to: 0
  3566  002DAA  5168               	movf	___lomod@divisor& (0+255),w,b
  3567  002DAC  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3568  002DAE  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3569  002DB0  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3570  002DB2  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3571  002DB4  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3572  002DB6  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3573  002DB8  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3574  002DBA  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3575  002DBC  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3576  002DBE  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3577  002DC0  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3578  002DC2  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3579  002DC4  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3580  002DC6  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3581  002DC8  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3582  002DCA                     l5678:
  3583                           
  3584                           ; BSR set to: 0
  3585  002DCA  90D8               	bcf	status,0,c
  3586  002DCC  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3587  002DCE  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3588  002DD0  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3589  002DD2  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3590  002DD4  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3591  002DD6  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3592  002DD8  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3593  002DDA  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3594  002DDC                     
  3595                           ; BSR set to: 0
  3596  002DDC  2E20               	decfsz	___lomod@counter^0,f,c
  3597  002DDE  EFBE  F016         	goto	l5674
  3598  002DE2                     l1831:
  3599                           
  3600                           ; BSR set to: 0
  3601  002DE2  C060  F060         	movff	___lomod@dividend,?___lomod
  3602  002DE6  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3603  002DEA  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3604  002DEE  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3605  002DF2  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3606  002DF6  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3607  002DFA  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3608  002DFE  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3609  002E02                     
  3610                           ; BSR set to: 0
  3611  002E02  0012               	return		;funcret
  3612  002E04                     __end_of___lomod:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function ___lodiv *****************
  3616 ;; Defined at:
  3617 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3620 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3623 ;;  counter         1   24[BANK0 ] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  8    0[BANK0 ] unsigned long long 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:       25 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 8
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_utoa
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text18
  3648  002B5A                     __ptext18:
  3649                           	callstack 0
  3650  002B5A                     ___lodiv:
  3651                           	callstack 17
  3652  002B5A  EE20  F070         	lfsr	2,___lodiv@quotient
  3653  002B5E  0E07               	movlw	7
  3654  002B60                     u4351:
  3655  002B60  6ADE               	clrf	postinc2,c
  3656  002B62  06E8               	decf	wreg,f,c
  3657  002B64  E2FD               	bc	u4351
  3658  002B66  0100               	movlb	0	; () banked
  3659  002B68  5168               	movf	___lodiv@divisor& (0+255),w,b
  3660  002B6A  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3661  002B6C  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3662  002B6E  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3663  002B70  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3664  002B72  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3665  002B74  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3666  002B76  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3667  002B78  B4D8               	btfsc	status,2,c
  3668  002B7A  EFC1  F015         	goto	u4361
  3669  002B7E  EFC3  F015         	goto	u4360
  3670  002B82                     u4361:
  3671  002B82  EF15  F016         	goto	l1821
  3672  002B86                     u4360:
  3673  002B86                     
  3674                           ; BSR set to: 0
  3675  002B86  0E01               	movlw	1
  3676  002B88  6F78               	movwf	___lodiv@counter& (0+255),b
  3677  002B8A  EFD1  F015         	goto	l5652
  3678  002B8E                     l5650:
  3679                           
  3680                           ; BSR set to: 0
  3681  002B8E  90D8               	bcf	status,0,c
  3682  002B90  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3683  002B92  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3684  002B94  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3685  002B96  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3686  002B98  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3687  002B9A  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3688  002B9C  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3689  002B9E  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3690  002BA0  2B78               	incf	___lodiv@counter& (0+255),f,b
  3691  002BA2                     l5652:
  3692                           
  3693                           ; BSR set to: 0
  3694  002BA2  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3695  002BA4  EFD6  F015         	goto	u4371
  3696  002BA8  EFD8  F015         	goto	u4370
  3697  002BAC                     u4371:
  3698  002BAC  EFC7  F015         	goto	l5650
  3699  002BB0                     u4370:
  3700  002BB0                     l5654:
  3701                           
  3702                           ; BSR set to: 0
  3703  002BB0  90D8               	bcf	status,0,c
  3704  002BB2  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3705  002BB4  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3706  002BB6  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3707  002BB8  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3708  002BBA  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3709  002BBC  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3710  002BBE  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3711  002BC0  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3712  002BC2                     
  3713                           ; BSR set to: 0
  3714  002BC2  5168               	movf	___lodiv@divisor& (0+255),w,b
  3715  002BC4  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3716  002BC6  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3717  002BC8  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3718  002BCA  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3719  002BCC  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3720  002BCE  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3721  002BD0  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3722  002BD2  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3723  002BD4  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3724  002BD6  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3725  002BD8  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3726  002BDA  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3727  002BDC  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3728  002BDE  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3729  002BE0  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3730  002BE2  A0D8               	btfss	status,0,c
  3731  002BE4  EFF6  F015         	goto	u4381
  3732  002BE8  EFF8  F015         	goto	u4380
  3733  002BEC                     u4381:
  3734  002BEC  EF09  F016         	goto	l5662
  3735  002BF0                     u4380:
  3736  002BF0                     
  3737                           ; BSR set to: 0
  3738  002BF0  5168               	movf	___lodiv@divisor& (0+255),w,b
  3739  002BF2  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3740  002BF4  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3741  002BF6  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3742  002BF8  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3743  002BFA  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3744  002BFC  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3745  002BFE  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3746  002C00  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3747  002C02  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3748  002C04  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3749  002C06  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3750  002C08  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3751  002C0A  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3752  002C0C  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3753  002C0E  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3754  002C10                     
  3755                           ; BSR set to: 0
  3756  002C10  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3757  002C12                     l5662:
  3758                           
  3759                           ; BSR set to: 0
  3760  002C12  90D8               	bcf	status,0,c
  3761  002C14  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3762  002C16  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3763  002C18  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3764  002C1A  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3765  002C1C  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3766  002C1E  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3767  002C20  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3768  002C22  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3769  002C24                     
  3770                           ; BSR set to: 0
  3771  002C24  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3772  002C26  EFD8  F015         	goto	l5654
  3773  002C2A                     l1821:
  3774                           
  3775                           ; BSR set to: 0
  3776  002C2A  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3777  002C2E  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3778  002C32  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3779  002C36  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3780  002C3A  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3781  002C3E  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3782  002C42  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3783  002C46  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3784  002C4A                     
  3785                           ; BSR set to: 0
  3786  002C4A  0012               	return		;funcret
  3787  002C4C                     __end_of___lodiv:
  3788                           	callstack 0
  3789                           
  3790 ;; *************** function _ADCC_GetSingleConversion *****************
  3791 ;; Defined at:
  3792 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  channel         1    wreg     enum E16067
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  channel         1    2[BANK0 ] enum E16067
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2   31[COMRAM] unsigned short 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:        5 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 8
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_getBatteryVoltage
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text19
  3821  00392E                     __ptext19:
  3822                           	callstack 0
  3823  00392E                     _ADCC_GetSingleConversion:
  3824                           	callstack 20
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;incstack = 0
  3828                           ;ADCC_GetSingleConversion@channel stored from wreg
  3829  00392E  0100               	movlb	0	; () banked
  3830  003930  6F62               	movwf	ADCC_GetSingleConversion@channel& (0+255),b
  3831  003932                     
  3832                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  3833  003932  0060  F18B  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  3834  003938                     
  3835                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  3836  003938  013E               	movlb	62	; () banked
  3837  00393A  8FF8               	bsf	248,7,b	;volatile
  3838  00393C                     
  3839                           ; BSR set to: 62
  3840                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  3841  00393C  9DF8               	bcf	248,6,b	;volatile
  3842  00393E                     
  3843                           ; BSR set to: 62
  3844                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  3845  00393E  81F8               	bsf	248,0,b	;volatile
  3846  003940                     l1054:
  3847                           
  3848                           ; BSR set to: 62
  3849                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  3850  003940  B1F8               	btfsc	248,0,b	;volatile
  3851  003942  EFA5  F01C         	goto	u4611
  3852  003946  EFA7  F01C         	goto	u4610
  3853  00394A                     u4611:
  3854  00394A  EFA0  F01C         	goto	l1054
  3855  00394E                     u4610:
  3856  00394E                     
  3857                           ; BSR set to: 62
  3858                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3859  00394E  51F0               	movf	240,w,b	;volatile
  3860  003950  0100               	movlb	0	; () banked
  3861  003952  6F61               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  3862  003954  6B60               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  3863  003956  013E               	movlb	62	; () banked
  3864  003958  51EF               	movf	239,w,b	;volatile
  3865  00395A  0100               	movlb	0	; () banked
  3866  00395C  2560               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  3867  00395E  6E20               	movwf	?_ADCC_GetSingleConversion^0,c
  3868  003960  013E               	movlb	62	; () banked
  3869  003962  0E00               	movlw	0
  3870  003964  0100               	movlb	0	; () banked
  3871  003966  2161               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  3872  003968  6E21               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  3873  00396A                     
  3874                           ; BSR set to: 0
  3875  00396A  0012               	return		;funcret
  3876  00396C                     __end_of_ADCC_GetSingleConversion:
  3877                           	callstack 0
  3878                           
  3879 ;; *************** function ___flge *****************
  3880 ;; Defined at:
  3881 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  ff1             4   14[BANK0 ] unsigned short 
  3884 ;;  ff2             4   18[BANK0 ] unsigned short 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;		None               void
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3896 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;Total ram usage:       12 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 8
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_loop
  3907 ;;		_checkBatt
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text20
  3912  002A54                     __ptext20:
  3913                           	callstack 0
  3914  002A54                     ___flge:
  3915                           	callstack 20
  3916  002A54  0E00               	movlw	0
  3917  002A56  0100               	movlb	0	; () banked
  3918  002A58  156E               	andwf	___flge@ff1& (0+255),w,b
  3919  002A5A  6F76               	movwf	??___flge& (0+255),b
  3920  002A5C  0E00               	movlw	0
  3921  002A5E  156F               	andwf	(___flge@ff1+1)& (0+255),w,b
  3922  002A60  6F77               	movwf	(??___flge+1)& (0+255),b
  3923  002A62  0E80               	movlw	128
  3924  002A64  1570               	andwf	(___flge@ff1+2)& (0+255),w,b
  3925  002A66  6F78               	movwf	(??___flge+2)& (0+255),b
  3926  002A68  0E7F               	movlw	127
  3927  002A6A  1571               	andwf	(___flge@ff1+3)& (0+255),w,b
  3928  002A6C  6F79               	movwf	(??___flge+3)& (0+255),b
  3929  002A6E  5176               	movf	??___flge& (0+255),w,b
  3930  002A70  1177               	iorwf	(??___flge+1)& (0+255),w,b
  3931  002A72  1178               	iorwf	(??___flge+2)& (0+255),w,b
  3932  002A74  1179               	iorwf	(??___flge+3)& (0+255),w,b
  3933  002A76  A4D8               	btfss	status,2,c
  3934  002A78  EF40  F015         	goto	u5421
  3935  002A7C  EF42  F015         	goto	u5420
  3936  002A80                     u5421:
  3937  002A80  EF4A  F015         	goto	l6320
  3938  002A84                     u5420:
  3939  002A84                     
  3940                           ; BSR set to: 0
  3941  002A84  0E00               	movlw	0
  3942  002A86  6F6E               	movwf	___flge@ff1& (0+255),b
  3943  002A88  0E00               	movlw	0
  3944  002A8A  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
  3945  002A8C  0E00               	movlw	0
  3946  002A8E  6F70               	movwf	(___flge@ff1+2)& (0+255),b
  3947  002A90  0E00               	movlw	0
  3948  002A92  6F71               	movwf	(___flge@ff1+3)& (0+255),b
  3949  002A94                     l6320:
  3950                           
  3951                           ; BSR set to: 0
  3952  002A94  0E00               	movlw	0
  3953  002A96  1572               	andwf	___flge@ff2& (0+255),w,b
  3954  002A98  6F76               	movwf	??___flge& (0+255),b
  3955  002A9A  0E00               	movlw	0
  3956  002A9C  1573               	andwf	(___flge@ff2+1)& (0+255),w,b
  3957  002A9E  6F77               	movwf	(??___flge+1)& (0+255),b
  3958  002AA0  0E80               	movlw	128
  3959  002AA2  1574               	andwf	(___flge@ff2+2)& (0+255),w,b
  3960  002AA4  6F78               	movwf	(??___flge+2)& (0+255),b
  3961  002AA6  0E7F               	movlw	127
  3962  002AA8  1575               	andwf	(___flge@ff2+3)& (0+255),w,b
  3963  002AAA  6F79               	movwf	(??___flge+3)& (0+255),b
  3964  002AAC  5176               	movf	??___flge& (0+255),w,b
  3965  002AAE  1177               	iorwf	(??___flge+1)& (0+255),w,b
  3966  002AB0  1178               	iorwf	(??___flge+2)& (0+255),w,b
  3967  002AB2  1179               	iorwf	(??___flge+3)& (0+255),w,b
  3968  002AB4  A4D8               	btfss	status,2,c
  3969  002AB6  EF5F  F015         	goto	u5431
  3970  002ABA  EF61  F015         	goto	u5430
  3971  002ABE                     u5431:
  3972  002ABE  EF69  F015         	goto	l6324
  3973  002AC2                     u5430:
  3974  002AC2                     
  3975                           ; BSR set to: 0
  3976  002AC2  0E00               	movlw	0
  3977  002AC4  6F72               	movwf	___flge@ff2& (0+255),b
  3978  002AC6  0E00               	movlw	0
  3979  002AC8  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  3980  002ACA  0E00               	movlw	0
  3981  002ACC  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  3982  002ACE  0E00               	movlw	0
  3983  002AD0  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  3984  002AD2                     l6324:
  3985                           
  3986                           ; BSR set to: 0
  3987  002AD2  AF71               	btfss	(___flge@ff1+3)& (0+255),7,b
  3988  002AD4  EF6E  F015         	goto	u5441
  3989  002AD8  EF70  F015         	goto	u5440
  3990  002ADC                     u5441:
  3991  002ADC  EF79  F015         	goto	l6328
  3992  002AE0                     u5440:
  3993  002AE0                     
  3994                           ; BSR set to: 0
  3995  002AE0  6D6E               	negf	___flge@ff1& (0+255),b
  3996  002AE2  1F6F               	comf	(___flge@ff1+1)& (0+255),f,b
  3997  002AE4  B0D8               	btfsc	status,0,c
  3998  002AE6  2B6F               	incf	(___flge@ff1+1)& (0+255),f,b
  3999  002AE8  1F70               	comf	(___flge@ff1+2)& (0+255),f,b
  4000  002AEA  B0D8               	btfsc	status,0,c
  4001  002AEC  2B70               	incf	(___flge@ff1+2)& (0+255),f,b
  4002  002AEE  0E80               	movlw	128
  4003  002AF0  5771               	subfwb	(___flge@ff1+3)& (0+255),f,b
  4004  002AF2                     l6328:
  4005                           
  4006                           ; BSR set to: 0
  4007  002AF2  AF75               	btfss	(___flge@ff2+3)& (0+255),7,b
  4008  002AF4  EF7E  F015         	goto	u5451
  4009  002AF8  EF80  F015         	goto	u5450
  4010  002AFC                     u5451:
  4011  002AFC  EF89  F015         	goto	l1648
  4012  002B00                     u5450:
  4013  002B00                     
  4014                           ; BSR set to: 0
  4015  002B00  6D72               	negf	___flge@ff2& (0+255),b
  4016  002B02  1F73               	comf	(___flge@ff2+1)& (0+255),f,b
  4017  002B04  B0D8               	btfsc	status,0,c
  4018  002B06  2B73               	incf	(___flge@ff2+1)& (0+255),f,b
  4019  002B08  1F74               	comf	(___flge@ff2+2)& (0+255),f,b
  4020  002B0A  B0D8               	btfsc	status,0,c
  4021  002B0C  2B74               	incf	(___flge@ff2+2)& (0+255),f,b
  4022  002B0E  0E80               	movlw	128
  4023  002B10  5775               	subfwb	(___flge@ff2+3)& (0+255),f,b
  4024  002B12                     l1648:
  4025                           
  4026                           ; BSR set to: 0
  4027  002B12  0E00               	movlw	0
  4028  002B14  1B6E               	xorwf	___flge@ff1& (0+255),f,b
  4029  002B16  0E00               	movlw	0
  4030  002B18  1B6F               	xorwf	(___flge@ff1+1)& (0+255),f,b
  4031  002B1A  0E00               	movlw	0
  4032  002B1C  1B70               	xorwf	(___flge@ff1+2)& (0+255),f,b
  4033  002B1E  0E80               	movlw	128
  4034  002B20  1B71               	xorwf	(___flge@ff1+3)& (0+255),f,b
  4035  002B22  0E00               	movlw	0
  4036  002B24  1B72               	xorwf	___flge@ff2& (0+255),f,b
  4037  002B26  0E00               	movlw	0
  4038  002B28  1B73               	xorwf	(___flge@ff2+1)& (0+255),f,b
  4039  002B2A  0E00               	movlw	0
  4040  002B2C  1B74               	xorwf	(___flge@ff2+2)& (0+255),f,b
  4041  002B2E  0E80               	movlw	128
  4042  002B30  1B75               	xorwf	(___flge@ff2+3)& (0+255),f,b
  4043  002B32  5172               	movf	___flge@ff2& (0+255),w,b
  4044  002B34  5D6E               	subwf	___flge@ff1& (0+255),w,b
  4045  002B36  5173               	movf	(___flge@ff2+1)& (0+255),w,b
  4046  002B38  596F               	subwfb	(___flge@ff1+1)& (0+255),w,b
  4047  002B3A  5174               	movf	(___flge@ff2+2)& (0+255),w,b
  4048  002B3C  5970               	subwfb	(___flge@ff1+2)& (0+255),w,b
  4049  002B3E  5175               	movf	(___flge@ff2+3)& (0+255),w,b
  4050  002B40  5971               	subwfb	(___flge@ff1+3)& (0+255),w,b
  4051  002B42  B0D8               	btfsc	status,0,c
  4052  002B44  EFA6  F015         	goto	u5461
  4053  002B48  EFA8  F015         	goto	u5460
  4054  002B4C                     u5461:
  4055  002B4C  EFAB  F015         	goto	l6334
  4056  002B50                     u5460:
  4057  002B50                     
  4058                           ; BSR set to: 0
  4059  002B50  90D8               	bcf	status,0,c
  4060  002B52  EFAC  F015         	goto	l1653
  4061  002B56                     l6334:
  4062                           
  4063                           ; BSR set to: 0
  4064  002B56  80D8               	bsf	status,0,c
  4065  002B58                     l1653:
  4066                           
  4067                           ; BSR set to: 0
  4068  002B58  0012               	return		;funcret
  4069  002B5A                     __end_of___flge:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _calcSteering *****************
  4073 ;; Defined at:
  4074 ;;		line 200 in file "main.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  delta           2   19[BANK0 ] short 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;Total ram usage:        4 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; Hardware stack levels required when called: 10
  4095 ;; This function calls:
  4096 ;;		_setSteering
  4097 ;; This function is called by:
  4098 ;;		_loop
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text21
  4103  002468                     __ptext21:
  4104                           	callstack 0
  4105  002468                     _calcSteering:
  4106                           	callstack 19
  4107  002468                     
  4108                           ;main.c: 201:     int16_t delta = (int16_t)(distLeft - distRight ) - (int16_t)((0) * 1.4
      +                          142135);
  4109  002468  502C               	movf	_distRight^0,w,c	;volatile
  4110  00246A  5C2E               	subwf	_distLeft^0,w,c	;volatile
  4111  00246C  0100               	movlb	0	; () banked
  4112  00246E  6F73               	movwf	calcSteering@delta& (0+255),b
  4113  002470  502D               	movf	(_distRight+1)^0,w,c	;volatile
  4114  002472  582F               	subwfb	(_distLeft+1)^0,w,c	;volatile
  4115  002474  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4116                           
  4117                           ;main.c: 205:     switch (driveMode){
  4118  002476  EF65  F012         	goto	l6494
  4119  00247A                     l1305:
  4120  00247A                     l6484:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;main.c: 210:             if(delta > (40)){
  4124  00247A  BF74               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  4125  00247C  EF49  F012         	goto	u5711
  4126  002480  5174               	movf	(calcSteering@delta+1)& (0+255),w,b
  4127  002482  E109               	bnz	u5710
  4128  002484  0E29               	movlw	41
  4129  002486  5D73               	subwf	calcSteering@delta& (0+255),w,b
  4130  002488  A0D8               	btfss	status,0,c
  4131  00248A  EF49  F012         	goto	u5711
  4132  00248E  EF4B  F012         	goto	u5710
  4133  002492                     u5711:
  4134  002492  EF51  F012         	goto	l6488
  4135  002496                     u5710:
  4136  002496                     
  4137                           ; BSR set to: 0
  4138                           ;main.c: 211:                 delta = (40);
  4139  002496  0E00               	movlw	0
  4140  002498  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4141  00249A  0E28               	movlw	40
  4142  00249C  6F73               	movwf	calcSteering@delta& (0+255),b
  4143                           
  4144                           ;main.c: 212:             }else if(delta < -(40)){
  4145  00249E  EFC8  F012         	goto	l6518
  4146  0024A2                     l6488:
  4147                           
  4148                           ; BSR set to: 0
  4149  0024A2  AF74               	btfss	(calcSteering@delta+1)& (0+255),7,b
  4150  0024A4  EF5D  F012         	goto	u5721
  4151  0024A8  0ED8               	movlw	216
  4152  0024AA  5D73               	subwf	calcSteering@delta& (0+255),w,b
  4153  0024AC  0EFF               	movlw	255
  4154  0024AE  5974               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  4155  0024B0  B0D8               	btfsc	status,0,c
  4156  0024B2  EF5D  F012         	goto	u5721
  4157  0024B6  EF5F  F012         	goto	u5720
  4158  0024BA                     u5721:
  4159  0024BA  EF82  F012         	goto	l1310
  4160  0024BE                     u5720:
  4161  0024BE                     
  4162                           ; BSR set to: 0
  4163                           ;main.c: 213:                 delta = -(40);
  4164  0024BE  0EFF               	movlw	255
  4165  0024C0  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4166  0024C2  0ED8               	movlw	216
  4167  0024C4  6F73               	movwf	calcSteering@delta& (0+255),b
  4168  0024C6  EFC8  F012         	goto	l6518
  4169  0024CA                     l6494:
  4170                           
  4171                           ; BSR set to: 0
  4172  0024CA  5035               	movf	_driveMode^0,w,c
  4173  0024CC  6F71               	movwf	??_calcSteering& (0+255),b
  4174  0024CE  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  4175                           
  4176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4177                           ; Switch size 1, requested type "simple"
  4178                           ; Number of cases is 1, Range of values is 0 to 0
  4179                           ; switch strategies available:
  4180                           ; Name         Instructions Cycles
  4181                           ; simple_byte            4     3 (average)
  4182                           ;	Chosen strategy is simple_byte
  4183  0024D0  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  4184  0024D2  0A00               	xorlw	0	; case 0
  4185  0024D4  B4D8               	btfsc	status,2,c
  4186  0024D6  EF6F  F012         	goto	l6828
  4187  0024DA  EFC8  F012         	goto	l6518
  4188  0024DE                     l6828:
  4189                           
  4190                           ; BSR set to: 0
  4191                           ; Switch size 1, requested type "simple"
  4192                           ; Number of cases is 4, Range of values is 0 to 5
  4193                           ; switch strategies available:
  4194                           ; Name         Instructions Cycles
  4195                           ; simple_byte           13     7 (average)
  4196                           ;	Chosen strategy is simple_byte
  4197  0024DE  5171               	movf	??_calcSteering& (0+255),w,b
  4198  0024E0  0A00               	xorlw	0	; case 0
  4199  0024E2  B4D8               	btfsc	status,2,c
  4200  0024E4  EF3D  F012         	goto	l6484
  4201  0024E8  0A01               	xorlw	1	; case 1
  4202  0024EA  B4D8               	btfsc	status,2,c
  4203  0024EC  EF3D  F012         	goto	l1305
  4204  0024F0  0A05               	xorlw	5	; case 4
  4205  0024F2  B4D8               	btfsc	status,2,c
  4206  0024F4  EF3D  F012         	goto	l6484
  4207  0024F8  0A01               	xorlw	1	; case 5
  4208  0024FA  B4D8               	btfsc	status,2,c
  4209  0024FC  EF3D  F012         	goto	l6484
  4210  002500  EFC8  F012         	goto	l6518
  4211  002504                     l1310:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;main.c: 220:     switch (driveMode){
  4215  002504  EFC8  F012         	goto	l6518
  4216  002508                     l6496:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;main.c: 222:             setSteering(delta, Ratio);
  4220  002508  C073  F068         	movff	calcSteering@delta,setSteering@steering
  4221  00250C  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4222  002510  0E02               	movlw	2
  4223  002512  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4224  002514  EC5F  F011         	call	_setSteering	;wreg free
  4225                           
  4226                           ;main.c: 223:             break;
  4227  002518  EFED  F012         	goto	l1324
  4228  00251C                     l6498:
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;main.c: 225:             setSteering(delta, Front);
  4232  00251C  C073  F068         	movff	calcSteering@delta,setSteering@steering
  4233  002520  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4234  002524  0E03               	movlw	3
  4235  002526  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4236  002528  EC5F  F011         	call	_setSteering	;wreg free
  4237                           
  4238                           ;main.c: 226:             break;
  4239  00252C  EFED  F012         	goto	l1324
  4240  002530                     l6500:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;main.c: 228:             setSteering((65), Inverted);
  4244  002530  0E00               	movlw	0
  4245  002532  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4246  002534  0E41               	movlw	65
  4247  002536  6F68               	movwf	setSteering@steering& (0+255),b
  4248  002538  0E00               	movlw	0
  4249  00253A  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4250  00253C  EC5F  F011         	call	_setSteering	;wreg free
  4251                           
  4252                           ;main.c: 229:             break;
  4253  002540  EFED  F012         	goto	l1324
  4254  002544                     l6504:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;main.c: 234:             if(curveMode == InCurve){
  4258  002544  0E02               	movlw	2
  4259  002546  1834               	xorwf	_curveMode^0,w,c
  4260  002548  A4D8               	btfss	status,2,c
  4261  00254A  EFA9  F012         	goto	u5731
  4262  00254E  EFAB  F012         	goto	u5730
  4263  002552                     u5731:
  4264  002552  EF8E  F012         	goto	l6498
  4265  002556                     u5730:
  4266  002556                     
  4267                           ; BSR set to: 0
  4268                           ;main.c: 235:                 setSteering((45), Ratio);
  4269  002556  0E00               	movlw	0
  4270  002558  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4271  00255A  0E2D               	movlw	45
  4272  00255C  6F68               	movwf	setSteering@steering& (0+255),b
  4273  00255E  0E02               	movlw	2
  4274  002560  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4275  002562  EC5F  F011         	call	_setSteering	;wreg free
  4276                           
  4277                           ;main.c: 236:             } else {
  4278  002566  EFED  F012         	goto	l1324
  4279  00256A                     l6510:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;main.c: 241:             if(curveMode == InCurve){
  4283  00256A  0E02               	movlw	2
  4284  00256C  1834               	xorwf	_curveMode^0,w,c
  4285  00256E  A4D8               	btfss	status,2,c
  4286  002570  EFBC  F012         	goto	u5741
  4287  002574  EFBE  F012         	goto	u5740
  4288  002578                     u5741:
  4289  002578  EF8E  F012         	goto	l6498
  4290  00257C                     u5740:
  4291  00257C                     
  4292                           ; BSR set to: 0
  4293                           ;main.c: 242:                 setSteering(-(45), Ratio);
  4294  00257C  0EFF               	movlw	255
  4295  00257E  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4296  002580  0ED3               	movlw	211
  4297  002582  6F68               	movwf	setSteering@steering& (0+255),b
  4298  002584  0E02               	movlw	2
  4299  002586  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4300  002588  EC5F  F011         	call	_setSteering	;wreg free
  4301                           
  4302                           ;main.c: 243:             } else {
  4303  00258C  EFED  F012         	goto	l1324
  4304  002590                     l6518:
  4305                           
  4306                           ; BSR set to: 0
  4307  002590  5035               	movf	_driveMode^0,w,c
  4308  002592  6F71               	movwf	??_calcSteering& (0+255),b
  4309  002594  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  4310                           
  4311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4312                           ; Switch size 1, requested type "simple"
  4313                           ; Number of cases is 1, Range of values is 0 to 0
  4314                           ; switch strategies available:
  4315                           ; Name         Instructions Cycles
  4316                           ; simple_byte            4     3 (average)
  4317                           ;	Chosen strategy is simple_byte
  4318  002596  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  4319  002598  0A00               	xorlw	0	; case 0
  4320  00259A  B4D8               	btfsc	status,2,c
  4321  00259C  EFD2  F012         	goto	l6830
  4322  0025A0  EFED  F012         	goto	l1324
  4323  0025A4                     l6830:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ; Switch size 1, requested type "simple"
  4327                           ; Number of cases is 6, Range of values is 0 to 5
  4328                           ; switch strategies available:
  4329                           ; Name         Instructions Cycles
  4330                           ; simple_byte           19    10 (average)
  4331                           ;	Chosen strategy is simple_byte
  4332  0025A4  5171               	movf	??_calcSteering& (0+255),w,b
  4333  0025A6  0A00               	xorlw	0	; case 0
  4334  0025A8  B4D8               	btfsc	status,2,c
  4335  0025AA  EF8E  F012         	goto	l6498
  4336  0025AE  0A01               	xorlw	1	; case 1
  4337  0025B0  B4D8               	btfsc	status,2,c
  4338  0025B2  EF84  F012         	goto	l6496
  4339  0025B6  0A03               	xorlw	3	; case 2
  4340  0025B8  B4D8               	btfsc	status,2,c
  4341  0025BA  EF98  F012         	goto	l6500
  4342  0025BE  0A01               	xorlw	1	; case 3
  4343  0025C0  B4D8               	btfsc	status,2,c
  4344  0025C2  EF98  F012         	goto	l6500
  4345  0025C6  0A07               	xorlw	7	; case 4
  4346  0025C8  B4D8               	btfsc	status,2,c
  4347  0025CA  EFA2  F012         	goto	l6504
  4348  0025CE  0A01               	xorlw	1	; case 5
  4349  0025D0  B4D8               	btfsc	status,2,c
  4350  0025D2  EFB5  F012         	goto	l6510
  4351  0025D6  EFED  F012         	goto	l1324
  4352  0025DA                     l1324:
  4353  0025DA  0012               	return		;funcret
  4354  0025DC                     __end_of_calcSteering:
  4355                           	callstack 0
  4356                           
  4357 ;; *************** function _setSteering *****************
  4358 ;; Defined at:
  4359 ;;		line 356 in file "main.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  steering        2    8[BANK0 ] short 
  4362 ;;  steeringMode    1   10[BANK0 ] enum E17299
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  steeringB       2   15[BANK0 ] short 
  4365 ;;  steeringF       2   13[BANK0 ] short 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4375 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;Total ram usage:        9 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 9
  4382 ;; This function calls:
  4383 ;;		_PWM5_LoadDutyValue
  4384 ;;		_PWM6_LoadDutyValue
  4385 ;;		___awdiv
  4386 ;; This function is called by:
  4387 ;;		_loop
  4388 ;;		_checkBatt
  4389 ;;		_startAccell
  4390 ;;		_calcSteering
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text22
  4395  0022BE                     __ptext22:
  4396                           	callstack 0
  4397  0022BE                     _setSteering:
  4398                           	callstack 19
  4399  0022BE  0E00               	movlw	0
  4400  0022C0  0100               	movlb	0	; () banked
  4401  0022C2  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4402  0022C4  0E00               	movlw	0
  4403  0022C6  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4404                           
  4405                           ;main.c: 358:     switch(steeringMode){
  4406  0022C8  EFB4  F011         	goto	l5920
  4407  0022CC                     l1367:
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;main.c: 360:             steeringF = (+steering);
  4411  0022CC  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4412  0022D0  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4413                           
  4414                           ;main.c: 361:             steeringB = -steering;
  4415  0022D4  C068  F06B         	movff	setSteering@steering,??_setSteering
  4416  0022D8  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4417  0022DC  1F6B               	comf	??_setSteering& (0+255),f,b
  4418  0022DE  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4419  0022E0  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4420  0022E2  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4421  0022E4  C06B  F06F         	movff	??_setSteering,setSteering@steeringB
  4422  0022E8  C06C  F070         	movff	??_setSteering+1,setSteering@steeringB+1
  4423                           
  4424                           ;main.c: 362:             break;
  4425  0022EC  EFD5  F011         	goto	l5922
  4426  0022F0                     l1369:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;main.c: 364:             steeringF = (+steering);
  4430  0022F0  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4431  0022F4  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4432                           
  4433                           ;main.c: 365:             steeringB = (+steering);
  4434  0022F8  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4435  0022FC  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4436                           
  4437                           ;main.c: 366:             break;
  4438  002300  EFD5  F011         	goto	l5922
  4439  002304                     l1370:
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;main.c: 368:             steeringF = (+steering);
  4443  002304  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4444  002308  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4445  00230C                     
  4446                           ; BSR set to: 0
  4447                           ;main.c: 369:             steeringB = (-steering / (2));
  4448  00230C  C068  F060         	movff	setSteering@steering,___awdiv@dividend
  4449  002310  C069  F061         	movff	setSteering@steering+1,___awdiv@dividend+1
  4450  002314  0EFF               	movlw	255
  4451  002316  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4452  002318  0EFE               	movlw	254
  4453  00231A  6F62               	movwf	___awdiv@divisor& (0+255),b
  4454  00231C  ECCB  F017         	call	___awdiv	;wreg free
  4455  002320  C060  F06F         	movff	?___awdiv,setSteering@steeringB
  4456  002324  C061  F070         	movff	?___awdiv+1,setSteering@steeringB+1
  4457                           
  4458                           ;main.c: 370:             break;
  4459  002328  EFD5  F011         	goto	l5922
  4460  00232C                     l1371:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;main.c: 372:             steeringF = (+steering);
  4464  00232C  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4465  002330  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4466  002334                     
  4467                           ; BSR set to: 0
  4468                           ;main.c: 373:             steeringB = 0;
  4469  002334  0E00               	movlw	0
  4470  002336  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4471  002338  0E00               	movlw	0
  4472  00233A  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4473                           
  4474                           ;main.c: 374:             break;
  4475  00233C  EFD5  F011         	goto	l5922
  4476  002340                     l5912:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;main.c: 376:             steeringF = 0;
  4480  002340  0E00               	movlw	0
  4481  002342  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4482  002344  0E00               	movlw	0
  4483  002346  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4484  002348                     
  4485                           ; BSR set to: 0
  4486                           ;main.c: 377:             steeringB = (+steering);
  4487  002348  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4488  00234C  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4489                           
  4490                           ;main.c: 378:             break;
  4491  002350  EFD5  F011         	goto	l5922
  4492  002354                     l5916:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;main.c: 380:             steeringF = 0;
  4496  002354  0E00               	movlw	0
  4497  002356  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4498  002358  0E00               	movlw	0
  4499  00235A  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4500                           
  4501                           ;main.c: 381:             steeringB = 0;
  4502  00235C  0E00               	movlw	0
  4503  00235E  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4504  002360  0E00               	movlw	0
  4505  002362  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4506                           
  4507                           ;main.c: 382:             break;
  4508  002364  EFD5  F011         	goto	l5922
  4509  002368                     l5920:
  4510                           
  4511                           ; BSR set to: 0
  4512  002368  516A               	movf	setSteering@steeringMode& (0+255),w,b
  4513  00236A  6F6B               	movwf	??_setSteering& (0+255),b
  4514  00236C  6B6C               	clrf	(??_setSteering+1)& (0+255),b
  4515                           
  4516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4517                           ; Switch size 1, requested type "simple"
  4518                           ; Number of cases is 1, Range of values is 0 to 0
  4519                           ; switch strategies available:
  4520                           ; Name         Instructions Cycles
  4521                           ; simple_byte            4     3 (average)
  4522                           ;	Chosen strategy is simple_byte
  4523  00236E  516C               	movf	(??_setSteering+1)& (0+255),w,b
  4524  002370  0A00               	xorlw	0	; case 0
  4525  002372  B4D8               	btfsc	status,2,c
  4526  002374  EFBE  F011         	goto	l6832
  4527  002378  EFAA  F011         	goto	l5916
  4528  00237C                     l6832:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ; Switch size 1, requested type "simple"
  4532                           ; Number of cases is 5, Range of values is 0 to 4
  4533                           ; switch strategies available:
  4534                           ; Name         Instructions Cycles
  4535                           ; simple_byte           16     9 (average)
  4536                           ;	Chosen strategy is simple_byte
  4537  00237C  516B               	movf	??_setSteering& (0+255),w,b
  4538  00237E  0A00               	xorlw	0	; case 0
  4539  002380  B4D8               	btfsc	status,2,c
  4540  002382  EF66  F011         	goto	l1367
  4541  002386  0A01               	xorlw	1	; case 1
  4542  002388  B4D8               	btfsc	status,2,c
  4543  00238A  EF78  F011         	goto	l1369
  4544  00238E  0A03               	xorlw	3	; case 2
  4545  002390  B4D8               	btfsc	status,2,c
  4546  002392  EF82  F011         	goto	l1370
  4547  002396  0A01               	xorlw	1	; case 3
  4548  002398  B4D8               	btfsc	status,2,c
  4549  00239A  EF96  F011         	goto	l1371
  4550  00239E  0A07               	xorlw	7	; case 4
  4551  0023A0  B4D8               	btfsc	status,2,c
  4552  0023A2  EFA0  F011         	goto	l5912
  4553  0023A6  EFAA  F011         	goto	l5916
  4554  0023AA                     l5922:
  4555                           
  4556                           ;main.c: 385:     if(steeringF > ((65))){
  4557  0023AA  0100               	movlb	0	; () banked
  4558  0023AC  BF6E               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  4559  0023AE  EFE2  F011         	goto	u4741
  4560  0023B2  516E               	movf	(setSteering@steeringF+1)& (0+255),w,b
  4561  0023B4  E109               	bnz	u4740
  4562  0023B6  0E42               	movlw	66
  4563  0023B8  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4564  0023BA  A0D8               	btfss	status,0,c
  4565  0023BC  EFE2  F011         	goto	u4741
  4566  0023C0  EFE4  F011         	goto	u4740
  4567  0023C4                     u4741:
  4568  0023C4  EFEA  F011         	goto	l5926
  4569  0023C8                     u4740:
  4570  0023C8                     
  4571                           ; BSR set to: 0
  4572                           ;main.c: 386:         steeringF = ((65));
  4573  0023C8  0E00               	movlw	0
  4574  0023CA  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4575  0023CC  0E41               	movlw	65
  4576  0023CE  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4577                           
  4578                           ;main.c: 387:     } else if(steeringF < (-(65))){
  4579  0023D0  EFFC  F011         	goto	l5930
  4580  0023D4                     l5926:
  4581                           
  4582                           ; BSR set to: 0
  4583  0023D4  AF6E               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  4584  0023D6  EFF6  F011         	goto	u4751
  4585  0023DA  0EBF               	movlw	191
  4586  0023DC  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4587  0023DE  0EFF               	movlw	255
  4588  0023E0  596E               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  4589  0023E2  B0D8               	btfsc	status,0,c
  4590  0023E4  EFF6  F011         	goto	u4751
  4591  0023E8  EFF8  F011         	goto	u4750
  4592  0023EC                     u4751:
  4593  0023EC  EFFC  F011         	goto	l5930
  4594  0023F0                     u4750:
  4595  0023F0                     
  4596                           ; BSR set to: 0
  4597                           ;main.c: 388:         steeringF = (-(65));
  4598  0023F0  0EFF               	movlw	255
  4599  0023F2  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4600  0023F4  0EBF               	movlw	191
  4601  0023F6  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4602  0023F8                     l5930:
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;main.c: 391:     if(steeringB > ((40))){
  4606  0023F8  BF70               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  4607  0023FA  EF08  F012         	goto	u4761
  4608  0023FE  5170               	movf	(setSteering@steeringB+1)& (0+255),w,b
  4609  002400  E109               	bnz	u4760
  4610  002402  0E29               	movlw	41
  4611  002404  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4612  002406  A0D8               	btfss	status,0,c
  4613  002408  EF08  F012         	goto	u4761
  4614  00240C  EF0A  F012         	goto	u4760
  4615  002410                     u4761:
  4616  002410  EF10  F012         	goto	l5934
  4617  002414                     u4760:
  4618  002414                     
  4619                           ; BSR set to: 0
  4620                           ;main.c: 392:         steeringB = ((40));
  4621  002414  0E00               	movlw	0
  4622  002416  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4623  002418  0E28               	movlw	40
  4624  00241A  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4625                           
  4626                           ;main.c: 393:     } else if(steeringB < (-(40))){
  4627  00241C  EF22  F012         	goto	l5938
  4628  002420                     l5934:
  4629                           
  4630                           ; BSR set to: 0
  4631  002420  AF70               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  4632  002422  EF1C  F012         	goto	u4771
  4633  002426  0ED8               	movlw	216
  4634  002428  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4635  00242A  0EFF               	movlw	255
  4636  00242C  5970               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  4637  00242E  B0D8               	btfsc	status,0,c
  4638  002430  EF1C  F012         	goto	u4771
  4639  002434  EF1E  F012         	goto	u4770
  4640  002438                     u4771:
  4641  002438  EF22  F012         	goto	l5938
  4642  00243C                     u4770:
  4643  00243C                     
  4644                           ; BSR set to: 0
  4645                           ;main.c: 394:         steeringB = (-(40));
  4646  00243C  0EFF               	movlw	255
  4647  00243E  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4648  002440  0ED8               	movlw	216
  4649  002442  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4650  002444                     l5938:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;main.c: 398:     PWM6_LoadDutyValue((uint16_t)((352) + steeringF));
  4654  002444  0E60               	movlw	96
  4655  002446  256D               	addwf	setSteering@steeringF& (0+255),w,b
  4656  002448  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  4657  00244A  0E01               	movlw	1
  4658  00244C  216E               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  4659  00244E  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  4660  002450  EC29  F01D         	call	_PWM6_LoadDutyValue	;wreg free
  4661  002454                     
  4662                           ;main.c: 399:     PWM5_LoadDutyValue((uint16_t)((357) + steeringB));
  4663  002454  0E65               	movlw	101
  4664  002456  0100               	movlb	0	; () banked
  4665  002458  256F               	addwf	setSteering@steeringB& (0+255),w,b
  4666  00245A  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  4667  00245C  0E01               	movlw	1
  4668  00245E  2170               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  4669  002460  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  4670  002462  EC44  F01D         	call	_PWM5_LoadDutyValue	;wreg free
  4671  002466  0012               	return		;funcret
  4672  002468                     __end_of_setSteering:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function ___awdiv *****************
  4676 ;; Defined at:
  4677 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  dividend        2    0[BANK0 ] int 
  4680 ;;  divisor         2    2[BANK0 ] int 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  quotient        2    6[BANK0 ] int 
  4683 ;;  sign            1    5[BANK0 ] unsigned char 
  4684 ;;  counter         1    4[BANK0 ] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  2    0[BANK0 ] int 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4695 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4697 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;Total ram usage:        8 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 8
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_setSteering
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text23
  4709  002F96                     __ptext23:
  4710                           	callstack 0
  4711  002F96                     ___awdiv:
  4712                           	callstack 19
  4713  002F96  0E00               	movlw	0
  4714  002F98  0100               	movlb	0	; () banked
  4715  002F9A  6F65               	movwf	___awdiv@sign& (0+255),b
  4716  002F9C                     
  4717                           ; BSR set to: 0
  4718  002F9C  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  4719  002F9E  EFD5  F017         	goto	u4680
  4720  002FA2  EFD3  F017         	goto	u4681
  4721  002FA6                     u4681:
  4722  002FA6  EFDB  F017         	goto	l5866
  4723  002FAA                     u4680:
  4724  002FAA                     
  4725                           ; BSR set to: 0
  4726  002FAA  6D62               	negf	___awdiv@divisor& (0+255),b
  4727  002FAC  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4728  002FAE  B0D8               	btfsc	status,0,c
  4729  002FB0  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4730  002FB2                     
  4731                           ; BSR set to: 0
  4732  002FB2  0E01               	movlw	1
  4733  002FB4  6F65               	movwf	___awdiv@sign& (0+255),b
  4734  002FB6                     l5866:
  4735                           
  4736                           ; BSR set to: 0
  4737  002FB6  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  4738  002FB8  EFE2  F017         	goto	u4690
  4739  002FBC  EFE0  F017         	goto	u4691
  4740  002FC0                     u4691:
  4741  002FC0  EFE8  F017         	goto	l5872
  4742  002FC4                     u4690:
  4743  002FC4                     
  4744                           ; BSR set to: 0
  4745  002FC4  6D60               	negf	___awdiv@dividend& (0+255),b
  4746  002FC6  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4747  002FC8  B0D8               	btfsc	status,0,c
  4748  002FCA  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4749  002FCC                     
  4750                           ; BSR set to: 0
  4751  002FCC  0E01               	movlw	1
  4752  002FCE  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4753  002FD0                     l5872:
  4754                           
  4755                           ; BSR set to: 0
  4756  002FD0  0E00               	movlw	0
  4757  002FD2  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4758  002FD4  0E00               	movlw	0
  4759  002FD6  6F66               	movwf	___awdiv@quotient& (0+255),b
  4760  002FD8                     
  4761                           ; BSR set to: 0
  4762  002FD8  5162               	movf	___awdiv@divisor& (0+255),w,b
  4763  002FDA  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4764  002FDC  B4D8               	btfsc	status,2,c
  4765  002FDE  EFF3  F017         	goto	u4701
  4766  002FE2  EFF5  F017         	goto	u4700
  4767  002FE6                     u4701:
  4768  002FE6  EF1D  F018         	goto	l5894
  4769  002FEA                     u4700:
  4770  002FEA                     
  4771                           ; BSR set to: 0
  4772  002FEA  0E01               	movlw	1
  4773  002FEC  6F64               	movwf	___awdiv@counter& (0+255),b
  4774  002FEE  EFFD  F017         	goto	l5880
  4775  002FF2                     l5878:
  4776                           
  4777                           ; BSR set to: 0
  4778  002FF2  90D8               	bcf	status,0,c
  4779  002FF4  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4780  002FF6  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4781  002FF8  2B64               	incf	___awdiv@counter& (0+255),f,b
  4782  002FFA                     l5880:
  4783                           
  4784                           ; BSR set to: 0
  4785  002FFA  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4786  002FFC  EF02  F018         	goto	u4711
  4787  003000  EF04  F018         	goto	u4710
  4788  003004                     u4711:
  4789  003004  EFF9  F017         	goto	l5878
  4790  003008                     u4710:
  4791  003008                     l5882:
  4792                           
  4793                           ; BSR set to: 0
  4794  003008  90D8               	bcf	status,0,c
  4795  00300A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4796  00300C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4797  00300E                     
  4798                           ; BSR set to: 0
  4799  00300E  5162               	movf	___awdiv@divisor& (0+255),w,b
  4800  003010  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4801  003012  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4802  003014  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4803  003016  A0D8               	btfss	status,0,c
  4804  003018  EF10  F018         	goto	u4721
  4805  00301C  EF12  F018         	goto	u4720
  4806  003020                     u4721:
  4807  003020  EF17  F018         	goto	l5890
  4808  003024                     u4720:
  4809  003024                     
  4810                           ; BSR set to: 0
  4811  003024  5162               	movf	___awdiv@divisor& (0+255),w,b
  4812  003026  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4813  003028  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4814  00302A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4815  00302C                     
  4816                           ; BSR set to: 0
  4817  00302C  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4818  00302E                     l5890:
  4819                           
  4820                           ; BSR set to: 0
  4821  00302E  90D8               	bcf	status,0,c
  4822  003030  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4823  003032  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4824  003034                     
  4825                           ; BSR set to: 0
  4826  003034  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4827  003036  EF04  F018         	goto	l5882
  4828  00303A                     l5894:
  4829                           
  4830                           ; BSR set to: 0
  4831  00303A  5165               	movf	___awdiv@sign& (0+255),w,b
  4832  00303C  B4D8               	btfsc	status,2,c
  4833  00303E  EF23  F018         	goto	u4731
  4834  003042  EF25  F018         	goto	u4730
  4835  003046                     u4731:
  4836  003046  EF29  F018         	goto	l5898
  4837  00304A                     u4730:
  4838  00304A                     
  4839                           ; BSR set to: 0
  4840  00304A  6D66               	negf	___awdiv@quotient& (0+255),b
  4841  00304C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4842  00304E  B0D8               	btfsc	status,0,c
  4843  003050  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4844  003052                     l5898:
  4845                           
  4846                           ; BSR set to: 0
  4847  003052  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4848  003056  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4849  00305A                     
  4850                           ; BSR set to: 0
  4851  00305A  0012               	return		;funcret
  4852  00305C                     __end_of___awdiv:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _PWM6_LoadDutyValue *****************
  4856 ;; Defined at:
  4857 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;Total ram usage:        4 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; Hardware stack levels required when called: 8
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_setSteering
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text24
  4886  003A52                     __ptext24:
  4887                           	callstack 0
  4888  003A52                     _PWM6_LoadDutyValue:
  4889                           	callstack 19
  4890  003A52                     
  4891                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4892  003A52  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4893  003A56  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  4894  003A5A  0100               	movlb	0	; () banked
  4895  003A5C  90D8               	bcf	status,0,c
  4896  003A5E  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4897  003A60  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4898  003A62  90D8               	bcf	status,0,c
  4899  003A64  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4900  003A66  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4901  003A68  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  4902  003A6A  6E69               	movwf	105,c	;volatile
  4903                           
  4904                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  4905  003A6C  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4906  003A70  0E03               	movlw	3
  4907  003A72  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
  4908  003A74  0E06               	movlw	6
  4909  003A76  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
  4910  003A78                     u4605:
  4911  003A78  90D8               	bcf	status,0,c
  4912  003A7A  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4913  003A7C  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4914  003A7E  EF3C  F01D         	goto	u4605
  4915  003A82  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  4916  003A84  6E68               	movwf	104,c	;volatile
  4917  003A86                     
  4918                           ; BSR set to: 0
  4919  003A86  0012               	return		;funcret
  4920  003A88                     __end_of_PWM6_LoadDutyValue:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _PWM5_LoadDutyValue *****************
  4924 ;; Defined at:
  4925 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;Total ram usage:        4 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 8
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_setSteering
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text25
  4954  003A88                     __ptext25:
  4955                           	callstack 0
  4956  003A88                     _PWM5_LoadDutyValue:
  4957                           	callstack 19
  4958  003A88                     
  4959                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4960  003A88  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4961  003A8C  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  4962  003A90  0100               	movlb	0	; () banked
  4963  003A92  90D8               	bcf	status,0,c
  4964  003A94  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4965  003A96  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4966  003A98  90D8               	bcf	status,0,c
  4967  003A9A  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4968  003A9C  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4969  003A9E  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  4970  003AA0  6E6D               	movwf	109,c	;volatile
  4971                           
  4972                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  4973  003AA2  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4974  003AA6  0E03               	movlw	3
  4975  003AA8  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
  4976  003AAA  0E06               	movlw	6
  4977  003AAC  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
  4978  003AAE                     u4595:
  4979  003AAE  90D8               	bcf	status,0,c
  4980  003AB0  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4981  003AB2  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4982  003AB4  EF57  F01D         	goto	u4595
  4983  003AB8  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  4984  003ABA  6E6C               	movwf	108,c	;volatile
  4985  003ABC                     
  4986                           ; BSR set to: 0
  4987  003ABC  0012               	return		;funcret
  4988  003ABE                     __end_of_PWM5_LoadDutyValue:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _calcSpeed *****************
  4992 ;; Defined at:
  4993 ;;		line 250 in file "main.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  speed           2   67[BANK0 ] short 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;Total ram usage:        6 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; Hardware stack levels required when called: 9
  5014 ;; This function calls:
  5015 ;;		___fladd
  5016 ;;		___flmul
  5017 ;;		___fltol
  5018 ;;		___xxtofl
  5019 ;; This function is called by:
  5020 ;;		_loop
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text26
  5025  001930                     __ptext26:
  5026                           	callstack 0
  5027  001930                     _calcSpeed:
  5028                           	callstack 20
  5029  001930                     
  5030                           ;main.c: 251:     int16_t speed = 0;
  5031  001930  0E00               	movlw	0
  5032  001932  0100               	movlb	0	; () banked
  5033  001934  6FA4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5034  001936  0E00               	movlw	0
  5035  001938  6FA3               	movwf	calcSpeed@speed& (0+255),b
  5036                           
  5037                           ;main.c: 253:     switch (driveMode){
  5038  00193A  EF68  F00D         	goto	l6574
  5039  00193E                     l6534:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;main.c: 255:             if(distFront > (40)) {
  5043  00193E  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5044  001940  E109               	bnz	u5750
  5045  001942  0E29               	movlw	41
  5046  001944  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  5047  001946  A0D8               	btfss	status,0,c
  5048  001948  EFA8  F00C         	goto	u5751
  5049  00194C  EFAA  F00C         	goto	u5750
  5050  001950                     u5751:
  5051  001950  EFAC  F00C         	goto	l6538
  5052  001954                     u5750:
  5053  001954                     
  5054                           ; BSR set to: 0
  5055                           ;main.c: 256:                 driveMode = Straight;
  5056  001954  0E00               	movlw	0
  5057  001956  6E35               	movwf	_driveMode^0,c
  5058  001958                     l6538:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;main.c: 258:             if(setSpeed > (125)){
  5062  001958  BFDE               	btfsc	(_setSpeed+1)& (0+255),7,b
  5063  00195A  EFB8  F00C         	goto	u5761
  5064  00195E  51DE               	movf	(_setSpeed+1)& (0+255),w,b
  5065  001960  E109               	bnz	u5760
  5066  001962  0E7E               	movlw	126
  5067  001964  5DDD               	subwf	_setSpeed& (0+255),w,b
  5068  001966  A0D8               	btfss	status,0,c
  5069  001968  EFB8  F00C         	goto	u5761
  5070  00196C  EFBA  F00C         	goto	u5760
  5071  001970                     u5761:
  5072  001970  EF8D  F00D         	goto	l6576
  5073  001974                     u5760:
  5074  001974                     
  5075                           ; BSR set to: 0
  5076                           ;main.c: 259:                 if(setSpeed > 0 ){
  5077  001974  BFDE               	btfsc	(_setSpeed+1)& (0+255),7,b
  5078  001976  EFC5  F00C         	goto	u5771
  5079  00197A  51DE               	movf	(_setSpeed+1)& (0+255),w,b
  5080  00197C  E108               	bnz	u5770
  5081  00197E  05DD               	decf	_setSpeed& (0+255),w,b
  5082  001980  A0D8               	btfss	status,0,c
  5083  001982  EFC5  F00C         	goto	u5771
  5084  001986  EFC7  F00C         	goto	u5770
  5085  00198A                     u5771:
  5086  00198A  EFD1  F00C         	goto	l6546
  5087  00198E                     u5770:
  5088  00198E                     
  5089                           ; BSR set to: 0
  5090                           ;main.c: 260:                     speed = setSpeed;
  5091  00198E  C0DD  F0A3         	movff	_setSpeed,calcSpeed@speed
  5092  001992  C0DE  F0A4         	movff	_setSpeed+1,calcSpeed@speed+1
  5093  001996                     
  5094                           ; BSR set to: 0
  5095                           ;main.c: 261:                     speed -= 2;
  5096  001996  0EFE               	movlw	254
  5097  001998  27A3               	addwf	calcSpeed@speed& (0+255),f,b
  5098  00199A  0EFF               	movlw	255
  5099  00199C  23A4               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5100                           
  5101                           ;main.c: 262:                 }else if( setSpeed > 0 && distFront < (20)){
  5102  00199E  EF8D  F00D         	goto	l6576
  5103  0019A2                     l6546:
  5104                           
  5105                           ; BSR set to: 0
  5106  0019A2  BFDE               	btfsc	(_setSpeed+1)& (0+255),7,b
  5107  0019A4  EFDC  F00C         	goto	u5781
  5108  0019A8  51DE               	movf	(_setSpeed+1)& (0+255),w,b
  5109  0019AA  E108               	bnz	u5780
  5110  0019AC  05DD               	decf	_setSpeed& (0+255),w,b
  5111  0019AE  A0D8               	btfss	status,0,c
  5112  0019B0  EFDC  F00C         	goto	u5781
  5113  0019B4  EFDE  F00C         	goto	u5780
  5114  0019B8                     u5781:
  5115  0019B8  EFF3  F00C         	goto	l1330
  5116  0019BC                     u5780:
  5117  0019BC                     
  5118                           ; BSR set to: 0
  5119  0019BC  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5120  0019BE  E107               	bnz	u5791
  5121  0019C0  0E14               	movlw	20
  5122  0019C2  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  5123  0019C4  B0D8               	btfsc	status,0,c
  5124  0019C6  EFE7  F00C         	goto	u5791
  5125  0019CA  EFE9  F00C         	goto	u5790
  5126  0019CE                     u5791:
  5127  0019CE  EFF3  F00C         	goto	l1330
  5128  0019D2                     u5790:
  5129  0019D2                     
  5130                           ; BSR set to: 0
  5131                           ;main.c: 263:                     speed = setSpeed;
  5132  0019D2  C0DD  F0A3         	movff	_setSpeed,calcSpeed@speed
  5133  0019D6  C0DE  F0A4         	movff	_setSpeed+1,calcSpeed@speed+1
  5134  0019DA                     
  5135                           ; BSR set to: 0
  5136                           ;main.c: 264:                     speed -= 4;
  5137  0019DA  0EFC               	movlw	252
  5138  0019DC  27A3               	addwf	calcSpeed@speed& (0+255),f,b
  5139  0019DE  0EFF               	movlw	255
  5140  0019E0  23A4               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5141  0019E2  EF8D  F00D         	goto	l6576
  5142  0019E6                     l1330:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;main.c: 267:             break;
  5146  0019E6  EF8D  F00D         	goto	l6576
  5147  0019EA                     l6554:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;main.c: 269:             if(distFront < (40)) {
  5151  0019EA  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5152  0019EC  E107               	bnz	u5801
  5153  0019EE  0E28               	movlw	40
  5154  0019F0  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  5155  0019F2  B0D8               	btfsc	status,0,c
  5156  0019F4  EFFE  F00C         	goto	u5801
  5157  0019F8  EF00  F00D         	goto	u5800
  5158  0019FC                     u5801:
  5159  0019FC  EF02  F00D         	goto	l6558
  5160  001A00                     u5800:
  5161  001A00                     
  5162                           ; BSR set to: 0
  5163                           ;main.c: 270:                 driveMode = Brake;
  5164  001A00  0E01               	movlw	1
  5165  001A02  6E35               	movwf	_driveMode^0,c
  5166  001A04                     l6558:
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;main.c: 273:             if(distFront > (125)){
  5170  001A04  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5171  001A06  E109               	bnz	u5810
  5172  001A08  0E7E               	movlw	126
  5173  001A0A  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  5174  001A0C  A0D8               	btfss	status,0,c
  5175  001A0E  EF0B  F00D         	goto	u5811
  5176  001A12  EF0D  F00D         	goto	u5810
  5177  001A16                     u5811:
  5178  001A16  EF56  F00D         	goto	l6562
  5179  001A1A                     u5810:
  5180  001A1A                     
  5181                           ; BSR set to: 0
  5182                           ;main.c: 274:                 speed = (int16_t)((0.75) * (distFront - (125)) + (220));
  5183  001A1A  0E00               	movlw	0
  5184  001A1C  6F8B               	movwf	___fladd@a& (0+255),b
  5185  001A1E  0E00               	movlw	0
  5186  001A20  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  5187  001A22  0E5C               	movlw	92
  5188  001A24  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  5189  001A26  0E43               	movlw	67
  5190  001A28  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5191  001A2A  0E00               	movlw	0
  5192  001A2C  6F72               	movwf	___flmul@a& (0+255),b
  5193  001A2E  0E00               	movlw	0
  5194  001A30  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5195  001A32  0E40               	movlw	64
  5196  001A34  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5197  001A36  0E3F               	movlw	63
  5198  001A38  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5199  001A3A  0E83               	movlw	131
  5200  001A3C  6F9F               	movwf	??_calcSpeed& (0+255),b
  5201  001A3E  0EFF               	movlw	255
  5202  001A40  6FA0               	movwf	(??_calcSpeed+1)& (0+255),b
  5203  001A42  C0E7  F0A1         	movff	_distFront,??_calcSpeed+2	;volatile
  5204  001A46  C0E8  F0A2         	movff	_distFront+1,??_calcSpeed+3	;volatile
  5205  001A4A  519F               	movf	??_calcSpeed& (0+255),w,b
  5206  001A4C  27A1               	addwf	(??_calcSpeed+2)& (0+255),f,b
  5207  001A4E  51A0               	movf	(??_calcSpeed+1)& (0+255),w,b
  5208  001A50  23A2               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  5209  001A52  C0A1  F060         	movff	??_calcSpeed+2,___xxtofl@val
  5210  001A56  C0A2  F061         	movff	??_calcSpeed+3,___xxtofl@val+1
  5211  001A5A  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  5212  001A5C  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  5213  001A5E  0E00               	movlw	0
  5214  001A60  ECAB  F00F         	call	___xxtofl
  5215  001A64  C060  F06E         	movff	?___xxtofl,___flmul@b
  5216  001A68  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  5217  001A6C  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  5218  001A70  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  5219  001A74  EC70  F00A         	call	___flmul	;wreg free
  5220  001A78  C06E  F087         	movff	?___flmul,___fladd@b
  5221  001A7C  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  5222  001A80  C070  F089         	movff	?___flmul+2,___fladd@b+2
  5223  001A84  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  5224  001A88  EC0F  F008         	call	___fladd	;wreg free
  5225  001A8C  C087  F097         	movff	?___fladd,___fltol@f1
  5226  001A90  C088  F098         	movff	?___fladd+1,___fltol@f1+1
  5227  001A94  C089  F099         	movff	?___fladd+2,___fltol@f1+2
  5228  001A98  C08A  F09A         	movff	?___fladd+3,___fltol@f1+3
  5229  001A9C  ECA6  F014         	call	___fltol	;wreg free
  5230  001AA0  C097  F0A3         	movff	?___fltol,calcSpeed@speed
  5231  001AA4  C098  F0A4         	movff	?___fltol+1,calcSpeed@speed+1
  5232                           
  5233                           ;main.c: 275:             }else{
  5234  001AA8  EF8D  F00D         	goto	l6576
  5235  001AAC                     l6562:
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;main.c: 276:                 speed = (220);
  5239  001AAC  0E00               	movlw	0
  5240  001AAE  6FA4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5241  001AB0  0EDC               	movlw	220
  5242  001AB2  6FA3               	movwf	calcSpeed@speed& (0+255),b
  5243  001AB4  EF8D  F00D         	goto	l6576
  5244  001AB8                     l6564:
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;main.c: 282:             speed = (-150);
  5248  001AB8  0EFF               	movlw	255
  5249  001ABA  6FA4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5250  001ABC  0E6A               	movlw	106
  5251  001ABE  6FA3               	movwf	calcSpeed@speed& (0+255),b
  5252                           
  5253                           ;main.c: 283:             break;
  5254  001AC0  EF8D  F00D         	goto	l6576
  5255  001AC4                     l6568:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;main.c: 288:             speed = (200);
  5259  001AC4  0E00               	movlw	0
  5260  001AC6  6FA4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5261  001AC8  0EC8               	movlw	200
  5262  001ACA  6FA3               	movwf	calcSpeed@speed& (0+255),b
  5263                           
  5264                           ;main.c: 289:             break;
  5265  001ACC  EF8D  F00D         	goto	l6576
  5266  001AD0                     l6574:
  5267                           
  5268                           ; BSR set to: 0
  5269  001AD0  5035               	movf	_driveMode^0,w,c
  5270  001AD2  6F9F               	movwf	??_calcSpeed& (0+255),b
  5271  001AD4  6BA0               	clrf	(??_calcSpeed+1)& (0+255),b
  5272                           
  5273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5274                           ; Switch size 1, requested type "simple"
  5275                           ; Number of cases is 1, Range of values is 0 to 0
  5276                           ; switch strategies available:
  5277                           ; Name         Instructions Cycles
  5278                           ; simple_byte            4     3 (average)
  5279                           ;	Chosen strategy is simple_byte
  5280  001AD6  51A0               	movf	(??_calcSpeed+1)& (0+255),w,b
  5281  001AD8  0A00               	xorlw	0	; case 0
  5282  001ADA  B4D8               	btfsc	status,2,c
  5283  001ADC  EF72  F00D         	goto	l6834
  5284  001AE0  EF8D  F00D         	goto	l6576
  5285  001AE4                     l6834:
  5286                           
  5287                           ; BSR set to: 0
  5288                           ; Switch size 1, requested type "simple"
  5289                           ; Number of cases is 6, Range of values is 0 to 5
  5290                           ; switch strategies available:
  5291                           ; Name         Instructions Cycles
  5292                           ; simple_byte           19    10 (average)
  5293                           ;	Chosen strategy is simple_byte
  5294  001AE4  519F               	movf	??_calcSpeed& (0+255),w,b
  5295  001AE6  0A00               	xorlw	0	; case 0
  5296  001AE8  B4D8               	btfsc	status,2,c
  5297  001AEA  EFF5  F00C         	goto	l6554
  5298  001AEE  0A01               	xorlw	1	; case 1
  5299  001AF0  B4D8               	btfsc	status,2,c
  5300  001AF2  EF9F  F00C         	goto	l6534
  5301  001AF6  0A03               	xorlw	3	; case 2
  5302  001AF8  B4D8               	btfsc	status,2,c
  5303  001AFA  EF5C  F00D         	goto	l6564
  5304  001AFE  0A01               	xorlw	1	; case 3
  5305  001B00  B4D8               	btfsc	status,2,c
  5306  001B02  EF5C  F00D         	goto	l6564
  5307  001B06  0A07               	xorlw	7	; case 4
  5308  001B08  B4D8               	btfsc	status,2,c
  5309  001B0A  EF62  F00D         	goto	l6568
  5310  001B0E  0A01               	xorlw	1	; case 5
  5311  001B10  B4D8               	btfsc	status,2,c
  5312  001B12  EF62  F00D         	goto	l6568
  5313  001B16  EF8D  F00D         	goto	l6576
  5314  001B1A                     l6576:
  5315                           
  5316                           ;main.c: 295:     if(speed > (400)){
  5317  001B1A  0100               	movlb	0	; () banked
  5318  001B1C  BFA4               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  5319  001B1E  EF9A  F00D         	goto	u5821
  5320  001B22  0E91               	movlw	145
  5321  001B24  5DA3               	subwf	calcSpeed@speed& (0+255),w,b
  5322  001B26  0E01               	movlw	1
  5323  001B28  59A4               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5324  001B2A  A0D8               	btfss	status,0,c
  5325  001B2C  EF9A  F00D         	goto	u5821
  5326  001B30  EF9C  F00D         	goto	u5820
  5327  001B34                     u5821:
  5328  001B34  EFA0  F00D         	goto	l6580
  5329  001B38                     u5820:
  5330  001B38                     
  5331                           ; BSR set to: 0
  5332                           ;main.c: 296:         speed = (400);
  5333  001B38  0E01               	movlw	1
  5334  001B3A  6FA4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5335  001B3C  0E90               	movlw	144
  5336  001B3E  6FA3               	movwf	calcSpeed@speed& (0+255),b
  5337  001B40                     l6580:
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;main.c: 298:     if(speed < (-250)){
  5341  001B40  AFA4               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  5342  001B42  EFAC  F00D         	goto	u5831
  5343  001B46  0E06               	movlw	6
  5344  001B48  5DA3               	subwf	calcSpeed@speed& (0+255),w,b
  5345  001B4A  0EFF               	movlw	255
  5346  001B4C  59A4               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5347  001B4E  B0D8               	btfsc	status,0,c
  5348  001B50  EFAC  F00D         	goto	u5831
  5349  001B54  EFAE  F00D         	goto	u5830
  5350  001B58                     u5831:
  5351  001B58  EFB2  F00D         	goto	l6584
  5352  001B5C                     u5830:
  5353  001B5C                     
  5354                           ; BSR set to: 0
  5355                           ;main.c: 299:         speed = (-250);
  5356  001B5C  0EFF               	movlw	255
  5357  001B5E  6FA4               	movwf	(calcSpeed@speed+1)& (0+255),b
  5358  001B60  0E06               	movlw	6
  5359  001B62  6FA3               	movwf	calcSpeed@speed& (0+255),b
  5360  001B64                     l6584:
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;main.c: 301:     setSpeed = speed;
  5364  001B64  C0A3  F0DD         	movff	calcSpeed@speed,_setSpeed
  5365  001B68  C0A4  F0DE         	movff	calcSpeed@speed+1,_setSpeed+1
  5366  001B6C                     
  5367                           ; BSR set to: 0
  5368  001B6C  0012               	return		;funcret
  5369  001B6E                     __end_of_calcSpeed:
  5370                           	callstack 0
  5371                           
  5372 ;; *************** function ___fladd *****************
  5373 ;; Defined at:
  5374 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  b               4   39[BANK0 ] void 
  5377 ;;  a               4   43[BANK0 ] void 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  grs             1   54[BANK0 ] unsigned char 
  5380 ;;  bexp            1   53[BANK0 ] unsigned char 
  5381 ;;  aexp            1   52[BANK0 ] unsigned char 
  5382 ;;  signs           1   51[BANK0 ] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  4   39[BANK0 ] unsigned char 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5392 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;Total ram usage:       16 bytes
  5397 ;; Hardware stack levels used: 1
  5398 ;; Hardware stack levels required when called: 8
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_calcSpeed
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text27
  5407  00101E                     __ptext27:
  5408                           	callstack 0
  5409  00101E                     ___fladd:
  5410                           	callstack 20
  5411  00101E  0100               	movlb	0	; () banked
  5412  001020  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5413  001022  0B80               	andlw	128
  5414  001024  6F93               	movwf	___fladd@signs& (0+255),b
  5415  001026  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5416  001028  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  5417  00102A  6F95               	movwf	___fladd@bexp& (0+255),b
  5418  00102C                     
  5419                           ; BSR set to: 0
  5420  00102C  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  5421  00102E  EF1B  F008         	goto	u4841
  5422  001032  EF1D  F008         	goto	u4840
  5423  001036                     u4841:
  5424  001036  EF1E  F008         	goto	l5990
  5425  00103A                     u4840:
  5426  00103A                     
  5427                           ; BSR set to: 0
  5428  00103A  8195               	bsf	___fladd@bexp& (0+255),0,b
  5429  00103C                     l5990:
  5430                           
  5431                           ; BSR set to: 0
  5432  00103C  5195               	movf	___fladd@bexp& (0+255),w,b
  5433  00103E  B4D8               	btfsc	status,2,c
  5434  001040  EF24  F008         	goto	u4851
  5435  001044  EF26  F008         	goto	u4850
  5436  001048                     u4851:
  5437  001048  EF3B  F008         	goto	l6000
  5438  00104C                     u4850:
  5439  00104C                     
  5440                           ; BSR set to: 0
  5441  00104C  2995               	incf	___fladd@bexp& (0+255),w,b
  5442  00104E  A4D8               	btfss	status,2,c
  5443  001050  EF2C  F008         	goto	u4861
  5444  001054  EF2E  F008         	goto	u4860
  5445  001058                     u4861:
  5446  001058  EF36  F008         	goto	l5996
  5447  00105C                     u4860:
  5448  00105C                     
  5449                           ; BSR set to: 0
  5450  00105C  0E00               	movlw	0
  5451  00105E  6F87               	movwf	___fladd@b& (0+255),b
  5452  001060  0E00               	movlw	0
  5453  001062  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5454  001064  0E00               	movlw	0
  5455  001066  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5456  001068  0E00               	movlw	0
  5457  00106A  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5458  00106C                     l5996:
  5459                           
  5460                           ; BSR set to: 0
  5461  00106C  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  5462  00106E                     
  5463                           ; BSR set to: 0
  5464  00106E  0E00               	movlw	0
  5465  001070  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5466  001072  EF43  F008         	goto	l6002
  5467  001076                     l6000:
  5468                           
  5469                           ; BSR set to: 0
  5470  001076  0E00               	movlw	0
  5471  001078  6F87               	movwf	___fladd@b& (0+255),b
  5472  00107A  0E00               	movlw	0
  5473  00107C  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5474  00107E  0E00               	movlw	0
  5475  001080  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5476  001082  0E00               	movlw	0
  5477  001084  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5478  001086                     l6002:
  5479                           
  5480                           ; BSR set to: 0
  5481  001086  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5482  001088  0B80               	andlw	128
  5483  00108A  6F94               	movwf	___fladd@aexp& (0+255),b
  5484  00108C                     
  5485                           ; BSR set to: 0
  5486  00108C  5193               	movf	___fladd@signs& (0+255),w,b
  5487  00108E  1994               	xorwf	___fladd@aexp& (0+255),w,b
  5488  001090  B4D8               	btfsc	status,2,c
  5489  001092  EF4D  F008         	goto	u4871
  5490  001096  EF4F  F008         	goto	u4870
  5491  00109A                     u4871:
  5492  00109A  EF50  F008         	goto	l6008
  5493  00109E                     u4870:
  5494  00109E                     
  5495                           ; BSR set to: 0
  5496  00109E  8D93               	bsf	___fladd@signs& (0+255),6,b
  5497  0010A0                     l6008:
  5498                           
  5499                           ; BSR set to: 0
  5500  0010A0  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5501  0010A2  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  5502  0010A4  6F94               	movwf	___fladd@aexp& (0+255),b
  5503  0010A6                     
  5504                           ; BSR set to: 0
  5505  0010A6  AF8D               	btfss	(___fladd@a+2)& (0+255),7,b
  5506  0010A8  EF58  F008         	goto	u4881
  5507  0010AC  EF5A  F008         	goto	u4880
  5508  0010B0                     u4881:
  5509  0010B0  EF5B  F008         	goto	l6014
  5510  0010B4                     u4880:
  5511  0010B4                     
  5512                           ; BSR set to: 0
  5513  0010B4  8194               	bsf	___fladd@aexp& (0+255),0,b
  5514  0010B6                     l6014:
  5515                           
  5516                           ; BSR set to: 0
  5517  0010B6  5194               	movf	___fladd@aexp& (0+255),w,b
  5518  0010B8  B4D8               	btfsc	status,2,c
  5519  0010BA  EF61  F008         	goto	u4891
  5520  0010BE  EF63  F008         	goto	u4890
  5521  0010C2                     u4891:
  5522  0010C2  EF78  F008         	goto	l6024
  5523  0010C6                     u4890:
  5524  0010C6                     
  5525                           ; BSR set to: 0
  5526  0010C6  2994               	incf	___fladd@aexp& (0+255),w,b
  5527  0010C8  A4D8               	btfss	status,2,c
  5528  0010CA  EF69  F008         	goto	u4901
  5529  0010CE  EF6B  F008         	goto	u4900
  5530  0010D2                     u4901:
  5531  0010D2  EF73  F008         	goto	l6020
  5532  0010D6                     u4900:
  5533  0010D6                     
  5534                           ; BSR set to: 0
  5535  0010D6  0E00               	movlw	0
  5536  0010D8  6F8B               	movwf	___fladd@a& (0+255),b
  5537  0010DA  0E00               	movlw	0
  5538  0010DC  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  5539  0010DE  0E00               	movlw	0
  5540  0010E0  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  5541  0010E2  0E00               	movlw	0
  5542  0010E4  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5543  0010E6                     l6020:
  5544                           
  5545                           ; BSR set to: 0
  5546  0010E6  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  5547  0010E8                     
  5548                           ; BSR set to: 0
  5549  0010E8  0E00               	movlw	0
  5550  0010EA  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5551  0010EC  EF80  F008         	goto	l6026
  5552  0010F0                     l6024:
  5553                           
  5554                           ; BSR set to: 0
  5555  0010F0  0E00               	movlw	0
  5556  0010F2  6F8B               	movwf	___fladd@a& (0+255),b
  5557  0010F4  0E00               	movlw	0
  5558  0010F6  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  5559  0010F8  0E00               	movlw	0
  5560  0010FA  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  5561  0010FC  0E00               	movlw	0
  5562  0010FE  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5563  001100                     l6026:
  5564                           
  5565                           ; BSR set to: 0
  5566  001100  5195               	movf	___fladd@bexp& (0+255),w,b
  5567  001102  5D94               	subwf	___fladd@aexp& (0+255),w,b
  5568  001104  B0D8               	btfsc	status,0,c
  5569  001106  EF87  F008         	goto	u4911
  5570  00110A  EF89  F008         	goto	u4910
  5571  00110E                     u4911:
  5572  00110E  EFB0  F008         	goto	l6062
  5573  001112                     u4910:
  5574  001112                     
  5575                           ; BSR set to: 0
  5576  001112  AD93               	btfss	___fladd@signs& (0+255),6,b
  5577  001114  EF8E  F008         	goto	u4921
  5578  001118  EF90  F008         	goto	u4920
  5579  00111C                     u4921:
  5580  00111C  EF92  F008         	goto	l6032
  5581  001120                     u4920:
  5582  001120                     
  5583                           ; BSR set to: 0
  5584  001120  0E80               	movlw	128
  5585  001122  1B93               	xorwf	___fladd@signs& (0+255),f,b
  5586  001124                     l6032:
  5587                           
  5588                           ; BSR set to: 0
  5589  001124  C095  F096         	movff	___fladd@bexp,___fladd@grs
  5590  001128                     
  5591                           ; BSR set to: 0
  5592  001128  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  5593  00112C                     
  5594                           ; BSR set to: 0
  5595  00112C  C096  F094         	movff	___fladd@grs,___fladd@aexp
  5596  001130                     
  5597                           ; BSR set to: 0
  5598  001130  C087  F096         	movff	___fladd@b,___fladd@grs
  5599  001134                     
  5600                           ; BSR set to: 0
  5601  001134  C08B  F087         	movff	___fladd@a,___fladd@b
  5602  001138                     
  5603                           ; BSR set to: 0
  5604  001138  C096  F08B         	movff	___fladd@grs,___fladd@a
  5605  00113C                     
  5606                           ; BSR set to: 0
  5607  00113C  C088  F096         	movff	___fladd@b+1,___fladd@grs
  5608  001140                     
  5609                           ; BSR set to: 0
  5610  001140  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
  5611  001144                     
  5612                           ; BSR set to: 0
  5613  001144  C096  F08C         	movff	___fladd@grs,___fladd@a+1
  5614  001148                     
  5615                           ; BSR set to: 0
  5616  001148  C089  F096         	movff	___fladd@b+2,___fladd@grs
  5617  00114C                     
  5618                           ; BSR set to: 0
  5619  00114C  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
  5620  001150                     
  5621                           ; BSR set to: 0
  5622  001150  C096  F08D         	movff	___fladd@grs,___fladd@a+2
  5623  001154                     
  5624                           ; BSR set to: 0
  5625  001154  C08A  F096         	movff	___fladd@b+3,___fladd@grs
  5626  001158                     
  5627                           ; BSR set to: 0
  5628  001158  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
  5629  00115C                     
  5630                           ; BSR set to: 0
  5631  00115C  C096  F08E         	movff	___fladd@grs,___fladd@a+3
  5632  001160                     l6062:
  5633                           
  5634                           ; BSR set to: 0
  5635  001160  0E00               	movlw	0
  5636  001162  6F96               	movwf	___fladd@grs& (0+255),b
  5637  001164                     
  5638                           ; BSR set to: 0
  5639  001164  5195               	movf	___fladd@bexp& (0+255),w,b
  5640  001166  C094  F08F         	movff	___fladd@aexp,??___fladd
  5641  00116A  6B90               	clrf	(??___fladd+1)& (0+255),b
  5642  00116C  5F8F               	subwf	??___fladd& (0+255),f,b
  5643  00116E  0E00               	movlw	0
  5644  001170  5B90               	subwfb	(??___fladd+1)& (0+255),f,b
  5645  001172  BF90               	btfsc	(??___fladd+1)& (0+255),7,b
  5646  001174  EFC5  F008         	goto	u4931
  5647  001178  5190               	movf	(??___fladd+1)& (0+255),w,b
  5648  00117A  E109               	bnz	u4930
  5649  00117C  0E1A               	movlw	26
  5650  00117E  5D8F               	subwf	??___fladd& (0+255),w,b
  5651  001180  A0D8               	btfss	status,0,c
  5652  001182  EFC5  F008         	goto	u4931
  5653  001186  EFC7  F008         	goto	u4930
  5654  00118A                     u4931:
  5655  00118A  EFFE  F008         	goto	l1912
  5656  00118E                     u4930:
  5657  00118E                     
  5658                           ; BSR set to: 0
  5659  00118E  5187               	movf	___fladd@b& (0+255),w,b
  5660  001190  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  5661  001192  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  5662  001194  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  5663  001196  A4D8               	btfss	status,2,c
  5664  001198  EFD0  F008         	goto	u4941
  5665  00119C  EFD3  F008         	goto	u4940
  5666  0011A0                     u4941:
  5667  0011A0  0E01               	movlw	1
  5668  0011A2  EFD4  F008         	goto	u4950
  5669  0011A6                     u4940:
  5670  0011A6  0E00               	movlw	0
  5671  0011A8                     u4950:
  5672  0011A8  6F96               	movwf	___fladd@grs& (0+255),b
  5673  0011AA                     
  5674                           ; BSR set to: 0
  5675  0011AA  0E00               	movlw	0
  5676  0011AC  6F87               	movwf	___fladd@b& (0+255),b
  5677  0011AE  0E00               	movlw	0
  5678  0011B0  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5679  0011B2  0E00               	movlw	0
  5680  0011B4  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5681  0011B6  0E00               	movlw	0
  5682  0011B8  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5683  0011BA                     
  5684                           ; BSR set to: 0
  5685  0011BA  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  5686  0011BE  EF07  F009         	goto	l1911
  5687  0011C2                     l1913:
  5688                           
  5689                           ; BSR set to: 0
  5690  0011C2  A196               	btfss	___fladd@grs& (0+255),0,b
  5691  0011C4  EFE6  F008         	goto	u4961
  5692  0011C8  EFE8  F008         	goto	u4960
  5693  0011CC                     u4961:
  5694  0011CC  EFEE  F008         	goto	l6074
  5695  0011D0                     u4960:
  5696  0011D0                     
  5697                           ; BSR set to: 0
  5698  0011D0  90D8               	bcf	status,0,c
  5699  0011D2  3196               	rrcf	___fladd@grs& (0+255),w,b
  5700  0011D4  0901               	iorlw	1
  5701  0011D6  6F96               	movwf	___fladd@grs& (0+255),b
  5702  0011D8  EFF0  F008         	goto	l6076
  5703  0011DC                     l6074:
  5704                           
  5705                           ; BSR set to: 0
  5706  0011DC  90D8               	bcf	status,0,c
  5707  0011DE  3396               	rrcf	___fladd@grs& (0+255),f,b
  5708  0011E0                     l6076:
  5709                           
  5710                           ; BSR set to: 0
  5711  0011E0  A187               	btfss	___fladd@b& (0+255),0,b
  5712  0011E2  EFF5  F008         	goto	u4971
  5713  0011E6  EFF7  F008         	goto	u4970
  5714  0011EA                     u4971:
  5715  0011EA  EFF8  F008         	goto	l6080
  5716  0011EE                     u4970:
  5717  0011EE                     
  5718                           ; BSR set to: 0
  5719  0011EE  8F96               	bsf	___fladd@grs& (0+255),7,b
  5720  0011F0                     l6080:
  5721                           
  5722                           ; BSR set to: 0
  5723  0011F0  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  5724  0011F2  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  5725  0011F4  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  5726  0011F6  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  5727  0011F8  3387               	rrcf	___fladd@b& (0+255),f,b
  5728  0011FA                     
  5729                           ; BSR set to: 0
  5730  0011FA  2B95               	incf	___fladd@bexp& (0+255),f,b
  5731  0011FC                     l1912:
  5732                           
  5733                           ; BSR set to: 0
  5734  0011FC  5194               	movf	___fladd@aexp& (0+255),w,b
  5735  0011FE  5D95               	subwf	___fladd@bexp& (0+255),w,b
  5736  001200  A0D8               	btfss	status,0,c
  5737  001202  EF05  F009         	goto	u4981
  5738  001206  EF07  F009         	goto	u4980
  5739  00120A                     u4981:
  5740  00120A  EFE1  F008         	goto	l1913
  5741  00120E                     u4980:
  5742  00120E                     l1911:
  5743                           
  5744                           ; BSR set to: 0
  5745  00120E  BD93               	btfsc	___fladd@signs& (0+255),6,b
  5746  001210  EF0C  F009         	goto	u4991
  5747  001214  EF0E  F009         	goto	u4990
  5748  001218                     u4991:
  5749  001218  EF4E  F009         	goto	l6108
  5750  00121C                     u4990:
  5751  00121C                     
  5752                           ; BSR set to: 0
  5753  00121C  5195               	movf	___fladd@bexp& (0+255),w,b
  5754  00121E  A4D8               	btfss	status,2,c
  5755  001220  EF14  F009         	goto	u5001
  5756  001224  EF16  F009         	goto	u5000
  5757  001228                     u5001:
  5758  001228  EF20  F009         	goto	l6090
  5759  00122C                     u5000:
  5760  00122C                     
  5761                           ; BSR set to: 0
  5762  00122C  0E00               	movlw	0
  5763  00122E  6F87               	movwf	?___fladd& (0+255),b
  5764  001230  0E00               	movlw	0
  5765  001232  6F88               	movwf	(?___fladd+1)& (0+255),b
  5766  001234  0E00               	movlw	0
  5767  001236  6F89               	movwf	(?___fladd+2)& (0+255),b
  5768  001238  0E00               	movlw	0
  5769  00123A  6F8A               	movwf	(?___fladd+3)& (0+255),b
  5770  00123C  EF6F  F00A         	goto	l1920
  5771  001240                     l6090:
  5772                           
  5773                           ; BSR set to: 0
  5774  001240  518B               	movf	___fladd@a& (0+255),w,b
  5775  001242  2787               	addwf	___fladd@b& (0+255),f,b
  5776  001244  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5777  001246  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  5778  001248  518D               	movf	(___fladd@a+2)& (0+255),w,b
  5779  00124A  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  5780  00124C  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5781  00124E  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  5782  001250                     
  5783                           ; BSR set to: 0
  5784  001250  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  5785  001252  EF2D  F009         	goto	u5011
  5786  001256  EF2F  F009         	goto	u5010
  5787  00125A                     u5011:
  5788  00125A  EFDB  F009         	goto	l6144
  5789  00125E                     u5010:
  5790  00125E                     
  5791                           ; BSR set to: 0
  5792  00125E  A196               	btfss	___fladd@grs& (0+255),0,b
  5793  001260  EF34  F009         	goto	u5021
  5794  001264  EF36  F009         	goto	u5020
  5795  001268                     u5021:
  5796  001268  EF3C  F009         	goto	l6098
  5797  00126C                     u5020:
  5798  00126C                     
  5799                           ; BSR set to: 0
  5800  00126C  90D8               	bcf	status,0,c
  5801  00126E  3196               	rrcf	___fladd@grs& (0+255),w,b
  5802  001270  0901               	iorlw	1
  5803  001272  6F96               	movwf	___fladd@grs& (0+255),b
  5804  001274  EF3E  F009         	goto	l6100
  5805  001278                     l6098:
  5806                           
  5807                           ; BSR set to: 0
  5808  001278  90D8               	bcf	status,0,c
  5809  00127A  3396               	rrcf	___fladd@grs& (0+255),f,b
  5810  00127C                     l6100:
  5811                           
  5812                           ; BSR set to: 0
  5813  00127C  A187               	btfss	___fladd@b& (0+255),0,b
  5814  00127E  EF43  F009         	goto	u5031
  5815  001282  EF45  F009         	goto	u5030
  5816  001286                     u5031:
  5817  001286  EF46  F009         	goto	l6104
  5818  00128A                     u5030:
  5819  00128A                     
  5820                           ; BSR set to: 0
  5821  00128A  8F96               	bsf	___fladd@grs& (0+255),7,b
  5822  00128C                     l6104:
  5823                           
  5824                           ; BSR set to: 0
  5825  00128C  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  5826  00128E  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  5827  001290  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  5828  001292  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  5829  001294  3387               	rrcf	___fladd@b& (0+255),f,b
  5830  001296                     
  5831                           ; BSR set to: 0
  5832  001296  2B95               	incf	___fladd@bexp& (0+255),f,b
  5833  001298  EFDB  F009         	goto	l6144
  5834  00129C                     l6108:
  5835                           
  5836                           ; BSR set to: 0
  5837  00129C  518B               	movf	___fladd@a& (0+255),w,b
  5838  00129E  5D87               	subwf	___fladd@b& (0+255),w,b
  5839  0012A0  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5840  0012A2  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
  5841  0012A4  518D               	movf	(___fladd@a+2)& (0+255),w,b
  5842  0012A6  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
  5843  0012A8  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5844  0012AA  0A80               	xorlw	128
  5845  0012AC  6F8F               	movwf	??___fladd& (0+255),b
  5846  0012AE  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5847  0012B0  0A80               	xorlw	128
  5848  0012B2  598F               	subwfb	??___fladd& (0+255),w,b
  5849  0012B4  B0D8               	btfsc	status,0,c
  5850  0012B6  EF5F  F009         	goto	u5041
  5851  0012BA  EF61  F009         	goto	u5040
  5852  0012BE                     u5041:
  5853  0012BE  EF8C  F009         	goto	l6118
  5854  0012C2                     u5040:
  5855  0012C2                     
  5856                           ; BSR set to: 0
  5857  0012C2  5187               	movf	___fladd@b& (0+255),w,b
  5858  0012C4  5D8B               	subwf	___fladd@a& (0+255),w,b
  5859  0012C6  6F8F               	movwf	??___fladd& (0+255),b
  5860  0012C8  5188               	movf	(___fladd@b+1)& (0+255),w,b
  5861  0012CA  598C               	subwfb	(___fladd@a+1)& (0+255),w,b
  5862  0012CC  6F90               	movwf	(??___fladd+1)& (0+255),b
  5863  0012CE  5189               	movf	(___fladd@b+2)& (0+255),w,b
  5864  0012D0  598D               	subwfb	(___fladd@a+2)& (0+255),w,b
  5865  0012D2  6F91               	movwf	(??___fladd+2)& (0+255),b
  5866  0012D4  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5867  0012D6  598E               	subwfb	(___fladd@a+3)& (0+255),w,b
  5868  0012D8  6F92               	movwf	(??___fladd+3)& (0+255),b
  5869  0012DA  0EFF               	movlw	255
  5870  0012DC  258F               	addwf	??___fladd& (0+255),w,b
  5871  0012DE  6F87               	movwf	___fladd@b& (0+255),b
  5872  0012E0  0EFF               	movlw	255
  5873  0012E2  2190               	addwfc	(??___fladd+1)& (0+255),w,b
  5874  0012E4  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5875  0012E6  0EFF               	movlw	255
  5876  0012E8  2191               	addwfc	(??___fladd+2)& (0+255),w,b
  5877  0012EA  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5878  0012EC  0EFF               	movlw	255
  5879  0012EE  2192               	addwfc	(??___fladd+3)& (0+255),w,b
  5880  0012F0  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5881  0012F2  0E80               	movlw	128
  5882  0012F4  1B93               	xorwf	___fladd@signs& (0+255),f,b
  5883  0012F6                     
  5884                           ; BSR set to: 0
  5885  0012F6  6D96               	negf	___fladd@grs& (0+255),b
  5886  0012F8                     
  5887                           ; BSR set to: 0
  5888  0012F8  5196               	movf	___fladd@grs& (0+255),w,b
  5889  0012FA  A4D8               	btfss	status,2,c
  5890  0012FC  EF82  F009         	goto	u5051
  5891  001300  EF84  F009         	goto	u5050
  5892  001304                     u5051:
  5893  001304  EF94  F009         	goto	l1928
  5894  001308                     u5050:
  5895  001308                     
  5896                           ; BSR set to: 0
  5897  001308  0E01               	movlw	1
  5898  00130A  2787               	addwf	___fladd@b& (0+255),f,b
  5899  00130C  0E00               	movlw	0
  5900  00130E  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  5901  001310  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  5902  001312  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  5903  001314  EF94  F009         	goto	l1928
  5904  001318                     l6118:
  5905                           
  5906                           ; BSR set to: 0
  5907  001318  518B               	movf	___fladd@a& (0+255),w,b
  5908  00131A  5F87               	subwf	___fladd@b& (0+255),f,b
  5909  00131C  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5910  00131E  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
  5911  001320  518D               	movf	(___fladd@a+2)& (0+255),w,b
  5912  001322  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
  5913  001324  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5914  001326  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
  5915  001328                     l1928:
  5916                           
  5917                           ; BSR set to: 0
  5918  001328  5187               	movf	___fladd@b& (0+255),w,b
  5919  00132A  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  5920  00132C  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  5921  00132E  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  5922  001330  A4D8               	btfss	status,2,c
  5923  001332  EF9D  F009         	goto	u5061
  5924  001336  EF9F  F009         	goto	u5060
  5925  00133A                     u5061:
  5926  00133A  EFD4  F009         	goto	l6142
  5927  00133E                     u5060:
  5928  00133E                     
  5929                           ; BSR set to: 0
  5930  00133E  5196               	movf	___fladd@grs& (0+255),w,b
  5931  001340  A4D8               	btfss	status,2,c
  5932  001342  EFA5  F009         	goto	u5071
  5933  001346  EFA7  F009         	goto	u5070
  5934  00134A                     u5071:
  5935  00134A  EFD4  F009         	goto	l6142
  5936  00134E                     u5070:
  5937  00134E                     
  5938                           ; BSR set to: 0
  5939  00134E  0E00               	movlw	0
  5940  001350  6F87               	movwf	?___fladd& (0+255),b
  5941  001352  0E00               	movlw	0
  5942  001354  6F88               	movwf	(?___fladd+1)& (0+255),b
  5943  001356  0E00               	movlw	0
  5944  001358  6F89               	movwf	(?___fladd+2)& (0+255),b
  5945  00135A  0E00               	movlw	0
  5946  00135C  6F8A               	movwf	(?___fladd+3)& (0+255),b
  5947  00135E  EF6F  F00A         	goto	l1920
  5948  001362                     l6126:
  5949                           
  5950                           ; BSR set to: 0
  5951  001362  90D8               	bcf	status,0,c
  5952  001364  3787               	rlcf	___fladd@b& (0+255),f,b
  5953  001366  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
  5954  001368  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
  5955  00136A  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
  5956  00136C                     
  5957                           ; BSR set to: 0
  5958  00136C  AF96               	btfss	___fladd@grs& (0+255),7,b
  5959  00136E  EFBB  F009         	goto	u5081
  5960  001372  EFBD  F009         	goto	u5080
  5961  001376                     u5081:
  5962  001376  EFBE  F009         	goto	l6132
  5963  00137A                     u5080:
  5964  00137A                     
  5965                           ; BSR set to: 0
  5966  00137A  8187               	bsf	___fladd@b& (0+255),0,b
  5967  00137C                     l6132:
  5968                           
  5969                           ; BSR set to: 0
  5970  00137C  A196               	btfss	___fladd@grs& (0+255),0,b
  5971  00137E  EFC3  F009         	goto	u5091
  5972  001382  EFC5  F009         	goto	u5090
  5973  001386                     u5091:
  5974  001386  EFC9  F009         	goto	l6136
  5975  00138A                     u5090:
  5976  00138A                     
  5977                           ; BSR set to: 0
  5978  00138A  80D8               	bsf	status,0,c
  5979  00138C  3796               	rlcf	___fladd@grs& (0+255),f,b
  5980  00138E  EFCB  F009         	goto	l6138
  5981  001392                     l6136:
  5982                           
  5983                           ; BSR set to: 0
  5984  001392  90D8               	bcf	status,0,c
  5985  001394  3796               	rlcf	___fladd@grs& (0+255),f,b
  5986  001396                     l6138:
  5987                           
  5988                           ; BSR set to: 0
  5989  001396  5195               	movf	___fladd@bexp& (0+255),w,b
  5990  001398  B4D8               	btfsc	status,2,c
  5991  00139A  EFD1  F009         	goto	u5101
  5992  00139E  EFD3  F009         	goto	u5100
  5993  0013A2                     u5101:
  5994  0013A2  EFD4  F009         	goto	l6142
  5995  0013A6                     u5100:
  5996  0013A6                     
  5997                           ; BSR set to: 0
  5998  0013A6  0795               	decf	___fladd@bexp& (0+255),f,b
  5999  0013A8                     l6142:
  6000                           
  6001                           ; BSR set to: 0
  6002  0013A8  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  6003  0013AA  EFD9  F009         	goto	u5111
  6004  0013AE  EFDB  F009         	goto	u5110
  6005  0013B2                     u5111:
  6006  0013B2  EFB1  F009         	goto	l6126
  6007  0013B6                     u5110:
  6008  0013B6                     l6144:
  6009                           
  6010                           ; BSR set to: 0
  6011  0013B6  0E00               	movlw	0
  6012  0013B8  6F94               	movwf	___fladd@aexp& (0+255),b
  6013  0013BA                     
  6014                           ; BSR set to: 0
  6015  0013BA  AF96               	btfss	___fladd@grs& (0+255),7,b
  6016  0013BC  EFE2  F009         	goto	u5121
  6017  0013C0  EFE4  F009         	goto	u5120
  6018  0013C4                     u5121:
  6019  0013C4  EFFC  F009         	goto	l1937
  6020  0013C8                     u5120:
  6021  0013C8                     
  6022                           ; BSR set to: 0
  6023  0013C8  C096  F08F         	movff	___fladd@grs,??___fladd
  6024  0013CC  0E7F               	movlw	127
  6025  0013CE  178F               	andwf	??___fladd& (0+255),f,b
  6026  0013D0  B4D8               	btfsc	status,2,c
  6027  0013D2  EFED  F009         	goto	u5131
  6028  0013D6  EFEF  F009         	goto	u5130
  6029  0013DA                     u5131:
  6030  0013DA  EFF3  F009         	goto	l1938
  6031  0013DE                     u5130:
  6032  0013DE                     l6150:
  6033                           
  6034                           ; BSR set to: 0
  6035  0013DE  0E01               	movlw	1
  6036  0013E0  6F94               	movwf	___fladd@aexp& (0+255),b
  6037  0013E2  EFFC  F009         	goto	l1937
  6038  0013E6                     l1938:
  6039                           
  6040                           ; BSR set to: 0
  6041  0013E6  A187               	btfss	___fladd@b& (0+255),0,b
  6042  0013E8  EFF8  F009         	goto	u5141
  6043  0013EC  EFFA  F009         	goto	u5140
  6044  0013F0                     u5141:
  6045  0013F0  EFFC  F009         	goto	l1937
  6046  0013F4                     u5140:
  6047  0013F4  EFEF  F009         	goto	l6150
  6048  0013F8                     l1937:
  6049                           
  6050                           ; BSR set to: 0
  6051  0013F8  5194               	movf	___fladd@aexp& (0+255),w,b
  6052  0013FA  B4D8               	btfsc	status,2,c
  6053  0013FC  EF02  F00A         	goto	u5151
  6054  001400  EF04  F00A         	goto	u5150
  6055  001404                     u5151:
  6056  001404  EF2F  F00A         	goto	l6162
  6057  001408                     u5150:
  6058  001408                     
  6059                           ; BSR set to: 0
  6060  001408  0E01               	movlw	1
  6061  00140A  2787               	addwf	___fladd@b& (0+255),f,b
  6062  00140C  0E00               	movlw	0
  6063  00140E  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  6064  001410  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  6065  001412  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  6066  001414                     
  6067                           ; BSR set to: 0
  6068  001414  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  6069  001416  EF0F  F00A         	goto	u5161
  6070  00141A  EF11  F00A         	goto	u5160
  6071  00141E                     u5161:
  6072  00141E  EF2F  F00A         	goto	l6162
  6073  001422                     u5160:
  6074  001422                     
  6075                           ; BSR set to: 0
  6076  001422  C087  F08F         	movff	___fladd@b,??___fladd
  6077  001426  C088  F090         	movff	___fladd@b+1,??___fladd+1
  6078  00142A  C089  F091         	movff	___fladd@b+2,??___fladd+2
  6079  00142E  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  6080  001432  3592               	rlcf	(??___fladd+3)& (0+255),w,b
  6081  001434  3392               	rrcf	(??___fladd+3)& (0+255),f,b
  6082  001436  3391               	rrcf	(??___fladd+2)& (0+255),f,b
  6083  001438  3390               	rrcf	(??___fladd+1)& (0+255),f,b
  6084  00143A  338F               	rrcf	??___fladd& (0+255),f,b
  6085  00143C  C08F  F087         	movff	??___fladd,___fladd@b
  6086  001440  C090  F088         	movff	??___fladd+1,___fladd@b+1
  6087  001444  C091  F089         	movff	??___fladd+2,___fladd@b+2
  6088  001448  C092  F08A         	movff	??___fladd+3,___fladd@b+3
  6089  00144C  2995               	incf	___fladd@bexp& (0+255),w,b
  6090  00144E  B4D8               	btfsc	status,2,c
  6091  001450  EF2C  F00A         	goto	u5171
  6092  001454  EF2E  F00A         	goto	u5170
  6093  001458                     u5171:
  6094  001458  EF2F  F00A         	goto	l6162
  6095  00145C                     u5170:
  6096  00145C                     
  6097                           ; BSR set to: 0
  6098  00145C  2B95               	incf	___fladd@bexp& (0+255),f,b
  6099  00145E                     l6162:
  6100                           
  6101                           ; BSR set to: 0
  6102  00145E  2995               	incf	___fladd@bexp& (0+255),w,b
  6103  001460  B4D8               	btfsc	status,2,c
  6104  001462  EF35  F00A         	goto	u5181
  6105  001466  EF37  F00A         	goto	u5180
  6106  00146A                     u5181:
  6107  00146A  EF3F  F00A         	goto	l6166
  6108  00146E                     u5180:
  6109  00146E                     
  6110                           ; BSR set to: 0
  6111  00146E  5195               	movf	___fladd@bexp& (0+255),w,b
  6112  001470  A4D8               	btfss	status,2,c
  6113  001472  EF3D  F00A         	goto	u5191
  6114  001476  EF3F  F00A         	goto	u5190
  6115  00147A                     u5191:
  6116  00147A  EF51  F00A         	goto	l6170
  6117  00147E                     u5190:
  6118  00147E                     l6166:
  6119                           
  6120                           ; BSR set to: 0
  6121  00147E  0E00               	movlw	0
  6122  001480  6F87               	movwf	___fladd@b& (0+255),b
  6123  001482  0E00               	movlw	0
  6124  001484  6F88               	movwf	(___fladd@b+1)& (0+255),b
  6125  001486  0E00               	movlw	0
  6126  001488  6F89               	movwf	(___fladd@b+2)& (0+255),b
  6127  00148A  0E00               	movlw	0
  6128  00148C  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  6129  00148E  5195               	movf	___fladd@bexp& (0+255),w,b
  6130  001490  A4D8               	btfss	status,2,c
  6131  001492  EF4D  F00A         	goto	u5201
  6132  001496  EF4F  F00A         	goto	u5200
  6133  00149A                     u5201:
  6134  00149A  EF51  F00A         	goto	l6170
  6135  00149E                     u5200:
  6136  00149E                     
  6137                           ; BSR set to: 0
  6138  00149E  0E00               	movlw	0
  6139  0014A0  6F93               	movwf	___fladd@signs& (0+255),b
  6140  0014A2                     l6170:
  6141                           
  6142                           ; BSR set to: 0
  6143  0014A2  A195               	btfss	___fladd@bexp& (0+255),0,b
  6144  0014A4  EF56  F00A         	goto	u5211
  6145  0014A8  EF58  F00A         	goto	u5210
  6146  0014AC                     u5211:
  6147  0014AC  EF5B  F00A         	goto	l6174
  6148  0014B0                     u5210:
  6149  0014B0                     
  6150                           ; BSR set to: 0
  6151  0014B0  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  6152  0014B2  EF5C  F00A         	goto	l6176
  6153  0014B6                     l6174:
  6154                           
  6155                           ; BSR set to: 0
  6156  0014B6  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
  6157  0014B8                     l6176:
  6158                           
  6159                           ; BSR set to: 0
  6160  0014B8  90D8               	bcf	status,0,c
  6161  0014BA  3195               	rrcf	___fladd@bexp& (0+255),w,b
  6162  0014BC  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  6163  0014BE                     
  6164                           ; BSR set to: 0
  6165  0014BE  AF93               	btfss	___fladd@signs& (0+255),7,b
  6166  0014C0  EF64  F00A         	goto	u5221
  6167  0014C4  EF66  F00A         	goto	u5220
  6168  0014C8                     u5221:
  6169  0014C8  EF67  F00A         	goto	l6182
  6170  0014CC                     u5220:
  6171  0014CC                     
  6172                           ; BSR set to: 0
  6173  0014CC  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
  6174  0014CE                     l6182:
  6175                           
  6176                           ; BSR set to: 0
  6177  0014CE  C087  F087         	movff	___fladd@b,?___fladd
  6178  0014D2  C088  F088         	movff	___fladd@b+1,?___fladd+1
  6179  0014D6  C089  F089         	movff	___fladd@b+2,?___fladd+2
  6180  0014DA  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
  6181  0014DE                     l1920:
  6182                           
  6183                           ; BSR set to: 0
  6184  0014DE  0012               	return		;funcret
  6185  0014E0                     __end_of___fladd:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _calcMotorPow *****************
  6189 ;; Defined at:
  6190 ;;		line 304 in file "main.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  oldSpeedDelt    2   67[BANK0 ] short 
  6195 ;;  setSpeedDelt    2   65[BANK0 ] short 
  6196 ;;  addMPow         1   69[BANK0 ] char 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      void 
  6199 ;; Registers used:
  6200 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;Total ram usage:        7 bytes
  6211 ;; Hardware stack levels used: 1
  6212 ;; Hardware stack levels required when called: 10
  6213 ;; This function calls:
  6214 ;;		___flmul
  6215 ;;		___fltol
  6216 ;;		___xxtofl
  6217 ;;		_actSpeed
  6218 ;;		_setMotor
  6219 ;; This function is called by:
  6220 ;;		_loop
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text28
  6225  00270E                     __ptext28:
  6226                           	callstack 0
  6227  00270E                     _calcMotorPow:
  6228                           	callstack 19
  6229  00270E                     
  6230                           ;main.c: 305:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6231  00270E  0100               	movlb	0	; () banked
  6232  002710  51DB               	movf	_currentSpeed& (0+255),w,b
  6233  002712  5DDD               	subwf	_setSpeed& (0+255),w,b
  6234  002714  6FA1               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6235  002716  51DC               	movf	(_currentSpeed+1)& (0+255),w,b
  6236  002718  59DE               	subwfb	(_setSpeed+1)& (0+255),w,b
  6237  00271A  6FA2               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6238                           
  6239                           ;main.c: 306:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6240  00271C  51D9               	movf	_oldSpeed& (0+255),w,b
  6241  00271E  5DDB               	subwf	_currentSpeed& (0+255),w,b
  6242  002720  6FA3               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6243  002722  51DA               	movf	(_oldSpeed+1)& (0+255),w,b
  6244  002724  59DC               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6245  002726  6FA4               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6246  002728                     
  6247                           ; BSR set to: 0
  6248                           ;main.c: 309:     currentSpeed = actSpeed();
  6249  002728  EC38  F019         	call	_actSpeed	;wreg free
  6250  00272C  C020  F0DB         	movff	?_actSpeed,_currentSpeed
  6251  002730  C021  F0DC         	movff	?_actSpeed+1,_currentSpeed+1
  6252  002734                     
  6253                           ;main.c: 313:  addMPow = (int8_t)((0.025) * (setSpeedDelta - (oldSpeedDelta / (1))));
  6254  002734  0ECD               	movlw	205
  6255  002736  0100               	movlb	0	; () banked
  6256  002738  6F72               	movwf	___flmul@a& (0+255),b
  6257  00273A  0ECC               	movlw	204
  6258  00273C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  6259  00273E  0ECC               	movlw	204
  6260  002740  6F74               	movwf	(___flmul@a+2)& (0+255),b
  6261  002742  0E3C               	movlw	60
  6262  002744  6F75               	movwf	(___flmul@a+3)& (0+255),b
  6263  002746  51A3               	movf	calcMotorPow@oldSpeedDelta& (0+255),w,b
  6264  002748  5DA1               	subwf	calcMotorPow@setSpeedDelta& (0+255),w,b
  6265  00274A  6F9F               	movwf	??_calcMotorPow& (0+255),b
  6266  00274C  51A4               	movf	(calcMotorPow@oldSpeedDelta+1)& (0+255),w,b
  6267  00274E  59A2               	subwfb	(calcMotorPow@setSpeedDelta+1)& (0+255),w,b
  6268  002750  6FA0               	movwf	(??_calcMotorPow+1)& (0+255),b
  6269  002752  C09F  F060         	movff	??_calcMotorPow,___xxtofl@val
  6270  002756  C0A0  F061         	movff	??_calcMotorPow+1,___xxtofl@val+1
  6271  00275A  0E00               	movlw	0
  6272  00275C  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  6273  00275E  0EFF               	movlw	-1
  6274  002760  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  6275  002762  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  6276  002764  0E01               	movlw	1
  6277  002766  ECAB  F00F         	call	___xxtofl
  6278  00276A  C060  F06E         	movff	?___xxtofl,___flmul@b
  6279  00276E  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  6280  002772  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  6281  002776  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  6282  00277A  EC70  F00A         	call	___flmul	;wreg free
  6283  00277E  C06E  F097         	movff	?___flmul,___fltol@f1
  6284  002782  C06F  F098         	movff	?___flmul+1,___fltol@f1+1
  6285  002786  C070  F099         	movff	?___flmul+2,___fltol@f1+2
  6286  00278A  C071  F09A         	movff	?___flmul+3,___fltol@f1+3
  6287  00278E  ECA6  F014         	call	___fltol	;wreg free
  6288  002792  0100               	movlb	0	; () banked
  6289  002794  5197               	movf	?___fltol& (0+255),w,b
  6290  002796  6FA5               	movwf	calcMotorPow@addMPow& (0+255),b
  6291  002798                     
  6292                           ; BSR set to: 0
  6293                           ;main.c: 315:     if(addMPow > (4)){
  6294  002798  51A5               	movf	calcMotorPow@addMPow& (0+255),w,b
  6295  00279A  0A80               	xorlw	128
  6296  00279C  0F7B               	addlw	-133
  6297  00279E  A0D8               	btfss	status,0,c
  6298  0027A0  EFD4  F013         	goto	u5841
  6299  0027A4  EFD6  F013         	goto	u5840
  6300  0027A8                     u5841:
  6301  0027A8  EFDA  F013         	goto	l6602
  6302  0027AC                     u5840:
  6303  0027AC                     
  6304                           ; BSR set to: 0
  6305                           ;main.c: 316:         addMPow = (4);
  6306  0027AC  0E04               	movlw	4
  6307  0027AE  6FA5               	movwf	calcMotorPow@addMPow& (0+255),b
  6308                           
  6309                           ;main.c: 317:     }else if(addMPow < -(4)){
  6310  0027B0  EFE6  F013         	goto	l6606
  6311  0027B4                     l6602:
  6312                           
  6313                           ; BSR set to: 0
  6314  0027B4  51A5               	movf	calcMotorPow@addMPow& (0+255),w,b
  6315  0027B6  0A80               	xorlw	128
  6316  0027B8  0F84               	addlw	132
  6317  0027BA  B0D8               	btfsc	status,0,c
  6318  0027BC  EFE2  F013         	goto	u5851
  6319  0027C0  EFE4  F013         	goto	u5850
  6320  0027C4                     u5851:
  6321  0027C4  EFE6  F013         	goto	l6606
  6322  0027C8                     u5850:
  6323  0027C8                     
  6324                           ; BSR set to: 0
  6325                           ;main.c: 318:         addMPow = -(4);
  6326  0027C8  0EFC               	movlw	252
  6327  0027CA  6FA5               	movwf	calcMotorPow@addMPow& (0+255),b
  6328  0027CC                     l6606:
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;main.c: 321:  actMotorPow = actMotorPow + addMPow;
  6332  0027CC  5026               	movf	_actMotorPow^0,w,c
  6333  0027CE  25A5               	addwf	calcMotorPow@addMPow& (0+255),w,b
  6334  0027D0  6E26               	movwf	_actMotorPow^0,c
  6335  0027D2  0E00               	movlw	0
  6336  0027D4  BFA5               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  6337  0027D6  0EFF               	movlw	255
  6338  0027D8  2027               	addwfc	(_actMotorPow+1)^0,w,c
  6339  0027DA  6E27               	movwf	(_actMotorPow+1)^0,c
  6340  0027DC                     
  6341                           ; BSR set to: 0
  6342                           ;main.c: 323:  if(actMotorPow > (600)){
  6343  0027DC  BE27               	btfsc	(_actMotorPow+1)^0,7,c
  6344  0027DE  EFFA  F013         	goto	u5861
  6345  0027E2  0E59               	movlw	89
  6346  0027E4  5C26               	subwf	_actMotorPow^0,w,c
  6347  0027E6  0E02               	movlw	2
  6348  0027E8  5827               	subwfb	(_actMotorPow+1)^0,w,c
  6349  0027EA  A0D8               	btfss	status,0,c
  6350  0027EC  EFFA  F013         	goto	u5861
  6351  0027F0  EFFC  F013         	goto	u5860
  6352  0027F4                     u5861:
  6353  0027F4  EF02  F014         	goto	l6612
  6354  0027F8                     u5860:
  6355  0027F8                     
  6356                           ; BSR set to: 0
  6357                           ;main.c: 324:   actMotorPow = (600);
  6358  0027F8  0E02               	movlw	2
  6359  0027FA  6E27               	movwf	(_actMotorPow+1)^0,c
  6360  0027FC  0E58               	movlw	88
  6361  0027FE  6E26               	movwf	_actMotorPow^0,c
  6362                           
  6363                           ;main.c: 325:  }else if(actMotorPow < (-400)){
  6364  002800  EF14  F014         	goto	l6616
  6365  002804                     l6612:
  6366                           
  6367                           ; BSR set to: 0
  6368  002804  AE27               	btfss	(_actMotorPow+1)^0,7,c
  6369  002806  EF0E  F014         	goto	u5871
  6370  00280A  0E70               	movlw	112
  6371  00280C  5C26               	subwf	_actMotorPow^0,w,c
  6372  00280E  0EFE               	movlw	254
  6373  002810  5827               	subwfb	(_actMotorPow+1)^0,w,c
  6374  002812  B0D8               	btfsc	status,0,c
  6375  002814  EF0E  F014         	goto	u5871
  6376  002818  EF10  F014         	goto	u5870
  6377  00281C                     u5871:
  6378  00281C  EF14  F014         	goto	l6616
  6379  002820                     u5870:
  6380  002820                     
  6381                           ; BSR set to: 0
  6382                           ;main.c: 326:   actMotorPow = (-400);
  6383  002820  0EFE               	movlw	254
  6384  002822  6E27               	movwf	(_actMotorPow+1)^0,c
  6385  002824  0E70               	movlw	112
  6386  002826  6E26               	movwf	_actMotorPow^0,c
  6387  002828                     l6616:
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;main.c: 329:     setMotor(actMotorPow);
  6391  002828  C026  F062         	movff	_actMotorPow,setMotor@motorPower
  6392  00282C  C027  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  6393  002830  EC26  F016         	call	_setMotor	;wreg free
  6394  002834                     
  6395                           ;main.c: 331:     oldSpeed = currentSpeed;
  6396  002834  C0DB  F0D9         	movff	_currentSpeed,_oldSpeed
  6397  002838  C0DC  F0DA         	movff	_currentSpeed+1,_oldSpeed+1
  6398  00283C  0012               	return		;funcret
  6399  00283E                     __end_of_calcMotorPow:
  6400                           	callstack 0
  6401                           
  6402 ;; *************** function _setMotor *****************
  6403 ;; Defined at:
  6404 ;;		line 334 in file "main.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  motorPower      2    2[BANK0 ] short 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;Total ram usage:        4 bytes
  6423 ;; Hardware stack levels used: 1
  6424 ;; Hardware stack levels required when called: 9
  6425 ;; This function calls:
  6426 ;;		_PWM7_LoadDutyValue
  6427 ;;		_PWM8_LoadDutyValue
  6428 ;; This function is called by:
  6429 ;;		_startAccell
  6430 ;;		_calcMotorPow
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text29
  6435  002C4C                     __ptext29:
  6436                           	callstack 0
  6437  002C4C                     _setMotor:
  6438                           	callstack 19
  6439  002C4C                     
  6440                           ;main.c: 335:     if(motorPower > (100)){
  6441  002C4C  0100               	movlb	0	; () banked
  6442  002C4E  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6443  002C50  EF33  F016         	goto	u4801
  6444  002C54  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  6445  002C56  E109               	bnz	u4800
  6446  002C58  0E65               	movlw	101
  6447  002C5A  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6448  002C5C  A0D8               	btfss	status,0,c
  6449  002C5E  EF33  F016         	goto	u4801
  6450  002C62  EF35  F016         	goto	u4800
  6451  002C66                     u4801:
  6452  002C66  EF55  F016         	goto	l5972
  6453  002C6A                     u4800:
  6454  002C6A                     
  6455                           ; BSR set to: 0
  6456                           ;main.c: 336:        if(motorPower > (600)){
  6457  002C6A  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6458  002C6C  EF41  F016         	goto	u4811
  6459  002C70  0E59               	movlw	89
  6460  002C72  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6461  002C74  0E02               	movlw	2
  6462  002C76  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6463  002C78  A0D8               	btfss	status,0,c
  6464  002C7A  EF41  F016         	goto	u4811
  6465  002C7E  EF43  F016         	goto	u4810
  6466  002C82                     u4811:
  6467  002C82  EF47  F016         	goto	l5968
  6468  002C86                     u4810:
  6469  002C86                     
  6470                           ; BSR set to: 0
  6471                           ;main.c: 337:             motorPower = (600);
  6472  002C86  0E02               	movlw	2
  6473  002C88  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  6474  002C8A  0E58               	movlw	88
  6475  002C8C  6F62               	movwf	setMotor@motorPower& (0+255),b
  6476  002C8E                     l5968:
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;main.c: 339:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  6480  002C8E  C062  F020         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  6481  002C92  C063  F021         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  6482  002C96  EC7A  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6483  002C9A                     
  6484                           ;main.c: 340:         PWM8_LoadDutyValue(0);
  6485  002C9A  0E00               	movlw	0
  6486  002C9C  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6487  002C9E  0E00               	movlw	0
  6488  002CA0  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6489  002CA2  EC5F  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6490                           
  6491                           ;main.c: 341:     } else if(motorPower < -(100)){
  6492  002CA6  EF98  F016         	goto	l1363
  6493  002CAA                     l5972:
  6494                           
  6495                           ; BSR set to: 0
  6496  002CAA  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  6497  002CAC  EF61  F016         	goto	u4821
  6498  002CB0  0E9C               	movlw	156
  6499  002CB2  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6500  002CB4  0EFF               	movlw	255
  6501  002CB6  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6502  002CB8  B0D8               	btfsc	status,0,c
  6503  002CBA  EF61  F016         	goto	u4821
  6504  002CBE  EF63  F016         	goto	u4820
  6505  002CC2                     u4821:
  6506  002CC2  EF8C  F016         	goto	l5982
  6507  002CC6                     u4820:
  6508  002CC6                     
  6509                           ; BSR set to: 0
  6510                           ;main.c: 342:         if(motorPower < (-400)){
  6511  002CC6  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  6512  002CC8  EF6F  F016         	goto	u4831
  6513  002CCC  0E70               	movlw	112
  6514  002CCE  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6515  002CD0  0EFE               	movlw	254
  6516  002CD2  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6517  002CD4  B0D8               	btfsc	status,0,c
  6518  002CD6  EF6F  F016         	goto	u4831
  6519  002CDA  EF71  F016         	goto	u4830
  6520  002CDE                     u4831:
  6521  002CDE  EF75  F016         	goto	l5978
  6522  002CE2                     u4830:
  6523  002CE2                     
  6524                           ; BSR set to: 0
  6525                           ;main.c: 343:             motorPower = (-400);
  6526  002CE2  0EFE               	movlw	254
  6527  002CE4  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  6528  002CE6  0E70               	movlw	112
  6529  002CE8  6F62               	movwf	setMotor@motorPower& (0+255),b
  6530  002CEA                     l5978:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;main.c: 345:         PWM7_LoadDutyValue(0);
  6534  002CEA  0E00               	movlw	0
  6535  002CEC  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6536  002CEE  0E00               	movlw	0
  6537  002CF0  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6538  002CF2  EC7A  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6539  002CF6                     
  6540                           ;main.c: 346:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  6541  002CF6  C062  F064         	movff	setMotor@motorPower,??_setMotor
  6542  002CFA  C063  F065         	movff	setMotor@motorPower+1,??_setMotor+1
  6543  002CFE  0100               	movlb	0	; () banked
  6544  002D00  1F64               	comf	??_setMotor& (0+255),f,b
  6545  002D02  1F65               	comf	(??_setMotor+1)& (0+255),f,b
  6546  002D04  4B64               	infsnz	??_setMotor& (0+255),f,b
  6547  002D06  2B65               	incf	(??_setMotor+1)& (0+255),f,b
  6548  002D08  C064  F020         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  6549  002D0C  C065  F021         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  6550  002D10  EC5F  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6551                           
  6552                           ;main.c: 347:     } else {
  6553  002D14  EF98  F016         	goto	l1363
  6554  002D18                     l5982:
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;main.c: 348:         PWM7_LoadDutyValue(0);
  6558  002D18  0E00               	movlw	0
  6559  002D1A  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6560  002D1C  0E00               	movlw	0
  6561  002D1E  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6562  002D20  EC7A  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6563                           
  6564                           ;main.c: 349:         PWM8_LoadDutyValue(0);
  6565  002D24  0E00               	movlw	0
  6566  002D26  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6567  002D28  0E00               	movlw	0
  6568  002D2A  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6569  002D2C  EC5F  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6570  002D30                     l1363:
  6571  002D30  0012               	return		;funcret
  6572  002D32                     __end_of_setMotor:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _PWM8_LoadDutyValue *****************
  6576 ;; Defined at:
  6577 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  dutyValue       2   31[COMRAM] unsigned short 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;Total ram usage:        4 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; Hardware stack levels required when called: 8
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_setMotor
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text30
  6606  003ABE                     __ptext30:
  6607                           	callstack 0
  6608  003ABE                     _PWM8_LoadDutyValue:
  6609                           	callstack 19
  6610  003ABE                     
  6611                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6612  003ABE  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6613  003AC2  C021  F061         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  6614  003AC6  0100               	movlb	0	; () banked
  6615  003AC8  90D8               	bcf	status,0,c
  6616  003ACA  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6617  003ACC  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6618  003ACE  90D8               	bcf	status,0,c
  6619  003AD0  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6620  003AD2  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6621  003AD4  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  6622  003AD6  6E61               	movwf	97,c	;volatile
  6623                           
  6624                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  6625  003AD8  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6626  003ADC  0E03               	movlw	3
  6627  003ADE  1760               	andwf	??_PWM8_LoadDutyValue& (0+255),f,b
  6628  003AE0  0E06               	movlw	6
  6629  003AE2  6F61               	movwf	(??_PWM8_LoadDutyValue+1)& (0+255),b
  6630  003AE4                     u4585:
  6631  003AE4  90D8               	bcf	status,0,c
  6632  003AE6  3760               	rlcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6633  003AE8  2F61               	decfsz	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6634  003AEA  EF72  F01D         	goto	u4585
  6635  003AEE  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  6636  003AF0  6E60               	movwf	96,c	;volatile
  6637  003AF2                     
  6638                           ; BSR set to: 0
  6639  003AF2  0012               	return		;funcret
  6640  003AF4                     __end_of_PWM8_LoadDutyValue:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _PWM7_LoadDutyValue *****************
  6644 ;; Defined at:
  6645 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  dutyValue       2   31[COMRAM] unsigned short 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;Total ram usage:        4 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 8
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_setMotor
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text31
  6674  003AF4                     __ptext31:
  6675                           	callstack 0
  6676  003AF4                     _PWM7_LoadDutyValue:
  6677                           	callstack 19
  6678  003AF4                     
  6679                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6680  003AF4  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6681  003AF8  C021  F061         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  6682  003AFC  0100               	movlb	0	; () banked
  6683  003AFE  90D8               	bcf	status,0,c
  6684  003B00  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6685  003B02  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6686  003B04  90D8               	bcf	status,0,c
  6687  003B06  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6688  003B08  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6689  003B0A  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  6690  003B0C  6E65               	movwf	101,c	;volatile
  6691                           
  6692                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  6693  003B0E  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6694  003B12  0E03               	movlw	3
  6695  003B14  1760               	andwf	??_PWM7_LoadDutyValue& (0+255),f,b
  6696  003B16  0E06               	movlw	6
  6697  003B18  6F61               	movwf	(??_PWM7_LoadDutyValue+1)& (0+255),b
  6698  003B1A                     u4575:
  6699  003B1A  90D8               	bcf	status,0,c
  6700  003B1C  3760               	rlcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6701  003B1E  2F61               	decfsz	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6702  003B20  EF8D  F01D         	goto	u4575
  6703  003B24  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  6704  003B26  6E64               	movwf	100,c	;volatile
  6705  003B28                     
  6706                           ; BSR set to: 0
  6707  003B28  0012               	return		;funcret
  6708  003B2A                     __end_of_PWM7_LoadDutyValue:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function _actSpeed *****************
  6712 ;; Defined at:
  6713 ;;		line 68 in file "main.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  speed           2   14[BANK0 ] short 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  2   31[COMRAM] short 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;Total ram usage:        4 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; Hardware stack levels required when called: 9
  6734 ;; This function calls:
  6735 ;;		___aldiv
  6736 ;; This function is called by:
  6737 ;;		_calcMotorPow
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text32
  6742  003270                     __ptext32:
  6743                           	callstack 0
  6744  003270                     _actSpeed:
  6745                           	callstack 19
  6746  003270                     
  6747                           ;main.c: 69:     int16_t speed = 0;
  6748  003270  0E00               	movlw	0
  6749  003272  0100               	movlb	0	; () banked
  6750  003274  6F6F               	movwf	(actSpeed@speed+1)& (0+255),b
  6751  003276  0E00               	movlw	0
  6752  003278  6F6E               	movwf	actSpeed@speed& (0+255),b
  6753  00327A                     
  6754                           ; BSR set to: 0
  6755                           ;main.c: 70:     if(smtPeriod){
  6756  00327A  503C               	movf	_smtPeriod^0,w,c	;volatile
  6757  00327C  103D               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  6758  00327E  103E               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  6759  003280  103F               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  6760  003282  B4D8               	btfsc	status,2,c
  6761  003284  EF46  F019         	goto	u4781
  6762  003288  EF48  F019         	goto	u4780
  6763  00328C                     u4781:
  6764  00328C  EF80  F019         	goto	l5958
  6765  003290                     u4780:
  6766  003290                     
  6767                           ; BSR set to: 0
  6768                           ;main.c: 71:         if(CLC3CONbits.LC3OUT){
  6769  003290  013C               	movlb	60	; () banked
  6770  003292  AB60               	btfss	96,5,b	;volatile
  6771  003294  EF4E  F019         	goto	u4791
  6772  003298  EF50  F019         	goto	u4790
  6773  00329C                     u4791:
  6774  00329C  EF69  F019         	goto	l5956
  6775  0032A0                     u4790:
  6776  0032A0                     
  6777                           ; BSR set to: 60
  6778                           ;main.c: 72:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  6779  0032A0  0E20               	movlw	32
  6780  0032A2  0100               	movlb	0	; () banked
  6781  0032A4  6F60               	movwf	___aldiv@dividend& (0+255),b
  6782  0032A6  0EA1               	movlw	161
  6783  0032A8  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  6784  0032AA  0E07               	movlw	7
  6785  0032AC  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  6786  0032AE  0E00               	movlw	0
  6787  0032B0  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  6788  0032B2  C03C  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6789  0032B6  C03D  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6790  0032BA  C03E  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6791  0032BE  C03F  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6792  0032C2  EC1F  F014         	call	___aldiv	;wreg free
  6793  0032C6  C060  F06E         	movff	?___aldiv,actSpeed@speed
  6794  0032CA  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  6795                           
  6796                           ;main.c: 73:         } else {
  6797  0032CE  EF80  F019         	goto	l5958
  6798  0032D2                     l5956:
  6799                           
  6800                           ; BSR set to: 60
  6801                           ;main.c: 74:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  6802  0032D2  0EE0               	movlw	224
  6803  0032D4  0100               	movlb	0	; () banked
  6804  0032D6  6F60               	movwf	___aldiv@dividend& (0+255),b
  6805  0032D8  0E5E               	movlw	94
  6806  0032DA  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  6807  0032DC  0EF8               	movlw	248
  6808  0032DE  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  6809  0032E0  0EFF               	movlw	255
  6810  0032E2  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  6811  0032E4  C03C  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6812  0032E8  C03D  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6813  0032EC  C03E  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6814  0032F0  C03F  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6815  0032F4  EC1F  F014         	call	___aldiv	;wreg free
  6816  0032F8  C060  F06E         	movff	?___aldiv,actSpeed@speed
  6817  0032FC  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  6818  003300                     l5958:
  6819                           
  6820                           ;main.c: 77:     return speed;
  6821  003300  C06E  F020         	movff	actSpeed@speed,?_actSpeed
  6822  003304  C06F  F021         	movff	actSpeed@speed+1,?_actSpeed+1
  6823  003308  0012               	return		;funcret
  6824  00330A                     __end_of_actSpeed:
  6825                           	callstack 0
  6826                           
  6827 ;; *************** function ___aldiv *****************
  6828 ;; Defined at:
  6829 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  dividend        4    0[BANK0 ] long 
  6832 ;;  divisor         4    4[BANK0 ] long 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  quotient        4   10[BANK0 ] long 
  6835 ;;  sign            1    9[BANK0 ] unsigned char 
  6836 ;;  counter         1    8[BANK0 ] unsigned char 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  4    0[BANK0 ] long 
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6846 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;Total ram usage:       14 bytes
  6851 ;; Hardware stack levels used: 1
  6852 ;; Hardware stack levels required when called: 8
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_actSpeed
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text33
  6861  00283E                     __ptext33:
  6862                           	callstack 0
  6863  00283E                     ___aldiv:
  6864                           	callstack 19
  6865  00283E  0E00               	movlw	0
  6866  002840  0100               	movlb	0	; () banked
  6867  002842  6F69               	movwf	___aldiv@sign& (0+255),b
  6868  002844                     
  6869                           ; BSR set to: 0
  6870  002844  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6871  002846  EF29  F014         	goto	u4620
  6872  00284A  EF27  F014         	goto	u4621
  6873  00284E                     u4621:
  6874  00284E  EF33  F014         	goto	l5822
  6875  002852                     u4620:
  6876  002852                     
  6877                           ; BSR set to: 0
  6878  002852  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6879  002854  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6880  002856  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6881  002858  6D64               	negf	___aldiv@divisor& (0+255),b
  6882  00285A  0E00               	movlw	0
  6883  00285C  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6884  00285E  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6885  002860  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6886  002862                     
  6887                           ; BSR set to: 0
  6888  002862  0E01               	movlw	1
  6889  002864  6F69               	movwf	___aldiv@sign& (0+255),b
  6890  002866                     l5822:
  6891                           
  6892                           ; BSR set to: 0
  6893  002866  BF63               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  6894  002868  EF3A  F014         	goto	u4630
  6895  00286C  EF38  F014         	goto	u4631
  6896  002870                     u4631:
  6897  002870  EF44  F014         	goto	l5828
  6898  002874                     u4630:
  6899  002874                     
  6900                           ; BSR set to: 0
  6901  002874  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6902  002876  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6903  002878  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6904  00287A  6D60               	negf	___aldiv@dividend& (0+255),b
  6905  00287C  0E00               	movlw	0
  6906  00287E  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6907  002880  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6908  002882  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6909  002884                     
  6910                           ; BSR set to: 0
  6911  002884  0E01               	movlw	1
  6912  002886  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  6913  002888                     l5828:
  6914                           
  6915                           ; BSR set to: 0
  6916  002888  0E00               	movlw	0
  6917  00288A  6F6A               	movwf	___aldiv@quotient& (0+255),b
  6918  00288C  0E00               	movlw	0
  6919  00288E  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6920  002890  0E00               	movlw	0
  6921  002892  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6922  002894  0E00               	movlw	0
  6923  002896  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6924  002898                     
  6925                           ; BSR set to: 0
  6926  002898  5164               	movf	___aldiv@divisor& (0+255),w,b
  6927  00289A  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6928  00289C  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6929  00289E  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6930  0028A0  B4D8               	btfsc	status,2,c
  6931  0028A2  EF55  F014         	goto	u4641
  6932  0028A6  EF57  F014         	goto	u4640
  6933  0028AA                     u4641:
  6934  0028AA  EF8D  F014         	goto	l5850
  6935  0028AE                     u4640:
  6936  0028AE                     
  6937                           ; BSR set to: 0
  6938  0028AE  0E01               	movlw	1
  6939  0028B0  6F68               	movwf	___aldiv@counter& (0+255),b
  6940  0028B2  EF61  F014         	goto	l5836
  6941  0028B6                     l5834:
  6942                           
  6943                           ; BSR set to: 0
  6944  0028B6  90D8               	bcf	status,0,c
  6945  0028B8  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  6946  0028BA  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6947  0028BC  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6948  0028BE  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6949  0028C0  2B68               	incf	___aldiv@counter& (0+255),f,b
  6950  0028C2                     l5836:
  6951                           
  6952                           ; BSR set to: 0
  6953  0028C2  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6954  0028C4  EF66  F014         	goto	u4651
  6955  0028C8  EF68  F014         	goto	u4650
  6956  0028CC                     u4651:
  6957  0028CC  EF5B  F014         	goto	l5834
  6958  0028D0                     u4650:
  6959  0028D0                     l5838:
  6960                           
  6961                           ; BSR set to: 0
  6962  0028D0  90D8               	bcf	status,0,c
  6963  0028D2  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  6964  0028D4  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6965  0028D6  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6966  0028D8  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6967  0028DA                     
  6968                           ; BSR set to: 0
  6969  0028DA  5164               	movf	___aldiv@divisor& (0+255),w,b
  6970  0028DC  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  6971  0028DE  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6972  0028E0  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6973  0028E2  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6974  0028E4  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6975  0028E6  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6976  0028E8  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6977  0028EA  A0D8               	btfss	status,0,c
  6978  0028EC  EF7A  F014         	goto	u4661
  6979  0028F0  EF7C  F014         	goto	u4660
  6980  0028F4                     u4661:
  6981  0028F4  EF85  F014         	goto	l5846
  6982  0028F8                     u4660:
  6983  0028F8                     
  6984                           ; BSR set to: 0
  6985  0028F8  5164               	movf	___aldiv@divisor& (0+255),w,b
  6986  0028FA  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  6987  0028FC  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6988  0028FE  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6989  002900  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6990  002902  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6991  002904  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6992  002906  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6993  002908                     
  6994                           ; BSR set to: 0
  6995  002908  816A               	bsf	___aldiv@quotient& (0+255),0,b
  6996  00290A                     l5846:
  6997                           
  6998                           ; BSR set to: 0
  6999  00290A  90D8               	bcf	status,0,c
  7000  00290C  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7001  00290E  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7002  002910  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7003  002912  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  7004  002914                     
  7005                           ; BSR set to: 0
  7006  002914  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  7007  002916  EF68  F014         	goto	l5838
  7008  00291A                     l5850:
  7009                           
  7010                           ; BSR set to: 0
  7011  00291A  5169               	movf	___aldiv@sign& (0+255),w,b
  7012  00291C  B4D8               	btfsc	status,2,c
  7013  00291E  EF93  F014         	goto	u4671
  7014  002922  EF95  F014         	goto	u4670
  7015  002926                     u4671:
  7016  002926  EF9D  F014         	goto	l5854
  7017  00292A                     u4670:
  7018  00292A                     
  7019                           ; BSR set to: 0
  7020  00292A  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7021  00292C  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7022  00292E  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7023  002930  6D6A               	negf	___aldiv@quotient& (0+255),b
  7024  002932  0E00               	movlw	0
  7025  002934  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7026  002936  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7027  002938  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7028  00293A                     l5854:
  7029                           
  7030                           ; BSR set to: 0
  7031  00293A  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  7032  00293E  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  7033  002942  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  7034  002946  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  7035  00294A                     
  7036                           ; BSR set to: 0
  7037  00294A  0012               	return		;funcret
  7038  00294C                     __end_of___aldiv:
  7039                           	callstack 0
  7040                           
  7041 ;; *************** function ___xxtofl *****************
  7042 ;; Defined at:
  7043 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  sign            1    wreg     unsigned char 
  7046 ;;  val             4    0[BANK0 ] long 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  sign            1    8[BANK0 ] unsigned char 
  7049 ;;  arg             4   10[BANK0 ] unsigned long 
  7050 ;;  exp             1    9[BANK0 ] unsigned char 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  4    0[BANK0 ] unsigned char 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7060 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;Total ram usage:       14 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 8
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_loop
  7071 ;;		_checkBatt
  7072 ;;		_calcSpeed
  7073 ;;		_calcMotorPow
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text34
  7078  001F56                     __ptext34:
  7079                           	callstack 0
  7080  001F56                     ___xxtofl:
  7081                           	callstack 20
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;incstack = 0
  7085                           ;___xxtofl@sign stored from wreg
  7086  001F56  0100               	movlb	0	; () banked
  7087  001F58  6F68               	movwf	___xxtofl@sign& (0+255),b
  7088  001F5A  0100               	movlb	0	; () banked
  7089  001F5C  5168               	movf	___xxtofl@sign& (0+255),w,b
  7090  001F5E  B4D8               	btfsc	status,2,c
  7091  001F60  EFB4  F00F         	goto	u5471
  7092  001F64  EFB6  F00F         	goto	u5470
  7093  001F68                     u5471:
  7094  001F68  EFD8  F00F         	goto	l2038
  7095  001F6C                     u5470:
  7096  001F6C                     
  7097                           ; BSR set to: 0
  7098  001F6C  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7099  001F6E  EFBD  F00F         	goto	u5480
  7100  001F72  EFBB  F00F         	goto	u5481
  7101  001F76                     u5481:
  7102  001F76  EFD8  F00F         	goto	l2038
  7103  001F7A                     u5480:
  7104  001F7A                     
  7105                           ; BSR set to: 0
  7106  001F7A  C060  F064         	movff	___xxtofl@val,??___xxtofl
  7107  001F7E  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  7108  001F82  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  7109  001F86  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  7110  001F8A  1F64               	comf	??___xxtofl& (0+255),f,b
  7111  001F8C  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  7112  001F8E  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  7113  001F90  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  7114  001F92  2B64               	incf	??___xxtofl& (0+255),f,b
  7115  001F94  0E00               	movlw	0
  7116  001F96  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7117  001F98  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7118  001F9A  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7119  001F9C  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  7120  001FA0  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  7121  001FA4  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  7122  001FA8  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  7123  001FAC  EFE0  F00F         	goto	l6344
  7124  001FB0                     l2038:
  7125                           
  7126                           ; BSR set to: 0
  7127  001FB0  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  7128  001FB4  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7129  001FB8  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7130  001FBC  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7131  001FC0                     l6344:
  7132                           
  7133                           ; BSR set to: 0
  7134  001FC0  5160               	movf	___xxtofl@val& (0+255),w,b
  7135  001FC2  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7136  001FC4  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7137  001FC6  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7138  001FC8  A4D8               	btfss	status,2,c
  7139  001FCA  EFE9  F00F         	goto	u5491
  7140  001FCE  EFEB  F00F         	goto	u5490
  7141  001FD2                     u5491:
  7142  001FD2  EFF5  F00F         	goto	l6350
  7143  001FD6                     u5490:
  7144  001FD6                     
  7145                           ; BSR set to: 0
  7146  001FD6  0E00               	movlw	0
  7147  001FD8  6F60               	movwf	?___xxtofl& (0+255),b
  7148  001FDA  0E00               	movlw	0
  7149  001FDC  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  7150  001FDE  0E00               	movlw	0
  7151  001FE0  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  7152  001FE2  0E00               	movlw	0
  7153  001FE4  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  7154  001FE6  EF86  F010         	goto	l2041
  7155  001FEA                     l6350:
  7156                           
  7157                           ; BSR set to: 0
  7158  001FEA  0E96               	movlw	150
  7159  001FEC  6F69               	movwf	___xxtofl@exp& (0+255),b
  7160  001FEE  EFFF  F00F         	goto	l6354
  7161  001FF2                     l6352:
  7162                           
  7163                           ; BSR set to: 0
  7164  001FF2  2B69               	incf	___xxtofl@exp& (0+255),f,b
  7165  001FF4  90D8               	bcf	status,0,c
  7166  001FF6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7167  001FF8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7168  001FFA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7169  001FFC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  7170  001FFE                     l6354:
  7171                           
  7172                           ; BSR set to: 0
  7173  001FFE  0E00               	movlw	0
  7174  002000  156A               	andwf	___xxtofl@arg& (0+255),w,b
  7175  002002  6F64               	movwf	??___xxtofl& (0+255),b
  7176  002004  0E00               	movlw	0
  7177  002006  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7178  002008  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  7179  00200A  0E00               	movlw	0
  7180  00200C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7181  00200E  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  7182  002010  0EFE               	movlw	254
  7183  002012  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7184  002014  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  7185  002016  5164               	movf	??___xxtofl& (0+255),w,b
  7186  002018  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7187  00201A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7188  00201C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7189  00201E  A4D8               	btfss	status,2,c
  7190  002020  EF14  F010         	goto	u5501
  7191  002024  EF16  F010         	goto	u5500
  7192  002028                     u5501:
  7193  002028  EFF9  F00F         	goto	l6352
  7194  00202C                     u5500:
  7195  00202C  EF24  F010         	goto	l2045
  7196  002030                     l6356:
  7197                           
  7198                           ; BSR set to: 0
  7199  002030  2B69               	incf	___xxtofl@exp& (0+255),f,b
  7200  002032                     
  7201                           ; BSR set to: 0
  7202  002032  0E01               	movlw	1
  7203  002034  276A               	addwf	___xxtofl@arg& (0+255),f,b
  7204  002036  0E00               	movlw	0
  7205  002038  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7206  00203A  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7207  00203C  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7208  00203E                     
  7209                           ; BSR set to: 0
  7210  00203E  90D8               	bcf	status,0,c
  7211  002040  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7212  002042  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7213  002044  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7214  002046  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  7215  002048                     l2045:
  7216                           
  7217                           ; BSR set to: 0
  7218  002048  0E00               	movlw	0
  7219  00204A  156A               	andwf	___xxtofl@arg& (0+255),w,b
  7220  00204C  6F64               	movwf	??___xxtofl& (0+255),b
  7221  00204E  0E00               	movlw	0
  7222  002050  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7223  002052  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  7224  002054  0E00               	movlw	0
  7225  002056  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7226  002058  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  7227  00205A  0EFF               	movlw	255
  7228  00205C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7229  00205E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  7230  002060  5164               	movf	??___xxtofl& (0+255),w,b
  7231  002062  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7232  002064  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7233  002066  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7234  002068  A4D8               	btfss	status,2,c
  7235  00206A  EF39  F010         	goto	u5511
  7236  00206E  EF3B  F010         	goto	u5510
  7237  002072                     u5511:
  7238  002072  EF18  F010         	goto	l6356
  7239  002076                     u5510:
  7240  002076  EF43  F010         	goto	l6364
  7241  00207A                     l6362:
  7242                           
  7243                           ; BSR set to: 0
  7244  00207A  0769               	decf	___xxtofl@exp& (0+255),f,b
  7245  00207C  90D8               	bcf	status,0,c
  7246  00207E  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  7247  002080  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7248  002082  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7249  002084  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7250  002086                     l6364:
  7251                           
  7252                           ; BSR set to: 0
  7253  002086  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7254  002088  EF48  F010         	goto	u5521
  7255  00208C  EF4A  F010         	goto	u5520
  7256  002090                     u5521:
  7257  002090  EF52  F010         	goto	l2052
  7258  002094                     u5520:
  7259  002094                     
  7260                           ; BSR set to: 0
  7261  002094  0E02               	movlw	2
  7262  002096  6169               	cpfslt	___xxtofl@exp& (0+255),b
  7263  002098  EF50  F010         	goto	u5531
  7264  00209C  EF52  F010         	goto	u5530
  7265  0020A0                     u5531:
  7266  0020A0  EF3D  F010         	goto	l6362
  7267  0020A4                     u5530:
  7268  0020A4                     l2052:
  7269                           
  7270                           ; BSR set to: 0
  7271  0020A4  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  7272  0020A6  EF57  F010         	goto	u5541
  7273  0020AA  EF59  F010         	goto	u5540
  7274  0020AE                     u5541:
  7275  0020AE  EF5A  F010         	goto	l6370
  7276  0020B2                     u5540:
  7277  0020B2                     
  7278                           ; BSR set to: 0
  7279  0020B2  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  7280  0020B4                     l6370:
  7281                           
  7282                           ; BSR set to: 0
  7283  0020B4  90D8               	bcf	status,0,c
  7284  0020B6  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  7285  0020B8                     
  7286                           ; BSR set to: 0
  7287  0020B8  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  7288  0020BC  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  7289  0020BE  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  7290  0020C0  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  7291  0020C2  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  7292  0020C6  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  7293  0020C8  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  7294  0020CA  6B64               	clrf	??___xxtofl& (0+255),b
  7295  0020CC  5164               	movf	??___xxtofl& (0+255),w,b
  7296  0020CE  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  7297  0020D0  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  7298  0020D2  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7299  0020D4  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  7300  0020D6  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7301  0020D8  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  7302  0020DA  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7303  0020DC                     
  7304                           ; BSR set to: 0
  7305  0020DC  5168               	movf	___xxtofl@sign& (0+255),w,b
  7306  0020DE  B4D8               	btfsc	status,2,c
  7307  0020E0  EF74  F010         	goto	u5551
  7308  0020E4  EF76  F010         	goto	u5550
  7309  0020E8                     u5551:
  7310  0020E8  EF7E  F010         	goto	l6380
  7311  0020EC                     u5550:
  7312  0020EC                     
  7313                           ; BSR set to: 0
  7314  0020EC  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7315  0020EE  EF7D  F010         	goto	u5560
  7316  0020F2  EF7B  F010         	goto	u5561
  7317  0020F6                     u5561:
  7318  0020F6  EF7E  F010         	goto	l6380
  7319  0020FA                     u5560:
  7320  0020FA                     
  7321                           ; BSR set to: 0
  7322  0020FA  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7323  0020FC                     l6380:
  7324                           
  7325                           ; BSR set to: 0
  7326  0020FC  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  7327  002100  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  7328  002104  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  7329  002108  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  7330  00210C                     l2041:
  7331                           
  7332                           ; BSR set to: 0
  7333  00210C  0012               	return		;funcret
  7334  00210E                     __end_of___xxtofl:
  7335                           	callstack 0
  7336                           
  7337 ;; *************** function ___fltol *****************
  7338 ;; Defined at:
  7339 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  f1              4   55[BANK0 ] unsigned char 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  exp1            1   32[COMRAM] unsigned char 
  7344 ;;  sign1           1   31[COMRAM] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  4   55[BANK0 ] long 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, status,0
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7358 ;;Total ram usage:       10 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 8
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_calcSpeed
  7365 ;;		_calcMotorPow
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text35
  7370  00294C                     __ptext35:
  7371                           	callstack 0
  7372  00294C                     ___fltol:
  7373                           	callstack 20
  7374  00294C  0100               	movlb	0	; () banked
  7375  00294E  3599               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7376  002950  359A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7377  002952  6E21               	movwf	___fltol@exp1^0,c
  7378  002954  5021               	movf	___fltol@exp1^0,w,c
  7379  002956  A4D8               	btfss	status,2,c
  7380  002958  EFB0  F014         	goto	u3381
  7381  00295C  EFB2  F014         	goto	u3380
  7382  002960                     u3381:
  7383  002960  EFBC  F014         	goto	l4824
  7384  002964                     u3380:
  7385  002964                     l4820:
  7386                           
  7387                           ; BSR set to: 0
  7388  002964  0E00               	movlw	0
  7389  002966  6F97               	movwf	?___fltol& (0+255),b
  7390  002968  0E00               	movlw	0
  7391  00296A  6F98               	movwf	(?___fltol+1)& (0+255),b
  7392  00296C  0E00               	movlw	0
  7393  00296E  6F99               	movwf	(?___fltol+2)& (0+255),b
  7394  002970  0E00               	movlw	0
  7395  002972  6F9A               	movwf	(?___fltol+3)& (0+255),b
  7396  002974  EF29  F015         	goto	l1680
  7397  002978                     l4824:
  7398                           
  7399                           ; BSR set to: 0
  7400  002978  C097  F09B         	movff	___fltol@f1,??___fltol
  7401  00297C  C098  F09C         	movff	___fltol@f1+1,??___fltol+1
  7402  002980  C099  F09D         	movff	___fltol@f1+2,??___fltol+2
  7403  002984  C09A  F09E         	movff	___fltol@f1+3,??___fltol+3
  7404  002988  0E20               	movlw	32
  7405  00298A  EFCC  F014         	goto	u3390
  7406  00298E                     u3395:
  7407  00298E  90D8               	bcf	status,0,c
  7408  002990  339E               	rrcf	(??___fltol+3)& (0+255),f,b
  7409  002992  339D               	rrcf	(??___fltol+2)& (0+255),f,b
  7410  002994  339C               	rrcf	(??___fltol+1)& (0+255),f,b
  7411  002996  339B               	rrcf	??___fltol& (0+255),f,b
  7412  002998                     u3390:
  7413  002998  2EE8               	decfsz	wreg,f,c
  7414  00299A  EFC7  F014         	goto	u3395
  7415  00299E  519B               	movf	??___fltol& (0+255),w,b
  7416  0029A0  6E20               	movwf	___fltol@sign1^0,c
  7417  0029A2                     
  7418                           ; BSR set to: 0
  7419  0029A2  8F99               	bsf	(___fltol@f1+2)& (0+255),7,b
  7420  0029A4                     
  7421                           ; BSR set to: 0
  7422  0029A4  0EFF               	movlw	255
  7423  0029A6  1797               	andwf	___fltol@f1& (0+255),f,b
  7424  0029A8  0EFF               	movlw	255
  7425  0029AA  1798               	andwf	(___fltol@f1+1)& (0+255),f,b
  7426  0029AC  0EFF               	movlw	255
  7427  0029AE  1799               	andwf	(___fltol@f1+2)& (0+255),f,b
  7428  0029B0  0E00               	movlw	0
  7429  0029B2  179A               	andwf	(___fltol@f1+3)& (0+255),f,b
  7430  0029B4                     
  7431                           ; BSR set to: 0
  7432  0029B4  0E96               	movlw	150
  7433  0029B6  5E21               	subwf	___fltol@exp1^0,f,c
  7434  0029B8                     
  7435                           ; BSR set to: 0
  7436  0029B8  BE21               	btfsc	___fltol@exp1^0,7,c
  7437  0029BA  EFE3  F014         	goto	u3400
  7438  0029BE  EFE1  F014         	goto	u3401
  7439  0029C2                     u3401:
  7440  0029C2  EFF9  F014         	goto	l4844
  7441  0029C6                     u3400:
  7442  0029C6                     
  7443                           ; BSR set to: 0
  7444  0029C6  5021               	movf	___fltol@exp1^0,w,c
  7445  0029C8  0A80               	xorlw	128
  7446  0029CA  0F97               	addlw	151
  7447  0029CC  B0D8               	btfsc	status,0,c
  7448  0029CE  EFEB  F014         	goto	u3411
  7449  0029D2  EFED  F014         	goto	u3410
  7450  0029D6                     u3411:
  7451  0029D6  EFEF  F014         	goto	l4840
  7452  0029DA                     u3410:
  7453  0029DA  EFB2  F014         	goto	l4820
  7454  0029DE                     l4840:
  7455                           
  7456                           ; BSR set to: 0
  7457  0029DE  90D8               	bcf	status,0,c
  7458  0029E0  339A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7459  0029E2  3399               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7460  0029E4  3398               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7461  0029E6  3397               	rrcf	___fltol@f1& (0+255),f,b
  7462  0029E8                     
  7463                           ; BSR set to: 0
  7464  0029E8  3E21               	incfsz	___fltol@exp1^0,f,c
  7465  0029EA  EFEF  F014         	goto	l4840
  7466  0029EE  EF11  F015         	goto	l4854
  7467  0029F2                     l4844:
  7468                           
  7469                           ; BSR set to: 0
  7470  0029F2  0E1F               	movlw	31
  7471  0029F4  6421               	cpfsgt	___fltol@exp1^0,c
  7472  0029F6  EFFF  F014         	goto	u3421
  7473  0029FA  EF01  F015         	goto	u3420
  7474  0029FE                     u3421:
  7475  0029FE  EF09  F015         	goto	l4852
  7476  002A02                     u3420:
  7477  002A02  EFB2  F014         	goto	l4820
  7478  002A06                     l4850:
  7479                           
  7480                           ; BSR set to: 0
  7481  002A06  90D8               	bcf	status,0,c
  7482  002A08  3797               	rlcf	___fltol@f1& (0+255),f,b
  7483  002A0A  3798               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7484  002A0C  3799               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7485  002A0E  379A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7486  002A10  0621               	decf	___fltol@exp1^0,f,c
  7487  002A12                     l4852:
  7488                           
  7489                           ; BSR set to: 0
  7490  002A12  5021               	movf	___fltol@exp1^0,w,c
  7491  002A14  A4D8               	btfss	status,2,c
  7492  002A16  EF0F  F015         	goto	u3431
  7493  002A1A  EF11  F015         	goto	u3430
  7494  002A1E                     u3431:
  7495  002A1E  EF03  F015         	goto	l4850
  7496  002A22                     u3430:
  7497  002A22                     l4854:
  7498                           
  7499                           ; BSR set to: 0
  7500  002A22  5020               	movf	___fltol@sign1^0,w,c
  7501  002A24  B4D8               	btfsc	status,2,c
  7502  002A26  EF17  F015         	goto	u3441
  7503  002A2A  EF19  F015         	goto	u3440
  7504  002A2E                     u3441:
  7505  002A2E  EF21  F015         	goto	l4858
  7506  002A32                     u3440:
  7507  002A32                     
  7508                           ; BSR set to: 0
  7509  002A32  1F9A               	comf	(___fltol@f1+3)& (0+255),f,b
  7510  002A34  1F99               	comf	(___fltol@f1+2)& (0+255),f,b
  7511  002A36  1F98               	comf	(___fltol@f1+1)& (0+255),f,b
  7512  002A38  6D97               	negf	___fltol@f1& (0+255),b
  7513  002A3A  0E00               	movlw	0
  7514  002A3C  2398               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7515  002A3E  2399               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7516  002A40  239A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7517  002A42                     l4858:
  7518                           
  7519                           ; BSR set to: 0
  7520  002A42  C097  F097         	movff	___fltol@f1,?___fltol
  7521  002A46  C098  F098         	movff	___fltol@f1+1,?___fltol+1
  7522  002A4A  C099  F099         	movff	___fltol@f1+2,?___fltol+2
  7523  002A4E  C09A  F09A         	movff	___fltol@f1+3,?___fltol+3
  7524  002A52                     l1680:
  7525                           
  7526                           ; BSR set to: 0
  7527  002A52  0012               	return		;funcret
  7528  002A54                     __end_of___fltol:
  7529                           	callstack 0
  7530                           
  7531 ;; *************** function ___flmul *****************
  7532 ;; Defined at:
  7533 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  b               4   14[BANK0 ] long 
  7536 ;;  a               4   18[BANK0 ] long 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  prod            4   33[BANK0 ] struct .
  7539 ;;  grs             4   28[BANK0 ] unsigned long 
  7540 ;;  temp            2   37[BANK0 ] struct .
  7541 ;;  bexp            1   32[BANK0 ] unsigned char 
  7542 ;;  aexp            1   27[BANK0 ] unsigned char 
  7543 ;;  sign            1   26[BANK0 ] unsigned char 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  4   14[BANK0 ] unsigned char 
  7546 ;; Registers used:
  7547 ;;		wreg, status,2, status,0, prodl, prodh
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7553 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;Total ram usage:       25 bytes
  7558 ;; Hardware stack levels used: 1
  7559 ;; Hardware stack levels required when called: 8
  7560 ;; This function calls:
  7561 ;;		Nothing
  7562 ;; This function is called by:
  7563 ;;		_calcSpeed
  7564 ;;		_calcMotorPow
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text36
  7569  0014E0                     __ptext36:
  7570                           	callstack 0
  7571  0014E0                     ___flmul:
  7572                           	callstack 20
  7573  0014E0  0100               	movlb	0	; () banked
  7574  0014E2  5171               	movf	(___flmul@b+3)& (0+255),w,b
  7575  0014E4  0B80               	andlw	128
  7576  0014E6  6F7A               	movwf	___flmul@sign& (0+255),b
  7577  0014E8  5171               	movf	(___flmul@b+3)& (0+255),w,b
  7578  0014EA  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  7579  0014EC  6F80               	movwf	___flmul@bexp& (0+255),b
  7580  0014EE                     
  7581                           ; BSR set to: 0
  7582  0014EE  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  7583  0014F0  EF7C  F00A         	goto	u5231
  7584  0014F4  EF7E  F00A         	goto	u5230
  7585  0014F8                     u5231:
  7586  0014F8  EF7F  F00A         	goto	l6192
  7587  0014FC                     u5230:
  7588  0014FC                     
  7589                           ; BSR set to: 0
  7590  0014FC  8180               	bsf	___flmul@bexp& (0+255),0,b
  7591  0014FE                     l6192:
  7592                           
  7593                           ; BSR set to: 0
  7594  0014FE  5180               	movf	___flmul@bexp& (0+255),w,b
  7595  001500  B4D8               	btfsc	status,2,c
  7596  001502  EF85  F00A         	goto	u5241
  7597  001506  EF87  F00A         	goto	u5240
  7598  00150A                     u5241:
  7599  00150A  EF9A  F00A         	goto	l6200
  7600  00150E                     u5240:
  7601  00150E                     
  7602                           ; BSR set to: 0
  7603  00150E  2980               	incf	___flmul@bexp& (0+255),w,b
  7604  001510  A4D8               	btfss	status,2,c
  7605  001512  EF8D  F00A         	goto	u5251
  7606  001516  EF8F  F00A         	goto	u5250
  7607  00151A                     u5251:
  7608  00151A  EF97  F00A         	goto	l6198
  7609  00151E                     u5250:
  7610  00151E                     
  7611                           ; BSR set to: 0
  7612  00151E  0E00               	movlw	0
  7613  001520  6F6E               	movwf	___flmul@b& (0+255),b
  7614  001522  0E00               	movlw	0
  7615  001524  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  7616  001526  0E00               	movlw	0
  7617  001528  6F70               	movwf	(___flmul@b+2)& (0+255),b
  7618  00152A  0E00               	movlw	0
  7619  00152C  6F71               	movwf	(___flmul@b+3)& (0+255),b
  7620  00152E                     l6198:
  7621                           
  7622                           ; BSR set to: 0
  7623  00152E  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  7624  001530  EFA2  F00A         	goto	l6202
  7625  001534                     l6200:
  7626                           
  7627                           ; BSR set to: 0
  7628  001534  0E00               	movlw	0
  7629  001536  6F6E               	movwf	___flmul@b& (0+255),b
  7630  001538  0E00               	movlw	0
  7631  00153A  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  7632  00153C  0E00               	movlw	0
  7633  00153E  6F70               	movwf	(___flmul@b+2)& (0+255),b
  7634  001540  0E00               	movlw	0
  7635  001542  6F71               	movwf	(___flmul@b+3)& (0+255),b
  7636  001544                     l6202:
  7637                           
  7638                           ; BSR set to: 0
  7639  001544  5175               	movf	(___flmul@a+3)& (0+255),w,b
  7640  001546  0B80               	andlw	128
  7641  001548  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  7642  00154A                     
  7643                           ; BSR set to: 0
  7644  00154A  5175               	movf	(___flmul@a+3)& (0+255),w,b
  7645  00154C  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  7646  00154E  6F7B               	movwf	___flmul@aexp& (0+255),b
  7647  001550                     
  7648                           ; BSR set to: 0
  7649  001550  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  7650  001552  EFAD  F00A         	goto	u5261
  7651  001556  EFAF  F00A         	goto	u5260
  7652  00155A                     u5261:
  7653  00155A  EFB0  F00A         	goto	l6210
  7654  00155E                     u5260:
  7655  00155E                     
  7656                           ; BSR set to: 0
  7657  00155E  817B               	bsf	___flmul@aexp& (0+255),0,b
  7658  001560                     l6210:
  7659                           
  7660                           ; BSR set to: 0
  7661  001560  517B               	movf	___flmul@aexp& (0+255),w,b
  7662  001562  B4D8               	btfsc	status,2,c
  7663  001564  EFB6  F00A         	goto	u5271
  7664  001568  EFB8  F00A         	goto	u5270
  7665  00156C                     u5271:
  7666  00156C  EFCB  F00A         	goto	l6218
  7667  001570                     u5270:
  7668  001570                     
  7669                           ; BSR set to: 0
  7670  001570  297B               	incf	___flmul@aexp& (0+255),w,b
  7671  001572  A4D8               	btfss	status,2,c
  7672  001574  EFBE  F00A         	goto	u5281
  7673  001578  EFC0  F00A         	goto	u5280
  7674  00157C                     u5281:
  7675  00157C  EFC8  F00A         	goto	l6216
  7676  001580                     u5280:
  7677  001580                     
  7678                           ; BSR set to: 0
  7679  001580  0E00               	movlw	0
  7680  001582  6F72               	movwf	___flmul@a& (0+255),b
  7681  001584  0E00               	movlw	0
  7682  001586  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7683  001588  0E00               	movlw	0
  7684  00158A  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7685  00158C  0E00               	movlw	0
  7686  00158E  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7687  001590                     l6216:
  7688                           
  7689                           ; BSR set to: 0
  7690  001590  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  7691  001592  EFD3  F00A         	goto	l1997
  7692  001596                     l6218:
  7693                           
  7694                           ; BSR set to: 0
  7695  001596  0E00               	movlw	0
  7696  001598  6F72               	movwf	___flmul@a& (0+255),b
  7697  00159A  0E00               	movlw	0
  7698  00159C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7699  00159E  0E00               	movlw	0
  7700  0015A0  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7701  0015A2  0E00               	movlw	0
  7702  0015A4  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7703  0015A6                     l1997:
  7704                           
  7705                           ; BSR set to: 0
  7706  0015A6  517B               	movf	___flmul@aexp& (0+255),w,b
  7707  0015A8  B4D8               	btfsc	status,2,c
  7708  0015AA  EFD9  F00A         	goto	u5291
  7709  0015AE  EFDB  F00A         	goto	u5290
  7710  0015B2                     u5291:
  7711  0015B2  EFE3  F00A         	goto	l6222
  7712  0015B6                     u5290:
  7713  0015B6                     
  7714                           ; BSR set to: 0
  7715  0015B6  5180               	movf	___flmul@bexp& (0+255),w,b
  7716  0015B8  A4D8               	btfss	status,2,c
  7717  0015BA  EFE1  F00A         	goto	u5301
  7718  0015BE  EFE3  F00A         	goto	u5300
  7719  0015C2                     u5301:
  7720  0015C2  EFED  F00A         	goto	l6226
  7721  0015C6                     u5300:
  7722  0015C6                     l6222:
  7723                           
  7724                           ; BSR set to: 0
  7725  0015C6  0E00               	movlw	0
  7726  0015C8  6F6E               	movwf	?___flmul& (0+255),b
  7727  0015CA  0E00               	movlw	0
  7728  0015CC  6F6F               	movwf	(?___flmul+1)& (0+255),b
  7729  0015CE  0E00               	movlw	0
  7730  0015D0  6F70               	movwf	(?___flmul+2)& (0+255),b
  7731  0015D2  0E00               	movlw	0
  7732  0015D4  6F71               	movwf	(?___flmul+3)& (0+255),b
  7733  0015D6  EF97  F00C         	goto	l2001
  7734  0015DA                     l6226:
  7735                           
  7736                           ; BSR set to: 0
  7737  0015DA  5174               	movf	(___flmul@a+2)& (0+255),w,b
  7738  0015DC  036E               	mulwf	___flmul@b& (0+255),b
  7739  0015DE  006F FFCC  F085    	movff	prodl,___flmul@temp
  7740  0015E4  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7741  0015EA                     
  7742                           ; BSR set to: 0
  7743  0015EA  5185               	movf	___flmul@temp& (0+255),w,b
  7744  0015EC  6F7C               	movwf	___flmul@grs& (0+255),b
  7745  0015EE  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  7746  0015F0  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  7747  0015F2  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  7748  0015F4                     
  7749                           ; BSR set to: 0
  7750  0015F4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7751  0015F6  6F81               	movwf	___flmul@prod& (0+255),b
  7752  0015F8  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  7753  0015FA  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  7754  0015FC  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  7755  0015FE  5173               	movf	(___flmul@a+1)& (0+255),w,b
  7756  001600  036F               	mulwf	(___flmul@b+1)& (0+255),b
  7757  001602  006F FFCC  F085    	movff	prodl,___flmul@temp
  7758  001608  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7759  00160E                     
  7760                           ; BSR set to: 0
  7761  00160E  5185               	movf	___flmul@temp& (0+255),w,b
  7762  001610  277C               	addwf	___flmul@grs& (0+255),f,b
  7763  001612  0E00               	movlw	0
  7764  001614  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7765  001616  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7766  001618  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7767  00161A                     
  7768                           ; BSR set to: 0
  7769  00161A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7770  00161C  2781               	addwf	___flmul@prod& (0+255),f,b
  7771  00161E  0E00               	movlw	0
  7772  001620  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7773  001622  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7774  001624  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7775  001626  5172               	movf	___flmul@a& (0+255),w,b
  7776  001628  0370               	mulwf	(___flmul@b+2)& (0+255),b
  7777  00162A  006F FFCC  F085    	movff	prodl,___flmul@temp
  7778  001630  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7779  001636                     
  7780                           ; BSR set to: 0
  7781  001636  5185               	movf	___flmul@temp& (0+255),w,b
  7782  001638  277C               	addwf	___flmul@grs& (0+255),f,b
  7783  00163A  0E00               	movlw	0
  7784  00163C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7785  00163E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7786  001640  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7787  001642                     
  7788                           ; BSR set to: 0
  7789  001642  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7790  001644  2781               	addwf	___flmul@prod& (0+255),f,b
  7791  001646  0E00               	movlw	0
  7792  001648  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7793  00164A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7794  00164C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7795  00164E                     
  7796                           ; BSR set to: 0
  7797  00164E  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  7798  001652  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  7799  001656  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  7800  00165A  6B7C               	clrf	___flmul@grs& (0+255),b
  7801  00165C                     
  7802                           ; BSR set to: 0
  7803  00165C  5172               	movf	___flmul@a& (0+255),w,b
  7804  00165E  036F               	mulwf	(___flmul@b+1)& (0+255),b
  7805  001660  006F FFCC  F085    	movff	prodl,___flmul@temp
  7806  001666  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7807  00166C                     
  7808                           ; BSR set to: 0
  7809  00166C  5185               	movf	___flmul@temp& (0+255),w,b
  7810  00166E  277C               	addwf	___flmul@grs& (0+255),f,b
  7811  001670  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7812  001672  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7813  001674  0E00               	movlw	0
  7814  001676  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7815  001678  0E00               	movlw	0
  7816  00167A  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7817  00167C                     
  7818                           ; BSR set to: 0
  7819  00167C  5173               	movf	(___flmul@a+1)& (0+255),w,b
  7820  00167E  036E               	mulwf	___flmul@b& (0+255),b
  7821  001680  006F FFCC  F085    	movff	prodl,___flmul@temp
  7822  001686  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7823  00168C                     
  7824                           ; BSR set to: 0
  7825  00168C  5185               	movf	___flmul@temp& (0+255),w,b
  7826  00168E  277C               	addwf	___flmul@grs& (0+255),f,b
  7827  001690  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7828  001692  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7829  001694  0E00               	movlw	0
  7830  001696  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7831  001698  0E00               	movlw	0
  7832  00169A  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7833  00169C                     
  7834                           ; BSR set to: 0
  7835  00169C  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  7836  0016A0  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  7837  0016A4  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  7838  0016A8  6B7C               	clrf	___flmul@grs& (0+255),b
  7839  0016AA  5172               	movf	___flmul@a& (0+255),w,b
  7840  0016AC  036E               	mulwf	___flmul@b& (0+255),b
  7841  0016AE  006F FFCC  F085    	movff	prodl,___flmul@temp
  7842  0016B4  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7843  0016BA                     
  7844                           ; BSR set to: 0
  7845  0016BA  5185               	movf	___flmul@temp& (0+255),w,b
  7846  0016BC  277C               	addwf	___flmul@grs& (0+255),f,b
  7847  0016BE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7848  0016C0  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7849  0016C2  0E00               	movlw	0
  7850  0016C4  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7851  0016C6  0E00               	movlw	0
  7852  0016C8  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7853  0016CA                     
  7854                           ; BSR set to: 0
  7855  0016CA  5174               	movf	(___flmul@a+2)& (0+255),w,b
  7856  0016CC  036F               	mulwf	(___flmul@b+1)& (0+255),b
  7857  0016CE  006F FFCC  F085    	movff	prodl,___flmul@temp
  7858  0016D4  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7859  0016DA  5185               	movf	___flmul@temp& (0+255),w,b
  7860  0016DC  2781               	addwf	___flmul@prod& (0+255),f,b
  7861  0016DE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7862  0016E0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7863  0016E2  0E00               	movlw	0
  7864  0016E4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7865  0016E6  0E00               	movlw	0
  7866  0016E8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7867  0016EA                     
  7868                           ; BSR set to: 0
  7869  0016EA  5173               	movf	(___flmul@a+1)& (0+255),w,b
  7870  0016EC  0370               	mulwf	(___flmul@b+2)& (0+255),b
  7871  0016EE  006F FFCC  F085    	movff	prodl,___flmul@temp
  7872  0016F4  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7873  0016FA                     
  7874                           ; BSR set to: 0
  7875  0016FA  5185               	movf	___flmul@temp& (0+255),w,b
  7876  0016FC  2781               	addwf	___flmul@prod& (0+255),f,b
  7877  0016FE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7878  001700  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7879  001702  0E00               	movlw	0
  7880  001704  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7881  001706  0E00               	movlw	0
  7882  001708  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7883  00170A  5174               	movf	(___flmul@a+2)& (0+255),w,b
  7884  00170C  0370               	mulwf	(___flmul@b+2)& (0+255),b
  7885  00170E  006F FFCC  F085    	movff	prodl,___flmul@temp
  7886  001714  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  7887  00171A                     
  7888                           ; BSR set to: 0
  7889  00171A  5185               	movf	___flmul@temp& (0+255),w,b
  7890  00171C  6F76               	movwf	??___flmul& (0+255),b
  7891  00171E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  7892  001720  6F77               	movwf	(??___flmul+1)& (0+255),b
  7893  001722  6B78               	clrf	(??___flmul+2)& (0+255),b
  7894  001724  6B79               	clrf	(??___flmul+3)& (0+255),b
  7895  001726  C078  F079         	movff	??___flmul+2,??___flmul+3
  7896  00172A  C077  F078         	movff	??___flmul+1,??___flmul+2
  7897  00172E  C076  F077         	movff	??___flmul,??___flmul+1
  7898  001732  6B76               	clrf	??___flmul& (0+255),b
  7899  001734  5176               	movf	??___flmul& (0+255),w,b
  7900  001736  2781               	addwf	___flmul@prod& (0+255),f,b
  7901  001738  5177               	movf	(??___flmul+1)& (0+255),w,b
  7902  00173A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7903  00173C  5178               	movf	(??___flmul+2)& (0+255),w,b
  7904  00173E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7905  001740  5179               	movf	(??___flmul+3)& (0+255),w,b
  7906  001742  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7907  001744                     
  7908                           ; BSR set to: 0
  7909  001744  C07C  F076         	movff	___flmul@grs,??___flmul
  7910  001748  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  7911  00174C  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  7912  001750  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  7913  001754  0E19               	movlw	25
  7914  001756  EFB2  F00B         	goto	u5310
  7915  00175A                     u5315:
  7916  00175A  90D8               	bcf	status,0,c
  7917  00175C  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  7918  00175E  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  7919  001760  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  7920  001762  3376               	rrcf	??___flmul& (0+255),f,b
  7921  001764                     u5310:
  7922  001764  2EE8               	decfsz	wreg,f,c
  7923  001766  EFAD  F00B         	goto	u5315
  7924  00176A  5176               	movf	??___flmul& (0+255),w,b
  7925  00176C  2781               	addwf	___flmul@prod& (0+255),f,b
  7926  00176E  5177               	movf	(??___flmul+1)& (0+255),w,b
  7927  001770  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7928  001772  5178               	movf	(??___flmul+2)& (0+255),w,b
  7929  001774  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7930  001776  5179               	movf	(??___flmul+3)& (0+255),w,b
  7931  001778  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7932  00177A                     
  7933                           ; BSR set to: 0
  7934  00177A  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  7935  00177E  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  7936  001782  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  7937  001786  6B7C               	clrf	___flmul@grs& (0+255),b
  7938  001788                     
  7939                           ; BSR set to: 0
  7940  001788  517B               	movf	___flmul@aexp& (0+255),w,b
  7941  00178A  C080  F076         	movff	___flmul@bexp,??___flmul
  7942  00178E  6B77               	clrf	(??___flmul+1)& (0+255),b
  7943  001790  2776               	addwf	??___flmul& (0+255),f,b
  7944  001792  0E00               	movlw	0
  7945  001794  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  7946  001796  0E82               	movlw	130
  7947  001798  2576               	addwf	??___flmul& (0+255),w,b
  7948  00179A  6F85               	movwf	___flmul@temp& (0+255),b
  7949  00179C  0EFF               	movlw	255
  7950  00179E  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  7951  0017A0  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  7952  0017A2  EFE8  F00B         	goto	l6274
  7953  0017A6                     l6268:
  7954                           
  7955                           ; BSR set to: 0
  7956  0017A6  90D8               	bcf	status,0,c
  7957  0017A8  3781               	rlcf	___flmul@prod& (0+255),f,b
  7958  0017AA  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7959  0017AC  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7960  0017AE  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7961  0017B0                     
  7962                           ; BSR set to: 0
  7963  0017B0  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  7964  0017B2  EFDD  F00B         	goto	u5321
  7965  0017B6  EFDF  F00B         	goto	u5320
  7966  0017BA                     u5321:
  7967  0017BA  EFE0  F00B         	goto	l2004
  7968  0017BE                     u5320:
  7969  0017BE                     
  7970                           ; BSR set to: 0
  7971  0017BE  8181               	bsf	___flmul@prod& (0+255),0,b
  7972  0017C0                     l2004:
  7973                           
  7974                           ; BSR set to: 0
  7975  0017C0  90D8               	bcf	status,0,c
  7976  0017C2  377C               	rlcf	___flmul@grs& (0+255),f,b
  7977  0017C4  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7978  0017C6  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7979  0017C8  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7980  0017CA  0785               	decf	___flmul@temp& (0+255),f,b
  7981  0017CC  A0D8               	btfss	status,0,c
  7982  0017CE  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  7983  0017D0                     l6274:
  7984                           
  7985                           ; BSR set to: 0
  7986  0017D0  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  7987  0017D2  EFED  F00B         	goto	u5331
  7988  0017D6  EFEF  F00B         	goto	u5330
  7989  0017DA                     u5331:
  7990  0017DA  EFD3  F00B         	goto	l6268
  7991  0017DE                     u5330:
  7992  0017DE                     
  7993                           ; BSR set to: 0
  7994  0017DE  0E00               	movlw	0
  7995  0017E0  6F7B               	movwf	___flmul@aexp& (0+255),b
  7996  0017E2                     
  7997                           ; BSR set to: 0
  7998  0017E2  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  7999  0017E4  EFF6  F00B         	goto	u5341
  8000  0017E8  EFF8  F00B         	goto	u5340
  8001  0017EC                     u5341:
  8002  0017EC  EF1C  F00C         	goto	l2006
  8003  0017F0                     u5340:
  8004  0017F0                     
  8005                           ; BSR set to: 0
  8006  0017F0  0EFF               	movlw	255
  8007  0017F2  157C               	andwf	___flmul@grs& (0+255),w,b
  8008  0017F4  6F76               	movwf	??___flmul& (0+255),b
  8009  0017F6  0EFF               	movlw	255
  8010  0017F8  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  8011  0017FA  6F77               	movwf	(??___flmul+1)& (0+255),b
  8012  0017FC  0EFF               	movlw	255
  8013  0017FE  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  8014  001800  6F78               	movwf	(??___flmul+2)& (0+255),b
  8015  001802  0E7F               	movlw	127
  8016  001804  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  8017  001806  6F79               	movwf	(??___flmul+3)& (0+255),b
  8018  001808  5176               	movf	??___flmul& (0+255),w,b
  8019  00180A  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  8020  00180C  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  8021  00180E  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  8022  001810  B4D8               	btfsc	status,2,c
  8023  001812  EF0D  F00C         	goto	u5351
  8024  001816  EF0F  F00C         	goto	u5350
  8025  00181A                     u5351:
  8026  00181A  EF13  F00C         	goto	l2007
  8027  00181E                     u5350:
  8028  00181E                     l6282:
  8029                           
  8030                           ; BSR set to: 0
  8031  00181E  0E01               	movlw	1
  8032  001820  6F7B               	movwf	___flmul@aexp& (0+255),b
  8033  001822  EF1C  F00C         	goto	l2006
  8034  001826                     l2007:
  8035                           
  8036                           ; BSR set to: 0
  8037  001826  A181               	btfss	___flmul@prod& (0+255),0,b
  8038  001828  EF18  F00C         	goto	u5361
  8039  00182C  EF1A  F00C         	goto	u5360
  8040  001830                     u5361:
  8041  001830  EF1C  F00C         	goto	l2006
  8042  001834                     u5360:
  8043  001834  EF0F  F00C         	goto	l6282
  8044  001838                     l2006:
  8045                           
  8046                           ; BSR set to: 0
  8047  001838  517B               	movf	___flmul@aexp& (0+255),w,b
  8048  00183A  B4D8               	btfsc	status,2,c
  8049  00183C  EF22  F00C         	goto	u5371
  8050  001840  EF24  F00C         	goto	u5370
  8051  001844                     u5371:
  8052  001844  EF48  F00C         	goto	l6294
  8053  001848                     u5370:
  8054  001848                     
  8055                           ; BSR set to: 0
  8056  001848  0E01               	movlw	1
  8057  00184A  2781               	addwf	___flmul@prod& (0+255),f,b
  8058  00184C  0E00               	movlw	0
  8059  00184E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8060  001850  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8061  001852  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8062  001854                     
  8063                           ; BSR set to: 0
  8064  001854  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  8065  001856  EF2F  F00C         	goto	u5381
  8066  00185A  EF31  F00C         	goto	u5380
  8067  00185E                     u5381:
  8068  00185E  EF48  F00C         	goto	l6294
  8069  001862                     u5380:
  8070  001862                     
  8071                           ; BSR set to: 0
  8072  001862  C081  F076         	movff	___flmul@prod,??___flmul
  8073  001866  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  8074  00186A  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  8075  00186E  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  8076  001872  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  8077  001874  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  8078  001876  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  8079  001878  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  8080  00187A  3376               	rrcf	??___flmul& (0+255),f,b
  8081  00187C  C076  F081         	movff	??___flmul,___flmul@prod
  8082  001880  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  8083  001884  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  8084  001888  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  8085  00188C                     
  8086                           ; BSR set to: 0
  8087  00188C  4B85               	infsnz	___flmul@temp& (0+255),f,b
  8088  00188E  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  8089  001890                     l6294:
  8090                           
  8091                           ; BSR set to: 0
  8092  001890  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8093  001892  EF53  F00C         	goto	u5391
  8094  001896  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8095  001898  E108               	bnz	u5390
  8096  00189A  2985               	incf	___flmul@temp& (0+255),w,b
  8097  00189C  A0D8               	btfss	status,0,c
  8098  00189E  EF53  F00C         	goto	u5391
  8099  0018A2  EF55  F00C         	goto	u5390
  8100  0018A6                     u5391:
  8101  0018A6  EF5F  F00C         	goto	l6298
  8102  0018AA                     u5390:
  8103  0018AA                     
  8104                           ; BSR set to: 0
  8105  0018AA  0E00               	movlw	0
  8106  0018AC  6F81               	movwf	___flmul@prod& (0+255),b
  8107  0018AE  0E00               	movlw	0
  8108  0018B0  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  8109  0018B2  0E80               	movlw	128
  8110  0018B4  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  8111  0018B6  0E7F               	movlw	127
  8112  0018B8  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8113  0018BA  EF8D  F00C         	goto	l6310
  8114  0018BE                     l6298:
  8115                           
  8116                           ; BSR set to: 0
  8117  0018BE  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8118  0018C0  EF6C  F00C         	goto	u5400
  8119  0018C4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8120  0018C6  E106               	bnz	u5401
  8121  0018C8  0585               	decf	___flmul@temp& (0+255),w,b
  8122  0018CA  B0D8               	btfsc	status,0,c
  8123  0018CC  EF6A  F00C         	goto	u5401
  8124  0018D0  EF6C  F00C         	goto	u5400
  8125  0018D4                     u5401:
  8126  0018D4  EF78  F00C         	goto	l2014
  8127  0018D8                     u5400:
  8128  0018D8                     
  8129                           ; BSR set to: 0
  8130  0018D8  0E00               	movlw	0
  8131  0018DA  6F81               	movwf	___flmul@prod& (0+255),b
  8132  0018DC  0E00               	movlw	0
  8133  0018DE  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  8134  0018E0  0E00               	movlw	0
  8135  0018E2  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  8136  0018E4  0E00               	movlw	0
  8137  0018E6  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8138  0018E8  0E00               	movlw	0
  8139  0018EA  6F7A               	movwf	___flmul@sign& (0+255),b
  8140  0018EC  EF8D  F00C         	goto	l6310
  8141  0018F0                     l2014:
  8142                           
  8143                           ; BSR set to: 0
  8144  0018F0  C085  F080         	movff	___flmul@temp,___flmul@bexp
  8145  0018F4                     
  8146                           ; BSR set to: 0
  8147  0018F4  0EFF               	movlw	255
  8148  0018F6  1781               	andwf	___flmul@prod& (0+255),f,b
  8149  0018F8  0EFF               	movlw	255
  8150  0018FA  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  8151  0018FC  0E7F               	movlw	127
  8152  0018FE  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  8153  001900  0E00               	movlw	0
  8154  001902  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  8155  001904                     
  8156                           ; BSR set to: 0
  8157  001904  A180               	btfss	___flmul@bexp& (0+255),0,b
  8158  001906  EF87  F00C         	goto	u5411
  8159  00190A  EF89  F00C         	goto	u5410
  8160  00190E                     u5411:
  8161  00190E  EF8A  F00C         	goto	l6308
  8162  001912                     u5410:
  8163  001912                     
  8164                           ; BSR set to: 0
  8165  001912  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  8166  001914                     l6308:
  8167                           
  8168                           ; BSR set to: 0
  8169  001914  90D8               	bcf	status,0,c
  8170  001916  3180               	rrcf	___flmul@bexp& (0+255),w,b
  8171  001918  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8172  00191A                     l6310:
  8173                           
  8174                           ; BSR set to: 0
  8175  00191A  517A               	movf	___flmul@sign& (0+255),w,b
  8176  00191C  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8177  00191E                     
  8178                           ; BSR set to: 0
  8179  00191E  C081  F06E         	movff	___flmul@prod,?___flmul
  8180  001922  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  8181  001926  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  8182  00192A  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  8183  00192E                     l2001:
  8184                           
  8185                           ; BSR set to: 0
  8186  00192E  0012               	return		;funcret
  8187  001930                     __end_of___flmul:
  8188                           	callstack 0
  8189                           
  8190 ;; *************** function _SYSTEM_Initialize *****************
  8191 ;; Defined at:
  8192 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;		None
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;		None
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  1    wreg      void 
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0, cstack
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;Total ram usage:        0 bytes
  8211 ;; Hardware stack levels used: 1
  8212 ;; Hardware stack levels required when called: 10
  8213 ;; This function calls:
  8214 ;;		_ADCC_Initialize
  8215 ;;		_CCP3_Initialize
  8216 ;;		_CCP4_Initialize
  8217 ;;		_CLC3_Initialize
  8218 ;;		_INTERRUPT_Initialize
  8219 ;;		_OSCILLATOR_Initialize
  8220 ;;		_PIN_MANAGER_Initialize
  8221 ;;		_PMD_Initialize
  8222 ;;		_PWM5_Initialize
  8223 ;;		_PWM6_Initialize
  8224 ;;		_PWM7_Initialize
  8225 ;;		_PWM8_Initialize
  8226 ;;		_SMT1_Initialize
  8227 ;;		_TMR2_Initialize
  8228 ;;		_TMR3_Initialize
  8229 ;;		_TMR4_Initialize
  8230 ;;		_TMR5_Initialize
  8231 ;;		_UART1_Initialize
  8232 ;; This function is called by:
  8233 ;;		_main
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text37
  8238  003778                     __ptext37:
  8239                           	callstack 0
  8240  003778                     _SYSTEM_Initialize:
  8241                           	callstack 20
  8242  003778                     
  8243                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8244  003778  EC4A  F01B         	call	_INTERRUPT_Initialize	;wreg free
  8245                           
  8246                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8247  00377C  ECB5  F01E         	call	_PMD_Initialize	;wreg free
  8248                           
  8249                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8250  003780  EC02  F017         	call	_PIN_MANAGER_Initialize	;wreg free
  8251                           
  8252                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8253  003784  EC36  F01F         	call	_OSCILLATOR_Initialize	;wreg free
  8254  003788                     
  8255                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  8256  003788  ECF4  F01D         	call	_CCP3_Initialize	;wreg free
  8257  00378C                     
  8258                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  8259  00378C  EC76  F01A         	call	_ADCC_Initialize	;wreg free
  8260                           
  8261                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  8262  003790  EC22  F01E         	call	_TMR4_Initialize	;wreg free
  8263  003794                     
  8264                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  8265  003794  EC95  F01D         	call	_SMT1_Initialize	;wreg free
  8266  003798                     
  8267                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  8268  003798  EC06  F01F         	call	_PWM8_Initialize	;wreg free
  8269  00379C                     
  8270                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8271  00379C  ECF8  F01E         	call	_TMR2_Initialize	;wreg free
  8272  0037A0                     
  8273                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  8274  0037A0  EC1E  F01F         	call	_PWM6_Initialize	;wreg free
  8275                           
  8276                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  8277  0037A4  ECDD  F01D         	call	_CCP4_Initialize	;wreg free
  8278  0037A8                     
  8279                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  8280  0037A8  EC38  F01E         	call	_CLC3_Initialize	;wreg free
  8281  0037AC                     
  8282                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  8283  0037AC  ECF2  F01C         	call	_TMR3_Initialize	;wreg free
  8284                           
  8285                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  8286  0037B0  EC2A  F01F         	call	_PWM5_Initialize	;wreg free
  8287  0037B4                     
  8288                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  8289  0037B4  ECE1  F01B         	call	_TMR5_Initialize	;wreg free
  8290  0037B8                     
  8291                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  8292  0037B8  EC12  F01F         	call	_PWM7_Initialize	;wreg free
  8293                           
  8294                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  8295  0037BC  ECE6  F018         	call	_UART1_Initialize	;wreg free
  8296  0037C0  0012               	return		;funcret
  8297  0037C2                     __end_of_SYSTEM_Initialize:
  8298                           	callstack 0
  8299                           
  8300 ;; *************** function _UART1_Initialize *****************
  8301 ;; Defined at:
  8302 ;;		line 87 in file "mcc_generated_files/uart1.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;		None
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, status,2, status,0, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;Total ram usage:        0 bytes
  8321 ;; Hardware stack levels used: 1
  8322 ;; Hardware stack levels required when called: 9
  8323 ;; This function calls:
  8324 ;;		_UART1_SetErrorHandler
  8325 ;;		_UART1_SetFramingErrorHandler
  8326 ;;		_UART1_SetOverrunErrorHandler
  8327 ;;		_UART1_SetRxInterruptHandler
  8328 ;;		_UART1_SetTxInterruptHandler
  8329 ;; This function is called by:
  8330 ;;		_SYSTEM_Initialize
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text38
  8335  0031CC                     __ptext38:
  8336                           	callstack 0
  8337  0031CC                     _UART1_Initialize:
  8338                           	callstack 20
  8339  0031CC                     
  8340                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  8341  0031CC  0139               	movlb	57	; () banked
  8342  0031CE  9793               	bcf	147,3,b	;volatile
  8343  0031D0                     
  8344                           ; BSR set to: 57
  8345                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  8346  0031D0  0E5C               	movlw	low _UART1_Receive_ISR
  8347  0031D2  6E20               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  8348  0031D4  0E30               	movlw	high _UART1_Receive_ISR
  8349  0031D6  6E21               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  8350  0031D8  EC53  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  8351  0031DC                     
  8352                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  8353  0031DC  0139               	movlb	57	; () banked
  8354  0031DE  9993               	bcf	147,4,b	;volatile
  8355                           
  8356                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  8357  0031E0  0EEA               	movlw	low _UART1_Transmit_ISR
  8358  0031E2  6E20               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  8359  0031E4  0E38               	movlw	high _UART1_Transmit_ISR
  8360  0031E6  6E21               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  8361  0031E8  EC4E  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  8362  0031EC                     
  8363                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  8364  0031EC  0E00               	movlw	0
  8365  0031EE  013D               	movlb	61	; () banked
  8366  0031F0  6FEC               	movwf	236,b	;volatile
  8367  0031F2                     
  8368                           ; BSR set to: 61
  8369                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  8370  0031F2  0E00               	movlw	0
  8371  0031F4  6FED               	movwf	237,b	;volatile
  8372  0031F6                     
  8373                           ; BSR set to: 61
  8374                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  8375  0031F6  0E00               	movlw	0
  8376  0031F8  6FEE               	movwf	238,b	;volatile
  8377  0031FA                     
  8378                           ; BSR set to: 61
  8379                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  8380  0031FA  0E00               	movlw	0
  8381  0031FC  6FEF               	movwf	239,b	;volatile
  8382  0031FE                     
  8383                           ; BSR set to: 61
  8384                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  8385  0031FE  0E00               	movlw	0
  8386  003200  6FF0               	movwf	240,b	;volatile
  8387  003202                     
  8388                           ; BSR set to: 61
  8389                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  8390  003202  0E00               	movlw	0
  8391  003204  6FF1               	movwf	241,b	;volatile
  8392  003206                     
  8393                           ; BSR set to: 61
  8394                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  8395  003206  0EB0               	movlw	176
  8396  003208  6FF2               	movwf	242,b	;volatile
  8397  00320A                     
  8398                           ; BSR set to: 61
  8399                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  8400  00320A  0E80               	movlw	128
  8401  00320C  6FF3               	movwf	243,b	;volatile
  8402  00320E                     
  8403                           ; BSR set to: 61
  8404                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  8405  00320E  0E00               	movlw	0
  8406  003210  6FF4               	movwf	244,b	;volatile
  8407  003212                     
  8408                           ; BSR set to: 61
  8409                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  8410  003212  0E8A               	movlw	138
  8411  003214  6FF5               	movwf	245,b	;volatile
  8412  003216                     
  8413                           ; BSR set to: 61
  8414                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  8415  003216  0E00               	movlw	0
  8416  003218  6FF6               	movwf	246,b	;volatile
  8417  00321A                     
  8418                           ; BSR set to: 61
  8419                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  8420  00321A  0E00               	movlw	0
  8421  00321C  6FF7               	movwf	247,b	;volatile
  8422  00321E                     
  8423                           ; BSR set to: 61
  8424                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  8425  00321E  0E00               	movlw	0
  8426  003220  6FF8               	movwf	248,b	;volatile
  8427  003222                     
  8428                           ; BSR set to: 61
  8429                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  8430  003222  0E00               	movlw	0
  8431  003224  6FF9               	movwf	249,b	;volatile
  8432  003226                     
  8433                           ; BSR set to: 61
  8434                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  8435  003226  0E00               	movlw	0
  8436  003228  6FFA               	movwf	250,b	;volatile
  8437  00322A                     
  8438                           ; BSR set to: 61
  8439                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  8440  00322A  0E02               	movlw	low _UART1_DefaultFramingErrorHandler
  8441  00322C  6E20               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  8442  00322E  0E3F               	movlw	high _UART1_DefaultFramingErrorHandler
  8443  003230  6E21               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8444  003232  EC5D  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  8445  003236                     
  8446                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  8447  003236  0E00               	movlw	low _UART1_DefaultOverrunErrorHandler
  8448  003238  6E20               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  8449  00323A  0E3F               	movlw	high _UART1_DefaultOverrunErrorHandler
  8450  00323C  6E21               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8451  00323E  EC58  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  8452  003242                     
  8453                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  8454  003242  0EF6               	movlw	low _UART1_DefaultErrorHandler
  8455  003244  6E20               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  8456  003246  0E3E               	movlw	high _UART1_DefaultErrorHandler
  8457  003248  6E21               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  8458  00324A  EC62  F01F         	call	_UART1_SetErrorHandler	;wreg free
  8459                           
  8460                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  8461  00324E  0E00               	movlw	0
  8462  003250  6E36               	movwf	_uart1RxLastError^0,c	;volatile
  8463                           
  8464                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  8465  003252  0E00               	movlw	0
  8466  003254  6E3B               	movwf	_uart1TxHead^0,c	;volatile
  8467                           
  8468                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  8469  003256  0E00               	movlw	0
  8470  003258  6E3A               	movwf	_uart1TxTail^0,c	;volatile
  8471                           
  8472                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  8473  00325A  0E08               	movlw	8
  8474  00325C  6E40               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  8475                           
  8476                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  8477  00325E  0E00               	movlw	0
  8478  003260  6E39               	movwf	_uart1RxHead^0,c	;volatile
  8479                           
  8480                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  8481  003262  0E00               	movlw	0
  8482  003264  6E38               	movwf	_uart1RxTail^0,c	;volatile
  8483                           
  8484                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  8485  003266  0E00               	movlw	0
  8486  003268  6E37               	movwf	_uart1RxCount^0,c	;volatile
  8487  00326A                     
  8488                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  8489  00326A  0139               	movlb	57	; () banked
  8490  00326C  8793               	bsf	147,3,b	;volatile
  8491  00326E                     
  8492                           ; BSR set to: 57
  8493  00326E  0012               	return		;funcret
  8494  003270                     __end_of_UART1_Initialize:
  8495                           	callstack 0
  8496                           
  8497 ;; *************** function _UART1_SetTxInterruptHandler *****************
  8498 ;; Defined at:
  8499 ;;		line 333 in file "mcc_generated_files/uart1.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8502 ;;		 -> UART1_Transmit_ISR(1), 
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;		None
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      void 
  8507 ;; Registers used:
  8508 ;;		wreg, status,2, status,0
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8518 ;;Total ram usage:        2 bytes
  8519 ;; Hardware stack levels used: 1
  8520 ;; Hardware stack levels required when called: 8
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_UART1_Initialize
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text39
  8529  003E9C                     __ptext39:
  8530                           	callstack 0
  8531  003E9C                     _UART1_SetTxInterruptHandler:
  8532                           	callstack 20
  8533  003E9C                     
  8534                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  8535  003E9C  C020  F0FB         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  8536  003EA0  C021  F0FC         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  8537  003EA4  0012               	return		;funcret
  8538  003EA6                     __end_of_UART1_SetTxInterruptHandler:
  8539                           	callstack 0
  8540                           
  8541 ;; *************** function _UART1_SetRxInterruptHandler *****************
  8542 ;; Defined at:
  8543 ;;		line 329 in file "mcc_generated_files/uart1.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8546 ;;		 -> UART1_Receive_ISR(1), 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      void 
  8551 ;; Registers used:
  8552 ;;		wreg, status,2, status,0
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;Total ram usage:        2 bytes
  8563 ;; Hardware stack levels used: 1
  8564 ;; Hardware stack levels required when called: 8
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_UART1_Initialize
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text40
  8573  003EA6                     __ptext40:
  8574                           	callstack 0
  8575  003EA6                     _UART1_SetRxInterruptHandler:
  8576                           	callstack 20
  8577  003EA6                     
  8578                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  8579  003EA6  C020  F0FD         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  8580  003EAA  C021  F0FE         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  8581  003EAE  0012               	return		;funcret
  8582  003EB0                     __end_of_UART1_SetRxInterruptHandler:
  8583                           	callstack 0
  8584                           
  8585 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  8586 ;; Defined at:
  8587 ;;		line 319 in file "mcc_generated_files/uart1.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8590 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;Total ram usage:        2 bytes
  8607 ;; Hardware stack levels used: 1
  8608 ;; Hardware stack levels required when called: 8
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_UART1_Initialize
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text41
  8617  003EB0                     __ptext41:
  8618                           	callstack 0
  8619  003EB0                     _UART1_SetOverrunErrorHandler:
  8620                           	callstack 20
  8621  003EB0                     
  8622                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  8623  003EB0  C020  F0F7         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  8624  003EB4  C021  F0F8         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  8625  003EB8  0012               	return		;funcret
  8626  003EBA                     __end_of_UART1_SetOverrunErrorHandler:
  8627                           	callstack 0
  8628                           
  8629 ;; *************** function _UART1_SetFramingErrorHandler *****************
  8630 ;; Defined at:
  8631 ;;		line 315 in file "mcc_generated_files/uart1.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8634 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;		None
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      void 
  8639 ;; Registers used:
  8640 ;;		wreg, status,2, status,0
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;Total ram usage:        2 bytes
  8651 ;; Hardware stack levels used: 1
  8652 ;; Hardware stack levels required when called: 8
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_UART1_Initialize
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text42
  8661  003EBA                     __ptext42:
  8662                           	callstack 0
  8663  003EBA                     _UART1_SetFramingErrorHandler:
  8664                           	callstack 20
  8665  003EBA                     
  8666                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  8667  003EBA  C020  F0F9         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  8668  003EBE  C021  F0FA         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  8669  003EC2  0012               	return		;funcret
  8670  003EC4                     __end_of_UART1_SetFramingErrorHandler:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _UART1_SetErrorHandler *****************
  8674 ;; Defined at:
  8675 ;;		line 323 in file "mcc_generated_files/uart1.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8678 ;;		 -> UART1_DefaultErrorHandler(1), 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;Total ram usage:        2 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 8
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_UART1_Initialize
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text43
  8705  003EC4                     __ptext43:
  8706                           	callstack 0
  8707  003EC4                     _UART1_SetErrorHandler:
  8708                           	callstack 20
  8709  003EC4                     
  8710                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  8711  003EC4  C020  F0F5         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  8712  003EC8  C021  F0F6         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  8713  003ECC  0012               	return		;funcret
  8714  003ECE                     __end_of_UART1_SetErrorHandler:
  8715                           	callstack 0
  8716                           
  8717 ;; *************** function _TMR5_Initialize *****************
  8718 ;; Defined at:
  8719 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;		None
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;		None
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      void 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8736 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8737 ;;Total ram usage:        2 bytes
  8738 ;; Hardware stack levels used: 1
  8739 ;; Hardware stack levels required when called: 9
  8740 ;; This function calls:
  8741 ;;		_TMR5_SetGateInterruptHandler
  8742 ;; This function is called by:
  8743 ;;		_SYSTEM_Initialize
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text44
  8748  0037C2                     __ptext44:
  8749                           	callstack 0
  8750  0037C2                     _TMR5_Initialize:
  8751                           	callstack 20
  8752  0037C2                     
  8753                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  8754  0037C2  0EC0               	movlw	192
  8755  0037C4  6E9B               	movwf	155,c	;volatile
  8756                           
  8757                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  8758  0037C6  0E00               	movlw	0
  8759  0037C8  6E9C               	movwf	156,c	;volatile
  8760                           
  8761                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  8762  0037CA  0E05               	movlw	5
  8763  0037CC  6E9D               	movwf	157,c	;volatile
  8764                           
  8765                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  8766  0037CE  0E00               	movlw	0
  8767  0037D0  6E99               	movwf	153,c	;volatile
  8768                           
  8769                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  8770  0037D2  0E00               	movlw	0
  8771  0037D4  6E98               	movwf	152,c	;volatile
  8772  0037D6                     
  8773                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  8774  0037D6  0139               	movlb	57	; () banked
  8775  0037D8  9DA8               	bcf	168,6,b	;volatile
  8776  0037DA                     
  8777                           ; BSR set to: 57
  8778                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  8779  0037DA  5098               	movf	152,w,c	;volatile
  8780  0037DC  006F FE64  F060    	movff	16281,??_TMR5_Initialize	;volatile
  8781  0037E2  0100               	movlb	0	; () banked
  8782  0037E4  6B61               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  8783  0037E6  C060  F061         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  8784  0037EA  6B60               	clrf	??_TMR5_Initialize& (0+255),b
  8785  0037EC  1160               	iorwf	??_TMR5_Initialize& (0+255),w,b
  8786  0037EE  6FEF               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  8787  0037F0  5161               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  8788  0037F2  6FF0               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  8789  0037F4                     
  8790                           ; BSR set to: 0
  8791                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  8792  0037F4  0139               	movlb	57	; () banked
  8793  0037F6  9FA8               	bcf	168,7,b	;volatile
  8794  0037F8                     
  8795                           ; BSR set to: 57
  8796                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  8797  0037F8  8F98               	bsf	152,7,b	;volatile
  8798  0037FA                     
  8799                           ; BSR set to: 57
  8800                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  8801  0037FA  0ED2               	movlw	low _TMR5_DefaultGateInterruptHandler
  8802  0037FC  6E20               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  8803  0037FE  0E3D               	movlw	high _TMR5_DefaultGateInterruptHandler
  8804  003800  6E21               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  8805  003802  EC67  F01F         	call	_TMR5_SetGateInterruptHandler	;wreg free
  8806  003806                     
  8807                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  8808  003806  0E03               	movlw	3
  8809  003808  6E9A               	movwf	154,c	;volatile
  8810  00380A  0012               	return		;funcret
  8811  00380C                     __end_of_TMR5_Initialize:
  8812                           	callstack 0
  8813                           
  8814 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  8815 ;; Defined at:
  8816 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8819 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2, status,0
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8835 ;;Total ram usage:        2 bytes
  8836 ;; Hardware stack levels used: 1
  8837 ;; Hardware stack levels required when called: 8
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_TMR5_Initialize
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text45
  8846  003ECE                     __ptext45:
  8847                           	callstack 0
  8848  003ECE                     _TMR5_SetGateInterruptHandler:
  8849                           	callstack 20
  8850  003ECE                     
  8851                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  8852  003ECE  C020  F0ED         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  8853  003ED2  C021  F0EE         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  8854  003ED6  0012               	return		;funcret
  8855  003ED8                     __end_of_TMR5_SetGateInterruptHandler:
  8856                           	callstack 0
  8857                           
  8858 ;; *************** function _TMR4_Initialize *****************
  8859 ;; Defined at:
  8860 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, status,0, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; Hardware stack levels required when called: 9
  8881 ;; This function calls:
  8882 ;;		_TMR4_SetInterruptHandler
  8883 ;; This function is called by:
  8884 ;;		_SYSTEM_Initialize
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text46
  8889  003C44                     __ptext46:
  8890                           	callstack 0
  8891  003C44                     _TMR4_Initialize:
  8892                           	callstack 20
  8893  003C44                     
  8894                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  8895  003C44  0E01               	movlw	1
  8896  003C46  6EA2               	movwf	162,c	;volatile
  8897                           
  8898                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  8899  003C48  0E00               	movlw	0
  8900  003C4A  6EA1               	movwf	161,c	;volatile
  8901                           
  8902                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  8903  003C4C  0E00               	movlw	0
  8904  003C4E  6EA3               	movwf	163,c	;volatile
  8905                           
  8906                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  8907  003C50  0EF9               	movlw	249
  8908  003C52  6E9F               	movwf	159,c	;volatile
  8909                           
  8910                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  8911  003C54  0E00               	movlw	0
  8912  003C56  6E9E               	movwf	158,c	;volatile
  8913  003C58                     
  8914                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  8915  003C58  0139               	movlb	57	; () banked
  8916  003C5A  91A7               	bcf	167,0,b	;volatile
  8917  003C5C                     
  8918                           ; BSR set to: 57
  8919                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  8920  003C5C  8197               	bsf	151,0,b	;volatile
  8921  003C5E                     
  8922                           ; BSR set to: 57
  8923                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8924  003C5E  0E04               	movlw	low _TMR4_DefaultInterruptHandler
  8925  003C60  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  8926  003C62  0E3F               	movlw	high _TMR4_DefaultInterruptHandler
  8927  003C64  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  8928  003C66  EC6C  F01F         	call	_TMR4_SetInterruptHandler	;wreg free
  8929  003C6A                     
  8930                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  8931  003C6A  0EE0               	movlw	224
  8932  003C6C  6EA0               	movwf	160,c	;volatile
  8933  003C6E  0012               	return		;funcret
  8934  003C70                     __end_of_TMR4_Initialize:
  8935                           	callstack 0
  8936                           
  8937 ;; *************** function _TMR4_SetInterruptHandler *****************
  8938 ;; Defined at:
  8939 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8942 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;		None
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;Total ram usage:        2 bytes
  8959 ;; Hardware stack levels used: 1
  8960 ;; Hardware stack levels required when called: 8
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_TMR4_Initialize
  8965 ;;		_main
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text47
  8970  003ED8                     __ptext47:
  8971                           	callstack 0
  8972  003ED8                     _TMR4_SetInterruptHandler:
  8973                           	callstack 22
  8974  003ED8                     
  8975                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  8976  003ED8  C020  F0E9         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  8977  003EDC  C021  F0EA         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  8978  003EE0  0012               	return		;funcret
  8979  003EE2                     __end_of_TMR4_SetInterruptHandler:
  8980                           	callstack 0
  8981                           
  8982 ;; *************** function _TMR3_Initialize *****************
  8983 ;; Defined at:
  8984 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;		None
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      void 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;Total ram usage:        2 bytes
  9003 ;; Hardware stack levels used: 1
  9004 ;; Hardware stack levels required when called: 8
  9005 ;; This function calls:
  9006 ;;		Nothing
  9007 ;; This function is called by:
  9008 ;;		_SYSTEM_Initialize
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text48
  9013  0039E4                     __ptext48:
  9014                           	callstack 0
  9015  0039E4                     _TMR3_Initialize:
  9016                           	callstack 21
  9017  0039E4                     
  9018                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  9019  0039E4  0E00               	movlw	0
  9020  0039E6  6EA7               	movwf	167,c	;volatile
  9021                           
  9022                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  9023  0039E8  0E00               	movlw	0
  9024  0039EA  6EA8               	movwf	168,c	;volatile
  9025                           
  9026                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  9027  0039EC  0E05               	movlw	5
  9028  0039EE  6EA9               	movwf	169,c	;volatile
  9029                           
  9030                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  9031  0039F0  0E00               	movlw	0
  9032  0039F2  6EA5               	movwf	165,c	;volatile
  9033                           
  9034                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  9035  0039F4  0E00               	movlw	0
  9036  0039F6  6EA4               	movwf	164,c	;volatile
  9037  0039F8                     
  9038                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  9039  0039F8  0139               	movlb	57	; () banked
  9040  0039FA  9DA6               	bcf	166,6,b	;volatile
  9041  0039FC                     
  9042                           ; BSR set to: 57
  9043                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9044  0039FC  50A4               	movf	164,w,c	;volatile
  9045  0039FE  006F FE94  F020    	movff	16293,??_TMR3_Initialize	;volatile
  9046  003A04  6A21               	clrf	(??_TMR3_Initialize+1)^0,c
  9047  003A06  C020  F021         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  9048  003A0A  6A20               	clrf	??_TMR3_Initialize^0,c
  9049  003A0C  1020               	iorwf	??_TMR3_Initialize^0,w,c
  9050  003A0E  0100               	movlb	0	; () banked
  9051  003A10  6FEB               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  9052  003A12  5021               	movf	(??_TMR3_Initialize+1)^0,w,c
  9053  003A14  6FEC               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  9054  003A16                     
  9055                           ; BSR set to: 0
  9056                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  9057  003A16  0E01               	movlw	1
  9058  003A18  6EA6               	movwf	166,c	;volatile
  9059  003A1A                     
  9060                           ; BSR set to: 0
  9061  003A1A  0012               	return		;funcret
  9062  003A1C                     __end_of_TMR3_Initialize:
  9063                           	callstack 0
  9064                           
  9065 ;; *************** function _TMR2_Initialize *****************
  9066 ;; Defined at:
  9067 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used: 1
  9087 ;; Hardware stack levels required when called: 8
  9088 ;; This function calls:
  9089 ;;		Nothing
  9090 ;; This function is called by:
  9091 ;;		_SYSTEM_Initialize
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text49
  9096  003DF0                     __ptext49:
  9097                           	callstack 0
  9098  003DF0                     _TMR2_Initialize:
  9099                           	callstack 21
  9100  003DF0                     
  9101                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  9102  003DF0  0E05               	movlw	5
  9103  003DF2  6EAE               	movwf	174,c	;volatile
  9104                           
  9105                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  9106  003DF4  0E00               	movlw	0
  9107  003DF6  6EAD               	movwf	173,c	;volatile
  9108                           
  9109                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  9110  003DF8  0E00               	movlw	0
  9111  003DFA  6EAF               	movwf	175,c	;volatile
  9112  003DFC                     
  9113                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  9114  003DFC  68AB               	setf	171,c	;volatile
  9115                           
  9116                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  9117  003DFE  0E00               	movlw	0
  9118  003E00  6EAA               	movwf	170,c	;volatile
  9119  003E02                     
  9120                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  9121  003E02  0139               	movlb	57	; () banked
  9122  003E04  95A4               	bcf	164,2,b	;volatile
  9123                           
  9124                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  9125  003E06  0EB0               	movlw	176
  9126  003E08  6EAC               	movwf	172,c	;volatile
  9127  003E0A                     
  9128                           ; BSR set to: 57
  9129  003E0A  0012               	return		;funcret
  9130  003E0C                     __end_of_TMR2_Initialize:
  9131                           	callstack 0
  9132                           
  9133 ;; *************** function _SMT1_Initialize *****************
  9134 ;; Defined at:
  9135 ;;		line 60 in file "mcc_generated_files/smt1.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;		None
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;		None
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  1    wreg      void 
  9142 ;; Registers used:
  9143 ;;		wreg, status,2
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9153 ;;Total ram usage:        0 bytes
  9154 ;; Hardware stack levels used: 1
  9155 ;; Hardware stack levels required when called: 8
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_SYSTEM_Initialize
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text50
  9164  003B2A                     __ptext50:
  9165                           	callstack 0
  9166  003B2A                     _SMT1_Initialize:
  9167                           	callstack 21
  9168  003B2A                     
  9169                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  9170  003B2A  0E80               	movlw	128
  9171  003B2C  013F               	movlb	63	; () banked
  9172  003B2E  6F1E               	movwf	30,b	;volatile
  9173                           
  9174                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  9175  003B30  0E42               	movlw	66
  9176  003B32  6F1F               	movwf	31,b	;volatile
  9177                           
  9178                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  9179  003B34  0E00               	movlw	0
  9180  003B36  6F20               	movwf	32,b	;volatile
  9181                           
  9182                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  9183  003B38  0E04               	movlw	4
  9184  003B3A  6F21               	movwf	33,b	;volatile
  9185                           
  9186                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  9187  003B3C  0E00               	movlw	0
  9188  003B3E  6F23               	movwf	35,b	;volatile
  9189                           
  9190                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  9191  003B40  0E00               	movlw	0
  9192  003B42  6F22               	movwf	34,b	;volatile
  9193                           
  9194                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  9195  003B44  0E01               	movlw	1
  9196  003B46  6F1D               	movwf	29,b	;volatile
  9197  003B48                     
  9198                           ; BSR set to: 63
  9199                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  9200  003B48  691C               	setf	28,b	;volatile
  9201  003B4A                     
  9202                           ; BSR set to: 63
  9203                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  9204  003B4A  691B               	setf	27,b	;volatile
  9205  003B4C                     
  9206                           ; BSR set to: 63
  9207                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  9208  003B4C  0139               	movlb	57	; () banked
  9209  003B4E  8B91               	bsf	145,5,b	;volatile
  9210  003B50                     
  9211                           ; BSR set to: 57
  9212                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  9213  003B50  8F91               	bsf	145,7,b	;volatile
  9214  003B52                     
  9215                           ; BSR set to: 57
  9216                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  9217  003B52  8D91               	bsf	145,6,b	;volatile
  9218  003B54                     
  9219                           ; BSR set to: 57
  9220                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  9221  003B54  013F               	movlb	63	; () banked
  9222  003B56  8F1F               	bsf	31,7,b	;volatile
  9223  003B58                     
  9224                           ; BSR set to: 63
  9225  003B58  0012               	return		;funcret
  9226  003B5A                     __end_of_SMT1_Initialize:
  9227                           	callstack 0
  9228                           
  9229 ;; *************** function _PWM8_Initialize *****************
  9230 ;; Defined at:
  9231 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;		None
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1    wreg      void 
  9238 ;; Registers used:
  9239 ;;		wreg, status,2
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9249 ;;Total ram usage:        0 bytes
  9250 ;; Hardware stack levels used: 1
  9251 ;; Hardware stack levels required when called: 8
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_SYSTEM_Initialize
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text51
  9260  003E0C                     __ptext51:
  9261                           	callstack 0
  9262  003E0C                     _PWM8_Initialize:
  9263                           	callstack 21
  9264  003E0C                     
  9265                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  9266  003E0C  0E80               	movlw	128
  9267  003E0E  6E62               	movwf	98,c	;volatile
  9268                           
  9269                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  9270  003E10  0E00               	movlw	0
  9271  003E12  6E61               	movwf	97,c	;volatile
  9272                           
  9273                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  9274  003E14  0E00               	movlw	0
  9275  003E16  6E60               	movwf	96,c	;volatile
  9276                           
  9277                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  9278  003E18  013F               	movlb	63	; () banked
  9279  003E1A  515F               	movf	95,w,b	;volatile
  9280  003E1C  0B3F               	andlw	-193
  9281  003E1E  0980               	iorlw	128
  9282  003E20  6F5F               	movwf	95,b	;volatile
  9283  003E22                     
  9284                           ; BSR set to: 63
  9285  003E22  0012               	return		;funcret
  9286  003E24                     __end_of_PWM8_Initialize:
  9287                           	callstack 0
  9288                           
  9289 ;; *************** function _PWM7_Initialize *****************
  9290 ;; Defined at:
  9291 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;		None
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;		None
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;Total ram usage:        0 bytes
  9310 ;; Hardware stack levels used: 1
  9311 ;; Hardware stack levels required when called: 8
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		_SYSTEM_Initialize
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text52
  9320  003E24                     __ptext52:
  9321                           	callstack 0
  9322  003E24                     _PWM7_Initialize:
  9323                           	callstack 21
  9324  003E24                     
  9325                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  9326  003E24  0E80               	movlw	128
  9327  003E26  6E66               	movwf	102,c	;volatile
  9328                           
  9329                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  9330  003E28  0E00               	movlw	0
  9331  003E2A  6E65               	movwf	101,c	;volatile
  9332                           
  9333                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  9334  003E2C  0E00               	movlw	0
  9335  003E2E  6E64               	movwf	100,c	;volatile
  9336                           
  9337                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  9338  003E30  013F               	movlb	63	; () banked
  9339  003E32  515F               	movf	95,w,b	;volatile
  9340  003E34  0BCF               	andlw	-49
  9341  003E36  0920               	iorlw	32
  9342  003E38  6F5F               	movwf	95,b	;volatile
  9343  003E3A                     
  9344                           ; BSR set to: 63
  9345  003E3A  0012               	return		;funcret
  9346  003E3C                     __end_of_PWM7_Initialize:
  9347                           	callstack 0
  9348                           
  9349 ;; *************** function _PWM6_Initialize *****************
  9350 ;; Defined at:
  9351 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;		None
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;		None
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  1    wreg      void 
  9358 ;; Registers used:
  9359 ;;		wreg, status,2
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9369 ;;Total ram usage:        0 bytes
  9370 ;; Hardware stack levels used: 1
  9371 ;; Hardware stack levels required when called: 8
  9372 ;; This function calls:
  9373 ;;		Nothing
  9374 ;; This function is called by:
  9375 ;;		_SYSTEM_Initialize
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text53
  9380  003E3C                     __ptext53:
  9381                           	callstack 0
  9382  003E3C                     _PWM6_Initialize:
  9383                           	callstack 21
  9384  003E3C                     
  9385                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  9386  003E3C  0E80               	movlw	128
  9387  003E3E  6E6A               	movwf	106,c	;volatile
  9388                           
  9389                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  9390  003E40  0E59               	movlw	89
  9391  003E42  6E69               	movwf	105,c	;volatile
  9392                           
  9393                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  9394  003E44  0E40               	movlw	64
  9395  003E46  6E68               	movwf	104,c	;volatile
  9396                           
  9397                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  9398  003E48  013F               	movlb	63	; () banked
  9399  003E4A  515F               	movf	95,w,b	;volatile
  9400  003E4C  0BF3               	andlw	-13
  9401  003E4E  0904               	iorlw	4
  9402  003E50  6F5F               	movwf	95,b	;volatile
  9403  003E52                     
  9404                           ; BSR set to: 63
  9405  003E52  0012               	return		;funcret
  9406  003E54                     __end_of_PWM6_Initialize:
  9407                           	callstack 0
  9408                           
  9409 ;; *************** function _PWM5_Initialize *****************
  9410 ;; Defined at:
  9411 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;		None
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;		None
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  1    wreg      void 
  9418 ;; Registers used:
  9419 ;;		wreg, status,2
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9429 ;;Total ram usage:        0 bytes
  9430 ;; Hardware stack levels used: 1
  9431 ;; Hardware stack levels required when called: 8
  9432 ;; This function calls:
  9433 ;;		Nothing
  9434 ;; This function is called by:
  9435 ;;		_SYSTEM_Initialize
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text54
  9440  003E54                     __ptext54:
  9441                           	callstack 0
  9442  003E54                     _PWM5_Initialize:
  9443                           	callstack 21
  9444  003E54                     
  9445                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  9446  003E54  0E80               	movlw	128
  9447  003E56  6E6E               	movwf	110,c	;volatile
  9448                           
  9449                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  9450  003E58  0E59               	movlw	89
  9451  003E5A  6E6D               	movwf	109,c	;volatile
  9452                           
  9453                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  9454  003E5C  0E40               	movlw	64
  9455  003E5E  6E6C               	movwf	108,c	;volatile
  9456                           
  9457                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  9458  003E60  013F               	movlb	63	; () banked
  9459  003E62  515F               	movf	95,w,b	;volatile
  9460  003E64  0BFC               	andlw	-4
  9461  003E66  0901               	iorlw	1
  9462  003E68  6F5F               	movwf	95,b	;volatile
  9463  003E6A                     
  9464                           ; BSR set to: 63
  9465  003E6A  0012               	return		;funcret
  9466  003E6C                     __end_of_PWM5_Initialize:
  9467                           	callstack 0
  9468                           
  9469 ;; *************** function _PMD_Initialize *****************
  9470 ;; Defined at:
  9471 ;;		line 86 in file "mcc_generated_files/mcc.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, status,2
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used: 1
  9491 ;; Hardware stack levels required when called: 8
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_SYSTEM_Initialize
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           	psect	text55
  9500  003D6A                     __ptext55:
  9501                           	callstack 0
  9502  003D6A                     _PMD_Initialize:
  9503                           	callstack 21
  9504  003D6A                     
  9505                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  9506  003D6A  0E00               	movlw	0
  9507  003D6C  0139               	movlb	57	; () banked
  9508  003D6E  6FC0               	movwf	192,b	;volatile
  9509                           
  9510                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  9511  003D70  0E00               	movlw	0
  9512  003D72  6FC1               	movwf	193,b	;volatile
  9513                           
  9514                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  9515  003D74  0E00               	movlw	0
  9516  003D76  6FC2               	movwf	194,b	;volatile
  9517                           
  9518                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  9519  003D78  0E00               	movlw	0
  9520  003D7A  6FC3               	movwf	195,b	;volatile
  9521                           
  9522                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  9523  003D7C  0E00               	movlw	0
  9524  003D7E  6FC4               	movwf	196,b	;volatile
  9525                           
  9526                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  9527  003D80  0E00               	movlw	0
  9528  003D82  6FC5               	movwf	197,b	;volatile
  9529                           
  9530                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  9531  003D84  0E00               	movlw	0
  9532  003D86  6FC6               	movwf	198,b	;volatile
  9533                           
  9534                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  9535  003D88  0E00               	movlw	0
  9536  003D8A  6FC7               	movwf	199,b	;volatile
  9537  003D8C                     
  9538                           ; BSR set to: 57
  9539  003D8C  0012               	return		;funcret
  9540  003D8E                     __end_of_PMD_Initialize:
  9541                           	callstack 0
  9542                           
  9543 ;; *************** function _PIN_MANAGER_Initialize *****************
  9544 ;; Defined at:
  9545 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;		None
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;		None
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  1    wreg      void 
  9552 ;; Registers used:
  9553 ;;		wreg, status,2
  9554 ;; Tracked objects:
  9555 ;;		On entry : 0/0
  9556 ;;		On exit  : 0/0
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;Total ram usage:        0 bytes
  9564 ;; Hardware stack levels used: 1
  9565 ;; Hardware stack levels required when called: 8
  9566 ;; This function calls:
  9567 ;;		Nothing
  9568 ;; This function is called by:
  9569 ;;		_SYSTEM_Initialize
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           	psect	text56
  9574  002E04                     __ptext56:
  9575                           	callstack 0
  9576  002E04                     _PIN_MANAGER_Initialize:
  9577                           	callstack 21
  9578  002E04                     
  9579                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9580  002E04  0E00               	movlw	0
  9581  002E06  6EBE               	movwf	190,c	;volatile
  9582                           
  9583                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9584  002E08  0E00               	movlw	0
  9585  002E0A  6EBD               	movwf	189,c	;volatile
  9586                           
  9587                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  9588  002E0C  0E24               	movlw	36
  9589  002E0E  6EBA               	movwf	186,c	;volatile
  9590                           
  9591                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9592  002E10  0E00               	movlw	0
  9593  002E12  6EBB               	movwf	187,c	;volatile
  9594                           
  9595                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9596  002E14  0E00               	movlw	0
  9597  002E16  6EBC               	movwf	188,c	;volatile
  9598                           
  9599                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9600  002E18  0E07               	movlw	7
  9601  002E1A  6EC6               	movwf	198,c	;volatile
  9602                           
  9603                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  9604  002E1C  0EC0               	movlw	192
  9605  002E1E  6EC2               	movwf	194,c	;volatile
  9606                           
  9607                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  9608  002E20  0EF7               	movlw	247
  9609  002E22  6EC3               	movwf	195,c	;volatile
  9610  002E24                     
  9611                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9612  002E24  68C4               	setf	196,c	;volatile
  9613  002E26                     
  9614                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9615  002E26  68C5               	setf	197,c	;volatile
  9616                           
  9617                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  9618  002E28  0E1F               	movlw	31
  9619  002E2A  013A               	movlb	58	; () banked
  9620  002E2C  6F70               	movwf	112,b	;volatile
  9621  002E2E                     
  9622                           ; BSR set to: 58
  9623                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  9624  002E2E  6960               	setf	96,b	;volatile
  9625                           
  9626                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  9627  002E30  0EC0               	movlw	192
  9628  002E32  6F50               	movwf	80,b	;volatile
  9629                           
  9630                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9631  002E34  0E07               	movlw	7
  9632  002E36  6F80               	movwf	128,b	;volatile
  9633                           
  9634                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  9635  002E38  0E7F               	movlw	127
  9636  002E3A  6F40               	movwf	64,b	;volatile
  9637                           
  9638                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9639  002E3C  0E00               	movlw	0
  9640  002E3E  6F71               	movwf	113,b	;volatile
  9641                           
  9642                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9643  002E40  0E00               	movlw	0
  9644  002E42  6F81               	movwf	129,b	;volatile
  9645                           
  9646                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9647  002E44  0E00               	movlw	0
  9648  002E46  6F51               	movwf	81,b	;volatile
  9649                           
  9650                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9651  002E48  0E00               	movlw	0
  9652  002E4A  6F41               	movwf	65,b	;volatile
  9653                           
  9654                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  9655  002E4C  0E00               	movlw	0
  9656  002E4E  6F61               	movwf	97,b	;volatile
  9657                           
  9658                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  9659  002E50  0E00               	movlw	0
  9660  002E52  6F5A               	movwf	90,b	;volatile
  9661                           
  9662                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  9663  002E54  0E00               	movlw	0
  9664  002E56  6F5B               	movwf	91,b	;volatile
  9665                           
  9666                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  9667  002E58  0E00               	movlw	0
  9668  002E5A  6F6A               	movwf	106,b	;volatile
  9669                           
  9670                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  9671  002E5C  0E00               	movlw	0
  9672  002E5E  6F6B               	movwf	107,b	;volatile
  9673                           
  9674                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  9675  002E60  0E00               	movlw	0
  9676  002E62  6F7A               	movwf	122,b	;volatile
  9677                           
  9678                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  9679  002E64  0E00               	movlw	0
  9680  002E66  6F7B               	movwf	123,b	;volatile
  9681                           
  9682                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  9683  002E68  0E00               	movlw	0
  9684  002E6A  6F82               	movwf	130,b	;volatile
  9685                           
  9686                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  9687  002E6C  0E00               	movlw	0
  9688  002E6E  6F42               	movwf	66,b	;volatile
  9689                           
  9690                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  9691  002E70  0E00               	movlw	0
  9692  002E72  6F52               	movwf	82,b	;volatile
  9693                           
  9694                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  9695  002E74  0E00               	movlw	0
  9696  002E76  6F62               	movwf	98,b	;volatile
  9697                           
  9698                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  9699  002E78  0E00               	movlw	0
  9700  002E7A  6F72               	movwf	114,b	;volatile
  9701  002E7C                     
  9702                           ; BSR set to: 58
  9703                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  9704  002E7C  6943               	setf	67,b	;volatile
  9705  002E7E                     
  9706                           ; BSR set to: 58
  9707                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  9708  002E7E  6953               	setf	83,b	;volatile
  9709  002E80                     
  9710                           ; BSR set to: 58
  9711                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  9712  002E80  6963               	setf	99,b	;volatile
  9713  002E82                     
  9714                           ; BSR set to: 58
  9715                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  9716  002E82  6973               	setf	115,b	;volatile
  9717                           
  9718                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  9719  002E84  0E07               	movlw	7
  9720  002E86  6F83               	movwf	131,b	;volatile
  9721  002E88                     
  9722                           ; BSR set to: 58
  9723                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  9724  002E88  6944               	setf	68,b	;volatile
  9725  002E8A                     
  9726                           ; BSR set to: 58
  9727                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  9728  002E8A  6954               	setf	84,b	;volatile
  9729  002E8C                     
  9730                           ; BSR set to: 58
  9731                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  9732  002E8C  6964               	setf	100,b	;volatile
  9733  002E8E                     
  9734                           ; BSR set to: 58
  9735                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  9736  002E8E  6974               	setf	116,b	;volatile
  9737                           
  9738                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  9739  002E90  0E0F               	movlw	15
  9740  002E92  6F84               	movwf	132,b	;volatile
  9741                           
  9742                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  9743  002E94  0E1F               	movlw	31
  9744  002E96  6FCF               	movwf	207,b	;volatile
  9745                           
  9746                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  9747  002E98  0E09               	movlw	9
  9748  002E9A  6FDC               	movwf	220,b	;volatile
  9749                           
  9750                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  9751  002E9C  0E0E               	movlw	14
  9752  002E9E  6F01               	movwf	1,b	;volatile
  9753                           
  9754                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  9755  002EA0  0E0A               	movlw	10
  9756  002EA2  6FE5               	movwf	229,b	;volatile
  9757                           
  9758                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  9759  002EA4  0E0D               	movlw	13
  9760  002EA6  6F00               	movwf	0,b	;volatile
  9761                           
  9762                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  9763  002EA8  0E1D               	movlw	29
  9764  002EAA  6FC9               	movwf	201,b	;volatile
  9765                           
  9766                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  9767  002EAC  0E10               	movlw	16
  9768  002EAE  6F04               	movwf	4,b	;volatile
  9769                           
  9770                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  9771  002EB0  0E07               	movlw	7
  9772  002EB2  6FD9               	movwf	217,b	;volatile
  9773                           
  9774                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  9775  002EB4  0E09               	movlw	9
  9776  002EB6  6FD1               	movwf	209,b	;volatile
  9777                           
  9778                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  9779  002EB8  0E0F               	movlw	15
  9780  002EBA  6F03               	movwf	3,b	;volatile
  9781                           
  9782                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  9783  002EBC  0E13               	movlw	19
  9784  002EBE  6F0B               	movwf	11,b	;volatile
  9785                           
  9786                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  9787  002EC0  0E08               	movlw	8
  9788  002EC2  6FDB               	movwf	219,b	;volatile
  9789                           
  9790                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  9791  002EC4  0E08               	movlw	8
  9792  002EC6  6FD2               	movwf	210,b	;volatile
  9793                           
  9794                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  9795  002EC8  0E1E               	movlw	30
  9796  002ECA  6FD0               	movwf	208,b	;volatile
  9797  002ECC                     
  9798                           ; BSR set to: 58
  9799  002ECC  0012               	return		;funcret
  9800  002ECE                     __end_of_PIN_MANAGER_Initialize:
  9801                           	callstack 0
  9802                           
  9803 ;; *************** function _OSCILLATOR_Initialize *****************
  9804 ;; Defined at:
  9805 ;;		line 72 in file "mcc_generated_files/mcc.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used: 1
  9825 ;; Hardware stack levels required when called: 8
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_SYSTEM_Initialize
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text57
  9834  003E6C                     __ptext57:
  9835                           	callstack 0
  9836  003E6C                     _OSCILLATOR_Initialize:
  9837                           	callstack 21
  9838  003E6C                     
  9839                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  9840  003E6C  0E60               	movlw	96
  9841  003E6E  0139               	movlb	57	; () banked
  9842  003E70  6FD9               	movwf	217,b	;volatile
  9843                           
  9844                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  9845  003E72  0E00               	movlw	0
  9846  003E74  6FDB               	movwf	219,b	;volatile
  9847                           
  9848                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  9849  003E76  0E00               	movlw	0
  9850  003E78  6FDD               	movwf	221,b	;volatile
  9851                           
  9852                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  9853  003E7A  0E08               	movlw	8
  9854  003E7C  6FDF               	movwf	223,b	;volatile
  9855                           
  9856                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  9857  003E7E  0E00               	movlw	0
  9858  003E80  6FDE               	movwf	222,b	;volatile
  9859  003E82                     
  9860                           ; BSR set to: 57
  9861  003E82  0012               	return		;funcret
  9862  003E84                     __end_of_OSCILLATOR_Initialize:
  9863                           	callstack 0
  9864                           
  9865 ;; *************** function _INTERRUPT_Initialize *****************
  9866 ;; Defined at:
  9867 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  state           1   31[COMRAM] _Bool 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg, status,2
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9885 ;;Total ram usage:        1 bytes
  9886 ;; Hardware stack levels used: 1
  9887 ;; Hardware stack levels required when called: 8
  9888 ;; This function calls:
  9889 ;;		Nothing
  9890 ;; This function is called by:
  9891 ;;		_SYSTEM_Initialize
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text58
  9896  003694                     __ptext58:
  9897                           	callstack 0
  9898  003694                     _INTERRUPT_Initialize:
  9899                           	callstack 21
  9900  003694                     
  9901                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  9902  003694  8AD2               	bsf	210,5,c	;volatile
  9903  003696                     
  9904                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  9905  003696  0E00               	movlw	0
  9906  003698  BED2               	btfsc	16338,7,c	;volatile
  9907  00369A  0E01               	movlw	1
  9908  00369C  6E20               	movwf	INTERRUPT_Initialize@state^0,c
  9909  00369E                     
  9910                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  9911  00369E  9ED2               	bcf	16338,7,c	;volatile
  9912                           
  9913                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  9914  0036A0  0E55               	movlw	85
  9915  0036A2  6ED4               	movwf	212,c	;volatile
  9916                           
  9917                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  9918  0036A4  0EAA               	movlw	170
  9919  0036A6  6ED4               	movwf	212,c	;volatile
  9920  0036A8                     
  9921                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  9922  0036A8  90D4               	bcf	212,0,c	;volatile
  9923                           
  9924                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  9925  0036AA  0E00               	movlw	0
  9926  0036AC  6ED7               	movwf	215,c	;volatile
  9927                           
  9928                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  9929  0036AE  0E00               	movlw	0
  9930  0036B0  6ED6               	movwf	214,c	;volatile
  9931                           
  9932                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  9933  0036B2  0E08               	movlw	8
  9934  0036B4  6ED5               	movwf	213,c	;volatile
  9935                           
  9936                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  9937  0036B6  0E55               	movlw	85
  9938  0036B8  6ED4               	movwf	212,c	;volatile
  9939                           
  9940                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  9941  0036BA  0EAA               	movlw	170
  9942  0036BC  6ED4               	movwf	212,c	;volatile
  9943  0036BE                     
  9944                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  9945  0036BE  80D4               	bsf	212,0,c	;volatile
  9946  0036C0                     
  9947                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  9948  0036C0  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
  9949  0036C2  D002               	bra	u1415
  9950  0036C4  9ED2               	bcf	16338,7,c	;volatile
  9951  0036C6  D001               	bra	u1416
  9952  0036C8                     u1415:
  9953  0036C8  8ED2               	bsf	16338,7,c	;volatile
  9954  0036CA                     u1416:
  9955  0036CA                     
  9956                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  9957  0036CA  0139               	movlb	57	; () banked
  9958  0036CC  9983               	bcf	131,4,b	;volatile
  9959  0036CE                     
  9960                           ; BSR set to: 57
  9961                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  9962  0036CE  9783               	bcf	131,3,b	;volatile
  9963  0036D0                     
  9964                           ; BSR set to: 57
  9965                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  9966  0036D0  8F81               	bsf	129,7,b	;volatile
  9967  0036D2                     
  9968                           ; BSR set to: 57
  9969                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  9970  0036D2  8B81               	bsf	129,5,b	;volatile
  9971  0036D4                     
  9972                           ; BSR set to: 57
  9973                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  9974  0036D4  8D81               	bsf	129,6,b	;volatile
  9975  0036D6                     
  9976                           ; BSR set to: 57
  9977                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
  9978  0036D6  818A               	bsf	138,0,b	;volatile
  9979  0036D8                     
  9980                           ; BSR set to: 57
  9981                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
  9982  0036D8  8F88               	bsf	136,7,b	;volatile
  9983  0036DA                     
  9984                           ; BSR set to: 57
  9985                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  9986  0036DA  9187               	bcf	135,0,b	;volatile
  9987  0036DC                     
  9988                           ; BSR set to: 57
  9989                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  9990  0036DC  8389               	bsf	137,1,b	;volatile
  9991  0036DE                     
  9992                           ; BSR set to: 57
  9993  0036DE  0012               	return		;funcret
  9994  0036E0                     __end_of_INTERRUPT_Initialize:
  9995                           	callstack 0
  9996                           
  9997 ;; *************** function _CLC3_Initialize *****************
  9998 ;; Defined at:
  9999 ;;		line 58 in file "mcc_generated_files/clc3.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;		None
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;		None
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1    wreg      void 
 10006 ;; Registers used:
 10007 ;;		wreg, status,2
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 0/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10017 ;;Total ram usage:        0 bytes
 10018 ;; Hardware stack levels used: 1
 10019 ;; Hardware stack levels required when called: 8
 10020 ;; This function calls:
 10021 ;;		Nothing
 10022 ;; This function is called by:
 10023 ;;		_SYSTEM_Initialize
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           	psect	text59
 10028  003C70                     __ptext59:
 10029                           	callstack 0
 10030  003C70                     _CLC3_Initialize:
 10031                           	callstack 21
 10032  003C70                     
 10033                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 10034  003C70  0E00               	movlw	0
 10035  003C72  013C               	movlb	60	; () banked
 10036  003C74  6F61               	movwf	97,b	;volatile
 10037                           
 10038                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 10039  003C76  0E03               	movlw	3
 10040  003C78  6F62               	movwf	98,b	;volatile
 10041                           
 10042                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 10043  003C7A  0E02               	movlw	2
 10044  003C7C  6F63               	movwf	99,b	;volatile
 10045                           
 10046                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 10047  003C7E  0E00               	movlw	0
 10048  003C80  6F64               	movwf	100,b	;volatile
 10049                           
 10050                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 10051  003C82  0E00               	movlw	0
 10052  003C84  6F65               	movwf	101,b	;volatile
 10053                           
 10054                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 10055  003C86  0E02               	movlw	2
 10056  003C88  6F66               	movwf	102,b	;volatile
 10057                           
 10058                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 10059  003C8A  0E08               	movlw	8
 10060  003C8C  6F67               	movwf	103,b	;volatile
 10061                           
 10062                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 10063  003C8E  0E00               	movlw	0
 10064  003C90  6F68               	movwf	104,b	;volatile
 10065                           
 10066                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 10067  003C92  0E00               	movlw	0
 10068  003C94  6F69               	movwf	105,b	;volatile
 10069                           
 10070                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 10071  003C96  0E85               	movlw	133
 10072  003C98  6F60               	movwf	96,b	;volatile
 10073  003C9A                     
 10074                           ; BSR set to: 60
 10075  003C9A  0012               	return		;funcret
 10076  003C9C                     __end_of_CLC3_Initialize:
 10077                           	callstack 0
 10078                           
 10079 ;; *************** function _CCP4_Initialize *****************
 10080 ;; Defined at:
 10081 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;		None
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg, status,2, status,0, cstack
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10099 ;;Total ram usage:        0 bytes
 10100 ;; Hardware stack levels used: 1
 10101 ;; Hardware stack levels required when called: 9
 10102 ;; This function calls:
 10103 ;;		_CCP4_SetCallBack
 10104 ;; This function is called by:
 10105 ;;		_SYSTEM_Initialize
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109                           	psect	text60
 10110  003BBA                     __ptext60:
 10111                           	callstack 0
 10112  003BBA                     _CCP4_Initialize:
 10113                           	callstack 20
 10114  003BBA                     
 10115                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 10116  003BBA  0E83               	movlw	131
 10117  003BBC  6E72               	movwf	114,c	;volatile
 10118                           
 10119                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 10120  003BBE  0E00               	movlw	0
 10121  003BC0  6E73               	movwf	115,c	;volatile
 10122                           
 10123                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 10124  003BC2  0E00               	movlw	0
 10125  003BC4  6E71               	movwf	113,c	;volatile
 10126                           
 10127                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 10128  003BC6  0E00               	movlw	0
 10129  003BC8  6E70               	movwf	112,c	;volatile
 10130  003BCA                     
 10131                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 10132  003BCA  0E8A               	movlw	low _CCP4_DefaultCallBack
 10133  003BCC  6E20               	movwf	CCP4_SetCallBack@customCallBack^0,c
 10134  003BCE  0E3B               	movlw	high _CCP4_DefaultCallBack
 10135  003BD0  6E21               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 10136  003BD2  EC71  F01F         	call	_CCP4_SetCallBack	;wreg free
 10137  003BD6                     
 10138                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 10139  003BD6  013F               	movlb	63	; () banked
 10140  003BD8  515E               	movf	94,w,b	;volatile
 10141  003BDA  0B3F               	andlw	-193
 10142  003BDC  0980               	iorlw	128
 10143  003BDE  6F5E               	movwf	94,b	;volatile
 10144  003BE0                     
 10145                           ; BSR set to: 63
 10146                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 10147  003BE0  0139               	movlb	57	; () banked
 10148  003BE2  91AA               	bcf	170,0,b	;volatile
 10149  003BE4                     
 10150                           ; BSR set to: 57
 10151                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 10152  003BE4  819A               	bsf	154,0,b	;volatile
 10153  003BE6                     
 10154                           ; BSR set to: 57
 10155  003BE6  0012               	return		;funcret
 10156  003BE8                     __end_of_CCP4_Initialize:
 10157                           	callstack 0
 10158                           
 10159 ;; *************** function _CCP4_SetCallBack *****************
 10160 ;; Defined at:
 10161 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 10164 ;;		 -> CCP4_DefaultCallBack(1), 
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;		None
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;Total ram usage:        2 bytes
 10181 ;; Hardware stack levels used: 1
 10182 ;; Hardware stack levels required when called: 8
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_CCP4_Initialize
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text61
 10191  003EE2                     __ptext61:
 10192                           	callstack 0
 10193  003EE2                     _CCP4_SetCallBack:
 10194                           	callstack 20
 10195  003EE2                     
 10196                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 10197  003EE2  C020  F0F1         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 10198  003EE6  C021  F0F2         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 10199  003EEA  0012               	return		;funcret
 10200  003EEC                     __end_of_CCP4_SetCallBack:
 10201                           	callstack 0
 10202                           
 10203 ;; *************** function _CCP3_Initialize *****************
 10204 ;; Defined at:
 10205 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, status,2, status,0, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used: 1
 10225 ;; Hardware stack levels required when called: 9
 10226 ;; This function calls:
 10227 ;;		_CCP3_SetCallBack
 10228 ;; This function is called by:
 10229 ;;		_SYSTEM_Initialize
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           	psect	text62
 10234  003BE8                     __ptext62:
 10235                           	callstack 0
 10236  003BE8                     _CCP3_Initialize:
 10237                           	callstack 20
 10238  003BE8                     
 10239                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 10240  003BE8  0E83               	movlw	131
 10241  003BEA  6E76               	movwf	118,c	;volatile
 10242                           
 10243                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 10244  003BEC  0E00               	movlw	0
 10245  003BEE  6E77               	movwf	119,c	;volatile
 10246                           
 10247                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 10248  003BF0  0E00               	movlw	0
 10249  003BF2  6E75               	movwf	117,c	;volatile
 10250                           
 10251                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 10252  003BF4  0E00               	movlw	0
 10253  003BF6  6E74               	movwf	116,c	;volatile
 10254  003BF8                     
 10255                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10256  003BF8  0E5A               	movlw	low _CCP3_DefaultCallBack
 10257  003BFA  6E20               	movwf	CCP3_SetCallBack@customCallBack^0,c
 10258  003BFC  0E3B               	movlw	high _CCP3_DefaultCallBack
 10259  003BFE  6E21               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 10260  003C00  EC76  F01F         	call	_CCP3_SetCallBack	;wreg free
 10261  003C04                     
 10262                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 10263  003C04  013F               	movlb	63	; () banked
 10264  003C06  515E               	movf	94,w,b	;volatile
 10265  003C08  0BCF               	andlw	-49
 10266  003C0A  0920               	iorlw	32
 10267  003C0C  6F5E               	movwf	94,b	;volatile
 10268  003C0E                     
 10269                           ; BSR set to: 63
 10270                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 10271  003C0E  0139               	movlb	57	; () banked
 10272  003C10  93A9               	bcf	169,1,b	;volatile
 10273  003C12                     
 10274                           ; BSR set to: 57
 10275                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 10276  003C12  8399               	bsf	153,1,b	;volatile
 10277  003C14                     
 10278                           ; BSR set to: 57
 10279  003C14  0012               	return		;funcret
 10280  003C16                     __end_of_CCP3_Initialize:
 10281                           	callstack 0
 10282                           
 10283 ;; *************** function _CCP3_SetCallBack *****************
 10284 ;; Defined at:
 10285 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 10288 ;;		 -> CCP3_DefaultCallBack(1), 
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;		None
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  1    wreg      void 
 10293 ;; Registers used:
 10294 ;;		wreg, status,2, status,0
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;Total ram usage:        2 bytes
 10305 ;; Hardware stack levels used: 1
 10306 ;; Hardware stack levels required when called: 8
 10307 ;; This function calls:
 10308 ;;		Nothing
 10309 ;; This function is called by:
 10310 ;;		_CCP3_Initialize
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text63
 10315  003EEC                     __ptext63:
 10316                           	callstack 0
 10317  003EEC                     _CCP3_SetCallBack:
 10318                           	callstack 20
 10319  003EEC                     
 10320                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 10321  003EEC  C020  F0F3         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 10322  003EF0  C021  F0F4         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 10323  003EF4  0012               	return		;funcret
 10324  003EF6                     __end_of_CCP3_SetCallBack:
 10325                           	callstack 0
 10326                           
 10327 ;; *************** function _ADCC_Initialize *****************
 10328 ;; Defined at:
 10329 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;		None
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;		None
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  1    wreg      void 
 10336 ;; Registers used:
 10337 ;;		wreg, status,2
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10347 ;;Total ram usage:        0 bytes
 10348 ;; Hardware stack levels used: 1
 10349 ;; Hardware stack levels required when called: 8
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		_SYSTEM_Initialize
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text64
 10358  0034EC                     __ptext64:
 10359                           	callstack 0
 10360  0034EC                     _ADCC_Initialize:
 10361                           	callstack 21
 10362  0034EC                     
 10363                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 10364  0034EC  0E00               	movlw	0
 10365  0034EE  013E               	movlb	62	; () banked
 10366  0034F0  6FDE               	movwf	222,b	;volatile
 10367                           
 10368                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 10369  0034F2  0E00               	movlw	0
 10370  0034F4  6FDF               	movwf	223,b	;volatile
 10371                           
 10372                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 10373  0034F6  0E00               	movlw	0
 10374  0034F8  6FE0               	movwf	224,b	;volatile
 10375                           
 10376                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 10377  0034FA  0E00               	movlw	0
 10378  0034FC  6FE1               	movwf	225,b	;volatile
 10379                           
 10380                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 10381  0034FE  0E00               	movlw	0
 10382  003500  6FE4               	movwf	228,b	;volatile
 10383                           
 10384                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 10385  003502  0E00               	movlw	0
 10386  003504  6FE5               	movwf	229,b	;volatile
 10387                           
 10388                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 10389  003506  0E00               	movlw	0
 10390  003508  6FEA               	movwf	234,b	;volatile
 10391                           
 10392                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 10393  00350A  0E00               	movlw	0
 10394  00350C  6FEC               	movwf	236,b	;volatile
 10395                           
 10396                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 10397  00350E  0E00               	movlw	0
 10398  003510  6FF1               	movwf	241,b	;volatile
 10399                           
 10400                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 10401  003512  0E58               	movlw	88
 10402  003514  6FF3               	movwf	243,b	;volatile
 10403                           
 10404                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 10405  003516  0E02               	movlw	2
 10406  003518  6FF4               	movwf	244,b	;volatile
 10407                           
 10408                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 10409  00351A  0E00               	movlw	0
 10410  00351C  6FF5               	movwf	245,b	;volatile
 10411                           
 10412                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 10413  00351E  0E00               	movlw	0
 10414  003520  6FF6               	movwf	246,b	;volatile
 10415                           
 10416                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 10417  003522  0E00               	movlw	0
 10418  003524  6FF7               	movwf	247,b	;volatile
 10419                           
 10420                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 10421  003526  0E00               	movlw	0
 10422  003528  6FF9               	movwf	249,b	;volatile
 10423                           
 10424                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 10425  00352A  0E00               	movlw	0
 10426  00352C  6FFA               	movwf	250,b	;volatile
 10427                           
 10428                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 10429  00352E  0E00               	movlw	0
 10430  003530  6FFB               	movwf	251,b	;volatile
 10431                           
 10432                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 10433  003532  0E00               	movlw	0
 10434  003534  6FFC               	movwf	252,b	;volatile
 10435                           
 10436                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 10437  003536  0E00               	movlw	0
 10438  003538  6FFD               	movwf	253,b	;volatile
 10439                           
 10440                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 10441  00353A  0E00               	movlw	0
 10442  00353C  6FFE               	movwf	254,b	;volatile
 10443                           
 10444                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 10445  00353E  0E1F               	movlw	31
 10446  003540  6FFF               	movwf	255,b	;volatile
 10447                           
 10448                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 10449  003542  0E84               	movlw	132
 10450  003544  6FF8               	movwf	248,b	;volatile
 10451  003546                     
 10452                           ; BSR set to: 62
 10453  003546  0012               	return		;funcret
 10454  003548                     __end_of_ADCC_Initialize:
 10455                           	callstack 0
 10456                           
 10457 ;; *************** function _UART1_tx_vect_isr *****************
 10458 ;; Defined at:
 10459 ;;		line 235 in file "mcc_generated_files/uart1.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;		None
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;		None
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1    wreg      void 
 10466 ;; Registers used:
 10467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10475 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10476 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;Total ram usage:        3 bytes
 10478 ;; Hardware stack levels used: 1
 10479 ;; Hardware stack levels required when called: 5
 10480 ;; This function calls:
 10481 ;;		Absolute function
 10482 ;;		_UART1_Transmit_ISR
 10483 ;; This function is called by:
 10484 ;;		Interrupt level 1
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text65
 10489  00359C                     __ptext65:
 10490                           	callstack 0
 10491  00359C                     _UART1_tx_vect_isr:
 10492                           	callstack 13
 10493                           
 10494                           ; BSR set to: 62
 10495                           ;incstack = 0
 10496  00359C  006F FF60  F017    	movff	status,??_UART1_tx_vect_isr
 10497  0035A2  006F FFE8  F018    	movff	pclath,??_UART1_tx_vect_isr+1
 10498  0035A8  006F FFEC  F019    	movff	pclatu,??_UART1_tx_vect_isr+2
 10499  0035AE                     
 10500                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 10501  0035AE  0100               	movlb	0	; () banked
 10502  0035B0  51FB               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10503  0035B2  11FC               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10504  0035B4  B4D8               	btfsc	status,2,c
 10505  0035B6  EFDF  F01A         	goto	i1u415_21
 10506  0035BA  EFE1  F01A         	goto	i1u415_20
 10507  0035BE                     i1u415_21:
 10508  0035BE  EFED  F01A         	goto	i1l324
 10509  0035C2                     i1u415_20:
 10510  0035C2                     
 10511                           ; BSR set to: 0
 10512                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 10513  0035C2  D802               	call	i1u416_28
 10514  0035C4  EFED  F01A         	goto	i1u416_29
 10515  0035C8                     i1u416_28:
 10516  0035C8  0005               	push	
 10517  0035CA  6EFA               	movwf	pclath,c
 10518  0035CC  51FB               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10519  0035CE  6EFD               	movwf	tosl,c
 10520  0035D0  51FC               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10521  0035D2  6EFE               	movwf	tosh,c
 10522  0035D4  6AFF               	clrf	tosu,c
 10523  0035D6  50FA               	movf	pclath,w,c
 10524  0035D8  0012               	return		;indir
 10525  0035DA                     i1u416_29:
 10526  0035DA                     i1l324:
 10527  0035DA  0060  F067  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 10528  0035E0  0060  F063  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 10529  0035E6  0060  F05F  FFD8   	movff	??_UART1_tx_vect_isr,status
 10530  0035EC  0011               	retfie		f
 10531  0035EE                     __end_of_UART1_tx_vect_isr:
 10532                           	callstack 0
 10533                           
 10534 ;; *************** function _UART1_Transmit_ISR *****************
 10535 ;; Defined at:
 10536 ;;		line 253 in file "mcc_generated_files/uart1.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;		None
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;		None
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10554 ;;Total ram usage:        0 bytes
 10555 ;; Hardware stack levels used: 1
 10556 ;; Hardware stack levels required when called: 4
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_UART1_Initialize
 10561 ;;		_UART1_tx_vect_isr
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           	psect	text66
 10566  0038EA                     __ptext66:
 10567                           	callstack 0
 10568  0038EA                     _UART1_Transmit_ISR:
 10569                           	callstack 13
 10570  0038EA                     
 10571                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 10572  0038EA  0E08               	movlw	8
 10573  0038EC  6040               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 10574  0038EE  EF7B  F01C         	goto	i1u395_21
 10575  0038F2  EF7D  F01C         	goto	i1u395_20
 10576  0038F6                     i1u395_21:
 10577  0038F6  EF94  F01C         	goto	i1l333
 10578  0038FA                     i1u395_20:
 10579  0038FA                     
 10580                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 10581  0038FA  0EBF               	movlw	low _uart1TxBuffer
 10582  0038FC  243A               	addwf	_uart1TxTail^0,w,c	;volatile
 10583  0038FE  6ED9               	movwf	fsr2l,c
 10584  003900  6ADA               	clrf	fsr2h,c
 10585  003902  0E00               	movlw	high _uart1TxBuffer
 10586  003904  22DA               	addwfc	fsr2h,f,c
 10587  003906  50DF               	movf	indf2,w,c
 10588  003908  013D               	movlb	61	; () banked
 10589  00390A  6FEA               	movwf	234,b	;volatile
 10590  00390C                     
 10591                           ; BSR set to: 61
 10592  00390C  2A3A               	incf	_uart1TxTail^0,f,c	;volatile
 10593  00390E                     
 10594                           ; BSR set to: 61
 10595                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 10596  00390E  0E07               	movlw	7
 10597  003910  643A               	cpfsgt	_uart1TxTail^0,c	;volatile
 10598  003912  EF8D  F01C         	goto	i1u396_21
 10599  003916  EF8F  F01C         	goto	i1u396_20
 10600  00391A                     i1u396_21:
 10601  00391A  EF91  F01C         	goto	i1l5314
 10602  00391E                     i1u396_20:
 10603  00391E                     
 10604                           ; BSR set to: 61
 10605                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 10606  00391E  0E00               	movlw	0
 10607  003920  6E3A               	movwf	_uart1TxTail^0,c	;volatile
 10608  003922                     i1l5314:
 10609                           
 10610                           ; BSR set to: 61
 10611                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 10612  003922  2A40               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 10613                           
 10614                           ;mcc_generated_files/uart1.c: 264:     }
 10615  003924  EF96  F01C         	goto	i1l336
 10616  003928                     i1l333:
 10617                           
 10618                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 10619  003928  0139               	movlb	57	; () banked
 10620  00392A  9993               	bcf	147,4,b	;volatile
 10621  00392C                     i1l336:
 10622  00392C  0012               	return		;funcret
 10623  00392E                     __end_of_UART1_Transmit_ISR:
 10624                           	callstack 0
 10625                           
 10626 ;; *************** function _UART1_rx_vect_isr *****************
 10627 ;; Defined at:
 10628 ;;		line 243 in file "mcc_generated_files/uart1.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;		None
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;		None
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10645 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10646 ;;Total ram usage:        3 bytes
 10647 ;; Hardware stack levels used: 1
 10648 ;; Hardware stack levels required when called: 7
 10649 ;; This function calls:
 10650 ;;		Absolute function
 10651 ;;		_UART1_Receive_ISR
 10652 ;; This function is called by:
 10653 ;;		Interrupt level 1
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657                           	psect	text67
 10658  0035F0                     __ptext67:
 10659                           	callstack 0
 10660  0035F0                     _UART1_rx_vect_isr:
 10661                           	callstack 11
 10662                           
 10663                           ;incstack = 0
 10664  0035F0  006F FF60  F01A    	movff	status,??_UART1_rx_vect_isr
 10665  0035F6  006F FFE8  F01B    	movff	pclath,??_UART1_rx_vect_isr+1
 10666  0035FC  006F FFEC  F01C    	movff	pclatu,??_UART1_rx_vect_isr+2
 10667  003602                     
 10668                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 10669  003602  0100               	movlb	0	; () banked
 10670  003604  51FD               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 10671  003606  11FE               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 10672  003608  B4D8               	btfsc	status,2,c
 10673  00360A  EF09  F01B         	goto	i1u417_21
 10674  00360E  EF0B  F01B         	goto	i1u417_20
 10675  003612                     i1u417_21:
 10676  003612  EF17  F01B         	goto	i1l330
 10677  003616                     i1u417_20:
 10678  003616                     
 10679                           ; BSR set to: 0
 10680                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 10681  003616  D802               	call	i1u418_28
 10682  003618  EF17  F01B         	goto	i1u418_29
 10683  00361C                     i1u418_28:
 10684  00361C  0005               	push	
 10685  00361E  6EFA               	movwf	pclath,c
 10686  003620  51FD               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 10687  003622  6EFD               	movwf	tosl,c
 10688  003624  51FE               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 10689  003626  6EFE               	movwf	tosh,c
 10690  003628  6AFF               	clrf	tosu,c
 10691  00362A  50FA               	movf	pclath,w,c
 10692  00362C  0012               	return		;indir
 10693  00362E                     i1u418_29:
 10694  00362E                     i1l330:
 10695  00362E  0060  F073  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 10696  003634  0060  F06F  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 10697  00363A  0060  F06B  FFD8   	movff	??_UART1_rx_vect_isr,status
 10698  003640  0011               	retfie		f
 10699  003642                     __end_of_UART1_rx_vect_isr:
 10700                           	callstack 0
 10701                           
 10702 ;; *************** function _UART1_Receive_ISR *****************
 10703 ;; Defined at:
 10704 ;;		line 273 in file "mcc_generated_files/uart1.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;		None
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;		None
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      void 
 10711 ;; Registers used:
 10712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;Total ram usage:        0 bytes
 10723 ;; Hardware stack levels used: 1
 10724 ;; Hardware stack levels required when called: 6
 10725 ;; This function calls:
 10726 ;;		Absolute function
 10727 ;;		_UART1_DefaultErrorHandler
 10728 ;;		_UART1_DefaultFramingErrorHandler
 10729 ;;		_UART1_DefaultOverrunErrorHandler
 10730 ;;		_UART1_RxDataHandler
 10731 ;; This function is called by:
 10732 ;;		_UART1_Initialize
 10733 ;;		_UART1_rx_vect_isr
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           	psect	text68
 10738  00305C                     __ptext68:
 10739                           	callstack 0
 10740  00305C                     _UART1_Receive_ISR:
 10741                           	callstack 11
 10742  00305C                     
 10743                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 10744  00305C  0EAF               	movlw	low _uart1RxStatusBuffer
 10745  00305E  2439               	addwf	_uart1RxHead^0,w,c	;volatile
 10746  003060  6ED9               	movwf	fsr2l,c
 10747  003062  6ADA               	clrf	fsr2h,c
 10748  003064  0E00               	movlw	high _uart1RxStatusBuffer
 10749  003066  22DA               	addwfc	fsr2h,f,c
 10750  003068  0E00               	movlw	0
 10751  00306A  6EDF               	movwf	indf2,c
 10752  00306C                     
 10753                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 10754  00306C  013D               	movlb	61	; () banked
 10755  00306E  A7F9               	btfss	249,3,b	;volatile
 10756  003070  EF3C  F018         	goto	i1u397_21
 10757  003074  EF3E  F018         	goto	i1u397_20
 10758  003078                     i1u397_21:
 10759  003078  EF52  F018         	goto	i1l5324
 10760  00307C                     i1u397_20:
 10761  00307C                     
 10762                           ; BSR set to: 61
 10763                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 10764  00307C  0EAF               	movlw	low _uart1RxStatusBuffer
 10765  00307E  2439               	addwf	_uart1RxHead^0,w,c	;volatile
 10766  003080  6ED9               	movwf	fsr2l,c
 10767  003082  6ADA               	clrf	fsr2h,c
 10768  003084  0E00               	movlw	high _uart1RxStatusBuffer
 10769  003086  22DA               	addwfc	fsr2h,f,c
 10770  003088  0100               	movlb	0	; () banked
 10771  00308A  82DF               	bsf	indf2,1,c
 10772  00308C                     
 10773                           ; BSR set to: 0
 10774                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 10775  00308C  D802               	call	i1u398_28
 10776  00308E  EF52  F018         	goto	i1u398_29
 10777  003092                     i1u398_28:
 10778  003092  0005               	push	
 10779  003094  6EFA               	movwf	pclath,c
 10780  003096  51F9               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 10781  003098  6EFD               	movwf	tosl,c
 10782  00309A  51FA               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 10783  00309C  6EFE               	movwf	tosh,c
 10784  00309E  6AFF               	clrf	tosu,c
 10785  0030A0  50FA               	movf	pclath,w,c
 10786  0030A2  0012               	return		;indir
 10787  0030A4                     i1u398_29:
 10788  0030A4                     i1l5324:
 10789                           
 10790                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 10791  0030A4  013D               	movlb	61	; () banked
 10792  0030A6  A3F9               	btfss	249,1,b	;volatile
 10793  0030A8  EF58  F018         	goto	i1u399_21
 10794  0030AC  EF5A  F018         	goto	i1u399_20
 10795  0030B0                     i1u399_21:
 10796  0030B0  EF6E  F018         	goto	i1l5330
 10797  0030B4                     i1u399_20:
 10798  0030B4                     
 10799                           ; BSR set to: 61
 10800                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 10801  0030B4  0EAF               	movlw	low _uart1RxStatusBuffer
 10802  0030B6  2439               	addwf	_uart1RxHead^0,w,c	;volatile
 10803  0030B8  6ED9               	movwf	fsr2l,c
 10804  0030BA  6ADA               	clrf	fsr2h,c
 10805  0030BC  0E00               	movlw	high _uart1RxStatusBuffer
 10806  0030BE  22DA               	addwfc	fsr2h,f,c
 10807  0030C0  0100               	movlb	0	; () banked
 10808  0030C2  84DF               	bsf	indf2,2,c
 10809  0030C4                     
 10810                           ; BSR set to: 0
 10811                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 10812  0030C4  D802               	call	i1u400_28
 10813  0030C6  EF6E  F018         	goto	i1u400_29
 10814  0030CA                     i1u400_28:
 10815  0030CA  0005               	push	
 10816  0030CC  6EFA               	movwf	pclath,c
 10817  0030CE  51F7               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 10818  0030D0  6EFD               	movwf	tosl,c
 10819  0030D2  51F8               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 10820  0030D4  6EFE               	movwf	tosh,c
 10821  0030D6  6AFF               	clrf	tosu,c
 10822  0030D8  50FA               	movf	pclath,w,c
 10823  0030DA  0012               	return		;indir
 10824  0030DC                     i1u400_29:
 10825  0030DC                     i1l5330:
 10826                           
 10827                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 10828  0030DC  0EAF               	movlw	low _uart1RxStatusBuffer
 10829  0030DE  2439               	addwf	_uart1RxHead^0,w,c	;volatile
 10830  0030E0  6ED9               	movwf	fsr2l,c
 10831  0030E2  6ADA               	clrf	fsr2h,c
 10832  0030E4  0E00               	movlw	high _uart1RxStatusBuffer
 10833  0030E6  22DA               	addwfc	fsr2h,f,c
 10834  0030E8  50DF               	movf	indf2,w,c
 10835  0030EA  B4D8               	btfsc	status,2,c
 10836  0030EC  EF7A  F018         	goto	i1u401_21
 10837  0030F0  EF7C  F018         	goto	i1u401_20
 10838  0030F4                     i1u401_21:
 10839  0030F4  EF8B  F018         	goto	i1l5334
 10840  0030F8                     i1u401_20:
 10841  0030F8                     
 10842                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 10843  0030F8  D802               	call	i1u402_28
 10844  0030FA  EF89  F018         	goto	i1u402_29
 10845  0030FE                     i1u402_28:
 10846  0030FE  0005               	push	
 10847  003100  6EFA               	movwf	pclath,c
 10848  003102  0100               	movlb	0	; () banked
 10849  003104  51F5               	movf	_UART1_ErrorHandler& (0+255),w,b
 10850  003106  6EFD               	movwf	tosl,c
 10851  003108  51F6               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 10852  00310A  6EFE               	movwf	tosh,c
 10853  00310C  6AFF               	clrf	tosu,c
 10854  00310E  50FA               	movf	pclath,w,c
 10855  003110  0012               	return		;indir
 10856  003112                     i1u402_29:
 10857                           
 10858                           ;mcc_generated_files/uart1.c: 290:     } else {
 10859  003112  EF8D  F018         	goto	i1l343
 10860  003116                     i1l5334:
 10861                           
 10862                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 10863  003116  EC4E  F01E         	call	_UART1_RxDataHandler	;wreg free
 10864  00311A                     i1l343:
 10865  00311A  0012               	return		;funcret
 10866  00311C                     __end_of_UART1_Receive_ISR:
 10867                           	callstack 0
 10868                           
 10869 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 10870 ;; Defined at:
 10871 ;;		line 309 in file "mcc_generated_files/uart1.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;		None
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		None
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10889 ;;Total ram usage:        0 bytes
 10890 ;; Hardware stack levels used: 1
 10891 ;; Hardware stack levels required when called: 4
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		_UART1_Initialize
 10896 ;;		_UART1_Receive_ISR
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           	psect	text69
 10901  003F00                     __ptext69:
 10902                           	callstack 0
 10903  003F00                     _UART1_DefaultOverrunErrorHandler:
 10904                           	callstack 12
 10905  003F00  0012               	return		;funcret
 10906  003F02                     __end_of_UART1_DefaultOverrunErrorHandler:
 10907                           	callstack 0
 10908                           
 10909 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 10910 ;; Defined at:
 10911 ;;		line 307 in file "mcc_generated_files/uart1.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;		None
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;		None
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		None
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;Total ram usage:        0 bytes
 10930 ;; Hardware stack levels used: 1
 10931 ;; Hardware stack levels required when called: 4
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_UART1_Initialize
 10936 ;;		_UART1_Receive_ISR
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text70
 10941  003F02                     __ptext70:
 10942                           	callstack 0
 10943  003F02                     _UART1_DefaultFramingErrorHandler:
 10944                           	callstack 12
 10945  003F02  0012               	return		;funcret
 10946  003F04                     __end_of_UART1_DefaultFramingErrorHandler:
 10947                           	callstack 0
 10948                           
 10949 ;; *************** function _UART1_DefaultErrorHandler *****************
 10950 ;; Defined at:
 10951 ;;		line 311 in file "mcc_generated_files/uart1.c"
 10952 ;; Parameters:    Size  Location     Type
 10953 ;;		None
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;		None
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1    wreg      void 
 10958 ;; Registers used:
 10959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10960 ;; Tracked objects:
 10961 ;;		On entry : 0/0
 10962 ;;		On exit  : 0/0
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10969 ;;Total ram usage:        0 bytes
 10970 ;; Hardware stack levels used: 1
 10971 ;; Hardware stack levels required when called: 5
 10972 ;; This function calls:
 10973 ;;		_UART1_RxDataHandler
 10974 ;; This function is called by:
 10975 ;;		_UART1_Initialize
 10976 ;;		_UART1_Receive_ISR
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980                           	psect	text71
 10981  003EF6                     __ptext71:
 10982                           	callstack 0
 10983  003EF6                     _UART1_DefaultErrorHandler:
 10984                           	callstack 11
 10985  003EF6                     
 10986                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 10987  003EF6  EC4E  F01E         	call	_UART1_RxDataHandler	;wreg free
 10988  003EFA  0012               	return		;funcret
 10989  003EFC                     __end_of_UART1_DefaultErrorHandler:
 10990                           	callstack 0
 10991                           
 10992 ;; *************** function _UART1_RxDataHandler *****************
 10993 ;; Defined at:
 10994 ;;		line 297 in file "mcc_generated_files/uart1.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;		None
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;		None
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  1    wreg      void 
 11001 ;; Registers used:
 11002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;Total ram usage:        0 bytes
 11013 ;; Hardware stack levels used: 1
 11014 ;; Hardware stack levels required when called: 4
 11015 ;; This function calls:
 11016 ;;		Nothing
 11017 ;; This function is called by:
 11018 ;;		_UART1_Receive_ISR
 11019 ;;		_UART1_DefaultErrorHandler
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text72
 11024  003C9C                     __ptext72:
 11025                           	callstack 0
 11026  003C9C                     _UART1_RxDataHandler:
 11027                           	callstack 12
 11028  003C9C                     
 11029                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 11030  003C9C  0EB7               	movlw	low _uart1RxBuffer
 11031  003C9E  2439               	addwf	_uart1RxHead^0,w,c	;volatile
 11032  003CA0  6ED9               	movwf	fsr2l,c
 11033  003CA2  6ADA               	clrf	fsr2h,c
 11034  003CA4  0E00               	movlw	high _uart1RxBuffer
 11035  003CA6  22DA               	addwfc	fsr2h,f,c
 11036  003CA8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 11037  003CAE  2A39               	incf	_uart1RxHead^0,f,c	;volatile
 11038  003CB0                     
 11039                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 11040  003CB0  0E07               	movlw	7
 11041  003CB2  6439               	cpfsgt	_uart1RxHead^0,c	;volatile
 11042  003CB4  EF5E  F01E         	goto	i1u263_21
 11043  003CB8  EF60  F01E         	goto	i1u263_20
 11044  003CBC                     i1u263_21:
 11045  003CBC  EF62  F01E         	goto	i1l4360
 11046  003CC0                     i1u263_20:
 11047  003CC0                     
 11048                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 11049  003CC0  0E00               	movlw	0
 11050  003CC2  6E39               	movwf	_uart1RxHead^0,c	;volatile
 11051  003CC4                     i1l4360:
 11052                           
 11053                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 11054  003CC4  2A37               	incf	_uart1RxCount^0,f,c	;volatile
 11055  003CC6  0012               	return		;funcret
 11056  003CC8                     __end_of_UART1_RxDataHandler:
 11057                           	callstack 0
 11058                           
 11059 ;; *************** function _TMR4_ISR *****************
 11060 ;; Defined at:
 11061 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;		None
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;		None
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;Total ram usage:        3 bytes
 11080 ;; Hardware stack levels used: 1
 11081 ;; Hardware stack levels required when called: 6
 11082 ;; This function calls:
 11083 ;;		_TMR4_CallBack
 11084 ;; This function is called by:
 11085 ;;		Interrupt level 1
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text73
 11090  003644                     __ptext73:
 11091                           	callstack 0
 11092  003644                     _TMR4_ISR:
 11093                           	callstack 12
 11094                           
 11095                           ;incstack = 0
 11096  003644  006F FF60  F01D    	movff	status,??_TMR4_ISR
 11097  00364A  006F FFE8  F01E    	movff	pclath,??_TMR4_ISR+1
 11098  003650  006F FFEC  F01F    	movff	pclatu,??_TMR4_ISR+2
 11099  003656                     
 11100                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 11101  003656  0139               	movlb	57	; () banked
 11102  003658  91A7               	bcf	167,0,b	;volatile
 11103  00365A                     
 11104                           ; BSR set to: 57
 11105                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 11106  00365A  4A2A               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 11107  00365C  2A2B               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 11108  00365E  502B               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 11109  003660  E109               	bnz	i1u423_20
 11110  003662  0E0A               	movlw	10
 11111  003664  5C2A               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 11112  003666  A0D8               	btfss	status,0,c
 11113  003668  EF38  F01B         	goto	i1u423_21
 11114  00366C  EF3A  F01B         	goto	i1u423_20
 11115  003670                     i1u423_21:
 11116  003670  EF40  F01B         	goto	i1l688
 11117  003674                     i1u423_20:
 11118  003674                     
 11119                           ; BSR set to: 57
 11120                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 11121  003674  EC0B  F01E         	call	_TMR4_CallBack	;wreg free
 11122  003678                     
 11123                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 11124  003678  0E00               	movlw	0
 11125  00367A  6E2B               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 11126  00367C  0E00               	movlw	0
 11127  00367E  6E2A               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 11128  003680                     i1l688:
 11129  003680  0060  F07F  FFFB   	movff	??_TMR4_ISR+2,pclatu
 11130  003686  0060  F07B  FFFA   	movff	??_TMR4_ISR+1,pclath
 11131  00368C  0060  F077  FFD8   	movff	??_TMR4_ISR,status
 11132  003692  0011               	retfie		f
 11133  003694                     __end_of_TMR4_ISR:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function _TMR4_CallBack *****************
 11137 ;; Defined at:
 11138 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;		None
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;		None
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;Total ram usage:        0 bytes
 11157 ;; Hardware stack levels used: 1
 11158 ;; Hardware stack levels required when called: 5
 11159 ;; This function calls:
 11160 ;;		Absolute function
 11161 ;;		_TMR4_10msISR
 11162 ;;		_TMR4_DefaultInterruptHandler
 11163 ;; This function is called by:
 11164 ;;		_TMR4_ISR
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text74
 11169  003C16                     __ptext74:
 11170                           	callstack 0
 11171  003C16                     _TMR4_CallBack:
 11172                           	callstack 12
 11173  003C16                     
 11174                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 11175  003C16  0100               	movlb	0	; () banked
 11176  003C18  51E9               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11177  003C1A  11EA               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11178  003C1C  B4D8               	btfsc	status,2,c
 11179  003C1E  EF13  F01E         	goto	i1u406_21
 11180  003C22  EF15  F01E         	goto	i1u406_20
 11181  003C26                     i1u406_21:
 11182  003C26  EF21  F01E         	goto	i1l692
 11183  003C2A                     i1u406_20:
 11184  003C2A                     
 11185                           ; BSR set to: 0
 11186                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 11187  003C2A  D802               	call	i1u407_28
 11188  003C2C  EF21  F01E         	goto	i1u407_29
 11189  003C30                     i1u407_28:
 11190  003C30  0005               	push	
 11191  003C32  6EFA               	movwf	pclath,c
 11192  003C34  51E9               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11193  003C36  6EFD               	movwf	tosl,c
 11194  003C38  51EA               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11195  003C3A  6EFE               	movwf	tosh,c
 11196  003C3C  6AFF               	clrf	tosu,c
 11197  003C3E  50FA               	movf	pclath,w,c
 11198  003C40  0012               	return		;indir
 11199  003C42                     i1u407_29:
 11200  003C42                     i1l692:
 11201  003C42  0012               	return		;funcret
 11202  003C44                     __end_of_TMR4_CallBack:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function _TMR4_10msISR *****************
 11206 ;; Defined at:
 11207 ;;		line 64 in file "main.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;		None
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;		None
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      void 
 11214 ;; Registers used:
 11215 ;;		status,2, status,0
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;Total ram usage:        0 bytes
 11226 ;; Hardware stack levels used: 1
 11227 ;; Hardware stack levels required when called: 4
 11228 ;; This function calls:
 11229 ;;		Nothing
 11230 ;; This function is called by:
 11231 ;;		_main
 11232 ;;		_TMR4_CallBack
 11233 ;; This function uses a non-reentrant model
 11234 ;;
 11235                           
 11236                           	psect	text75
 11237  003EFC                     __ptext75:
 11238                           	callstack 0
 11239  003EFC                     _TMR4_10msISR:
 11240                           	callstack 12
 11241  003EFC                     
 11242                           ;main.c: 65:     ++cycle10ms;
 11243  003EFC  2A33               	incf	_cycle10ms^0,f,c	;volatile
 11244  003EFE  0012               	return		;funcret
 11245  003F00                     __end_of_TMR4_10msISR:
 11246                           	callstack 0
 11247                           
 11248 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 11249 ;; Defined at:
 11250 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;		None
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  1    wreg      void 
 11257 ;; Registers used:
 11258 ;;		None
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11268 ;;Total ram usage:        0 bytes
 11269 ;; Hardware stack levels used: 1
 11270 ;; Hardware stack levels required when called: 4
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_TMR4_Initialize
 11275 ;;		_TMR4_CallBack
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           	psect	text76
 11280  003F04                     __ptext76:
 11281                           	callstack 0
 11282  003F04                     _TMR4_DefaultInterruptHandler:
 11283                           	callstack 12
 11284  003F04  0012               	return		;funcret
 11285  003F06                     __end_of_TMR4_DefaultInterruptHandler:
 11286                           	callstack 0
 11287                           
 11288 ;; *************** function _Default_ISR *****************
 11289 ;; Defined at:
 11290 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 11291 ;; Parameters:    Size  Location     Type
 11292 ;;		None
 11293 ;; Auto vars:     Size  Location     Type
 11294 ;;		None
 11295 ;; Return value:  Size  Location     Type
 11296 ;;                  1    wreg      void 
 11297 ;; Registers used:
 11298 ;;		None
 11299 ;; Tracked objects:
 11300 ;;		On entry : 0/0
 11301 ;;		On exit  : 0/0
 11302 ;;		Unchanged: 0/0
 11303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;Total ram usage:        0 bytes
 11309 ;; Hardware stack levels used: 1
 11310 ;; This function calls:
 11311 ;;		Nothing
 11312 ;; This function is called by:
 11313 ;;		Interrupt level 2
 11314 ;; This function uses a non-reentrant model
 11315 ;;
 11316                           
 11317                           	psect	text77
 11318  003F08                     __ptext77:
 11319                           	callstack 0
 11320  003F08                     _Default_ISR:
 11321                           	callstack 14
 11322  003F08  0011               	retfie		f
 11323  003F0A                     __end_of_Default_ISR:
 11324                           	callstack 0
 11325                           
 11326 ;; *************** function _CCP3_CaptureISR *****************
 11327 ;; Defined at:
 11328 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;		None
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;  module          2    4[COMRAM] struct CCPR3Reg_tag
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1    wreg      void 
 11335 ;; Registers used:
 11336 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11345 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11346 ;;Total ram usage:        4 bytes
 11347 ;; Hardware stack levels used: 1
 11348 ;; Hardware stack levels required when called: 1
 11349 ;; This function calls:
 11350 ;;		Absolute function
 11351 ;;		_CCP3_DefaultCallBack
 11352 ;; This function is called by:
 11353 ;;		Interrupt level 2
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text78
 11358  0036E0                     __ptext78:
 11359                           	callstack 0
 11360  0036E0                     _CCP3_CaptureISR:
 11361                           	callstack 13
 11362                           
 11363                           ;incstack = 0
 11364  0036E0  006F FFE8  F003    	movff	pclath,??_CCP3_CaptureISR
 11365  0036E6  006F FFEC  F004    	movff	pclatu,??_CCP3_CaptureISR+1
 11366  0036EC                     
 11367                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 11368  0036EC  0139               	movlb	57	; () banked
 11369  0036EE  93A9               	bcf	169,1,b	;volatile
 11370                           
 11371                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 11372  0036F0  006F FDD0  F005    	movff	16244,CCP3_CaptureISR@module	;volatile
 11373                           
 11374                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 11375  0036F6  006F FDD4  F006    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 11376  0036FC                     
 11377                           ; BSR set to: 57
 11378                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 11379  0036FC  C005  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 11380  003700  C006  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 11381  003704  D802               	call	i2u419_48
 11382  003706  EF8F  F01B         	goto	i2u419_49
 11383  00370A                     i2u419_48:
 11384  00370A  0005               	push	
 11385  00370C  6EFA               	movwf	pclath,c
 11386  00370E  0100               	movlb	0	; () banked
 11387  003710  51F3               	movf	_CCP3_CallBack& (0+255),w,b
 11388  003712  6EFD               	movwf	tosl,c
 11389  003714  51F4               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 11390  003716  6EFE               	movwf	tosh,c
 11391  003718  6AFF               	clrf	tosu,c
 11392  00371A  50FA               	movf	pclath,w,c
 11393  00371C  0012               	return		;indir
 11394  00371E                     i2u419_49:
 11395  00371E  0060  F013  FFFB   	movff	??_CCP3_CaptureISR+1,pclatu
 11396  003724  0060  F00F  FFFA   	movff	??_CCP3_CaptureISR,pclath
 11397  00372A  0011               	retfie		f
 11398  00372C                     __end_of_CCP3_CaptureISR:
 11399                           	callstack 0
 11400                           
 11401 ;; *************** function _CCP3_DefaultCallBack *****************
 11402 ;; Defined at:
 11403 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;  capturedValu    2    0[COMRAM] unsigned short 
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		wreg, status,2, status,0
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;Total ram usage:        2 bytes
 11422 ;; Hardware stack levels used: 1
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_CCP3_Initialize
 11427 ;;		_CCP3_CaptureISR
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	text79
 11432  003B5A                     __ptext79:
 11433                           	callstack 0
 11434  003B5A                     _CCP3_DefaultCallBack:
 11435                           	callstack 13
 11436  003B5A                     
 11437                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 11438  003B5A  AECD               	btfss	205,7,c	;volatile
 11439  003B5C  EFB2  F01D         	goto	i2u403_41
 11440  003B60  EFB4  F01D         	goto	i2u403_40
 11441  003B64                     i2u403_41:
 11442  003B64  EFBA  F01D         	goto	i2l5340
 11443  003B68                     i2u403_40:
 11444  003B68                     
 11445                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 11446  003B68  C001  F0E5         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 11447  003B6C  C002  F0E6         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 11448                           
 11449                           ;mcc_generated_files/ccp3.c: 69:     } else {
 11450  003B70  EFC4  F01D         	goto	i2l438
 11451  003B74                     i2l5340:
 11452                           
 11453                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 11454  003B74  0100               	movlb	0	; () banked
 11455  003B76  51E5               	movf	_distLeftM& (0+255),w,b
 11456  003B78  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 11457  003B7A  6E2E               	movwf	_distLeft^0,c	;volatile
 11458  003B7C  51E6               	movf	(_distLeftM+1)& (0+255),w,b
 11459  003B7E  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 11460  003B80  6E2F               	movwf	(_distLeft+1)^0,c	;volatile
 11461  003B82                     
 11462                           ; BSR set to: 0
 11463                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 11464  003B82  90D8               	bcf	status,0,c
 11465  003B84  322F               	rrcf	(_distLeft+1)^0,f,c	;volatile
 11466  003B86  322E               	rrcf	_distLeft^0,f,c	;volatile
 11467  003B88                     i2l438:
 11468  003B88  0012               	return		;funcret
 11469  003B8A                     __end_of_CCP3_DefaultCallBack:
 11470                           	callstack 0
 11471                           
 11472 ;; *************** function _CCP4_CaptureISR *****************
 11473 ;; Defined at:
 11474 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;		None
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;  module          2   10[COMRAM] struct CCPR4Reg_tag
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  1    wreg      void 
 11481 ;; Registers used:
 11482 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11492 ;;Total ram usage:        4 bytes
 11493 ;; Hardware stack levels used: 1
 11494 ;; Hardware stack levels required when called: 1
 11495 ;; This function calls:
 11496 ;;		Absolute function
 11497 ;;		_CCP4_DefaultCallBack
 11498 ;; This function is called by:
 11499 ;;		Interrupt level 2
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           	psect	text80
 11504  00372C                     __ptext80:
 11505                           	callstack 0
 11506  00372C                     _CCP4_CaptureISR:
 11507                           	callstack 13
 11508                           
 11509                           ;incstack = 0
 11510  00372C  006F FFE8  F009    	movff	pclath,??_CCP4_CaptureISR
 11511  003732  006F FFEC  F00A    	movff	pclatu,??_CCP4_CaptureISR+1
 11512  003738                     
 11513                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 11514  003738  0139               	movlb	57	; () banked
 11515  00373A  91AA               	bcf	170,0,b	;volatile
 11516                           
 11517                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 11518  00373C  006F FDC0  F00B    	movff	16240,CCP4_CaptureISR@module	;volatile
 11519                           
 11520                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 11521  003742  006F FDC4  F00C    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 11522  003748                     
 11523                           ; BSR set to: 57
 11524                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 11525  003748  C00B  F007         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 11526  00374C  C00C  F008         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 11527  003750  D802               	call	i2u420_48
 11528  003752  EFB5  F01B         	goto	i2u420_49
 11529  003756                     i2u420_48:
 11530  003756  0005               	push	
 11531  003758  6EFA               	movwf	pclath,c
 11532  00375A  0100               	movlb	0	; () banked
 11533  00375C  51F1               	movf	_CCP4_CallBack& (0+255),w,b
 11534  00375E  6EFD               	movwf	tosl,c
 11535  003760  51F2               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 11536  003762  6EFE               	movwf	tosh,c
 11537  003764  6AFF               	clrf	tosu,c
 11538  003766  50FA               	movf	pclath,w,c
 11539  003768  0012               	return		;indir
 11540  00376A                     i2u420_49:
 11541  00376A  0060  F02B  FFFB   	movff	??_CCP4_CaptureISR+1,pclatu
 11542  003770  0060  F027  FFFA   	movff	??_CCP4_CaptureISR,pclath
 11543  003776  0011               	retfie		f
 11544  003778                     __end_of_CCP4_CaptureISR:
 11545                           	callstack 0
 11546                           
 11547 ;; *************** function _CCP4_DefaultCallBack *****************
 11548 ;; Defined at:
 11549 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;  capturedValu    2    6[COMRAM] unsigned short 
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;		None
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  1    wreg      void 
 11556 ;; Registers used:
 11557 ;;		wreg, status,2, status,0
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11567 ;;Total ram usage:        2 bytes
 11568 ;; Hardware stack levels used: 1
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_CCP4_Initialize
 11573 ;;		_CCP4_CaptureISR
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	text81
 11578  003B8A                     __ptext81:
 11579                           	callstack 0
 11580  003B8A                     _CCP4_DefaultCallBack:
 11581                           	callstack 13
 11582  003B8A                     
 11583                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 11584  003B8A  ACCD               	btfss	205,6,c	;volatile
 11585  003B8C  EFCA  F01D         	goto	i2u404_41
 11586  003B90  EFCC  F01D         	goto	i2u404_40
 11587  003B94                     i2u404_41:
 11588  003B94  EFD2  F01D         	goto	i2l5348
 11589  003B98                     i2u404_40:
 11590  003B98                     
 11591                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 11592  003B98  C007  F0E3         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 11593  003B9C  C008  F0E4         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 11594                           
 11595                           ;mcc_generated_files/ccp4.c: 70:     } else {
 11596  003BA0  EFDC  F01D         	goto	i2l476
 11597  003BA4                     i2l5348:
 11598                           
 11599                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 11600  003BA4  0100               	movlb	0	; () banked
 11601  003BA6  51E3               	movf	_distRightM& (0+255),w,b
 11602  003BA8  5C07               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 11603  003BAA  6E2C               	movwf	_distRight^0,c	;volatile
 11604  003BAC  51E4               	movf	(_distRightM+1)& (0+255),w,b
 11605  003BAE  5808               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 11606  003BB0  6E2D               	movwf	(_distRight+1)^0,c	;volatile
 11607  003BB2                     
 11608                           ; BSR set to: 0
 11609                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 11610  003BB2  90D8               	bcf	status,0,c
 11611  003BB4  322D               	rrcf	(_distRight+1)^0,f,c	;volatile
 11612  003BB6  322C               	rrcf	_distRight^0,f,c	;volatile
 11613  003BB8                     i2l476:
 11614  003BB8  0012               	return		;funcret
 11615  003BBA                     __end_of_CCP4_DefaultCallBack:
 11616                           	callstack 0
 11617                           
 11618 ;; *************** function _TMR5_GATE_ISR *****************
 11619 ;; Defined at:
 11620 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;		None
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;		None
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      void 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11638 ;;Total ram usage:        2 bytes
 11639 ;; Hardware stack levels used: 1
 11640 ;; Hardware stack levels required when called: 3
 11641 ;; This function calls:
 11642 ;;		Absolute function
 11643 ;;		_TMR5_DefaultGateInterruptHandler
 11644 ;; This function is called by:
 11645 ;;		Interrupt level 2
 11646 ;; This function uses a non-reentrant model
 11647 ;;
 11648                           
 11649                           	psect	text82
 11650  00380C                     __ptext82:
 11651                           	callstack 0
 11652  00380C                     _TMR5_GATE_ISR:
 11653                           	callstack 11
 11654                           
 11655                           ;incstack = 0
 11656  00380C  006F FFE8  F015    	movff	pclath,??_TMR5_GATE_ISR
 11657  003812  006F FFEC  F016    	movff	pclatu,??_TMR5_GATE_ISR+1
 11658  003818                     
 11659                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 11660  003818  0139               	movlb	57	; () banked
 11661  00381A  9FA8               	bcf	168,7,b	;volatile
 11662  00381C                     
 11663                           ; BSR set to: 57
 11664                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 11665  00381C  0100               	movlb	0	; () banked
 11666  00381E  51ED               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 11667  003820  11EE               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 11668  003822  B4D8               	btfsc	status,2,c
 11669  003824  EF16  F01C         	goto	i2u421_41
 11670  003828  EF18  F01C         	goto	i2u421_40
 11671  00382C                     i2u421_41:
 11672  00382C  EF24  F01C         	goto	i2l552
 11673  003830                     i2u421_40:
 11674  003830                     
 11675                           ; BSR set to: 0
 11676                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 11677  003830  D802               	call	i2u422_48
 11678  003832  EF24  F01C         	goto	i2u422_49
 11679  003836                     i2u422_48:
 11680  003836  0005               	push	
 11681  003838  6EFA               	movwf	pclath,c
 11682  00383A  51ED               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 11683  00383C  6EFD               	movwf	tosl,c
 11684  00383E  51EE               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 11685  003840  6EFE               	movwf	tosh,c
 11686  003842  6AFF               	clrf	tosu,c
 11687  003844  50FA               	movf	pclath,w,c
 11688  003846  0012               	return		;indir
 11689  003848                     i2u422_49:
 11690  003848                     i2l552:
 11691  003848  0060  F05B  FFFB   	movff	??_TMR5_GATE_ISR+1,pclatu
 11692  00384E  0060  F057  FFFA   	movff	??_TMR5_GATE_ISR,pclath
 11693  003854  0011               	retfie		f
 11694  003856                     __end_of_TMR5_GATE_ISR:
 11695                           	callstack 0
 11696                           
 11697 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 11698 ;; Defined at:
 11699 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 11700 ;; Parameters:    Size  Location     Type
 11701 ;;		None
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;		None
 11704 ;; Return value:  Size  Location     Type
 11705 ;;                  1    wreg      void 
 11706 ;; Registers used:
 11707 ;;		wreg, status,2, status,0, cstack
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11717 ;;Total ram usage:        0 bytes
 11718 ;; Hardware stack levels used: 1
 11719 ;; Hardware stack levels required when called: 2
 11720 ;; This function calls:
 11721 ;;		_TMR5_ReadTimer
 11722 ;;		_TMR5_Reload
 11723 ;; This function is called by:
 11724 ;;		_TMR5_Initialize
 11725 ;;		_TMR5_GATE_ISR
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729                           	psect	text83
 11730  003DD2                     __ptext83:
 11731                           	callstack 0
 11732  003DD2                     _TMR5_DefaultGateInterruptHandler:
 11733                           	callstack 11
 11734  003DD2                     
 11735                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 11736  003DD2  ECC7  F01E         	call	_TMR5_ReadTimer	;wreg free
 11737  003DD6  C00D  F0E7         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 11738  003DDA  C00E  F0E8         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 11739  003DDE                     
 11740                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 11741  003DDE  0100               	movlb	0	; () banked
 11742  003DE0  90D8               	bcf	status,0,c
 11743  003DE2  33E8               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 11744  003DE4  33E7               	rrcf	_distFront& (0+255),f,b	;volatile
 11745  003DE6                     
 11746                           ; BSR set to: 0
 11747                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 11748  003DE6  EC42  F01F         	call	_TMR5_Reload	;wreg free
 11749  003DEA                     
 11750                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 11751  003DEA  0139               	movlb	57	; () banked
 11752  003DEC  9FA8               	bcf	168,7,b	;volatile
 11753  003DEE                     
 11754                           ; BSR set to: 57
 11755  003DEE  0012               	return		;funcret
 11756  003DF0                     __end_of_TMR5_DefaultGateInterruptHandler:
 11757                           	callstack 0
 11758                           
 11759 ;; *************** function _TMR5_Reload *****************
 11760 ;; Defined at:
 11761 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;		None
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;		None
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  1    wreg      void 
 11768 ;; Registers used:
 11769 ;;		wreg, status,2, cstack
 11770 ;; Tracked objects:
 11771 ;;		On entry : 0/0
 11772 ;;		On exit  : 0/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;Total ram usage:        0 bytes
 11780 ;; Hardware stack levels used: 1
 11781 ;; Hardware stack levels required when called: 1
 11782 ;; This function calls:
 11783 ;;		_TMR5_WriteTimer
 11784 ;; This function is called by:
 11785 ;;		_TMR5_DefaultGateInterruptHandler
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text84
 11790  003E84                     __ptext84:
 11791                           	callstack 0
 11792  003E84                     _TMR5_Reload:
 11793                           	callstack 11
 11794  003E84                     
 11795                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 11796  003E84  C0EF  F00D         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 11797  003E88  C0F0  F00E         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 11798  003E8C  EC64  F01E         	call	_TMR5_WriteTimer	;wreg free
 11799  003E90  0012               	return		;funcret
 11800  003E92                     __end_of_TMR5_Reload:
 11801                           	callstack 0
 11802                           
 11803 ;; *************** function _TMR5_WriteTimer *****************
 11804 ;; Defined at:
 11805 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;  timerVal        2   12[COMRAM] unsigned short 
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;		None
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1    wreg      void 
 11812 ;; Registers used:
 11813 ;;		wreg, status,2
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11823 ;;Total ram usage:        2 bytes
 11824 ;; Hardware stack levels used: 1
 11825 ;; This function calls:
 11826 ;;		Nothing
 11827 ;; This function is called by:
 11828 ;;		_TMR5_Reload
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           	psect	text85
 11833  003CC8                     __ptext85:
 11834                           	callstack 0
 11835  003CC8                     _TMR5_WriteTimer:
 11836                           	callstack 11
 11837  003CC8                     
 11838                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 11839  003CC8  A49A               	btfss	154,2,c	;volatile
 11840  003CCA  EF69  F01E         	goto	i2u264_41
 11841  003CCE  EF6B  F01E         	goto	i2u264_40
 11842  003CD2                     i2u264_41:
 11843  003CD2  EF74  F01E         	goto	i2l4378
 11844  003CD6                     i2u264_40:
 11845  003CD6                     
 11846                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 11847  003CD6  909A               	bcf	154,0,c	;volatile
 11848  003CD8                     
 11849                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 11850  003CD8  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 11851  003CDA  6E99               	movwf	153,c	;volatile
 11852  003CDC                     
 11853                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 11854  003CDC  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 11855  003CE2                     
 11856                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 11857  003CE2  809A               	bsf	154,0,c	;volatile
 11858                           
 11859                           ;mcc_generated_files/tmr5.c: 146:     }
 11860  003CE4  EF79  F01E         	goto	i2l534
 11861  003CE8                     i2l4378:
 11862                           
 11863                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 11864  003CE8  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 11865  003CEA  6E99               	movwf	153,c	;volatile
 11866  003CEC                     
 11867                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 11868  003CEC  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 11869  003CF2                     i2l534:
 11870  003CF2  0012               	return		;funcret
 11871  003CF4                     __end_of_TMR5_WriteTimer:
 11872                           	callstack 0
 11873                           
 11874 ;; *************** function _TMR5_ReadTimer *****************
 11875 ;; Defined at:
 11876 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;		None
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;  readVal         2   16[COMRAM] unsigned short 
 11881 ;;  readValLow      1   19[COMRAM] unsigned char 
 11882 ;;  readValHigh     1   18[COMRAM] unsigned char 
 11883 ;; Return value:  Size  Location     Type
 11884 ;;                  2   12[COMRAM] unsigned short 
 11885 ;; Registers used:
 11886 ;;		wreg, status,2
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11893 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11895 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11896 ;;Total ram usage:        8 bytes
 11897 ;; Hardware stack levels used: 1
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_TMR5_DefaultGateInterruptHandler
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           	psect	text86
 11906  003D8E                     __ptext86:
 11907                           	callstack 0
 11908  003D8E                     _TMR5_ReadTimer:
 11909                           	callstack 12
 11910  003D8E                     
 11911                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 11912  003D8E  829A               	bsf	154,1,c	;volatile
 11913                           
 11914                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 11915  003D90  006F FE60  F014    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 11916                           
 11917                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 11918  003D96  006F FE64  F013    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 11919  003D9C                     
 11920                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 11921  003D9C  5013               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 11922  003D9E  6E0F               	movwf	??_TMR5_ReadTimer^0,c
 11923  003DA0  5014               	movf	TMR5_ReadTimer@readValLow^0,w,c
 11924  003DA2  6E11               	movwf	TMR5_ReadTimer@readVal^0,c
 11925  003DA4  C00F  F012         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 11926  003DA8                     
 11927                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 11928  003DA8  C011  F00D         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 11929  003DAC  C012  F00E         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 11930  003DB0  0012               	return		;funcret
 11931  003DB2                     __end_of_TMR5_ReadTimer:
 11932                           	callstack 0
 11933                           
 11934 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 11935 ;; Defined at:
 11936 ;;		line 192 in file "mcc_generated_files/smt1.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;		None
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;		None
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  1    wreg      void 
 11943 ;; Registers used:
 11944 ;;		wreg, status,2, status,0
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11954 ;;Total ram usage:        0 bytes
 11955 ;; Hardware stack levels used: 1
 11956 ;; This function calls:
 11957 ;;		Nothing
 11958 ;; This function is called by:
 11959 ;;		Interrupt level 2
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           	psect	text87
 11964  003858                     __ptext87:
 11965                           	callstack 0
 11966  003858                     _SMT1_PR_ACQ_ISR:
 11967                           	callstack 14
 11968  003858                     
 11969                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 11970  003858  0139               	movlb	57	; () banked
 11971  00385A  9DA1               	bcf	161,6,b	;volatile
 11972  00385C                     
 11973                           ; BSR set to: 57
 11974                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 11975  00385C  013F               	movlb	63	; () banked
 11976  00385E  5115               	movf	21,w,b	;volatile
 11977  003860  6E3C               	movwf	_smtPeriod^0,c	;volatile
 11978  003862  5116               	movf	22,w,b	;volatile
 11979  003864  6E3D               	movwf	(_smtPeriod+1)^0,c	;volatile
 11980  003866  5117               	movf	23,w,b	;volatile
 11981  003868  6E3E               	movwf	(_smtPeriod+2)^0,c	;volatile
 11982  00386A  6A3F               	clrf	(_smtPeriod+3)^0,c	;volatile
 11983  00386C                     
 11984                           ; BSR set to: 63
 11985                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 11986  00386C  013C               	movlb	60	; () banked
 11987  00386E  AB60               	btfss	96,5,b	;volatile
 11988  003870  EF3C  F01C         	goto	i2u424_41
 11989  003874  EF3E  F01C         	goto	i2u424_40
 11990  003878                     i2u424_41:
 11991  003878  EF47  F01C         	goto	i2l5468
 11992  00387C                     i2u424_40:
 11993  00387C                     
 11994                           ; BSR set to: 60
 11995  00387C  0E01               	movlw	1
 11996  00387E  0100               	movlb	0	; () banked
 11997  003880  27C7               	addwf	_smtWay& (0+255),f,b	;volatile
 11998  003882  0E00               	movlw	0
 11999  003884  23C8               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12000  003886  23C9               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12001  003888  23CA               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12002  00388A  EF50  F01C         	goto	i2l856
 12003  00388E                     i2l5468:
 12004                           
 12005                           ; BSR set to: 60
 12006  00388E  0EFF               	movlw	255
 12007  003890  0100               	movlb	0	; () banked
 12008  003892  27C7               	addwf	_smtWay& (0+255),f,b	;volatile
 12009  003894  0EFF               	movlw	255
 12010  003896  23C8               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12011  003898  0EFF               	movlw	255
 12012  00389A  23C9               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12013  00389C  0EFF               	movlw	255
 12014  00389E  23CA               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12015  0038A0                     i2l856:
 12016                           
 12017                           ; BSR set to: 0
 12018  0038A0  0011               	retfie		f
 12019  0038A2                     __end_of_SMT1_PR_ACQ_ISR:
 12020                           	callstack 0
 12021                           
 12022 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 12023 ;; Defined at:
 12024 ;;		line 203 in file "mcc_generated_files/smt1.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;Total ram usage:        0 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		Interrupt level 2
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text88
 12052  003548                     __ptext88:
 12053                           	callstack 0
 12054  003548                     _SMT1_PW_ACQ_ISR:
 12055                           	callstack 14
 12056  003548                     
 12057                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 12058  003548  0139               	movlb	57	; () banked
 12059  00354A  9FA1               	bcf	161,7,b	;volatile
 12060  00354C                     
 12061                           ; BSR set to: 57
 12062                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 12063  00354C  013F               	movlb	63	; () banked
 12064  00354E  5118               	movf	24,w,b	;volatile
 12065  003550  0100               	movlb	0	; () banked
 12066  003552  6FCB               	movwf	_smtDuty& (0+255),b	;volatile
 12067  003554  013F               	movlb	63	; () banked
 12068  003556  5119               	movf	25,w,b	;volatile
 12069  003558  0100               	movlb	0	; () banked
 12070  00355A  6FCC               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12071  00355C  013F               	movlb	63	; () banked
 12072  00355E  511A               	movf	26,w,b	;volatile
 12073  003560  0100               	movlb	0	; () banked
 12074  003562  6FCD               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12075  003564  6BCE               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 12076  003566                     
 12077                           ; BSR set to: 0
 12078                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 12079  003566  013C               	movlb	60	; () banked
 12080  003568  AB60               	btfss	96,5,b	;volatile
 12081  00356A  EFB9  F01A         	goto	i2u425_41
 12082  00356E  EFBB  F01A         	goto	i2u425_40
 12083  003572                     i2u425_41:
 12084  003572  EFC4  F01A         	goto	i2l5478
 12085  003576                     i2u425_40:
 12086  003576                     
 12087                           ; BSR set to: 60
 12088  003576  0E01               	movlw	1
 12089  003578  0100               	movlb	0	; () banked
 12090  00357A  27C7               	addwf	_smtWay& (0+255),f,b	;volatile
 12091  00357C  0E00               	movlw	0
 12092  00357E  23C8               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12093  003580  23C9               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12094  003582  23CA               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12095  003584  EFCD  F01A         	goto	i2l863
 12096  003588                     i2l5478:
 12097                           
 12098                           ; BSR set to: 60
 12099  003588  0EFF               	movlw	255
 12100  00358A  0100               	movlb	0	; () banked
 12101  00358C  27C7               	addwf	_smtWay& (0+255),f,b	;volatile
 12102  00358E  0EFF               	movlw	255
 12103  003590  23C8               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12104  003592  0EFF               	movlw	255
 12105  003594  23C9               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12106  003596  0EFF               	movlw	255
 12107  003598  23CA               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12108  00359A                     i2l863:
 12109                           
 12110                           ; BSR set to: 0
 12111  00359A  0011               	retfie		f
 12112  00359C                     __end_of_SMT1_PW_ACQ_ISR:
 12113                           	callstack 0
 12114                           
 12115 ;; *************** function _SMT1_Overflow_ISR *****************
 12116 ;; Defined at:
 12117 ;;		line 213 in file "mcc_generated_files/smt1.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;		None
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;		None
 12122 ;; Return value:  Size  Location     Type
 12123 ;;                  1    wreg      void 
 12124 ;; Registers used:
 12125 ;;		wreg, status,2
 12126 ;; Tracked objects:
 12127 ;;		On entry : 0/0
 12128 ;;		On exit  : 0/0
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;Total ram usage:        0 bytes
 12136 ;; Hardware stack levels used: 1
 12137 ;; This function calls:
 12138 ;;		Nothing
 12139 ;; This function is called by:
 12140 ;;		Interrupt level 2
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text89
 12145  003D1C                     __ptext89:
 12146                           	callstack 0
 12147  003D1C                     _SMT1_Overflow_ISR:
 12148                           	callstack 14
 12149  003D1C                     
 12150                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 12151  003D1C  0139               	movlb	57	; () banked
 12152  003D1E  9BA1               	bcf	161,5,b	;volatile
 12153  003D20                     
 12154                           ; BSR set to: 57
 12155                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 12156  003D20  0E00               	movlw	0
 12157  003D22  6E3C               	movwf	_smtPeriod^0,c	;volatile
 12158  003D24  0E00               	movlw	0
 12159  003D26  6E3D               	movwf	(_smtPeriod+1)^0,c	;volatile
 12160  003D28  0E00               	movlw	0
 12161  003D2A  6E3E               	movwf	(_smtPeriod+2)^0,c	;volatile
 12162  003D2C  0E00               	movlw	0
 12163  003D2E  6E3F               	movwf	(_smtPeriod+3)^0,c	;volatile
 12164                           
 12165                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 12166  003D30  0E00               	movlw	0
 12167  003D32  0100               	movlb	0	; () banked
 12168  003D34  6FCB               	movwf	_smtDuty& (0+255),b	;volatile
 12169  003D36  0E00               	movlw	0
 12170  003D38  6FCC               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12171  003D3A  0E00               	movlw	0
 12172  003D3C  6FCD               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12173  003D3E  0E00               	movlw	0
 12174  003D40  6FCE               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 12175  003D42                     
 12176                           ; BSR set to: 0
 12177  003D42  0011               	retfie		f
 12178  003D44                     __end_of_SMT1_Overflow_ISR:
 12179                           	callstack 0
 12180                           
 12181                           ;
 12182                           ; Interrupt Vector Table @ 0x8
 12183                           ;
 12184                           
 12185                           	psect	ivt0x8
 12186  000008                     __pivt0x8:
 12187                           	callstack 0
 12188  000008                     ivt0x8_base:
 12189                           	callstack 0
 12190                           
 12191                           ; Vector 0 : SWINT
 12192  000008  0FC2               	dw	_Default_ISR shr (0+2)
 12193                           
 12194                           ; Vector 1 : HLVD
 12195  00000A  0FC2               	dw	_Default_ISR shr (0+2)
 12196                           
 12197                           ; Vector 2 : OSF
 12198  00000C  0FC2               	dw	_Default_ISR shr (0+2)
 12199                           
 12200                           ; Vector 3 : CSW
 12201  00000E  0FC2               	dw	_Default_ISR shr (0+2)
 12202                           
 12203                           ; Vector 4 : NVM
 12204  000010  0FC2               	dw	_Default_ISR shr (0+2)
 12205                           
 12206                           ; Vector 5 : SCAN
 12207  000012  0FC2               	dw	_Default_ISR shr (0+2)
 12208                           
 12209                           ; Vector 6 : CRC
 12210  000014  0FC2               	dw	_Default_ISR shr (0+2)
 12211                           
 12212                           ; Vector 7 : IOC
 12213  000016  0FC2               	dw	_Default_ISR shr (0+2)
 12214                           
 12215                           ; Vector 8 : INT0
 12216  000018  0FC2               	dw	_Default_ISR shr (0+2)
 12217                           
 12218                           ; Vector 9 : ZCD
 12219  00001A  0FC2               	dw	_Default_ISR shr (0+2)
 12220                           
 12221                           ; Vector 10 : AD
 12222  00001C  0FC2               	dw	_Default_ISR shr (0+2)
 12223                           
 12224                           ; Vector 11 : ADT
 12225  00001E  0FC2               	dw	_Default_ISR shr (0+2)
 12226                           
 12227                           ; Vector 12 : CMP1
 12228  000020  0FC2               	dw	_Default_ISR shr (0+2)
 12229                           
 12230                           ; Vector 13 : SMT1
 12231  000022  0F47               	dw	_SMT1_Overflow_ISR shr (0+2)
 12232                           
 12233                           ; Vector 14 : SMT1PRA
 12234  000024  0E16               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 12235                           
 12236                           ; Vector 15 : SMT1PRW
 12237  000026  0D52               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 12238                           
 12239                           ; Vector 16 : DMA1SCNT
 12240  000028  0FC2               	dw	_Default_ISR shr (0+2)
 12241                           
 12242                           ; Vector 17 : DMA1DCNT
 12243  00002A  0FC2               	dw	_Default_ISR shr (0+2)
 12244                           
 12245                           ; Vector 18 : DMA1OR
 12246  00002C  0FC2               	dw	_Default_ISR shr (0+2)
 12247                           
 12248                           ; Vector 19 : DMA1A
 12249  00002E  0FC2               	dw	_Default_ISR shr (0+2)
 12250                           
 12251                           ; Vector 20 : SPI1RX
 12252  000030  0FC2               	dw	_Default_ISR shr (0+2)
 12253                           
 12254                           ; Vector 21 : SPI1TX
 12255  000032  0FC2               	dw	_Default_ISR shr (0+2)
 12256                           
 12257                           ; Vector 22 : SPI1
 12258  000034  0FC2               	dw	_Default_ISR shr (0+2)
 12259                           
 12260                           ; Vector 23 : I2C1RX
 12261  000036  0FC2               	dw	_Default_ISR shr (0+2)
 12262                           
 12263                           ; Vector 24 : I2C1TX
 12264  000038  0FC2               	dw	_Default_ISR shr (0+2)
 12265                           
 12266                           ; Vector 25 : I2C1
 12267  00003A  0FC2               	dw	_Default_ISR shr (0+2)
 12268                           
 12269                           ; Vector 26 : I2C1E
 12270  00003C  0FC2               	dw	_Default_ISR shr (0+2)
 12271                           
 12272                           ; Vector 27 : U1RX
 12273  00003E  0D7C               	dw	_UART1_rx_vect_isr shr (0+2)
 12274                           
 12275                           ; Vector 28 : U1TX
 12276  000040  0D67               	dw	_UART1_tx_vect_isr shr (0+2)
 12277                           
 12278                           ; Vector 29 : U1E
 12279  000042  0FC2               	dw	_Default_ISR shr (0+2)
 12280                           
 12281                           ; Vector 30 : U1
 12282  000044  0FC2               	dw	_Default_ISR shr (0+2)
 12283                           
 12284                           ; Vector 31 : TMR0
 12285  000046  0FC2               	dw	_Default_ISR shr (0+2)
 12286                           
 12287                           ; Vector 32 : TMR1
 12288  000048  0FC2               	dw	_Default_ISR shr (0+2)
 12289                           
 12290                           ; Vector 33 : TMR1G
 12291  00004A  0FC2               	dw	_Default_ISR shr (0+2)
 12292                           
 12293                           ; Vector 34 : TMR2
 12294  00004C  0FC2               	dw	_Default_ISR shr (0+2)
 12295                           
 12296                           ; Vector 35 : CCP1
 12297  00004E  0FC2               	dw	_Default_ISR shr (0+2)
 12298                           
 12299                           ; Vector 36 : Undefined
 12300  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 12301                           
 12302                           ; Vector 37 : NCO1
 12303  000052  0FC2               	dw	_Default_ISR shr (0+2)
 12304                           
 12305                           ; Vector 38 : CWG1
 12306  000054  0FC2               	dw	_Default_ISR shr (0+2)
 12307                           
 12308                           ; Vector 39 : CLC1
 12309  000056  0FC2               	dw	_Default_ISR shr (0+2)
 12310                           
 12311                           ; Vector 40 : INT1
 12312  000058  0FC2               	dw	_Default_ISR shr (0+2)
 12313                           
 12314                           ; Vector 41 : CMP2
 12315  00005A  0FC2               	dw	_Default_ISR shr (0+2)
 12316                           
 12317                           ; Vector 42 : DMA2SCNT
 12318  00005C  0FC2               	dw	_Default_ISR shr (0+2)
 12319                           
 12320                           ; Vector 43 : DMA2DCNT
 12321  00005E  0FC2               	dw	_Default_ISR shr (0+2)
 12322                           
 12323                           ; Vector 44 : DMA2OR
 12324  000060  0FC2               	dw	_Default_ISR shr (0+2)
 12325                           
 12326                           ; Vector 45 : DMA2A
 12327  000062  0FC2               	dw	_Default_ISR shr (0+2)
 12328                           
 12329                           ; Vector 46 : I2C2RX
 12330  000064  0FC2               	dw	_Default_ISR shr (0+2)
 12331                           
 12332                           ; Vector 47 : I2C2TX
 12333  000066  0FC2               	dw	_Default_ISR shr (0+2)
 12334                           
 12335                           ; Vector 48 : I2C2
 12336  000068  0FC2               	dw	_Default_ISR shr (0+2)
 12337                           
 12338                           ; Vector 49 : I2C2E
 12339  00006A  0FC2               	dw	_Default_ISR shr (0+2)
 12340                           
 12341                           ; Vector 50 : U2RX
 12342  00006C  0FC2               	dw	_Default_ISR shr (0+2)
 12343                           
 12344                           ; Vector 51 : U2TX
 12345  00006E  0FC2               	dw	_Default_ISR shr (0+2)
 12346                           
 12347                           ; Vector 52 : U2E
 12348  000070  0FC2               	dw	_Default_ISR shr (0+2)
 12349                           
 12350                           ; Vector 53 : U2
 12351  000072  0FC2               	dw	_Default_ISR shr (0+2)
 12352                           
 12353                           ; Vector 54 : TMR3
 12354  000074  0FC2               	dw	_Default_ISR shr (0+2)
 12355                           
 12356                           ; Vector 55 : TMR3G
 12357  000076  0FC2               	dw	_Default_ISR shr (0+2)
 12358                           
 12359                           ; Vector 56 : TMR4
 12360  000078  0D91               	dw	_TMR4_ISR shr (0+2)
 12361                           
 12362                           ; Vector 57 : CCP2
 12363  00007A  0FC2               	dw	_Default_ISR shr (0+2)
 12364                           
 12365                           ; Vector 58 : Undefined
 12366  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 12367                           
 12368                           ; Vector 59 : CWG2
 12369  00007E  0FC2               	dw	_Default_ISR shr (0+2)
 12370                           
 12371                           ; Vector 60 : CLC2
 12372  000080  0FC2               	dw	_Default_ISR shr (0+2)
 12373                           
 12374                           ; Vector 61 : INT2
 12375  000082  0FC2               	dw	_Default_ISR shr (0+2)
 12376                           
 12377                           ; Vector 62 : Undefined
 12378  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 12379                           
 12380                           ; Vector 63 : Undefined
 12381  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 12382                           
 12383                           ; Vector 64 : Undefined
 12384  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 12385                           
 12386                           ; Vector 65 : Undefined
 12387  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 12388                           
 12389                           ; Vector 66 : Undefined
 12390  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 12391                           
 12392                           ; Vector 67 : Undefined
 12393  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 12394                           
 12395                           ; Vector 68 : Undefined
 12396  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 12397                           
 12398                           ; Vector 69 : Undefined
 12399  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 12400                           
 12401                           ; Vector 70 : TMR5
 12402  000094  0FC2               	dw	_Default_ISR shr (0+2)
 12403                           
 12404                           ; Vector 71 : TMR5G
 12405  000096  0E03               	dw	_TMR5_GATE_ISR shr (0+2)
 12406                           
 12407                           ; Vector 72 : TMR6
 12408  000098  0FC2               	dw	_Default_ISR shr (0+2)
 12409                           
 12410                           ; Vector 73 : CCP3
 12411  00009A  0DB8               	dw	_CCP3_CaptureISR shr (0+2)
 12412                           
 12413                           ; Vector 74 : CWG3
 12414  00009C  0FC2               	dw	_Default_ISR shr (0+2)
 12415                           
 12416                           ; Vector 75 : CLC3
 12417  00009E  0FC2               	dw	_Default_ISR shr (0+2)
 12418                           
 12419                           ; Vector 76 : Undefined
 12420  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 12421                           
 12422                           ; Vector 77 : Undefined
 12423  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 12424                           
 12425                           ; Vector 78 : Undefined
 12426  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 12427                           
 12428                           ; Vector 79 : Undefined
 12429  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 12430                           
 12431                           ; Vector 80 : CCP4
 12432  0000A8  0DCB               	dw	_CCP4_CaptureISR shr (0+2)
 12433                           
 12434                           ; Vector 81 : CLC4
 12435  0000AA  0FC2               	dw	_Default_ISR shr (0+2)
 12436  0000AC                     ivt0x8_undefint:
 12437                           	callstack 0
 12438  0000AC  00FF               	reset	
 12439                           
 12440                           	psect	text90
 12441  000000                     __ptext90:
 12442                           	callstack 0
 12443  000000                     
 12444                           	psect	rparam
 12445  0000                     
 12446                           	psect	config
 12447                           
 12448                           ;Config register CONFIG1L @ 0x300000
 12449                           ;	External Oscillator Selection
 12450                           ;	FEXTOSC = OFF, Oscillator not enabled
 12451                           ;	Reset Oscillator Selection
 12452                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 12453  300000                     	org	3145728
 12454  300000  8C                 	db	140
 12455                           
 12456                           ;Config register CONFIG1H @ 0x300001
 12457                           ;	Clock out Enable bit
 12458                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12459                           ;	PRLOCKED One-Way Set Enable bit
 12460                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 12461                           ;	Clock Switch Enable bit
 12462                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12463                           ;	Fail-Safe Clock Monitor Enable bit
 12464                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12465  300001                     	org	3145729
 12466  300001  FF                 	db	255
 12467                           
 12468                           ;Config register CONFIG2L @ 0x300002
 12469                           ;	MCLR Enable bit
 12470                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 12471                           ;	Power-up timer selection bits
 12472                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 12473                           ;	Multi-vector enable bit
 12474                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 12475                           ;	IVTLOCK bit One-way set enable bit
 12476                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 12477                           ;	Low Power BOR Enable bit
 12478                           ;	LPBOREN = OFF, ULPBOR disabled
 12479                           ;	Brown-out Reset Enable bits
 12480                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12481  300002                     	org	3145730
 12482  300002  FF                 	db	255
 12483                           
 12484                           ;Config register CONFIG2H @ 0x300003
 12485                           ;	Brown-out Reset Voltage Selection bits
 12486                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 12487                           ;	ZCD Disable bit
 12488                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12489                           ;	PPSLOCK bit One-Way Set Enable bit
 12490                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12491                           ;	Stack Full/Underflow Reset Enable bit
 12492                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12493                           ;	Debugger Enable bit
 12494                           ;	DEBUG = OFF, Background debugger disabled
 12495                           ;	Extended Instruction Set Enable bit
 12496                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12497  300003                     	org	3145731
 12498  300003  FF                 	db	255
 12499                           
 12500                           ;Config register CONFIG3L @ 0x300004
 12501                           ;	WDT Period selection bits
 12502                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12503                           ;	WDT operating mode
 12504                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 12505  300004                     	org	3145732
 12506  300004  9F                 	db	159
 12507                           
 12508                           ;Config register CONFIG3H @ 0x300005
 12509                           ;	WDT Window Select bits
 12510                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12511                           ;	WDT input clock selector
 12512                           ;	WDTCCS = SC, Software Control
 12513  300005                     	org	3145733
 12514  300005  FF                 	db	255
 12515                           
 12516                           ;Config register CONFIG4L @ 0x300006
 12517                           ;	Boot Block Size selection bits
 12518                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 12519                           ;	Boot Block enable bit
 12520                           ;	BBEN = OFF, Boot block disabled
 12521                           ;	Storage Area Flash enable bit
 12522                           ;	SAFEN = OFF, SAF disabled
 12523                           ;	Application Block write protection bit
 12524                           ;	WRTAPP = OFF, Application Block not write protected
 12525  300006                     	org	3145734
 12526  300006  FF                 	db	255
 12527                           
 12528                           ;Config register CONFIG4H @ 0x300007
 12529                           ;	Configuration Register Write Protection bit
 12530                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 12531                           ;	Boot Block Write Protection bit
 12532                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 12533                           ;	Data EEPROM Write Protection bit
 12534                           ;	WRTD = OFF, Data EEPROM not write-protected
 12535                           ;	SAF Write protection bit
 12536                           ;	WRTSAF = OFF, SAF not Write Protected
 12537                           ;	Low Voltage Programming Enable bit
 12538                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12539  300007                     	org	3145735
 12540  300007  FF                 	db	255
 12541                           
 12542                           ;Config register CONFIG5L @ 0x300008
 12543                           ;	PFM and Data EEPROM Code Protection bit
 12544                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 12545  300008                     	org	3145736
 12546  300008  FF                 	db	255
 12547                           
 12548                           ;Config register CONFIG5H @ 0x300009
 12549                           ;	unspecified, using default values
 12550  300009                     	org	3145737
 12551  300009  FF                 	db	255
 12552                           tosu	equ	0x3FFF
 12553                           tosh	equ	0x3FFE
 12554                           tosl	equ	0x3FFD
 12555                           stkptr	equ	0x3FFC
 12556                           pclatu	equ	0x3FFB
 12557                           pclath	equ	0x3FFA
 12558                           pcl	equ	0x3FF9
 12559                           tblptru	equ	0x3FF8
 12560                           tblptrh	equ	0x3FF7
 12561                           tblptrl	equ	0x3FF6
 12562                           tablat	equ	0x3FF5
 12563                           prodh	equ	0x3FF4
 12564                           prodl	equ	0x3FF3
 12565                           indf0	equ	0x3FEF
 12566                           postinc0	equ	0x3FEE
 12567                           postdec0	equ	0x3FED
 12568                           preinc0	equ	0x3FEC
 12569                           plusw0	equ	0x3FEB
 12570                           fsr0h	equ	0x3FEA
 12571                           fsr0l	equ	0x3FE9
 12572                           wreg	equ	0x3FE8
 12573                           indf1	equ	0x3FE7
 12574                           postinc1	equ	0x3FE6
 12575                           postdec1	equ	0x3FE5
 12576                           preinc1	equ	0x3FE4
 12577                           plusw1	equ	0x3FE3
 12578                           fsr1h	equ	0x3FE2
 12579                           fsr1l	equ	0x3FE1
 12580                           bsr	equ	0x3FE0
 12581                           indf2	equ	0x3FDF
 12582                           postinc2	equ	0x3FDE
 12583                           postdec2	equ	0x3FDD
 12584                           preinc2	equ	0x3FDC
 12585                           plusw2	equ	0x3FDB
 12586                           fsr2h	equ	0x3FDA
 12587                           fsr2l	equ	0x3FD9
 12588                           status	equ	0x3FD8

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         120
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      64
    BANK0           160     79     159
    BANK1           256     12      44
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3426$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3426$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_TMR4_SetInterruptHandler
    _loop->_getCurve
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _pad->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _setSteering->_PWM5_LoadDutyValue
    _setSteering->_PWM6_LoadDutyValue
    _calcSpeed->___fltol
    _calcMotorPow->___fltol
    _calcMotorPow->_actSpeed
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _SYSTEM_Initialize->_TMR3_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _startAccell->_setSteering
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___flge->___xxtofl
    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_printf
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   54526
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   53379
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          0     0      0    4464
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     130
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   12225
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0    7335
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    7304
                                              6 BANK1      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7043
                                             77 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6    6573
                                             59 BANK0     18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4829
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (10) _UART1_Write                                         1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             31 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     626
                                             14 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    3623
                                             17 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3428
                                              8 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    7444
                                             63 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             39 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    5964
                                             63 BANK0      7     7      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1036
                                              2 BANK0      4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     845
                                             31 COMRAM     2     0      2
                                             14 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             31 COMRAM     2     2      0
                                             55 BANK0      8     4      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   3     3      0       0
                                             22 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            3     3      0       0
                                             28 COMRAM     3     3      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     4     4      0     144
                                              2 COMRAM     4     4      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     4     4      0     144
                                              8 COMRAM     4     4      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       2     2      0     233
                                             20 COMRAM     2     2      0
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         _printf
           _vfprintf
             _vfpfcnvrt
               _fputc
                 _putch
                   _UART1_Write
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                   _fputs
                     _fputc
                   _strlen
       _setSteering
     _getBatteryVoltage
     _getCurve
     _getReverse
     _printf
     _setSteering
     _startAccell
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      86        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     181      0       0      84        0.0%
BITBIGSFRhhhhll    17E      0       0      54        0.0%
BITBIGSFRhhhhll    17A      0       0      55        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C      2C       7       17.2%
BITBIGSFRhhhhll     E3      0       0      51        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      40       1       67.4%
BITBIGSFRhhhhll     44      0       0      60        0.0%
BITBIGSFRhhhhll     3A      0       0      48        0.0%
BITBIGSFRhhhhll     34      0       0      68        0.0%
BITBIGSFRhhhhhh     28      0       0      36        0.0%
BITBIGSFRhhhhll     20      0       0      43        0.0%
BITBIGSFRhhhhll     20      0       0      71        0.0%
BITBIGSFRllhh       15      0       0      75        0.0%
BITBIGSFRhhhhll     12      0       0      49        0.0%
BITBIGSFRlh         11      0       0      74        0.0%
BITBIGSFRhhhhll      B      0       0      67        0.0%
BITBIGSFRhhhhll      A      0       0      42        0.0%
BITBIGSFRhhhhll      8      0       0      56        0.0%
BITBIGSFRllhlhl      6      0       0      78        0.0%
BITBIGSFRlllhhl      6      0       0      81        0.0%
BITBIGSFRhhhhll      6      0       0      58        0.0%
BITBIGSFRhhhhll      6      0       0      69        0.0%
BITBIGSFRhhhhll      5      0       0      59        0.0%
BITBIGSFRhhhhll      5      0       0      66        0.0%
BITBIGSFRhhhhll      5      0       0      64        0.0%
BITBIGSFRhhhhll      5      0       0      62        0.0%
BITBIGSFRhhhhhh      4      0       0      38        0.0%
BITBIGSFRhhhhll      4      0       0      61        0.0%
BITBIGSFRhhhhll      4      0       0      63        0.0%
BITBIGSFRhhhhll      4      0       0      65        0.0%
BITBIGSFRhhhhhh      4      0       0      40        0.0%
BITBIGSFRlllhll      3      0       0      82        0.0%
BITBIGSFRllhll       3      0       0      79        0.0%
BITBIGSFRhhhhhl      3      0       0      41        0.0%
BITBIGSFRllhlhl      2      0       0      77        0.0%
BITBIGSFRhhhhhh      1      0       0      39        0.0%
BITBIGSFRhhhhll      1      0       0      50        0.0%
BITBIGSFRllhlhl      1      0       0      76        0.0%
BITBIGSFRlllhhh      1      0       0      80        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      47        0.0%
BITBIGSFRhhhhll      1      0       0      46        0.0%
BITBIGSFRllllh       1      0       0      83        0.0%
BITBIGSFRhhhhhh      1      0       0      37        0.0%
BITBIGSFRhhhhll      1      0       0      53        0.0%
BITBIGSFRhhhhll      1      0       0      52        0.0%
BITBIGSFRhhhhll      1      0       0      57        0.0%
BITBIGSFRhhhhll      1      0       0      70        0.0%
BITBIGSFRhhl         1      0       0      72        0.0%
BITBIGSFRhl          1      0       0      73        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      85        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jan 25 22:56:06 2024

                             _CCP4_Initialize 3BBA                        ??_CCP3_DefaultCallBack 0003  
                                 _startAccell 396C                                            l72 3E82  
                                          l75 3D8C                                            l69 37C0  
                                ___awdiv@sign 0065                             ??_TMR5_WriteTimer 000F  
                                         l312 34EA                                           l404 36DE  
                                         l308 34A2                                           l309 34BC  
                                         l318 3E9A                                           l520 380A  
                                         l441 3C14                                           l362 3EB8  
                                         l371 3EA4                                           l188 2ECC  
                                         l284 326E                                           l365 3ECC  
                                         l359 3EC2                                           l368 3EAE  
                                         l712 3B28                                           l449 3EF4  
                                         l482 3BE6                                           l723 3E22  
                                         l555 3ED6                                           l644 3C6E  
                                         l740 3ABC                                           l709 3E3A  
                                         l581 3A1A                                           l726 3AF2  
                                         l479 3EEA                                           l751 3E52  
                                         l737 3E6A                                           l754 3A86  
                                         l923 3E0A                                           l695 3EE0  
                                         l795 3B58                                           l893 3C9A  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _pad 2ECE  
                             _TMR2_Initialize 3DF0                CCP4_SetCallBack@customCallBack 0020  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 3EE2                                  ___flmul@aexp 007B  
                                ___flmul@bexp 0080                            _UART1_Transmit_ISR 38EA  
                                ___flmul@sign 007A                                  ___flmul@temp 0085  
                                ___flmul@prod 0081                       __end_of_CCP4_CaptureISR 3778  
                                ___fltol@exp1 0021                                          l2001 192E  
                                        l1042 3546                                          l2004 17C0  
                                        l2014 18F0                                          l2006 1838  
                                        l1310 2504                                          l1054 3940  
                                        l2007 1826                                          l2111 1F54  
                                        l1224 25DC                                          l2041 210C  
                                        l1305 247A                                          l1057 396A  
                                        l1241 270C                                          l1250 3308  
                                        l1330 19E6                                          l2130 33A0  
                                        l2106 1D72                                          l2052 20A4  
                                        l1324 25DA                                          l2045 2048  
                                        l2117 3486                                          l2061 3D1A  
                                        l1253 3D68                                          l3030 36BE  
                                        l3022 3694                                          l3110 3B50  
                                        l3102 3B2A                                          l2038 1FB0  
                                        l2118 348E                                          l3040 36D2  
                                        l3032 36C0                                          l3024 3696  
                                        l3112 3B52                                          l3104 3B48  
                                        l3120 3DFC                                          l2144 39E2  
                                        l1272 22AC                                          l1264 39A6  
                                        l1345 1B6C                                          l3050 36DC  
                                        l3042 36D4                                          l3034 36CA  
                                        l3026 369E                                          l3114 3B54  
                                        l3106 3B4A                                          l3122 3E02  
                                        l1354 283C                                          l1370 2304  
                                        l2138 38E8                                          l1258 3426  
                                        l1363 2D30                                          l1371 232C  
                                        l2091 2F94                               _timer3ReloadVal 00EB  
                                        l3044 36D6                                          l3036 36CE  
                                        l3028 36A8                                          l3060 2E2E  
                                        l3052 3D6A                                          l3124 3E3C  
                                        l3116 3E0C                                          l3108 3B4C  
                                        l1380 2466                                          l3046 36D8  
                                        l3038 36D0                                          l3070 2E88  
                                        l3062 2E7C                                          l3054 2E04  
                                        l3118 3DF0                                          l1462 294A  
                                        l1614 305A                                          l2086 2F14  
                                        l1367 22CC                                          l3136 3C70  
                                        l3048 36DA                                          l3072 2E8A  
                                        l3064 2E7E                                          l3056 2E24  
                                        l5000 3242                                          l2096 1BA6  
                                        l1288 22BC                                          l1369 22F0  
                                        l2089 2F58                                          l3090 34EC  
                                        l3074 2E8C                                          l3066 2E80  
                                        l3058 2E26                                          l3146 3E54  
                                        l3162 3E24                                          l5002 326A  
                                        l2098 1BAE                                          l1299 31CA  
                                        l3076 2E8E                                          l3068 2E82  
                                        l5100 311C                                          l1653 2B58  
                                        l1821 2C2A                                          l3078 3E6C  
                                        l5110 315C                                          l5102 3134  
                                        l1911 120E                                          l1831 2DE2  
                                        l1680 2A52                                          l1920 14DE  
                                        l1912 11FC                                          l6000 1076  
                                        l1648 2B12                                          l5120 31A6  
                                        l5112 316E                                          l5104 3136  
                                        l1913 11C2                                          l6010 10A6  
                                        l6002 1086                                          l5122 31C2  
                                        l5114 3184                                          l5106 3146  
                                        l6100 127C                                          l6020 10E6  
                                        l6012 10B4                                          l6004 108C  
                                        l1828 2C4A                                          l5116 318C  
                                        l5108 314A                                          l4350 3EC4  
                                        l4342 3EA6                                          l6110 12C2  
                                        l6102 128A                                          l6030 1120  
                                        l6022 10E8                                          l6014 10B6  
                                        l6006 109E                                          l1838 2E02  
                                        l5118 3190                                          l4344 3E9C  
                                        l6200 1534                                          l6120 133E  
                                        l1928 1328                                          l6112 12F6  
                                        l6104 128C                                          l6040 1134  
                                        l6032 1124                                          l6016 10C6  
                                        l6024 10F0                                          l6008 10A0  
                                        l1937 13F8                                          l4362 3EEC  
                                        l4346 3EBA                                          l6210 1560  
                                        l6202 1544                                          l1938 13E6  
                                        l6130 137A                                          l6122 134E  
                                        l6114 12F8                                          l6106 1296  
                                        l6050 1148                                          l6042 1138  
                                        l6034 1128                                          l6026 1100  
                                        l6018 10D6                                          l4364 3EE2  
                                        l4348 3EB0                                          l6300 18D8  
                                        l6220 15B6                                          l6212 1570  
                                        l6204 154A                                          l6140 13A6  
                                        l6132 137C                                          l6116 1308  
                                        l6108 129C                                          l6060 115C  
                                        l6052 114C                                          l6044 113C  
                                        l6036 112C                                          l6028 1112  
                                        l4382 3ED8                                          l4366 3ECE  
                                        l6302 18F4                                          l6310 191A  
                                        l6230 15F4                                          l6222 15C6  
                                        l6214 1580                                          l6206 1550  
                                        l6150 13DE                                          l6134 138A  
                                        l6126 1362                                          l6142 13A8  
                                        l6118 1318                                          l6070 11BA  
                                        l6054 1150                                          l6046 1140  
                                        l6038 1130                                          l6062 1160  
                                        ?_pad 0070                                          l6312 191E  
                                        l6304 1904                                          l6240 164E  
                                        l6232 160E                                          l6216 1590  
                                        l6208 155E                                          l6160 145C  
                                        l6136 1392                                          l6128 136C  
                                        l6144 13B6                                          l6080 11F0  
                                        l6072 11D0                                          l6064 1164  
                                        l6056 1154                                          l6048 1144  
                                        l6320 2A94                                          l5600 34D0  
                                        l6400 3974                                          l6306 1912  
                                        l6250 169C                                          l6242 165C  
                                        l6234 161A                                          l6226 15DA  
                                        l6218 1596                                          l6170 14A2  
                                        l6154 1408                                          l6162 145E  
                                        l6146 13BA                                          l6138 1396  
                                        l6090 1240                                          l6082 11FA  
                                        l6074 11DC                                          l6066 118E  
                                        l6058 1158                                          l6330 2B00  
                                        l6322 2AC2                                          l5602 34D2  
                                        l5610 3E94                                          l6410 33B4  
                                        l6402 3980                                          l6308 1914  
                                        l6260 171A                                          l6252 16BA  
                                        l6244 166C                                          l6236 1636  
                                        l6228 15EA                                          l4820 2964  
                                        l6340 1F6C                                          l6180 14CC  
                                        l6172 14B0                                          l6164 146E  
                                        l6156 1414                                          l6148 13C8  
                                        l6092 1250                                          l6084 121C  
                                        l6076 11E0                                          l6068 11AA  
                                        l6500 2530                                          l6332 2B50  
                                        l6324 2AD2                                          l6316 2A54  
                                        l5604 34E2                                          l5620 3358  
                                        l5612 330A                                          l5700 2F7A  
                                        l6420 341E                                          l6412 33B8  
                                        l6404 3996                                          l1997 15A6  
                                        l4910 3BF8                                          l6270 17B0  
                                        l6262 1744                                          l6254 16CA  
                                        l6246 167C                                          l6238 1642  
                                        l6190 14FC                                          l4830 29B4  
                                        l6350 1FEA                                          l6342 1F7A  
                                        l6182 14CE                                          l6174 14B6  
                                        l6166 147E                                          l6158 1422  
                                        l6094 125E                                          l6086 122C  
                                        l6078 11EE                                          l6510 256A  
                                        l6334 2B56                                          l6326 2AE0  
                                        l6318 2A84                                          l5606 34E6  
                                        l5622 338E                                          l5614 331E  
                                        l5630 38C2                                          l5710 1B9A  
                                        l6414 33BC                                          l6406 33A2  
                                        l6430 2112                                          l4912 3C04  
                                        l4920 3C58                                          l6280 17F0  
                                        l6272 17BE                                          l6264 177A  
                                        l6256 16EA                                          l6248 168C  
                                        l6192 14FE                                          l4840 29DE  
                                        l4832 29B8                                          l4824 2978  
                                        l6360 203E                                          l6352 1FF2  
                                        l6344 1FC0                                          l6600 27AC  
                                        l6176 14B8                                          l6168 149E  
                                        l6096 126C                                          l6512 257C  
                                        l6504 2544                                          l6328 2AF2  
                                        l5800 393C                                          l5608 34E8  
                                        l5616 3330                                          l5632 38C8  
                                        l5640 39D4                                          l5720 1C66  
                                        l5712 1BD6                                          l5704 1B6E  
                                        l6416 3406                                          l6424 3424  
                                        l6408 33A4                                          l6440 21A6  
                                        l6432 2148                                          l4914 3C0E  
                                        l4930 3BCA                                          l4922 3C5C  
                                        l6290 1862                                          l6282 181E  
                                        l6274 17D0                                          l6266 1788  
                                        l6258 16FA                                          l6194 150E  
                                        l6186 14E0                                          l4850 2A06  
                                        l4842 29E8                                          l4834 29C6  
                                        l4826 29A2                                          l4818 294C  
                                        l6370 20B4                                          l6362 207A  
                                        l6354 1FFE                                          l6346 1FD6  
                                        l6338 1F5A                                          l6610 27F8  
                                        l6602 27B4                                          l6178 14BE  
                                        l6098 1278                                          l6506 2556  
                                        l5802 393E                                          l5650 2B8E  
                                        l5618 333A                                          l5626 38A2  
                                        l5634 39A8                                          l5730 1D08  
                                        l5722 1C6C                                          l5714 1BDE  
                                        l5706 1B7E                                          l5810 3CFE  
                                        l6418 340E                                          l6450 2204  
                                        l6442 21C2                                          l6434 2164  
                                        l4916 3C12                                          l4908 3BE8  
                                        l4932 3BD6                                          l4940 39F8  
                                        l4924 3C5E                                          l6620 3778  
                                        l6292 188C                                          l6276 17DE  
                                        l6268 17A6                                          l6196 151E  
                                        l6188 14EE                                          l4852 2A12  
                                        l4844 29F2                                          l4828 29A4  
                                        l6380 20FC                                          l6372 20B8  
                                        l6364 2086                                          l6356 2030  
                                        l5820 2862                                          l6612 2804  
                                        l6604 27C8                                          l6540 1974  
                                        l6532 1930                                          l5804 394E  
                                        l5660 2C10                                          l5652 2BA2  
                                        l5644 2B5A                                          l5628 38B0  
                                        l5636 39B4                                          l5732 1D22  
                                        l5724 1C72                                          l5716 1BE8  
                                        l5708 1B80                                          l5740 1D74  
                                        l6460 221A                                          l6452 220A  
                                        l6444 21D8                                          l6436 217A  
                                        l6428 210E                                          l4934 3BE0  
                                        l4942 39FC                                          l4926 3C6A  
                                        l4918 3C44                                          l6390 37F4  
                                        l6630 379C                                          l6622 3788  
                                        l6286 1848                                          l6294 1890  
                                        l6278 17E2                                          l6198 152E  
                                        l4854 2A22                                          l6374 20DC  
                                        l6366 2094                                          l6358 2032  
                                        l5830 2898                                          l5822 2866  
                                        l5814 283E                                          l6614 2820  
                                        l6606 27CC                                          l6550 19D2  
                                        l6542 198E                                          l6534 193E  
                                        l5910 2334                                          l6518 2590  
                                        l5662 2C12                                          l5654 2BB0  
                                        l5646 2B66                                          l5670 2D5A  
                                        l5638 39B8                                          l5734 1D3C  
                                        l5718 1BEE                                          l5726 1CD6  
                                        l5750 1DF8                                          l5742 1DA2  
                                        l5902 3D44                                          l6470 2266  
                                        l6462 2230                                          l6446 21E8  
                                        l6438 218A                                          l4936 3BE4  
                                        l4928 3BBA                                          l4944 3A16  
                                        l6392 37F8                                          l6384 37C2  
                                        l4960 31CC                                          l6640 37B8  
                                        l6632 37A0                                          l6624 378C  
                                        l6296 18AA                                          l6288 1854  
                                        l4856 2A32                                          l6376 20EC  
                                        l6368 20B2                                          l5840 28DA  
                                        l5832 28AE                                          l5824 2874  
                                        l5816 2844                                          l6616 2828  
                                        l6608 27DC                                          l6560 1A1A  
                                        l6552 19DA                                          l6544 1996  
                                        l6536 1954                                          l5912 2340  
                                        l5920 2368                                          l5664 2C24  
                                        l5656 2BC2                                          l5648 2B86  
                                        l5680 2DDC                                          l5672 2D6E  
                                        l5592 3492                                          l5728 1CEA  
                                        l5736 1D4A                                          l5760 1ECE  
                                        l5752 1E56                                          l5744 1DB4  
                                        l5808 3CF4                                          l5904 3D52  
                                        l6464 2246                                          l6448 21F8  
                                        l4938 39E4                                          l6394 37FA  
                                        l6386 37D6                                          l4970 31F6  
                                        l4962 31D0                                          l6634 37A8  
                                        l6626 3794                                          l6298 18BE  
                                        l4858 2A42                                          l6378 20FA  
                                        l5842 28F8                                          l5834 28B6  
                                        l5850 291A                                          l5826 2884  
                                        l5818 2852                                          l6618 2834  
                                        l6562 1AAC                                          l6554 19EA  
                                        l6546 19A2                                          l6538 1958  
                                        l5930 23F8                                          l5914 2348  
                                        l5922 23AA                                          l5906 22BE  
                                        l6490 24BE                                          l6482 2468  
                                        l5658 2BF0                                          l5674 2D7C  
                                        l5666 2D32                                          l5594 3492  
                                        l5690 2F0C                                          l5682 2ECE  
                                        l5762 1EE2                                          l5746 1DC6  
                                        l6650 2602                                          l6642 25DC  
                                        l6396 3806                                          l6388 37DA  
                                        l4980 320A                                          l4972 31FA  
                                        l4964 31DC                                          l6636 37AC  
                                        l6628 3798                                          l5852 292A  
                                        l5844 2908                                          l5836 28C2  
                                        l5828 2888                                          l6580 1B40  
                                        l6564 1AB8                                          l6556 1A00  
                                        l6548 19BC                                          l5860 2F9C  
                                        l5940 2454                                          l5932 2414  
                                        l5924 23C8                                          l5916 2354  
                                        l5908 230C                                          l6484 247A  
                                        l5676 2DAA                                          l5668 2D52  
                                        l5596 34B2                                          l5692 2F20  
                                        l5684 2EDC                                          l5756 1E8E  
                                        l5748 1DCA                                          l5772 1F0E  
                                        l5780 3428                                          l6468 2256  
                                        l6476 2272                                          l6660 2664  
                                        l6652 264C                                          l6644 25EA  
                                        l4990 321E                                          l4982 320E  
                                        l4974 31FE                                          l4966 31EC  
                                        l6638 37B4                                          l5854 293A  
                                        l5846 290A                                          l5838 28D0  
                                        l5950 327A                                          l5790 3ABE  
                                        l6590 270E                                          l6582 1B5C  
                                        l6558 1A04                                          l6574 1AD0  
                                        l5870 2FCC                                          l5862 2FAA  
                                        l5934 2420                                          l5926 23D4  
                                        l6830 25A4                                          l6486 2496  
                                        l6494 24CA                                          l5678 2DCA  
                                        l5598 34BE                                          l5694 2F34  
                                        l5686 2EF0                                          l5774 1F3E  
                                        l5758 1EBC                                          l5766 1EF0  
                                        l5782 3430                                          l6398 396C  
                                        l6670 26A4                                          l6662 2674  
                                        l6654 2650                                          l6646 25FA  
                                        l4992 3222                                          l4984 3212  
                                        l4976 3202                                          l4968 31F2  
                                        l5848 2914                                          l5952 3290  
                                        l6592 2728                                          l6584 1B64  
                                        l6568 1AC4                                          l6576 1B1A  
                                        l5792 3A88                                          l5880 2FFA  
                                        l5872 2FD0                                          l5864 2FB2  
                                        l5936 243C                                          l5928 23F0  
                                        l6832 237C                                          l6496 2508  
                                        l6488 24A2                                          l5696 2F3A  
                                        l5688 2F00                                          l5768 1F02  
                                        l5784 343E                                          l6672 26AA  
                                        l6664 2678                                          l6656 2658  
                                        l6648 25FE                                          l4994 3226  
                                        l4986 3216                                          l4978 3206  
                                        l5954 32A0                                          l5970 2C9A  
                                        l5962 2C4C                                          l6594 2728  
                                        l6578 1B38                                          l6834 1AE4  
                                        l5794 3A52                                          l5890 302E  
                                        l5882 3008                                          l5874 2FD8  
                                        l5866 2FB6                                          l5858 2F96  
                                        l5938 2444                                          l6498 251C  
                                        l5698 2F66                                          l5786 3464  
                                        l6826 2286                                          l6682 26F4  
                                        l6674 26C6                                          l6666 2686  
                                        l6658 2660                                          l6690 3DB6  
                                        l4996 322A                                          l4988 321A  
                                        l5956 32D2                                          l5948 3270  
                                        l5788 3AF4                                          l5980 2CF6  
                                        l5964 2C6A                                          l5972 2CAA  
                                        l6596 2734                                          l5892 3034  
                                        l5884 300E                                          l5876 2FEA  
                                        l5868 2FC4                                          l6828 24DE  
                                        l5796 3932                                          l6684 2700  
                                        l6676 26CE                                          l6668 2690  
                                        l6692 3DB8                                          l4998 3236  
                                        l5958 3300                                          l5974 2CC6  
                                        l5982 2D18                                          l5966 2C86  
                                        l6598 2798                                          l5990 103C  
                                        l5886 3024                                          l5878 2FF2  
                                        l5894 303A                                          l5798 3938  
                                        l6686 2704                                          l6678 26DC  
                                        l6694 3DC6                                          l5976 2CE2  
                                        l5968 2C8E                                          l5992 104C  
                                        l5984 101E                                          l5896 304A  
                                        l5888 302C                                          l6688 3DB2  
                                        l5978 2CEA                                          l5994 105C  
                                        l5986 102C                                          l5898 3052  
                                        l5996 106C                                          l5988 103A  
                                        l5998 106E                                          STR_1 1001  
                                        STR_2 1012                                          _LATA 003FBA  
                                        _LATB 003FBB                                          u1415 36C8  
                                        _LATC 003FBC                                          u1416 36CA  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        u3400 29C6                                          u5000 122C  
                                        u3401 29C2                                          u5001 1228  
                                        u3410 29DA                                          u5010 125E  
                                        _T2PR 003FAB                                          u3411 29D6  
                                        u5011 125A                                          u3420 2A02  
                                        u5100 13A6                                          u5020 126C  
                                        u4300 3330                                          u3421 29FE  
                                        u5101 13A2                                          u5021 1268  
                                        u4301 332C                                          u3430 2A22  
                                        u5110 13B6                                          u5030 128A  
                                        u4310 3358                                          u3431 2A1E  
                                        u5111 13B2                                          u5031 1286  
                                        u4311 3354                                          u3440 2A32  
                                        u5200 149E                                          u5120 13C8  
                                        u5040 12C2                                          u4400 2D7C  
                                        u4320 338E                                          u3441 2A2E  
                                        u5201 149A                                          u5121 13C4  
                                        u5041 12BE                                          u4401 2D78  
                                        u4321 338A                                          u5210 14B0  
                                        u5130 13DE                                          u5050 1308  
                                        u4410 2DAA                                          u4330 38E8  
                                        _T4PR 003F9F                                          u5211 14AC  
                                        u5131 13DA                                          u5051 1304  
                                        u4411 2DA6                                          u4331 38E4  
                                        u5300 15C6                                          u3380 2964  
                                        u5220 14CC                                          u5140 13F4  
                                        u5060 133E                                          u4260 34A2  
                                        u4340 39D4                                          u4420 2EDC  
                                        u4500 1D22                                          u3700 3146  
                                        u5301 15C2                                          u3381 2960  
                                        u5221 14C8                                          u5141 13F0  
                                        u5061 133A                                          u4261 349E  
                                        u4341 39D0                                          u4421 2ED8  
                                        u4501 1D1E                                          u3701 3142  
                                        u5310 1764                                          u5230 14FC  
                                        u3390 2998                                          u5150 1408  
                                        u5070 134E                                          u4270 34B2  
                                        u4430 2F00                                          u4510 1D3C  
                                        u3710 315C                                          u5231 14F8  
                                        u5151 1404                                          u5071 134A  
                                        u4351 2B60                                          u4271 34AE  
                                        u4431 2EFC                                          u4511 1D38  
                                        u3711 3158                                          u5400 18D8  
                                        u5320 17BE                                          u5240 150E  
                                        u5160 1422                                          u5080 137A  
                                        u4360 2B86                                          u4280 34E2  
                                        u4440 2F58                                          u4520 1D4A  
                                        u3720 316E                                          u5401 18D4  
                                        u5321 17BA                                          u5241 150A  
                                        u5161 141E                                          u5081 1376  
                                        u4361 2B82                                          u4281 34DE  
                                        u4441 2F54                                          u4521 1D46  
                                        u3721 316A                                          u5410 1912  
                                        u5330 17DE                                          u5250 151E  
                                        u5170 145C                                          u5090 138A  
                                        u4610 394E                                          u4370 2BB0  
                                        u4290 331E                                          u4450 2F66  
                                        u4530 1DA2                                          u3730 3184  
                                        u5411 190E                                          u5331 17DA  
                                        u5315 175A                                          u5251 151A  
                                        u3395 298E                                          u5171 1458  
                                        u5091 1386                                          u4611 394A  
                                        u4371 2BAC                                          u4291 331A  
                                        u4451 2F62                                          u4531 1D9E  
                                        u3731 3180                                          u5340 17F0  
                                        u5260 155E                                          u5500 202C  
                                        u4620 2852                                          u5180 146E  
                                        u4700 2FEA                                          u5420 2A84  
                                        u4380 2BF0                                          u4460 1B7E  
                                        u4540 1DF8                                          u3740 31A6  
                                        _PMD0 0039C0                                          u5341 17EC  
                                        u5261 155A                                          u5501 2028  
                                        u4621 284E                                          u5181 146A  
                                        u4605 3A78                                          u4701 2FE6  
                                        u5421 2A80                                          u4381 2BEC  
                                        u4461 1B7A                                          u4541 1DF4  
                                        u3741 31A2                                          _PMD1 0039C1  
                                        u5350 181E                                          u5270 1570  
                                        u5510 2076                                          u4630 2874  
                                        u5190 147E                                          u4710 3008  
                                        u5430 2AC2                                          u4390 2D52  
                                        u4470 1B9A                                          u4550 1EBC  
                                        u3750 31C2                                          _PMD2 0039C2  
                                        u5351 181A                                          u5271 156C  
                                        u5511 2072                                          u4631 2870  
                                        u5191 147A                                          u4711 3004  
                                        u5431 2ABE                                          u4391 2D4E  
                                        u4471 1B96                                          u4551 1EB8  
                                        u3751 31BE                                          _PMD3 0039C3  
                                        u5360 1834                                          u5280 1580  
                                        u5520 2094                                          u4640 28AE  
                                        u4800 2C6A                                          u4720 3024  
                                        u5440 2AE0                                          u4480 1CEA  
                                        u4560 3486                                          u5600 2148  
                                        _PMD4 0039C4                                          u5361 1830  
                                        u5281 157C                                          u5521 2090  
                                        u4641 28AA                                          u4801 2C66  
                                        u4721 3020                                          u5441 2ADC  
                                        u4481 1CE6                                          u4561 3482  
                                        u5601 2144                                          _PMD5 0039C5  
                                        u5370 1848                                          u5290 15B6  
                                        u5530 20A4                                          u4650 28D0  
                                        u4810 2C86                                          u4730 304A  
                                        u5450 2B00                                          u4490 1D08  
                                        u5610 2164                                          u3690 3134  
                                        _PMD6 0039C6                                          u5371 1844  
                                        u5291 15B2                                          u5531 20A0  
                                        u4651 28CC                                          u4811 2C82  
                                        u4731 3046                                          u5451 2AFC  
                                        u4491 1D04                                          u5611 2160  
                                        u3691 3130                                          _PMD7 0039C7  
                                        u5380 1862                                          u5540 20B2  
                                        u4660 28F8                                          u4820 2CC6  
                                        u4900 10D6                                          u4740 23C8  
                                        u5460 2B50                                          u5700 2266  
                                        u5620 217A                                          u5381 185E  
                                        u5541 20AE                                          u4661 28F4  
                                        u4821 2CC2                                          u4901 10D2  
                                        u4741 23C4                                          u5461 2B4C  
                                        u5701 2262                                          u5621 2176  
                                        u5390 18AA                                          u5550 20EC  
                                        u5470 1F6C                                          u4670 292A  
                                        u4830 2CE2                                          u4910 1112  
                                        u4750 23F0                                          u5710 2496  
                                        u5630 21A6                                          u5391 18A6  
                                        u5551 20E8                                          u5471 1F68  
                                        u4671 2926                                          u4575 3B1A  
                                        u4831 2CDE                                          u4911 110E  
                                        u4751 23EC                                          u5711 2492  
                                        u5631 21A2                                          u5560 20FA  
                                        u5480 1F7A                                          u4920 1120  
                                        u4840 103A                                          u5800 1A00  
                                        u4680 2FAA                                          u4760 2414  
                                        u5720 24BE                                          u5640 21C2  
                                        u5561 20F6                                          u5481 1F76  
                                        u4585 3AE4                                          u4921 111C  
                                        u4841 1036                                          u5801 19FC  
                                        u4681 2FA6                                          u4761 2410  
                                        u5721 24BA                                          u5641 21BE  
                                        u5490 1FD6                                          u4930 118E  
                                        u4850 104C                                          u5810 1A1A  
                                        u4690 2FC4                                          u4770 243C  
                                        u5730 2556                                          u5650 21D8  
                                        u5570 39A6                                          u5491 1FD2  
                                        u4931 118A                                          u4851 1048  
                                        u5811 1A16                                          u4595 3AAE  
                                        u4691 2FC0                                          u4771 2438  
                                        u5731 2552                                          u5651 21D4  
                                        u5571 39A2                                          u4780 3290  
                                        u4940 11A6                                          u4860 105C  
                                        u5820 1B38                                          u5740 257C  
                                        u5580 33B4                                          u5660 21F8  
                                        u5900 264C                                          u4781 328C  
                                        u4941 11A0                                          u4861 1058  
                                        u5821 1B34                                          u5741 2578  
                                        u5581 33B0                                          u5661 21F4  
                                        u5901 2648                                          u4790 32A0  
                                        u4950 11A8                                          u4870 109E  
                                        u5830 1B5C                                          u5750 1954  
                                        u5590 3406                                          u5670 221A  
                                        u5910 2674                                          u4791 329C  
                                        u4871 109A                                          u5831 1B58  
                                        u5751 1950                                          u5591 3402  
                                        u5671 2216                                          u5911 2670  
                                        u5840 27AC                                          u4960 11D0  
                                        u4880 10B4                                          u5760 1974  
                                        u5680 2230                                          u5920 2686  
                                        u5841 27A8                                          u4961 11CC  
                                        u4881 10B0                                          u5761 1970  
                                        u5681 222C                                          u5921 2682  
                                        u5850 27C8                                          u4970 11EE  
                                        u4890 10C6                                          u5770 198E  
                                        u5690 2246                                          u5930 26C6  
                                        u5851 27C4                                          u4971 11EA  
                                        u4891 10C2                                          u5771 198A  
                                        u5691 2242                                          u5931 26C2  
                                        u5860 27F8                                          u4980 120E  
                                        u5780 19BC                                          u5940 26F0  
                                        u5861 27F4                                          u4981 120A  
                                        u5781 19B8                                          u5941 26EC  
                                        u5870 2820                                          u4990 121C  
                                        u5790 19D2                                          u5871 281C  
                                        u4991 1218                                          u5791 19CE  
                                        u5880 25EA                                          u5881 25E6  
                                        u5890 25FA                                          u5891 25F6  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        _dbuf 0100                                          _main 3DB2  
                                        _loop 25DC                                          _prec 00D3  
                                        _nout 00CF                                          pad@i 0077  
                                        pad@p 0074                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0079  
                                        fsr2l 003FD9                                          _utoa 1B6E  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 00EF  
                             _TMR3_Initialize 39E4                               _PWM5_Initialize 3E54  
                           ??_CLC3_Initialize 0020                 ??_UART1_SetTxInterruptHandler 0022  
                  ??_TMR4_SetInterruptHandler 0022                             _UART1_rx_vect_isr 35F0  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 3ABE  
                          ?_UART1_rx_vect_isr 0001                                         ??_pad 0076  
                        ??_UART1_Transmit_ISR 0017                 __end_of_OSCILLATOR_Initialize 3E84  
                               ___fltol@sign1 0020                               __end_of___aldiv 294C  
                                       _ADACT 003EFE                                         _ADCAP 003EF5  
                     __end_of_CCP3_Initialize 3C16                               __end_of___fladd 14E0  
                                       ?_main 0001                                         _ADCLK 003EFF  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 305C  
                                       ?_loop 0001                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0009                               __end_of___flmul 1930  
                    TMR5_ReadTimer@readValLow 0014                               __end_of___fltol 2A54  
                                       ?_utoa 007B                               __end_of___lodiv 2C4C  
                             ___awdiv@divisor 0062                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _T3CLK 003FA9  
                                       _U1P2L 003DEE                                         _T2CON 003FAC  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 2E04                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 362E                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 35DA  
                                       i1l333 3928                                         i1l350 3F02  
                                       i1l343 311A                                         i1l336 392C  
                                       i1l353 3F00                                         _U1TXB 003DEA  
                                       i1l347 3CC6                                         i1l356 3EFA  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 3F08                                         i1l692 3C42  
                                       i2l534 3CF2                                         i2l438 3B88  
                                       i2l446 371E                                         i2l552 3848  
                                       i1l688 3680                                         i2l529 3DB0  
                                       i2l537 3E90                                         i1l698 3F04  
                                       i2l476 3BB8                                         i2l558 3DEE  
                                       i2l487 376A                           ??_UART1_rx_vect_isr 001A  
                                       i2l863 359A                                         i2l856 38A0  
                                       i2l868 3D42                               ___awdiv@counter 0064  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 009D  
                                vfpfcnvrt@llu 00A5                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 3F08                               _TMR4_Initialize 3C44  
                             _PWM6_Initialize 3E3C                             _UART1_tx_vect_isr 359C  
                            __end_of_TMR4_ISR 3694                       setSteering@steeringMode 006A  
                                       _delay 0032                                         _flags 0022  
                                       _fputc 330A                                         _fputs 38A2  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0070  
                                       _width 00D1                                         _putch 3E92  
                            ?_SMT1_Initialize 0001                                         pclath 003FFA  
                                       pclatu 003FFB                                         tablat 003FF5  
                                 _BatteryVolt 0024                                         utoa@d 007D  
                                       utoa@i 0099                                         utoa@n 0091  
                                       utoa@p 008D                                         utoa@w 008F  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 3EB0  
                 _UART1_SetRxInterruptHandler 3EA6                       __end_of_CCP4_Initialize 3BE8  
                            ___lodiv@dividend 0060           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 3F04            ??_UART1_DefaultFramingErrorHandler 001A  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 3F02  
                         ??_UART1_tx_vect_isr 0017                     __end_of_UART1_rx_vect_isr 3642  
                             _TMR5_Initialize 37C2                               _PWM7_Initialize 3E24  
                             __initialization 3A1C                         TMR5_ReadTimer@readVal 0011  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 3DD2  
                                __end_of_loop 270E                                  __end_of_utoa 1D74  
                 ??_UART1_DefaultErrorHandler 001A                       __end_of_TMR2_Initialize 3E0C  
                                ?_UART1_Write 0001                                        ??_main 0022  
                                      ??_loop 0022                                        ??_utoa 0085  
                               __activetblptr 000003                                  _calcMotorPow 270E  
                   __end_of_UART1_tx_vect_isr 35EE                              ___lodiv@quotient 0070  
                             _PWM8_Initialize 3E0C                              _UART1_Initialize 31CC  
                                _calcSteering 2468                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0060  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0069                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0060  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 3ABE  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1244 3EFE                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i1l5004 3EF6                       __end_of_PWM5_Initialize 3E6C  
                     __end_of_TMR3_Initialize 3A1C                                        i1l5310 390E  
                                      i1l4360 3CC4                                        i1l4352 3C9C  
                                      i1l5320 307C                                        i1l5312 391E  
                                      i1l5304 38EA                                        i1l4354 3CAE  
                                      i1l5330 30DC                                        i1l5322 308C  
                                      i1l5314 3922                                        i1l5306 38FA  
                                      i1l4356 3CB0                                        i1l5332 30F8  
                                      i1l5324 30A4                                        i1l5316 305C  
                                      i1l5308 390C                                        i1l4358 3CC0  
                                      i1l5334 3116                                        i1l5326 30B4  
                                      i1l5318 306C                                        i1l5430 35C2  
                                      i1l5328 30C4                                        i1l5432 3602  
                                      i1l5258 3EFC                                        i1l5434 3616  
                                      i1l5452 3656                                        i1l5428 35AE  
                                      i1l5374 3C16                                        i1l5454 365A  
                                      i1l5376 3C2A                                        i1l5456 3674  
                                      i2l5010 3DA8                                        i1l5458 3678  
                                      i2l5006 3D8E                                        i2l5014 3E84  
                                      i2l5008 3D9C                                        i2l4370 3CD6  
                                      i2l4380 3CEC                                        i2l4372 3CD8  
                                      i2l5340 3B74                                        i2l4374 3CDC  
                                      i2l5350 3BB2                                        i2l5342 3B82  
                                      i2l4376 3CE2                                        i2l4368 3CC8  
                                      i2l5352 3DD2                                        i2l5344 3B8A  
                                      i2l5440 3738                                        i2l5336 3B5A  
                                      _INLVLA 003A44                                        i2l4378 3CE8  
                                      i2l5354 3DDE                                        i2l5346 3B98  
                                      i2l5442 3748                                        i2l5338 3B68  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l5460 3858                                        i2l5356 3DE6  
                                      i2l5444 3818                                        i2l5348 3BA4  
                                      i2l5436 36EC                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l5470 3548  
                                      i2l5462 385C                                        i2l5358 3DEA  
                                      i2l5446 381C                                        i2l5438 36FC  
                                      i2l5480 3D1C                                        i2l5472 354C  
                                      i2l5464 386C                                        i2l5448 3830  
                                      i2l5482 3D20                                        i2l5474 3566  
                                      i2l5466 387C                                        i2l5476 3576  
                                      i2l5468 388E                                        i2l5478 3588  
                                ?_setSteering 0068                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 330A                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 3EC4                              __end_of___xxtofl 210E  
                         ?_PWM8_LoadDutyValue 0020                              __end_of_getCurve 22BE  
                    __end_of_CCP3_SetCallBack 3EF6                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00AD  
                                      ___flge 2A54                                     ??___aldiv 0020  
                                   ??___fladd 008F                                     ??___awdiv 0020  
                                   ??___flmul 0076                                     ??___fltol 009B  
                                   ??___lodiv 0020                                     ??___lomod 0020  
                               _CCP3_CallBack 00F3                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 3E54                       __end_of_TMR4_Initialize 3C70  
                                      clear_0 3A22                                        clear_1 3A2E  
                                      clear_2 3A3A                              ___awdiv@quotient 0066  
                                      _motPow 00DF                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00F1  
                                      _smtWay 00C7                                        _printf 3CF4  
                                      pad@buf 0072                              ?_CCP3_Initialize 0001  
                                      _strlen 39A8                          ??_PWM8_LoadDutyValue 0060  
                            __end_of_setMotor 2D32                               _ADCC_Initialize 34EC  
        __end_of_TMR4_DefaultInterruptHandler 3F06                  _TMR4_DefaultInterruptHandler 3F04  
                                      fputc@c 0060                                _PMD_Initialize 3D6A  
                                      fputs@c 006D                                        fputs@i 006E  
                                      fputs@s 0069                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 3856                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                            __end_of_vfprintf 3490                     ?_ADCC_GetSingleConversion 0020  
                                      utoa@fp 007B      TMR4_SetInterruptHandler@InterruptHandler 0020  
TMR5_SetGateInterruptHandler@InterruptHandler 0020   UART1_SetTxInterruptHandler@InterruptHandler 0020  
 UART1_SetRxInterruptHandler@InterruptHandler 0020          __end_of_UART1_SetOverrunErrorHandler 3EBA  
                _UART1_SetOverrunErrorHandler 3EB0                     _UART1_DefaultErrorHandler 3EF6  
                           getCurve@deltaLeft 0060                                    ___flge@ff1 006E  
                                  ___flge@ff2 0072                       __end_of_PWM7_Initialize 3E3C  
                     __end_of_TMR5_Initialize 380C                                  ___xxtofl@arg 006A  
                                ___xxtofl@exp 0069                             _SYSTEM_Initialize 3778  
                                ___xxtofl@val 0060                                    __accesstop 0060  
                     __end_of__initialization 3A4C                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0068                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                                    ___fltol@f1 0097  
                             _TMR5_WriteTimer 3CC8                     calcMotorPow@setSpeedDelta 00A1  
                    __end_of_CCP4_SetCallBack 3EEC                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 3C44                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0022                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 33A2  
                               __end_of_fputs 38EA                               fp__TMR4_10msISR 0000  
                               __end_of_putch 3E9C                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 3E24                        __end_of_PMD_Initialize 3D8E  
                       CCP3_CaptureISR@module 0005                CCP3_SetCallBack@customCallBack 0020  
                   _UART1_FramingErrorHandler 00F9               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                                     ??_fputc 0064                     __end_of_SYSTEM_Initialize 37C2  
                                     ??_fputs 0022                               _CLC3_Initialize 3C70  
                                     ??_putch 0021                   PWM7_LoadDutyValue@dutyValue 0020  
                                  __pbssBANK0 00AF                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0020                        ?_UART1_SetErrorHandler 0020  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 0040                         _TMR4_InterruptHandler 00E9  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 006E  
                                  ??_TMR4_ISR 001D                       __end_of_ADCC_Initialize 3548  
                  __end_of_PWM6_LoadDutyValue 3A88          __end_of_TMR5_SetGateInterruptHandler 3ED8  
                _TMR5_SetGateInterruptHandler 3ECE                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 0126  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 305C  
                                  _getReverse 311C                                       ?_strlen 0020  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0020  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0060  
                          _PWM5_LoadDutyValue 3A88                                    _distRightM 00E3  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 1B6E                                       _IVTLOCK 003FD4  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1TMR 003F12                                       _SMT1WIN 003F23  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 3428                           ??_UART1_Receive_ISR 001A  
                            ___lomod@dividend 0060                       __end_of_TMR5_WriteTimer 3CF4  
                         ?_PWM5_LoadDutyValue 0020                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0020  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0062                                       __Lparam 0000  
                    __end_of_UART1_Initialize 3270                                       ___aldiv 283E  
                                     ___fladd 101E                                       ___awdiv 2F96  
                                     ___flmul 14E0                                       ___fltol 294C  
                                     ___lodiv 2B5A                                       ___lomod 2D32  
                   __end_of_UART1_Receive_ISR 311C                                     ?_vfprintf 0120  
                        ??_PWM5_LoadDutyValue 0060                                  __psmallconst 1000  
                                     __pcinit 3A1C                     _TMR5_GateInterruptHandler 00ED  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
               ?_TMR5_SetGateInterruptHandler 0020                                       __ptext0 3DB2  
                                     __ptext1 25DC                                       __ptext2 396C  
                                     __ptext3 311C                                       __ptext4 210E  
                                     __ptext5 33A2                                       __ptext6 3D44  
                                     __ptext7 3CF4                                       __ptext8 3428  
                                     __ptext9 1D74                                ??_TMR4_10msISR 001D  
                                  ??_actSpeed 0022                       __end_of_CLC3_Initialize 3C9C  
                       _OSCILLATOR_Initialize 3E6C                                     _T2CONbits 003FAC  
                                  ??___xxtofl 0064                                     _T3CONbits 003FA6  
                            ___aldiv@dividend 0060                                     _T4CONbits 003FA0  
                                     _tempCNT 00D5                      ??_PIN_MANAGER_Initialize 0020  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0020                                     _IPR10bits 00398A  
                                     _smtDuty 00CB                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0020                                     _PIE10bits 00399A  
                        end_of_initialization 3A4C                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 001D                                     _PIR10bits 0039AA  
                                   _T4RSTbits 003FA3                                       fputc@fp 0062  
                           ??_SMT1_PR_ACQ_ISR 0017           __end_of_UART1_SetTxInterruptHandler 3EA6  
                 _UART1_SetTxInterruptHandler 3E9C                                       fputs@fp 006B  
              ??_UART1_SetOverrunErrorHandler 0022                                    ??_setMotor 0064  
                           __end_of_vfpfcnvrt 1F56                             ?_CCP3_SetCallBack 0020  
                            ___aldiv@quotient 006A                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0017                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0022  
                                  ??_vfprintf 0022              __end_of_ADCC_GetSingleConversion 396C  
                           UART1_Write@txData 0020                           _UART1_RxDataHandler 3C9C  
                                     strlen@a 0060                                       strlen@s 0020  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                                   ___fladd@grs 0096  
                          getCurve@deltaRight 0062                                 ___xxtofl@sign 0068  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 000D  
                        setSteering@steeringB 006F                          setSteering@steeringF 006D  
                     TMR5_WriteTimer@timerVal 000D                                   ___flmul@grs 007C  
           CCP4_DefaultCallBack@capturedValue 0007                             ?_CCP4_SetCallBack 0020  
                __end_of_INTERRUPT_Initialize 36E0                                __end_of___flge 2B5A  
                          ??_CCP4_SetCallBack 0022                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 009F                                   vfpfcnvrt@fp 009B  
                      ?_OSCILLATOR_Initialize 0001                                __end_of_printf 3D1C  
                            ?_CLC3_Initialize 0001                                __end_of_strlen 39E4  
                              _TMR5_ReadTimer 3D8E                           start_initialization 3A1C  
                             ___lodiv@divisor 0068                               ___lodiv@counter 0078  
              ??_TMR5_SetGateInterruptHandler 0022                                   __end_of_pad 2F96  
                     ??_UART1_SetErrorHandler 0022                         ??_UART1_RxDataHandler 001A  
                                 putch@txData 0021                                    ivt0x8_base 0008  
                               _uart1RxBuffer 00B7                                   _actMotorPow 0026  
                               _uart1TxBuffer 00BF                          __end_of_TMR4_10msISR 3F00  
                                 vfprintf@fmt 0122                                      ??___flge 0076  
                            ??_PMD_Initialize 0020                                  _oldDistRight 00E1  
                  __end_of_PWM7_LoadDutyValue 3B2A                             ??_SMT1_Initialize 0020  
                                    ??_printf 0022                                      ??_strlen 0022  
                      __end_of_TMR5_ReadTimer 3DB2                         CCP4_CaptureISR@module 000B  
                                   ___fladd@a 008B                                     ___fladd@b 0087  
                         calcMotorPow@addMPow 00A5                      _ADCC_GetSingleConversion 392E  
                 PWM5_LoadDutyValue@dutyValue 0020                         TMR4_ISR@CountCallBack 002A  
                                   ___flmul@a 0072                                     ___flmul@b 006E  
                                 __pbssCOMRAM 0022                            _UART1_ErrorHandler 00F5  
                               __pcstackBANK0 0060                                 __pcstackBANK1 0120  
                          _PWM6_LoadDutyValue 3A52                      _UART1_RxInterruptHandler 00FD  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 3B8A  
                                   _calcSpeed 1930                           ?_PWM6_LoadDutyValue 0020  
                 PWM8_LoadDutyValue@dutyValue 0020                  fp__UART1_DefaultErrorHandler 0000  
                                   _checkBatt 33A2                                  _currentSpeed 00DB  
                ?_UART1_SetRxInterruptHandler 0020                                     __pnvBANK0 00E9  
                          setMotor@motorPower 0062                        _PIN_MANAGER_Initialize 2E04  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 3EC4  
                _UART1_SetFramingErrorHandler 3EBA                                      ?___aldiv 0060  
             ADCC_GetSingleConversion@channel 0062                                      ?___fladd 0087  
            __end_of_TMR4_SetInterruptHandler 3EE2                                      ?___awdiv 0060  
           CCP3_DefaultCallBack@capturedValue 0001                             ??_CCP4_CaptureISR 0009  
                                    ?___flmul 006E                                      ?___fltol 0097  
                                    ?___lodiv 0060                                      ?___lomod 0060  
                          ??_UART1_Initialize 0022                                     _distLeftM 00E5  
                                   _distFront 00E7                              _uart1RxLastError 0036  
                               ??_UART1_Write 0020                                     _distRight 002C  
                        ??_PWM6_LoadDutyValue 0060                                     _cycle10ms 0033  
                             ?_TMR5_ReadTimer 000D                                 ?_calcMotorPow 0001  
                             ___lomod@divisor 0068                                   __smallconst 1000  
                             ___lomod@counter 0020                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 0035  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 3F02  
          ??_UART1_DefaultOverrunErrorHandler 001A             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 3F00                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 3858  
                               ?_calcSteering 0001                                 _TMR5_GATE_ISR 380C  
                                   _curveMode 0034                                      _T2CLKCON 003FAE  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 3694  
                               ??_setSteering 006B                               ___aldiv@divisor 0064  
                             _SMT1_PW_ACQ_ISR 3548                               ___aldiv@counter 0068  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0020  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 3BBA  
                           ??_CCP3_Initialize 0022                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _PIE7bits 003997                                      _IPR9bits 003989  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u401_20 30F8  
                                    i1u400_28 30CA                                      i1u401_21 30F4  
                                    i1u400_29 30DC                                      i1u402_28 30FE  
                                    i1u402_29 3112                                      i1u406_20 3C2A  
                                    i1u406_21 3C26                                      i1u423_20 3674  
                                    i1u263_20 3CC0                                      i1u415_20 35C2  
                                    i1u423_21 3670                                      i1u263_21 3CBC  
                                    i1u415_21 35BE                                      i1u407_28 3C30  
                                    i1u407_29 3C42                                      i1u417_20 3616  
                                    i1u416_28 35C8                                      i1u417_21 3612  
                                    i1u416_29 35DA                                      i1u418_28 361C  
                                    i1u418_29 362E                 ??_UART1_SetRxInterruptHandler 0022  
                                    i1u395_20 38FA                                      i1u395_21 38F6  
                                    i2u403_40 3B68                                      i2u403_41 3B64  
                                    i1u396_20 391E                                      i1u396_21 391A  
                                    i2u404_40 3B98                                      i2u404_41 3B94  
                                    i1u397_20 307C                                      i1u397_21 3078  
                                    i2u421_40 3830                                      i2u420_48 3756  
                                    i2u421_41 382C                                      i2u420_49 376A  
                                    i1u399_20 30B4                                      i1u398_28 3092  
                                    i1u399_21 30B0                                      i1u398_29 30A4  
                                    i2u422_48 3836                                      i2u422_49 3848  
                                    i2u424_40 387C                                      i2u264_40 3CD6  
                                    i2u424_41 3878                                      i2u264_41 3CD2  
                                    i2u425_40 3576                                      i2u425_41 3572  
                                    _PIR1bits 0039A1                                      i2u419_48 370A  
                                    i2u419_49 371E                                      _PIR4bits 0039A4  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 3D1C  
                                    _TMR4_ISR 3644                    __end_of_UART1_Transmit_ISR 392E  
                               _TMR4_CallBack 3C16                                     _smtPeriod 003C  
               ?_UART1_SetFramingErrorHandler 0020                                 ??_TMR5_Reload 000F  
                                   _vfpfcnvrt 1D74                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 3D44                                  ??_getReverse 0020  
                              ??_calcMotorPow 009F                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0022                                ??_calcSteering 0071  
                         ??_SMT1_Overflow_ISR 0017                     TMR5_ReadTimer@readValHigh 0013  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 34EC  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 0022                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 0040                             ??_TMR2_Initialize 0020  
                                _uart1RxCount 0037                            __end_of_getReverse 31CC  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 3D44                           __end_of_setSteering 2468  
                                  vfprintf@ap 0124                                      __Lrparam 0000  
                                  vfprintf@fp 0120                                   _oldDistLeft 0028  
                               ??_startAccell 0022                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 00A3                     __end_of_getBatteryVoltage 3D6A  
                     ??_OSCILLATOR_Initialize 0020                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 3B5A                       __end_of_SMT1_PR_ACQ_ISR 38A2  
                                  ?_vfpfcnvrt 009B                             ??_PWM5_Initialize 0020  
                           ??_TMR3_Initialize 0020                      _TMR4_SetInterruptHandler 3ED8  
                                    _actSpeed 3270                                  _TMR4_10msISR 3EFC  
                                    ___xxtofl 1F56                           __end_of_TMR5_Reload 3E92  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 359C  
                                    _getCurve 210E                                      __ptext10 1B6E  
                                    __ptext11 2ECE                                      __ptext20 2A54  
                                    __ptext12 39A8                                      __ptext21 2468  
                                    __ptext13 38A2                                      __ptext30 3ABE  
                                    __ptext22 22BE                                      __ptext14 330A  
                                    __ptext31 3AF4                                      __ptext23 2F96  
                                    __ptext15 3E92                                      __ptext40 3EA6  
                                    __ptext32 3270                                      __ptext24 3A52  
                                    __ptext16 3490                                      __ptext41 3EB0  
                                    __ptext33 283E                                      __ptext25 3A88  
                                    __ptext17 2D32                                      __ptext50 3B2A  
                                    __ptext42 3EBA                                      __ptext34 1F56  
                                    __ptext26 1930                                      __ptext18 2B5A  
                                    __ptext51 3E0C                                      __ptext43 3EC4  
                                    __ptext35 294C                                      __ptext27 101E  
                                    __ptext19 392E                                      __ptext60 3BBA  
                                    __ptext52 3E24                                      __ptext44 37C2  
                                    __ptext36 14E0                                      __ptext28 270E  
                                    __ptext61 3EE2                                      __ptext53 3E3C  
                                    __ptext45 3ECE                                      __ptext37 3778  
                                    __ptext29 2C4C                                      __ptext70 3F02  
                                    __ptext62 3BE8                                      __ptext54 3E54  
                                    __ptext46 3C44                                      __ptext38 31CC  
                                    __ptext71 3EF6                                      __ptext63 3EEC  
                                    __ptext55 3D6A                                      __ptext47 3ED8  
                                    __ptext39 3E9C                                      __ptext80 372C  
                                    __ptext72 3C9C                                      __ptext64 34EC  
                                    __ptext56 2E04                                      __ptext48 39E4  
                                    __ptext81 3B8A                                      __ptext73 3644  
                                    __ptext65 359C                                      __ptext57 3E6C  
                                    __ptext49 3DF0                                      __ptext90 0000  
                                    __ptext82 380C                                      __ptext74 3C16  
                                    __ptext66 38EA                                      __ptext58 3694  
                                    __ptext83 3DD2                                      __ptext75 3EFC  
                                    __ptext67 35F0                                      __ptext59 3C70  
                                    __ptext84 3E84                                      __ptext76 3F04  
                                    __ptext68 305C                                      __ptext85 3CC8  
                                    __ptext77 3F08                                      __ptext69 3F00  
                                    __ptext86 3D8E                                      __ptext78 36E0  
                                    __ptext87 3858                                      __ptext79 3B5A  
                                    __ptext88 3548                                      __ptext89 3D1C  
                                    _distLeft 002E                                   ??_calcSpeed 009F  
               __end_of_UART1_SetErrorHandler 3ECE                                    _T3GCONbits 003FA7  
                                 ??_checkBatt 0022                             ??_TMR4_Initialize 0022  
                           ??_PWM6_Initialize 0020                                      _oldSpeed 00D9  
                                  _T5GCONbits 003F9B                               _SMT1_Initialize 3B2A  
                                 _IVTLOCKbits 003FD4                                      _setMotor 2C4C  
                                    _setSpeed 00DD                     _UART1_OverrunErrorHandler 00F7  
UART1_SetOverrunErrorHandler@interruptHandler 0020                                      isa$xinst 000000  
                  ??_ADCC_GetSingleConversion 0060                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 3428  
                                   printf@fmt 0126                    __end_of_PWM8_LoadDutyValue 3AF4  
                             _CCP3_CaptureISR 36E0                                   _UART1_Write 3490  
                       fp__UART1_Transmit_ISR 0000                             ??_PWM7_Initialize 0020  
                           ??_TMR5_Initialize 0060           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 3DF0            ??_TMR5_DefaultGateInterruptHandler 0015  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 3DD2  
                         __end_of_startAccell 39A8                                _battCheckCount 0030  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0022  
                                _reverseCount 0031                               ??_TMR5_GATE_ISR 0015  
                 __end_of_UART1_RxDataHandler 3CC8                                   _uart1RxHead 0039  
                        _CCP4_DefaultCallBack 3B8A                                   _uart1TxHead 003B  
                                 _uart1RxTail 0038                                   _uart1TxTail 003A  
                      ??_INTERRUPT_Initialize 0020                            _PWM7_LoadDutyValue 3AF4  
                                    intlevel1 0000                                      intlevel2 0000  
                                 _setSteering 22BE                               _CCP4_CaptureISR 372C  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0020  
                         ?_PWM7_LoadDutyValue 0020                          __end_of_calcMotorPow 283E  
                             ??_TMR4_CallBack 001D                          __end_of_calcSteering 25DC  
                         _uart1RxStatusBuffer 00AF                                      printf@ap 012A  
                            ??_TMR5_ReadTimer 000F  UART1_SetFramingErrorHandler@interruptHandler 0020  
           __end_of_UART1_DefaultErrorHandler 3EFC                                   ??_vfpfcnvrt 00A1  
                                 _reverseTime 00D7                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 3E84                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0060  
                               actSpeed@speed 006E                         ?_CCP4_DefaultCallBack 0007  
                   calcMotorPow@oldSpeedDelta 00A3                              _CCP3_SetCallBack 3EEC  
                                ___aldiv@sign 0069                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 3BE8                   PWM6_LoadDutyValue@dutyValue 0020  
                           calcSteering@delta 0073                      _UART1_TxInterruptHandler 00FB  
                               ___fladd@signs 0093                           __end_of_Default_ISR 3F0A  
                     __end_of_SMT1_Initialize 3B5A                __end_of_PIN_MANAGER_Initialize 2ECE  
                           ??_ADCC_Initialize 0020                                  ___fladd@aexp 0094  
                                ___fladd@bexp 0095                  ?_UART1_SetTxInterruptHandler 0020  
                     __end_of_CCP3_CaptureISR 372C  
