

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jan 26 14:10:01 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=4,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=4,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=4,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=4,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=4,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=4,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=4,class=CODE,delta=1
   104                           	psect	text89,global,reloc=4,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	text91,global,reloc=4,class=CODE,delta=1
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   111  0000                     
   112                           ; Version 2.20
   113                           ; Generated 05/05/2020 GMT
   114                           ; 
   115                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC18F46K42 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     _ADERRL	set	16098
   147  0000                     _ADERRH	set	16099
   148  0000                     _ADPREVL	set	16109
   149  0000                     _ADPREVH	set	16110
   150  0000                     _ADFLTRL	set	16102
   151  0000                     _ADFLTRH	set	16103
   152  0000                     _ADACCL	set	16104
   153  0000                     _ADACCH	set	16105
   154  0000                     _ADCNT	set	16107
   155  0000                     _ADRESL	set	16111
   156  0000                     _ADRESH	set	16112
   157  0000                     _ADCON0	set	16120
   158  0000                     _ADCON1	set	16121
   159  0000                     _ADPREH	set	16119
   160  0000                     _ADPREL	set	16118
   161  0000                     _ADCAP	set	16117
   162  0000                     _ADACQH	set	16116
   163  0000                     _ADPCH	set	16113
   164  0000                     _ADRPT	set	16108
   165  0000                     _ADACCU	set	16106
   166  0000                     _ADSTPTH	set	16101
   167  0000                     _ADSTPTL	set	16100
   168  0000                     _ADUTHH	set	16097
   169  0000                     _ADUTHL	set	16096
   170  0000                     _ADLTHH	set	16095
   171  0000                     _T2CON	set	16300
   172  0000                     _T2TMR	set	16298
   173  0000                     _T2PR	set	16299
   174  0000                     _T2HLT	set	16301
   175  0000                     _T2CLKCON	set	16302
   176  0000                     _SMT1SIG	set	16162
   177  0000                     _SMT1WIN	set	16163
   178  0000                     _SMT1CLK	set	16161
   179  0000                     _SMT1STAT	set	16160
   180  0000                     _SMT1CON1	set	16159
   181  0000                     _PWM8DCL	set	16224
   182  0000                     _PWM8DCH	set	16225
   183  0000                     _PWM8CON	set	16226
   184  0000                     _CCPTMRS1bits	set	16223
   185  0000                     _PWM7DCL	set	16228
   186  0000                     _PWM7DCH	set	16229
   187  0000                     _PWM7CON	set	16230
   188  0000                     _T4CON	set	16288
   189  0000                     _PIR7bits	set	14759
   190  0000                     _T4TMR	set	16286
   191  0000                     _T4PR	set	16287
   192  0000                     _T4RST	set	16291
   193  0000                     _T4HLT	set	16289
   194  0000                     _T4CLKCON	set	16290
   195  0000                     _T3CON	set	16294
   196  0000                     _TMR3L	set	16292
   197  0000                     _TMR3H	set	16293
   198  0000                     _T3CLK	set	16297
   199  0000                     _T3GATE	set	16296
   200  0000                     _T3GCON	set	16295
   201  0000                     _T5CON	set	16282
   202  0000                     _T5CLK	set	16285
   203  0000                     _T5GATE	set	16284
   204  0000                     _CCPR4L	set	16240
   205  0000                     _CCPR4H	set	16241
   206  0000                     _CCP4CAP	set	16243
   207  0000                     _CCP4CON	set	16242
   208  0000                     _IPR9bits	set	14729
   209  0000                     _IVTBASEL	set	16341
   210  0000                     _IVTBASEH	set	16342
   211  0000                     _IVTBASEU	set	16343
   212  0000                     _CCP4PPS	set	15056
   213  0000                     _SMT1WINPPS	set	15057
   214  0000                     _CLCIN0PPS	set	15065
   215  0000                     _CLCIN3PPS	set	15068
   216  0000                     _TRISD	set	16325
   217  0000                     _TRISC	set	16324
   218  0000                     _TRISB	set	16323
   219  0000                     _LATC	set	16316
   220  0000                     _LATB	set	16315
   221  0000                     _OSCTUNE	set	14814
   222  0000                     _OSCFRQ	set	14815
   223                           
   224                           	psect	nvCOMRAM
   225  000040                     __pnvCOMRAM:
   226                           	callstack 0
   227  000040                     _uart1TxBufferRemaining:
   228                           	callstack 0
   229  000040                     	ds	1
   230                           
   231                           	psect	nvBANK0
   232  0000EA                     __pnvBANK0:
   233                           	callstack 0
   234  0000EA                     _TMR4_InterruptHandler:
   235                           	callstack 0
   236  0000EA                     	ds	2
   237  0000EC                     _timer3ReloadVal:
   238                           	callstack 0
   239  0000EC                     	ds	2
   240  0000EE                     _TMR5_GateInterruptHandler:
   241                           	callstack 0
   242  0000EE                     	ds	2
   243  0000F0                     _timer5ReloadVal:
   244                           	callstack 0
   245  0000F0                     	ds	2
   246  0000F2                     _CCP4_CallBack:
   247                           	callstack 0
   248  0000F2                     	ds	2
   249  0000F4                     _CCP3_CallBack:
   250                           	callstack 0
   251  0000F4                     	ds	2
   252  0000F6                     _UART1_ErrorHandler:
   253                           	callstack 0
   254  0000F6                     	ds	2
   255  0000F8                     _UART1_OverrunErrorHandler:
   256                           	callstack 0
   257  0000F8                     	ds	2
   258  0000FA                     _UART1_FramingErrorHandler:
   259                           	callstack 0
   260  0000FA                     	ds	2
   261  0000FC                     _UART1_TxInterruptHandler:
   262                           	callstack 0
   263  0000FC                     	ds	2
   264  0000FE                     _UART1_RxInterruptHandler:
   265                           	callstack 0
   266  0000FE                     	ds	2
   267  0000                     _CLC3CON	set	15456
   268  0000                     _U1ERRIRbits	set	15865
   269  0000                     _ADCON1bits	set	16121
   270  0000                     _ADSTATbits	set	16124
   271  0000                     _ADCON2bits	set	16122
   272  0000                     _ADCON3bits	set	16123
   273  0000                     _ADCON0bits	set	16120
   274  0000                     _SMT1PR	set	16155
   275  0000                     _SMT1STATbits	set	16160
   276  0000                     _SMT1CON0bits	set	16158
   277  0000                     _SMT1CON1bits	set	16159
   278  0000                     _PR2	set	16299
   279  0000                     _TMR2	set	16298
   280  0000                     _T2CONbits	set	16300
   281  0000                     _T2RSTbits	set	16303
   282  0000                     _T2HLTbits	set	16301
   283  0000                     _PR4	set	16287
   284  0000                     _TMR4	set	16286
   285  0000                     _T4CONbits	set	16288
   286  0000                     _T4RSTbits	set	16291
   287  0000                     _T4HLTbits	set	16289
   288  0000                     _T3GCONbits	set	16295
   289  0000                     _T3CONbits	set	16294
   290  0000                     _T5GCONbits	set	16283
   291  0000                     _T5CONbits	set	16282
   292  0000                     _IVTLOCKbits	set	16340
   293  0000                     _GIE	set	130711
   294  0000                     _IPR1bits	set	14721
   295  0000                     _IPR3bits	set	14723
   296  0000                     _PIE3bits	set	14739
   297  0000                     _PMD0	set	14784
   298  0000                     _OSCCON1	set	14809
   299  0000                     _OSCCON3	set	14811
   300  0000                     _OSCEN	set	14813
   301  0000                     _RA0PPS	set	14848
   302  0000                     _RA1PPS	set	14849
   303  0000                     _ANSELA	set	14912
   304  0000                     _ANSELB	set	14928
   305  0000                     _ANSELC	set	14944
   306  0000                     _ANSELD	set	14960
   307  0000                     _LATA	set	16314
   308  0000                     _LATD	set	16317
   309  0000                     _LATE	set	16318
   310  0000                     _PMD7	set	14791
   311  0000                     _PMD6	set	14790
   312  0000                     _PMD5	set	14789
   313  0000                     _PMD4	set	14788
   314  0000                     _PMD3	set	14787
   315  0000                     _PMD2	set	14786
   316  0000                     _PMD1	set	14785
   317  0000                     _TRISA	set	16322
   318  0000                     _TRISE	set	16326
   319  0000                     _PORTBbits	set	16331
   320  0000                     _PORTDbits	set	16333
   321  0000                     _INTCON0bits	set	16338
   322  0000                     _INLVLD	set	14964
   323  0000                     _SLRCOND	set	14963
   324  0000                     _ODCOND	set	14962
   325  0000                     _RD0I2C	set	14970
   326  0000                     _WPUD	set	14961
   327  0000                     _ANSELE	set	14976
   328  0000                     _INLVLC	set	14948
   329  0000                     _SLRCONC	set	14947
   330  0000                     _ODCONC	set	14946
   331  0000                     _RC3I2C	set	14954
   332  0000                     _WPUC	set	14945
   333  0000                     _INLVLB	set	14932
   334  0000                     _SLRCONB	set	14931
   335  0000                     _ODCONB	set	14930
   336  0000                     _RB1I2C	set	14938
   337  0000                     _WPUB	set	14929
   338  0000                     _T5GPPS	set	15049
   339  0000                     _CCP3PPS	set	15055
   340  0000                     _INLVLE	set	14980
   341  0000                     _SLRCONE	set	14979
   342  0000                     _ODCONE	set	14978
   343  0000                     _WPUE	set	14977
   344  0000                     _INLVLA	set	14916
   345  0000                     _SLRCONA	set	14915
   346  0000                     _ODCONA	set	14914
   347  0000                     _WPUA	set	14913
   348  0000                     _RB2I2C	set	14939
   349  0000                     _RC4I2C	set	14955
   350  0000                     _RD1I2C	set	14971
   351  0000                     _U1RXPPS	set	15077
   352  0000                     _RA3PPS	set	14851
   353  0000                     _RA4PPS	set	14852
   354  0000                     _CLC3CONbits	set	15456
   355  0000                     _U1RXB	set	15848
   356  0000                     _U1TXB	set	15850
   357  0000                     _U1P1L	set	15852
   358  0000                     _RB3PPS	set	14859
   359  0000                     _CLCIN2PPS	set	15067
   360  0000                     _SMT1SIGPPS	set	15058
   361  0000                     _PIE7bits	set	14743
   362  0000                     _PIE8bits	set	14744
   363  0000                     _PIE9bits	set	14745
   364  0000                     _PIR9bits	set	14761
   365  0000                     _SMT1TMR	set	16146
   366  0000                     _SMT1CPR	set	16149
   367  0000                     _SMT1CPW	set	16152
   368  0000                     _ADLTHL	set	16094
   369  0000                     _SMT1PRL	set	16155
   370  0000                     _SMT1PRH	set	16156
   371  0000                     _SMT1PRU	set	16157
   372  0000                     _SMT1CON0	set	16158
   373  0000                     _CCPTMRS0bits	set	16222
   374  0000                     _CCPR3L	set	16244
   375  0000                     _CCPR3H	set	16245
   376  0000                     _CCP3CON	set	16246
   377  0000                     _U1ERRIE	set	15866
   378  0000                     _U1ERRIR	set	15865
   379  0000                     _U1UIR	set	15864
   380  0000                     _U1FIFO	set	15863
   381  0000                     _U1BRGH	set	15862
   382  0000                     _U1BRGL	set	15861
   383  0000                     _U1CON2	set	15860
   384  0000                     _U1CON1	set	15859
   385  0000                     _U1CON0	set	15858
   386  0000                     _U1P3H	set	15857
   387  0000                     _U1P3L	set	15856
   388  0000                     _U1P2H	set	15855
   389  0000                     _U1P2L	set	15854
   390  0000                     _U1P1H	set	15853
   391  0000                     _IVTLOCK	set	16340
   392  0000                     _IPR7bits	set	14727
   393  0000                     _IPR8bits	set	14728
   394  0000                     _IPR10bits	set	14730
   395  0000                     _PIE1bits	set	14737
   396  0000                     _TMR5L	set	16280
   397  0000                     _TMR5H	set	16281
   398  0000                     _T5GCON	set	16283
   399  0000                     _CCP3CAP	set	16247
   400  0000                     _PIR10bits	set	14762
   401  0000                     _PIR1bits	set	14753
   402  0000                     _PIR6bits	set	14758
   403  0000                     _PIR8bits	set	14760
   404  0000                     _PIE10bits	set	14746
   405  0000                     _PWM6DCL	set	16232
   406  0000                     _PWM6DCH	set	16233
   407  0000                     _PWM6CON	set	16234
   408  0000                     _PWM5DCL	set	16236
   409  0000                     _PWM5DCH	set	16237
   410  0000                     _PWM5CON	set	16238
   411  0000                     _PIR4bits	set	14756
   412  0000                     _CLC3GLS3	set	15465
   413  0000                     _CLC3GLS2	set	15464
   414  0000                     _CLC3GLS1	set	15463
   415  0000                     _CLC3GLS0	set	15462
   416  0000                     _CLC3SEL3	set	15461
   417  0000                     _CLC3SEL2	set	15460
   418  0000                     _CLC3SEL1	set	15459
   419  0000                     _CLC3SEL0	set	15458
   420  0000                     _CLC3POL	set	15457
   421  0000                     _T2RST	set	16303
   422  0000                     _ADACQL	set	16115
   423  0000                     _ADCLK	set	16127
   424  0000                     _ADACT	set	16126
   425  0000                     _ADREF	set	16125
   426  0000                     _ADSTAT	set	16124
   427  0000                     _ADCON3	set	16123
   428  0000                     _ADCON2	set	16122
   429                           
   430                           	psect	smallconst
   431  001000                     __psmallconst:
   432                           	callstack 0
   433  001000  00                 	db	0
   434  001001                     STR_5:
   435                           
   436                           ; BSR set to: 0
   437  001001  53                 	db	83	;'S'
   438  001002  74                 	db	116	;'t'
   439  001003  6F                 	db	111	;'o'
   440  001004  70                 	db	112	;'p'
   441  001005  20                 	db	32
   442  001006  52                 	db	82	;'R'
   443  001007  65                 	db	101	;'e'
   444  001008  76                 	db	118	;'v'
   445  001009  65                 	db	101	;'e'
   446  00100A  72                 	db	114	;'r'
   447  00100B  73                 	db	115	;'s'
   448  00100C  65                 	db	101	;'e'
   449  00100D  0A                 	db	10
   450  00100E  00                 	db	0
   451  00100F                     STR_3:
   452                           
   453                           ; BSR set to: 0
   454  00100F  52                 	db	82	;'R'
   455  001010  65                 	db	101	;'e'
   456  001011  76                 	db	118	;'v'
   457  001012  65                 	db	101	;'e'
   458  001013  72                 	db	114	;'r'
   459  001014  73                 	db	115	;'s'
   460  001015  65                 	db	101	;'e'
   461  001016  52                 	db	82	;'R'
   462  001017  69                 	db	105	;'i'
   463  001018  67                 	db	103	;'g'
   464  001019  74                 	db	116	;'t'
   465  00101A  68                 	db	104	;'h'
   466  00101B  0A                 	db	10
   467  00101C  00                 	db	0
   468  00101D                     STR_4:
   469                           
   470                           ; BSR set to: 0
   471  00101D  52                 	db	82	;'R'
   472  00101E  65                 	db	101	;'e'
   473  00101F  76                 	db	118	;'v'
   474  001020  65                 	db	101	;'e'
   475  001021  72                 	db	114	;'r'
   476  001022  73                 	db	115	;'s'
   477  001023  65                 	db	101	;'e'
   478  001024  4C                 	db	76	;'L'
   479  001025  65                 	db	101	;'e'
   480  001026  66                 	db	102	;'f'
   481  001027  74                 	db	116	;'t'
   482  001028  0A                 	db	10
   483  001029  00                 	db	0
   484  00102A                     STR_1:
   485                           
   486                           ; BSR set to: 0
   487  00102A  31                 	db	49	;'1'
   488  00102B  30                 	db	48	;'0'
   489  00102C  73                 	db	115	;'s'
   490  00102D  20                 	db	32
   491  00102E  70                 	db	112	;'p'
   492  00102F  61                 	db	97	;'a'
   493  001030  73                 	db	115	;'s'
   494  001031  73                 	db	115	;'s'
   495  001032  65                 	db	101	;'e'
   496  001033  64                 	db	100	;'d'
   497  001034  0A                 	db	10
   498  001035  00                 	db	0
   499  001036                     STR_2:
   500                           
   501                           ; BSR set to: 0
   502  001036  42                 	db	66	;'B'
   503  001037  56                 	db	86	;'V'
   504  001038  6F                 	db	111	;'o'
   505  001039  6C                 	db	108	;'l'
   506  00103A  74                 	db	116	;'t'
   507  00103B  3A                 	db	58	;':'
   508  00103C  20                 	db	32
   509  00103D  25                 	db	37
   510  00103E  75                 	db	117	;'u'
   511  00103F  0A                 	db	10
   512  001040  00                 	db	0
   513  001041  00                 	db	0	; dummy byte at the end
   514  0000                     
   515                           ; #config settings
   516                           
   517                           	psect	cinit
   518  003F54                     __pcinit:
   519                           	callstack 0
   520  003F54                     start_initialization:
   521                           	callstack 0
   522  003F54                     __initialization:
   523                           	callstack 0
   524                           
   525                           ; Clear objects allocated to BANK1 (32 bytes)
   526  003F54  EE00  F100         	lfsr	0,__pbssBANK1
   527  003F58  0E20               	movlw	32
   528  003F5A                     clear_0:
   529  003F5A  6AEE               	clrf	postinc0,c
   530  003F5C  06E8               	decf	wreg,f,c
   531  003F5E  E1FD               	bnz	clear_0
   532                           
   533                           ; Clear objects allocated to BANK0 (60 bytes)
   534  003F60  EE00  F0AE         	lfsr	0,__pbssBANK0
   535  003F64  0E3C               	movlw	60
   536  003F66                     clear_1:
   537  003F66  6AEE               	clrf	postinc0,c
   538  003F68  06E8               	decf	wreg,f,c
   539  003F6A  E1FD               	bnz	clear_1
   540                           
   541                           ; Clear objects allocated to COMRAM (30 bytes)
   542  003F6C  EE00  F022         	lfsr	0,__pbssCOMRAM
   543  003F70  0E1E               	movlw	30
   544  003F72                     clear_2:
   545  003F72  6AEE               	clrf	postinc0,c
   546  003F74  06E8               	decf	wreg,f,c
   547  003F76  E1FD               	bnz	clear_2
   548                           
   549                           ;
   550                           ; Setup IVTBASE
   551                           ;
   552  003F78  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   553  003F7A  6ED5               	movwf	213,c
   554  003F7C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   555  003F7E  6ED6               	movwf	214,c
   556  003F80  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   557  003F82  6ED7               	movwf	215,c
   558  003F84                     end_of_initialization:
   559                           	callstack 0
   560  003F84                     __end_of__initialization:
   561                           	callstack 0
   562  003F84  0100               	movlb	0
   563  003F86  EF75  F021         	goto	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMRAM
   566  000022                     __pbssCOMRAM:
   567                           	callstack 0
   568  000022                     _flags:
   569                           	callstack 0
   570  000022                     	ds	2
   571  000024                     _BatteryVolt:
   572                           	callstack 0
   573  000024                     	ds	2
   574  000026                     _actMotorPow:
   575                           	callstack 0
   576  000026                     	ds	2
   577  000028                     _oldDistLeft:
   578                           	callstack 0
   579  000028                     	ds	2
   580  00002A                     TMR4_ISR@CountCallBack:
   581                           	callstack 0
   582  00002A                     	ds	2
   583  00002C                     _distRight:
   584                           	callstack 0
   585  00002C                     	ds	2
   586  00002E                     _distLeft:
   587                           	callstack 0
   588  00002E                     	ds	2
   589  000030                     _delay:
   590                           	callstack 0
   591  000030                     	ds	1
   592  000031                     _cycle10ms:
   593                           	callstack 0
   594  000031                     	ds	1
   595  000032                     _curveMode:
   596                           	callstack 0
   597  000032                     	ds	1
   598  000033                     _driveMode:
   599                           	callstack 0
   600  000033                     	ds	1
   601  000034                     _uart1RxLastError:
   602                           	callstack 0
   603  000034                     	ds	1
   604  000035                     _uart1RxCount:
   605                           	callstack 0
   606  000035                     	ds	1
   607  000036                     _uart1RxTail:
   608                           	callstack 0
   609  000036                     	ds	1
   610  000037                     _uart1RxHead:
   611                           	callstack 0
   612  000037                     	ds	1
   613  000038                     _uart1TxTail:
   614                           	callstack 0
   615  000038                     	ds	1
   616  000039                     _uart1TxHead:
   617                           	callstack 0
   618  000039                     	ds	1
   619  00003A                     _smtPeriod:
   620                           	callstack 0
   621  00003A                     	ds	4
   622  00003E                     _distFront:
   623                           	callstack 0
   624  00003E                     	ds	2
   625                           
   626                           	psect	bssBANK0
   627  0000AE                     __pbssBANK0:
   628                           	callstack 0
   629  0000AE                     _uart1RxStatusBuffer:
   630                           	callstack 0
   631  0000AE                     	ds	8
   632  0000B6                     _uart1RxBuffer:
   633                           	callstack 0
   634  0000B6                     	ds	8
   635  0000BE                     _uart1TxBuffer:
   636                           	callstack 0
   637  0000BE                     	ds	8
   638  0000C6                     _smtWay:
   639                           	callstack 0
   640  0000C6                     	ds	4
   641  0000CA                     _smtDuty:
   642                           	callstack 0
   643  0000CA                     	ds	4
   644  0000CE                     _nout:
   645                           	callstack 0
   646  0000CE                     	ds	2
   647  0000D0                     _width:
   648                           	callstack 0
   649  0000D0                     	ds	2
   650  0000D2                     _prec:
   651                           	callstack 0
   652  0000D2                     	ds	2
   653  0000D4                     _tempCNT:
   654                           	callstack 0
   655  0000D4                     	ds	2
   656  0000D6                     _reverseTime:
   657                           	callstack 0
   658  0000D6                     	ds	2
   659  0000D8                     _oldSpeed:
   660                           	callstack 0
   661  0000D8                     	ds	2
   662  0000DA                     _currentSpeed:
   663                           	callstack 0
   664  0000DA                     	ds	2
   665  0000DC                     _setSpeed:
   666                           	callstack 0
   667  0000DC                     	ds	2
   668  0000DE                     _motPow:
   669                           	callstack 0
   670  0000DE                     	ds	2
   671  0000E0                     _battCheckCount:
   672                           	callstack 0
   673  0000E0                     	ds	2
   674  0000E2                     _oldDistRight:
   675                           	callstack 0
   676  0000E2                     	ds	2
   677  0000E4                     _reverseCount:
   678                           	callstack 0
   679  0000E4                     	ds	2
   680  0000E6                     _distRightM:
   681                           	callstack 0
   682  0000E6                     	ds	2
   683  0000E8                     _distLeftM:
   684                           	callstack 0
   685  0000E8                     	ds	2
   686                           
   687                           	psect	bssBANK1
   688  000100                     __pbssBANK1:
   689                           	callstack 0
   690  000100                     _dbuf:
   691                           	callstack 0
   692  000100                     	ds	32
   693                           
   694                           	psect	cstackBANK1
   695  000120                     __pcstackBANK1:
   696                           	callstack 0
   697  000120                     ?_vfprintf:
   698                           	callstack 0
   699  000120                     vfprintf@fp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x0
   703  000120                     	ds	2
   704  000122                     vfprintf@fmt:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x2
   708  000122                     	ds	2
   709  000124                     vfprintf@ap:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x4
   713  000124                     	ds	2
   714  000126                     vfprintf@cfmt:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x6
   718  000126                     	ds	2
   719  000128                     ?_printf:
   720                           	callstack 0
   721  000128                     printf@fmt:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x8
   725  000128                     	ds	4
   726  00012C                     printf@ap:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0xC
   730  00012C                     	ds	2
   731                           
   732                           	psect	cstackBANK0
   733  000060                     __pcstackBANK0:
   734                           	callstack 0
   735  000060                     ??_TMR5_Initialize:
   736  000060                     ??_PWM7_LoadDutyValue:
   737  000060                     ??_PWM8_LoadDutyValue:
   738  000060                     ??_PWM5_LoadDutyValue:
   739  000060                     ??_PWM6_LoadDutyValue:
   740  000060                     ??_ADCC_GetSingleConversion:
   741  000060                     ?___awdiv:
   742                           	callstack 0
   743  000060                     ?___aldiv:
   744                           	callstack 0
   745  000060                     ?___lodiv:
   746                           	callstack 0
   747  000060                     ?___lomod:
   748                           	callstack 0
   749  000060                     getCurve@deltaLeft:
   750                           	callstack 0
   751  000060                     ___awdiv@dividend:
   752                           	callstack 0
   753  000060                     fputc@c:
   754                           	callstack 0
   755  000060                     strlen@a:
   756                           	callstack 0
   757  000060                     ___aldiv@dividend:
   758                           	callstack 0
   759  000060                     ___lodiv@dividend:
   760                           	callstack 0
   761  000060                     ___lomod@dividend:
   762                           	callstack 0
   763                           
   764                           ; 8 bytes @ 0x0
   765  000060                     	ds	2
   766  000062                     ADCC_GetSingleConversion@channel:
   767                           	callstack 0
   768  000062                     getCurve@deltaRight:
   769                           	callstack 0
   770  000062                     setMotor@motorPower:
   771                           	callstack 0
   772  000062                     ___awdiv@divisor:
   773                           	callstack 0
   774  000062                     fputc@fp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2
   778  000062                     	ds	2
   779  000064                     ??_setMotor:
   780  000064                     ??_fputc:
   781  000064                     ___awdiv@counter:
   782                           	callstack 0
   783  000064                     ___aldiv@divisor:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x4
   787  000064                     	ds	1
   788  000065                     ___awdiv@sign:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x5
   792  000065                     	ds	1
   793  000066                     ___awdiv@quotient:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x6
   797  000066                     	ds	2
   798  000068                     ?___xxtofl:
   799                           	callstack 0
   800  000068                     ___aldiv@counter:
   801                           	callstack 0
   802  000068                     setSteering@steering:
   803                           	callstack 0
   804  000068                     ___xxtofl@val:
   805                           	callstack 0
   806  000068                     ___lodiv@divisor:
   807                           	callstack 0
   808  000068                     ___lomod@divisor:
   809                           	callstack 0
   810                           
   811                           ; 8 bytes @ 0x8
   812  000068                     	ds	1
   813  000069                     ___aldiv@sign:
   814                           	callstack 0
   815  000069                     fputs@s:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x9
   819  000069                     	ds	1
   820  00006A                     setSteering@steeringMode:
   821                           	callstack 0
   822  00006A                     ___aldiv@quotient:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0xA
   826  00006A                     	ds	1
   827  00006B                     ??_setSteering:
   828  00006B                     fputs@fp:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0xB
   832  00006B                     	ds	1
   833  00006C                     ??___xxtofl:
   834                           
   835                           ; 1 bytes @ 0xC
   836  00006C                     	ds	1
   837  00006D                     fputs@c:
   838                           	callstack 0
   839  00006D                     setSteering@steeringF:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0xD
   843  00006D                     	ds	1
   844  00006E                     actSpeed@speed:
   845                           	callstack 0
   846  00006E                     fputs@i:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0xE
   850  00006E                     	ds	1
   851  00006F                     setSteering@steeringB:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0xF
   855  00006F                     	ds	1
   856  000070                     ?_pad:
   857                           	callstack 0
   858  000070                     ___xxtofl@sign:
   859                           	callstack 0
   860  000070                     pad@fp:
   861                           	callstack 0
   862  000070                     ___lodiv@quotient:
   863                           	callstack 0
   864                           
   865                           ; 8 bytes @ 0x10
   866  000070                     	ds	1
   867  000071                     ___xxtofl@exp:
   868                           	callstack 0
   869  000071                     startAccell@i:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x11
   873  000071                     	ds	1
   874  000072                     pad@buf:
   875                           	callstack 0
   876  000072                     ___xxtofl@arg:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x12
   880  000072                     	ds	2
   881  000074                     pad@p:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x14
   885  000074                     	ds	2
   886  000076                     ??_pad:
   887  000076                     ?___fldiv:
   888                           	callstack 0
   889  000076                     ?___flmul:
   890                           	callstack 0
   891  000076                     ___flge@ff1:
   892                           	callstack 0
   893  000076                     ___fldiv@b:
   894                           	callstack 0
   895  000076                     ___flmul@b:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x16
   899  000076                     	ds	1
   900  000077                     pad@i:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x17
   904  000077                     	ds	1
   905  000078                     ___lodiv@counter:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x18
   909  000078                     	ds	1
   910  000079                     pad@w:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x19
   914  000079                     	ds	1
   915  00007A                     ___flge@ff2:
   916                           	callstack 0
   917  00007A                     ___fldiv@a:
   918                           	callstack 0
   919  00007A                     ___flmul@a:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x1A
   923  00007A                     	ds	1
   924  00007B                     ?_utoa:
   925                           	callstack 0
   926  00007B                     utoa@fp:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x1B
   930  00007B                     	ds	2
   931  00007D                     utoa@d:
   932                           	callstack 0
   933                           
   934                           ; 8 bytes @ 0x1D
   935  00007D                     	ds	1
   936  00007E                     ??___fldiv:
   937  00007E                     ??___flmul:
   938  00007E                     ??___flge:
   939                           
   940                           ; 1 bytes @ 0x1E
   941  00007E                     	ds	4
   942  000082                     ___flmul@sign:
   943                           	callstack 0
   944  000082                     ___fldiv@rem:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x22
   948  000082                     	ds	1
   949  000083                     ___flmul@aexp:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x23
   953  000083                     	ds	1
   954  000084                     ___flmul@grs:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x24
   958  000084                     	ds	1
   959  000085                     ??_utoa:
   960                           
   961                           ; 1 bytes @ 0x25
   962  000085                     	ds	1
   963  000086                     ___fldiv@sign:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x26
   967  000086                     	ds	1
   968  000087                     ___fldiv@new_exp:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x27
   972  000087                     	ds	1
   973  000088                     ___flmul@bexp:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x28
   977  000088                     	ds	1
   978  000089                     ___fldiv@grs:
   979                           	callstack 0
   980  000089                     ___flmul@prod:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x29
   984  000089                     	ds	4
   985  00008D                     ___fldiv@bexp:
   986                           	callstack 0
   987  00008D                     ___flmul@temp:
   988                           	callstack 0
   989  00008D                     utoa@p:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x2D
   993  00008D                     	ds	1
   994  00008E                     ___fldiv@aexp:
   995                           	callstack 0
   996                           
   997                           ; 1 bytes @ 0x2E
   998  00008E                     	ds	1
   999  00008F                     ?___fladd:
  1000                           	callstack 0
  1001  00008F                     utoa@w:
  1002                           	callstack 0
  1003  00008F                     ___fladd@b:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x2F
  1007  00008F                     	ds	2
  1008  000091                     utoa@n:
  1009                           	callstack 0
  1010                           
  1011                           ; 8 bytes @ 0x31
  1012  000091                     	ds	2
  1013  000093                     ___fladd@a:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x33
  1017  000093                     	ds	4
  1018  000097                     ??___fladd:
  1019                           
  1020                           ; 1 bytes @ 0x37
  1021  000097                     	ds	2
  1022  000099                     utoa@i:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x39
  1026  000099                     	ds	2
  1027  00009B                     ?_vfpfcnvrt:
  1028                           	callstack 0
  1029  00009B                     ___fladd@signs:
  1030                           	callstack 0
  1031  00009B                     vfpfcnvrt@fp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x3B
  1035  00009B                     	ds	1
  1036  00009C                     ___fladd@aexp:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x3C
  1040  00009C                     	ds	1
  1041  00009D                     ___fladd@bexp:
  1042                           	callstack 0
  1043  00009D                     vfpfcnvrt@fmt:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x3D
  1047  00009D                     	ds	1
  1048  00009E                     ___fladd@grs:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x3E
  1052  00009E                     	ds	1
  1053  00009F                     ?___fltol:
  1054                           	callstack 0
  1055  00009F                     vfpfcnvrt@ap:
  1056                           	callstack 0
  1057  00009F                     ___fltol@f1:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x3F
  1061  00009F                     	ds	2
  1062  0000A1                     ??_vfpfcnvrt:
  1063                           
  1064                           ; 1 bytes @ 0x41
  1065  0000A1                     	ds	2
  1066  0000A3                     ??___fltol:
  1067                           
  1068                           ; 1 bytes @ 0x43
  1069  0000A3                     	ds	2
  1070  0000A5                     vfpfcnvrt@llu:
  1071                           	callstack 0
  1072                           
  1073                           ; 8 bytes @ 0x45
  1074  0000A5                     	ds	2
  1075  0000A7                     ??_calcSteering:
  1076  0000A7                     ??_calcSpeed:
  1077  0000A7                     ??_calcMotorPow:
  1078                           
  1079                           ; 1 bytes @ 0x47
  1080  0000A7                     	ds	2
  1081  0000A9                     calcSteering@delta:
  1082                           	callstack 0
  1083  0000A9                     calcMotorPow@setSpeedDelta:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x49
  1087  0000A9                     	ds	2
  1088  0000AB                     calcSpeed@speed:
  1089                           	callstack 0
  1090  0000AB                     calcMotorPow@oldSpeedDelta:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x4B
  1094  0000AB                     	ds	2
  1095  0000AD                     calcMotorPow@addMPow:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x4D
  1099  0000AD                     	ds	1
  1100                           
  1101                           	psect	cstackCOMRAM
  1102  000001                     __pcstackCOMRAM:
  1103                           	callstack 0
  1104  000001                     CCP3_DefaultCallBack@capturedValue:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x0
  1108  000001                     	ds	2
  1109  000003                     ??_CCP3_CaptureISR:
  1110                           
  1111                           ; 1 bytes @ 0x2
  1112  000003                     	ds	2
  1113  000005                     CCP3_CaptureISR@module:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x4
  1117  000005                     	ds	2
  1118  000007                     CCP4_DefaultCallBack@capturedValue:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x6
  1122  000007                     	ds	2
  1123  000009                     ??_CCP4_CaptureISR:
  1124                           
  1125                           ; 1 bytes @ 0x8
  1126  000009                     	ds	2
  1127  00000B                     CCP4_CaptureISR@module:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xA
  1131  00000B                     	ds	2
  1132  00000D                     ?_TMR5_ReadTimer:
  1133                           	callstack 0
  1134  00000D                     TMR5_WriteTimer@timerVal:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0xC
  1138  00000D                     	ds	2
  1139  00000F                     ??_TMR5_ReadTimer:
  1140  00000F                     
  1141                           ; 1 bytes @ 0xE
  1142  00000F                     	ds	2
  1143  000011                     TMR5_ReadTimer@readVal:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x10
  1147  000011                     	ds	2
  1148  000013                     TMR5_ReadTimer@readValHigh:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x12
  1152  000013                     	ds	1
  1153  000014                     TMR5_ReadTimer@readValLow:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x13
  1157  000014                     	ds	1
  1158  000015                     ??_TMR5_GATE_ISR:
  1159                           
  1160                           ; 1 bytes @ 0x14
  1161  000015                     	ds	2
  1162  000017                     ??_UART1_tx_vect_isr:
  1163  000017                     
  1164                           ; 1 bytes @ 0x16
  1165  000017                     	ds	3
  1166  00001A                     ??_UART1_rx_vect_isr:
  1167                           
  1168                           ; 1 bytes @ 0x19
  1169  00001A                     	ds	3
  1170  00001D                     ??_TMR4_ISR:
  1171                           
  1172                           ; 1 bytes @ 0x1C
  1173  00001D                     	ds	3
  1174  000020                     ??_TMR3_Initialize:
  1175  000020                     ??_getCurve:
  1176  000020                     ?_strlen:
  1177                           	callstack 0
  1178  000020                     ?_ADCC_GetSingleConversion:
  1179                           	callstack 0
  1180  000020                     ?_actSpeed:
  1181                           	callstack 0
  1182  000020                     UART1_Write@txData:
  1183                           	callstack 0
  1184  000020                     INTERRUPT_Initialize@state:
  1185                           	callstack 0
  1186  000020                     ___fltol@sign1:
  1187                           	callstack 0
  1188  000020                     ___lomod@counter:
  1189                           	callstack 0
  1190  000020                     UART1_SetFramingErrorHandler@interruptHandler:
  1191                           	callstack 0
  1192  000020                     UART1_SetOverrunErrorHandler@interruptHandler:
  1193                           	callstack 0
  1194  000020                     UART1_SetErrorHandler@interruptHandler:
  1195                           	callstack 0
  1196  000020                     UART1_SetRxInterruptHandler@InterruptHandler:
  1197                           	callstack 0
  1198  000020                     UART1_SetTxInterruptHandler@InterruptHandler:
  1199                           	callstack 0
  1200  000020                     CCP3_SetCallBack@customCallBack:
  1201                           	callstack 0
  1202  000020                     CCP4_SetCallBack@customCallBack:
  1203                           	callstack 0
  1204  000020                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1205                           	callstack 0
  1206  000020                     TMR4_SetInterruptHandler@InterruptHandler:
  1207                           	callstack 0
  1208  000020                     PWM7_LoadDutyValue@dutyValue:
  1209                           	callstack 0
  1210  000020                     PWM8_LoadDutyValue@dutyValue:
  1211                           	callstack 0
  1212  000020                     PWM5_LoadDutyValue@dutyValue:
  1213                           	callstack 0
  1214  000020                     PWM6_LoadDutyValue@dutyValue:
  1215                           	callstack 0
  1216  000020                     strlen@s:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x1F
  1220  000020                     	ds	1
  1221  000021                     putch@txData:
  1222                           	callstack 0
  1223  000021                     ___fltol@exp1:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x20
  1227  000021                     	ds	1
  1228  000022                     
  1229                           ; 1 bytes @ 0x21
  1230 ;;
  1231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1232 ;;
  1233 ;; *************** function _main *****************
  1234 ;; Defined at:
  1235 ;;		line 9 in file "main.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels required when called: 20
  1255 ;; This function calls:
  1256 ;;		_SYSTEM_Initialize
  1257 ;;		_TMR4_SetInterruptHandler
  1258 ;;		_loop
  1259 ;; This function is called by:
  1260 ;;		Startup code after reset
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text0
  1265  0042EA                     __ptext0:
  1266                           	callstack 0
  1267  0042EA                     _main:
  1268                           	callstack 11
  1269  0042EA                     
  1270                           ;main.c: 10:     SYSTEM_Initialize();
  1271  0042EA  EC76  F01E         	call	_SYSTEM_Initialize	;wreg free
  1272  0042EE                     
  1273                           ;main.c: 11:     (INTCON0bits.GIEH = 1);
  1274  0042EE  8ED2               	bsf	210,7,c	;volatile
  1275  0042F0                     
  1276                           ;main.c: 12:     (INTCON0bits.GIEL = 1);
  1277  0042F0  8CD2               	bsf	210,6,c	;volatile
  1278                           
  1279                           ;main.c: 13:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1280  0042F2  0E32               	movlw	low _TMR4_10msISR
  1281  0042F4  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1282  0042F6  0E44               	movlw	high _TMR4_10msISR
  1283  0042F8  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1284  0042FA  EC07  F022         	call	_TMR4_SetInterruptHandler	;wreg free
  1285  0042FE                     l7090:
  1286                           
  1287                           ;main.c: 16:         loop();
  1288  0042FE  EC06  F015         	call	_loop	;wreg free
  1289  004302  EF7F  F021         	goto	l7090
  1290  004306  EF57  F000         	goto	start
  1291  00430A                     __end_of_main:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _loop *****************
  1295 ;; Defined at:
  1296 ;;		line 20 in file "main.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;Total ram usage:        0 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; Hardware stack levels required when called: 19
  1317 ;; This function calls:
  1318 ;;		___flge
  1319 ;;		___xxtofl
  1320 ;;		_calcMotorPow
  1321 ;;		_calcSpeed
  1322 ;;		_calcSteering
  1323 ;;		_checkBatt
  1324 ;;		_getBatteryVoltage
  1325 ;;		_getCurve
  1326 ;;		_getReverse
  1327 ;;		_printf
  1328 ;;		_setMotor
  1329 ;;		_setSteering
  1330 ;;		_startAccell
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text1
  1337  002A0C                     __ptext1:
  1338                           	callstack 0
  1339  002A0C                     _loop:
  1340                           	callstack 11
  1341  002A0C                     
  1342                           ;main.c: 21:     setMotor(0);
  1343  002A0C  0E00               	movlw	0
  1344  002A0E  0100               	movlb	0	; () banked
  1345  002A10  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  1346  002A12  0E00               	movlw	0
  1347  002A14  6F62               	movwf	setMotor@motorPower& (0+255),b
  1348  002A16  ECEE  F018         	call	_setMotor	;wreg free
  1349                           
  1350                           ;main.c: 22:     setSteering(0,Front);
  1351  002A1A  0E00               	movlw	0
  1352  002A1C  0100               	movlb	0	; () banked
  1353  002A1E  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1354  002A20  0E00               	movlw	0
  1355  002A22  6F68               	movwf	setSteering@steering& (0+255),b
  1356  002A24  0E03               	movlw	3
  1357  002A26  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1358  002A28  EC31  F014         	call	_setSteering	;wreg free
  1359  002A2C                     l1224:
  1360  002A2C  B8CB               	btfsc	203,4,c	;volatile
  1361  002A2E  EF1B  F015         	goto	u6371
  1362  002A32  EF1D  F015         	goto	u6370
  1363  002A36                     u6371:
  1364  002A36  EF16  F015         	goto	l1224
  1365  002A3A                     u6370:
  1366  002A3A                     l7036:
  1367  002A3A  5031               	movf	_cycle10ms^0,w,c	;volatile
  1368  002A3C  B4D8               	btfsc	status,2,c
  1369  002A3E  EF23  F015         	goto	u6381
  1370  002A42  EF25  F015         	goto	u6380
  1371  002A46                     u6381:
  1372  002A46  EF1D  F015         	goto	l7036
  1373  002A4A                     u6380:
  1374  002A4A                     
  1375                           ;main.c: 27:         cycle10ms = 0;
  1376  002A4A  0E00               	movlw	0
  1377  002A4C  6E31               	movwf	_cycle10ms^0,c	;volatile
  1378  002A4E                     
  1379                           ;main.c: 28:         getBatteryVoltage();
  1380  002A4E  EC3E  F021         	call	_getBatteryVoltage	;wreg free
  1381  002A52                     
  1382                           ;main.c: 30:     }while(BatteryVolt < ((3) * 409.6));
  1383  002A52  C024  F068         	movff	_BatteryVolt,___xxtofl@val
  1384  002A56  C025  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  1385  002A5A  0100               	movlb	0	; () banked
  1386  002A5C  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  1387  002A5E  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  1388  002A60  0E00               	movlw	0
  1389  002A62  EC55  F013         	call	___xxtofl
  1390  002A66  C068  F076         	movff	?___xxtofl,___flge@ff1
  1391  002A6A  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  1392  002A6E  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  1393  002A72  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  1394  002A76  0E9A               	movlw	154
  1395  002A78  0100               	movlb	0	; () banked
  1396  002A7A  6F7A               	movwf	___flge@ff2& (0+255),b
  1397  002A7C  0E99               	movlw	153
  1398  002A7E  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  1399  002A80  0E99               	movlw	153
  1400  002A82  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  1401  002A84  0E44               	movlw	68
  1402  002A86  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  1403  002A88  ECF2  F017         	call	___flge	;wreg free
  1404  002A8C  0100               	movlb	0	; () banked
  1405  002A8E  A0D8               	btfss	status,0,c
  1406  002A90  EF4C  F015         	goto	u6391
  1407  002A94  EF4E  F015         	goto	u6390
  1408  002A98                     u6391:
  1409  002A98  EF1D  F015         	goto	l7036
  1410  002A9C                     u6390:
  1411  002A9C                     
  1412                           ; BSR set to: 0
  1413                           ;main.c: 32:     startAccell();
  1414  002A9C  EC8B  F01C         	call	_startAccell	;wreg free
  1415  002AA0                     
  1416                           ;main.c: 34:     oldDistLeft = distLeft;
  1417  002AA0  C02E  F028         	movff	_distLeft,_oldDistLeft	;volatile
  1418  002AA4  C02F  F029         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1419  002AA8                     
  1420                           ;main.c: 35:     oldDistRight = distRight;
  1421  002AA8  C02C  F0E2         	movff	_distRight,_oldDistRight	;volatile
  1422  002AAC  C02D  F0E3         	movff	_distRight+1,_oldDistRight+1	;volatile
  1423  002AB0                     
  1424                           ;main.c: 36:     cycle10ms = 0;
  1425  002AB0  0E00               	movlw	0
  1426  002AB2  6E31               	movwf	_cycle10ms^0,c	;volatile
  1427  002AB4                     l7052:
  1428  002AB4  5031               	movf	_cycle10ms^0,w,c	;volatile
  1429  002AB6  B4D8               	btfsc	status,2,c
  1430  002AB8  EF60  F015         	goto	u6401
  1431  002ABC  EF62  F015         	goto	u6400
  1432  002AC0                     u6401:
  1433  002AC0  EF5A  F015         	goto	l7052
  1434  002AC4                     u6400:
  1435  002AC4                     
  1436                           ;main.c: 39:         cycle10ms = 0;
  1437  002AC4  0E00               	movlw	0
  1438  002AC6  6E31               	movwf	_cycle10ms^0,c	;volatile
  1439  002AC8                     
  1440                           ;main.c: 41:         if(!PORTBbits.RB5){
  1441  002AC8  BACB               	btfsc	203,5,c	;volatile
  1442  002ACA  EF69  F015         	goto	u6411
  1443  002ACE  EF6B  F015         	goto	u6410
  1444  002AD2                     u6411:
  1445  002AD2  EF7E  F015         	goto	l7062
  1446  002AD6                     u6410:
  1447  002AD6                     
  1448                           ;main.c: 42:             setSpeed = 0;
  1449  002AD6  0E00               	movlw	0
  1450  002AD8  0100               	movlb	0	; () banked
  1451  002ADA  6FDD               	movwf	(_setSpeed+1)& (0+255),b
  1452  002ADC  0E00               	movlw	0
  1453  002ADE  6FDC               	movwf	_setSpeed& (0+255),b
  1454                           
  1455                           ;main.c: 43:             actMotorPow = 0;
  1456  002AE0  0E00               	movlw	0
  1457  002AE2  6E27               	movwf	(_actMotorPow+1)^0,c
  1458  002AE4  0E00               	movlw	0
  1459  002AE6  6E26               	movwf	_actMotorPow^0,c
  1460  002AE8                     
  1461                           ; BSR set to: 0
  1462                           ;main.c: 44:             setSteering(0,Front);
  1463  002AE8  0E00               	movlw	0
  1464  002AEA  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1465  002AEC  0E00               	movlw	0
  1466  002AEE  6F68               	movwf	setSteering@steering& (0+255),b
  1467  002AF0  0E03               	movlw	3
  1468  002AF2  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1469  002AF4  EC31  F014         	call	_setSteering	;wreg free
  1470                           
  1471                           ;main.c: 45:             break;
  1472  002AF8  EFB2  F015         	goto	l1241
  1473  002AFC                     l7062:
  1474                           
  1475                           ;main.c: 48:         ++tempCNT;
  1476  002AFC  0100               	movlb	0	; () banked
  1477  002AFE  4BD4               	infsnz	_tempCNT& (0+255),f,b
  1478  002B00  2BD5               	incf	(_tempCNT+1)& (0+255),f,b
  1479  002B02                     
  1480                           ; BSR set to: 0
  1481                           ;main.c: 49:         if(tempCNT > 1000){
  1482  002B02  BFD5               	btfsc	(_tempCNT+1)& (0+255),7,b
  1483  002B04  EF8D  F015         	goto	u6421
  1484  002B08  0EE9               	movlw	233
  1485  002B0A  5DD4               	subwf	_tempCNT& (0+255),w,b
  1486  002B0C  0E03               	movlw	3
  1487  002B0E  59D5               	subwfb	(_tempCNT+1)& (0+255),w,b
  1488  002B10  A0D8               	btfss	status,0,c
  1489  002B12  EF8D  F015         	goto	u6421
  1490  002B16  EF8F  F015         	goto	u6420
  1491  002B1A                     u6421:
  1492  002B1A  EF9A  F015         	goto	l7070
  1493  002B1E                     u6420:
  1494  002B1E                     
  1495                           ; BSR set to: 0
  1496                           ;main.c: 50:             tempCNT = 0;
  1497  002B1E  0E00               	movlw	0
  1498  002B20  6FD5               	movwf	(_tempCNT+1)& (0+255),b
  1499  002B22  0E00               	movlw	0
  1500  002B24  6FD4               	movwf	_tempCNT& (0+255),b
  1501  002B26                     
  1502                           ; BSR set to: 0
  1503                           ;main.c: 51:             printf("10s passed\n");
  1504  002B26  0E2A               	movlw	low STR_1
  1505  002B28  0101               	movlb	1	; () banked
  1506  002B2A  6F28               	movwf	printf@fmt& (0+255),b
  1507  002B2C  0E10               	movlw	high STR_1
  1508  002B2E  6F29               	movwf	(printf@fmt+1)& (0+255),b
  1509  002B30  EC16  F021         	call	_printf	;wreg free
  1510  002B34                     l7070:
  1511                           
  1512                           ;main.c: 54:         if(checkBatt()){
  1513  002B34  EC41  F01C         	call	_checkBatt	;wreg free
  1514  002B38  0900               	iorlw	0
  1515  002B3A  B4D8               	btfsc	status,2,c
  1516  002B3C  EFA2  F015         	goto	u6431
  1517  002B40  EFA4  F015         	goto	u6430
  1518  002B44                     u6431:
  1519  002B44  EFA6  F015         	goto	l7074
  1520  002B48                     u6430:
  1521  002B48  EFB2  F015         	goto	l1241
  1522  002B4C                     l7074:
  1523                           
  1524                           ;main.c: 58:         getCurve();
  1525  002B4C  EC72  F012         	call	_getCurve	;wreg free
  1526  002B50                     
  1527                           ;main.c: 59:         getReverse();
  1528  002B50  EC58  F016         	call	_getReverse	;wreg free
  1529  002B54                     
  1530                           ;main.c: 61:         calcSteering();
  1531  002B54  EC8B  F011         	call	_calcSteering	;wreg free
  1532  002B58                     
  1533                           ;main.c: 62:         calcSpeed();
  1534  002B58  EC78  F00E         	call	_calcSpeed	;wreg free
  1535  002B5C                     
  1536                           ;main.c: 63:         calcMotorPow();
  1537  002B5C  ECB3  F015         	call	_calcMotorPow	;wreg free
  1538  002B60  EF5A  F015         	goto	l7052
  1539  002B64                     l1241:
  1540  002B64  0012               	return		;funcret
  1541  002B66                     __end_of_loop:
  1542                           	callstack 0
  1543                           
  1544 ;; *************** function _startAccell *****************
  1545 ;; Defined at:
  1546 ;;		line 102 in file "main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  i               2   17[BANK0 ] short 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;Total ram usage:        2 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 10
  1567 ;; This function calls:
  1568 ;;		_setMotor
  1569 ;;		_setSteering
  1570 ;; This function is called by:
  1571 ;;		_loop
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text2
  1576  003916                     __ptext2:
  1577                           	callstack 0
  1578  003916                     _startAccell:
  1579                           	callstack 19
  1580  003916                     
  1581                           ;main.c: 103:     setSteering(0,Front);
  1582  003916  0E00               	movlw	0
  1583  003918  0100               	movlb	0	; () banked
  1584  00391A  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1585  00391C  0E00               	movlw	0
  1586  00391E  6F68               	movwf	setSteering@steering& (0+255),b
  1587  003920  0E03               	movlw	3
  1588  003922  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1589  003924  EC31  F014         	call	_setSteering	;wreg free
  1590  003928                     
  1591                           ;main.c: 104:     actMotorPow = (100) - (int16_t)((250) / (10));
  1592  003928  0E00               	movlw	0
  1593  00392A  6E27               	movwf	(_actMotorPow+1)^0,c
  1594  00392C  0E4B               	movlw	75
  1595  00392E  6E26               	movwf	_actMotorPow^0,c
  1596  003930                     
  1597                           ;main.c: 105:     for(int16_t i = 0; i < (int16_t)((10) - ((100) / (int16_t)((250) / (10
      +                          )))); ++i){
  1598  003930  0E00               	movlw	0
  1599  003932  0100               	movlb	0	; () banked
  1600  003934  6F72               	movwf	(startAccell@i+1)& (0+255),b
  1601  003936  0E00               	movlw	0
  1602  003938  6F71               	movwf	startAccell@i& (0+255),b
  1603  00393A                     l6740:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;main.c: 106:         actMotorPow += (int16_t)((250) / (10));
  1607  00393A  0E19               	movlw	25
  1608  00393C  2626               	addwf	_actMotorPow^0,f,c
  1609  00393E  0E00               	movlw	0
  1610  003940  2227               	addwfc	(_actMotorPow+1)^0,f,c
  1611  003942                     
  1612                           ; BSR set to: 0
  1613                           ;main.c: 107:         setMotor(actMotorPow);
  1614  003942  C026  F062         	movff	_actMotorPow,setMotor@motorPower
  1615  003946  C027  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  1616  00394A  ECEE  F018         	call	_setMotor	;wreg free
  1617  00394E                     
  1618                           ;main.c: 108:         cycle10ms = 0;
  1619  00394E  0E00               	movlw	0
  1620  003950  6E31               	movwf	_cycle10ms^0,c	;volatile
  1621  003952                     l6746:
  1622  003952  5031               	movf	_cycle10ms^0,w,c	;volatile
  1623  003954  B4D8               	btfsc	status,2,c
  1624  003956  EFAF  F01C         	goto	u5951
  1625  00395A  EFB1  F01C         	goto	u5950
  1626  00395E                     u5951:
  1627  00395E  EFA9  F01C         	goto	l6746
  1628  003962                     u5950:
  1629  003962                     
  1630                           ;main.c: 110:     }
  1631  003962  0100               	movlb	0	; () banked
  1632  003964  4B71               	infsnz	startAccell@i& (0+255),f,b
  1633  003966  2B72               	incf	(startAccell@i+1)& (0+255),f,b
  1634  003968                     
  1635                           ; BSR set to: 0
  1636  003968  BF72               	btfsc	(startAccell@i+1)& (0+255),7,b
  1637  00396A  EFC0  F01C         	goto	u5961
  1638  00396E  5172               	movf	(startAccell@i+1)& (0+255),w,b
  1639  003970  E109               	bnz	u5960
  1640  003972  0E06               	movlw	6
  1641  003974  5D71               	subwf	startAccell@i& (0+255),w,b
  1642  003976  A0D8               	btfss	status,0,c
  1643  003978  EFC0  F01C         	goto	u5961
  1644  00397C  EFC2  F01C         	goto	u5960
  1645  003980                     u5961:
  1646  003980  EF9D  F01C         	goto	l6740
  1647  003984                     u5960:
  1648  003984                     
  1649                           ; BSR set to: 0
  1650                           ;main.c: 112:     cycle10ms = 0;
  1651  003984  0E00               	movlw	0
  1652  003986  6E31               	movwf	_cycle10ms^0,c	;volatile
  1653  003988                     l6754:
  1654  003988  0E19               	movlw	25
  1655  00398A  6431               	cpfsgt	_cycle10ms^0,c	;volatile
  1656  00398C  EFCA  F01C         	goto	u5971
  1657  003990  EFCC  F01C         	goto	u5970
  1658  003994                     u5971:
  1659  003994  EFC4  F01C         	goto	l6754
  1660  003998                     u5970:
  1661  003998  0012               	return		;funcret
  1662  00399A                     __end_of_startAccell:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _getReverse *****************
  1666 ;; Defined at:
  1667 ;;		line 183 in file "main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 17
  1688 ;; This function calls:
  1689 ;;		_printf
  1690 ;; This function is called by:
  1691 ;;		_loop
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text3
  1696  002CB0                     __ptext3:
  1697                           	callstack 0
  1698  002CB0                     _getReverse:
  1699                           	callstack 12
  1700  002CB0                     
  1701                           ;main.c: 184:     if(distFront < (15)){
  1702  002CB0  503F               	movf	(_distFront+1)^0,w,c	;volatile
  1703  002CB2  E107               	bnz	u6121
  1704  002CB4  0E0F               	movlw	15
  1705  002CB6  5C3E               	subwf	_distFront^0,w,c	;volatile
  1706  002CB8  B0D8               	btfsc	status,0,c
  1707  002CBA  EF61  F016         	goto	u6121
  1708  002CBE  EF63  F016         	goto	u6120
  1709  002CC2                     u6121:
  1710  002CC2  EF68  F016         	goto	l6838
  1711  002CC6                     u6120:
  1712  002CC6                     
  1713                           ;main.c: 185:         ++reverseCount;
  1714  002CC6  0100               	movlb	0	; () banked
  1715  002CC8  4BE4               	infsnz	_reverseCount& (0+255),f,b
  1716  002CCA  2BE5               	incf	(_reverseCount+1)& (0+255),f,b
  1717                           
  1718                           ;main.c: 186:     }else{
  1719  002CCC  EF6D  F016         	goto	l6840
  1720  002CD0                     l6838:
  1721                           
  1722                           ;main.c: 187:         reverseCount = 0;
  1723  002CD0  0E00               	movlw	0
  1724  002CD2  0100               	movlb	0	; () banked
  1725  002CD4  6FE5               	movwf	(_reverseCount+1)& (0+255),b
  1726  002CD6  0E00               	movlw	0
  1727  002CD8  6FE4               	movwf	_reverseCount& (0+255),b
  1728  002CDA                     l6840:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 190:     if(reverseCount > (50)){
  1732  002CDA  51E5               	movf	(_reverseCount+1)& (0+255),w,b
  1733  002CDC  E109               	bnz	u6130
  1734  002CDE  0E33               	movlw	51
  1735  002CE0  5DE4               	subwf	_reverseCount& (0+255),w,b
  1736  002CE2  A0D8               	btfss	status,0,c
  1737  002CE4  EF76  F016         	goto	u6131
  1738  002CE8  EF78  F016         	goto	u6130
  1739  002CEC                     u6131:
  1740  002CEC  EFE6  F016         	goto	l1307
  1741  002CF0                     u6130:
  1742  002CF0                     
  1743                           ; BSR set to: 0
  1744                           ;main.c: 191:         ++reverseTime;
  1745  002CF0  4BD6               	infsnz	_reverseTime& (0+255),f,b
  1746  002CF2  2BD7               	incf	(_reverseTime+1)& (0+255),f,b
  1747  002CF4                     
  1748                           ; BSR set to: 0
  1749                           ;main.c: 193:         if(driveMode != ReverseRight && driveMode != ReverseLeft){
  1750  002CF4  0E02               	movlw	2
  1751  002CF6  1833               	xorwf	_driveMode^0,w,c
  1752  002CF8  B4D8               	btfsc	status,2,c
  1753  002CFA  EF81  F016         	goto	u6141
  1754  002CFE  EF83  F016         	goto	u6140
  1755  002D02                     u6141:
  1756  002D02  EFAB  F016         	goto	l6858
  1757  002D06                     u6140:
  1758  002D06                     
  1759                           ; BSR set to: 0
  1760  002D06  0E03               	movlw	3
  1761  002D08  1833               	xorwf	_driveMode^0,w,c
  1762  002D0A  B4D8               	btfsc	status,2,c
  1763  002D0C  EF8A  F016         	goto	u6151
  1764  002D10  EF8C  F016         	goto	u6150
  1765  002D14                     u6151:
  1766  002D14  EFAB  F016         	goto	l6858
  1767  002D18                     u6150:
  1768  002D18                     
  1769                           ; BSR set to: 0
  1770                           ;main.c: 194:             if(distLeft > distRight){
  1771  002D18  502E               	movf	_distLeft^0,w,c	;volatile
  1772  002D1A  5C2C               	subwf	_distRight^0,w,c	;volatile
  1773  002D1C  502F               	movf	(_distLeft+1)^0,w,c	;volatile
  1774  002D1E  582D               	subwfb	(_distRight+1)^0,w,c	;volatile
  1775  002D20  B0D8               	btfsc	status,0,c
  1776  002D22  EF95  F016         	goto	u6161
  1777  002D26  EF97  F016         	goto	u6160
  1778  002D2A                     u6161:
  1779  002D2A  EFA2  F016         	goto	l6854
  1780  002D2E                     u6160:
  1781  002D2E                     
  1782                           ; BSR set to: 0
  1783                           ;main.c: 195:                 printf("ReverseRigth\n");
  1784  002D2E  0E0F               	movlw	low STR_3
  1785  002D30  0101               	movlb	1	; () banked
  1786  002D32  6F28               	movwf	printf@fmt& (0+255),b
  1787  002D34  0E10               	movlw	high STR_3
  1788  002D36  6F29               	movwf	(printf@fmt+1)& (0+255),b
  1789  002D38  EC16  F021         	call	_printf	;wreg free
  1790  002D3C                     
  1791                           ;main.c: 196:                 driveMode = ReverseRight;
  1792  002D3C  0E02               	movlw	2
  1793  002D3E  6E33               	movwf	_driveMode^0,c
  1794                           
  1795                           ;main.c: 197:             }else{
  1796  002D40  EFAB  F016         	goto	l6858
  1797  002D44                     l6854:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;main.c: 198:                 printf("ReverseLeft\n");
  1801  002D44  0E1D               	movlw	low STR_4
  1802  002D46  0101               	movlb	1	; () banked
  1803  002D48  6F28               	movwf	printf@fmt& (0+255),b
  1804  002D4A  0E10               	movlw	high STR_4
  1805  002D4C  6F29               	movwf	(printf@fmt+1)& (0+255),b
  1806  002D4E  EC16  F021         	call	_printf	;wreg free
  1807  002D52                     
  1808                           ;main.c: 199:                 driveMode = ReverseLeft;
  1809  002D52  0E03               	movlw	3
  1810  002D54  6E33               	movwf	_driveMode^0,c
  1811  002D56                     l6858:
  1812                           
  1813                           ;main.c: 203:         if(distFront > (30) || reverseTime > (300)){
  1814  002D56  503F               	movf	(_distFront+1)^0,w,c	;volatile
  1815  002D58  E107               	bnz	u6171
  1816  002D5A  0E1F               	movlw	31
  1817  002D5C  5C3E               	subwf	_distFront^0,w,c	;volatile
  1818  002D5E  B0D8               	btfsc	status,0,c
  1819  002D60  EFB4  F016         	goto	u6171
  1820  002D64  EFB6  F016         	goto	u6170
  1821  002D68                     u6171:
  1822  002D68  EFC5  F016         	goto	l6862
  1823  002D6C                     u6170:
  1824  002D6C  0100               	movlb	0	; () banked
  1825  002D6E  BFD7               	btfsc	(_reverseTime+1)& (0+255),7,b
  1826  002D70  EFC3  F016         	goto	u6181
  1827  002D74  0E2D               	movlw	45
  1828  002D76  5DD6               	subwf	_reverseTime& (0+255),w,b
  1829  002D78  0E01               	movlw	1
  1830  002D7A  59D7               	subwfb	(_reverseTime+1)& (0+255),w,b
  1831  002D7C  A0D8               	btfss	status,0,c
  1832  002D7E  EFC3  F016         	goto	u6181
  1833  002D82  EFC5  F016         	goto	u6180
  1834  002D86                     u6181:
  1835  002D86  EFE6  F016         	goto	l1307
  1836  002D8A                     u6180:
  1837  002D8A                     l6862:
  1838                           
  1839                           ;main.c: 204:             printf("Stop Reverse\n");
  1840  002D8A  0E01               	movlw	low STR_5
  1841  002D8C  0101               	movlb	1	; () banked
  1842  002D8E  6F28               	movwf	printf@fmt& (0+255),b
  1843  002D90  0E10               	movlw	high STR_5
  1844  002D92  6F29               	movwf	(printf@fmt+1)& (0+255),b
  1845  002D94  EC16  F021         	call	_printf	;wreg free
  1846  002D98                     
  1847                           ;main.c: 205:             if(distLeft > distRight){
  1848  002D98  502E               	movf	_distLeft^0,w,c	;volatile
  1849  002D9A  5C2C               	subwf	_distRight^0,w,c	;volatile
  1850  002D9C  502F               	movf	(_distLeft+1)^0,w,c	;volatile
  1851  002D9E  582D               	subwfb	(_distRight+1)^0,w,c	;volatile
  1852  002DA0  B0D8               	btfsc	status,0,c
  1853  002DA2  EFD5  F016         	goto	u6191
  1854  002DA6  EFD7  F016         	goto	u6190
  1855  002DAA                     u6191:
  1856  002DAA  EFDB  F016         	goto	l6868
  1857  002DAE                     u6190:
  1858  002DAE                     
  1859                           ;main.c: 206:                 driveMode = CurveLeft;
  1860  002DAE  0E04               	movlw	4
  1861  002DB0  6E33               	movwf	_driveMode^0,c
  1862                           
  1863                           ;main.c: 207:             }else{
  1864  002DB2  EFDD  F016         	goto	l1306
  1865  002DB6                     l6868:
  1866                           
  1867                           ;main.c: 208:                 driveMode = CurveRight;
  1868  002DB6  0E05               	movlw	5
  1869  002DB8  6E33               	movwf	_driveMode^0,c
  1870  002DBA                     l1306:
  1871                           
  1872                           ;main.c: 210:              reverseCount = 0;
  1873  002DBA  0E00               	movlw	0
  1874  002DBC  0100               	movlb	0	; () banked
  1875  002DBE  6FE5               	movwf	(_reverseCount+1)& (0+255),b
  1876  002DC0  0E00               	movlw	0
  1877  002DC2  6FE4               	movwf	_reverseCount& (0+255),b
  1878                           
  1879                           ;main.c: 211:              reverseTime = 0;
  1880  002DC4  0E00               	movlw	0
  1881  002DC6  6FD7               	movwf	(_reverseTime+1)& (0+255),b
  1882  002DC8  0E00               	movlw	0
  1883  002DCA  6FD6               	movwf	_reverseTime& (0+255),b
  1884  002DCC                     l1307:
  1885                           
  1886                           ; BSR set to: 0
  1887  002DCC  0012               	return		;funcret
  1888  002DCE                     __end_of_getReverse:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _getCurve *****************
  1892 ;; Defined at:
  1893 ;;		line 116 in file "main.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  deltaRight      2    2[BANK0 ] short 
  1898 ;;  deltaLeft       2    0[BANK0 ] short 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;Total ram usage:        6 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 8
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_loop
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text4
  1923  0024E4                     __ptext4:
  1924                           	callstack 0
  1925  0024E4                     _getCurve:
  1926                           	callstack 21
  1927  0024E4                     
  1928                           ;main.c: 117:     int16_t deltaLeft;;main.c: 118:     int16_t deltaRight;;main.c: 120:  
      +                             switch (curveMode){
  1929  0024E4  EF2F  F013         	goto	l6828
  1930  0024E8                     l6780:
  1931                           
  1932                           ;main.c: 122:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1933  0024E8  5028               	movf	_oldDistLeft^0,w,c
  1934  0024EA  5C2E               	subwf	_distLeft^0,w,c	;volatile
  1935  0024EC  0100               	movlb	0	; () banked
  1936  0024EE  6F60               	movwf	getCurve@deltaLeft& (0+255),b
  1937  0024F0  5029               	movf	(_oldDistLeft+1)^0,w,c
  1938  0024F2  582F               	subwfb	(_distLeft+1)^0,w,c	;volatile
  1939  0024F4  6F61               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1940                           
  1941                           ;main.c: 123:             deltaRight = (int16_t)(distRight - oldDistRight);
  1942  0024F6  51E2               	movf	_oldDistRight& (0+255),w,b
  1943  0024F8  5C2C               	subwf	_distRight^0,w,c	;volatile
  1944  0024FA  6F62               	movwf	getCurve@deltaRight& (0+255),b
  1945  0024FC  51E3               	movf	(_oldDistRight+1)& (0+255),w,b
  1946  0024FE  582D               	subwfb	(_distRight+1)^0,w,c	;volatile
  1947  002500  6F63               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1948                           
  1949                           ;main.c: 126:             if(deltaLeft > (40) && deltaLeft < (300) && oldDistLeft < (150
      +                          )){
  1950  002502  BF61               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1951  002504  EF8D  F012         	goto	u6001
  1952  002508  5161               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1953  00250A  E109               	bnz	u6000
  1954  00250C  0E29               	movlw	41
  1955  00250E  5D60               	subwf	getCurve@deltaLeft& (0+255),w,b
  1956  002510  A0D8               	btfss	status,0,c
  1957  002512  EF8D  F012         	goto	u6001
  1958  002516  EF8F  F012         	goto	u6000
  1959  00251A                     u6001:
  1960  00251A  EFB0  F012         	goto	l6788
  1961  00251E                     u6000:
  1962  00251E                     
  1963                           ; BSR set to: 0
  1964  00251E  BF61               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1965  002520  EF9D  F012         	goto	u6010
  1966  002524  0E2C               	movlw	44
  1967  002526  5D60               	subwf	getCurve@deltaLeft& (0+255),w,b
  1968  002528  0E01               	movlw	1
  1969  00252A  5961               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  1970  00252C  B0D8               	btfsc	status,0,c
  1971  00252E  EF9B  F012         	goto	u6011
  1972  002532  EF9D  F012         	goto	u6010
  1973  002536                     u6011:
  1974  002536  EFB0  F012         	goto	l6788
  1975  00253A                     u6010:
  1976  00253A                     
  1977                           ; BSR set to: 0
  1978  00253A  5029               	movf	(_oldDistLeft+1)^0,w,c
  1979  00253C  E107               	bnz	u6021
  1980  00253E  0E96               	movlw	150
  1981  002540  5C28               	subwf	_oldDistLeft^0,w,c
  1982  002542  B0D8               	btfsc	status,0,c
  1983  002544  EFA6  F012         	goto	u6021
  1984  002548  EFA8  F012         	goto	u6020
  1985  00254C                     u6021:
  1986  00254C  EFB0  F012         	goto	l6788
  1987  002550                     u6020:
  1988  002550                     
  1989                           ; BSR set to: 0
  1990                           ;main.c: 127:                 delay = 0;
  1991  002550  0E00               	movlw	0
  1992  002552  6E30               	movwf	_delay^0,c
  1993                           
  1994                           ;main.c: 128:                 curveMode = BeforeCurve;
  1995  002554  0E01               	movlw	1
  1996  002556  6E32               	movwf	_curveMode^0,c
  1997                           
  1998                           ;main.c: 129:                 driveMode = CurveLeft;
  1999  002558  0E04               	movlw	4
  2000  00255A  6E33               	movwf	_driveMode^0,c
  2001                           
  2002                           ;main.c: 132:             } else if(deltaRight > (40) && deltaRight < (300) && oldDistRi
      +                          ght < (150)){
  2003  00255C  EF4C  F013         	goto	l1277
  2004  002560                     l6788:
  2005                           
  2006                           ; BSR set to: 0
  2007  002560  BF63               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2008  002562  EFBC  F012         	goto	u6031
  2009  002566  5163               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2010  002568  E109               	bnz	u6030
  2011  00256A  0E29               	movlw	41
  2012  00256C  5D62               	subwf	getCurve@deltaRight& (0+255),w,b
  2013  00256E  A0D8               	btfss	status,0,c
  2014  002570  EFBC  F012         	goto	u6031
  2015  002574  EFBE  F012         	goto	u6030
  2016  002578                     u6031:
  2017  002578  EF4C  F013         	goto	l1277
  2018  00257C                     u6030:
  2019  00257C                     
  2020                           ; BSR set to: 0
  2021  00257C  BF63               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2022  00257E  EFCC  F012         	goto	u6040
  2023  002582  0E2C               	movlw	44
  2024  002584  5D62               	subwf	getCurve@deltaRight& (0+255),w,b
  2025  002586  0E01               	movlw	1
  2026  002588  5963               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2027  00258A  B0D8               	btfsc	status,0,c
  2028  00258C  EFCA  F012         	goto	u6041
  2029  002590  EFCC  F012         	goto	u6040
  2030  002594                     u6041:
  2031  002594  EF4C  F013         	goto	l1277
  2032  002598                     u6040:
  2033  002598                     
  2034                           ; BSR set to: 0
  2035  002598  51E3               	movf	(_oldDistRight+1)& (0+255),w,b
  2036  00259A  E107               	bnz	u6051
  2037  00259C  0E96               	movlw	150
  2038  00259E  5DE2               	subwf	_oldDistRight& (0+255),w,b
  2039  0025A0  B0D8               	btfsc	status,0,c
  2040  0025A2  EFD5  F012         	goto	u6051
  2041  0025A6  EFD7  F012         	goto	u6050
  2042  0025AA                     u6051:
  2043  0025AA  EF4C  F013         	goto	l1277
  2044  0025AE                     u6050:
  2045  0025AE                     
  2046                           ; BSR set to: 0
  2047                           ;main.c: 133:                 delay = 0;
  2048  0025AE  0E00               	movlw	0
  2049  0025B0  6E30               	movwf	_delay^0,c
  2050                           
  2051                           ;main.c: 134:                 curveMode = BeforeCurve;
  2052  0025B2  0E01               	movlw	1
  2053  0025B4  6E32               	movwf	_curveMode^0,c
  2054                           
  2055                           ;main.c: 135:                 driveMode = CurveRight;
  2056  0025B6  0E05               	movlw	5
  2057  0025B8  6E33               	movwf	_driveMode^0,c
  2058  0025BA  EF4C  F013         	goto	l1277
  2059  0025BE                     l6796:
  2060                           
  2061                           ;main.c: 143:             if(delay > (25)){
  2062  0025BE  0E19               	movlw	25
  2063  0025C0  6430               	cpfsgt	_delay^0,c
  2064  0025C2  EFE5  F012         	goto	u6061
  2065  0025C6  EFE7  F012         	goto	u6060
  2066  0025CA                     u6061:
  2067  0025CA  EFED  F012         	goto	l6800
  2068  0025CE                     u6060:
  2069  0025CE                     
  2070                           ;main.c: 144:                 delay = 0;
  2071  0025CE  0E00               	movlw	0
  2072  0025D0  6E30               	movwf	_delay^0,c
  2073                           
  2074                           ;main.c: 145:                 curveMode = InCurve;
  2075  0025D2  0E02               	movlw	2
  2076  0025D4  6E32               	movwf	_curveMode^0,c
  2077                           
  2078                           ;main.c: 147:             } else {
  2079  0025D6  EF4C  F013         	goto	l1277
  2080  0025DA                     l6800:
  2081                           
  2082                           ;main.c: 148:                 delay++;
  2083  0025DA  2A30               	incf	_delay^0,f,c
  2084  0025DC  EF4C  F013         	goto	l1277
  2085  0025E0                     l6802:
  2086                           
  2087                           ;main.c: 152:             if(delay > (25)){
  2088  0025E0  0E19               	movlw	25
  2089  0025E2  6430               	cpfsgt	_delay^0,c
  2090  0025E4  EFF6  F012         	goto	u6071
  2091  0025E8  EFF8  F012         	goto	u6070
  2092  0025EC                     u6071:
  2093  0025EC  EFED  F012         	goto	l6800
  2094  0025F0                     u6070:
  2095  0025F0                     
  2096                           ;main.c: 159:                 if(distLeft < (35) || distRight < (35) || distFront > (180
      +                          )){
  2097  0025F0  502F               	movf	(_distLeft+1)^0,w,c	;volatile
  2098  0025F2  E109               	bnz	u6080
  2099  0025F4  0E23               	movlw	35
  2100  0025F6  5C2E               	subwf	_distLeft^0,w,c	;volatile
  2101  0025F8  A0D8               	btfss	status,0,c
  2102  0025FA  EF01  F013         	goto	u6081
  2103  0025FE  EF03  F013         	goto	u6080
  2104  002602                     u6081:
  2105  002602  EF19  F013         	goto	l6816
  2106  002606                     u6080:
  2107  002606  502D               	movf	(_distRight+1)^0,w,c	;volatile
  2108  002608  E109               	bnz	u6090
  2109  00260A  0E23               	movlw	35
  2110  00260C  5C2C               	subwf	_distRight^0,w,c	;volatile
  2111  00260E  A0D8               	btfss	status,0,c
  2112  002610  EF0C  F013         	goto	u6091
  2113  002614  EF0E  F013         	goto	u6090
  2114  002618                     u6091:
  2115  002618  EF19  F013         	goto	l6816
  2116  00261C                     u6090:
  2117  00261C  503F               	movf	(_distFront+1)^0,w,c	;volatile
  2118  00261E  E109               	bnz	u6100
  2119  002620  0EB5               	movlw	181
  2120  002622  5C3E               	subwf	_distFront^0,w,c	;volatile
  2121  002624  A0D8               	btfss	status,0,c
  2122  002626  EF17  F013         	goto	u6101
  2123  00262A  EF19  F013         	goto	u6100
  2124  00262E                     u6101:
  2125  00262E  EF4C  F013         	goto	l1277
  2126  002632                     u6100:
  2127  002632                     l6816:
  2128                           
  2129                           ;main.c: 160:                     delay = 0;
  2130  002632  0E00               	movlw	0
  2131  002634  6E30               	movwf	_delay^0,c
  2132                           
  2133                           ;main.c: 161:                     curveMode = AfterCurve;
  2134  002636  0E03               	movlw	3
  2135  002638  6E32               	movwf	_curveMode^0,c
  2136                           
  2137                           ;main.c: 162:                     driveMode = Straight;
  2138  00263A  0E00               	movlw	0
  2139  00263C  6E33               	movwf	_driveMode^0,c
  2140  00263E  EF4C  F013         	goto	l1277
  2141  002642                     l6820:
  2142                           
  2143                           ;main.c: 170:             if(delay > (5)){
  2144  002642  0E05               	movlw	5
  2145  002644  6430               	cpfsgt	_delay^0,c
  2146  002646  EF27  F013         	goto	u6111
  2147  00264A  EF29  F013         	goto	u6110
  2148  00264E                     u6111:
  2149  00264E  EFED  F012         	goto	l6800
  2150  002652                     u6110:
  2151  002652                     
  2152                           ;main.c: 171:                 delay = 0;
  2153  002652  0E00               	movlw	0
  2154  002654  6E30               	movwf	_delay^0,c
  2155                           
  2156                           ;main.c: 172:                 curveMode = OutCurve;
  2157  002656  0E00               	movlw	0
  2158  002658  6E32               	movwf	_curveMode^0,c
  2159                           
  2160                           ;main.c: 174:             } else {
  2161  00265A  EF4C  F013         	goto	l1277
  2162  00265E                     l6828:
  2163  00265E  5032               	movf	_curveMode^0,w,c
  2164  002660  6E20               	movwf	??_getCurve^0,c
  2165  002662  6A21               	clrf	(??_getCurve+1)^0,c
  2166                           
  2167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2168                           ; Switch size 1, requested type "simple"
  2169                           ; Number of cases is 1, Range of values is 0 to 0
  2170                           ; switch strategies available:
  2171                           ; Name         Instructions Cycles
  2172                           ; simple_byte            4     3 (average)
  2173                           ;	Chosen strategy is simple_byte
  2174  002664  5021               	movf	(??_getCurve+1)^0,w,c
  2175  002666  0A00               	xorlw	0	; case 0
  2176  002668  B4D8               	btfsc	status,2,c
  2177  00266A  EF39  F013         	goto	l7232
  2178  00266E  EF4C  F013         	goto	l1277
  2179  002672                     l7232:
  2180                           
  2181                           ; Switch size 1, requested type "simple"
  2182                           ; Number of cases is 4, Range of values is 0 to 3
  2183                           ; switch strategies available:
  2184                           ; Name         Instructions Cycles
  2185                           ; simple_byte           13     7 (average)
  2186                           ;	Chosen strategy is simple_byte
  2187  002672  5020               	movf	??_getCurve^0,w,c
  2188  002674  0A00               	xorlw	0	; case 0
  2189  002676  B4D8               	btfsc	status,2,c
  2190  002678  EF74  F012         	goto	l6780
  2191  00267C  0A01               	xorlw	1	; case 1
  2192  00267E  B4D8               	btfsc	status,2,c
  2193  002680  EFDF  F012         	goto	l6796
  2194  002684  0A03               	xorlw	3	; case 2
  2195  002686  B4D8               	btfsc	status,2,c
  2196  002688  EFF0  F012         	goto	l6802
  2197  00268C  0A01               	xorlw	1	; case 3
  2198  00268E  B4D8               	btfsc	status,2,c
  2199  002690  EF21  F013         	goto	l6820
  2200  002694  EF4C  F013         	goto	l1277
  2201  002698                     l1277:
  2202                           
  2203                           ;main.c: 179:     oldDistLeft = distLeft;
  2204  002698  C02E  F028         	movff	_distLeft,_oldDistLeft	;volatile
  2205  00269C  C02F  F029         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2206                           
  2207                           ;main.c: 180:     oldDistRight = distRight;
  2208  0026A0  C02C  F0E2         	movff	_distRight,_oldDistRight	;volatile
  2209  0026A4  C02D  F0E3         	movff	_distRight+1,_oldDistRight+1	;volatile
  2210  0026A8  0012               	return		;funcret
  2211  0026AA                     __end_of_getCurve:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _checkBatt *****************
  2215 ;; Defined at:
  2216 ;;		line 88 in file "main.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      _Bool 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 18
  2237 ;; This function calls:
  2238 ;;		___flge
  2239 ;;		___xxtofl
  2240 ;;		_getBatteryVoltage
  2241 ;;		_setSteering
  2242 ;; This function is called by:
  2243 ;;		_loop
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text5
  2248  003882                     __ptext5:
  2249                           	callstack 0
  2250  003882                     _checkBatt:
  2251                           	callstack 11
  2252  003882                     
  2253                           ;main.c: 89:     ++battCheckCount;
  2254  003882  0100               	movlb	0	; () banked
  2255  003884  4BE0               	infsnz	_battCheckCount& (0+255),f,b
  2256  003886  2BE1               	incf	(_battCheckCount+1)& (0+255),f,b
  2257  003888                     
  2258                           ; BSR set to: 0
  2259                           ;main.c: 90:     if(battCheckCount > (500)){
  2260  003888  0EF5               	movlw	245
  2261  00388A  5DE0               	subwf	_battCheckCount& (0+255),w,b
  2262  00388C  0E01               	movlw	1
  2263  00388E  59E1               	subwfb	(_battCheckCount+1)& (0+255),w,b
  2264  003890  A0D8               	btfss	status,0,c
  2265  003892  EF4D  F01C         	goto	u5981
  2266  003896  EF4F  F01C         	goto	u5980
  2267  00389A                     u5981:
  2268  00389A  EF89  F01C         	goto	l6774
  2269  00389E                     u5980:
  2270  00389E                     
  2271                           ; BSR set to: 0
  2272                           ;main.c: 91:         battCheckCount = 0;
  2273  00389E  0E00               	movlw	0
  2274  0038A0  6FE1               	movwf	(_battCheckCount+1)& (0+255),b
  2275  0038A2  0E00               	movlw	0
  2276  0038A4  6FE0               	movwf	_battCheckCount& (0+255),b
  2277  0038A6                     
  2278                           ; BSR set to: 0
  2279                           ;main.c: 92:         getBatteryVoltage();
  2280  0038A6  EC3E  F021         	call	_getBatteryVoltage	;wreg free
  2281  0038AA                     
  2282                           ;main.c: 93:         if(BatteryVolt < (3) * 409.6){
  2283  0038AA  C024  F068         	movff	_BatteryVolt,___xxtofl@val
  2284  0038AE  C025  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  2285  0038B2  0100               	movlb	0	; () banked
  2286  0038B4  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  2287  0038B6  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  2288  0038B8  0E00               	movlw	0
  2289  0038BA  EC55  F013         	call	___xxtofl
  2290  0038BE  C068  F076         	movff	?___xxtofl,___flge@ff1
  2291  0038C2  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  2292  0038C6  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  2293  0038CA  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  2294  0038CE  0E9A               	movlw	154
  2295  0038D0  0100               	movlb	0	; () banked
  2296  0038D2  6F7A               	movwf	___flge@ff2& (0+255),b
  2297  0038D4  0E99               	movlw	153
  2298  0038D6  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  2299  0038D8  0E99               	movlw	153
  2300  0038DA  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  2301  0038DC  0E44               	movlw	68
  2302  0038DE  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  2303  0038E0  ECF2  F017         	call	___flge	;wreg free
  2304  0038E4  0100               	movlb	0	; () banked
  2305  0038E6  B0D8               	btfsc	status,0,c
  2306  0038E8  EF78  F01C         	goto	u5991
  2307  0038EC  EF7A  F01C         	goto	u5990
  2308  0038F0                     u5991:
  2309  0038F0  EF89  F01C         	goto	l6774
  2310  0038F4                     u5990:
  2311  0038F4                     
  2312                           ; BSR set to: 0
  2313                           ;main.c: 94:             setSpeed = 0;
  2314  0038F4  0E00               	movlw	0
  2315  0038F6  6FDD               	movwf	(_setSpeed+1)& (0+255),b
  2316  0038F8  0E00               	movlw	0
  2317  0038FA  6FDC               	movwf	_setSpeed& (0+255),b
  2318  0038FC                     
  2319                           ; BSR set to: 0
  2320                           ;main.c: 95:             setSteering(0,Front);
  2321  0038FC  0E00               	movlw	0
  2322  0038FE  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  2323  003900  0E00               	movlw	0
  2324  003902  6F68               	movwf	setSteering@steering& (0+255),b
  2325  003904  0E03               	movlw	3
  2326  003906  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  2327  003908  EC31  F014         	call	_setSteering	;wreg free
  2328  00390C                     
  2329                           ;main.c: 96:             return 1;
  2330  00390C  0E01               	movlw	1
  2331  00390E  EF8A  F01C         	goto	l1258
  2332  003912                     l6774:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;main.c: 99:     return 0;
  2336  003912  0E00               	movlw	0
  2337  003914                     l1258:
  2338  003914  0012               	return		;funcret
  2339  003916                     __end_of_checkBatt:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _getBatteryVoltage *****************
  2343 ;; Defined at:
  2344 ;;		line 83 in file "main.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 17
  2365 ;; This function calls:
  2366 ;;		_ADCC_GetSingleConversion
  2367 ;;		_printf
  2368 ;; This function is called by:
  2369 ;;		_loop
  2370 ;;		_checkBatt
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text6
  2375  00427C                     __ptext6:
  2376                           	callstack 0
  2377  00427C                     _getBatteryVoltage:
  2378                           	callstack 12
  2379  00427C                     
  2380                           ;main.c: 84:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2381  00427C  0E22               	movlw	34
  2382  00427E  EC51  F01F         	call	_ADCC_GetSingleConversion
  2383  004282  C020  F024         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2384  004286  C021  F025         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2385  00428A                     
  2386                           ;main.c: 85:     printf("BVolt: %u\n", (uint16_t) BatteryVolt);
  2387  00428A  0E36               	movlw	low STR_2
  2388  00428C  0101               	movlb	1	; () banked
  2389  00428E  6F28               	movwf	printf@fmt& (0+255),b
  2390  004290  0E10               	movlw	high STR_2
  2391  004292  6F29               	movwf	(printf@fmt+1)& (0+255),b
  2392  004294  C024  F12A         	movff	_BatteryVolt,?_printf+2
  2393  004298  C025  F12B         	movff	_BatteryVolt+1,?_printf+3
  2394  00429C  EC16  F021         	call	_printf	;wreg free
  2395  0042A0  0012               	return		;funcret
  2396  0042A2                     __end_of_getBatteryVoltage:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function _printf *****************
  2400 ;; Defined at:
  2401 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  2404 ;;		 -> STR_5(14), STR_4(13), STR_3(14), STR_2(11), 
  2405 ;;		 -> STR_1(12), 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  ap              2   12[BANK1 ] PTR void [1]
  2408 ;;		 -> ?_printf(2), 
  2409 ;;  ret             2    0        int 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  2    8[BANK1 ] int 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2419 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;Total ram usage:        6 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 16
  2426 ;; This function calls:
  2427 ;;		_vfprintf
  2428 ;; This function is called by:
  2429 ;;		_loop
  2430 ;;		_getBatteryVoltage
  2431 ;;		_getReverse
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text7
  2436  00422C                     __ptext7:
  2437                           	callstack 0
  2438  00422C                     _printf:
  2439                           	callstack 13
  2440  00422C  0E2A               	movlw	low (?_printf+2)
  2441  00422E  0101               	movlb	1	; () banked
  2442  004230  6F2C               	movwf	printf@ap& (0+255),b
  2443  004232  0E01               	movlw	high (?_printf+2)
  2444  004234  6F2D               	movwf	(printf@ap+1)& (0+255),b
  2445  004236                     
  2446                           ; BSR set to: 1
  2447  004236  0E00               	movlw	0
  2448  004238  6F20               	movwf	vfprintf@fp& (0+255),b
  2449  00423A  0E00               	movlw	0
  2450  00423C  6F21               	movwf	(vfprintf@fp+1)& (0+255),b
  2451  00423E  C128  F122         	movff	printf@fmt,vfprintf@fmt
  2452  004242  C129  F123         	movff	printf@fmt+1,vfprintf@fmt+1
  2453  004246  0E2C               	movlw	low printf@ap
  2454  004248  6F24               	movwf	vfprintf@ap& (0+255),b
  2455  00424A  0E01               	movlw	high printf@ap
  2456  00424C  6F25               	movwf	(vfprintf@ap+1)& (0+255),b
  2457  00424E  ECCD  F01C         	call	_vfprintf	;wreg free
  2458  004252  0012               	return		;funcret
  2459  004254                     __end_of_printf:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _vfprintf *****************
  2463 ;; Defined at:
  2464 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2467 ;;		 -> NULL(0), 
  2468 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2469 ;;		 -> STR_5(14), STR_4(13), STR_3(14), STR_2(11), 
  2470 ;;		 -> STR_1(12), 
  2471 ;;  ap              2    4[BANK1 ] PTR PTR void 
  2472 ;;		 -> printf@ap(2), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  2475 ;;		 -> STR_5(14), STR_4(13), STR_3(14), STR_2(11), 
  2476 ;;		 -> STR_1(12), 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  2    0[BANK1 ] int 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2486 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;Total ram usage:        8 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 15
  2493 ;; This function calls:
  2494 ;;		_vfpfcnvrt
  2495 ;; This function is called by:
  2496 ;;		_printf
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text8
  2501  00399A                     __ptext8:
  2502                           	callstack 0
  2503  00399A                     _vfprintf:
  2504                           	callstack 13
  2505  00399A                     
  2506                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2507  00399A  C122  F126         	movff	vfprintf@fmt,vfprintf@cfmt
  2508  00399E  C123  F127         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2509  0039A2                     
  2510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2511  0039A2  0E00               	movlw	0
  2512  0039A4  0100               	movlb	0	; () banked
  2513  0039A6  6FCF               	movwf	(_nout+1)& (0+255),b
  2514  0039A8  0E00               	movlw	0
  2515  0039AA  6FCE               	movwf	_nout& (0+255),b
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2518  0039AC  EFEB  F01C         	goto	l6182
  2519  0039B0                     l6180:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2523  0039B0  C120  F09B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2524  0039B4  C121  F09C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2525  0039B8  0E26               	movlw	low vfprintf@cfmt
  2526  0039BA  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2527  0039BC  0E01               	movlw	high vfprintf@cfmt
  2528  0039BE  6F9E               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2529  0039C0  C124  F09F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2530  0039C4  C125  F0A0         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2531  0039C8  EC9A  F010         	call	_vfpfcnvrt	;wreg free
  2532  0039CC  0100               	movlb	0	; () banked
  2533  0039CE  519B               	movf	?_vfpfcnvrt& (0+255),w,b
  2534  0039D0  27CE               	addwf	_nout& (0+255),f,b
  2535  0039D2  519C               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2536  0039D4  23CF               	addwfc	(_nout+1)& (0+255),f,b
  2537  0039D6                     l6182:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2541  0039D6  0060  F49B  FFF6   	movff	vfprintf@cfmt,tblptrl
  2542  0039DC  0060  F49F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2543  0039E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2544  0039E2  6AF8               	clrf	tblptru,c
  2545  0039E4                     	endif
  2546  0039E4                     	if	0	;tblptru may be non-zero
  2547  0039E4                     	endif
  2548  0039E4  0008               	tblrd		*
  2549  0039E6  50F5               	movf	tablat,w,c
  2550  0039E8  0900               	iorlw	0
  2551  0039EA  A4D8               	btfss	status,2,c
  2552  0039EC  EFFA  F01C         	goto	u5101
  2553  0039F0  EFFC  F01C         	goto	u5100
  2554  0039F4                     u5101:
  2555  0039F4  EFD8  F01C         	goto	l6180
  2556  0039F8                     u5100:
  2557  0039F8                     
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2560  0039F8  C0CE  F120         	movff	_nout,?_vfprintf
  2561  0039FC  C0CF  F121         	movff	_nout+1,?_vfprintf+1
  2562  003A00                     
  2563                           ; BSR set to: 0
  2564  003A00  0012               	return		;funcret
  2565  003A02                     __end_of_vfprintf:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _vfpfcnvrt *****************
  2569 ;; Defined at:
  2570 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  2573 ;;		 -> NULL(0), 
  2574 ;;  fmt             2   61[BANK0 ] PTR PTR unsigned char 
  2575 ;;		 -> vfprintf@cfmt(2), 
  2576 ;;  ap              2   63[BANK0 ] PTR PTR void 
  2577 ;;		 -> printf@ap(2), 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  llu             8   69[BANK0 ] unsigned long long 
  2580 ;;  ll              8    0        long long 
  2581 ;;  f               4    0        long long 
  2582 ;;  vp              3    0        PTR void 
  2583 ;;  ct              3    0        unsigned char [3]
  2584 ;;  cp              3    0        PTR unsigned char 
  2585 ;;  i               2    0        int 
  2586 ;;  done            2    0        int 
  2587 ;;  c               1    0        unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  2   59[BANK0 ] int 
  2590 ;; Registers used:
  2591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2597 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;Total ram usage:       18 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 14
  2604 ;; This function calls:
  2605 ;;		_fputc
  2606 ;;		_utoa
  2607 ;; This function is called by:
  2608 ;;		_vfprintf
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text9
  2613  002134                     __ptext9:
  2614                           	callstack 0
  2615  002134                     _vfpfcnvrt:
  2616                           	callstack 13
  2617  002134                     
  2618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2619  002134  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2620  00213A  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2621  002140  006F FF7B FFF6     	movff	postinc2,tblptrl
  2622  002146  006F FF77 FFF7     	movff	postdec2,tblptrh
  2623  00214C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2624  00214C  6AF8               	clrf	tblptru,c
  2625  00214E                     	endif
  2626  00214E                     	if	0	;tblptru may be non-zero
  2627  00214E                     	endif
  2628  00214E  0008               	tblrd		*
  2629  002150  50F5               	movf	tablat,w,c
  2630  002152  0A25               	xorlw	37
  2631  002154  A4D8               	btfss	status,2,c
  2632  002156  EFAF  F010         	goto	u5071
  2633  00215A  EFB1  F010         	goto	u5070
  2634  00215E                     u5071:
  2635  00215E  EF67  F011         	goto	l6168
  2636  002162                     u5070:
  2637  002162                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2639  002162  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2640  002168  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2641  00216E  2ADE               	incf	postinc2,f,c
  2642  002170  0E00               	movlw	0
  2643  002172  22DD               	addwfc	postdec2,f,c
  2644  002174                     
  2645                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2646  002174  0E00               	movlw	0
  2647  002176  0100               	movlb	0	; () banked
  2648  002178  6FD1               	movwf	(_width+1)& (0+255),b
  2649  00217A  0E00               	movlw	0
  2650  00217C  6FD0               	movwf	_width& (0+255),b
  2651  00217E  C0D0  F022         	movff	_width,_flags
  2652  002182  C0D1  F023         	movff	_width+1,_flags+1
  2653  002186                     
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2656  002186  69D2               	setf	_prec& (0+255),b
  2657  002188  69D3               	setf	(_prec+1)& (0+255),b
  2658  00218A                     
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2661  00218A  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2662  002190  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2663  002196  006F FF7B FFF6     	movff	postinc2,tblptrl
  2664  00219C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2665  0021A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2666  0021A2  6AF8               	clrf	tblptru,c
  2667  0021A4                     	endif
  2668  0021A4                     	if	0	;tblptru may be non-zero
  2669  0021A4                     	endif
  2670  0021A4  0008               	tblrd		*
  2671  0021A6  50F5               	movf	tablat,w,c
  2672  0021A8  0A75               	xorlw	117
  2673  0021AA  A4D8               	btfss	status,2,c
  2674  0021AC  EFDA  F010         	goto	u5081
  2675  0021B0  EFDC  F010         	goto	u5080
  2676  0021B4                     u5081:
  2677  0021B4  EF27  F011         	goto	l6152
  2678  0021B8                     u5080:
  2679  0021B8                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2682  0021B8  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2683  0021BE  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2684  0021C4  2ADE               	incf	postinc2,f,c
  2685  0021C6  0E00               	movlw	0
  2686  0021C8  22DD               	addwfc	postdec2,f,c
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2689  0021CA  0060  F27F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2690  0021D0  0060  F283  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2691  0021D6  006F FF7C  F0A1    	movff	indf2,??_vfpfcnvrt
  2692  0021DC  0E02               	movlw	2
  2693  0021DE  26DE               	addwf	postinc2,f,c
  2694  0021E0  006F FF7C  F0A2    	movff	indf2,??_vfpfcnvrt+1
  2695  0021E6  0E00               	movlw	0
  2696  0021E8  22DD               	addwfc	postdec2,f,c
  2697  0021EA  0060  F287  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2698  0021F0  0060  F28B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2699  0021F6  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt+2
  2700  0021FC  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+3
  2701  002202  C0A3  F0A5         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2702  002206  C0A4  F0A6         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2703  00220A  6BA7               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2704  00220C  6BA8               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2705  00220E  6BA9               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2706  002210  6BAA               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2707  002212  6BAB               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2708  002214  6BAC               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2709  002216                     
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2712  002216  C09B  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  2713  00221A  C09C  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2714  00221E  C0A5  F07D         	movff	vfpfcnvrt@llu,utoa@d
  2715  002222  C0A6  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2716  002226  C0A7  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2717  00222A  C0A8  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2718  00222E  C0A9  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2719  002232  C0AA  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2720  002236  C0AB  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2721  00223A  C0AC  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2722  00223E  EC97  F00F         	call	_utoa	;wreg free
  2723  002242  C07B  F09B         	movff	?_utoa,?_vfpfcnvrt
  2724  002246  C07C  F09C         	movff	?_utoa+1,?_vfpfcnvrt+1
  2725  00224A  EF8A  F011         	goto	l2119
  2726  00224E                     l6152:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2730  00224E  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2731  002254  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2732  00225A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2733  002260  006F FF77 FFF7     	movff	postdec2,tblptrh
  2734  002266                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2735  002266  6AF8               	clrf	tblptru,c
  2736  002268                     	endif
  2737  002268                     	if	0	;tblptru may be non-zero
  2738  002268                     	endif
  2739  002268  0008               	tblrd		*
  2740  00226A  50F5               	movf	tablat,w,c
  2741  00226C  0A25               	xorlw	37
  2742  00226E  A4D8               	btfss	status,2,c
  2743  002270  EF3C  F011         	goto	u5091
  2744  002274  EF3E  F011         	goto	u5090
  2745  002278                     u5091:
  2746  002278  EF58  F011         	goto	l6162
  2747  00227C                     u5090:
  2748  00227C                     
  2749                           ; BSR set to: 0
  2750                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2751  00227C  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2752  002282  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2753  002288  2ADE               	incf	postinc2,f,c
  2754  00228A  0E00               	movlw	0
  2755  00228C  22DD               	addwfc	postdec2,f,c
  2756  00228E                     
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2759  00228E  0E00               	movlw	0
  2760  002290  6F61               	movwf	(fputc@c+1)& (0+255),b
  2761  002292  0E25               	movlw	37
  2762  002294  6F60               	movwf	fputc@c& (0+255),b
  2763  002296  C09B  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2764  00229A  C09C  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2765  00229E  ECF5  F01B         	call	_fputc	;wreg free
  2766  0022A2                     l6158:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2769  0022A2  0E00               	movlw	0
  2770  0022A4  0100               	movlb	0	; () banked
  2771  0022A6  6F9C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2772  0022A8  0E01               	movlw	1
  2773  0022AA  6F9B               	movwf	?_vfpfcnvrt& (0+255),b
  2774  0022AC  EF8A  F011         	goto	l2119
  2775  0022B0                     l6162:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2779  0022B0  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2780  0022B6  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2781  0022BC  2ADE               	incf	postinc2,f,c
  2782  0022BE  0E00               	movlw	0
  2783  0022C0  22DD               	addwfc	postdec2,f,c
  2784  0022C2                     
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2787  0022C2  0E00               	movlw	0
  2788  0022C4  6F9C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2789  0022C6  0E00               	movlw	0
  2790  0022C8  6F9B               	movwf	?_vfpfcnvrt& (0+255),b
  2791  0022CA  EF8A  F011         	goto	l2119
  2792  0022CE                     l6168:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2795  0022CE  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2796  0022D4  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2797  0022DA  006F FF7B FFF6     	movff	postinc2,tblptrl
  2798  0022E0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2799  0022E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2800  0022E6  6AF8               	clrf	tblptru,c
  2801  0022E8                     	endif
  2802  0022E8                     	if	0	;tblptru may be non-zero
  2803  0022E8                     	endif
  2804  0022E8  0008               	tblrd		*
  2805  0022EA  50F5               	movf	tablat,w,c
  2806  0022EC  0100               	movlb	0	; () banked
  2807  0022EE  6F60               	movwf	fputc@c& (0+255),b
  2808  0022F0  6B61               	clrf	(fputc@c+1)& (0+255),b
  2809  0022F2  C09B  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2810  0022F6  C09C  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2811  0022FA  ECF5  F01B         	call	_fputc	;wreg free
  2812  0022FE                     
  2813                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2814  0022FE  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2815  002304  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2816  00230A  2ADE               	incf	postinc2,f,c
  2817  00230C  0E00               	movlw	0
  2818  00230E  22DD               	addwfc	postdec2,f,c
  2819  002310  EF51  F011         	goto	l6158
  2820  002314                     l2119:
  2821  002314  0012               	return		;funcret
  2822  002316                     __end_of_vfpfcnvrt:
  2823                           	callstack 0
  2824                           
  2825 ;; *************** function _utoa *****************
  2826 ;; Defined at:
  2827 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2830 ;;		 -> NULL(0), 
  2831 ;;  d               8   29[BANK0 ] unsigned long long 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  n               8   49[BANK0 ] unsigned long long 
  2834 ;;  i               2   57[BANK0 ] int 
  2835 ;;  w               2   47[BANK0 ] int 
  2836 ;;  p               2   45[BANK0 ] int 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2   27[BANK0 ] int 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2846 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;Total ram usage:       32 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 13
  2853 ;; This function calls:
  2854 ;;		___lodiv
  2855 ;;		___lomod
  2856 ;;		_pad
  2857 ;; This function is called by:
  2858 ;;		_vfpfcnvrt
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text10
  2863  001F2E                     __ptext10:
  2864                           	callstack 0
  2865  001F2E                     _utoa:
  2866                           	callstack 13
  2867  001F2E                     
  2868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2869  001F2E  0100               	movlb	0	; () banked
  2870  001F30  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  2871  001F32  EF9D  F00F         	goto	u5001
  2872  001F36  EF9F  F00F         	goto	u5000
  2873  001F3A                     u5001:
  2874  001F3A  EFA0  F00F         	goto	l6104
  2875  001F3E                     u5000:
  2876  001F3E                     
  2877                           ; BSR set to: 0
  2878                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2879  001F3E  9222               	bcf	_flags^0,1,c
  2880  001F40                     l6104:
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2884  001F40  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  2885  001F42  EFAD  F00F         	goto	u5010
  2886  001F46  51D3               	movf	(_prec+1)& (0+255),w,b
  2887  001F48  E106               	bnz	u5011
  2888  001F4A  05D2               	decf	_prec& (0+255),w,b
  2889  001F4C  B0D8               	btfsc	status,0,c
  2890  001F4E  EFAB  F00F         	goto	u5011
  2891  001F52  EFAD  F00F         	goto	u5010
  2892  001F56                     u5011:
  2893  001F56  EFB3  F00F         	goto	l2104
  2894  001F5A                     u5010:
  2895  001F5A                     
  2896                           ; BSR set to: 0
  2897  001F5A  0E00               	movlw	0
  2898  001F5C  6F8E               	movwf	(utoa@p+1)& (0+255),b
  2899  001F5E  0E01               	movlw	1
  2900  001F60  6F8D               	movwf	utoa@p& (0+255),b
  2901  001F62  EFB7  F00F         	goto	l2106
  2902  001F66                     l2104:
  2903                           
  2904                           ; BSR set to: 0
  2905  001F66  C0D2  F08D         	movff	_prec,utoa@p
  2906  001F6A  C0D3  F08E         	movff	_prec+1,utoa@p+1
  2907  001F6E                     l2106:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2911  001F6E  C0D0  F08F         	movff	_width,utoa@w
  2912  001F72  C0D1  F090         	movff	_width+1,utoa@w+1
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2915  001F76  C07D  F091         	movff	utoa@d,utoa@n
  2916  001F7A  C07E  F092         	movff	utoa@d+1,utoa@n+1
  2917  001F7E  C07F  F093         	movff	utoa@d+2,utoa@n+2
  2918  001F82  C080  F094         	movff	utoa@d+3,utoa@n+3
  2919  001F86  C081  F095         	movff	utoa@d+4,utoa@n+4
  2920  001F8A  C082  F096         	movff	utoa@d+5,utoa@n+5
  2921  001F8E  C083  F097         	movff	utoa@d+6,utoa@n+6
  2922  001F92  C084  F098         	movff	utoa@d+7,utoa@n+7
  2923  001F96                     
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2926  001F96  0E00               	movlw	0
  2927  001F98  6F9A               	movwf	(utoa@i+1)& (0+255),b
  2928  001F9A  0E1F               	movlw	31
  2929  001F9C  6F99               	movwf	utoa@i& (0+255),b
  2930  001F9E                     
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2933  001F9E  0E00               	movlw	0
  2934  001FA0  0101               	movlb	1	; () banked
  2935  001FA2  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2938  001FA4  EF4B  F010         	goto	l6122
  2939  001FA8                     l6112:
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  2943  001FA8  0799               	decf	utoa@i& (0+255),f,b
  2944  001FAA  A0D8               	btfss	status,0,c
  2945  001FAC  079A               	decf	(utoa@i+1)& (0+255),f,b
  2946  001FAE                     
  2947                           ; BSR set to: 0
  2948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2949  001FAE  0E00               	movlw	low _dbuf
  2950  001FB0  2599               	addwf	utoa@i& (0+255),w,b
  2951  001FB2  6ED9               	movwf	fsr2l,c
  2952  001FB4  0E01               	movlw	high _dbuf
  2953  001FB6  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  2954  001FB8  6EDA               	movwf	fsr2h,c
  2955  001FBA  C091  F060         	movff	utoa@n,___lomod@dividend
  2956  001FBE  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  2957  001FC2  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  2958  001FC6  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  2959  001FCA  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  2960  001FCE  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  2961  001FD2  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  2962  001FD6  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  2963  001FDA  0E0A               	movlw	10
  2964  001FDC  6F68               	movwf	___lomod@divisor& (0+255),b
  2965  001FDE  0E00               	movlw	0
  2966  001FE0  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  2967  001FE2  0E00               	movlw	0
  2968  001FE4  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  2969  001FE6  0E00               	movlw	0
  2970  001FE8  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  2971  001FEA  0E00               	movlw	0
  2972  001FEC  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  2973  001FEE  0E00               	movlw	0
  2974  001FF0  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  2975  001FF2  0E00               	movlw	0
  2976  001FF4  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  2977  001FF6  0E00               	movlw	0
  2978  001FF8  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  2979  001FFA  EC61  F019         	call	___lomod	;wreg free
  2980  001FFE  C060  F085         	movff	?___lomod,??_utoa
  2981  002002  C061  F086         	movff	?___lomod+1,??_utoa+1
  2982  002006  C062  F087         	movff	?___lomod+2,??_utoa+2
  2983  00200A  C063  F088         	movff	?___lomod+3,??_utoa+3
  2984  00200E  C064  F089         	movff	?___lomod+4,??_utoa+4
  2985  002012  C065  F08A         	movff	?___lomod+5,??_utoa+5
  2986  002016  C066  F08B         	movff	?___lomod+6,??_utoa+6
  2987  00201A  C067  F08C         	movff	?___lomod+7,??_utoa+7
  2988  00201E  0100               	movlb	0	; () banked
  2989  002020  5185               	movf	??_utoa& (0+255),w,b
  2990  002022  0F30               	addlw	48
  2991  002024  6EDF               	movwf	indf2,c
  2992  002026                     
  2993                           ; BSR set to: 0
  2994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  2995  002026  078D               	decf	utoa@p& (0+255),f,b
  2996  002028  A0D8               	btfss	status,0,c
  2997  00202A  078E               	decf	(utoa@p+1)& (0+255),f,b
  2998  00202C                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  3001  00202C  078F               	decf	utoa@w& (0+255),f,b
  3002  00202E  A0D8               	btfss	status,0,c
  3003  002030  0790               	decf	(utoa@w+1)& (0+255),f,b
  3004  002032                     
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  3007  002032  C091  F060         	movff	utoa@n,___lodiv@dividend
  3008  002036  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  3009  00203A  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  3010  00203E  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  3011  002042  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  3012  002046  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  3013  00204A  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  3014  00204E  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  3015  002052  0E0A               	movlw	10
  3016  002054  6F68               	movwf	___lodiv@divisor& (0+255),b
  3017  002056  0E00               	movlw	0
  3018  002058  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  3019  00205A  0E00               	movlw	0
  3020  00205C  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  3021  00205E  0E00               	movlw	0
  3022  002060  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  3023  002062  0E00               	movlw	0
  3024  002064  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  3025  002066  0E00               	movlw	0
  3026  002068  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  3027  00206A  0E00               	movlw	0
  3028  00206C  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  3029  00206E  0E00               	movlw	0
  3030  002070  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  3031  002072  EC75  F018         	call	___lodiv	;wreg free
  3032  002076  C060  F091         	movff	?___lodiv,utoa@n
  3033  00207A  C061  F092         	movff	?___lodiv+1,utoa@n+1
  3034  00207E  C062  F093         	movff	?___lodiv+2,utoa@n+2
  3035  002082  C063  F094         	movff	?___lodiv+3,utoa@n+3
  3036  002086  C064  F095         	movff	?___lodiv+4,utoa@n+4
  3037  00208A  C065  F096         	movff	?___lodiv+5,utoa@n+5
  3038  00208E  C066  F097         	movff	?___lodiv+6,utoa@n+6
  3039  002092  C067  F098         	movff	?___lodiv+7,utoa@n+7
  3040  002096                     l6122:
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3043  002096  0100               	movlb	0	; () banked
  3044  002098  5199               	movf	utoa@i& (0+255),w,b
  3045  00209A  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  3046  00209C  B4D8               	btfsc	status,2,c
  3047  00209E  EF53  F010         	goto	u5021
  3048  0020A2  EF55  F010         	goto	u5020
  3049  0020A6                     u5021:
  3050  0020A6  EF85  F010         	goto	l6132
  3051  0020AA                     u5020:
  3052  0020AA                     
  3053                           ; BSR set to: 0
  3054  0020AA  5191               	movf	utoa@n& (0+255),w,b
  3055  0020AC  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  3056  0020AE  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  3057  0020B0  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  3058  0020B2  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  3059  0020B4  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  3060  0020B6  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  3061  0020B8  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  3062  0020BA  A4D8               	btfss	status,2,c
  3063  0020BC  EF62  F010         	goto	u5031
  3064  0020C0  EF64  F010         	goto	u5030
  3065  0020C4                     u5031:
  3066  0020C4  EFD4  F00F         	goto	l6112
  3067  0020C8                     u5030:
  3068  0020C8                     
  3069                           ; BSR set to: 0
  3070  0020C8  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  3071  0020CA  EF71  F010         	goto	u5040
  3072  0020CE  518E               	movf	(utoa@p+1)& (0+255),w,b
  3073  0020D0  E106               	bnz	u5041
  3074  0020D2  058D               	decf	utoa@p& (0+255),w,b
  3075  0020D4  B0D8               	btfsc	status,0,c
  3076  0020D6  EF6F  F010         	goto	u5041
  3077  0020DA  EF71  F010         	goto	u5040
  3078  0020DE                     u5041:
  3079  0020DE  EFD4  F00F         	goto	l6112
  3080  0020E2                     u5040:
  3081  0020E2                     
  3082                           ; BSR set to: 0
  3083  0020E2  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  3084  0020E4  EF7C  F010         	goto	u5051
  3085  0020E8  5190               	movf	(utoa@w+1)& (0+255),w,b
  3086  0020EA  E108               	bnz	u5050
  3087  0020EC  058F               	decf	utoa@w& (0+255),w,b
  3088  0020EE  A0D8               	btfss	status,0,c
  3089  0020F0  EF7C  F010         	goto	u5051
  3090  0020F4  EF7E  F010         	goto	u5050
  3091  0020F8                     u5051:
  3092  0020F8  EF85  F010         	goto	l6132
  3093  0020FC                     u5050:
  3094  0020FC                     
  3095                           ; BSR set to: 0
  3096  0020FC  B222               	btfsc	_flags^0,1,c
  3097  0020FE  EF83  F010         	goto	u5061
  3098  002102  EF85  F010         	goto	u5060
  3099  002106                     u5061:
  3100  002106  EFD4  F00F         	goto	l6112
  3101  00210A                     u5060:
  3102  00210A                     l6132:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  3106  00210A  C07B  F070         	movff	utoa@fp,pad@fp
  3107  00210E  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  3108  002112  0E00               	movlw	low _dbuf
  3109  002114  2599               	addwf	utoa@i& (0+255),w,b
  3110  002116  6F72               	movwf	pad@buf& (0+255),b
  3111  002118  0E01               	movlw	high _dbuf
  3112  00211A  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  3113  00211C  6F73               	movwf	(pad@buf+1)& (0+255),b
  3114  00211E  C08F  F074         	movff	utoa@w,pad@p
  3115  002122  C090  F075         	movff	utoa@w+1,pad@p+1
  3116  002126  EC2F  F01A         	call	_pad	;wreg free
  3117  00212A  C070  F07B         	movff	?_pad,?_utoa
  3118  00212E  C071  F07C         	movff	?_pad+1,?_utoa+1
  3119  002132  0012               	return		;funcret
  3120  002134                     __end_of_utoa:
  3121                           	callstack 0
  3122                           
  3123 ;; *************** function _pad *****************
  3124 ;; Defined at:
  3125 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3128 ;;		 -> NULL(0), 
  3129 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3130 ;;		 -> dbuf(32), 
  3131 ;;  p               2   20[BANK0 ] int 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  w               2   25[BANK0 ] int 
  3134 ;;  i               2   23[BANK0 ] int 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  2   16[BANK0 ] int 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3144 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;Total ram usage:       11 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 12
  3151 ;; This function calls:
  3152 ;;		_fputc
  3153 ;;		_fputs
  3154 ;;		_strlen
  3155 ;; This function is called by:
  3156 ;;		_utoa
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text11
  3161  00345E                     __ptext11:
  3162                           	callstack 0
  3163  00345E                     _pad:
  3164                           	callstack 13
  3165  00345E                     
  3166                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3167  00345E  A022               	btfss	_flags^0,0,c
  3168  003460  EF34  F01A         	goto	u4961
  3169  003464  EF36  F01A         	goto	u4960
  3170  003468                     u4961:
  3171  003468  EF40  F01A         	goto	l6082
  3172  00346C                     u4960:
  3173  00346C                     
  3174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3175  00346C  C072  F069         	movff	pad@buf,fputs@s
  3176  003470  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3177  003474  C070  F06B         	movff	pad@fp,fputs@fp
  3178  003478  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3179  00347C  EC0B  F01F         	call	_fputs	;wreg free
  3180  003480                     l6082:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3183  003480  0100               	movlb	0	; () banked
  3184  003482  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  3185  003484  EF46  F01A         	goto	u4971
  3186  003488  EF48  F01A         	goto	u4970
  3187  00348C                     u4971:
  3188  00348C  EF4E  F01A         	goto	l6086
  3189  003490                     u4970:
  3190  003490                     
  3191                           ; BSR set to: 0
  3192  003490  C074  F079         	movff	pad@p,pad@w
  3193  003494  C075  F07A         	movff	pad@p+1,pad@w+1
  3194  003498  EF52  F01A         	goto	l2094
  3195  00349C                     l6086:
  3196                           
  3197                           ; BSR set to: 0
  3198  00349C  0E00               	movlw	0
  3199  00349E  6F7A               	movwf	(pad@w+1)& (0+255),b
  3200  0034A0  0E00               	movlw	0
  3201  0034A2  6F79               	movwf	pad@w& (0+255),b
  3202  0034A4                     l2094:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3206  0034A4  0E00               	movlw	0
  3207  0034A6  6F78               	movwf	(pad@i+1)& (0+255),b
  3208  0034A8  0E00               	movlw	0
  3209  0034AA  6F77               	movwf	pad@i& (0+255),b
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3212  0034AC  EF65  F01A         	goto	l6092
  3213  0034B0                     l6088:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3217  0034B0  0E00               	movlw	0
  3218  0034B2  6F61               	movwf	(fputc@c+1)& (0+255),b
  3219  0034B4  0E20               	movlw	32
  3220  0034B6  6F60               	movwf	fputc@c& (0+255),b
  3221  0034B8  C070  F062         	movff	pad@fp,fputc@fp
  3222  0034BC  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3223  0034C0  ECF5  F01B         	call	_fputc	;wreg free
  3224  0034C4                     
  3225                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3226  0034C4  0100               	movlb	0	; () banked
  3227  0034C6  4B77               	infsnz	pad@i& (0+255),f,b
  3228  0034C8  2B78               	incf	(pad@i+1)& (0+255),f,b
  3229  0034CA                     l6092:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3233  0034CA  5179               	movf	pad@w& (0+255),w,b
  3234  0034CC  5D77               	subwf	pad@i& (0+255),w,b
  3235  0034CE  5178               	movf	(pad@i+1)& (0+255),w,b
  3236  0034D0  0A80               	xorlw	128
  3237  0034D2  6F76               	movwf	??_pad& (0+255),b
  3238  0034D4  517A               	movf	(pad@w+1)& (0+255),w,b
  3239  0034D6  0A80               	xorlw	128
  3240  0034D8  5976               	subwfb	??_pad& (0+255),w,b
  3241  0034DA  A0D8               	btfss	status,0,c
  3242  0034DC  EF72  F01A         	goto	u4981
  3243  0034E0  EF74  F01A         	goto	u4980
  3244  0034E4                     u4981:
  3245  0034E4  EF58  F01A         	goto	l6088
  3246  0034E8                     u4980:
  3247  0034E8                     
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3250  0034E8  B022               	btfsc	_flags^0,0,c
  3251  0034EA  EF79  F01A         	goto	u4991
  3252  0034EE  EF7B  F01A         	goto	u4990
  3253  0034F2                     u4991:
  3254  0034F2  EF85  F01A         	goto	l6096
  3255  0034F6                     u4990:
  3256  0034F6                     
  3257                           ; BSR set to: 0
  3258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3259  0034F6  C072  F069         	movff	pad@buf,fputs@s
  3260  0034FA  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3261  0034FE  C070  F06B         	movff	pad@fp,fputs@fp
  3262  003502  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3263  003506  EC0B  F01F         	call	_fputs	;wreg free
  3264  00350A                     l6096:
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3267  00350A  C072  F020         	movff	pad@buf,strlen@s
  3268  00350E  C073  F021         	movff	pad@buf+1,strlen@s+1
  3269  003512  EC70  F01F         	call	_strlen	;wreg free
  3270  003516  0100               	movlb	0	; () banked
  3271  003518  5179               	movf	pad@w& (0+255),w,b
  3272  00351A  2420               	addwf	?_strlen^0,w,c
  3273  00351C  6F70               	movwf	?_pad& (0+255),b
  3274  00351E  517A               	movf	(pad@w+1)& (0+255),w,b
  3275  003520  2021               	addwfc	(?_strlen+1)^0,w,c
  3276  003522  6F71               	movwf	(?_pad+1)& (0+255),b
  3277  003524                     
  3278                           ; BSR set to: 0
  3279  003524  0012               	return		;funcret
  3280  003526                     __end_of_pad:
  3281                           	callstack 0
  3282                           
  3283 ;; *************** function _strlen *****************
  3284 ;; Defined at:
  3285 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3288 ;;		 -> dbuf(32), 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  3291 ;;		 -> dbuf(32), 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  2   31[COMRAM] unsigned int 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;Total ram usage:        4 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 8
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_pad
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text12
  3316  003EE0                     __ptext12:
  3317                           	callstack 0
  3318  003EE0                     _strlen:
  3319                           	callstack 16
  3320  003EE0  C020  F060         	movff	strlen@s,strlen@a
  3321  003EE4  C021  F061         	movff	strlen@s+1,strlen@a+1
  3322  003EE8  EF78  F01F         	goto	l6034
  3323  003EEC                     l6032:
  3324  003EEC  4A20               	infsnz	strlen@s^0,f,c
  3325  003EEE  2A21               	incf	(strlen@s+1)^0,f,c
  3326  003EF0                     l6034:
  3327  003EF0  0060  F083  FFD9   	movff	strlen@s,fsr2l
  3328  003EF6  0060  F087  FFDA   	movff	strlen@s+1,fsr2h
  3329  003EFC  50DF               	movf	indf2,w,c
  3330  003EFE  A4D8               	btfss	status,2,c
  3331  003F00  EF84  F01F         	goto	u4881
  3332  003F04  EF86  F01F         	goto	u4880
  3333  003F08                     u4881:
  3334  003F08  EF76  F01F         	goto	l6032
  3335  003F0C                     u4880:
  3336  003F0C  0100               	movlb	0	; () banked
  3337  003F0E  5160               	movf	strlen@a& (0+255),w,b
  3338  003F10  5C20               	subwf	strlen@s^0,w,c
  3339  003F12  6E20               	movwf	?_strlen^0,c
  3340  003F14  5161               	movf	(strlen@a+1)& (0+255),w,b
  3341  003F16  5821               	subwfb	(strlen@s+1)^0,w,c
  3342  003F18  6E21               	movwf	(?_strlen+1)^0,c
  3343  003F1A                     
  3344                           ; BSR set to: 0
  3345  003F1A  0012               	return		;funcret
  3346  003F1C                     __end_of_strlen:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _fputs *****************
  3350 ;; Defined at:
  3351 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3354 ;;		 -> dbuf(32), 
  3355 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3356 ;;		 -> NULL(0), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  i               2   14[BANK0 ] int 
  3359 ;;  c               1   13[BANK0 ] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2    9[BANK0 ] int 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3369 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;Total ram usage:        7 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 11
  3376 ;; This function calls:
  3377 ;;		_fputc
  3378 ;; This function is called by:
  3379 ;;		_pad
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text13
  3384  003E16                     __ptext13:
  3385                           	callstack 0
  3386  003E16                     _fputs:
  3387                           	callstack 13
  3388  003E16  0E00               	movlw	0
  3389  003E18  0100               	movlb	0	; () banked
  3390  003E1A  6F6F               	movwf	(fputs@i+1)& (0+255),b
  3391  003E1C  0E00               	movlw	0
  3392  003E1E  6F6E               	movwf	fputs@i& (0+255),b
  3393  003E20  EF1E  F01F         	goto	l6028
  3394  003E24                     l6024:
  3395                           
  3396                           ; BSR set to: 0
  3397  003E24  C06D  F060         	movff	fputs@c,fputc@c
  3398  003E28  6B61               	clrf	(fputc@c+1)& (0+255),b
  3399  003E2A  C06B  F062         	movff	fputs@fp,fputc@fp
  3400  003E2E  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  3401  003E32  ECF5  F01B         	call	_fputc	;wreg free
  3402  003E36  0100               	movlb	0	; () banked
  3403  003E38  4B6E               	infsnz	fputs@i& (0+255),f,b
  3404  003E3A  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  3405  003E3C                     l6028:
  3406                           
  3407                           ; BSR set to: 0
  3408  003E3C  516E               	movf	fputs@i& (0+255),w,b
  3409  003E3E  2569               	addwf	fputs@s& (0+255),w,b
  3410  003E40  6ED9               	movwf	fsr2l,c
  3411  003E42  516F               	movf	(fputs@i+1)& (0+255),w,b
  3412  003E44  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  3413  003E46  6EDA               	movwf	fsr2h,c
  3414  003E48  50DF               	movf	indf2,w,c
  3415  003E4A  6F6D               	movwf	fputs@c& (0+255),b
  3416  003E4C  516D               	movf	fputs@c& (0+255),w,b
  3417  003E4E  A4D8               	btfss	status,2,c
  3418  003E50  EF2C  F01F         	goto	u4871
  3419  003E54  EF2E  F01F         	goto	u4870
  3420  003E58                     u4871:
  3421  003E58  EF12  F01F         	goto	l6024
  3422  003E5C                     u4870:
  3423  003E5C                     
  3424                           ; BSR set to: 0
  3425  003E5C  0012               	return		;funcret
  3426  003E5E                     __end_of_fputs:
  3427                           	callstack 0
  3428                           
  3429 ;; *************** function _fputc *****************
  3430 ;; Defined at:
  3431 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  c               2    0[BANK0 ] int 
  3434 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3435 ;;		 -> NULL(0), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  2    0[BANK0 ] int 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;Total ram usage:        9 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; Hardware stack levels required when called: 10
  3454 ;; This function calls:
  3455 ;;		_putch
  3456 ;; This function is called by:
  3457 ;;		_pad
  3458 ;;		_vfpfcnvrt
  3459 ;;		_fputs
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text14
  3464  0037EA                     __ptext14:
  3465                           	callstack 0
  3466  0037EA                     _fputc:
  3467                           	callstack 13
  3468  0037EA  0100               	movlb	0	; () banked
  3469  0037EC  5162               	movf	fputc@fp& (0+255),w,b
  3470  0037EE  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3471  0037F0  B4D8               	btfsc	status,2,c
  3472  0037F2  EFFD  F01B         	goto	u4831
  3473  0037F6  EFFF  F01B         	goto	u4830
  3474  0037FA                     u4831:
  3475  0037FA  EF08  F01C         	goto	l6012
  3476  0037FE                     u4830:
  3477  0037FE                     
  3478                           ; BSR set to: 0
  3479  0037FE  5162               	movf	fputc@fp& (0+255),w,b
  3480  003800  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3481  003802  A4D8               	btfss	status,2,c
  3482  003804  EF06  F01C         	goto	u4841
  3483  003808  EF08  F01C         	goto	u4840
  3484  00380C                     u4841:
  3485  00380C  EF0D  F01C         	goto	l6014
  3486  003810                     u4840:
  3487  003810                     l6012:
  3488                           
  3489                           ; BSR set to: 0
  3490  003810  5160               	movf	fputc@c& (0+255),w,b
  3491  003812  ECE4  F021         	call	_putch
  3492  003816  EF40  F01C         	goto	l2138
  3493  00381A                     l6014:
  3494                           
  3495                           ; BSR set to: 0
  3496  00381A  EE20 F009          	lfsr	2,9
  3497  00381E  5162               	movf	fputc@fp& (0+255),w,b
  3498  003820  26D9               	addwf	fsr2l,f,c
  3499  003822  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3500  003824  22DA               	addwfc	fsr2h,f,c
  3501  003826  50DE               	movf	postinc2,w,c
  3502  003828  10DE               	iorwf	postinc2,w,c
  3503  00382A  B4D8               	btfsc	status,2,c
  3504  00382C  EF1A  F01C         	goto	u4851
  3505  003830  EF1C  F01C         	goto	u4850
  3506  003834                     u4851:
  3507  003834  EF37  F01C         	goto	l6018
  3508  003838                     u4850:
  3509  003838                     
  3510                           ; BSR set to: 0
  3511  003838  EE20 F009          	lfsr	2,9
  3512  00383C  5162               	movf	fputc@fp& (0+255),w,b
  3513  00383E  26D9               	addwf	fsr2l,f,c
  3514  003840  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3515  003842  22DA               	addwfc	fsr2h,f,c
  3516  003844  EE10 F003          	lfsr	1,3
  3517  003848  5162               	movf	fputc@fp& (0+255),w,b
  3518  00384A  26E1               	addwf	fsr1l,f,c
  3519  00384C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3520  00384E  22E2               	addwfc	fsr1h,f,c
  3521  003850  50DE               	movf	postinc2,w,c
  3522  003852  5CE6               	subwf	postinc1,w,c
  3523  003854  50E6               	movf	postinc1,w,c
  3524  003856  0A80               	xorlw	128
  3525  003858  6F68               	movwf	(??_fputc+4)& (0+255),b
  3526  00385A  50DE               	movf	postinc2,w,c
  3527  00385C  0A80               	xorlw	128
  3528  00385E  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  3529  003860  B0D8               	btfsc	status,0,c
  3530  003862  EF35  F01C         	goto	u4861
  3531  003866  EF37  F01C         	goto	u4860
  3532  00386A                     u4861:
  3533  00386A  EF40  F01C         	goto	l2138
  3534  00386E                     u4860:
  3535  00386E                     l6018:
  3536                           
  3537                           ; BSR set to: 0
  3538  00386E  EE20 F003          	lfsr	2,3
  3539  003872  5162               	movf	fputc@fp& (0+255),w,b
  3540  003874  26D9               	addwf	fsr2l,f,c
  3541  003876  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3542  003878  22DA               	addwfc	fsr2h,f,c
  3543  00387A  2ADE               	incf	postinc2,f,c
  3544  00387C  0E00               	movlw	0
  3545  00387E  22DD               	addwfc	postdec2,f,c
  3546  003880                     l2138:
  3547  003880  0012               	return		;funcret
  3548  003882                     __end_of_fputc:
  3549                           	callstack 0
  3550                           
  3551 ;; *************** function _putch *****************
  3552 ;; Defined at:
  3553 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  txData          1    wreg     unsigned char 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  txData          1   32[COMRAM] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;Total ram usage:        1 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 9
  3574 ;; This function calls:
  3575 ;;		_UART1_Write
  3576 ;; This function is called by:
  3577 ;;		_fputc
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text15
  3582  0043C8                     __ptext15:
  3583                           	callstack 0
  3584  0043C8                     _putch:
  3585                           	callstack 13
  3586                           
  3587                           ;incstack = 0
  3588                           ;putch@txData stored from wreg
  3589  0043C8  6E21               	movwf	putch@txData^0,c
  3590  0043CA                     
  3591                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3592  0043CA  5021               	movf	putch@txData^0,w,c
  3593  0043CC  EC01  F01D         	call	_UART1_Write
  3594  0043D0  0012               	return		;funcret
  3595  0043D2                     __end_of_putch:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function _UART1_Write *****************
  3599 ;; Defined at:
  3600 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  txData          1    wreg     unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  txData          1   31[COMRAM] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        1 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; Hardware stack levels required when called: 8
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_putch
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text16
  3629  003A02                     __ptext16:
  3630                           	callstack 0
  3631  003A02                     _UART1_Write:
  3632                           	callstack 13
  3633                           
  3634                           ;incstack = 0
  3635                           ;UART1_Write@txData stored from wreg
  3636  003A02  6E20               	movwf	UART1_Write@txData^0,c
  3637  003A04                     l5990:
  3638                           
  3639                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3640  003A04  5040               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  3641  003A06  B4D8               	btfsc	status,2,c
  3642  003A08  EF08  F01D         	goto	u4801
  3643  003A0C  EF0A  F01D         	goto	u4800
  3644  003A10                     u4801:
  3645  003A10  EF02  F01D         	goto	l5990
  3646  003A14                     u4800:
  3647  003A14                     
  3648                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3649  003A14  0139               	movlb	57	; () banked
  3650  003A16  B993               	btfsc	147,4,b	;volatile
  3651  003A18  EF10  F01D         	goto	u4811
  3652  003A1C  EF12  F01D         	goto	u4810
  3653  003A20                     u4811:
  3654  003A20  EF17  F01D         	goto	l309
  3655  003A24                     u4810:
  3656  003A24                     
  3657                           ; BSR set to: 57
  3658                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3659  003A24  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3660                           
  3661                           ;mcc_generated_files/uart1.c: 211:     }
  3662  003A2A  EF2D  F01D         	goto	l6004
  3663  003A2E                     l309:
  3664                           
  3665                           ; BSR set to: 57
  3666                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3667  003A2E  9993               	bcf	147,4,b	;volatile
  3668  003A30                     
  3669                           ; BSR set to: 57
  3670                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3671  003A30  0EBE               	movlw	low _uart1TxBuffer
  3672  003A32  2439               	addwf	_uart1TxHead^0,w,c	;volatile
  3673  003A34  6ED9               	movwf	fsr2l,c
  3674  003A36  6ADA               	clrf	fsr2h,c
  3675  003A38  0E00               	movlw	high _uart1TxBuffer
  3676  003A3A  22DA               	addwfc	fsr2h,f,c
  3677  003A3C  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
  3678  003A42                     
  3679                           ; BSR set to: 57
  3680  003A42  2A39               	incf	_uart1TxHead^0,f,c	;volatile
  3681  003A44                     
  3682                           ; BSR set to: 57
  3683                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3684  003A44  0E07               	movlw	7
  3685  003A46  6439               	cpfsgt	_uart1TxHead^0,c	;volatile
  3686  003A48  EF28  F01D         	goto	u4821
  3687  003A4C  EF2A  F01D         	goto	u4820
  3688  003A50                     u4821:
  3689  003A50  EF2C  F01D         	goto	l6002
  3690  003A54                     u4820:
  3691  003A54                     
  3692                           ; BSR set to: 57
  3693                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3694  003A54  0E00               	movlw	0
  3695  003A56  6E39               	movwf	_uart1TxHead^0,c	;volatile
  3696  003A58                     l6002:
  3697                           
  3698                           ; BSR set to: 57
  3699                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3700  003A58  0640               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  3701  003A5A                     l6004:
  3702                           
  3703                           ; BSR set to: 57
  3704                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3705  003A5A  8993               	bsf	147,4,b	;volatile
  3706  003A5C                     
  3707                           ; BSR set to: 57
  3708  003A5C  0012               	return		;funcret
  3709  003A5E                     __end_of_UART1_Write:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function ___lomod *****************
  3713 ;; Defined at:
  3714 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3717 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  counter         1   31[COMRAM] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  8    0[BANK0 ] unsigned long long 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3729 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;Total ram usage:       17 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 8
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_utoa
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text17
  3744  0032C2                     __ptext17:
  3745                           	callstack 0
  3746  0032C2                     ___lomod:
  3747                           	callstack 17
  3748  0032C2  0100               	movlb	0	; () banked
  3749  0032C4  5168               	movf	___lomod@divisor& (0+255),w,b
  3750  0032C6  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3751  0032C8  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3752  0032CA  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3753  0032CC  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3754  0032CE  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3755  0032D0  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3756  0032D2  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3757  0032D4  B4D8               	btfsc	status,2,c
  3758  0032D6  EF6F  F019         	goto	u4931
  3759  0032DA  EF71  F019         	goto	u4930
  3760  0032DE                     u4931:
  3761  0032DE  EFB9  F019         	goto	l1839
  3762  0032E2                     u4930:
  3763  0032E2                     
  3764                           ; BSR set to: 0
  3765  0032E2  0E01               	movlw	1
  3766  0032E4  6E20               	movwf	___lomod@counter^0,c
  3767  0032E6  EF7F  F019         	goto	l6068
  3768  0032EA                     l6066:
  3769                           
  3770                           ; BSR set to: 0
  3771  0032EA  90D8               	bcf	status,0,c
  3772  0032EC  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3773  0032EE  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3774  0032F0  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3775  0032F2  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3776  0032F4  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3777  0032F6  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3778  0032F8  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3779  0032FA  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3780  0032FC  2A20               	incf	___lomod@counter^0,f,c
  3781  0032FE                     l6068:
  3782                           
  3783                           ; BSR set to: 0
  3784  0032FE  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3785  003300  EF84  F019         	goto	u4941
  3786  003304  EF86  F019         	goto	u4940
  3787  003308                     u4941:
  3788  003308  EF75  F019         	goto	l6066
  3789  00330C                     u4940:
  3790  00330C                     l6070:
  3791                           
  3792                           ; BSR set to: 0
  3793  00330C  5168               	movf	___lomod@divisor& (0+255),w,b
  3794  00330E  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3795  003310  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3796  003312  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3797  003314  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3798  003316  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3799  003318  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3800  00331A  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3801  00331C  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3802  00331E  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3803  003320  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3804  003322  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3805  003324  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3806  003326  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3807  003328  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3808  00332A  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3809  00332C  A0D8               	btfss	status,0,c
  3810  00332E  EF9B  F019         	goto	u4951
  3811  003332  EF9D  F019         	goto	u4950
  3812  003336                     u4951:
  3813  003336  EFAD  F019         	goto	l6074
  3814  00333A                     u4950:
  3815  00333A                     
  3816                           ; BSR set to: 0
  3817  00333A  5168               	movf	___lomod@divisor& (0+255),w,b
  3818  00333C  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3819  00333E  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3820  003340  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3821  003342  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3822  003344  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3823  003346  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3824  003348  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3825  00334A  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3826  00334C  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3827  00334E  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3828  003350  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3829  003352  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3830  003354  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3831  003356  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3832  003358  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3833  00335A                     l6074:
  3834                           
  3835                           ; BSR set to: 0
  3836  00335A  90D8               	bcf	status,0,c
  3837  00335C  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3838  00335E  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3839  003360  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3840  003362  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3841  003364  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3842  003366  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3843  003368  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3844  00336A  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3845  00336C                     
  3846                           ; BSR set to: 0
  3847  00336C  2E20               	decfsz	___lomod@counter^0,f,c
  3848  00336E  EF86  F019         	goto	l6070
  3849  003372                     l1839:
  3850                           
  3851                           ; BSR set to: 0
  3852  003372  C060  F060         	movff	___lomod@dividend,?___lomod
  3853  003376  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3854  00337A  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3855  00337E  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3856  003382  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3857  003386  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3858  00338A  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3859  00338E  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3860  003392                     
  3861                           ; BSR set to: 0
  3862  003392  0012               	return		;funcret
  3863  003394                     __end_of___lomod:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function ___lodiv *****************
  3867 ;; Defined at:
  3868 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3871 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3874 ;;  counter         1   24[BANK0 ] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  8    0[BANK0 ] unsigned long long 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3884 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;Total ram usage:       25 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 8
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_utoa
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text18
  3899  0030EA                     __ptext18:
  3900                           	callstack 0
  3901  0030EA                     ___lodiv:
  3902                           	callstack 17
  3903  0030EA  EE20  F070         	lfsr	2,___lodiv@quotient
  3904  0030EE  0E07               	movlw	7
  3905  0030F0                     u4891:
  3906  0030F0  6ADE               	clrf	postinc2,c
  3907  0030F2  06E8               	decf	wreg,f,c
  3908  0030F4  E2FD               	bc	u4891
  3909  0030F6  0100               	movlb	0	; () banked
  3910  0030F8  5168               	movf	___lodiv@divisor& (0+255),w,b
  3911  0030FA  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3912  0030FC  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3913  0030FE  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3914  003100  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3915  003102  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3916  003104  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3917  003106  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3918  003108  B4D8               	btfsc	status,2,c
  3919  00310A  EF89  F018         	goto	u4901
  3920  00310E  EF8B  F018         	goto	u4900
  3921  003112                     u4901:
  3922  003112  EFDD  F018         	goto	l1829
  3923  003116                     u4900:
  3924  003116                     
  3925                           ; BSR set to: 0
  3926  003116  0E01               	movlw	1
  3927  003118  6F78               	movwf	___lodiv@counter& (0+255),b
  3928  00311A  EF99  F018         	goto	l6048
  3929  00311E                     l6046:
  3930                           
  3931                           ; BSR set to: 0
  3932  00311E  90D8               	bcf	status,0,c
  3933  003120  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3934  003122  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3935  003124  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3936  003126  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3937  003128  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3938  00312A  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3939  00312C  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3940  00312E  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3941  003130  2B78               	incf	___lodiv@counter& (0+255),f,b
  3942  003132                     l6048:
  3943                           
  3944                           ; BSR set to: 0
  3945  003132  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3946  003134  EF9E  F018         	goto	u4911
  3947  003138  EFA0  F018         	goto	u4910
  3948  00313C                     u4911:
  3949  00313C  EF8F  F018         	goto	l6046
  3950  003140                     u4910:
  3951  003140                     l6050:
  3952                           
  3953                           ; BSR set to: 0
  3954  003140  90D8               	bcf	status,0,c
  3955  003142  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3956  003144  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3957  003146  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3958  003148  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3959  00314A  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3960  00314C  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3961  00314E  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3962  003150  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3963  003152                     
  3964                           ; BSR set to: 0
  3965  003152  5168               	movf	___lodiv@divisor& (0+255),w,b
  3966  003154  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3967  003156  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3968  003158  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3969  00315A  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3970  00315C  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3971  00315E  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3972  003160  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3973  003162  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3974  003164  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3975  003166  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3976  003168  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3977  00316A  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3978  00316C  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3979  00316E  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3980  003170  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3981  003172  A0D8               	btfss	status,0,c
  3982  003174  EFBE  F018         	goto	u4921
  3983  003178  EFC0  F018         	goto	u4920
  3984  00317C                     u4921:
  3985  00317C  EFD1  F018         	goto	l6058
  3986  003180                     u4920:
  3987  003180                     
  3988                           ; BSR set to: 0
  3989  003180  5168               	movf	___lodiv@divisor& (0+255),w,b
  3990  003182  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3991  003184  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3992  003186  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3993  003188  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3994  00318A  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3995  00318C  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3996  00318E  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3997  003190  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3998  003192  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3999  003194  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  4000  003196  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  4001  003198  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  4002  00319A  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  4003  00319C  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  4004  00319E  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  4005  0031A0                     
  4006                           ; BSR set to: 0
  4007  0031A0  8170               	bsf	___lodiv@quotient& (0+255),0,b
  4008  0031A2                     l6058:
  4009                           
  4010                           ; BSR set to: 0
  4011  0031A2  90D8               	bcf	status,0,c
  4012  0031A4  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  4013  0031A6  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  4014  0031A8  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  4015  0031AA  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  4016  0031AC  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  4017  0031AE  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  4018  0031B0  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  4019  0031B2  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  4020  0031B4                     
  4021                           ; BSR set to: 0
  4022  0031B4  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  4023  0031B6  EFA0  F018         	goto	l6050
  4024  0031BA                     l1829:
  4025                           
  4026                           ; BSR set to: 0
  4027  0031BA  C070  F060         	movff	___lodiv@quotient,?___lodiv
  4028  0031BE  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  4029  0031C2  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  4030  0031C6  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  4031  0031CA  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  4032  0031CE  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  4033  0031D2  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  4034  0031D6  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  4035  0031DA                     
  4036                           ; BSR set to: 0
  4037  0031DA  0012               	return		;funcret
  4038  0031DC                     __end_of___lodiv:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function _ADCC_GetSingleConversion *****************
  4042 ;; Defined at:
  4043 ;;		line 137 in file "mcc_generated_files/adcc.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  channel         1    wreg     enum E16067
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  channel         1    2[BANK0 ] enum E16067
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  2   31[COMRAM] unsigned short 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;Total ram usage:        5 bytes
  4062 ;; Hardware stack levels used: 1
  4063 ;; Hardware stack levels required when called: 8
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_getBatteryVoltage
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text19
  4072  003EA2                     __ptext19:
  4073                           	callstack 0
  4074  003EA2                     _ADCC_GetSingleConversion:
  4075                           	callstack 20
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;incstack = 0
  4079                           ;ADCC_GetSingleConversion@channel stored from wreg
  4080  003EA2  0100               	movlb	0	; () banked
  4081  003EA4  6F62               	movwf	ADCC_GetSingleConversion@channel& (0+255),b
  4082  003EA6                     
  4083                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  4084  003EA6  0060  F18B  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  4085  003EAC                     
  4086                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  4087  003EAC  013E               	movlb	62	; () banked
  4088  003EAE  8FF8               	bsf	248,7,b	;volatile
  4089  003EB0                     
  4090                           ; BSR set to: 62
  4091                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  4092  003EB0  9DF8               	bcf	248,6,b	;volatile
  4093  003EB2                     
  4094                           ; BSR set to: 62
  4095                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  4096  003EB2  81F8               	bsf	248,0,b	;volatile
  4097  003EB4                     l1054:
  4098                           
  4099                           ; BSR set to: 62
  4100                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  4101  003EB4  B1F8               	btfsc	248,0,b	;volatile
  4102  003EB6  EF5F  F01F         	goto	u5151
  4103  003EBA  EF61  F01F         	goto	u5150
  4104  003EBE                     u5151:
  4105  003EBE  EF5A  F01F         	goto	l1054
  4106  003EC2                     u5150:
  4107  003EC2                     
  4108                           ; BSR set to: 62
  4109                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4110  003EC2  51F0               	movf	240,w,b	;volatile
  4111  003EC4  0100               	movlb	0	; () banked
  4112  003EC6  6F61               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  4113  003EC8  6B60               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  4114  003ECA  013E               	movlb	62	; () banked
  4115  003ECC  51EF               	movf	239,w,b	;volatile
  4116  003ECE  0100               	movlb	0	; () banked
  4117  003ED0  2560               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  4118  003ED2  6E20               	movwf	?_ADCC_GetSingleConversion^0,c
  4119  003ED4  013E               	movlb	62	; () banked
  4120  003ED6  0E00               	movlw	0
  4121  003ED8  0100               	movlb	0	; () banked
  4122  003EDA  2161               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  4123  003EDC  6E21               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  4124  003EDE                     
  4125                           ; BSR set to: 0
  4126  003EDE  0012               	return		;funcret
  4127  003EE0                     __end_of_ADCC_GetSingleConversion:
  4128                           	callstack 0
  4129                           
  4130 ;; *************** function ___flge *****************
  4131 ;; Defined at:
  4132 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  ff1             4   22[BANK0 ] unsigned short 
  4135 ;;  ff2             4   26[BANK0 ] unsigned short 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;		None               void
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4147 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;Total ram usage:       12 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 8
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_loop
  4158 ;;		_checkBatt
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text20
  4163  002FE4                     __ptext20:
  4164                           	callstack 0
  4165  002FE4                     ___flge:
  4166                           	callstack 20
  4167  002FE4  0E00               	movlw	0
  4168  002FE6  0100               	movlb	0	; () banked
  4169  002FE8  1576               	andwf	___flge@ff1& (0+255),w,b
  4170  002FEA  6F7E               	movwf	??___flge& (0+255),b
  4171  002FEC  0E00               	movlw	0
  4172  002FEE  1577               	andwf	(___flge@ff1+1)& (0+255),w,b
  4173  002FF0  6F7F               	movwf	(??___flge+1)& (0+255),b
  4174  002FF2  0E80               	movlw	128
  4175  002FF4  1578               	andwf	(___flge@ff1+2)& (0+255),w,b
  4176  002FF6  6F80               	movwf	(??___flge+2)& (0+255),b
  4177  002FF8  0E7F               	movlw	127
  4178  002FFA  1579               	andwf	(___flge@ff1+3)& (0+255),w,b
  4179  002FFC  6F81               	movwf	(??___flge+3)& (0+255),b
  4180  002FFE  517E               	movf	??___flge& (0+255),w,b
  4181  003000  117F               	iorwf	(??___flge+1)& (0+255),w,b
  4182  003002  1180               	iorwf	(??___flge+2)& (0+255),w,b
  4183  003004  1181               	iorwf	(??___flge+3)& (0+255),w,b
  4184  003006  A4D8               	btfss	status,2,c
  4185  003008  EF08  F018         	goto	u5801
  4186  00300C  EF0A  F018         	goto	u5800
  4187  003010                     u5801:
  4188  003010  EF12  F018         	goto	l6652
  4189  003014                     u5800:
  4190  003014                     
  4191                           ; BSR set to: 0
  4192  003014  0E00               	movlw	0
  4193  003016  6F76               	movwf	___flge@ff1& (0+255),b
  4194  003018  0E00               	movlw	0
  4195  00301A  6F77               	movwf	(___flge@ff1+1)& (0+255),b
  4196  00301C  0E00               	movlw	0
  4197  00301E  6F78               	movwf	(___flge@ff1+2)& (0+255),b
  4198  003020  0E00               	movlw	0
  4199  003022  6F79               	movwf	(___flge@ff1+3)& (0+255),b
  4200  003024                     l6652:
  4201                           
  4202                           ; BSR set to: 0
  4203  003024  0E00               	movlw	0
  4204  003026  157A               	andwf	___flge@ff2& (0+255),w,b
  4205  003028  6F7E               	movwf	??___flge& (0+255),b
  4206  00302A  0E00               	movlw	0
  4207  00302C  157B               	andwf	(___flge@ff2+1)& (0+255),w,b
  4208  00302E  6F7F               	movwf	(??___flge+1)& (0+255),b
  4209  003030  0E80               	movlw	128
  4210  003032  157C               	andwf	(___flge@ff2+2)& (0+255),w,b
  4211  003034  6F80               	movwf	(??___flge+2)& (0+255),b
  4212  003036  0E7F               	movlw	127
  4213  003038  157D               	andwf	(___flge@ff2+3)& (0+255),w,b
  4214  00303A  6F81               	movwf	(??___flge+3)& (0+255),b
  4215  00303C  517E               	movf	??___flge& (0+255),w,b
  4216  00303E  117F               	iorwf	(??___flge+1)& (0+255),w,b
  4217  003040  1180               	iorwf	(??___flge+2)& (0+255),w,b
  4218  003042  1181               	iorwf	(??___flge+3)& (0+255),w,b
  4219  003044  A4D8               	btfss	status,2,c
  4220  003046  EF27  F018         	goto	u5811
  4221  00304A  EF29  F018         	goto	u5810
  4222  00304E                     u5811:
  4223  00304E  EF31  F018         	goto	l6656
  4224  003052                     u5810:
  4225  003052                     
  4226                           ; BSR set to: 0
  4227  003052  0E00               	movlw	0
  4228  003054  6F7A               	movwf	___flge@ff2& (0+255),b
  4229  003056  0E00               	movlw	0
  4230  003058  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  4231  00305A  0E00               	movlw	0
  4232  00305C  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  4233  00305E  0E00               	movlw	0
  4234  003060  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  4235  003062                     l6656:
  4236                           
  4237                           ; BSR set to: 0
  4238  003062  AF79               	btfss	(___flge@ff1+3)& (0+255),7,b
  4239  003064  EF36  F018         	goto	u5821
  4240  003068  EF38  F018         	goto	u5820
  4241  00306C                     u5821:
  4242  00306C  EF41  F018         	goto	l6660
  4243  003070                     u5820:
  4244  003070                     
  4245                           ; BSR set to: 0
  4246  003070  6D76               	negf	___flge@ff1& (0+255),b
  4247  003072  1F77               	comf	(___flge@ff1+1)& (0+255),f,b
  4248  003074  B0D8               	btfsc	status,0,c
  4249  003076  2B77               	incf	(___flge@ff1+1)& (0+255),f,b
  4250  003078  1F78               	comf	(___flge@ff1+2)& (0+255),f,b
  4251  00307A  B0D8               	btfsc	status,0,c
  4252  00307C  2B78               	incf	(___flge@ff1+2)& (0+255),f,b
  4253  00307E  0E80               	movlw	128
  4254  003080  5779               	subfwb	(___flge@ff1+3)& (0+255),f,b
  4255  003082                     l6660:
  4256                           
  4257                           ; BSR set to: 0
  4258  003082  AF7D               	btfss	(___flge@ff2+3)& (0+255),7,b
  4259  003084  EF46  F018         	goto	u5831
  4260  003088  EF48  F018         	goto	u5830
  4261  00308C                     u5831:
  4262  00308C  EF51  F018         	goto	l1656
  4263  003090                     u5830:
  4264  003090                     
  4265                           ; BSR set to: 0
  4266  003090  6D7A               	negf	___flge@ff2& (0+255),b
  4267  003092  1F7B               	comf	(___flge@ff2+1)& (0+255),f,b
  4268  003094  B0D8               	btfsc	status,0,c
  4269  003096  2B7B               	incf	(___flge@ff2+1)& (0+255),f,b
  4270  003098  1F7C               	comf	(___flge@ff2+2)& (0+255),f,b
  4271  00309A  B0D8               	btfsc	status,0,c
  4272  00309C  2B7C               	incf	(___flge@ff2+2)& (0+255),f,b
  4273  00309E  0E80               	movlw	128
  4274  0030A0  577D               	subfwb	(___flge@ff2+3)& (0+255),f,b
  4275  0030A2                     l1656:
  4276                           
  4277                           ; BSR set to: 0
  4278  0030A2  0E00               	movlw	0
  4279  0030A4  1B76               	xorwf	___flge@ff1& (0+255),f,b
  4280  0030A6  0E00               	movlw	0
  4281  0030A8  1B77               	xorwf	(___flge@ff1+1)& (0+255),f,b
  4282  0030AA  0E00               	movlw	0
  4283  0030AC  1B78               	xorwf	(___flge@ff1+2)& (0+255),f,b
  4284  0030AE  0E80               	movlw	128
  4285  0030B0  1B79               	xorwf	(___flge@ff1+3)& (0+255),f,b
  4286  0030B2  0E00               	movlw	0
  4287  0030B4  1B7A               	xorwf	___flge@ff2& (0+255),f,b
  4288  0030B6  0E00               	movlw	0
  4289  0030B8  1B7B               	xorwf	(___flge@ff2+1)& (0+255),f,b
  4290  0030BA  0E00               	movlw	0
  4291  0030BC  1B7C               	xorwf	(___flge@ff2+2)& (0+255),f,b
  4292  0030BE  0E80               	movlw	128
  4293  0030C0  1B7D               	xorwf	(___flge@ff2+3)& (0+255),f,b
  4294  0030C2  517A               	movf	___flge@ff2& (0+255),w,b
  4295  0030C4  5D76               	subwf	___flge@ff1& (0+255),w,b
  4296  0030C6  517B               	movf	(___flge@ff2+1)& (0+255),w,b
  4297  0030C8  5977               	subwfb	(___flge@ff1+1)& (0+255),w,b
  4298  0030CA  517C               	movf	(___flge@ff2+2)& (0+255),w,b
  4299  0030CC  5978               	subwfb	(___flge@ff1+2)& (0+255),w,b
  4300  0030CE  517D               	movf	(___flge@ff2+3)& (0+255),w,b
  4301  0030D0  5979               	subwfb	(___flge@ff1+3)& (0+255),w,b
  4302  0030D2  B0D8               	btfsc	status,0,c
  4303  0030D4  EF6E  F018         	goto	u5841
  4304  0030D8  EF70  F018         	goto	u5840
  4305  0030DC                     u5841:
  4306  0030DC  EF73  F018         	goto	l6666
  4307  0030E0                     u5840:
  4308  0030E0                     
  4309                           ; BSR set to: 0
  4310  0030E0  90D8               	bcf	status,0,c
  4311  0030E2  EF74  F018         	goto	l1661
  4312  0030E6                     l6666:
  4313                           
  4314                           ; BSR set to: 0
  4315  0030E6  80D8               	bsf	status,0,c
  4316  0030E8                     l1661:
  4317                           
  4318                           ; BSR set to: 0
  4319  0030E8  0012               	return		;funcret
  4320  0030EA                     __end_of___flge:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _calcSteering *****************
  4324 ;; Defined at:
  4325 ;;		line 216 in file "main.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  delta           2   73[BANK0 ] short 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:        4 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 10
  4346 ;; This function calls:
  4347 ;;		___fldiv
  4348 ;;		___fltol
  4349 ;;		___xxtofl
  4350 ;;		_setSteering
  4351 ;; This function is called by:
  4352 ;;		_loop
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text21
  4357  002316                     __ptext21:
  4358                           	callstack 0
  4359  002316                     _calcSteering:
  4360                           	callstack 19
  4361  002316                     
  4362                           ;main.c: 217:     int16_t delta = (int16_t)(distLeft - distRight ) - (int16_t)((0) * 1.4
      +                          142135);
  4363  002316  502C               	movf	_distRight^0,w,c	;volatile
  4364  002318  5C2E               	subwf	_distLeft^0,w,c	;volatile
  4365  00231A  0100               	movlb	0	; () banked
  4366  00231C  6FA9               	movwf	calcSteering@delta& (0+255),b
  4367  00231E  502D               	movf	(_distRight+1)^0,w,c	;volatile
  4368  002320  582F               	subwfb	(_distLeft+1)^0,w,c	;volatile
  4369  002322  6FAA               	movwf	(calcSteering@delta+1)& (0+255),b
  4370  002324                     
  4371                           ; BSR set to: 0
  4372                           ;main.c: 218:     delta /= (1.25);
  4373  002324  0E00               	movlw	0
  4374  002326  6F7A               	movwf	___fldiv@a& (0+255),b
  4375  002328  0E00               	movlw	0
  4376  00232A  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  4377  00232C  0EA0               	movlw	160
  4378  00232E  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  4379  002330  0E3F               	movlw	63
  4380  002332  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  4381  002334  C0A9  F068         	movff	calcSteering@delta,___xxtofl@val
  4382  002338  C0AA  F069         	movff	calcSteering@delta+1,___xxtofl@val+1
  4383  00233C  0E00               	movlw	0
  4384  00233E  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  4385  002340  0EFF               	movlw	-1
  4386  002342  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  4387  002344  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  4388  002346  0E01               	movlw	1
  4389  002348  EC55  F013         	call	___xxtofl
  4390  00234C  C068  F076         	movff	?___xxtofl,___fldiv@b
  4391  002350  C069  F077         	movff	?___xxtofl+1,___fldiv@b+1
  4392  002354  C06A  F078         	movff	?___xxtofl+2,___fldiv@b+2
  4393  002358  C06B  F079         	movff	?___xxtofl+3,___fldiv@b+3
  4394  00235C  ECAA  F00C         	call	___fldiv	;wreg free
  4395  002360  C076  F09F         	movff	?___fldiv,___fltol@f1
  4396  002364  C077  F0A0         	movff	?___fldiv+1,___fltol@f1+1
  4397  002368  C078  F0A1         	movff	?___fldiv+2,___fltol@f1+2
  4398  00236C  C079  F0A2         	movff	?___fldiv+3,___fltol@f1+3
  4399  002370  EC6E  F017         	call	___fltol	;wreg free
  4400  002374  C09F  F0A9         	movff	?___fltol,calcSteering@delta
  4401  002378  C0A0  F0AA         	movff	?___fltol+1,calcSteering@delta+1
  4402                           
  4403                           ;main.c: 221:     switch (driveMode){
  4404  00237C  EFE8  F011         	goto	l6884
  4405  002380                     l1313:
  4406  002380                     l6874:
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;main.c: 226:             if(delta > (40)){
  4410  002380  BFAA               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  4411  002382  EFCC  F011         	goto	u6201
  4412  002386  51AA               	movf	(calcSteering@delta+1)& (0+255),w,b
  4413  002388  E109               	bnz	u6200
  4414  00238A  0E29               	movlw	41
  4415  00238C  5DA9               	subwf	calcSteering@delta& (0+255),w,b
  4416  00238E  A0D8               	btfss	status,0,c
  4417  002390  EFCC  F011         	goto	u6201
  4418  002394  EFCE  F011         	goto	u6200
  4419  002398                     u6201:
  4420  002398  EFD4  F011         	goto	l6878
  4421  00239C                     u6200:
  4422  00239C                     
  4423                           ; BSR set to: 0
  4424                           ;main.c: 227:                 delta = (40);
  4425  00239C  0E00               	movlw	0
  4426  00239E  6FAA               	movwf	(calcSteering@delta+1)& (0+255),b
  4427  0023A0  0E28               	movlw	40
  4428  0023A2  6FA9               	movwf	calcSteering@delta& (0+255),b
  4429                           
  4430                           ;main.c: 228:             }else if(delta < -(40)){
  4431  0023A4  EF4C  F012         	goto	l6908
  4432  0023A8                     l6878:
  4433                           
  4434                           ; BSR set to: 0
  4435  0023A8  AFAA               	btfss	(calcSteering@delta+1)& (0+255),7,b
  4436  0023AA  EFE0  F011         	goto	u6211
  4437  0023AE  0ED8               	movlw	216
  4438  0023B0  5DA9               	subwf	calcSteering@delta& (0+255),w,b
  4439  0023B2  0EFF               	movlw	255
  4440  0023B4  59AA               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  4441  0023B6  B0D8               	btfsc	status,0,c
  4442  0023B8  EFE0  F011         	goto	u6211
  4443  0023BC  EFE2  F011         	goto	u6210
  4444  0023C0                     u6211:
  4445  0023C0  EF06  F012         	goto	l1318
  4446  0023C4                     u6210:
  4447  0023C4                     
  4448                           ; BSR set to: 0
  4449                           ;main.c: 229:                 delta = -(40);
  4450  0023C4  0EFF               	movlw	255
  4451  0023C6  6FAA               	movwf	(calcSteering@delta+1)& (0+255),b
  4452  0023C8  0ED8               	movlw	216
  4453  0023CA  6FA9               	movwf	calcSteering@delta& (0+255),b
  4454  0023CC  EF4C  F012         	goto	l6908
  4455  0023D0                     l6884:
  4456  0023D0  5033               	movf	_driveMode^0,w,c
  4457  0023D2  0100               	movlb	0	; () banked
  4458  0023D4  6FA7               	movwf	??_calcSteering& (0+255),b
  4459  0023D6  6BA8               	clrf	(??_calcSteering+1)& (0+255),b
  4460                           
  4461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4462                           ; Switch size 1, requested type "simple"
  4463                           ; Number of cases is 1, Range of values is 0 to 0
  4464                           ; switch strategies available:
  4465                           ; Name         Instructions Cycles
  4466                           ; simple_byte            4     3 (average)
  4467                           ;	Chosen strategy is simple_byte
  4468  0023D8  51A8               	movf	(??_calcSteering+1)& (0+255),w,b
  4469  0023DA  0A00               	xorlw	0	; case 0
  4470  0023DC  B4D8               	btfsc	status,2,c
  4471  0023DE  EFF3  F011         	goto	l7234
  4472  0023E2  EF4C  F012         	goto	l6908
  4473  0023E6                     l7234:
  4474                           
  4475                           ; BSR set to: 0
  4476                           ; Switch size 1, requested type "simple"
  4477                           ; Number of cases is 4, Range of values is 0 to 5
  4478                           ; switch strategies available:
  4479                           ; Name         Instructions Cycles
  4480                           ; simple_byte           13     7 (average)
  4481                           ;	Chosen strategy is simple_byte
  4482  0023E6  51A7               	movf	??_calcSteering& (0+255),w,b
  4483  0023E8  0A00               	xorlw	0	; case 0
  4484  0023EA  B4D8               	btfsc	status,2,c
  4485  0023EC  EFC0  F011         	goto	l6874
  4486  0023F0  0A01               	xorlw	1	; case 1
  4487  0023F2  B4D8               	btfsc	status,2,c
  4488  0023F4  EFC0  F011         	goto	l1313
  4489  0023F8  0A05               	xorlw	5	; case 4
  4490  0023FA  B4D8               	btfsc	status,2,c
  4491  0023FC  EFC0  F011         	goto	l6874
  4492  002400  0A01               	xorlw	1	; case 5
  4493  002402  B4D8               	btfsc	status,2,c
  4494  002404  EFC0  F011         	goto	l6874
  4495  002408  EF4C  F012         	goto	l6908
  4496  00240C                     l1318:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;main.c: 236:     switch (driveMode){
  4500  00240C  EF4C  F012         	goto	l6908
  4501  002410                     l6886:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;main.c: 238:             setSteering(delta, Ratio);
  4505  002410  C0A9  F068         	movff	calcSteering@delta,setSteering@steering
  4506  002414  C0AA  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4507  002418  0E02               	movlw	2
  4508  00241A  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4509  00241C  EC31  F014         	call	_setSteering	;wreg free
  4510                           
  4511                           ;main.c: 239:             break;
  4512  002420  EF71  F012         	goto	l1332
  4513  002424                     l6888:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;main.c: 241:             setSteering(delta, Front);
  4517  002424  C0A9  F068         	movff	calcSteering@delta,setSteering@steering
  4518  002428  C0AA  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4519  00242C  0E03               	movlw	3
  4520  00242E  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4521  002430  EC31  F014         	call	_setSteering	;wreg free
  4522                           
  4523                           ;main.c: 242:             break;
  4524  002434  EF71  F012         	goto	l1332
  4525  002438                     l6890:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;main.c: 244:             setSteering((65), Inverted);
  4529  002438  0E00               	movlw	0
  4530  00243A  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4531  00243C  0E41               	movlw	65
  4532  00243E  6F68               	movwf	setSteering@steering& (0+255),b
  4533  002440  0E00               	movlw	0
  4534  002442  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4535  002444  EC31  F014         	call	_setSteering	;wreg free
  4536                           
  4537                           ;main.c: 245:             break;
  4538  002448  EF71  F012         	goto	l1332
  4539  00244C                     l6894:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;main.c: 250:             if(curveMode == InCurve){
  4543  00244C  0E02               	movlw	2
  4544  00244E  1832               	xorwf	_curveMode^0,w,c
  4545  002450  A4D8               	btfss	status,2,c
  4546  002452  EF2D  F012         	goto	u6221
  4547  002456  EF2F  F012         	goto	u6220
  4548  00245A                     u6221:
  4549  00245A  EF12  F012         	goto	l6888
  4550  00245E                     u6220:
  4551  00245E                     
  4552                           ; BSR set to: 0
  4553                           ;main.c: 251:                 setSteering((55), Ratio);
  4554  00245E  0E00               	movlw	0
  4555  002460  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4556  002462  0E37               	movlw	55
  4557  002464  6F68               	movwf	setSteering@steering& (0+255),b
  4558  002466  0E02               	movlw	2
  4559  002468  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4560  00246A  EC31  F014         	call	_setSteering	;wreg free
  4561                           
  4562                           ;main.c: 252:             } else {
  4563  00246E  EF71  F012         	goto	l1332
  4564  002472                     l6900:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;main.c: 257:             if(curveMode == InCurve){
  4568  002472  0E02               	movlw	2
  4569  002474  1832               	xorwf	_curveMode^0,w,c
  4570  002476  A4D8               	btfss	status,2,c
  4571  002478  EF40  F012         	goto	u6231
  4572  00247C  EF42  F012         	goto	u6230
  4573  002480                     u6231:
  4574  002480  EF12  F012         	goto	l6888
  4575  002484                     u6230:
  4576  002484                     
  4577                           ; BSR set to: 0
  4578                           ;main.c: 258:                 setSteering(-(55), Ratio);
  4579  002484  0EFF               	movlw	255
  4580  002486  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4581  002488  0EC9               	movlw	201
  4582  00248A  6F68               	movwf	setSteering@steering& (0+255),b
  4583  00248C  0E02               	movlw	2
  4584  00248E  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4585  002490  EC31  F014         	call	_setSteering	;wreg free
  4586                           
  4587                           ;main.c: 259:             } else {
  4588  002494  EF71  F012         	goto	l1332
  4589  002498                     l6908:
  4590                           
  4591                           ; BSR set to: 0
  4592  002498  5033               	movf	_driveMode^0,w,c
  4593  00249A  6FA7               	movwf	??_calcSteering& (0+255),b
  4594  00249C  6BA8               	clrf	(??_calcSteering+1)& (0+255),b
  4595                           
  4596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4597                           ; Switch size 1, requested type "simple"
  4598                           ; Number of cases is 1, Range of values is 0 to 0
  4599                           ; switch strategies available:
  4600                           ; Name         Instructions Cycles
  4601                           ; simple_byte            4     3 (average)
  4602                           ;	Chosen strategy is simple_byte
  4603  00249E  51A8               	movf	(??_calcSteering+1)& (0+255),w,b
  4604  0024A0  0A00               	xorlw	0	; case 0
  4605  0024A2  B4D8               	btfsc	status,2,c
  4606  0024A4  EF56  F012         	goto	l7236
  4607  0024A8  EF71  F012         	goto	l1332
  4608  0024AC                     l7236:
  4609                           
  4610                           ; BSR set to: 0
  4611                           ; Switch size 1, requested type "simple"
  4612                           ; Number of cases is 6, Range of values is 0 to 5
  4613                           ; switch strategies available:
  4614                           ; Name         Instructions Cycles
  4615                           ; simple_byte           19    10 (average)
  4616                           ;	Chosen strategy is simple_byte
  4617  0024AC  51A7               	movf	??_calcSteering& (0+255),w,b
  4618  0024AE  0A00               	xorlw	0	; case 0
  4619  0024B0  B4D8               	btfsc	status,2,c
  4620  0024B2  EF12  F012         	goto	l6888
  4621  0024B6  0A01               	xorlw	1	; case 1
  4622  0024B8  B4D8               	btfsc	status,2,c
  4623  0024BA  EF08  F012         	goto	l6886
  4624  0024BE  0A03               	xorlw	3	; case 2
  4625  0024C0  B4D8               	btfsc	status,2,c
  4626  0024C2  EF1C  F012         	goto	l6890
  4627  0024C6  0A01               	xorlw	1	; case 3
  4628  0024C8  B4D8               	btfsc	status,2,c
  4629  0024CA  EF1C  F012         	goto	l6890
  4630  0024CE  0A07               	xorlw	7	; case 4
  4631  0024D0  B4D8               	btfsc	status,2,c
  4632  0024D2  EF26  F012         	goto	l6894
  4633  0024D6  0A01               	xorlw	1	; case 5
  4634  0024D8  B4D8               	btfsc	status,2,c
  4635  0024DA  EF39  F012         	goto	l6900
  4636  0024DE  EF71  F012         	goto	l1332
  4637  0024E2                     l1332:
  4638  0024E2  0012               	return		;funcret
  4639  0024E4                     __end_of_calcSteering:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function _setSteering *****************
  4643 ;; Defined at:
  4644 ;;		line 372 in file "main.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  steering        2    8[BANK0 ] short 
  4647 ;;  steeringMode    1   10[BANK0 ] enum E17299
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  steeringB       2   15[BANK0 ] short 
  4650 ;;  steeringF       2   13[BANK0 ] short 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4660 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;Total ram usage:        9 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 9
  4667 ;; This function calls:
  4668 ;;		_PWM5_LoadDutyValue
  4669 ;;		_PWM6_LoadDutyValue
  4670 ;;		___awdiv
  4671 ;; This function is called by:
  4672 ;;		_loop
  4673 ;;		_checkBatt
  4674 ;;		_startAccell
  4675 ;;		_calcSteering
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text22
  4680  002862                     __ptext22:
  4681                           	callstack 0
  4682  002862                     _setSteering:
  4683                           	callstack 19
  4684  002862  0E00               	movlw	0
  4685  002864  0100               	movlb	0	; () banked
  4686  002866  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4687  002868  0E00               	movlw	0
  4688  00286A  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4689                           
  4690                           ;main.c: 374:     switch(steeringMode){
  4691  00286C  EF86  F014         	goto	l6334
  4692  002870                     l1375:
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;main.c: 376:             steeringF = (+steering);
  4696  002870  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4697  002874  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4698                           
  4699                           ;main.c: 377:             steeringB = -steering;
  4700  002878  C068  F06B         	movff	setSteering@steering,??_setSteering
  4701  00287C  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4702  002880  1F6B               	comf	??_setSteering& (0+255),f,b
  4703  002882  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4704  002884  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4705  002886  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4706  002888  C06B  F06F         	movff	??_setSteering,setSteering@steeringB
  4707  00288C  C06C  F070         	movff	??_setSteering+1,setSteering@steeringB+1
  4708                           
  4709                           ;main.c: 378:             break;
  4710  002890  EFA7  F014         	goto	l6336
  4711  002894                     l1377:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;main.c: 380:             steeringF = (+steering);
  4715  002894  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4716  002898  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4717                           
  4718                           ;main.c: 381:             steeringB = (+steering);
  4719  00289C  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4720  0028A0  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4721                           
  4722                           ;main.c: 382:             break;
  4723  0028A4  EFA7  F014         	goto	l6336
  4724  0028A8                     l1378:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;main.c: 384:             steeringF = (+steering);
  4728  0028A8  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4729  0028AC  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4730  0028B0                     
  4731                           ; BSR set to: 0
  4732                           ;main.c: 385:             steeringB = (-steering / (2));
  4733  0028B0  C068  F060         	movff	setSteering@steering,___awdiv@dividend
  4734  0028B4  C069  F061         	movff	setSteering@steering+1,___awdiv@dividend+1
  4735  0028B8  0EFF               	movlw	255
  4736  0028BA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4737  0028BC  0EFE               	movlw	254
  4738  0028BE  6F62               	movwf	___awdiv@divisor& (0+255),b
  4739  0028C0  EC93  F01A         	call	___awdiv	;wreg free
  4740  0028C4  C060  F06F         	movff	?___awdiv,setSteering@steeringB
  4741  0028C8  C061  F070         	movff	?___awdiv+1,setSteering@steeringB+1
  4742                           
  4743                           ;main.c: 386:             break;
  4744  0028CC  EFA7  F014         	goto	l6336
  4745  0028D0                     l1379:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;main.c: 388:             steeringF = (+steering);
  4749  0028D0  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4750  0028D4  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4751  0028D8                     
  4752                           ; BSR set to: 0
  4753                           ;main.c: 389:             steeringB = 0;
  4754  0028D8  0E00               	movlw	0
  4755  0028DA  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4756  0028DC  0E00               	movlw	0
  4757  0028DE  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4758                           
  4759                           ;main.c: 390:             break;
  4760  0028E0  EFA7  F014         	goto	l6336
  4761  0028E4                     l6326:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;main.c: 392:             steeringF = 0;
  4765  0028E4  0E00               	movlw	0
  4766  0028E6  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4767  0028E8  0E00               	movlw	0
  4768  0028EA  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4769  0028EC                     
  4770                           ; BSR set to: 0
  4771                           ;main.c: 393:             steeringB = (+steering);
  4772  0028EC  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4773  0028F0  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4774                           
  4775                           ;main.c: 394:             break;
  4776  0028F4  EFA7  F014         	goto	l6336
  4777  0028F8                     l6330:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;main.c: 396:             steeringF = 0;
  4781  0028F8  0E00               	movlw	0
  4782  0028FA  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4783  0028FC  0E00               	movlw	0
  4784  0028FE  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4785                           
  4786                           ;main.c: 397:             steeringB = 0;
  4787  002900  0E00               	movlw	0
  4788  002902  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4789  002904  0E00               	movlw	0
  4790  002906  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4791                           
  4792                           ;main.c: 398:             break;
  4793  002908  EFA7  F014         	goto	l6336
  4794  00290C                     l6334:
  4795                           
  4796                           ; BSR set to: 0
  4797  00290C  516A               	movf	setSteering@steeringMode& (0+255),w,b
  4798  00290E  6F6B               	movwf	??_setSteering& (0+255),b
  4799  002910  6B6C               	clrf	(??_setSteering+1)& (0+255),b
  4800                           
  4801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4802                           ; Switch size 1, requested type "simple"
  4803                           ; Number of cases is 1, Range of values is 0 to 0
  4804                           ; switch strategies available:
  4805                           ; Name         Instructions Cycles
  4806                           ; simple_byte            4     3 (average)
  4807                           ;	Chosen strategy is simple_byte
  4808  002912  516C               	movf	(??_setSteering+1)& (0+255),w,b
  4809  002914  0A00               	xorlw	0	; case 0
  4810  002916  B4D8               	btfsc	status,2,c
  4811  002918  EF90  F014         	goto	l7238
  4812  00291C  EF7C  F014         	goto	l6330
  4813  002920                     l7238:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ; Switch size 1, requested type "simple"
  4817                           ; Number of cases is 5, Range of values is 0 to 4
  4818                           ; switch strategies available:
  4819                           ; Name         Instructions Cycles
  4820                           ; simple_byte           16     9 (average)
  4821                           ;	Chosen strategy is simple_byte
  4822  002920  516B               	movf	??_setSteering& (0+255),w,b
  4823  002922  0A00               	xorlw	0	; case 0
  4824  002924  B4D8               	btfsc	status,2,c
  4825  002926  EF38  F014         	goto	l1375
  4826  00292A  0A01               	xorlw	1	; case 1
  4827  00292C  B4D8               	btfsc	status,2,c
  4828  00292E  EF4A  F014         	goto	l1377
  4829  002932  0A03               	xorlw	3	; case 2
  4830  002934  B4D8               	btfsc	status,2,c
  4831  002936  EF54  F014         	goto	l1378
  4832  00293A  0A01               	xorlw	1	; case 3
  4833  00293C  B4D8               	btfsc	status,2,c
  4834  00293E  EF68  F014         	goto	l1379
  4835  002942  0A07               	xorlw	7	; case 4
  4836  002944  B4D8               	btfsc	status,2,c
  4837  002946  EF72  F014         	goto	l6326
  4838  00294A  EF7C  F014         	goto	l6330
  4839  00294E                     l6336:
  4840                           
  4841                           ;main.c: 401:     if(steeringF > ((65))){
  4842  00294E  0100               	movlb	0	; () banked
  4843  002950  BF6E               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  4844  002952  EFB4  F014         	goto	u5321
  4845  002956  516E               	movf	(setSteering@steeringF+1)& (0+255),w,b
  4846  002958  E109               	bnz	u5320
  4847  00295A  0E42               	movlw	66
  4848  00295C  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4849  00295E  A0D8               	btfss	status,0,c
  4850  002960  EFB4  F014         	goto	u5321
  4851  002964  EFB6  F014         	goto	u5320
  4852  002968                     u5321:
  4853  002968  EFBC  F014         	goto	l6340
  4854  00296C                     u5320:
  4855  00296C                     
  4856                           ; BSR set to: 0
  4857                           ;main.c: 402:         steeringF = ((65));
  4858  00296C  0E00               	movlw	0
  4859  00296E  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4860  002970  0E41               	movlw	65
  4861  002972  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4862                           
  4863                           ;main.c: 403:     } else if(steeringF < (-(65))){
  4864  002974  EFCE  F014         	goto	l6344
  4865  002978                     l6340:
  4866                           
  4867                           ; BSR set to: 0
  4868  002978  AF6E               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  4869  00297A  EFC8  F014         	goto	u5331
  4870  00297E  0EBF               	movlw	191
  4871  002980  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4872  002982  0EFF               	movlw	255
  4873  002984  596E               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  4874  002986  B0D8               	btfsc	status,0,c
  4875  002988  EFC8  F014         	goto	u5331
  4876  00298C  EFCA  F014         	goto	u5330
  4877  002990                     u5331:
  4878  002990  EFCE  F014         	goto	l6344
  4879  002994                     u5330:
  4880  002994                     
  4881                           ; BSR set to: 0
  4882                           ;main.c: 404:         steeringF = (-(65));
  4883  002994  0EFF               	movlw	255
  4884  002996  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4885  002998  0EBF               	movlw	191
  4886  00299A  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4887  00299C                     l6344:
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;main.c: 407:     if(steeringB > ((40))){
  4891  00299C  BF70               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  4892  00299E  EFDA  F014         	goto	u5341
  4893  0029A2  5170               	movf	(setSteering@steeringB+1)& (0+255),w,b
  4894  0029A4  E109               	bnz	u5340
  4895  0029A6  0E29               	movlw	41
  4896  0029A8  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4897  0029AA  A0D8               	btfss	status,0,c
  4898  0029AC  EFDA  F014         	goto	u5341
  4899  0029B0  EFDC  F014         	goto	u5340
  4900  0029B4                     u5341:
  4901  0029B4  EFE2  F014         	goto	l6348
  4902  0029B8                     u5340:
  4903  0029B8                     
  4904                           ; BSR set to: 0
  4905                           ;main.c: 408:         steeringB = ((40));
  4906  0029B8  0E00               	movlw	0
  4907  0029BA  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4908  0029BC  0E28               	movlw	40
  4909  0029BE  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4910                           
  4911                           ;main.c: 409:     } else if(steeringB < (-(40))){
  4912  0029C0  EFF4  F014         	goto	l6352
  4913  0029C4                     l6348:
  4914                           
  4915                           ; BSR set to: 0
  4916  0029C4  AF70               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  4917  0029C6  EFEE  F014         	goto	u5351
  4918  0029CA  0ED8               	movlw	216
  4919  0029CC  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4920  0029CE  0EFF               	movlw	255
  4921  0029D0  5970               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  4922  0029D2  B0D8               	btfsc	status,0,c
  4923  0029D4  EFEE  F014         	goto	u5351
  4924  0029D8  EFF0  F014         	goto	u5350
  4925  0029DC                     u5351:
  4926  0029DC  EFF4  F014         	goto	l6352
  4927  0029E0                     u5350:
  4928  0029E0                     
  4929                           ; BSR set to: 0
  4930                           ;main.c: 410:         steeringB = (-(40));
  4931  0029E0  0EFF               	movlw	255
  4932  0029E2  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4933  0029E4  0ED8               	movlw	216
  4934  0029E6  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4935  0029E8                     l6352:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;main.c: 414:     PWM6_LoadDutyValue((uint16_t)((352) + steeringF));
  4939  0029E8  0E60               	movlw	96
  4940  0029EA  256D               	addwf	setSteering@steeringF& (0+255),w,b
  4941  0029EC  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  4942  0029EE  0E01               	movlw	1
  4943  0029F0  216E               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  4944  0029F2  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  4945  0029F4  ECC5  F01F         	call	_PWM6_LoadDutyValue	;wreg free
  4946  0029F8                     
  4947                           ;main.c: 415:     PWM5_LoadDutyValue((uint16_t)((357) + steeringB));
  4948  0029F8  0E65               	movlw	101
  4949  0029FA  0100               	movlb	0	; () banked
  4950  0029FC  256F               	addwf	setSteering@steeringB& (0+255),w,b
  4951  0029FE  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  4952  002A00  0E01               	movlw	1
  4953  002A02  2170               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  4954  002A04  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  4955  002A06  ECE0  F01F         	call	_PWM5_LoadDutyValue	;wreg free
  4956  002A0A  0012               	return		;funcret
  4957  002A0C                     __end_of_setSteering:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _PWM6_LoadDutyValue *****************
  4961 ;; Defined at:
  4962 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;Total ram usage:        4 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 8
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_setSteering
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text23
  4991  003F8A                     __ptext23:
  4992                           	callstack 0
  4993  003F8A                     _PWM6_LoadDutyValue:
  4994                           	callstack 19
  4995  003F8A                     
  4996                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4997  003F8A  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4998  003F8E  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  4999  003F92  0100               	movlb	0	; () banked
  5000  003F94  90D8               	bcf	status,0,c
  5001  003F96  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5002  003F98  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5003  003F9A  90D8               	bcf	status,0,c
  5004  003F9C  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5005  003F9E  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5006  003FA0  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  5007  003FA2  6E69               	movwf	105,c	;volatile
  5008                           
  5009                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  5010  003FA4  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5011  003FA8  0E03               	movlw	3
  5012  003FAA  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
  5013  003FAC  0E06               	movlw	6
  5014  003FAE  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
  5015  003FB0                     u5145:
  5016  003FB0  90D8               	bcf	status,0,c
  5017  003FB2  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5018  003FB4  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5019  003FB6  EFD8  F01F         	goto	u5145
  5020  003FBA  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  5021  003FBC  6E68               	movwf	104,c	;volatile
  5022  003FBE                     
  5023                           ; BSR set to: 0
  5024  003FBE  0012               	return		;funcret
  5025  003FC0                     __end_of_PWM6_LoadDutyValue:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _PWM5_LoadDutyValue *****************
  5029 ;; Defined at:
  5030 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  dutyValue       2   31[COMRAM] unsigned short 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;Total ram usage:        4 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 8
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_setSteering
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text24
  5059  003FC0                     __ptext24:
  5060                           	callstack 0
  5061  003FC0                     _PWM5_LoadDutyValue:
  5062                           	callstack 19
  5063  003FC0                     
  5064                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5065  003FC0  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5066  003FC4  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  5067  003FC8  0100               	movlb	0	; () banked
  5068  003FCA  90D8               	bcf	status,0,c
  5069  003FCC  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5070  003FCE  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5071  003FD0  90D8               	bcf	status,0,c
  5072  003FD2  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5073  003FD4  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5074  003FD6  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  5075  003FD8  6E6D               	movwf	109,c	;volatile
  5076                           
  5077                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  5078  003FDA  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5079  003FDE  0E03               	movlw	3
  5080  003FE0  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
  5081  003FE2  0E06               	movlw	6
  5082  003FE4  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
  5083  003FE6                     u5135:
  5084  003FE6  90D8               	bcf	status,0,c
  5085  003FE8  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5086  003FEA  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5087  003FEC  EFF3  F01F         	goto	u5135
  5088  003FF0  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  5089  003FF2  6E6C               	movwf	108,c	;volatile
  5090  003FF4                     
  5091                           ; BSR set to: 0
  5092  003FF4  0012               	return		;funcret
  5093  003FF6                     __end_of_PWM5_LoadDutyValue:
  5094                           	callstack 0
  5095                           
  5096 ;; *************** function ___fldiv *****************
  5097 ;; Defined at:
  5098 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  b               4   22[BANK0 ] void 
  5101 ;;  a               4   26[BANK0 ] void 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  grs             4   41[BANK0 ] unsigned long 
  5104 ;;  rem             4   34[BANK0 ] unsigned long 
  5105 ;;  new_exp         2   39[BANK0 ] short 
  5106 ;;  aexp            1   46[BANK0 ] unsigned char 
  5107 ;;  bexp            1   45[BANK0 ] unsigned char 
  5108 ;;  sign            1   38[BANK0 ] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  4   22[BANK0 ] unsigned char 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5118 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;Total ram usage:       25 bytes
  5123 ;; Hardware stack levels used: 1
  5124 ;; Hardware stack levels required when called: 8
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_calcSteering
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text25
  5133  001954                     __ptext25:
  5134                           	callstack 0
  5135  001954                     ___fldiv:
  5136                           	callstack 20
  5137  001954  0100               	movlb	0	; () banked
  5138  001956  5179               	movf	(___fldiv@b+3)& (0+255),w,b
  5139  001958  0B80               	andlw	128
  5140  00195A  6F86               	movwf	___fldiv@sign& (0+255),b
  5141  00195C  5179               	movf	(___fldiv@b+3)& (0+255),w,b
  5142  00195E  2579               	addwf	(___fldiv@b+3)& (0+255),w,b
  5143  001960  6F8D               	movwf	___fldiv@bexp& (0+255),b
  5144  001962                     
  5145                           ; BSR set to: 0
  5146  001962  AF78               	btfss	(___fldiv@b+2)& (0+255),7,b
  5147  001964  EFB6  F00C         	goto	u5381
  5148  001968  EFB8  F00C         	goto	u5380
  5149  00196C                     u5381:
  5150  00196C  EFB9  F00C         	goto	l6386
  5151  001970                     u5380:
  5152  001970                     
  5153                           ; BSR set to: 0
  5154  001970  818D               	bsf	___fldiv@bexp& (0+255),0,b
  5155  001972                     l6386:
  5156                           
  5157                           ; BSR set to: 0
  5158  001972  518D               	movf	___fldiv@bexp& (0+255),w,b
  5159  001974  B4D8               	btfsc	status,2,c
  5160  001976  EFBF  F00C         	goto	u5391
  5161  00197A  EFC1  F00C         	goto	u5390
  5162  00197E                     u5391:
  5163  00197E  EFD6  F00C         	goto	l6396
  5164  001982                     u5390:
  5165  001982                     
  5166                           ; BSR set to: 0
  5167  001982  298D               	incf	___fldiv@bexp& (0+255),w,b
  5168  001984  A4D8               	btfss	status,2,c
  5169  001986  EFC7  F00C         	goto	u5401
  5170  00198A  EFC9  F00C         	goto	u5400
  5171  00198E                     u5401:
  5172  00198E  EFD1  F00C         	goto	l6392
  5173  001992                     u5400:
  5174  001992                     
  5175                           ; BSR set to: 0
  5176  001992  0E00               	movlw	0
  5177  001994  6F76               	movwf	___fldiv@b& (0+255),b
  5178  001996  0E00               	movlw	0
  5179  001998  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  5180  00199A  0E00               	movlw	0
  5181  00199C  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  5182  00199E  0E00               	movlw	0
  5183  0019A0  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  5184  0019A2                     l6392:
  5185                           
  5186                           ; BSR set to: 0
  5187  0019A2  8F78               	bsf	(___fldiv@b+2)& (0+255),7,b
  5188  0019A4                     
  5189                           ; BSR set to: 0
  5190  0019A4  0E00               	movlw	0
  5191  0019A6  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  5192  0019A8  EFDE  F00C         	goto	l6398
  5193  0019AC                     l6396:
  5194                           
  5195                           ; BSR set to: 0
  5196  0019AC  0E00               	movlw	0
  5197  0019AE  6F76               	movwf	___fldiv@b& (0+255),b
  5198  0019B0  0E00               	movlw	0
  5199  0019B2  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  5200  0019B4  0E00               	movlw	0
  5201  0019B6  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  5202  0019B8  0E00               	movlw	0
  5203  0019BA  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  5204  0019BC                     l6398:
  5205                           
  5206                           ; BSR set to: 0
  5207  0019BC  517D               	movf	(___fldiv@a+3)& (0+255),w,b
  5208  0019BE  0B80               	andlw	128
  5209  0019C0  1B86               	xorwf	___fldiv@sign& (0+255),f,b
  5210  0019C2                     
  5211                           ; BSR set to: 0
  5212  0019C2  517D               	movf	(___fldiv@a+3)& (0+255),w,b
  5213  0019C4  257D               	addwf	(___fldiv@a+3)& (0+255),w,b
  5214  0019C6  6F8E               	movwf	___fldiv@aexp& (0+255),b
  5215  0019C8                     
  5216                           ; BSR set to: 0
  5217  0019C8  AF7C               	btfss	(___fldiv@a+2)& (0+255),7,b
  5218  0019CA  EFE9  F00C         	goto	u5411
  5219  0019CE  EFEB  F00C         	goto	u5410
  5220  0019D2                     u5411:
  5221  0019D2  EFEC  F00C         	goto	l6406
  5222  0019D6                     u5410:
  5223  0019D6                     
  5224                           ; BSR set to: 0
  5225  0019D6  818E               	bsf	___fldiv@aexp& (0+255),0,b
  5226  0019D8                     l6406:
  5227                           
  5228                           ; BSR set to: 0
  5229  0019D8  518E               	movf	___fldiv@aexp& (0+255),w,b
  5230  0019DA  B4D8               	btfsc	status,2,c
  5231  0019DC  EFF2  F00C         	goto	u5421
  5232  0019E0  EFF4  F00C         	goto	u5420
  5233  0019E4                     u5421:
  5234  0019E4  EF09  F00D         	goto	l6416
  5235  0019E8                     u5420:
  5236  0019E8                     
  5237                           ; BSR set to: 0
  5238  0019E8  298E               	incf	___fldiv@aexp& (0+255),w,b
  5239  0019EA  A4D8               	btfss	status,2,c
  5240  0019EC  EFFA  F00C         	goto	u5431
  5241  0019F0  EFFC  F00C         	goto	u5430
  5242  0019F4                     u5431:
  5243  0019F4  EF04  F00D         	goto	l6412
  5244  0019F8                     u5430:
  5245  0019F8                     
  5246                           ; BSR set to: 0
  5247  0019F8  0E00               	movlw	0
  5248  0019FA  6F7A               	movwf	___fldiv@a& (0+255),b
  5249  0019FC  0E00               	movlw	0
  5250  0019FE  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  5251  001A00  0E00               	movlw	0
  5252  001A02  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  5253  001A04  0E00               	movlw	0
  5254  001A06  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  5255  001A08                     l6412:
  5256                           
  5257                           ; BSR set to: 0
  5258  001A08  8F7C               	bsf	(___fldiv@a+2)& (0+255),7,b
  5259  001A0A                     
  5260                           ; BSR set to: 0
  5261  001A0A  0E00               	movlw	0
  5262  001A0C  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  5263  001A0E  EF11  F00D         	goto	l6418
  5264  001A12                     l6416:
  5265                           
  5266                           ; BSR set to: 0
  5267  001A12  0E00               	movlw	0
  5268  001A14  6F7A               	movwf	___fldiv@a& (0+255),b
  5269  001A16  0E00               	movlw	0
  5270  001A18  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  5271  001A1A  0E00               	movlw	0
  5272  001A1C  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  5273  001A1E  0E00               	movlw	0
  5274  001A20  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  5275  001A22                     l6418:
  5276                           
  5277                           ; BSR set to: 0
  5278  001A22  517A               	movf	___fldiv@a& (0+255),w,b
  5279  001A24  117B               	iorwf	(___fldiv@a+1)& (0+255),w,b
  5280  001A26  117C               	iorwf	(___fldiv@a+2)& (0+255),w,b
  5281  001A28  117D               	iorwf	(___fldiv@a+3)& (0+255),w,b
  5282  001A2A  A4D8               	btfss	status,2,c
  5283  001A2C  EF1A  F00D         	goto	u5441
  5284  001A30  EF1C  F00D         	goto	u5440
  5285  001A34                     u5441:
  5286  001A34  EF34  F00D         	goto	l6430
  5287  001A38                     u5440:
  5288  001A38                     
  5289                           ; BSR set to: 0
  5290  001A38  0E00               	movlw	0
  5291  001A3A  6F76               	movwf	___fldiv@b& (0+255),b
  5292  001A3C  0E00               	movlw	0
  5293  001A3E  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  5294  001A40  0E00               	movlw	0
  5295  001A42  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  5296  001A44  0E00               	movlw	0
  5297  001A46  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  5298  001A48                     
  5299                           ; BSR set to: 0
  5300  001A48  0E80               	movlw	128
  5301  001A4A  1378               	iorwf	(___fldiv@b+2)& (0+255),f,b
  5302  001A4C  0E7F               	movlw	127
  5303  001A4E  1379               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5304  001A50                     l6424:
  5305                           
  5306                           ; BSR set to: 0
  5307  001A50  5186               	movf	___fldiv@sign& (0+255),w,b
  5308  001A52  1379               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5309  001A54                     
  5310                           ; BSR set to: 0
  5311  001A54  C076  F076         	movff	___fldiv@b,?___fldiv
  5312  001A58  C077  F077         	movff	___fldiv@b+1,?___fldiv+1
  5313  001A5C  C078  F078         	movff	___fldiv@b+2,?___fldiv+2
  5314  001A60  C079  F079         	movff	___fldiv@b+3,?___fldiv+3
  5315  001A64  EF77  F00E         	goto	l1973
  5316  001A68                     l6430:
  5317                           
  5318                           ; BSR set to: 0
  5319  001A68  518D               	movf	___fldiv@bexp& (0+255),w,b
  5320  001A6A  A4D8               	btfss	status,2,c
  5321  001A6C  EF3A  F00D         	goto	u5451
  5322  001A70  EF3C  F00D         	goto	u5450
  5323  001A74                     u5451:
  5324  001A74  EF46  F00D         	goto	l6438
  5325  001A78                     u5450:
  5326  001A78                     
  5327                           ; BSR set to: 0
  5328  001A78  0E00               	movlw	0
  5329  001A7A  6F76               	movwf	?___fldiv& (0+255),b
  5330  001A7C  0E00               	movlw	0
  5331  001A7E  6F77               	movwf	(?___fldiv+1)& (0+255),b
  5332  001A80  0E00               	movlw	0
  5333  001A82  6F78               	movwf	(?___fldiv+2)& (0+255),b
  5334  001A84  0E00               	movlw	0
  5335  001A86  6F79               	movwf	(?___fldiv+3)& (0+255),b
  5336  001A88  EF77  F00E         	goto	l1973
  5337  001A8C                     l6438:
  5338                           
  5339                           ; BSR set to: 0
  5340  001A8C  518E               	movf	___fldiv@aexp& (0+255),w,b
  5341  001A8E  C08D  F07E         	movff	___fldiv@bexp,??___fldiv
  5342  001A92  6B7F               	clrf	(??___fldiv+1)& (0+255),b
  5343  001A94  5F7E               	subwf	??___fldiv& (0+255),f,b
  5344  001A96  0E00               	movlw	0
  5345  001A98  5B7F               	subwfb	(??___fldiv+1)& (0+255),f,b
  5346  001A9A  0E7F               	movlw	127
  5347  001A9C  257E               	addwf	??___fldiv& (0+255),w,b
  5348  001A9E  6F87               	movwf	___fldiv@new_exp& (0+255),b
  5349  001AA0  0E00               	movlw	0
  5350  001AA2  217F               	addwfc	(??___fldiv+1)& (0+255),w,b
  5351  001AA4  6F88               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5352  001AA6                     
  5353                           ; BSR set to: 0
  5354  001AA6  C076  F082         	movff	___fldiv@b,___fldiv@rem
  5355  001AAA  C077  F083         	movff	___fldiv@b+1,___fldiv@rem+1
  5356  001AAE  C078  F084         	movff	___fldiv@b+2,___fldiv@rem+2
  5357  001AB2  C079  F085         	movff	___fldiv@b+3,___fldiv@rem+3
  5358  001AB6                     
  5359                           ; BSR set to: 0
  5360  001AB6  0E00               	movlw	0
  5361  001AB8  6F76               	movwf	___fldiv@b& (0+255),b
  5362  001ABA  0E00               	movlw	0
  5363  001ABC  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  5364  001ABE  0E00               	movlw	0
  5365  001AC0  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  5366  001AC2  0E00               	movlw	0
  5367  001AC4  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  5368  001AC6                     
  5369                           ; BSR set to: 0
  5370  001AC6  0E00               	movlw	0
  5371  001AC8  6F89               	movwf	___fldiv@grs& (0+255),b
  5372  001ACA  0E00               	movlw	0
  5373  001ACC  6F8A               	movwf	(___fldiv@grs+1)& (0+255),b
  5374  001ACE  0E00               	movlw	0
  5375  001AD0  6F8B               	movwf	(___fldiv@grs+2)& (0+255),b
  5376  001AD2  0E00               	movlw	0
  5377  001AD4  6F8C               	movwf	(___fldiv@grs+3)& (0+255),b
  5378  001AD6                     
  5379                           ; BSR set to: 0
  5380  001AD6  0E00               	movlw	0
  5381  001AD8  6F8E               	movwf	___fldiv@aexp& (0+255),b
  5382  001ADA  EFA7  F00D         	goto	l1975
  5383  001ADE                     l6448:
  5384                           
  5385                           ; BSR set to: 0
  5386  001ADE  518E               	movf	___fldiv@aexp& (0+255),w,b
  5387  001AE0  B4D8               	btfsc	status,2,c
  5388  001AE2  EF75  F00D         	goto	u5461
  5389  001AE6  EF77  F00D         	goto	u5460
  5390  001AEA                     u5461:
  5391  001AEA  EF8E  F00D         	goto	l6456
  5392  001AEE                     u5460:
  5393  001AEE                     
  5394                           ; BSR set to: 0
  5395  001AEE  90D8               	bcf	status,0,c
  5396  001AF0  3782               	rlcf	___fldiv@rem& (0+255),f,b
  5397  001AF2  3783               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5398  001AF4  3784               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5399  001AF6  3785               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5400  001AF8  90D8               	bcf	status,0,c
  5401  001AFA  3776               	rlcf	___fldiv@b& (0+255),f,b
  5402  001AFC  3777               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5403  001AFE  3778               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5404  001B00  3779               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5405  001B02                     
  5406                           ; BSR set to: 0
  5407  001B02  AF8C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5408  001B04  EF86  F00D         	goto	u5471
  5409  001B08  EF88  F00D         	goto	u5470
  5410  001B0C                     u5471:
  5411  001B0C  EF89  F00D         	goto	l1978
  5412  001B10                     u5470:
  5413  001B10                     
  5414                           ; BSR set to: 0
  5415  001B10  8176               	bsf	___fldiv@b& (0+255),0,b
  5416  001B12                     l1978:
  5417                           
  5418                           ; BSR set to: 0
  5419  001B12  90D8               	bcf	status,0,c
  5420  001B14  3789               	rlcf	___fldiv@grs& (0+255),f,b
  5421  001B16  378A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5422  001B18  378B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5423  001B1A  378C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5424  001B1C                     l6456:
  5425                           
  5426                           ; BSR set to: 0
  5427  001B1C  517A               	movf	___fldiv@a& (0+255),w,b
  5428  001B1E  5D82               	subwf	___fldiv@rem& (0+255),w,b
  5429  001B20  517B               	movf	(___fldiv@a+1)& (0+255),w,b
  5430  001B22  5983               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5431  001B24  517C               	movf	(___fldiv@a+2)& (0+255),w,b
  5432  001B26  5984               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5433  001B28  517D               	movf	(___fldiv@a+3)& (0+255),w,b
  5434  001B2A  5985               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5435  001B2C  A0D8               	btfss	status,0,c
  5436  001B2E  EF9B  F00D         	goto	u5481
  5437  001B32  EF9D  F00D         	goto	u5480
  5438  001B36                     u5481:
  5439  001B36  EFA6  F00D         	goto	l6462
  5440  001B3A                     u5480:
  5441  001B3A                     
  5442                           ; BSR set to: 0
  5443  001B3A  8D8C               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5444  001B3C                     
  5445                           ; BSR set to: 0
  5446  001B3C  517A               	movf	___fldiv@a& (0+255),w,b
  5447  001B3E  5F82               	subwf	___fldiv@rem& (0+255),f,b
  5448  001B40  517B               	movf	(___fldiv@a+1)& (0+255),w,b
  5449  001B42  5B83               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5450  001B44  517C               	movf	(___fldiv@a+2)& (0+255),w,b
  5451  001B46  5B84               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5452  001B48  517D               	movf	(___fldiv@a+3)& (0+255),w,b
  5453  001B4A  5B85               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5454  001B4C                     l6462:
  5455                           
  5456                           ; BSR set to: 0
  5457  001B4C  2B8E               	incf	___fldiv@aexp& (0+255),f,b
  5458  001B4E                     l1975:
  5459                           
  5460                           ; BSR set to: 0
  5461  001B4E  0E19               	movlw	25
  5462  001B50  658E               	cpfsgt	___fldiv@aexp& (0+255),b
  5463  001B52  EFAD  F00D         	goto	u5491
  5464  001B56  EFAF  F00D         	goto	u5490
  5465  001B5A                     u5491:
  5466  001B5A  EF6F  F00D         	goto	l6448
  5467  001B5E                     u5490:
  5468  001B5E                     
  5469                           ; BSR set to: 0
  5470  001B5E  5182               	movf	___fldiv@rem& (0+255),w,b
  5471  001B60  1183               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  5472  001B62  1184               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  5473  001B64  1185               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  5474  001B66  B4D8               	btfsc	status,2,c
  5475  001B68  EFB8  F00D         	goto	u5501
  5476  001B6C  EFBA  F00D         	goto	u5500
  5477  001B70                     u5501:
  5478  001B70  EFD2  F00D         	goto	l6474
  5479  001B74                     u5500:
  5480  001B74                     
  5481                           ; BSR set to: 0
  5482  001B74  8189               	bsf	___fldiv@grs& (0+255),0,b
  5483  001B76  EFD2  F00D         	goto	l6474
  5484  001B7A                     l6468:
  5485                           
  5486                           ; BSR set to: 0
  5487  001B7A  90D8               	bcf	status,0,c
  5488  001B7C  3776               	rlcf	___fldiv@b& (0+255),f,b
  5489  001B7E  3777               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5490  001B80  3778               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5491  001B82  3779               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5492  001B84                     
  5493                           ; BSR set to: 0
  5494  001B84  AF8C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5495  001B86  EFC7  F00D         	goto	u5511
  5496  001B8A  EFC9  F00D         	goto	u5510
  5497  001B8E                     u5511:
  5498  001B8E  EFCA  F00D         	goto	l1984
  5499  001B92                     u5510:
  5500  001B92                     
  5501                           ; BSR set to: 0
  5502  001B92  8176               	bsf	___fldiv@b& (0+255),0,b
  5503  001B94                     l1984:
  5504                           
  5505                           ; BSR set to: 0
  5506  001B94  90D8               	bcf	status,0,c
  5507  001B96  3789               	rlcf	___fldiv@grs& (0+255),f,b
  5508  001B98  378A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5509  001B9A  378B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5510  001B9C  378C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5511  001B9E  0787               	decf	___fldiv@new_exp& (0+255),f,b
  5512  001BA0  A0D8               	btfss	status,0,c
  5513  001BA2  0788               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  5514  001BA4                     l6474:
  5515                           
  5516                           ; BSR set to: 0
  5517  001BA4  AF78               	btfss	(___fldiv@b+2)& (0+255),7,b
  5518  001BA6  EFD7  F00D         	goto	u5521
  5519  001BAA  EFD9  F00D         	goto	u5520
  5520  001BAE                     u5521:
  5521  001BAE  EFBD  F00D         	goto	l6468
  5522  001BB2                     u5520:
  5523  001BB2                     
  5524                           ; BSR set to: 0
  5525  001BB2  0E00               	movlw	0
  5526  001BB4  6F8E               	movwf	___fldiv@aexp& (0+255),b
  5527  001BB6                     
  5528                           ; BSR set to: 0
  5529  001BB6  AF8C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5530  001BB8  EFE0  F00D         	goto	u5531
  5531  001BBC  EFE2  F00D         	goto	u5530
  5532  001BC0                     u5531:
  5533  001BC0  EF06  F00E         	goto	l1986
  5534  001BC4                     u5530:
  5535  001BC4                     
  5536                           ; BSR set to: 0
  5537  001BC4  0EFF               	movlw	255
  5538  001BC6  1589               	andwf	___fldiv@grs& (0+255),w,b
  5539  001BC8  6F7E               	movwf	??___fldiv& (0+255),b
  5540  001BCA  0EFF               	movlw	255
  5541  001BCC  158A               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5542  001BCE  6F7F               	movwf	(??___fldiv+1)& (0+255),b
  5543  001BD0  0EFF               	movlw	255
  5544  001BD2  158B               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5545  001BD4  6F80               	movwf	(??___fldiv+2)& (0+255),b
  5546  001BD6  0E7F               	movlw	127
  5547  001BD8  158C               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5548  001BDA  6F81               	movwf	(??___fldiv+3)& (0+255),b
  5549  001BDC  517E               	movf	??___fldiv& (0+255),w,b
  5550  001BDE  117F               	iorwf	(??___fldiv+1)& (0+255),w,b
  5551  001BE0  1180               	iorwf	(??___fldiv+2)& (0+255),w,b
  5552  001BE2  1181               	iorwf	(??___fldiv+3)& (0+255),w,b
  5553  001BE4  B4D8               	btfsc	status,2,c
  5554  001BE6  EFF7  F00D         	goto	u5541
  5555  001BEA  EFF9  F00D         	goto	u5540
  5556  001BEE                     u5541:
  5557  001BEE  EFFD  F00D         	goto	l1987
  5558  001BF2                     u5540:
  5559  001BF2                     l6482:
  5560                           
  5561                           ; BSR set to: 0
  5562  001BF2  0E01               	movlw	1
  5563  001BF4  6F8E               	movwf	___fldiv@aexp& (0+255),b
  5564  001BF6  EF06  F00E         	goto	l1986
  5565  001BFA                     l1987:
  5566                           
  5567                           ; BSR set to: 0
  5568  001BFA  A176               	btfss	___fldiv@b& (0+255),0,b
  5569  001BFC  EF02  F00E         	goto	u5551
  5570  001C00  EF04  F00E         	goto	u5550
  5571  001C04                     u5551:
  5572  001C04  EF06  F00E         	goto	l1986
  5573  001C08                     u5550:
  5574  001C08  EFF9  F00D         	goto	l6482
  5575  001C0C                     l1986:
  5576                           
  5577                           ; BSR set to: 0
  5578  001C0C  518E               	movf	___fldiv@aexp& (0+255),w,b
  5579  001C0E  B4D8               	btfsc	status,2,c
  5580  001C10  EF0C  F00E         	goto	u5561
  5581  001C14  EF0E  F00E         	goto	u5560
  5582  001C18                     u5561:
  5583  001C18  EF32  F00E         	goto	l6494
  5584  001C1C                     u5560:
  5585  001C1C                     
  5586                           ; BSR set to: 0
  5587  001C1C  0E01               	movlw	1
  5588  001C1E  2776               	addwf	___fldiv@b& (0+255),f,b
  5589  001C20  0E00               	movlw	0
  5590  001C22  2377               	addwfc	(___fldiv@b+1)& (0+255),f,b
  5591  001C24  2378               	addwfc	(___fldiv@b+2)& (0+255),f,b
  5592  001C26  2379               	addwfc	(___fldiv@b+3)& (0+255),f,b
  5593  001C28                     
  5594                           ; BSR set to: 0
  5595  001C28  A179               	btfss	(___fldiv@b+3)& (0+255),0,b
  5596  001C2A  EF19  F00E         	goto	u5571
  5597  001C2E  EF1B  F00E         	goto	u5570
  5598  001C32                     u5571:
  5599  001C32  EF32  F00E         	goto	l6494
  5600  001C36                     u5570:
  5601  001C36                     
  5602                           ; BSR set to: 0
  5603  001C36  C076  F07E         	movff	___fldiv@b,??___fldiv
  5604  001C3A  C077  F07F         	movff	___fldiv@b+1,??___fldiv+1
  5605  001C3E  C078  F080         	movff	___fldiv@b+2,??___fldiv+2
  5606  001C42  C079  F081         	movff	___fldiv@b+3,??___fldiv+3
  5607  001C46  3581               	rlcf	(??___fldiv+3)& (0+255),w,b
  5608  001C48  3381               	rrcf	(??___fldiv+3)& (0+255),f,b
  5609  001C4A  3380               	rrcf	(??___fldiv+2)& (0+255),f,b
  5610  001C4C  337F               	rrcf	(??___fldiv+1)& (0+255),f,b
  5611  001C4E  337E               	rrcf	??___fldiv& (0+255),f,b
  5612  001C50  C07E  F076         	movff	??___fldiv,___fldiv@b
  5613  001C54  C07F  F077         	movff	??___fldiv+1,___fldiv@b+1
  5614  001C58  C080  F078         	movff	??___fldiv+2,___fldiv@b+2
  5615  001C5C  C081  F079         	movff	??___fldiv+3,___fldiv@b+3
  5616  001C60                     
  5617                           ; BSR set to: 0
  5618  001C60  4B87               	infsnz	___fldiv@new_exp& (0+255),f,b
  5619  001C62  2B88               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5620  001C64                     l6494:
  5621                           
  5622                           ; BSR set to: 0
  5623  001C64  BF88               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5624  001C66  EF3D  F00E         	goto	u5581
  5625  001C6A  5188               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5626  001C6C  E108               	bnz	u5580
  5627  001C6E  2987               	incf	___fldiv@new_exp& (0+255),w,b
  5628  001C70  A0D8               	btfss	status,0,c
  5629  001C72  EF3D  F00E         	goto	u5581
  5630  001C76  EF3F  F00E         	goto	u5580
  5631  001C7A                     u5581:
  5632  001C7A  EF4A  F00E         	goto	l6498
  5633  001C7E                     u5580:
  5634  001C7E                     
  5635                           ; BSR set to: 0
  5636  001C7E  0E00               	movlw	0
  5637  001C80  6F88               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5638  001C82  6987               	setf	___fldiv@new_exp& (0+255),b
  5639  001C84  0E00               	movlw	0
  5640  001C86  6F76               	movwf	___fldiv@b& (0+255),b
  5641  001C88  0E00               	movlw	0
  5642  001C8A  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  5643  001C8C  0E00               	movlw	0
  5644  001C8E  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  5645  001C90  0E00               	movlw	0
  5646  001C92  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  5647  001C94                     l6498:
  5648                           
  5649                           ; BSR set to: 0
  5650  001C94  BF88               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5651  001C96  EF57  F00E         	goto	u5590
  5652  001C9A  5188               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5653  001C9C  E106               	bnz	u5591
  5654  001C9E  0587               	decf	___fldiv@new_exp& (0+255),w,b
  5655  001CA0  B0D8               	btfsc	status,0,c
  5656  001CA2  EF55  F00E         	goto	u5591
  5657  001CA6  EF57  F00E         	goto	u5590
  5658  001CAA                     u5591:
  5659  001CAA  EF65  F00E         	goto	l6502
  5660  001CAE                     u5590:
  5661  001CAE                     
  5662                           ; BSR set to: 0
  5663  001CAE  0E00               	movlw	0
  5664  001CB0  6F88               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5665  001CB2  0E00               	movlw	0
  5666  001CB4  6F87               	movwf	___fldiv@new_exp& (0+255),b
  5667  001CB6  0E00               	movlw	0
  5668  001CB8  6F76               	movwf	___fldiv@b& (0+255),b
  5669  001CBA  0E00               	movlw	0
  5670  001CBC  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  5671  001CBE  0E00               	movlw	0
  5672  001CC0  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  5673  001CC2  0E00               	movlw	0
  5674  001CC4  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  5675  001CC6  0E00               	movlw	0
  5676  001CC8  6F86               	movwf	___fldiv@sign& (0+255),b
  5677  001CCA                     l6502:
  5678                           
  5679                           ; BSR set to: 0
  5680  001CCA  C087  F08D         	movff	___fldiv@new_exp,___fldiv@bexp
  5681  001CCE                     
  5682                           ; BSR set to: 0
  5683  001CCE  A18D               	btfss	___fldiv@bexp& (0+255),0,b
  5684  001CD0  EF6C  F00E         	goto	u5601
  5685  001CD4  EF6E  F00E         	goto	u5600
  5686  001CD8                     u5601:
  5687  001CD8  EF71  F00E         	goto	l6508
  5688  001CDC                     u5600:
  5689  001CDC                     
  5690                           ; BSR set to: 0
  5691  001CDC  8F78               	bsf	(___fldiv@b+2)& (0+255),7,b
  5692  001CDE  EF72  F00E         	goto	l6510
  5693  001CE2                     l6508:
  5694                           
  5695                           ; BSR set to: 0
  5696  001CE2  9F78               	bcf	(___fldiv@b+2)& (0+255),7,b
  5697  001CE4                     l6510:
  5698                           
  5699                           ; BSR set to: 0
  5700  001CE4  90D8               	bcf	status,0,c
  5701  001CE6  318D               	rrcf	___fldiv@bexp& (0+255),w,b
  5702  001CE8  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  5703  001CEA  EF28  F00D         	goto	l6424
  5704  001CEE                     l1973:
  5705                           
  5706                           ; BSR set to: 0
  5707  001CEE  0012               	return		;funcret
  5708  001CF0                     __end_of___fldiv:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _calcSpeed *****************
  5712 ;; Defined at:
  5713 ;;		line 266 in file "main.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  speed           2   75[BANK0 ] short 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;Total ram usage:        6 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 9
  5734 ;; This function calls:
  5735 ;;		___fladd
  5736 ;;		___flmul
  5737 ;;		___fltol
  5738 ;;		___xxtofl
  5739 ;; This function is called by:
  5740 ;;		_loop
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text26
  5745  001CF0                     __ptext26:
  5746                           	callstack 0
  5747  001CF0                     _calcSpeed:
  5748                           	callstack 20
  5749  001CF0                     
  5750                           ;main.c: 267:     int16_t speed = 0;
  5751  001CF0  0E00               	movlw	0
  5752  001CF2  0100               	movlb	0	; () banked
  5753  001CF4  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5754  001CF6  0E00               	movlw	0
  5755  001CF8  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5756                           
  5757                           ;main.c: 269:     switch (driveMode){
  5758  001CFA  EF48  F00F         	goto	l6964
  5759  001CFE                     l6924:
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;main.c: 271:             if(distFront > (40)) {
  5763  001CFE  503F               	movf	(_distFront+1)^0,w,c	;volatile
  5764  001D00  E109               	bnz	u6240
  5765  001D02  0E29               	movlw	41
  5766  001D04  5C3E               	subwf	_distFront^0,w,c	;volatile
  5767  001D06  A0D8               	btfss	status,0,c
  5768  001D08  EF88  F00E         	goto	u6241
  5769  001D0C  EF8A  F00E         	goto	u6240
  5770  001D10                     u6241:
  5771  001D10  EF8C  F00E         	goto	l6928
  5772  001D14                     u6240:
  5773  001D14                     
  5774                           ; BSR set to: 0
  5775                           ;main.c: 272:                 driveMode = Straight;
  5776  001D14  0E00               	movlw	0
  5777  001D16  6E33               	movwf	_driveMode^0,c
  5778  001D18                     l6928:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;main.c: 274:             if(setSpeed > (100)){
  5782  001D18  BFDD               	btfsc	(_setSpeed+1)& (0+255),7,b
  5783  001D1A  EF98  F00E         	goto	u6251
  5784  001D1E  51DD               	movf	(_setSpeed+1)& (0+255),w,b
  5785  001D20  E109               	bnz	u6250
  5786  001D22  0E65               	movlw	101
  5787  001D24  5DDC               	subwf	_setSpeed& (0+255),w,b
  5788  001D26  A0D8               	btfss	status,0,c
  5789  001D28  EF98  F00E         	goto	u6251
  5790  001D2C  EF9A  F00E         	goto	u6250
  5791  001D30                     u6251:
  5792  001D30  EF6D  F00F         	goto	l6966
  5793  001D34                     u6250:
  5794  001D34                     
  5795                           ; BSR set to: 0
  5796                           ;main.c: 275:                 if(setSpeed > 0 ){
  5797  001D34  BFDD               	btfsc	(_setSpeed+1)& (0+255),7,b
  5798  001D36  EFA5  F00E         	goto	u6261
  5799  001D3A  51DD               	movf	(_setSpeed+1)& (0+255),w,b
  5800  001D3C  E108               	bnz	u6260
  5801  001D3E  05DC               	decf	_setSpeed& (0+255),w,b
  5802  001D40  A0D8               	btfss	status,0,c
  5803  001D42  EFA5  F00E         	goto	u6261
  5804  001D46  EFA7  F00E         	goto	u6260
  5805  001D4A                     u6261:
  5806  001D4A  EFB1  F00E         	goto	l6936
  5807  001D4E                     u6260:
  5808  001D4E                     
  5809                           ; BSR set to: 0
  5810                           ;main.c: 276:                     speed = setSpeed;
  5811  001D4E  C0DC  F0AB         	movff	_setSpeed,calcSpeed@speed
  5812  001D52  C0DD  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5813  001D56                     
  5814                           ; BSR set to: 0
  5815                           ;main.c: 277:                     speed -= 2;
  5816  001D56  0EFE               	movlw	254
  5817  001D58  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5818  001D5A  0EFF               	movlw	255
  5819  001D5C  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5820                           
  5821                           ;main.c: 278:                 }else if( setSpeed > 0 && distFront < (20)){
  5822  001D5E  EF6D  F00F         	goto	l6966
  5823  001D62                     l6936:
  5824                           
  5825                           ; BSR set to: 0
  5826  001D62  BFDD               	btfsc	(_setSpeed+1)& (0+255),7,b
  5827  001D64  EFBC  F00E         	goto	u6271
  5828  001D68  51DD               	movf	(_setSpeed+1)& (0+255),w,b
  5829  001D6A  E108               	bnz	u6270
  5830  001D6C  05DC               	decf	_setSpeed& (0+255),w,b
  5831  001D6E  A0D8               	btfss	status,0,c
  5832  001D70  EFBC  F00E         	goto	u6271
  5833  001D74  EFBE  F00E         	goto	u6270
  5834  001D78                     u6271:
  5835  001D78  EFD3  F00E         	goto	l1338
  5836  001D7C                     u6270:
  5837  001D7C                     
  5838                           ; BSR set to: 0
  5839  001D7C  503F               	movf	(_distFront+1)^0,w,c	;volatile
  5840  001D7E  E107               	bnz	u6281
  5841  001D80  0E14               	movlw	20
  5842  001D82  5C3E               	subwf	_distFront^0,w,c	;volatile
  5843  001D84  B0D8               	btfsc	status,0,c
  5844  001D86  EFC7  F00E         	goto	u6281
  5845  001D8A  EFC9  F00E         	goto	u6280
  5846  001D8E                     u6281:
  5847  001D8E  EFD3  F00E         	goto	l1338
  5848  001D92                     u6280:
  5849  001D92                     
  5850                           ; BSR set to: 0
  5851                           ;main.c: 279:                     speed = setSpeed;
  5852  001D92  C0DC  F0AB         	movff	_setSpeed,calcSpeed@speed
  5853  001D96  C0DD  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5854  001D9A                     
  5855                           ; BSR set to: 0
  5856                           ;main.c: 280:                     speed -= 4;
  5857  001D9A  0EFC               	movlw	252
  5858  001D9C  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5859  001D9E  0EFF               	movlw	255
  5860  001DA0  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5861  001DA2  EF6D  F00F         	goto	l6966
  5862  001DA6                     l1338:
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;main.c: 283:             break;
  5866  001DA6  EF6D  F00F         	goto	l6966
  5867  001DAA                     l6944:
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;main.c: 285:             if(distFront < (40)) {
  5871  001DAA  503F               	movf	(_distFront+1)^0,w,c	;volatile
  5872  001DAC  E107               	bnz	u6291
  5873  001DAE  0E28               	movlw	40
  5874  001DB0  5C3E               	subwf	_distFront^0,w,c	;volatile
  5875  001DB2  B0D8               	btfsc	status,0,c
  5876  001DB4  EFDE  F00E         	goto	u6291
  5877  001DB8  EFE0  F00E         	goto	u6290
  5878  001DBC                     u6291:
  5879  001DBC  EFE2  F00E         	goto	l6948
  5880  001DC0                     u6290:
  5881  001DC0                     
  5882                           ; BSR set to: 0
  5883                           ;main.c: 286:                 driveMode = Brake;
  5884  001DC0  0E01               	movlw	1
  5885  001DC2  6E33               	movwf	_driveMode^0,c
  5886  001DC4                     l6948:
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;main.c: 289:             if(distFront > (150)){
  5890  001DC4  503F               	movf	(_distFront+1)^0,w,c	;volatile
  5891  001DC6  E109               	bnz	u6300
  5892  001DC8  0E97               	movlw	151
  5893  001DCA  5C3E               	subwf	_distFront^0,w,c	;volatile
  5894  001DCC  A0D8               	btfss	status,0,c
  5895  001DCE  EFEB  F00E         	goto	u6301
  5896  001DD2  EFED  F00E         	goto	u6300
  5897  001DD6                     u6301:
  5898  001DD6  EF36  F00F         	goto	l6952
  5899  001DDA                     u6300:
  5900  001DDA                     
  5901                           ; BSR set to: 0
  5902                           ;main.c: 290:                 speed = (int16_t)((0.9) * (distFront - (150)) + (250));
  5903  001DDA  0E00               	movlw	0
  5904  001DDC  6F93               	movwf	___fladd@a& (0+255),b
  5905  001DDE  0E00               	movlw	0
  5906  001DE0  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5907  001DE2  0E7A               	movlw	122
  5908  001DE4  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5909  001DE6  0E43               	movlw	67
  5910  001DE8  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5911  001DEA  0E66               	movlw	102
  5912  001DEC  6F7A               	movwf	___flmul@a& (0+255),b
  5913  001DEE  0E66               	movlw	102
  5914  001DF0  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  5915  001DF2  0E66               	movlw	102
  5916  001DF4  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  5917  001DF6  0E3F               	movlw	63
  5918  001DF8  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  5919  001DFA  0E6A               	movlw	106
  5920  001DFC  6FA7               	movwf	??_calcSpeed& (0+255),b
  5921  001DFE  0EFF               	movlw	255
  5922  001E00  6FA8               	movwf	(??_calcSpeed+1)& (0+255),b
  5923  001E02  C03E  F0A9         	movff	_distFront,??_calcSpeed+2	;volatile
  5924  001E06  C03F  F0AA         	movff	_distFront+1,??_calcSpeed+3	;volatile
  5925  001E0A  51A7               	movf	??_calcSpeed& (0+255),w,b
  5926  001E0C  27A9               	addwf	(??_calcSpeed+2)& (0+255),f,b
  5927  001E0E  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  5928  001E10  23AA               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  5929  001E12  C0A9  F068         	movff	??_calcSpeed+2,___xxtofl@val
  5930  001E16  C0AA  F069         	movff	??_calcSpeed+3,___xxtofl@val+1
  5931  001E1A  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  5932  001E1C  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  5933  001E1E  0E00               	movlw	0
  5934  001E20  EC55  F013         	call	___xxtofl
  5935  001E24  C068  F076         	movff	?___xxtofl,___flmul@b
  5936  001E28  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  5937  001E2C  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  5938  001E30  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  5939  001E34  EC82  F00A         	call	___flmul	;wreg free
  5940  001E38  C076  F08F         	movff	?___flmul,___fladd@b
  5941  001E3C  C077  F090         	movff	?___flmul+1,___fladd@b+1
  5942  001E40  C078  F091         	movff	?___flmul+2,___fladd@b+2
  5943  001E44  C079  F092         	movff	?___flmul+3,___fladd@b+3
  5944  001E48  EC21  F008         	call	___fladd	;wreg free
  5945  001E4C  C08F  F09F         	movff	?___fladd,___fltol@f1
  5946  001E50  C090  F0A0         	movff	?___fladd+1,___fltol@f1+1
  5947  001E54  C091  F0A1         	movff	?___fladd+2,___fltol@f1+2
  5948  001E58  C092  F0A2         	movff	?___fladd+3,___fltol@f1+3
  5949  001E5C  EC6E  F017         	call	___fltol	;wreg free
  5950  001E60  C09F  F0AB         	movff	?___fltol,calcSpeed@speed
  5951  001E64  C0A0  F0AC         	movff	?___fltol+1,calcSpeed@speed+1
  5952                           
  5953                           ;main.c: 291:             }else{
  5954  001E68  EF6D  F00F         	goto	l6966
  5955  001E6C                     l6952:
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;main.c: 292:                 speed = (250);
  5959  001E6C  0E00               	movlw	0
  5960  001E6E  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5961  001E70  0EFA               	movlw	250
  5962  001E72  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5963  001E74  EF6D  F00F         	goto	l6966
  5964  001E78                     l6954:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;main.c: 298:             speed = (-125);
  5968  001E78  0EFF               	movlw	255
  5969  001E7A  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5970  001E7C  0E83               	movlw	131
  5971  001E7E  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5972                           
  5973                           ;main.c: 299:             break;
  5974  001E80  EF6D  F00F         	goto	l6966
  5975  001E84                     l6958:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;main.c: 304:             speed = (210);
  5979  001E84  0E00               	movlw	0
  5980  001E86  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5981  001E88  0ED2               	movlw	210
  5982  001E8A  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5983                           
  5984                           ;main.c: 305:             break;
  5985  001E8C  EF6D  F00F         	goto	l6966
  5986  001E90                     l6964:
  5987                           
  5988                           ; BSR set to: 0
  5989  001E90  5033               	movf	_driveMode^0,w,c
  5990  001E92  6FA7               	movwf	??_calcSpeed& (0+255),b
  5991  001E94  6BA8               	clrf	(??_calcSpeed+1)& (0+255),b
  5992                           
  5993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5994                           ; Switch size 1, requested type "simple"
  5995                           ; Number of cases is 1, Range of values is 0 to 0
  5996                           ; switch strategies available:
  5997                           ; Name         Instructions Cycles
  5998                           ; simple_byte            4     3 (average)
  5999                           ;	Chosen strategy is simple_byte
  6000  001E96  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  6001  001E98  0A00               	xorlw	0	; case 0
  6002  001E9A  B4D8               	btfsc	status,2,c
  6003  001E9C  EF52  F00F         	goto	l7240
  6004  001EA0  EF6D  F00F         	goto	l6966
  6005  001EA4                     l7240:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ; Switch size 1, requested type "simple"
  6009                           ; Number of cases is 6, Range of values is 0 to 5
  6010                           ; switch strategies available:
  6011                           ; Name         Instructions Cycles
  6012                           ; simple_byte           19    10 (average)
  6013                           ;	Chosen strategy is simple_byte
  6014  001EA4  51A7               	movf	??_calcSpeed& (0+255),w,b
  6015  001EA6  0A00               	xorlw	0	; case 0
  6016  001EA8  B4D8               	btfsc	status,2,c
  6017  001EAA  EFD5  F00E         	goto	l6944
  6018  001EAE  0A01               	xorlw	1	; case 1
  6019  001EB0  B4D8               	btfsc	status,2,c
  6020  001EB2  EF7F  F00E         	goto	l6924
  6021  001EB6  0A03               	xorlw	3	; case 2
  6022  001EB8  B4D8               	btfsc	status,2,c
  6023  001EBA  EF3C  F00F         	goto	l6954
  6024  001EBE  0A01               	xorlw	1	; case 3
  6025  001EC0  B4D8               	btfsc	status,2,c
  6026  001EC2  EF3C  F00F         	goto	l6954
  6027  001EC6  0A07               	xorlw	7	; case 4
  6028  001EC8  B4D8               	btfsc	status,2,c
  6029  001ECA  EF42  F00F         	goto	l6958
  6030  001ECE  0A01               	xorlw	1	; case 5
  6031  001ED0  B4D8               	btfsc	status,2,c
  6032  001ED2  EF42  F00F         	goto	l6958
  6033  001ED6  EF6D  F00F         	goto	l6966
  6034  001EDA                     l6966:
  6035                           
  6036                           ;main.c: 311:     if(speed > (400)){
  6037  001EDA  0100               	movlb	0	; () banked
  6038  001EDC  BFAC               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  6039  001EDE  EF7A  F00F         	goto	u6311
  6040  001EE2  0E91               	movlw	145
  6041  001EE4  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  6042  001EE6  0E01               	movlw	1
  6043  001EE8  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  6044  001EEA  A0D8               	btfss	status,0,c
  6045  001EEC  EF7A  F00F         	goto	u6311
  6046  001EF0  EF7C  F00F         	goto	u6310
  6047  001EF4                     u6311:
  6048  001EF4  EF80  F00F         	goto	l6970
  6049  001EF8                     u6310:
  6050  001EF8                     
  6051                           ; BSR set to: 0
  6052                           ;main.c: 312:         speed = (400);
  6053  001EF8  0E01               	movlw	1
  6054  001EFA  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6055  001EFC  0E90               	movlw	144
  6056  001EFE  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6057  001F00                     l6970:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;main.c: 314:     if(speed < (-250)){
  6061  001F00  AFAC               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  6062  001F02  EF8C  F00F         	goto	u6321
  6063  001F06  0E06               	movlw	6
  6064  001F08  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  6065  001F0A  0EFF               	movlw	255
  6066  001F0C  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  6067  001F0E  B0D8               	btfsc	status,0,c
  6068  001F10  EF8C  F00F         	goto	u6321
  6069  001F14  EF8E  F00F         	goto	u6320
  6070  001F18                     u6321:
  6071  001F18  EF92  F00F         	goto	l6974
  6072  001F1C                     u6320:
  6073  001F1C                     
  6074                           ; BSR set to: 0
  6075                           ;main.c: 315:         speed = (-250);
  6076  001F1C  0EFF               	movlw	255
  6077  001F1E  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6078  001F20  0E06               	movlw	6
  6079  001F22  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6080  001F24                     l6974:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;main.c: 317:     setSpeed = speed;
  6084  001F24  C0AB  F0DC         	movff	calcSpeed@speed,_setSpeed
  6085  001F28  C0AC  F0DD         	movff	calcSpeed@speed+1,_setSpeed+1
  6086  001F2C                     
  6087                           ; BSR set to: 0
  6088  001F2C  0012               	return		;funcret
  6089  001F2E                     __end_of_calcSpeed:
  6090                           	callstack 0
  6091                           
  6092 ;; *************** function ___fladd *****************
  6093 ;; Defined at:
  6094 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  b               4   47[BANK0 ] void 
  6097 ;;  a               4   51[BANK0 ] void 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  grs             1   62[BANK0 ] unsigned char 
  6100 ;;  bexp            1   61[BANK0 ] unsigned char 
  6101 ;;  aexp            1   60[BANK0 ] unsigned char 
  6102 ;;  signs           1   59[BANK0 ] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  4   47[BANK0 ] unsigned char 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6112 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;Total ram usage:       16 bytes
  6117 ;; Hardware stack levels used: 1
  6118 ;; Hardware stack levels required when called: 8
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_calcSpeed
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text27
  6127  001042                     __ptext27:
  6128                           	callstack 0
  6129  001042                     ___fladd:
  6130                           	callstack 20
  6131  001042  0100               	movlb	0	; () banked
  6132  001044  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6133  001046  0B80               	andlw	128
  6134  001048  6F9B               	movwf	___fladd@signs& (0+255),b
  6135  00104A  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6136  00104C  2592               	addwf	(___fladd@b+3)& (0+255),w,b
  6137  00104E  6F9D               	movwf	___fladd@bexp& (0+255),b
  6138  001050                     
  6139                           ; BSR set to: 0
  6140  001050  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  6141  001052  EF2D  F008         	goto	u3021
  6142  001056  EF2F  F008         	goto	u3020
  6143  00105A                     u3021:
  6144  00105A  EF30  F008         	goto	l4654
  6145  00105E                     u3020:
  6146  00105E                     
  6147                           ; BSR set to: 0
  6148  00105E  819D               	bsf	___fladd@bexp& (0+255),0,b
  6149  001060                     l4654:
  6150                           
  6151                           ; BSR set to: 0
  6152  001060  519D               	movf	___fladd@bexp& (0+255),w,b
  6153  001062  B4D8               	btfsc	status,2,c
  6154  001064  EF36  F008         	goto	u3031
  6155  001068  EF38  F008         	goto	u3030
  6156  00106C                     u3031:
  6157  00106C  EF4D  F008         	goto	l4664
  6158  001070                     u3030:
  6159  001070                     
  6160                           ; BSR set to: 0
  6161  001070  299D               	incf	___fladd@bexp& (0+255),w,b
  6162  001072  A4D8               	btfss	status,2,c
  6163  001074  EF3E  F008         	goto	u3041
  6164  001078  EF40  F008         	goto	u3040
  6165  00107C                     u3041:
  6166  00107C  EF48  F008         	goto	l4660
  6167  001080                     u3040:
  6168  001080                     
  6169                           ; BSR set to: 0
  6170  001080  0E00               	movlw	0
  6171  001082  6F8F               	movwf	___fladd@b& (0+255),b
  6172  001084  0E00               	movlw	0
  6173  001086  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6174  001088  0E00               	movlw	0
  6175  00108A  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6176  00108C  0E00               	movlw	0
  6177  00108E  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6178  001090                     l4660:
  6179                           
  6180                           ; BSR set to: 0
  6181  001090  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  6182  001092                     
  6183                           ; BSR set to: 0
  6184  001092  0E00               	movlw	0
  6185  001094  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6186  001096  EF55  F008         	goto	l4666
  6187  00109A                     l4664:
  6188                           
  6189                           ; BSR set to: 0
  6190  00109A  0E00               	movlw	0
  6191  00109C  6F8F               	movwf	___fladd@b& (0+255),b
  6192  00109E  0E00               	movlw	0
  6193  0010A0  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6194  0010A2  0E00               	movlw	0
  6195  0010A4  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6196  0010A6  0E00               	movlw	0
  6197  0010A8  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6198  0010AA                     l4666:
  6199                           
  6200                           ; BSR set to: 0
  6201  0010AA  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6202  0010AC  0B80               	andlw	128
  6203  0010AE  6F9C               	movwf	___fladd@aexp& (0+255),b
  6204  0010B0                     
  6205                           ; BSR set to: 0
  6206  0010B0  519B               	movf	___fladd@signs& (0+255),w,b
  6207  0010B2  199C               	xorwf	___fladd@aexp& (0+255),w,b
  6208  0010B4  B4D8               	btfsc	status,2,c
  6209  0010B6  EF5F  F008         	goto	u3051
  6210  0010BA  EF61  F008         	goto	u3050
  6211  0010BE                     u3051:
  6212  0010BE  EF62  F008         	goto	l4672
  6213  0010C2                     u3050:
  6214  0010C2                     
  6215                           ; BSR set to: 0
  6216  0010C2  8D9B               	bsf	___fladd@signs& (0+255),6,b
  6217  0010C4                     l4672:
  6218                           
  6219                           ; BSR set to: 0
  6220  0010C4  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6221  0010C6  2596               	addwf	(___fladd@a+3)& (0+255),w,b
  6222  0010C8  6F9C               	movwf	___fladd@aexp& (0+255),b
  6223  0010CA                     
  6224                           ; BSR set to: 0
  6225  0010CA  AF95               	btfss	(___fladd@a+2)& (0+255),7,b
  6226  0010CC  EF6A  F008         	goto	u3061
  6227  0010D0  EF6C  F008         	goto	u3060
  6228  0010D4                     u3061:
  6229  0010D4  EF6D  F008         	goto	l4678
  6230  0010D8                     u3060:
  6231  0010D8                     
  6232                           ; BSR set to: 0
  6233  0010D8  819C               	bsf	___fladd@aexp& (0+255),0,b
  6234  0010DA                     l4678:
  6235                           
  6236                           ; BSR set to: 0
  6237  0010DA  519C               	movf	___fladd@aexp& (0+255),w,b
  6238  0010DC  B4D8               	btfsc	status,2,c
  6239  0010DE  EF73  F008         	goto	u3071
  6240  0010E2  EF75  F008         	goto	u3070
  6241  0010E6                     u3071:
  6242  0010E6  EF8A  F008         	goto	l4688
  6243  0010EA                     u3070:
  6244  0010EA                     
  6245                           ; BSR set to: 0
  6246  0010EA  299C               	incf	___fladd@aexp& (0+255),w,b
  6247  0010EC  A4D8               	btfss	status,2,c
  6248  0010EE  EF7B  F008         	goto	u3081
  6249  0010F2  EF7D  F008         	goto	u3080
  6250  0010F6                     u3081:
  6251  0010F6  EF85  F008         	goto	l4684
  6252  0010FA                     u3080:
  6253  0010FA                     
  6254                           ; BSR set to: 0
  6255  0010FA  0E00               	movlw	0
  6256  0010FC  6F93               	movwf	___fladd@a& (0+255),b
  6257  0010FE  0E00               	movlw	0
  6258  001100  6F94               	movwf	(___fladd@a+1)& (0+255),b
  6259  001102  0E00               	movlw	0
  6260  001104  6F95               	movwf	(___fladd@a+2)& (0+255),b
  6261  001106  0E00               	movlw	0
  6262  001108  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6263  00110A                     l4684:
  6264                           
  6265                           ; BSR set to: 0
  6266  00110A  8F95               	bsf	(___fladd@a+2)& (0+255),7,b
  6267  00110C                     
  6268                           ; BSR set to: 0
  6269  00110C  0E00               	movlw	0
  6270  00110E  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6271  001110  EF92  F008         	goto	l4690
  6272  001114                     l4688:
  6273                           
  6274                           ; BSR set to: 0
  6275  001114  0E00               	movlw	0
  6276  001116  6F93               	movwf	___fladd@a& (0+255),b
  6277  001118  0E00               	movlw	0
  6278  00111A  6F94               	movwf	(___fladd@a+1)& (0+255),b
  6279  00111C  0E00               	movlw	0
  6280  00111E  6F95               	movwf	(___fladd@a+2)& (0+255),b
  6281  001120  0E00               	movlw	0
  6282  001122  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6283  001124                     l4690:
  6284                           
  6285                           ; BSR set to: 0
  6286  001124  519D               	movf	___fladd@bexp& (0+255),w,b
  6287  001126  5D9C               	subwf	___fladd@aexp& (0+255),w,b
  6288  001128  B0D8               	btfsc	status,0,c
  6289  00112A  EF99  F008         	goto	u3091
  6290  00112E  EF9B  F008         	goto	u3090
  6291  001132                     u3091:
  6292  001132  EFC2  F008         	goto	l4726
  6293  001136                     u3090:
  6294  001136                     
  6295                           ; BSR set to: 0
  6296  001136  AD9B               	btfss	___fladd@signs& (0+255),6,b
  6297  001138  EFA0  F008         	goto	u3101
  6298  00113C  EFA2  F008         	goto	u3100
  6299  001140                     u3101:
  6300  001140  EFA4  F008         	goto	l4696
  6301  001144                     u3100:
  6302  001144                     
  6303                           ; BSR set to: 0
  6304  001144  0E80               	movlw	128
  6305  001146  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  6306  001148                     l4696:
  6307                           
  6308                           ; BSR set to: 0
  6309  001148  C09D  F09E         	movff	___fladd@bexp,___fladd@grs
  6310  00114C                     
  6311                           ; BSR set to: 0
  6312  00114C  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  6313  001150                     
  6314                           ; BSR set to: 0
  6315  001150  C09E  F09C         	movff	___fladd@grs,___fladd@aexp
  6316  001154                     
  6317                           ; BSR set to: 0
  6318  001154  C08F  F09E         	movff	___fladd@b,___fladd@grs
  6319  001158                     
  6320                           ; BSR set to: 0
  6321  001158  C093  F08F         	movff	___fladd@a,___fladd@b
  6322  00115C                     
  6323                           ; BSR set to: 0
  6324  00115C  C09E  F093         	movff	___fladd@grs,___fladd@a
  6325  001160                     
  6326                           ; BSR set to: 0
  6327  001160  C090  F09E         	movff	___fladd@b+1,___fladd@grs
  6328  001164                     
  6329                           ; BSR set to: 0
  6330  001164  C094  F090         	movff	___fladd@a+1,___fladd@b+1
  6331  001168                     
  6332                           ; BSR set to: 0
  6333  001168  C09E  F094         	movff	___fladd@grs,___fladd@a+1
  6334  00116C                     
  6335                           ; BSR set to: 0
  6336  00116C  C091  F09E         	movff	___fladd@b+2,___fladd@grs
  6337  001170                     
  6338                           ; BSR set to: 0
  6339  001170  C095  F091         	movff	___fladd@a+2,___fladd@b+2
  6340  001174                     
  6341                           ; BSR set to: 0
  6342  001174  C09E  F095         	movff	___fladd@grs,___fladd@a+2
  6343  001178                     
  6344                           ; BSR set to: 0
  6345  001178  C092  F09E         	movff	___fladd@b+3,___fladd@grs
  6346  00117C                     
  6347                           ; BSR set to: 0
  6348  00117C  C096  F092         	movff	___fladd@a+3,___fladd@b+3
  6349  001180                     
  6350                           ; BSR set to: 0
  6351  001180  C09E  F096         	movff	___fladd@grs,___fladd@a+3
  6352  001184                     l4726:
  6353                           
  6354                           ; BSR set to: 0
  6355  001184  0E00               	movlw	0
  6356  001186  6F9E               	movwf	___fladd@grs& (0+255),b
  6357  001188                     
  6358                           ; BSR set to: 0
  6359  001188  519D               	movf	___fladd@bexp& (0+255),w,b
  6360  00118A  C09C  F097         	movff	___fladd@aexp,??___fladd
  6361  00118E  6B98               	clrf	(??___fladd+1)& (0+255),b
  6362  001190  5F97               	subwf	??___fladd& (0+255),f,b
  6363  001192  0E00               	movlw	0
  6364  001194  5B98               	subwfb	(??___fladd+1)& (0+255),f,b
  6365  001196  BF98               	btfsc	(??___fladd+1)& (0+255),7,b
  6366  001198  EFD7  F008         	goto	u3111
  6367  00119C  5198               	movf	(??___fladd+1)& (0+255),w,b
  6368  00119E  E109               	bnz	u3110
  6369  0011A0  0E1A               	movlw	26
  6370  0011A2  5D97               	subwf	??___fladd& (0+255),w,b
  6371  0011A4  A0D8               	btfss	status,0,c
  6372  0011A6  EFD7  F008         	goto	u3111
  6373  0011AA  EFD9  F008         	goto	u3110
  6374  0011AE                     u3111:
  6375  0011AE  EF10  F009         	goto	l1920
  6376  0011B2                     u3110:
  6377  0011B2                     
  6378                           ; BSR set to: 0
  6379  0011B2  518F               	movf	___fladd@b& (0+255),w,b
  6380  0011B4  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  6381  0011B6  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  6382  0011B8  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  6383  0011BA  A4D8               	btfss	status,2,c
  6384  0011BC  EFE2  F008         	goto	u3121
  6385  0011C0  EFE5  F008         	goto	u3120
  6386  0011C4                     u3121:
  6387  0011C4  0E01               	movlw	1
  6388  0011C6  EFE6  F008         	goto	u3130
  6389  0011CA                     u3120:
  6390  0011CA  0E00               	movlw	0
  6391  0011CC                     u3130:
  6392  0011CC  6F9E               	movwf	___fladd@grs& (0+255),b
  6393  0011CE                     
  6394                           ; BSR set to: 0
  6395  0011CE  0E00               	movlw	0
  6396  0011D0  6F8F               	movwf	___fladd@b& (0+255),b
  6397  0011D2  0E00               	movlw	0
  6398  0011D4  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6399  0011D6  0E00               	movlw	0
  6400  0011D8  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6401  0011DA  0E00               	movlw	0
  6402  0011DC  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6403  0011DE                     
  6404                           ; BSR set to: 0
  6405  0011DE  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  6406  0011E2  EF19  F009         	goto	l1919
  6407  0011E6                     l1921:
  6408                           
  6409                           ; BSR set to: 0
  6410  0011E6  A19E               	btfss	___fladd@grs& (0+255),0,b
  6411  0011E8  EFF8  F008         	goto	u3141
  6412  0011EC  EFFA  F008         	goto	u3140
  6413  0011F0                     u3141:
  6414  0011F0  EF00  F009         	goto	l4738
  6415  0011F4                     u3140:
  6416  0011F4                     
  6417                           ; BSR set to: 0
  6418  0011F4  90D8               	bcf	status,0,c
  6419  0011F6  319E               	rrcf	___fladd@grs& (0+255),w,b
  6420  0011F8  0901               	iorlw	1
  6421  0011FA  6F9E               	movwf	___fladd@grs& (0+255),b
  6422  0011FC  EF02  F009         	goto	l4740
  6423  001200                     l4738:
  6424                           
  6425                           ; BSR set to: 0
  6426  001200  90D8               	bcf	status,0,c
  6427  001202  339E               	rrcf	___fladd@grs& (0+255),f,b
  6428  001204                     l4740:
  6429                           
  6430                           ; BSR set to: 0
  6431  001204  A18F               	btfss	___fladd@b& (0+255),0,b
  6432  001206  EF07  F009         	goto	u3151
  6433  00120A  EF09  F009         	goto	u3150
  6434  00120E                     u3151:
  6435  00120E  EF0A  F009         	goto	l4744
  6436  001212                     u3150:
  6437  001212                     
  6438                           ; BSR set to: 0
  6439  001212  8F9E               	bsf	___fladd@grs& (0+255),7,b
  6440  001214                     l4744:
  6441                           
  6442                           ; BSR set to: 0
  6443  001214  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  6444  001216  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  6445  001218  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  6446  00121A  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  6447  00121C  338F               	rrcf	___fladd@b& (0+255),f,b
  6448  00121E                     
  6449                           ; BSR set to: 0
  6450  00121E  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6451  001220                     l1920:
  6452                           
  6453                           ; BSR set to: 0
  6454  001220  519C               	movf	___fladd@aexp& (0+255),w,b
  6455  001222  5D9D               	subwf	___fladd@bexp& (0+255),w,b
  6456  001224  A0D8               	btfss	status,0,c
  6457  001226  EF17  F009         	goto	u3161
  6458  00122A  EF19  F009         	goto	u3160
  6459  00122E                     u3161:
  6460  00122E  EFF3  F008         	goto	l1921
  6461  001232                     u3160:
  6462  001232                     l1919:
  6463                           
  6464                           ; BSR set to: 0
  6465  001232  BD9B               	btfsc	___fladd@signs& (0+255),6,b
  6466  001234  EF1E  F009         	goto	u3171
  6467  001238  EF20  F009         	goto	u3170
  6468  00123C                     u3171:
  6469  00123C  EF60  F009         	goto	l4772
  6470  001240                     u3170:
  6471  001240                     
  6472                           ; BSR set to: 0
  6473  001240  519D               	movf	___fladd@bexp& (0+255),w,b
  6474  001242  A4D8               	btfss	status,2,c
  6475  001244  EF26  F009         	goto	u3181
  6476  001248  EF28  F009         	goto	u3180
  6477  00124C                     u3181:
  6478  00124C  EF32  F009         	goto	l4754
  6479  001250                     u3180:
  6480  001250                     
  6481                           ; BSR set to: 0
  6482  001250  0E00               	movlw	0
  6483  001252  6F8F               	movwf	?___fladd& (0+255),b
  6484  001254  0E00               	movlw	0
  6485  001256  6F90               	movwf	(?___fladd+1)& (0+255),b
  6486  001258  0E00               	movlw	0
  6487  00125A  6F91               	movwf	(?___fladd+2)& (0+255),b
  6488  00125C  0E00               	movlw	0
  6489  00125E  6F92               	movwf	(?___fladd+3)& (0+255),b
  6490  001260  EF81  F00A         	goto	l1928
  6491  001264                     l4754:
  6492                           
  6493                           ; BSR set to: 0
  6494  001264  5193               	movf	___fladd@a& (0+255),w,b
  6495  001266  278F               	addwf	___fladd@b& (0+255),f,b
  6496  001268  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6497  00126A  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6498  00126C  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6499  00126E  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6500  001270  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6501  001272  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6502  001274                     
  6503                           ; BSR set to: 0
  6504  001274  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  6505  001276  EF3F  F009         	goto	u3191
  6506  00127A  EF41  F009         	goto	u3190
  6507  00127E                     u3191:
  6508  00127E  EFED  F009         	goto	l4808
  6509  001282                     u3190:
  6510  001282                     
  6511                           ; BSR set to: 0
  6512  001282  A19E               	btfss	___fladd@grs& (0+255),0,b
  6513  001284  EF46  F009         	goto	u3201
  6514  001288  EF48  F009         	goto	u3200
  6515  00128C                     u3201:
  6516  00128C  EF4E  F009         	goto	l4762
  6517  001290                     u3200:
  6518  001290                     
  6519                           ; BSR set to: 0
  6520  001290  90D8               	bcf	status,0,c
  6521  001292  319E               	rrcf	___fladd@grs& (0+255),w,b
  6522  001294  0901               	iorlw	1
  6523  001296  6F9E               	movwf	___fladd@grs& (0+255),b
  6524  001298  EF50  F009         	goto	l4764
  6525  00129C                     l4762:
  6526                           
  6527                           ; BSR set to: 0
  6528  00129C  90D8               	bcf	status,0,c
  6529  00129E  339E               	rrcf	___fladd@grs& (0+255),f,b
  6530  0012A0                     l4764:
  6531                           
  6532                           ; BSR set to: 0
  6533  0012A0  A18F               	btfss	___fladd@b& (0+255),0,b
  6534  0012A2  EF55  F009         	goto	u3211
  6535  0012A6  EF57  F009         	goto	u3210
  6536  0012AA                     u3211:
  6537  0012AA  EF58  F009         	goto	l4768
  6538  0012AE                     u3210:
  6539  0012AE                     
  6540                           ; BSR set to: 0
  6541  0012AE  8F9E               	bsf	___fladd@grs& (0+255),7,b
  6542  0012B0                     l4768:
  6543                           
  6544                           ; BSR set to: 0
  6545  0012B0  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  6546  0012B2  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  6547  0012B4  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  6548  0012B6  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  6549  0012B8  338F               	rrcf	___fladd@b& (0+255),f,b
  6550  0012BA                     
  6551                           ; BSR set to: 0
  6552  0012BA  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6553  0012BC  EFED  F009         	goto	l4808
  6554  0012C0                     l4772:
  6555                           
  6556                           ; BSR set to: 0
  6557  0012C0  5193               	movf	___fladd@a& (0+255),w,b
  6558  0012C2  5D8F               	subwf	___fladd@b& (0+255),w,b
  6559  0012C4  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6560  0012C6  5990               	subwfb	(___fladd@b+1)& (0+255),w,b
  6561  0012C8  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6562  0012CA  5991               	subwfb	(___fladd@b+2)& (0+255),w,b
  6563  0012CC  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6564  0012CE  0A80               	xorlw	128
  6565  0012D0  6F97               	movwf	??___fladd& (0+255),b
  6566  0012D2  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6567  0012D4  0A80               	xorlw	128
  6568  0012D6  5997               	subwfb	??___fladd& (0+255),w,b
  6569  0012D8  B0D8               	btfsc	status,0,c
  6570  0012DA  EF71  F009         	goto	u3221
  6571  0012DE  EF73  F009         	goto	u3220
  6572  0012E2                     u3221:
  6573  0012E2  EF9E  F009         	goto	l4782
  6574  0012E6                     u3220:
  6575  0012E6                     
  6576                           ; BSR set to: 0
  6577  0012E6  518F               	movf	___fladd@b& (0+255),w,b
  6578  0012E8  5D93               	subwf	___fladd@a& (0+255),w,b
  6579  0012EA  6F97               	movwf	??___fladd& (0+255),b
  6580  0012EC  5190               	movf	(___fladd@b+1)& (0+255),w,b
  6581  0012EE  5994               	subwfb	(___fladd@a+1)& (0+255),w,b
  6582  0012F0  6F98               	movwf	(??___fladd+1)& (0+255),b
  6583  0012F2  5191               	movf	(___fladd@b+2)& (0+255),w,b
  6584  0012F4  5995               	subwfb	(___fladd@a+2)& (0+255),w,b
  6585  0012F6  6F99               	movwf	(??___fladd+2)& (0+255),b
  6586  0012F8  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6587  0012FA  5996               	subwfb	(___fladd@a+3)& (0+255),w,b
  6588  0012FC  6F9A               	movwf	(??___fladd+3)& (0+255),b
  6589  0012FE  0EFF               	movlw	255
  6590  001300  2597               	addwf	??___fladd& (0+255),w,b
  6591  001302  6F8F               	movwf	___fladd@b& (0+255),b
  6592  001304  0EFF               	movlw	255
  6593  001306  2198               	addwfc	(??___fladd+1)& (0+255),w,b
  6594  001308  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6595  00130A  0EFF               	movlw	255
  6596  00130C  2199               	addwfc	(??___fladd+2)& (0+255),w,b
  6597  00130E  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6598  001310  0EFF               	movlw	255
  6599  001312  219A               	addwfc	(??___fladd+3)& (0+255),w,b
  6600  001314  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6601  001316  0E80               	movlw	128
  6602  001318  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  6603  00131A                     
  6604                           ; BSR set to: 0
  6605  00131A  6D9E               	negf	___fladd@grs& (0+255),b
  6606  00131C                     
  6607                           ; BSR set to: 0
  6608  00131C  519E               	movf	___fladd@grs& (0+255),w,b
  6609  00131E  A4D8               	btfss	status,2,c
  6610  001320  EF94  F009         	goto	u3231
  6611  001324  EF96  F009         	goto	u3230
  6612  001328                     u3231:
  6613  001328  EFA6  F009         	goto	l1936
  6614  00132C                     u3230:
  6615  00132C                     
  6616                           ; BSR set to: 0
  6617  00132C  0E01               	movlw	1
  6618  00132E  278F               	addwf	___fladd@b& (0+255),f,b
  6619  001330  0E00               	movlw	0
  6620  001332  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6621  001334  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6622  001336  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6623  001338  EFA6  F009         	goto	l1936
  6624  00133C                     l4782:
  6625                           
  6626                           ; BSR set to: 0
  6627  00133C  5193               	movf	___fladd@a& (0+255),w,b
  6628  00133E  5F8F               	subwf	___fladd@b& (0+255),f,b
  6629  001340  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6630  001342  5B90               	subwfb	(___fladd@b+1)& (0+255),f,b
  6631  001344  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6632  001346  5B91               	subwfb	(___fladd@b+2)& (0+255),f,b
  6633  001348  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6634  00134A  5B92               	subwfb	(___fladd@b+3)& (0+255),f,b
  6635  00134C                     l1936:
  6636                           
  6637                           ; BSR set to: 0
  6638  00134C  518F               	movf	___fladd@b& (0+255),w,b
  6639  00134E  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  6640  001350  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  6641  001352  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  6642  001354  A4D8               	btfss	status,2,c
  6643  001356  EFAF  F009         	goto	u3241
  6644  00135A  EFB1  F009         	goto	u3240
  6645  00135E                     u3241:
  6646  00135E  EFE6  F009         	goto	l4806
  6647  001362                     u3240:
  6648  001362                     
  6649                           ; BSR set to: 0
  6650  001362  519E               	movf	___fladd@grs& (0+255),w,b
  6651  001364  A4D8               	btfss	status,2,c
  6652  001366  EFB7  F009         	goto	u3251
  6653  00136A  EFB9  F009         	goto	u3250
  6654  00136E                     u3251:
  6655  00136E  EFE6  F009         	goto	l4806
  6656  001372                     u3250:
  6657  001372                     
  6658                           ; BSR set to: 0
  6659  001372  0E00               	movlw	0
  6660  001374  6F8F               	movwf	?___fladd& (0+255),b
  6661  001376  0E00               	movlw	0
  6662  001378  6F90               	movwf	(?___fladd+1)& (0+255),b
  6663  00137A  0E00               	movlw	0
  6664  00137C  6F91               	movwf	(?___fladd+2)& (0+255),b
  6665  00137E  0E00               	movlw	0
  6666  001380  6F92               	movwf	(?___fladd+3)& (0+255),b
  6667  001382  EF81  F00A         	goto	l1928
  6668  001386                     l4790:
  6669                           
  6670                           ; BSR set to: 0
  6671  001386  90D8               	bcf	status,0,c
  6672  001388  378F               	rlcf	___fladd@b& (0+255),f,b
  6673  00138A  3790               	rlcf	(___fladd@b+1)& (0+255),f,b
  6674  00138C  3791               	rlcf	(___fladd@b+2)& (0+255),f,b
  6675  00138E  3792               	rlcf	(___fladd@b+3)& (0+255),f,b
  6676  001390                     
  6677                           ; BSR set to: 0
  6678  001390  AF9E               	btfss	___fladd@grs& (0+255),7,b
  6679  001392  EFCD  F009         	goto	u3261
  6680  001396  EFCF  F009         	goto	u3260
  6681  00139A                     u3261:
  6682  00139A  EFD0  F009         	goto	l4796
  6683  00139E                     u3260:
  6684  00139E                     
  6685                           ; BSR set to: 0
  6686  00139E  818F               	bsf	___fladd@b& (0+255),0,b
  6687  0013A0                     l4796:
  6688                           
  6689                           ; BSR set to: 0
  6690  0013A0  A19E               	btfss	___fladd@grs& (0+255),0,b
  6691  0013A2  EFD5  F009         	goto	u3271
  6692  0013A6  EFD7  F009         	goto	u3270
  6693  0013AA                     u3271:
  6694  0013AA  EFDB  F009         	goto	l4800
  6695  0013AE                     u3270:
  6696  0013AE                     
  6697                           ; BSR set to: 0
  6698  0013AE  80D8               	bsf	status,0,c
  6699  0013B0  379E               	rlcf	___fladd@grs& (0+255),f,b
  6700  0013B2  EFDD  F009         	goto	l4802
  6701  0013B6                     l4800:
  6702                           
  6703                           ; BSR set to: 0
  6704  0013B6  90D8               	bcf	status,0,c
  6705  0013B8  379E               	rlcf	___fladd@grs& (0+255),f,b
  6706  0013BA                     l4802:
  6707                           
  6708                           ; BSR set to: 0
  6709  0013BA  519D               	movf	___fladd@bexp& (0+255),w,b
  6710  0013BC  B4D8               	btfsc	status,2,c
  6711  0013BE  EFE3  F009         	goto	u3281
  6712  0013C2  EFE5  F009         	goto	u3280
  6713  0013C6                     u3281:
  6714  0013C6  EFE6  F009         	goto	l4806
  6715  0013CA                     u3280:
  6716  0013CA                     
  6717                           ; BSR set to: 0
  6718  0013CA  079D               	decf	___fladd@bexp& (0+255),f,b
  6719  0013CC                     l4806:
  6720                           
  6721                           ; BSR set to: 0
  6722  0013CC  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  6723  0013CE  EFEB  F009         	goto	u3291
  6724  0013D2  EFED  F009         	goto	u3290
  6725  0013D6                     u3291:
  6726  0013D6  EFC3  F009         	goto	l4790
  6727  0013DA                     u3290:
  6728  0013DA                     l4808:
  6729                           
  6730                           ; BSR set to: 0
  6731  0013DA  0E00               	movlw	0
  6732  0013DC  6F9C               	movwf	___fladd@aexp& (0+255),b
  6733  0013DE                     
  6734                           ; BSR set to: 0
  6735  0013DE  AF9E               	btfss	___fladd@grs& (0+255),7,b
  6736  0013E0  EFF4  F009         	goto	u3301
  6737  0013E4  EFF6  F009         	goto	u3300
  6738  0013E8                     u3301:
  6739  0013E8  EF0E  F00A         	goto	l1945
  6740  0013EC                     u3300:
  6741  0013EC                     
  6742                           ; BSR set to: 0
  6743  0013EC  C09E  F097         	movff	___fladd@grs,??___fladd
  6744  0013F0  0E7F               	movlw	127
  6745  0013F2  1797               	andwf	??___fladd& (0+255),f,b
  6746  0013F4  B4D8               	btfsc	status,2,c
  6747  0013F6  EFFF  F009         	goto	u3311
  6748  0013FA  EF01  F00A         	goto	u3310
  6749  0013FE                     u3311:
  6750  0013FE  EF05  F00A         	goto	l1946
  6751  001402                     u3310:
  6752  001402                     l4814:
  6753                           
  6754                           ; BSR set to: 0
  6755  001402  0E01               	movlw	1
  6756  001404  6F9C               	movwf	___fladd@aexp& (0+255),b
  6757  001406  EF0E  F00A         	goto	l1945
  6758  00140A                     l1946:
  6759                           
  6760                           ; BSR set to: 0
  6761  00140A  A18F               	btfss	___fladd@b& (0+255),0,b
  6762  00140C  EF0A  F00A         	goto	u3321
  6763  001410  EF0C  F00A         	goto	u3320
  6764  001414                     u3321:
  6765  001414  EF0E  F00A         	goto	l1945
  6766  001418                     u3320:
  6767  001418  EF01  F00A         	goto	l4814
  6768  00141C                     l1945:
  6769                           
  6770                           ; BSR set to: 0
  6771  00141C  519C               	movf	___fladd@aexp& (0+255),w,b
  6772  00141E  B4D8               	btfsc	status,2,c
  6773  001420  EF14  F00A         	goto	u3331
  6774  001424  EF16  F00A         	goto	u3330
  6775  001428                     u3331:
  6776  001428  EF41  F00A         	goto	l4826
  6777  00142C                     u3330:
  6778  00142C                     
  6779                           ; BSR set to: 0
  6780  00142C  0E01               	movlw	1
  6781  00142E  278F               	addwf	___fladd@b& (0+255),f,b
  6782  001430  0E00               	movlw	0
  6783  001432  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6784  001434  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6785  001436  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6786  001438                     
  6787                           ; BSR set to: 0
  6788  001438  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  6789  00143A  EF21  F00A         	goto	u3341
  6790  00143E  EF23  F00A         	goto	u3340
  6791  001442                     u3341:
  6792  001442  EF41  F00A         	goto	l4826
  6793  001446                     u3340:
  6794  001446                     
  6795                           ; BSR set to: 0
  6796  001446  C08F  F097         	movff	___fladd@b,??___fladd
  6797  00144A  C090  F098         	movff	___fladd@b+1,??___fladd+1
  6798  00144E  C091  F099         	movff	___fladd@b+2,??___fladd+2
  6799  001452  C092  F09A         	movff	___fladd@b+3,??___fladd+3
  6800  001456  359A               	rlcf	(??___fladd+3)& (0+255),w,b
  6801  001458  339A               	rrcf	(??___fladd+3)& (0+255),f,b
  6802  00145A  3399               	rrcf	(??___fladd+2)& (0+255),f,b
  6803  00145C  3398               	rrcf	(??___fladd+1)& (0+255),f,b
  6804  00145E  3397               	rrcf	??___fladd& (0+255),f,b
  6805  001460  C097  F08F         	movff	??___fladd,___fladd@b
  6806  001464  C098  F090         	movff	??___fladd+1,___fladd@b+1
  6807  001468  C099  F091         	movff	??___fladd+2,___fladd@b+2
  6808  00146C  C09A  F092         	movff	??___fladd+3,___fladd@b+3
  6809  001470  299D               	incf	___fladd@bexp& (0+255),w,b
  6810  001472  B4D8               	btfsc	status,2,c
  6811  001474  EF3E  F00A         	goto	u3351
  6812  001478  EF40  F00A         	goto	u3350
  6813  00147C                     u3351:
  6814  00147C  EF41  F00A         	goto	l4826
  6815  001480                     u3350:
  6816  001480                     
  6817                           ; BSR set to: 0
  6818  001480  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6819  001482                     l4826:
  6820                           
  6821                           ; BSR set to: 0
  6822  001482  299D               	incf	___fladd@bexp& (0+255),w,b
  6823  001484  B4D8               	btfsc	status,2,c
  6824  001486  EF47  F00A         	goto	u3361
  6825  00148A  EF49  F00A         	goto	u3360
  6826  00148E                     u3361:
  6827  00148E  EF51  F00A         	goto	l4830
  6828  001492                     u3360:
  6829  001492                     
  6830                           ; BSR set to: 0
  6831  001492  519D               	movf	___fladd@bexp& (0+255),w,b
  6832  001494  A4D8               	btfss	status,2,c
  6833  001496  EF4F  F00A         	goto	u3371
  6834  00149A  EF51  F00A         	goto	u3370
  6835  00149E                     u3371:
  6836  00149E  EF63  F00A         	goto	l4834
  6837  0014A2                     u3370:
  6838  0014A2                     l4830:
  6839                           
  6840                           ; BSR set to: 0
  6841  0014A2  0E00               	movlw	0
  6842  0014A4  6F8F               	movwf	___fladd@b& (0+255),b
  6843  0014A6  0E00               	movlw	0
  6844  0014A8  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6845  0014AA  0E00               	movlw	0
  6846  0014AC  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6847  0014AE  0E00               	movlw	0
  6848  0014B0  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6849  0014B2  519D               	movf	___fladd@bexp& (0+255),w,b
  6850  0014B4  A4D8               	btfss	status,2,c
  6851  0014B6  EF5F  F00A         	goto	u3381
  6852  0014BA  EF61  F00A         	goto	u3380
  6853  0014BE                     u3381:
  6854  0014BE  EF63  F00A         	goto	l4834
  6855  0014C2                     u3380:
  6856  0014C2                     
  6857                           ; BSR set to: 0
  6858  0014C2  0E00               	movlw	0
  6859  0014C4  6F9B               	movwf	___fladd@signs& (0+255),b
  6860  0014C6                     l4834:
  6861                           
  6862                           ; BSR set to: 0
  6863  0014C6  A19D               	btfss	___fladd@bexp& (0+255),0,b
  6864  0014C8  EF68  F00A         	goto	u3391
  6865  0014CC  EF6A  F00A         	goto	u3390
  6866  0014D0                     u3391:
  6867  0014D0  EF6D  F00A         	goto	l4838
  6868  0014D4                     u3390:
  6869  0014D4                     
  6870                           ; BSR set to: 0
  6871  0014D4  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  6872  0014D6  EF6E  F00A         	goto	l4840
  6873  0014DA                     l4838:
  6874                           
  6875                           ; BSR set to: 0
  6876  0014DA  9F91               	bcf	(___fladd@b+2)& (0+255),7,b
  6877  0014DC                     l4840:
  6878                           
  6879                           ; BSR set to: 0
  6880  0014DC  90D8               	bcf	status,0,c
  6881  0014DE  319D               	rrcf	___fladd@bexp& (0+255),w,b
  6882  0014E0  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6883  0014E2                     
  6884                           ; BSR set to: 0
  6885  0014E2  AF9B               	btfss	___fladd@signs& (0+255),7,b
  6886  0014E4  EF76  F00A         	goto	u3401
  6887  0014E8  EF78  F00A         	goto	u3400
  6888  0014EC                     u3401:
  6889  0014EC  EF79  F00A         	goto	l4846
  6890  0014F0                     u3400:
  6891  0014F0                     
  6892                           ; BSR set to: 0
  6893  0014F0  8F92               	bsf	(___fladd@b+3)& (0+255),7,b
  6894  0014F2                     l4846:
  6895                           
  6896                           ; BSR set to: 0
  6897  0014F2  C08F  F08F         	movff	___fladd@b,?___fladd
  6898  0014F6  C090  F090         	movff	___fladd@b+1,?___fladd+1
  6899  0014FA  C091  F091         	movff	___fladd@b+2,?___fladd+2
  6900  0014FE  C092  F092         	movff	___fladd@b+3,?___fladd+3
  6901  001502                     l1928:
  6902                           
  6903                           ; BSR set to: 0
  6904  001502  0012               	return		;funcret
  6905  001504                     __end_of___fladd:
  6906                           	callstack 0
  6907                           
  6908 ;; *************** function _calcMotorPow *****************
  6909 ;; Defined at:
  6910 ;;		line 320 in file "main.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  oldSpeedDelt    2   75[BANK0 ] short 
  6915 ;;  setSpeedDelt    2   73[BANK0 ] short 
  6916 ;;  addMPow         1   77[BANK0 ] char 
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;Total ram usage:        7 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; Hardware stack levels required when called: 10
  6933 ;; This function calls:
  6934 ;;		___awdiv
  6935 ;;		___flmul
  6936 ;;		___fltol
  6937 ;;		___xxtofl
  6938 ;;		_actSpeed
  6939 ;;		_setMotor
  6940 ;; This function is called by:
  6941 ;;		_loop
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text28
  6946  002B66                     __ptext28:
  6947                           	callstack 0
  6948  002B66                     _calcMotorPow:
  6949                           	callstack 19
  6950  002B66                     
  6951                           ;main.c: 321:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6952  002B66  0100               	movlb	0	; () banked
  6953  002B68  51DA               	movf	_currentSpeed& (0+255),w,b
  6954  002B6A  5DDC               	subwf	_setSpeed& (0+255),w,b
  6955  002B6C  6FA9               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6956  002B6E  51DB               	movf	(_currentSpeed+1)& (0+255),w,b
  6957  002B70  59DD               	subwfb	(_setSpeed+1)& (0+255),w,b
  6958  002B72  6FAA               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6959                           
  6960                           ;main.c: 322:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6961  002B74  51D8               	movf	_oldSpeed& (0+255),w,b
  6962  002B76  5DDA               	subwf	_currentSpeed& (0+255),w,b
  6963  002B78  6FAB               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6964  002B7A  51D9               	movf	(_oldSpeed+1)& (0+255),w,b
  6965  002B7C  59DB               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6966  002B7E  6FAC               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6967  002B80                     
  6968                           ; BSR set to: 0
  6969                           ;main.c: 325:     currentSpeed = actSpeed();
  6970  002B80  ECA8  F01B         	call	_actSpeed	;wreg free
  6971  002B84  C020  F0DA         	movff	?_actSpeed,_currentSpeed
  6972  002B88  C021  F0DB         	movff	?_actSpeed+1,_currentSpeed+1
  6973  002B8C                     
  6974                           ;main.c: 329:  addMPow = (int8_t)((0.025) * (setSpeedDelta - (oldSpeedDelta / (2))));
  6975  002B8C  0ECD               	movlw	205
  6976  002B8E  0100               	movlb	0	; () banked
  6977  002B90  6F7A               	movwf	___flmul@a& (0+255),b
  6978  002B92  0ECC               	movlw	204
  6979  002B94  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  6980  002B96  0ECC               	movlw	204
  6981  002B98  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  6982  002B9A  0E3C               	movlw	60
  6983  002B9C  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  6984  002B9E  0E00               	movlw	0
  6985  002BA0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6986  002BA2  0E02               	movlw	2
  6987  002BA4  6F62               	movwf	___awdiv@divisor& (0+255),b
  6988  002BA6  C0AB  F060         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  6989  002BAA  C0AC  F061         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  6990  002BAE  EC93  F01A         	call	___awdiv	;wreg free
  6991  002BB2  C0A9  F0A7         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  6992  002BB6  C0AA  F0A8         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  6993  002BBA  0100               	movlb	0	; () banked
  6994  002BBC  5160               	movf	?___awdiv& (0+255),w,b
  6995  002BBE  5FA7               	subwf	??_calcMotorPow& (0+255),f,b
  6996  002BC0  5161               	movf	(?___awdiv+1)& (0+255),w,b
  6997  002BC2  5BA8               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  6998  002BC4  C0A7  F068         	movff	??_calcMotorPow,___xxtofl@val
  6999  002BC8  C0A8  F069         	movff	??_calcMotorPow+1,___xxtofl@val+1
  7000  002BCC  0E00               	movlw	0
  7001  002BCE  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  7002  002BD0  0EFF               	movlw	-1
  7003  002BD2  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  7004  002BD4  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  7005  002BD6  0E01               	movlw	1
  7006  002BD8  EC55  F013         	call	___xxtofl
  7007  002BDC  C068  F076         	movff	?___xxtofl,___flmul@b
  7008  002BE0  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  7009  002BE4  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  7010  002BE8  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  7011  002BEC  EC82  F00A         	call	___flmul	;wreg free
  7012  002BF0  C076  F09F         	movff	?___flmul,___fltol@f1
  7013  002BF4  C077  F0A0         	movff	?___flmul+1,___fltol@f1+1
  7014  002BF8  C078  F0A1         	movff	?___flmul+2,___fltol@f1+2
  7015  002BFC  C079  F0A2         	movff	?___flmul+3,___fltol@f1+3
  7016  002C00  EC6E  F017         	call	___fltol	;wreg free
  7017  002C04  0100               	movlb	0	; () banked
  7018  002C06  519F               	movf	?___fltol& (0+255),w,b
  7019  002C08  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  7020  002C0A                     
  7021                           ; BSR set to: 0
  7022                           ;main.c: 331:     if(addMPow > (3)){
  7023  002C0A  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  7024  002C0C  0A80               	xorlw	128
  7025  002C0E  0F7C               	addlw	-132
  7026  002C10  A0D8               	btfss	status,0,c
  7027  002C12  EF0D  F016         	goto	u6331
  7028  002C16  EF0F  F016         	goto	u6330
  7029  002C1A                     u6331:
  7030  002C1A  EF13  F016         	goto	l6994
  7031  002C1E                     u6330:
  7032  002C1E                     
  7033                           ; BSR set to: 0
  7034                           ;main.c: 332:         addMPow = (3);
  7035  002C1E  0E03               	movlw	3
  7036  002C20  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  7037                           
  7038                           ;main.c: 333:     }else if(addMPow < -(3)){
  7039  002C22  EF1F  F016         	goto	l6998
  7040  002C26                     l6994:
  7041                           
  7042                           ; BSR set to: 0
  7043  002C26  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  7044  002C28  0A80               	xorlw	128
  7045  002C2A  0F83               	addlw	131
  7046  002C2C  B0D8               	btfsc	status,0,c
  7047  002C2E  EF1B  F016         	goto	u6341
  7048  002C32  EF1D  F016         	goto	u6340
  7049  002C36                     u6341:
  7050  002C36  EF1F  F016         	goto	l6998
  7051  002C3A                     u6340:
  7052  002C3A                     
  7053                           ; BSR set to: 0
  7054                           ;main.c: 334:         addMPow = -(3);
  7055  002C3A  0EFD               	movlw	253
  7056  002C3C  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  7057  002C3E                     l6998:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;main.c: 337:  actMotorPow = actMotorPow + addMPow;
  7061  002C3E  5026               	movf	_actMotorPow^0,w,c
  7062  002C40  25AD               	addwf	calcMotorPow@addMPow& (0+255),w,b
  7063  002C42  6E26               	movwf	_actMotorPow^0,c
  7064  002C44  0E00               	movlw	0
  7065  002C46  BFAD               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  7066  002C48  0EFF               	movlw	255
  7067  002C4A  2027               	addwfc	(_actMotorPow+1)^0,w,c
  7068  002C4C  6E27               	movwf	(_actMotorPow+1)^0,c
  7069  002C4E                     
  7070                           ; BSR set to: 0
  7071                           ;main.c: 339:  if(actMotorPow > (700)){
  7072  002C4E  BE27               	btfsc	(_actMotorPow+1)^0,7,c
  7073  002C50  EF33  F016         	goto	u6351
  7074  002C54  0EBD               	movlw	189
  7075  002C56  5C26               	subwf	_actMotorPow^0,w,c
  7076  002C58  0E02               	movlw	2
  7077  002C5A  5827               	subwfb	(_actMotorPow+1)^0,w,c
  7078  002C5C  A0D8               	btfss	status,0,c
  7079  002C5E  EF33  F016         	goto	u6351
  7080  002C62  EF35  F016         	goto	u6350
  7081  002C66                     u6351:
  7082  002C66  EF3B  F016         	goto	l7004
  7083  002C6A                     u6350:
  7084  002C6A                     
  7085                           ; BSR set to: 0
  7086                           ;main.c: 340:   actMotorPow = (700);
  7087  002C6A  0E02               	movlw	2
  7088  002C6C  6E27               	movwf	(_actMotorPow+1)^0,c
  7089  002C6E  0EBC               	movlw	188
  7090  002C70  6E26               	movwf	_actMotorPow^0,c
  7091                           
  7092                           ;main.c: 341:  }else if(actMotorPow < (-400)){
  7093  002C72  EF4D  F016         	goto	l7008
  7094  002C76                     l7004:
  7095                           
  7096                           ; BSR set to: 0
  7097  002C76  AE27               	btfss	(_actMotorPow+1)^0,7,c
  7098  002C78  EF47  F016         	goto	u6361
  7099  002C7C  0E70               	movlw	112
  7100  002C7E  5C26               	subwf	_actMotorPow^0,w,c
  7101  002C80  0EFE               	movlw	254
  7102  002C82  5827               	subwfb	(_actMotorPow+1)^0,w,c
  7103  002C84  B0D8               	btfsc	status,0,c
  7104  002C86  EF47  F016         	goto	u6361
  7105  002C8A  EF49  F016         	goto	u6360
  7106  002C8E                     u6361:
  7107  002C8E  EF4D  F016         	goto	l7008
  7108  002C92                     u6360:
  7109  002C92                     
  7110                           ; BSR set to: 0
  7111                           ;main.c: 342:   actMotorPow = (-400);
  7112  002C92  0EFE               	movlw	254
  7113  002C94  6E27               	movwf	(_actMotorPow+1)^0,c
  7114  002C96  0E70               	movlw	112
  7115  002C98  6E26               	movwf	_actMotorPow^0,c
  7116  002C9A                     l7008:
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;main.c: 345:     setMotor(actMotorPow);
  7120  002C9A  C026  F062         	movff	_actMotorPow,setMotor@motorPower
  7121  002C9E  C027  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  7122  002CA2  ECEE  F018         	call	_setMotor	;wreg free
  7123  002CA6                     
  7124                           ;main.c: 347:     oldSpeed = currentSpeed;
  7125  002CA6  C0DA  F0D8         	movff	_currentSpeed,_oldSpeed
  7126  002CAA  C0DB  F0D9         	movff	_currentSpeed+1,_oldSpeed+1
  7127  002CAE  0012               	return		;funcret
  7128  002CB0                     __end_of_calcMotorPow:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function _setMotor *****************
  7132 ;; Defined at:
  7133 ;;		line 350 in file "main.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  motorPower      2    2[BANK0 ] short 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;Total ram usage:        4 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; Hardware stack levels required when called: 9
  7154 ;; This function calls:
  7155 ;;		_PWM7_LoadDutyValue
  7156 ;;		_PWM8_LoadDutyValue
  7157 ;; This function is called by:
  7158 ;;		_loop
  7159 ;;		_startAccell
  7160 ;;		_calcMotorPow
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text29
  7165  0031DC                     __ptext29:
  7166                           	callstack 0
  7167  0031DC                     _setMotor:
  7168                           	callstack 19
  7169  0031DC                     
  7170                           ;main.c: 351:     if(motorPower > (100)){
  7171  0031DC  0100               	movlb	0	; () banked
  7172  0031DE  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  7173  0031E0  EFFB  F018         	goto	u5281
  7174  0031E4  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  7175  0031E6  E109               	bnz	u5280
  7176  0031E8  0E65               	movlw	101
  7177  0031EA  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7178  0031EC  A0D8               	btfss	status,0,c
  7179  0031EE  EFFB  F018         	goto	u5281
  7180  0031F2  EFFD  F018         	goto	u5280
  7181  0031F6                     u5281:
  7182  0031F6  EF1D  F019         	goto	l6308
  7183  0031FA                     u5280:
  7184  0031FA                     
  7185                           ; BSR set to: 0
  7186                           ;main.c: 352:        if(motorPower > (700)){
  7187  0031FA  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  7188  0031FC  EF09  F019         	goto	u5291
  7189  003200  0EBD               	movlw	189
  7190  003202  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7191  003204  0E02               	movlw	2
  7192  003206  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  7193  003208  A0D8               	btfss	status,0,c
  7194  00320A  EF09  F019         	goto	u5291
  7195  00320E  EF0B  F019         	goto	u5290
  7196  003212                     u5291:
  7197  003212  EF0F  F019         	goto	l6304
  7198  003216                     u5290:
  7199  003216                     
  7200                           ; BSR set to: 0
  7201                           ;main.c: 353:             motorPower = (700);
  7202  003216  0E02               	movlw	2
  7203  003218  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  7204  00321A  0EBC               	movlw	188
  7205  00321C  6F62               	movwf	setMotor@motorPower& (0+255),b
  7206  00321E                     l6304:
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;main.c: 355:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  7210  00321E  C062  F020         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  7211  003222  C063  F021         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  7212  003226  EC16  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7213  00322A                     
  7214                           ;main.c: 356:         PWM8_LoadDutyValue(0);
  7215  00322A  0E00               	movlw	0
  7216  00322C  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7217  00322E  0E00               	movlw	0
  7218  003230  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7219  003232  ECFB  F01F         	call	_PWM8_LoadDutyValue	;wreg free
  7220                           
  7221                           ;main.c: 357:     } else if(motorPower < -(100)){
  7222  003236  EF60  F019         	goto	l1371
  7223  00323A                     l6308:
  7224                           
  7225                           ; BSR set to: 0
  7226  00323A  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  7227  00323C  EF29  F019         	goto	u5301
  7228  003240  0E9C               	movlw	156
  7229  003242  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7230  003244  0EFF               	movlw	255
  7231  003246  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  7232  003248  B0D8               	btfsc	status,0,c
  7233  00324A  EF29  F019         	goto	u5301
  7234  00324E  EF2B  F019         	goto	u5300
  7235  003252                     u5301:
  7236  003252  EF54  F019         	goto	l6318
  7237  003256                     u5300:
  7238  003256                     
  7239                           ; BSR set to: 0
  7240                           ;main.c: 358:         if(motorPower < (-400)){
  7241  003256  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  7242  003258  EF37  F019         	goto	u5311
  7243  00325C  0E70               	movlw	112
  7244  00325E  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7245  003260  0EFE               	movlw	254
  7246  003262  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  7247  003264  B0D8               	btfsc	status,0,c
  7248  003266  EF37  F019         	goto	u5311
  7249  00326A  EF39  F019         	goto	u5310
  7250  00326E                     u5311:
  7251  00326E  EF3D  F019         	goto	l6314
  7252  003272                     u5310:
  7253  003272                     
  7254                           ; BSR set to: 0
  7255                           ;main.c: 359:             motorPower = (-400);
  7256  003272  0EFE               	movlw	254
  7257  003274  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  7258  003276  0E70               	movlw	112
  7259  003278  6F62               	movwf	setMotor@motorPower& (0+255),b
  7260  00327A                     l6314:
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;main.c: 361:         PWM7_LoadDutyValue(0);
  7264  00327A  0E00               	movlw	0
  7265  00327C  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  7266  00327E  0E00               	movlw	0
  7267  003280  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  7268  003282  EC16  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7269  003286                     
  7270                           ;main.c: 362:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  7271  003286  C062  F064         	movff	setMotor@motorPower,??_setMotor
  7272  00328A  C063  F065         	movff	setMotor@motorPower+1,??_setMotor+1
  7273  00328E  0100               	movlb	0	; () banked
  7274  003290  1F64               	comf	??_setMotor& (0+255),f,b
  7275  003292  1F65               	comf	(??_setMotor+1)& (0+255),f,b
  7276  003294  4B64               	infsnz	??_setMotor& (0+255),f,b
  7277  003296  2B65               	incf	(??_setMotor+1)& (0+255),f,b
  7278  003298  C064  F020         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  7279  00329C  C065  F021         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  7280  0032A0  ECFB  F01F         	call	_PWM8_LoadDutyValue	;wreg free
  7281                           
  7282                           ;main.c: 363:     } else {
  7283  0032A4  EF60  F019         	goto	l1371
  7284  0032A8                     l6318:
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;main.c: 364:         PWM7_LoadDutyValue(0);
  7288  0032A8  0E00               	movlw	0
  7289  0032AA  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  7290  0032AC  0E00               	movlw	0
  7291  0032AE  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  7292  0032B0  EC16  F020         	call	_PWM7_LoadDutyValue	;wreg free
  7293                           
  7294                           ;main.c: 365:         PWM8_LoadDutyValue(0);
  7295  0032B4  0E00               	movlw	0
  7296  0032B6  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7297  0032B8  0E00               	movlw	0
  7298  0032BA  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7299  0032BC  ECFB  F01F         	call	_PWM8_LoadDutyValue	;wreg free
  7300  0032C0                     l1371:
  7301  0032C0  0012               	return		;funcret
  7302  0032C2                     __end_of_setMotor:
  7303                           	callstack 0
  7304                           
  7305 ;; *************** function _PWM8_LoadDutyValue *****************
  7306 ;; Defined at:
  7307 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  dutyValue       2   31[COMRAM] unsigned short 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;Total ram usage:        4 bytes
  7326 ;; Hardware stack levels used: 1
  7327 ;; Hardware stack levels required when called: 8
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_setMotor
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text30
  7336  003FF6                     __ptext30:
  7337                           	callstack 0
  7338  003FF6                     _PWM8_LoadDutyValue:
  7339                           	callstack 19
  7340  003FF6                     
  7341                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7342  003FF6  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  7343  003FFA  C021  F061         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  7344  003FFE  0100               	movlb	0	; () banked
  7345  004000  90D8               	bcf	status,0,c
  7346  004002  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7347  004004  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7348  004006  90D8               	bcf	status,0,c
  7349  004008  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7350  00400A  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7351  00400C  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  7352  00400E  6E61               	movwf	97,c	;volatile
  7353                           
  7354                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  7355  004010  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  7356  004014  0E03               	movlw	3
  7357  004016  1760               	andwf	??_PWM8_LoadDutyValue& (0+255),f,b
  7358  004018  0E06               	movlw	6
  7359  00401A  6F61               	movwf	(??_PWM8_LoadDutyValue+1)& (0+255),b
  7360  00401C                     u5125:
  7361  00401C  90D8               	bcf	status,0,c
  7362  00401E  3760               	rlcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7363  004020  2F61               	decfsz	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7364  004022  EF0E  F020         	goto	u5125
  7365  004026  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  7366  004028  6E60               	movwf	96,c	;volatile
  7367  00402A                     
  7368                           ; BSR set to: 0
  7369  00402A  0012               	return		;funcret
  7370  00402C                     __end_of_PWM8_LoadDutyValue:
  7371                           	callstack 0
  7372                           
  7373 ;; *************** function _PWM7_LoadDutyValue *****************
  7374 ;; Defined at:
  7375 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  dutyValue       2   31[COMRAM] unsigned short 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;Total ram usage:        4 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; Hardware stack levels required when called: 8
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_setMotor
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text31
  7404  00402C                     __ptext31:
  7405                           	callstack 0
  7406  00402C                     _PWM7_LoadDutyValue:
  7407                           	callstack 19
  7408  00402C                     
  7409                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7410  00402C  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7411  004030  C021  F061         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  7412  004034  0100               	movlb	0	; () banked
  7413  004036  90D8               	bcf	status,0,c
  7414  004038  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7415  00403A  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7416  00403C  90D8               	bcf	status,0,c
  7417  00403E  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7418  004040  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7419  004042  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  7420  004044  6E65               	movwf	101,c	;volatile
  7421                           
  7422                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  7423  004046  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7424  00404A  0E03               	movlw	3
  7425  00404C  1760               	andwf	??_PWM7_LoadDutyValue& (0+255),f,b
  7426  00404E  0E06               	movlw	6
  7427  004050  6F61               	movwf	(??_PWM7_LoadDutyValue+1)& (0+255),b
  7428  004052                     u5115:
  7429  004052  90D8               	bcf	status,0,c
  7430  004054  3760               	rlcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7431  004056  2F61               	decfsz	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7432  004058  EF29  F020         	goto	u5115
  7433  00405C  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  7434  00405E  6E64               	movwf	100,c	;volatile
  7435  004060                     
  7436                           ; BSR set to: 0
  7437  004060  0012               	return		;funcret
  7438  004062                     __end_of_PWM7_LoadDutyValue:
  7439                           	callstack 0
  7440                           
  7441 ;; *************** function _actSpeed *****************
  7442 ;; Defined at:
  7443 ;;		line 71 in file "main.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;		None
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  speed           2   14[BANK0 ] short 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  2   31[COMRAM] short 
  7450 ;; Registers used:
  7451 ;;		wreg, status,2, status,0, cstack
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7458 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;Total ram usage:        4 bytes
  7462 ;; Hardware stack levels used: 1
  7463 ;; Hardware stack levels required when called: 9
  7464 ;; This function calls:
  7465 ;;		___aldiv
  7466 ;; This function is called by:
  7467 ;;		_calcMotorPow
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text32
  7472  003750                     __ptext32:
  7473                           	callstack 0
  7474  003750                     _actSpeed:
  7475                           	callstack 19
  7476  003750                     
  7477                           ;main.c: 72:     int16_t speed = 0;
  7478  003750  0E00               	movlw	0
  7479  003752  0100               	movlb	0	; () banked
  7480  003754  6F6F               	movwf	(actSpeed@speed+1)& (0+255),b
  7481  003756  0E00               	movlw	0
  7482  003758  6F6E               	movwf	actSpeed@speed& (0+255),b
  7483  00375A                     
  7484                           ; BSR set to: 0
  7485                           ;main.c: 73:     if(smtPeriod){
  7486  00375A  503A               	movf	_smtPeriod^0,w,c	;volatile
  7487  00375C  103B               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  7488  00375E  103C               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  7489  003760  103D               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  7490  003762  B4D8               	btfsc	status,2,c
  7491  003764  EFB6  F01B         	goto	u5361
  7492  003768  EFB8  F01B         	goto	u5360
  7493  00376C                     u5361:
  7494  00376C  EFF0  F01B         	goto	l6376
  7495  003770                     u5360:
  7496  003770                     
  7497                           ; BSR set to: 0
  7498                           ;main.c: 74:         if(CLC3CONbits.LC3OUT){
  7499  003770  013C               	movlb	60	; () banked
  7500  003772  AB60               	btfss	96,5,b	;volatile
  7501  003774  EFBE  F01B         	goto	u5371
  7502  003778  EFC0  F01B         	goto	u5370
  7503  00377C                     u5371:
  7504  00377C  EFD9  F01B         	goto	l6374
  7505  003780                     u5370:
  7506  003780                     
  7507                           ; BSR set to: 60
  7508                           ;main.c: 75:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  7509  003780  0E20               	movlw	32
  7510  003782  0100               	movlb	0	; () banked
  7511  003784  6F60               	movwf	___aldiv@dividend& (0+255),b
  7512  003786  0EA1               	movlw	161
  7513  003788  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  7514  00378A  0E07               	movlw	7
  7515  00378C  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  7516  00378E  0E00               	movlw	0
  7517  003790  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  7518  003792  C03A  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7519  003796  C03B  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7520  00379A  C03C  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7521  00379E  C03D  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7522  0037A2  ECE7  F016         	call	___aldiv	;wreg free
  7523  0037A6  C060  F06E         	movff	?___aldiv,actSpeed@speed
  7524  0037AA  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  7525                           
  7526                           ;main.c: 76:         } else {
  7527  0037AE  EFF0  F01B         	goto	l6376
  7528  0037B2                     l6374:
  7529                           
  7530                           ; BSR set to: 60
  7531                           ;main.c: 77:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  7532  0037B2  0EE0               	movlw	224
  7533  0037B4  0100               	movlb	0	; () banked
  7534  0037B6  6F60               	movwf	___aldiv@dividend& (0+255),b
  7535  0037B8  0E5E               	movlw	94
  7536  0037BA  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  7537  0037BC  0EF8               	movlw	248
  7538  0037BE  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  7539  0037C0  0EFF               	movlw	255
  7540  0037C2  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  7541  0037C4  C03A  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7542  0037C8  C03B  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7543  0037CC  C03C  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7544  0037D0  C03D  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7545  0037D4  ECE7  F016         	call	___aldiv	;wreg free
  7546  0037D8  C060  F06E         	movff	?___aldiv,actSpeed@speed
  7547  0037DC  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  7548  0037E0                     l6376:
  7549                           
  7550                           ;main.c: 80:     return speed;
  7551  0037E0  C06E  F020         	movff	actSpeed@speed,?_actSpeed
  7552  0037E4  C06F  F021         	movff	actSpeed@speed+1,?_actSpeed+1
  7553  0037E8  0012               	return		;funcret
  7554  0037EA                     __end_of_actSpeed:
  7555                           	callstack 0
  7556                           
  7557 ;; *************** function ___aldiv *****************
  7558 ;; Defined at:
  7559 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  dividend        4    0[BANK0 ] long 
  7562 ;;  divisor         4    4[BANK0 ] long 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  quotient        4   10[BANK0 ] long 
  7565 ;;  sign            1    9[BANK0 ] unsigned char 
  7566 ;;  counter         1    8[BANK0 ] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  4    0[BANK0 ] long 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7576 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;Total ram usage:       14 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; Hardware stack levels required when called: 8
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_actSpeed
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text33
  7591  002DCE                     __ptext33:
  7592                           	callstack 0
  7593  002DCE                     ___aldiv:
  7594                           	callstack 19
  7595  002DCE  0E00               	movlw	0
  7596  002DD0  0100               	movlb	0	; () banked
  7597  002DD2  6F69               	movwf	___aldiv@sign& (0+255),b
  7598  002DD4                     
  7599                           ; BSR set to: 0
  7600  002DD4  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  7601  002DD6  EFF1  F016         	goto	u5160
  7602  002DDA  EFEF  F016         	goto	u5161
  7603  002DDE                     u5161:
  7604  002DDE  EFFB  F016         	goto	l6218
  7605  002DE2                     u5160:
  7606  002DE2                     
  7607                           ; BSR set to: 0
  7608  002DE2  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7609  002DE4  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7610  002DE6  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7611  002DE8  6D64               	negf	___aldiv@divisor& (0+255),b
  7612  002DEA  0E00               	movlw	0
  7613  002DEC  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7614  002DEE  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7615  002DF0  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7616  002DF2                     
  7617                           ; BSR set to: 0
  7618  002DF2  0E01               	movlw	1
  7619  002DF4  6F69               	movwf	___aldiv@sign& (0+255),b
  7620  002DF6                     l6218:
  7621                           
  7622                           ; BSR set to: 0
  7623  002DF6  BF63               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  7624  002DF8  EF02  F017         	goto	u5170
  7625  002DFC  EF00  F017         	goto	u5171
  7626  002E00                     u5171:
  7627  002E00  EF0C  F017         	goto	l6224
  7628  002E04                     u5170:
  7629  002E04                     
  7630                           ; BSR set to: 0
  7631  002E04  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7632  002E06  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7633  002E08  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7634  002E0A  6D60               	negf	___aldiv@dividend& (0+255),b
  7635  002E0C  0E00               	movlw	0
  7636  002E0E  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7637  002E10  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7638  002E12  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7639  002E14                     
  7640                           ; BSR set to: 0
  7641  002E14  0E01               	movlw	1
  7642  002E16  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  7643  002E18                     l6224:
  7644                           
  7645                           ; BSR set to: 0
  7646  002E18  0E00               	movlw	0
  7647  002E1A  6F6A               	movwf	___aldiv@quotient& (0+255),b
  7648  002E1C  0E00               	movlw	0
  7649  002E1E  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  7650  002E20  0E00               	movlw	0
  7651  002E22  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  7652  002E24  0E00               	movlw	0
  7653  002E26  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  7654  002E28                     
  7655                           ; BSR set to: 0
  7656  002E28  5164               	movf	___aldiv@divisor& (0+255),w,b
  7657  002E2A  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7658  002E2C  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7659  002E2E  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7660  002E30  B4D8               	btfsc	status,2,c
  7661  002E32  EF1D  F017         	goto	u5181
  7662  002E36  EF1F  F017         	goto	u5180
  7663  002E3A                     u5181:
  7664  002E3A  EF55  F017         	goto	l6246
  7665  002E3E                     u5180:
  7666  002E3E                     
  7667                           ; BSR set to: 0
  7668  002E3E  0E01               	movlw	1
  7669  002E40  6F68               	movwf	___aldiv@counter& (0+255),b
  7670  002E42  EF29  F017         	goto	l6232
  7671  002E46                     l6230:
  7672                           
  7673                           ; BSR set to: 0
  7674  002E46  90D8               	bcf	status,0,c
  7675  002E48  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  7676  002E4A  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7677  002E4C  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7678  002E4E  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7679  002E50  2B68               	incf	___aldiv@counter& (0+255),f,b
  7680  002E52                     l6232:
  7681                           
  7682                           ; BSR set to: 0
  7683  002E52  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7684  002E54  EF2E  F017         	goto	u5191
  7685  002E58  EF30  F017         	goto	u5190
  7686  002E5C                     u5191:
  7687  002E5C  EF23  F017         	goto	l6230
  7688  002E60                     u5190:
  7689  002E60                     l6234:
  7690                           
  7691                           ; BSR set to: 0
  7692  002E60  90D8               	bcf	status,0,c
  7693  002E62  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  7694  002E64  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7695  002E66  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7696  002E68  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7697  002E6A                     
  7698                           ; BSR set to: 0
  7699  002E6A  5164               	movf	___aldiv@divisor& (0+255),w,b
  7700  002E6C  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  7701  002E6E  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7702  002E70  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7703  002E72  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7704  002E74  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7705  002E76  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7706  002E78  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7707  002E7A  A0D8               	btfss	status,0,c
  7708  002E7C  EF42  F017         	goto	u5201
  7709  002E80  EF44  F017         	goto	u5200
  7710  002E84                     u5201:
  7711  002E84  EF4D  F017         	goto	l6242
  7712  002E88                     u5200:
  7713  002E88                     
  7714                           ; BSR set to: 0
  7715  002E88  5164               	movf	___aldiv@divisor& (0+255),w,b
  7716  002E8A  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  7717  002E8C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7718  002E8E  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7719  002E90  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7720  002E92  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7721  002E94  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7722  002E96  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7723  002E98                     
  7724                           ; BSR set to: 0
  7725  002E98  816A               	bsf	___aldiv@quotient& (0+255),0,b
  7726  002E9A                     l6242:
  7727                           
  7728                           ; BSR set to: 0
  7729  002E9A  90D8               	bcf	status,0,c
  7730  002E9C  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7731  002E9E  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7732  002EA0  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7733  002EA2  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  7734  002EA4                     
  7735                           ; BSR set to: 0
  7736  002EA4  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  7737  002EA6  EF30  F017         	goto	l6234
  7738  002EAA                     l6246:
  7739                           
  7740                           ; BSR set to: 0
  7741  002EAA  5169               	movf	___aldiv@sign& (0+255),w,b
  7742  002EAC  B4D8               	btfsc	status,2,c
  7743  002EAE  EF5B  F017         	goto	u5211
  7744  002EB2  EF5D  F017         	goto	u5210
  7745  002EB6                     u5211:
  7746  002EB6  EF65  F017         	goto	l6250
  7747  002EBA                     u5210:
  7748  002EBA                     
  7749                           ; BSR set to: 0
  7750  002EBA  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7751  002EBC  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7752  002EBE  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7753  002EC0  6D6A               	negf	___aldiv@quotient& (0+255),b
  7754  002EC2  0E00               	movlw	0
  7755  002EC4  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7756  002EC6  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7757  002EC8  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7758  002ECA                     l6250:
  7759                           
  7760                           ; BSR set to: 0
  7761  002ECA  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  7762  002ECE  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  7763  002ED2  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  7764  002ED6  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  7765  002EDA                     
  7766                           ; BSR set to: 0
  7767  002EDA  0012               	return		;funcret
  7768  002EDC                     __end_of___aldiv:
  7769                           	callstack 0
  7770                           
  7771 ;; *************** function ___xxtofl *****************
  7772 ;; Defined at:
  7773 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  sign            1    wreg     unsigned char 
  7776 ;;  val             4    8[BANK0 ] long 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  sign            1   16[BANK0 ] unsigned char 
  7779 ;;  arg             4   18[BANK0 ] unsigned long 
  7780 ;;  exp             1   17[BANK0 ] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  4    8[BANK0 ] unsigned char 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7790 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7792 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;Total ram usage:       14 bytes
  7795 ;; Hardware stack levels used: 1
  7796 ;; Hardware stack levels required when called: 8
  7797 ;; This function calls:
  7798 ;;		Nothing
  7799 ;; This function is called by:
  7800 ;;		_loop
  7801 ;;		_checkBatt
  7802 ;;		_calcSteering
  7803 ;;		_calcSpeed
  7804 ;;		_calcMotorPow
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text34
  7809  0026AA                     __ptext34:
  7810                           	callstack 0
  7811  0026AA                     ___xxtofl:
  7812                           	callstack 20
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;incstack = 0
  7816                           ;___xxtofl@sign stored from wreg
  7817  0026AA  0100               	movlb	0	; () banked
  7818  0026AC  6F70               	movwf	___xxtofl@sign& (0+255),b
  7819  0026AE  0100               	movlb	0	; () banked
  7820  0026B0  5170               	movf	___xxtofl@sign& (0+255),w,b
  7821  0026B2  B4D8               	btfsc	status,2,c
  7822  0026B4  EF5E  F013         	goto	u5851
  7823  0026B8  EF60  F013         	goto	u5850
  7824  0026BC                     u5851:
  7825  0026BC  EF82  F013         	goto	l2046
  7826  0026C0                     u5850:
  7827  0026C0                     
  7828                           ; BSR set to: 0
  7829  0026C0  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7830  0026C2  EF67  F013         	goto	u5860
  7831  0026C6  EF65  F013         	goto	u5861
  7832  0026CA                     u5861:
  7833  0026CA  EF82  F013         	goto	l2046
  7834  0026CE                     u5860:
  7835  0026CE                     
  7836                           ; BSR set to: 0
  7837  0026CE  C068  F06C         	movff	___xxtofl@val,??___xxtofl
  7838  0026D2  C069  F06D         	movff	___xxtofl@val+1,??___xxtofl+1
  7839  0026D6  C06A  F06E         	movff	___xxtofl@val+2,??___xxtofl+2
  7840  0026DA  C06B  F06F         	movff	___xxtofl@val+3,??___xxtofl+3
  7841  0026DE  1F6C               	comf	??___xxtofl& (0+255),f,b
  7842  0026E0  1F6D               	comf	(??___xxtofl+1)& (0+255),f,b
  7843  0026E2  1F6E               	comf	(??___xxtofl+2)& (0+255),f,b
  7844  0026E4  1F6F               	comf	(??___xxtofl+3)& (0+255),f,b
  7845  0026E6  2B6C               	incf	??___xxtofl& (0+255),f,b
  7846  0026E8  0E00               	movlw	0
  7847  0026EA  236D               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7848  0026EC  236E               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7849  0026EE  236F               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7850  0026F0  C06C  F072         	movff	??___xxtofl,___xxtofl@arg
  7851  0026F4  C06D  F073         	movff	??___xxtofl+1,___xxtofl@arg+1
  7852  0026F8  C06E  F074         	movff	??___xxtofl+2,___xxtofl@arg+2
  7853  0026FC  C06F  F075         	movff	??___xxtofl+3,___xxtofl@arg+3
  7854  002700  EF8A  F013         	goto	l6676
  7855  002704                     l2046:
  7856                           
  7857                           ; BSR set to: 0
  7858  002704  C068  F072         	movff	___xxtofl@val,___xxtofl@arg
  7859  002708  C069  F073         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7860  00270C  C06A  F074         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7861  002710  C06B  F075         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7862  002714                     l6676:
  7863                           
  7864                           ; BSR set to: 0
  7865  002714  5168               	movf	___xxtofl@val& (0+255),w,b
  7866  002716  1169               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7867  002718  116A               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7868  00271A  116B               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7869  00271C  A4D8               	btfss	status,2,c
  7870  00271E  EF93  F013         	goto	u5871
  7871  002722  EF95  F013         	goto	u5870
  7872  002726                     u5871:
  7873  002726  EF9F  F013         	goto	l6682
  7874  00272A                     u5870:
  7875  00272A                     
  7876                           ; BSR set to: 0
  7877  00272A  0E00               	movlw	0
  7878  00272C  6F68               	movwf	?___xxtofl& (0+255),b
  7879  00272E  0E00               	movlw	0
  7880  002730  6F69               	movwf	(?___xxtofl+1)& (0+255),b
  7881  002732  0E00               	movlw	0
  7882  002734  6F6A               	movwf	(?___xxtofl+2)& (0+255),b
  7883  002736  0E00               	movlw	0
  7884  002738  6F6B               	movwf	(?___xxtofl+3)& (0+255),b
  7885  00273A  EF30  F014         	goto	l2049
  7886  00273E                     l6682:
  7887                           
  7888                           ; BSR set to: 0
  7889  00273E  0E96               	movlw	150
  7890  002740  6F71               	movwf	___xxtofl@exp& (0+255),b
  7891  002742  EFA9  F013         	goto	l6686
  7892  002746                     l6684:
  7893                           
  7894                           ; BSR set to: 0
  7895  002746  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7896  002748  90D8               	bcf	status,0,c
  7897  00274A  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7898  00274C  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7899  00274E  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7900  002750  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7901  002752                     l6686:
  7902                           
  7903                           ; BSR set to: 0
  7904  002752  0E00               	movlw	0
  7905  002754  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7906  002756  6F6C               	movwf	??___xxtofl& (0+255),b
  7907  002758  0E00               	movlw	0
  7908  00275A  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7909  00275C  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7910  00275E  0E00               	movlw	0
  7911  002760  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7912  002762  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7913  002764  0EFE               	movlw	254
  7914  002766  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7915  002768  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7916  00276A  516C               	movf	??___xxtofl& (0+255),w,b
  7917  00276C  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7918  00276E  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7919  002770  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7920  002772  A4D8               	btfss	status,2,c
  7921  002774  EFBE  F013         	goto	u5881
  7922  002778  EFC0  F013         	goto	u5880
  7923  00277C                     u5881:
  7924  00277C  EFA3  F013         	goto	l6684
  7925  002780                     u5880:
  7926  002780  EFCE  F013         	goto	l2053
  7927  002784                     l6688:
  7928                           
  7929                           ; BSR set to: 0
  7930  002784  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7931  002786                     
  7932                           ; BSR set to: 0
  7933  002786  0E01               	movlw	1
  7934  002788  2772               	addwf	___xxtofl@arg& (0+255),f,b
  7935  00278A  0E00               	movlw	0
  7936  00278C  2373               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7937  00278E  2374               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7938  002790  2375               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7939  002792                     
  7940                           ; BSR set to: 0
  7941  002792  90D8               	bcf	status,0,c
  7942  002794  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7943  002796  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7944  002798  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7945  00279A  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7946  00279C                     l2053:
  7947                           
  7948                           ; BSR set to: 0
  7949  00279C  0E00               	movlw	0
  7950  00279E  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7951  0027A0  6F6C               	movwf	??___xxtofl& (0+255),b
  7952  0027A2  0E00               	movlw	0
  7953  0027A4  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7954  0027A6  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7955  0027A8  0E00               	movlw	0
  7956  0027AA  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7957  0027AC  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7958  0027AE  0EFF               	movlw	255
  7959  0027B0  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7960  0027B2  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7961  0027B4  516C               	movf	??___xxtofl& (0+255),w,b
  7962  0027B6  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7963  0027B8  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7964  0027BA  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7965  0027BC  A4D8               	btfss	status,2,c
  7966  0027BE  EFE3  F013         	goto	u5891
  7967  0027C2  EFE5  F013         	goto	u5890
  7968  0027C6                     u5891:
  7969  0027C6  EFC2  F013         	goto	l6688
  7970  0027CA                     u5890:
  7971  0027CA  EFED  F013         	goto	l6696
  7972  0027CE                     l6694:
  7973                           
  7974                           ; BSR set to: 0
  7975  0027CE  0771               	decf	___xxtofl@exp& (0+255),f,b
  7976  0027D0  90D8               	bcf	status,0,c
  7977  0027D2  3772               	rlcf	___xxtofl@arg& (0+255),f,b
  7978  0027D4  3773               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7979  0027D6  3774               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7980  0027D8  3775               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7981  0027DA                     l6696:
  7982                           
  7983                           ; BSR set to: 0
  7984  0027DA  BF74               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7985  0027DC  EFF2  F013         	goto	u5901
  7986  0027E0  EFF4  F013         	goto	u5900
  7987  0027E4                     u5901:
  7988  0027E4  EFFC  F013         	goto	l2060
  7989  0027E8                     u5900:
  7990  0027E8                     
  7991                           ; BSR set to: 0
  7992  0027E8  0E02               	movlw	2
  7993  0027EA  6171               	cpfslt	___xxtofl@exp& (0+255),b
  7994  0027EC  EFFA  F013         	goto	u5911
  7995  0027F0  EFFC  F013         	goto	u5910
  7996  0027F4                     u5911:
  7997  0027F4  EFE7  F013         	goto	l6694
  7998  0027F8                     u5910:
  7999  0027F8                     l2060:
  8000                           
  8001                           ; BSR set to: 0
  8002  0027F8  B171               	btfsc	___xxtofl@exp& (0+255),0,b
  8003  0027FA  EF01  F014         	goto	u5921
  8004  0027FE  EF03  F014         	goto	u5920
  8005  002802                     u5921:
  8006  002802  EF04  F014         	goto	l6702
  8007  002806                     u5920:
  8008  002806                     
  8009                           ; BSR set to: 0
  8010  002806  9F74               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  8011  002808                     l6702:
  8012                           
  8013                           ; BSR set to: 0
  8014  002808  90D8               	bcf	status,0,c
  8015  00280A  3371               	rrcf	___xxtofl@exp& (0+255),f,b
  8016  00280C                     
  8017                           ; BSR set to: 0
  8018  00280C  C071  F06C         	movff	___xxtofl@exp,??___xxtofl
  8019  002810  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  8020  002812  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  8021  002814  6B6F               	clrf	(??___xxtofl+3)& (0+255),b
  8022  002816  C06C  F06F         	movff	??___xxtofl,??___xxtofl+3
  8023  00281A  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  8024  00281C  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  8025  00281E  6B6C               	clrf	??___xxtofl& (0+255),b
  8026  002820  516C               	movf	??___xxtofl& (0+255),w,b
  8027  002822  1372               	iorwf	___xxtofl@arg& (0+255),f,b
  8028  002824  516D               	movf	(??___xxtofl+1)& (0+255),w,b
  8029  002826  1373               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8030  002828  516E               	movf	(??___xxtofl+2)& (0+255),w,b
  8031  00282A  1374               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8032  00282C  516F               	movf	(??___xxtofl+3)& (0+255),w,b
  8033  00282E  1375               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8034  002830                     
  8035                           ; BSR set to: 0
  8036  002830  5170               	movf	___xxtofl@sign& (0+255),w,b
  8037  002832  B4D8               	btfsc	status,2,c
  8038  002834  EF1E  F014         	goto	u5931
  8039  002838  EF20  F014         	goto	u5930
  8040  00283C                     u5931:
  8041  00283C  EF28  F014         	goto	l6712
  8042  002840                     u5930:
  8043  002840                     
  8044                           ; BSR set to: 0
  8045  002840  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  8046  002842  EF27  F014         	goto	u5940
  8047  002846  EF25  F014         	goto	u5941
  8048  00284A                     u5941:
  8049  00284A  EF28  F014         	goto	l6712
  8050  00284E                     u5940:
  8051  00284E                     
  8052                           ; BSR set to: 0
  8053  00284E  8F75               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8054  002850                     l6712:
  8055                           
  8056                           ; BSR set to: 0
  8057  002850  C072  F068         	movff	___xxtofl@arg,?___xxtofl
  8058  002854  C073  F069         	movff	___xxtofl@arg+1,?___xxtofl+1
  8059  002858  C074  F06A         	movff	___xxtofl@arg+2,?___xxtofl+2
  8060  00285C  C075  F06B         	movff	___xxtofl@arg+3,?___xxtofl+3
  8061  002860                     l2049:
  8062                           
  8063                           ; BSR set to: 0
  8064  002860  0012               	return		;funcret
  8065  002862                     __end_of___xxtofl:
  8066                           	callstack 0
  8067                           
  8068 ;; *************** function ___fltol *****************
  8069 ;; Defined at:
  8070 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  f1              4   63[BANK0 ] unsigned char 
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;  exp1            1   32[COMRAM] unsigned char 
  8075 ;;  sign1           1   31[COMRAM] unsigned char 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  4   63[BANK0 ] long 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2, status,0
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8087 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8088 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;Total ram usage:       10 bytes
  8090 ;; Hardware stack levels used: 1
  8091 ;; Hardware stack levels required when called: 8
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_calcSteering
  8096 ;;		_calcSpeed
  8097 ;;		_calcMotorPow
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text35
  8102  002EDC                     __ptext35:
  8103                           	callstack 0
  8104  002EDC                     ___fltol:
  8105                           	callstack 20
  8106  002EDC  0100               	movlb	0	; () banked
  8107  002EDE  35A1               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8108  002EE0  35A2               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8109  002EE2  6E21               	movwf	___fltol@exp1^0,c
  8110  002EE4  5021               	movf	___fltol@exp1^0,w,c
  8111  002EE6  A4D8               	btfss	status,2,c
  8112  002EE8  EF78  F017         	goto	u3881
  8113  002EEC  EF7A  F017         	goto	u3880
  8114  002EF0                     u3881:
  8115  002EF0  EF84  F017         	goto	l5146
  8116  002EF4                     u3880:
  8117  002EF4                     l5142:
  8118                           
  8119                           ; BSR set to: 0
  8120  002EF4  0E00               	movlw	0
  8121  002EF6  6F9F               	movwf	?___fltol& (0+255),b
  8122  002EF8  0E00               	movlw	0
  8123  002EFA  6FA0               	movwf	(?___fltol+1)& (0+255),b
  8124  002EFC  0E00               	movlw	0
  8125  002EFE  6FA1               	movwf	(?___fltol+2)& (0+255),b
  8126  002F00  0E00               	movlw	0
  8127  002F02  6FA2               	movwf	(?___fltol+3)& (0+255),b
  8128  002F04  EFF1  F017         	goto	l1688
  8129  002F08                     l5146:
  8130                           
  8131                           ; BSR set to: 0
  8132  002F08  C09F  F0A3         	movff	___fltol@f1,??___fltol
  8133  002F0C  C0A0  F0A4         	movff	___fltol@f1+1,??___fltol+1
  8134  002F10  C0A1  F0A5         	movff	___fltol@f1+2,??___fltol+2
  8135  002F14  C0A2  F0A6         	movff	___fltol@f1+3,??___fltol+3
  8136  002F18  0E20               	movlw	32
  8137  002F1A  EF94  F017         	goto	u3890
  8138  002F1E                     u3895:
  8139  002F1E  90D8               	bcf	status,0,c
  8140  002F20  33A6               	rrcf	(??___fltol+3)& (0+255),f,b
  8141  002F22  33A5               	rrcf	(??___fltol+2)& (0+255),f,b
  8142  002F24  33A4               	rrcf	(??___fltol+1)& (0+255),f,b
  8143  002F26  33A3               	rrcf	??___fltol& (0+255),f,b
  8144  002F28                     u3890:
  8145  002F28  2EE8               	decfsz	wreg,f,c
  8146  002F2A  EF8F  F017         	goto	u3895
  8147  002F2E  51A3               	movf	??___fltol& (0+255),w,b
  8148  002F30  6E20               	movwf	___fltol@sign1^0,c
  8149  002F32                     
  8150                           ; BSR set to: 0
  8151  002F32  8FA1               	bsf	(___fltol@f1+2)& (0+255),7,b
  8152  002F34                     
  8153                           ; BSR set to: 0
  8154  002F34  0EFF               	movlw	255
  8155  002F36  179F               	andwf	___fltol@f1& (0+255),f,b
  8156  002F38  0EFF               	movlw	255
  8157  002F3A  17A0               	andwf	(___fltol@f1+1)& (0+255),f,b
  8158  002F3C  0EFF               	movlw	255
  8159  002F3E  17A1               	andwf	(___fltol@f1+2)& (0+255),f,b
  8160  002F40  0E00               	movlw	0
  8161  002F42  17A2               	andwf	(___fltol@f1+3)& (0+255),f,b
  8162  002F44                     
  8163                           ; BSR set to: 0
  8164  002F44  0E96               	movlw	150
  8165  002F46  5E21               	subwf	___fltol@exp1^0,f,c
  8166  002F48                     
  8167                           ; BSR set to: 0
  8168  002F48  BE21               	btfsc	___fltol@exp1^0,7,c
  8169  002F4A  EFAB  F017         	goto	u3900
  8170  002F4E  EFA9  F017         	goto	u3901
  8171  002F52                     u3901:
  8172  002F52  EFC1  F017         	goto	l5166
  8173  002F56                     u3900:
  8174  002F56                     
  8175                           ; BSR set to: 0
  8176  002F56  5021               	movf	___fltol@exp1^0,w,c
  8177  002F58  0A80               	xorlw	128
  8178  002F5A  0F97               	addlw	151
  8179  002F5C  B0D8               	btfsc	status,0,c
  8180  002F5E  EFB3  F017         	goto	u3911
  8181  002F62  EFB5  F017         	goto	u3910
  8182  002F66                     u3911:
  8183  002F66  EFB7  F017         	goto	l5162
  8184  002F6A                     u3910:
  8185  002F6A  EF7A  F017         	goto	l5142
  8186  002F6E                     l5162:
  8187                           
  8188                           ; BSR set to: 0
  8189  002F6E  90D8               	bcf	status,0,c
  8190  002F70  33A2               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8191  002F72  33A1               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8192  002F74  33A0               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8193  002F76  339F               	rrcf	___fltol@f1& (0+255),f,b
  8194  002F78                     
  8195                           ; BSR set to: 0
  8196  002F78  3E21               	incfsz	___fltol@exp1^0,f,c
  8197  002F7A  EFB7  F017         	goto	l5162
  8198  002F7E  EFD9  F017         	goto	l5176
  8199  002F82                     l5166:
  8200                           
  8201                           ; BSR set to: 0
  8202  002F82  0E1F               	movlw	31
  8203  002F84  6421               	cpfsgt	___fltol@exp1^0,c
  8204  002F86  EFC7  F017         	goto	u3921
  8205  002F8A  EFC9  F017         	goto	u3920
  8206  002F8E                     u3921:
  8207  002F8E  EFD1  F017         	goto	l5174
  8208  002F92                     u3920:
  8209  002F92  EF7A  F017         	goto	l5142
  8210  002F96                     l5172:
  8211                           
  8212                           ; BSR set to: 0
  8213  002F96  90D8               	bcf	status,0,c
  8214  002F98  379F               	rlcf	___fltol@f1& (0+255),f,b
  8215  002F9A  37A0               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8216  002F9C  37A1               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8217  002F9E  37A2               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8218  002FA0  0621               	decf	___fltol@exp1^0,f,c
  8219  002FA2                     l5174:
  8220                           
  8221                           ; BSR set to: 0
  8222  002FA2  5021               	movf	___fltol@exp1^0,w,c
  8223  002FA4  A4D8               	btfss	status,2,c
  8224  002FA6  EFD7  F017         	goto	u3931
  8225  002FAA  EFD9  F017         	goto	u3930
  8226  002FAE                     u3931:
  8227  002FAE  EFCB  F017         	goto	l5172
  8228  002FB2                     u3930:
  8229  002FB2                     l5176:
  8230                           
  8231                           ; BSR set to: 0
  8232  002FB2  5020               	movf	___fltol@sign1^0,w,c
  8233  002FB4  B4D8               	btfsc	status,2,c
  8234  002FB6  EFDF  F017         	goto	u3941
  8235  002FBA  EFE1  F017         	goto	u3940
  8236  002FBE                     u3941:
  8237  002FBE  EFE9  F017         	goto	l5180
  8238  002FC2                     u3940:
  8239  002FC2                     
  8240                           ; BSR set to: 0
  8241  002FC2  1FA2               	comf	(___fltol@f1+3)& (0+255),f,b
  8242  002FC4  1FA1               	comf	(___fltol@f1+2)& (0+255),f,b
  8243  002FC6  1FA0               	comf	(___fltol@f1+1)& (0+255),f,b
  8244  002FC8  6D9F               	negf	___fltol@f1& (0+255),b
  8245  002FCA  0E00               	movlw	0
  8246  002FCC  23A0               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8247  002FCE  23A1               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8248  002FD0  23A2               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8249  002FD2                     l5180:
  8250                           
  8251                           ; BSR set to: 0
  8252  002FD2  C09F  F09F         	movff	___fltol@f1,?___fltol
  8253  002FD6  C0A0  F0A0         	movff	___fltol@f1+1,?___fltol+1
  8254  002FDA  C0A1  F0A1         	movff	___fltol@f1+2,?___fltol+2
  8255  002FDE  C0A2  F0A2         	movff	___fltol@f1+3,?___fltol+3
  8256  002FE2                     l1688:
  8257                           
  8258                           ; BSR set to: 0
  8259  002FE2  0012               	return		;funcret
  8260  002FE4                     __end_of___fltol:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function ___flmul *****************
  8264 ;; Defined at:
  8265 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  b               4   22[BANK0 ] long 
  8268 ;;  a               4   26[BANK0 ] long 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  prod            4   41[BANK0 ] struct .
  8271 ;;  grs             4   36[BANK0 ] unsigned long 
  8272 ;;  temp            2   45[BANK0 ] struct .
  8273 ;;  bexp            1   40[BANK0 ] unsigned char 
  8274 ;;  aexp            1   35[BANK0 ] unsigned char 
  8275 ;;  sign            1   34[BANK0 ] unsigned char 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  4   22[BANK0 ] unsigned char 
  8278 ;; Registers used:
  8279 ;;		wreg, status,2, status,0, prodl, prodh
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;Total ram usage:       25 bytes
  8290 ;; Hardware stack levels used: 1
  8291 ;; Hardware stack levels required when called: 8
  8292 ;; This function calls:
  8293 ;;		Nothing
  8294 ;; This function is called by:
  8295 ;;		_calcSpeed
  8296 ;;		_calcMotorPow
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text36
  8301  001504                     __ptext36:
  8302                           	callstack 0
  8303  001504                     ___flmul:
  8304                           	callstack 20
  8305  001504  0100               	movlb	0	; () banked
  8306  001506  5179               	movf	(___flmul@b+3)& (0+255),w,b
  8307  001508  0B80               	andlw	128
  8308  00150A  6F82               	movwf	___flmul@sign& (0+255),b
  8309  00150C  5179               	movf	(___flmul@b+3)& (0+255),w,b
  8310  00150E  2579               	addwf	(___flmul@b+3)& (0+255),w,b
  8311  001510  6F88               	movwf	___flmul@bexp& (0+255),b
  8312  001512                     
  8313                           ; BSR set to: 0
  8314  001512  AF78               	btfss	(___flmul@b+2)& (0+255),7,b
  8315  001514  EF8E  F00A         	goto	u5611
  8316  001518  EF90  F00A         	goto	u5610
  8317  00151C                     u5611:
  8318  00151C  EF91  F00A         	goto	l6524
  8319  001520                     u5610:
  8320  001520                     
  8321                           ; BSR set to: 0
  8322  001520  8188               	bsf	___flmul@bexp& (0+255),0,b
  8323  001522                     l6524:
  8324                           
  8325                           ; BSR set to: 0
  8326  001522  5188               	movf	___flmul@bexp& (0+255),w,b
  8327  001524  B4D8               	btfsc	status,2,c
  8328  001526  EF97  F00A         	goto	u5621
  8329  00152A  EF99  F00A         	goto	u5620
  8330  00152E                     u5621:
  8331  00152E  EFAC  F00A         	goto	l6532
  8332  001532                     u5620:
  8333  001532                     
  8334                           ; BSR set to: 0
  8335  001532  2988               	incf	___flmul@bexp& (0+255),w,b
  8336  001534  A4D8               	btfss	status,2,c
  8337  001536  EF9F  F00A         	goto	u5631
  8338  00153A  EFA1  F00A         	goto	u5630
  8339  00153E                     u5631:
  8340  00153E  EFA9  F00A         	goto	l6530
  8341  001542                     u5630:
  8342  001542                     
  8343                           ; BSR set to: 0
  8344  001542  0E00               	movlw	0
  8345  001544  6F76               	movwf	___flmul@b& (0+255),b
  8346  001546  0E00               	movlw	0
  8347  001548  6F77               	movwf	(___flmul@b+1)& (0+255),b
  8348  00154A  0E00               	movlw	0
  8349  00154C  6F78               	movwf	(___flmul@b+2)& (0+255),b
  8350  00154E  0E00               	movlw	0
  8351  001550  6F79               	movwf	(___flmul@b+3)& (0+255),b
  8352  001552                     l6530:
  8353                           
  8354                           ; BSR set to: 0
  8355  001552  8F78               	bsf	(___flmul@b+2)& (0+255),7,b
  8356  001554  EFB4  F00A         	goto	l6534
  8357  001558                     l6532:
  8358                           
  8359                           ; BSR set to: 0
  8360  001558  0E00               	movlw	0
  8361  00155A  6F76               	movwf	___flmul@b& (0+255),b
  8362  00155C  0E00               	movlw	0
  8363  00155E  6F77               	movwf	(___flmul@b+1)& (0+255),b
  8364  001560  0E00               	movlw	0
  8365  001562  6F78               	movwf	(___flmul@b+2)& (0+255),b
  8366  001564  0E00               	movlw	0
  8367  001566  6F79               	movwf	(___flmul@b+3)& (0+255),b
  8368  001568                     l6534:
  8369                           
  8370                           ; BSR set to: 0
  8371  001568  517D               	movf	(___flmul@a+3)& (0+255),w,b
  8372  00156A  0B80               	andlw	128
  8373  00156C  1B82               	xorwf	___flmul@sign& (0+255),f,b
  8374  00156E                     
  8375                           ; BSR set to: 0
  8376  00156E  517D               	movf	(___flmul@a+3)& (0+255),w,b
  8377  001570  257D               	addwf	(___flmul@a+3)& (0+255),w,b
  8378  001572  6F83               	movwf	___flmul@aexp& (0+255),b
  8379  001574                     
  8380                           ; BSR set to: 0
  8381  001574  AF7C               	btfss	(___flmul@a+2)& (0+255),7,b
  8382  001576  EFBF  F00A         	goto	u5641
  8383  00157A  EFC1  F00A         	goto	u5640
  8384  00157E                     u5641:
  8385  00157E  EFC2  F00A         	goto	l6542
  8386  001582                     u5640:
  8387  001582                     
  8388                           ; BSR set to: 0
  8389  001582  8183               	bsf	___flmul@aexp& (0+255),0,b
  8390  001584                     l6542:
  8391                           
  8392                           ; BSR set to: 0
  8393  001584  5183               	movf	___flmul@aexp& (0+255),w,b
  8394  001586  B4D8               	btfsc	status,2,c
  8395  001588  EFC8  F00A         	goto	u5651
  8396  00158C  EFCA  F00A         	goto	u5650
  8397  001590                     u5651:
  8398  001590  EFDD  F00A         	goto	l6550
  8399  001594                     u5650:
  8400  001594                     
  8401                           ; BSR set to: 0
  8402  001594  2983               	incf	___flmul@aexp& (0+255),w,b
  8403  001596  A4D8               	btfss	status,2,c
  8404  001598  EFD0  F00A         	goto	u5661
  8405  00159C  EFD2  F00A         	goto	u5660
  8406  0015A0                     u5661:
  8407  0015A0  EFDA  F00A         	goto	l6548
  8408  0015A4                     u5660:
  8409  0015A4                     
  8410                           ; BSR set to: 0
  8411  0015A4  0E00               	movlw	0
  8412  0015A6  6F7A               	movwf	___flmul@a& (0+255),b
  8413  0015A8  0E00               	movlw	0
  8414  0015AA  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  8415  0015AC  0E00               	movlw	0
  8416  0015AE  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  8417  0015B0  0E00               	movlw	0
  8418  0015B2  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  8419  0015B4                     l6548:
  8420                           
  8421                           ; BSR set to: 0
  8422  0015B4  8F7C               	bsf	(___flmul@a+2)& (0+255),7,b
  8423  0015B6  EFE5  F00A         	goto	l2005
  8424  0015BA                     l6550:
  8425                           
  8426                           ; BSR set to: 0
  8427  0015BA  0E00               	movlw	0
  8428  0015BC  6F7A               	movwf	___flmul@a& (0+255),b
  8429  0015BE  0E00               	movlw	0
  8430  0015C0  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  8431  0015C2  0E00               	movlw	0
  8432  0015C4  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  8433  0015C6  0E00               	movlw	0
  8434  0015C8  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  8435  0015CA                     l2005:
  8436                           
  8437                           ; BSR set to: 0
  8438  0015CA  5183               	movf	___flmul@aexp& (0+255),w,b
  8439  0015CC  B4D8               	btfsc	status,2,c
  8440  0015CE  EFEB  F00A         	goto	u5671
  8441  0015D2  EFED  F00A         	goto	u5670
  8442  0015D6                     u5671:
  8443  0015D6  EFF5  F00A         	goto	l6554
  8444  0015DA                     u5670:
  8445  0015DA                     
  8446                           ; BSR set to: 0
  8447  0015DA  5188               	movf	___flmul@bexp& (0+255),w,b
  8448  0015DC  A4D8               	btfss	status,2,c
  8449  0015DE  EFF3  F00A         	goto	u5681
  8450  0015E2  EFF5  F00A         	goto	u5680
  8451  0015E6                     u5681:
  8452  0015E6  EFFF  F00A         	goto	l6558
  8453  0015EA                     u5680:
  8454  0015EA                     l6554:
  8455                           
  8456                           ; BSR set to: 0
  8457  0015EA  0E00               	movlw	0
  8458  0015EC  6F76               	movwf	?___flmul& (0+255),b
  8459  0015EE  0E00               	movlw	0
  8460  0015F0  6F77               	movwf	(?___flmul+1)& (0+255),b
  8461  0015F2  0E00               	movlw	0
  8462  0015F4  6F78               	movwf	(?___flmul+2)& (0+255),b
  8463  0015F6  0E00               	movlw	0
  8464  0015F8  6F79               	movwf	(?___flmul+3)& (0+255),b
  8465  0015FA  EFA9  F00C         	goto	l2009
  8466  0015FE                     l6558:
  8467                           
  8468                           ; BSR set to: 0
  8469  0015FE  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8470  001600  0376               	mulwf	___flmul@b& (0+255),b
  8471  001602  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8472  001608  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8473  00160E                     
  8474                           ; BSR set to: 0
  8475  00160E  518D               	movf	___flmul@temp& (0+255),w,b
  8476  001610  6F84               	movwf	___flmul@grs& (0+255),b
  8477  001612  6B85               	clrf	(___flmul@grs+1)& (0+255),b
  8478  001614  6B86               	clrf	(___flmul@grs+2)& (0+255),b
  8479  001616  6B87               	clrf	(___flmul@grs+3)& (0+255),b
  8480  001618                     
  8481                           ; BSR set to: 0
  8482  001618  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8483  00161A  6F89               	movwf	___flmul@prod& (0+255),b
  8484  00161C  6B8A               	clrf	(___flmul@prod+1)& (0+255),b
  8485  00161E  6B8B               	clrf	(___flmul@prod+2)& (0+255),b
  8486  001620  6B8C               	clrf	(___flmul@prod+3)& (0+255),b
  8487  001622  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8488  001624  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8489  001626  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8490  00162C  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8491  001632                     
  8492                           ; BSR set to: 0
  8493  001632  518D               	movf	___flmul@temp& (0+255),w,b
  8494  001634  2784               	addwf	___flmul@grs& (0+255),f,b
  8495  001636  0E00               	movlw	0
  8496  001638  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8497  00163A  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8498  00163C  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8499  00163E                     
  8500                           ; BSR set to: 0
  8501  00163E  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8502  001640  2789               	addwf	___flmul@prod& (0+255),f,b
  8503  001642  0E00               	movlw	0
  8504  001644  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8505  001646  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8506  001648  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8507  00164A  517A               	movf	___flmul@a& (0+255),w,b
  8508  00164C  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8509  00164E  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8510  001654  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8511  00165A                     
  8512                           ; BSR set to: 0
  8513  00165A  518D               	movf	___flmul@temp& (0+255),w,b
  8514  00165C  2784               	addwf	___flmul@grs& (0+255),f,b
  8515  00165E  0E00               	movlw	0
  8516  001660  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8517  001662  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8518  001664  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8519  001666                     
  8520                           ; BSR set to: 0
  8521  001666  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8522  001668  2789               	addwf	___flmul@prod& (0+255),f,b
  8523  00166A  0E00               	movlw	0
  8524  00166C  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8525  00166E  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8526  001670  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8527  001672                     
  8528                           ; BSR set to: 0
  8529  001672  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8530  001676  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8531  00167A  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8532  00167E  6B84               	clrf	___flmul@grs& (0+255),b
  8533  001680                     
  8534                           ; BSR set to: 0
  8535  001680  517A               	movf	___flmul@a& (0+255),w,b
  8536  001682  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8537  001684  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8538  00168A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8539  001690                     
  8540                           ; BSR set to: 0
  8541  001690  518D               	movf	___flmul@temp& (0+255),w,b
  8542  001692  2784               	addwf	___flmul@grs& (0+255),f,b
  8543  001694  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8544  001696  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8545  001698  0E00               	movlw	0
  8546  00169A  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8547  00169C  0E00               	movlw	0
  8548  00169E  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8549  0016A0                     
  8550                           ; BSR set to: 0
  8551  0016A0  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8552  0016A2  0376               	mulwf	___flmul@b& (0+255),b
  8553  0016A4  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8554  0016AA  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8555  0016B0                     
  8556                           ; BSR set to: 0
  8557  0016B0  518D               	movf	___flmul@temp& (0+255),w,b
  8558  0016B2  2784               	addwf	___flmul@grs& (0+255),f,b
  8559  0016B4  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8560  0016B6  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8561  0016B8  0E00               	movlw	0
  8562  0016BA  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8563  0016BC  0E00               	movlw	0
  8564  0016BE  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8565  0016C0                     
  8566                           ; BSR set to: 0
  8567  0016C0  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8568  0016C4  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8569  0016C8  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8570  0016CC  6B84               	clrf	___flmul@grs& (0+255),b
  8571  0016CE  517A               	movf	___flmul@a& (0+255),w,b
  8572  0016D0  0376               	mulwf	___flmul@b& (0+255),b
  8573  0016D2  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8574  0016D8  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8575  0016DE                     
  8576                           ; BSR set to: 0
  8577  0016DE  518D               	movf	___flmul@temp& (0+255),w,b
  8578  0016E0  2784               	addwf	___flmul@grs& (0+255),f,b
  8579  0016E2  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8580  0016E4  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8581  0016E6  0E00               	movlw	0
  8582  0016E8  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8583  0016EA  0E00               	movlw	0
  8584  0016EC  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8585  0016EE                     
  8586                           ; BSR set to: 0
  8587  0016EE  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8588  0016F0  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8589  0016F2  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8590  0016F8  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8591  0016FE  518D               	movf	___flmul@temp& (0+255),w,b
  8592  001700  2789               	addwf	___flmul@prod& (0+255),f,b
  8593  001702  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8594  001704  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8595  001706  0E00               	movlw	0
  8596  001708  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8597  00170A  0E00               	movlw	0
  8598  00170C  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8599  00170E                     
  8600                           ; BSR set to: 0
  8601  00170E  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8602  001710  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8603  001712  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8604  001718  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8605  00171E                     
  8606                           ; BSR set to: 0
  8607  00171E  518D               	movf	___flmul@temp& (0+255),w,b
  8608  001720  2789               	addwf	___flmul@prod& (0+255),f,b
  8609  001722  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8610  001724  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8611  001726  0E00               	movlw	0
  8612  001728  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8613  00172A  0E00               	movlw	0
  8614  00172C  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8615  00172E  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8616  001730  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8617  001732  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8618  001738  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8619  00173E                     
  8620                           ; BSR set to: 0
  8621  00173E  518D               	movf	___flmul@temp& (0+255),w,b
  8622  001740  6F7E               	movwf	??___flmul& (0+255),b
  8623  001742  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8624  001744  6F7F               	movwf	(??___flmul+1)& (0+255),b
  8625  001746  6B80               	clrf	(??___flmul+2)& (0+255),b
  8626  001748  6B81               	clrf	(??___flmul+3)& (0+255),b
  8627  00174A  C080  F081         	movff	??___flmul+2,??___flmul+3
  8628  00174E  C07F  F080         	movff	??___flmul+1,??___flmul+2
  8629  001752  C07E  F07F         	movff	??___flmul,??___flmul+1
  8630  001756  6B7E               	clrf	??___flmul& (0+255),b
  8631  001758  517E               	movf	??___flmul& (0+255),w,b
  8632  00175A  2789               	addwf	___flmul@prod& (0+255),f,b
  8633  00175C  517F               	movf	(??___flmul+1)& (0+255),w,b
  8634  00175E  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8635  001760  5180               	movf	(??___flmul+2)& (0+255),w,b
  8636  001762  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8637  001764  5181               	movf	(??___flmul+3)& (0+255),w,b
  8638  001766  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8639  001768                     
  8640                           ; BSR set to: 0
  8641  001768  C084  F07E         	movff	___flmul@grs,??___flmul
  8642  00176C  C085  F07F         	movff	___flmul@grs+1,??___flmul+1
  8643  001770  C086  F080         	movff	___flmul@grs+2,??___flmul+2
  8644  001774  C087  F081         	movff	___flmul@grs+3,??___flmul+3
  8645  001778  0E19               	movlw	25
  8646  00177A  EFC4  F00B         	goto	u5690
  8647  00177E                     u5695:
  8648  00177E  90D8               	bcf	status,0,c
  8649  001780  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  8650  001782  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  8651  001784  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  8652  001786  337E               	rrcf	??___flmul& (0+255),f,b
  8653  001788                     u5690:
  8654  001788  2EE8               	decfsz	wreg,f,c
  8655  00178A  EFBF  F00B         	goto	u5695
  8656  00178E  517E               	movf	??___flmul& (0+255),w,b
  8657  001790  2789               	addwf	___flmul@prod& (0+255),f,b
  8658  001792  517F               	movf	(??___flmul+1)& (0+255),w,b
  8659  001794  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8660  001796  5180               	movf	(??___flmul+2)& (0+255),w,b
  8661  001798  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8662  00179A  5181               	movf	(??___flmul+3)& (0+255),w,b
  8663  00179C  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8664  00179E                     
  8665                           ; BSR set to: 0
  8666  00179E  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8667  0017A2  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8668  0017A6  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8669  0017AA  6B84               	clrf	___flmul@grs& (0+255),b
  8670  0017AC                     
  8671                           ; BSR set to: 0
  8672  0017AC  5183               	movf	___flmul@aexp& (0+255),w,b
  8673  0017AE  C088  F07E         	movff	___flmul@bexp,??___flmul
  8674  0017B2  6B7F               	clrf	(??___flmul+1)& (0+255),b
  8675  0017B4  277E               	addwf	??___flmul& (0+255),f,b
  8676  0017B6  0E00               	movlw	0
  8677  0017B8  237F               	addwfc	(??___flmul+1)& (0+255),f,b
  8678  0017BA  0E82               	movlw	130
  8679  0017BC  257E               	addwf	??___flmul& (0+255),w,b
  8680  0017BE  6F8D               	movwf	___flmul@temp& (0+255),b
  8681  0017C0  0EFF               	movlw	255
  8682  0017C2  217F               	addwfc	(??___flmul+1)& (0+255),w,b
  8683  0017C4  6F8E               	movwf	(___flmul@temp+1)& (0+255),b
  8684  0017C6  EFFA  F00B         	goto	l6606
  8685  0017CA                     l6600:
  8686                           
  8687                           ; BSR set to: 0
  8688  0017CA  90D8               	bcf	status,0,c
  8689  0017CC  3789               	rlcf	___flmul@prod& (0+255),f,b
  8690  0017CE  378A               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8691  0017D0  378B               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8692  0017D2  378C               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8693  0017D4                     
  8694                           ; BSR set to: 0
  8695  0017D4  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  8696  0017D6  EFEF  F00B         	goto	u5701
  8697  0017DA  EFF1  F00B         	goto	u5700
  8698  0017DE                     u5701:
  8699  0017DE  EFF2  F00B         	goto	l2012
  8700  0017E2                     u5700:
  8701  0017E2                     
  8702                           ; BSR set to: 0
  8703  0017E2  8189               	bsf	___flmul@prod& (0+255),0,b
  8704  0017E4                     l2012:
  8705                           
  8706                           ; BSR set to: 0
  8707  0017E4  90D8               	bcf	status,0,c
  8708  0017E6  3784               	rlcf	___flmul@grs& (0+255),f,b
  8709  0017E8  3785               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8710  0017EA  3786               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8711  0017EC  3787               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8712  0017EE  078D               	decf	___flmul@temp& (0+255),f,b
  8713  0017F0  A0D8               	btfss	status,0,c
  8714  0017F2  078E               	decf	(___flmul@temp+1)& (0+255),f,b
  8715  0017F4                     l6606:
  8716                           
  8717                           ; BSR set to: 0
  8718  0017F4  AF8B               	btfss	(___flmul@prod+2)& (0+255),7,b
  8719  0017F6  EFFF  F00B         	goto	u5711
  8720  0017FA  EF01  F00C         	goto	u5710
  8721  0017FE                     u5711:
  8722  0017FE  EFE5  F00B         	goto	l6600
  8723  001802                     u5710:
  8724  001802                     
  8725                           ; BSR set to: 0
  8726  001802  0E00               	movlw	0
  8727  001804  6F83               	movwf	___flmul@aexp& (0+255),b
  8728  001806                     
  8729                           ; BSR set to: 0
  8730  001806  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  8731  001808  EF08  F00C         	goto	u5721
  8732  00180C  EF0A  F00C         	goto	u5720
  8733  001810                     u5721:
  8734  001810  EF2E  F00C         	goto	l2014
  8735  001814                     u5720:
  8736  001814                     
  8737                           ; BSR set to: 0
  8738  001814  0EFF               	movlw	255
  8739  001816  1584               	andwf	___flmul@grs& (0+255),w,b
  8740  001818  6F7E               	movwf	??___flmul& (0+255),b
  8741  00181A  0EFF               	movlw	255
  8742  00181C  1585               	andwf	(___flmul@grs+1)& (0+255),w,b
  8743  00181E  6F7F               	movwf	(??___flmul+1)& (0+255),b
  8744  001820  0EFF               	movlw	255
  8745  001822  1586               	andwf	(___flmul@grs+2)& (0+255),w,b
  8746  001824  6F80               	movwf	(??___flmul+2)& (0+255),b
  8747  001826  0E7F               	movlw	127
  8748  001828  1587               	andwf	(___flmul@grs+3)& (0+255),w,b
  8749  00182A  6F81               	movwf	(??___flmul+3)& (0+255),b
  8750  00182C  517E               	movf	??___flmul& (0+255),w,b
  8751  00182E  117F               	iorwf	(??___flmul+1)& (0+255),w,b
  8752  001830  1180               	iorwf	(??___flmul+2)& (0+255),w,b
  8753  001832  1181               	iorwf	(??___flmul+3)& (0+255),w,b
  8754  001834  B4D8               	btfsc	status,2,c
  8755  001836  EF1F  F00C         	goto	u5731
  8756  00183A  EF21  F00C         	goto	u5730
  8757  00183E                     u5731:
  8758  00183E  EF25  F00C         	goto	l2015
  8759  001842                     u5730:
  8760  001842                     l6614:
  8761                           
  8762                           ; BSR set to: 0
  8763  001842  0E01               	movlw	1
  8764  001844  6F83               	movwf	___flmul@aexp& (0+255),b
  8765  001846  EF2E  F00C         	goto	l2014
  8766  00184A                     l2015:
  8767                           
  8768                           ; BSR set to: 0
  8769  00184A  A189               	btfss	___flmul@prod& (0+255),0,b
  8770  00184C  EF2A  F00C         	goto	u5741
  8771  001850  EF2C  F00C         	goto	u5740
  8772  001854                     u5741:
  8773  001854  EF2E  F00C         	goto	l2014
  8774  001858                     u5740:
  8775  001858  EF21  F00C         	goto	l6614
  8776  00185C                     l2014:
  8777                           
  8778                           ; BSR set to: 0
  8779  00185C  5183               	movf	___flmul@aexp& (0+255),w,b
  8780  00185E  B4D8               	btfsc	status,2,c
  8781  001860  EF34  F00C         	goto	u5751
  8782  001864  EF36  F00C         	goto	u5750
  8783  001868                     u5751:
  8784  001868  EF5A  F00C         	goto	l6626
  8785  00186C                     u5750:
  8786  00186C                     
  8787                           ; BSR set to: 0
  8788  00186C  0E01               	movlw	1
  8789  00186E  2789               	addwf	___flmul@prod& (0+255),f,b
  8790  001870  0E00               	movlw	0
  8791  001872  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8792  001874  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8793  001876  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8794  001878                     
  8795                           ; BSR set to: 0
  8796  001878  A18C               	btfss	(___flmul@prod+3)& (0+255),0,b
  8797  00187A  EF41  F00C         	goto	u5761
  8798  00187E  EF43  F00C         	goto	u5760
  8799  001882                     u5761:
  8800  001882  EF5A  F00C         	goto	l6626
  8801  001886                     u5760:
  8802  001886                     
  8803                           ; BSR set to: 0
  8804  001886  C089  F07E         	movff	___flmul@prod,??___flmul
  8805  00188A  C08A  F07F         	movff	___flmul@prod+1,??___flmul+1
  8806  00188E  C08B  F080         	movff	___flmul@prod+2,??___flmul+2
  8807  001892  C08C  F081         	movff	___flmul@prod+3,??___flmul+3
  8808  001896  3581               	rlcf	(??___flmul+3)& (0+255),w,b
  8809  001898  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  8810  00189A  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  8811  00189C  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  8812  00189E  337E               	rrcf	??___flmul& (0+255),f,b
  8813  0018A0  C07E  F089         	movff	??___flmul,___flmul@prod
  8814  0018A4  C07F  F08A         	movff	??___flmul+1,___flmul@prod+1
  8815  0018A8  C080  F08B         	movff	??___flmul+2,___flmul@prod+2
  8816  0018AC  C081  F08C         	movff	??___flmul+3,___flmul@prod+3
  8817  0018B0                     
  8818                           ; BSR set to: 0
  8819  0018B0  4B8D               	infsnz	___flmul@temp& (0+255),f,b
  8820  0018B2  2B8E               	incf	(___flmul@temp+1)& (0+255),f,b
  8821  0018B4                     l6626:
  8822                           
  8823                           ; BSR set to: 0
  8824  0018B4  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8825  0018B6  EF65  F00C         	goto	u5771
  8826  0018BA  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8827  0018BC  E108               	bnz	u5770
  8828  0018BE  298D               	incf	___flmul@temp& (0+255),w,b
  8829  0018C0  A0D8               	btfss	status,0,c
  8830  0018C2  EF65  F00C         	goto	u5771
  8831  0018C6  EF67  F00C         	goto	u5770
  8832  0018CA                     u5771:
  8833  0018CA  EF71  F00C         	goto	l6630
  8834  0018CE                     u5770:
  8835  0018CE                     
  8836                           ; BSR set to: 0
  8837  0018CE  0E00               	movlw	0
  8838  0018D0  6F89               	movwf	___flmul@prod& (0+255),b
  8839  0018D2  0E00               	movlw	0
  8840  0018D4  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8841  0018D6  0E80               	movlw	128
  8842  0018D8  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8843  0018DA  0E7F               	movlw	127
  8844  0018DC  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8845  0018DE  EF9F  F00C         	goto	l6642
  8846  0018E2                     l6630:
  8847                           
  8848                           ; BSR set to: 0
  8849  0018E2  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8850  0018E4  EF7E  F00C         	goto	u5780
  8851  0018E8  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8852  0018EA  E106               	bnz	u5781
  8853  0018EC  058D               	decf	___flmul@temp& (0+255),w,b
  8854  0018EE  B0D8               	btfsc	status,0,c
  8855  0018F0  EF7C  F00C         	goto	u5781
  8856  0018F4  EF7E  F00C         	goto	u5780
  8857  0018F8                     u5781:
  8858  0018F8  EF8A  F00C         	goto	l2022
  8859  0018FC                     u5780:
  8860  0018FC                     
  8861                           ; BSR set to: 0
  8862  0018FC  0E00               	movlw	0
  8863  0018FE  6F89               	movwf	___flmul@prod& (0+255),b
  8864  001900  0E00               	movlw	0
  8865  001902  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8866  001904  0E00               	movlw	0
  8867  001906  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8868  001908  0E00               	movlw	0
  8869  00190A  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8870  00190C  0E00               	movlw	0
  8871  00190E  6F82               	movwf	___flmul@sign& (0+255),b
  8872  001910  EF9F  F00C         	goto	l6642
  8873  001914                     l2022:
  8874                           
  8875                           ; BSR set to: 0
  8876  001914  C08D  F088         	movff	___flmul@temp,___flmul@bexp
  8877  001918                     
  8878                           ; BSR set to: 0
  8879  001918  0EFF               	movlw	255
  8880  00191A  1789               	andwf	___flmul@prod& (0+255),f,b
  8881  00191C  0EFF               	movlw	255
  8882  00191E  178A               	andwf	(___flmul@prod+1)& (0+255),f,b
  8883  001920  0E7F               	movlw	127
  8884  001922  178B               	andwf	(___flmul@prod+2)& (0+255),f,b
  8885  001924  0E00               	movlw	0
  8886  001926  178C               	andwf	(___flmul@prod+3)& (0+255),f,b
  8887  001928                     
  8888                           ; BSR set to: 0
  8889  001928  A188               	btfss	___flmul@bexp& (0+255),0,b
  8890  00192A  EF99  F00C         	goto	u5791
  8891  00192E  EF9B  F00C         	goto	u5790
  8892  001932                     u5791:
  8893  001932  EF9C  F00C         	goto	l6640
  8894  001936                     u5790:
  8895  001936                     
  8896                           ; BSR set to: 0
  8897  001936  8F8B               	bsf	(___flmul@prod+2)& (0+255),7,b
  8898  001938                     l6640:
  8899                           
  8900                           ; BSR set to: 0
  8901  001938  90D8               	bcf	status,0,c
  8902  00193A  3188               	rrcf	___flmul@bexp& (0+255),w,b
  8903  00193C  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8904  00193E                     l6642:
  8905                           
  8906                           ; BSR set to: 0
  8907  00193E  5182               	movf	___flmul@sign& (0+255),w,b
  8908  001940  138C               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8909  001942                     
  8910                           ; BSR set to: 0
  8911  001942  C089  F076         	movff	___flmul@prod,?___flmul
  8912  001946  C08A  F077         	movff	___flmul@prod+1,?___flmul+1
  8913  00194A  C08B  F078         	movff	___flmul@prod+2,?___flmul+2
  8914  00194E  C08C  F079         	movff	___flmul@prod+3,?___flmul+3
  8915  001952                     l2009:
  8916                           
  8917                           ; BSR set to: 0
  8918  001952  0012               	return		;funcret
  8919  001954                     __end_of___flmul:
  8920                           	callstack 0
  8921                           
  8922 ;; *************** function ___awdiv *****************
  8923 ;; Defined at:
  8924 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;  dividend        2    0[BANK0 ] int 
  8927 ;;  divisor         2    2[BANK0 ] int 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  quotient        2    6[BANK0 ] int 
  8930 ;;  sign            1    5[BANK0 ] unsigned char 
  8931 ;;  counter         1    4[BANK0 ] unsigned char 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  2    0[BANK0 ] int 
  8934 ;; Registers used:
  8935 ;;		wreg, status,2, status,0
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8941 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;Total ram usage:        8 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 8
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_calcMotorPow
  8952 ;;		_setSteering
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text37
  8957  003526                     __ptext37:
  8958                           	callstack 0
  8959  003526                     ___awdiv:
  8960                           	callstack 19
  8961  003526  0E00               	movlw	0
  8962  003528  0100               	movlb	0	; () banked
  8963  00352A  6F65               	movwf	___awdiv@sign& (0+255),b
  8964  00352C                     
  8965                           ; BSR set to: 0
  8966  00352C  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  8967  00352E  EF9D  F01A         	goto	u5220
  8968  003532  EF9B  F01A         	goto	u5221
  8969  003536                     u5221:
  8970  003536  EFA3  F01A         	goto	l6262
  8971  00353A                     u5220:
  8972  00353A                     
  8973                           ; BSR set to: 0
  8974  00353A  6D62               	negf	___awdiv@divisor& (0+255),b
  8975  00353C  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8976  00353E  B0D8               	btfsc	status,0,c
  8977  003540  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8978  003542                     
  8979                           ; BSR set to: 0
  8980  003542  0E01               	movlw	1
  8981  003544  6F65               	movwf	___awdiv@sign& (0+255),b
  8982  003546                     l6262:
  8983                           
  8984                           ; BSR set to: 0
  8985  003546  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  8986  003548  EFAA  F01A         	goto	u5230
  8987  00354C  EFA8  F01A         	goto	u5231
  8988  003550                     u5231:
  8989  003550  EFB0  F01A         	goto	l6268
  8990  003554                     u5230:
  8991  003554                     
  8992                           ; BSR set to: 0
  8993  003554  6D60               	negf	___awdiv@dividend& (0+255),b
  8994  003556  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8995  003558  B0D8               	btfsc	status,0,c
  8996  00355A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8997  00355C                     
  8998                           ; BSR set to: 0
  8999  00355C  0E01               	movlw	1
  9000  00355E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  9001  003560                     l6268:
  9002                           
  9003                           ; BSR set to: 0
  9004  003560  0E00               	movlw	0
  9005  003562  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  9006  003564  0E00               	movlw	0
  9007  003566  6F66               	movwf	___awdiv@quotient& (0+255),b
  9008  003568                     
  9009                           ; BSR set to: 0
  9010  003568  5162               	movf	___awdiv@divisor& (0+255),w,b
  9011  00356A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9012  00356C  B4D8               	btfsc	status,2,c
  9013  00356E  EFBB  F01A         	goto	u5241
  9014  003572  EFBD  F01A         	goto	u5240
  9015  003576                     u5241:
  9016  003576  EFE5  F01A         	goto	l6290
  9017  00357A                     u5240:
  9018  00357A                     
  9019                           ; BSR set to: 0
  9020  00357A  0E01               	movlw	1
  9021  00357C  6F64               	movwf	___awdiv@counter& (0+255),b
  9022  00357E  EFC5  F01A         	goto	l6276
  9023  003582                     l6274:
  9024                           
  9025                           ; BSR set to: 0
  9026  003582  90D8               	bcf	status,0,c
  9027  003584  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  9028  003586  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9029  003588  2B64               	incf	___awdiv@counter& (0+255),f,b
  9030  00358A                     l6276:
  9031                           
  9032                           ; BSR set to: 0
  9033  00358A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9034  00358C  EFCA  F01A         	goto	u5251
  9035  003590  EFCC  F01A         	goto	u5250
  9036  003594                     u5251:
  9037  003594  EFC1  F01A         	goto	l6274
  9038  003598                     u5250:
  9039  003598                     l6278:
  9040                           
  9041                           ; BSR set to: 0
  9042  003598  90D8               	bcf	status,0,c
  9043  00359A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  9044  00359C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9045  00359E                     
  9046                           ; BSR set to: 0
  9047  00359E  5162               	movf	___awdiv@divisor& (0+255),w,b
  9048  0035A0  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  9049  0035A2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9050  0035A4  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9051  0035A6  A0D8               	btfss	status,0,c
  9052  0035A8  EFD8  F01A         	goto	u5261
  9053  0035AC  EFDA  F01A         	goto	u5260
  9054  0035B0                     u5261:
  9055  0035B0  EFDF  F01A         	goto	l6286
  9056  0035B4                     u5260:
  9057  0035B4                     
  9058                           ; BSR set to: 0
  9059  0035B4  5162               	movf	___awdiv@divisor& (0+255),w,b
  9060  0035B6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  9061  0035B8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9062  0035BA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9063  0035BC                     
  9064                           ; BSR set to: 0
  9065  0035BC  8166               	bsf	___awdiv@quotient& (0+255),0,b
  9066  0035BE                     l6286:
  9067                           
  9068                           ; BSR set to: 0
  9069  0035BE  90D8               	bcf	status,0,c
  9070  0035C0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9071  0035C2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  9072  0035C4                     
  9073                           ; BSR set to: 0
  9074  0035C4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  9075  0035C6  EFCC  F01A         	goto	l6278
  9076  0035CA                     l6290:
  9077                           
  9078                           ; BSR set to: 0
  9079  0035CA  5165               	movf	___awdiv@sign& (0+255),w,b
  9080  0035CC  B4D8               	btfsc	status,2,c
  9081  0035CE  EFEB  F01A         	goto	u5271
  9082  0035D2  EFED  F01A         	goto	u5270
  9083  0035D6                     u5271:
  9084  0035D6  EFF1  F01A         	goto	l6294
  9085  0035DA                     u5270:
  9086  0035DA                     
  9087                           ; BSR set to: 0
  9088  0035DA  6D66               	negf	___awdiv@quotient& (0+255),b
  9089  0035DC  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9090  0035DE  B0D8               	btfsc	status,0,c
  9091  0035E0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9092  0035E2                     l6294:
  9093                           
  9094                           ; BSR set to: 0
  9095  0035E2  C066  F060         	movff	___awdiv@quotient,?___awdiv
  9096  0035E6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  9097  0035EA                     
  9098                           ; BSR set to: 0
  9099  0035EA  0012               	return		;funcret
  9100  0035EC                     __end_of___awdiv:
  9101                           	callstack 0
  9102                           
  9103 ;; *************** function _SYSTEM_Initialize *****************
  9104 ;; Defined at:
  9105 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      void 
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0, cstack
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used: 1
  9125 ;; Hardware stack levels required when called: 10
  9126 ;; This function calls:
  9127 ;;		_ADCC_Initialize
  9128 ;;		_CCP3_Initialize
  9129 ;;		_CCP4_Initialize
  9130 ;;		_CLC3_Initialize
  9131 ;;		_INTERRUPT_Initialize
  9132 ;;		_OSCILLATOR_Initialize
  9133 ;;		_PIN_MANAGER_Initialize
  9134 ;;		_PMD_Initialize
  9135 ;;		_PWM5_Initialize
  9136 ;;		_PWM6_Initialize
  9137 ;;		_PWM7_Initialize
  9138 ;;		_PWM8_Initialize
  9139 ;;		_SMT1_Initialize
  9140 ;;		_TMR2_Initialize
  9141 ;;		_TMR3_Initialize
  9142 ;;		_TMR4_Initialize
  9143 ;;		_TMR5_Initialize
  9144 ;;		_UART1_Initialize
  9145 ;; This function is called by:
  9146 ;;		_main
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           	psect	text38
  9151  003CEC                     __ptext38:
  9152                           	callstack 0
  9153  003CEC                     _SYSTEM_Initialize:
  9154                           	callstack 20
  9155  003CEC                     
  9156                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  9157  003CEC  EC04  F01E         	call	_INTERRUPT_Initialize	;wreg free
  9158                           
  9159                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  9160  003CF0  EC51  F021         	call	_PMD_Initialize	;wreg free
  9161                           
  9162                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9163  003CF4  ECCA  F019         	call	_PIN_MANAGER_Initialize	;wreg free
  9164                           
  9165                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9166  003CF8  ECD1  F021         	call	_OSCILLATOR_Initialize	;wreg free
  9167  003CFC                     
  9168                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  9169  003CFC  EC90  F020         	call	_CCP3_Initialize	;wreg free
  9170  003D00                     
  9171                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  9172  003D00  EC2F  F01D         	call	_ADCC_Initialize	;wreg free
  9173                           
  9174                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  9175  003D04  ECBE  F020         	call	_TMR4_Initialize	;wreg free
  9176  003D08                     
  9177                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  9178  003D08  EC31  F020         	call	_SMT1_Initialize	;wreg free
  9179  003D0C                     
  9180                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  9181  003D0C  ECA1  F021         	call	_PWM8_Initialize	;wreg free
  9182  003D10                     
  9183                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  9184  003D10  EC85  F021         	call	_TMR2_Initialize	;wreg free
  9185  003D14                     
  9186                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  9187  003D14  ECB9  F021         	call	_PWM6_Initialize	;wreg free
  9188                           
  9189                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  9190  003D18  EC79  F020         	call	_CCP4_Initialize	;wreg free
  9191  003D1C                     
  9192                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  9193  003D1C  ECD4  F020         	call	_CLC3_Initialize	;wreg free
  9194  003D20                     
  9195                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  9196  003D20  EC8E  F01F         	call	_TMR3_Initialize	;wreg free
  9197                           
  9198                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  9199  003D24  ECC5  F021         	call	_PWM5_Initialize	;wreg free
  9200  003D28                     
  9201                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  9202  003D28  EC9B  F01E         	call	_TMR5_Initialize	;wreg free
  9203  003D2C                     
  9204                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  9205  003D2C  ECAD  F021         	call	_PWM7_Initialize	;wreg free
  9206                           
  9207                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  9208  003D30  EC56  F01B         	call	_UART1_Initialize	;wreg free
  9209  003D34  0012               	return		;funcret
  9210  003D36                     __end_of_SYSTEM_Initialize:
  9211                           	callstack 0
  9212                           
  9213 ;; *************** function _UART1_Initialize *****************
  9214 ;; Defined at:
  9215 ;;		line 87 in file "mcc_generated_files/uart1.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0, cstack
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; Hardware stack levels required when called: 9
  9236 ;; This function calls:
  9237 ;;		_UART1_SetErrorHandler
  9238 ;;		_UART1_SetFramingErrorHandler
  9239 ;;		_UART1_SetOverrunErrorHandler
  9240 ;;		_UART1_SetRxInterruptHandler
  9241 ;;		_UART1_SetTxInterruptHandler
  9242 ;; This function is called by:
  9243 ;;		_SYSTEM_Initialize
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text39
  9248  0036AC                     __ptext39:
  9249                           	callstack 0
  9250  0036AC                     _UART1_Initialize:
  9251                           	callstack 20
  9252  0036AC                     
  9253                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  9254  0036AC  0139               	movlb	57	; () banked
  9255  0036AE  9793               	bcf	147,3,b	;volatile
  9256  0036B0                     
  9257                           ; BSR set to: 57
  9258                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  9259  0036B0  0EEC               	movlw	low _UART1_Receive_ISR
  9260  0036B2  6E20               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  9261  0036B4  0E35               	movlw	high _UART1_Receive_ISR
  9262  0036B6  6E21               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  9263  0036B8  ECEE  F021         	call	_UART1_SetRxInterruptHandler	;wreg free
  9264  0036BC                     
  9265                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  9266  0036BC  0139               	movlb	57	; () banked
  9267  0036BE  9993               	bcf	147,4,b	;volatile
  9268                           
  9269                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  9270  0036C0  0E5E               	movlw	low _UART1_Transmit_ISR
  9271  0036C2  6E20               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  9272  0036C4  0E3E               	movlw	high _UART1_Transmit_ISR
  9273  0036C6  6E21               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  9274  0036C8  ECE9  F021         	call	_UART1_SetTxInterruptHandler	;wreg free
  9275  0036CC                     
  9276                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  9277  0036CC  0E00               	movlw	0
  9278  0036CE  013D               	movlb	61	; () banked
  9279  0036D0  6FEC               	movwf	236,b	;volatile
  9280  0036D2                     
  9281                           ; BSR set to: 61
  9282                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  9283  0036D2  0E00               	movlw	0
  9284  0036D4  6FED               	movwf	237,b	;volatile
  9285  0036D6                     
  9286                           ; BSR set to: 61
  9287                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  9288  0036D6  0E00               	movlw	0
  9289  0036D8  6FEE               	movwf	238,b	;volatile
  9290  0036DA                     
  9291                           ; BSR set to: 61
  9292                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  9293  0036DA  0E00               	movlw	0
  9294  0036DC  6FEF               	movwf	239,b	;volatile
  9295  0036DE                     
  9296                           ; BSR set to: 61
  9297                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  9298  0036DE  0E00               	movlw	0
  9299  0036E0  6FF0               	movwf	240,b	;volatile
  9300  0036E2                     
  9301                           ; BSR set to: 61
  9302                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  9303  0036E2  0E00               	movlw	0
  9304  0036E4  6FF1               	movwf	241,b	;volatile
  9305  0036E6                     
  9306                           ; BSR set to: 61
  9307                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  9308  0036E6  0EB0               	movlw	176
  9309  0036E8  6FF2               	movwf	242,b	;volatile
  9310  0036EA                     
  9311                           ; BSR set to: 61
  9312                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  9313  0036EA  0E80               	movlw	128
  9314  0036EC  6FF3               	movwf	243,b	;volatile
  9315  0036EE                     
  9316                           ; BSR set to: 61
  9317                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  9318  0036EE  0E00               	movlw	0
  9319  0036F0  6FF4               	movwf	244,b	;volatile
  9320  0036F2                     
  9321                           ; BSR set to: 61
  9322                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  9323  0036F2  0E8A               	movlw	138
  9324  0036F4  6FF5               	movwf	245,b	;volatile
  9325  0036F6                     
  9326                           ; BSR set to: 61
  9327                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  9328  0036F6  0E00               	movlw	0
  9329  0036F8  6FF6               	movwf	246,b	;volatile
  9330  0036FA                     
  9331                           ; BSR set to: 61
  9332                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  9333  0036FA  0E00               	movlw	0
  9334  0036FC  6FF7               	movwf	247,b	;volatile
  9335  0036FE                     
  9336                           ; BSR set to: 61
  9337                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  9338  0036FE  0E00               	movlw	0
  9339  003700  6FF8               	movwf	248,b	;volatile
  9340  003702                     
  9341                           ; BSR set to: 61
  9342                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  9343  003702  0E00               	movlw	0
  9344  003704  6FF9               	movwf	249,b	;volatile
  9345  003706                     
  9346                           ; BSR set to: 61
  9347                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  9348  003706  0E00               	movlw	0
  9349  003708  6FFA               	movwf	250,b	;volatile
  9350  00370A                     
  9351                           ; BSR set to: 61
  9352                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  9353  00370A  0E38               	movlw	low _UART1_DefaultFramingErrorHandler
  9354  00370C  6E20               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  9355  00370E  0E44               	movlw	high _UART1_DefaultFramingErrorHandler
  9356  003710  6E21               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  9357  003712  ECF8  F021         	call	_UART1_SetFramingErrorHandler	;wreg free
  9358  003716                     
  9359                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  9360  003716  0E36               	movlw	low _UART1_DefaultOverrunErrorHandler
  9361  003718  6E20               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  9362  00371A  0E44               	movlw	high _UART1_DefaultOverrunErrorHandler
  9363  00371C  6E21               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9364  00371E  ECF3  F021         	call	_UART1_SetOverrunErrorHandler	;wreg free
  9365  003722                     
  9366                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  9367  003722  0E2C               	movlw	low _UART1_DefaultErrorHandler
  9368  003724  6E20               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  9369  003726  0E44               	movlw	high _UART1_DefaultErrorHandler
  9370  003728  6E21               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  9371  00372A  ECFD  F021         	call	_UART1_SetErrorHandler	;wreg free
  9372                           
  9373                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  9374  00372E  0E00               	movlw	0
  9375  003730  6E34               	movwf	_uart1RxLastError^0,c	;volatile
  9376                           
  9377                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  9378  003732  0E00               	movlw	0
  9379  003734  6E39               	movwf	_uart1TxHead^0,c	;volatile
  9380                           
  9381                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  9382  003736  0E00               	movlw	0
  9383  003738  6E38               	movwf	_uart1TxTail^0,c	;volatile
  9384                           
  9385                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  9386  00373A  0E08               	movlw	8
  9387  00373C  6E40               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  9388                           
  9389                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  9390  00373E  0E00               	movlw	0
  9391  003740  6E37               	movwf	_uart1RxHead^0,c	;volatile
  9392                           
  9393                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  9394  003742  0E00               	movlw	0
  9395  003744  6E36               	movwf	_uart1RxTail^0,c	;volatile
  9396                           
  9397                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  9398  003746  0E00               	movlw	0
  9399  003748  6E35               	movwf	_uart1RxCount^0,c	;volatile
  9400  00374A                     
  9401                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  9402  00374A  0139               	movlb	57	; () banked
  9403  00374C  8793               	bsf	147,3,b	;volatile
  9404  00374E                     
  9405                           ; BSR set to: 57
  9406  00374E  0012               	return		;funcret
  9407  003750                     __end_of_UART1_Initialize:
  9408                           	callstack 0
  9409                           
  9410 ;; *************** function _UART1_SetTxInterruptHandler *****************
  9411 ;; Defined at:
  9412 ;;		line 333 in file "mcc_generated_files/uart1.c"
  9413 ;; Parameters:    Size  Location     Type
  9414 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9415 ;;		 -> UART1_Transmit_ISR(1), 
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;		None
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		wreg, status,2, status,0
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;Total ram usage:        2 bytes
  9432 ;; Hardware stack levels used: 1
  9433 ;; Hardware stack levels required when called: 8
  9434 ;; This function calls:
  9435 ;;		Nothing
  9436 ;; This function is called by:
  9437 ;;		_UART1_Initialize
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text40
  9442  0043D2                     __ptext40:
  9443                           	callstack 0
  9444  0043D2                     _UART1_SetTxInterruptHandler:
  9445                           	callstack 20
  9446  0043D2                     
  9447                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  9448  0043D2  C020  F0FC         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  9449  0043D6  C021  F0FD         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  9450  0043DA  0012               	return		;funcret
  9451  0043DC                     __end_of_UART1_SetTxInterruptHandler:
  9452                           	callstack 0
  9453                           
  9454 ;; *************** function _UART1_SetRxInterruptHandler *****************
  9455 ;; Defined at:
  9456 ;;		line 329 in file "mcc_generated_files/uart1.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9459 ;;		 -> UART1_Receive_ISR(1), 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;		None
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1    wreg      void 
  9464 ;; Registers used:
  9465 ;;		wreg, status,2, status,0
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;Total ram usage:        2 bytes
  9476 ;; Hardware stack levels used: 1
  9477 ;; Hardware stack levels required when called: 8
  9478 ;; This function calls:
  9479 ;;		Nothing
  9480 ;; This function is called by:
  9481 ;;		_UART1_Initialize
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text41
  9486  0043DC                     __ptext41:
  9487                           	callstack 0
  9488  0043DC                     _UART1_SetRxInterruptHandler:
  9489                           	callstack 20
  9490  0043DC                     
  9491                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  9492  0043DC  C020  F0FE         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  9493  0043E0  C021  F0FF         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  9494  0043E4  0012               	return		;funcret
  9495  0043E6                     __end_of_UART1_SetRxInterruptHandler:
  9496                           	callstack 0
  9497                           
  9498 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  9499 ;; Defined at:
  9500 ;;		line 319 in file "mcc_generated_files/uart1.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9503 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, status,2, status,0
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9519 ;;Total ram usage:        2 bytes
  9520 ;; Hardware stack levels used: 1
  9521 ;; Hardware stack levels required when called: 8
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_UART1_Initialize
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text42
  9530  0043E6                     __ptext42:
  9531                           	callstack 0
  9532  0043E6                     _UART1_SetOverrunErrorHandler:
  9533                           	callstack 20
  9534  0043E6                     
  9535                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  9536  0043E6  C020  F0F8         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  9537  0043EA  C021  F0F9         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  9538  0043EE  0012               	return		;funcret
  9539  0043F0                     __end_of_UART1_SetOverrunErrorHandler:
  9540                           	callstack 0
  9541                           
  9542 ;; *************** function _UART1_SetFramingErrorHandler *****************
  9543 ;; Defined at:
  9544 ;;		line 315 in file "mcc_generated_files/uart1.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9547 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;		None
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  1    wreg      void 
  9552 ;; Registers used:
  9553 ;;		wreg, status,2, status,0
  9554 ;; Tracked objects:
  9555 ;;		On entry : 0/0
  9556 ;;		On exit  : 0/0
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;Total ram usage:        2 bytes
  9564 ;; Hardware stack levels used: 1
  9565 ;; Hardware stack levels required when called: 8
  9566 ;; This function calls:
  9567 ;;		Nothing
  9568 ;; This function is called by:
  9569 ;;		_UART1_Initialize
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           	psect	text43
  9574  0043F0                     __ptext43:
  9575                           	callstack 0
  9576  0043F0                     _UART1_SetFramingErrorHandler:
  9577                           	callstack 20
  9578  0043F0                     
  9579                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  9580  0043F0  C020  F0FA         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  9581  0043F4  C021  F0FB         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  9582  0043F8  0012               	return		;funcret
  9583  0043FA                     __end_of_UART1_SetFramingErrorHandler:
  9584                           	callstack 0
  9585                           
  9586 ;; *************** function _UART1_SetErrorHandler *****************
  9587 ;; Defined at:
  9588 ;;		line 323 in file "mcc_generated_files/uart1.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9591 ;;		 -> UART1_DefaultErrorHandler(1), 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;		None
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      void 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2, status,0
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;Total ram usage:        2 bytes
  9608 ;; Hardware stack levels used: 1
  9609 ;; Hardware stack levels required when called: 8
  9610 ;; This function calls:
  9611 ;;		Nothing
  9612 ;; This function is called by:
  9613 ;;		_UART1_Initialize
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text44
  9618  0043FA                     __ptext44:
  9619                           	callstack 0
  9620  0043FA                     _UART1_SetErrorHandler:
  9621                           	callstack 20
  9622  0043FA                     
  9623                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  9624  0043FA  C020  F0F6         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  9625  0043FE  C021  F0F7         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  9626  004402  0012               	return		;funcret
  9627  004404                     __end_of_UART1_SetErrorHandler:
  9628                           	callstack 0
  9629                           
  9630 ;; *************** function _TMR5_Initialize *****************
  9631 ;; Defined at:
  9632 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;		None
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;		None
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  1    wreg      void 
  9639 ;; Registers used:
  9640 ;;		wreg, status,2, status,0, cstack
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9648 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9649 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;Total ram usage:        2 bytes
  9651 ;; Hardware stack levels used: 1
  9652 ;; Hardware stack levels required when called: 9
  9653 ;; This function calls:
  9654 ;;		_TMR5_SetGateInterruptHandler
  9655 ;; This function is called by:
  9656 ;;		_SYSTEM_Initialize
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text45
  9661  003D36                     __ptext45:
  9662                           	callstack 0
  9663  003D36                     _TMR5_Initialize:
  9664                           	callstack 20
  9665  003D36                     
  9666                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  9667  003D36  0EC0               	movlw	192
  9668  003D38  6E9B               	movwf	155,c	;volatile
  9669                           
  9670                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  9671  003D3A  0E00               	movlw	0
  9672  003D3C  6E9C               	movwf	156,c	;volatile
  9673                           
  9674                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  9675  003D3E  0E05               	movlw	5
  9676  003D40  6E9D               	movwf	157,c	;volatile
  9677                           
  9678                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  9679  003D42  0E00               	movlw	0
  9680  003D44  6E99               	movwf	153,c	;volatile
  9681                           
  9682                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  9683  003D46  0E00               	movlw	0
  9684  003D48  6E98               	movwf	152,c	;volatile
  9685  003D4A                     
  9686                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  9687  003D4A  0139               	movlb	57	; () banked
  9688  003D4C  9DA8               	bcf	168,6,b	;volatile
  9689  003D4E                     
  9690                           ; BSR set to: 57
  9691                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9692  003D4E  5098               	movf	152,w,c	;volatile
  9693  003D50  006F FE64  F060    	movff	16281,??_TMR5_Initialize	;volatile
  9694  003D56  0100               	movlb	0	; () banked
  9695  003D58  6B61               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  9696  003D5A  C060  F061         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  9697  003D5E  6B60               	clrf	??_TMR5_Initialize& (0+255),b
  9698  003D60  1160               	iorwf	??_TMR5_Initialize& (0+255),w,b
  9699  003D62  6FF0               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  9700  003D64  5161               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  9701  003D66  6FF1               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  9702  003D68                     
  9703                           ; BSR set to: 0
  9704                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  9705  003D68  0139               	movlb	57	; () banked
  9706  003D6A  9FA8               	bcf	168,7,b	;volatile
  9707  003D6C                     
  9708                           ; BSR set to: 57
  9709                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  9710  003D6C  8F98               	bsf	152,7,b	;volatile
  9711  003D6E                     
  9712                           ; BSR set to: 57
  9713                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  9714  003D6E  0E26               	movlw	low _TMR5_DefaultGateInterruptHandler
  9715  003D70  6E20               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  9716  003D72  0E43               	movlw	high _TMR5_DefaultGateInterruptHandler
  9717  003D74  6E21               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  9718  003D76  EC02  F022         	call	_TMR5_SetGateInterruptHandler	;wreg free
  9719  003D7A                     
  9720                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  9721  003D7A  0E03               	movlw	3
  9722  003D7C  6E9A               	movwf	154,c	;volatile
  9723  003D7E  0012               	return		;funcret
  9724  003D80                     __end_of_TMR5_Initialize:
  9725                           	callstack 0
  9726                           
  9727 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  9728 ;; Defined at:
  9729 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  9730 ;; Parameters:    Size  Location     Type
  9731 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9732 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  1    wreg      void 
  9737 ;; Registers used:
  9738 ;;		wreg, status,2, status,0
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;Total ram usage:        2 bytes
  9749 ;; Hardware stack levels used: 1
  9750 ;; Hardware stack levels required when called: 8
  9751 ;; This function calls:
  9752 ;;		Nothing
  9753 ;; This function is called by:
  9754 ;;		_TMR5_Initialize
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text46
  9759  004404                     __ptext46:
  9760                           	callstack 0
  9761  004404                     _TMR5_SetGateInterruptHandler:
  9762                           	callstack 20
  9763  004404                     
  9764                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  9765  004404  C020  F0EE         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  9766  004408  C021  F0EF         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  9767  00440C  0012               	return		;funcret
  9768  00440E                     __end_of_TMR5_SetGateInterruptHandler:
  9769                           	callstack 0
  9770                           
  9771 ;; *************** function _TMR4_Initialize *****************
  9772 ;; Defined at:
  9773 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;		None
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      void 
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, status,0, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;Total ram usage:        0 bytes
  9792 ;; Hardware stack levels used: 1
  9793 ;; Hardware stack levels required when called: 9
  9794 ;; This function calls:
  9795 ;;		_TMR4_SetInterruptHandler
  9796 ;; This function is called by:
  9797 ;;		_SYSTEM_Initialize
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           	psect	text47
  9802  00417C                     __ptext47:
  9803                           	callstack 0
  9804  00417C                     _TMR4_Initialize:
  9805                           	callstack 20
  9806  00417C                     
  9807                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  9808  00417C  0E01               	movlw	1
  9809  00417E  6EA2               	movwf	162,c	;volatile
  9810                           
  9811                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  9812  004180  0E00               	movlw	0
  9813  004182  6EA1               	movwf	161,c	;volatile
  9814                           
  9815                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  9816  004184  0E00               	movlw	0
  9817  004186  6EA3               	movwf	163,c	;volatile
  9818                           
  9819                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  9820  004188  0EF9               	movlw	249
  9821  00418A  6E9F               	movwf	159,c	;volatile
  9822                           
  9823                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  9824  00418C  0E00               	movlw	0
  9825  00418E  6E9E               	movwf	158,c	;volatile
  9826  004190                     
  9827                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  9828  004190  0139               	movlb	57	; () banked
  9829  004192  91A7               	bcf	167,0,b	;volatile
  9830  004194                     
  9831                           ; BSR set to: 57
  9832                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  9833  004194  8197               	bsf	151,0,b	;volatile
  9834  004196                     
  9835                           ; BSR set to: 57
  9836                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  9837  004196  0E3A               	movlw	low _TMR4_DefaultInterruptHandler
  9838  004198  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  9839  00419A  0E44               	movlw	high _TMR4_DefaultInterruptHandler
  9840  00419C  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  9841  00419E  EC07  F022         	call	_TMR4_SetInterruptHandler	;wreg free
  9842  0041A2                     
  9843                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  9844  0041A2  0EE0               	movlw	224
  9845  0041A4  6EA0               	movwf	160,c	;volatile
  9846  0041A6  0012               	return		;funcret
  9847  0041A8                     __end_of_TMR4_Initialize:
  9848                           	callstack 0
  9849                           
  9850 ;; *************** function _TMR4_SetInterruptHandler *****************
  9851 ;; Defined at:
  9852 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9855 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;		None
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  1    wreg      void 
  9860 ;; Registers used:
  9861 ;;		wreg, status,2, status,0
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9871 ;;Total ram usage:        2 bytes
  9872 ;; Hardware stack levels used: 1
  9873 ;; Hardware stack levels required when called: 8
  9874 ;; This function calls:
  9875 ;;		Nothing
  9876 ;; This function is called by:
  9877 ;;		_TMR4_Initialize
  9878 ;;		_main
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           	psect	text48
  9883  00440E                     __ptext48:
  9884                           	callstack 0
  9885  00440E                     _TMR4_SetInterruptHandler:
  9886                           	callstack 22
  9887  00440E                     
  9888                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  9889  00440E  C020  F0EA         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  9890  004412  C021  F0EB         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  9891  004416  0012               	return		;funcret
  9892  004418                     __end_of_TMR4_SetInterruptHandler:
  9893                           	callstack 0
  9894                           
  9895 ;; *************** function _TMR3_Initialize *****************
  9896 ;; Defined at:
  9897 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;		None
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;		None
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      void 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, status,0
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9915 ;;Total ram usage:        2 bytes
  9916 ;; Hardware stack levels used: 1
  9917 ;; Hardware stack levels required when called: 8
  9918 ;; This function calls:
  9919 ;;		Nothing
  9920 ;; This function is called by:
  9921 ;;		_SYSTEM_Initialize
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text49
  9926  003F1C                     __ptext49:
  9927                           	callstack 0
  9928  003F1C                     _TMR3_Initialize:
  9929                           	callstack 21
  9930  003F1C                     
  9931                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  9932  003F1C  0E00               	movlw	0
  9933  003F1E  6EA7               	movwf	167,c	;volatile
  9934                           
  9935                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  9936  003F20  0E00               	movlw	0
  9937  003F22  6EA8               	movwf	168,c	;volatile
  9938                           
  9939                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  9940  003F24  0E05               	movlw	5
  9941  003F26  6EA9               	movwf	169,c	;volatile
  9942                           
  9943                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  9944  003F28  0E00               	movlw	0
  9945  003F2A  6EA5               	movwf	165,c	;volatile
  9946                           
  9947                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  9948  003F2C  0E00               	movlw	0
  9949  003F2E  6EA4               	movwf	164,c	;volatile
  9950  003F30                     
  9951                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  9952  003F30  0139               	movlb	57	; () banked
  9953  003F32  9DA6               	bcf	166,6,b	;volatile
  9954  003F34                     
  9955                           ; BSR set to: 57
  9956                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9957  003F34  50A4               	movf	164,w,c	;volatile
  9958  003F36  006F FE94  F020    	movff	16293,??_TMR3_Initialize	;volatile
  9959  003F3C  6A21               	clrf	(??_TMR3_Initialize+1)^0,c
  9960  003F3E  C020  F021         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  9961  003F42  6A20               	clrf	??_TMR3_Initialize^0,c
  9962  003F44  1020               	iorwf	??_TMR3_Initialize^0,w,c
  9963  003F46  0100               	movlb	0	; () banked
  9964  003F48  6FEC               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  9965  003F4A  5021               	movf	(??_TMR3_Initialize+1)^0,w,c
  9966  003F4C  6FED               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  9967  003F4E                     
  9968                           ; BSR set to: 0
  9969                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  9970  003F4E  0E01               	movlw	1
  9971  003F50  6EA6               	movwf	166,c	;volatile
  9972  003F52                     
  9973                           ; BSR set to: 0
  9974  003F52  0012               	return		;funcret
  9975  003F54                     __end_of_TMR3_Initialize:
  9976                           	callstack 0
  9977                           
  9978 ;; *************** function _TMR2_Initialize *****************
  9979 ;; Defined at:
  9980 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;		None
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  1    wreg      void 
  9987 ;; Registers used:
  9988 ;;		wreg, status,2
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;Total ram usage:        0 bytes
  9999 ;; Hardware stack levels used: 1
 10000 ;; Hardware stack levels required when called: 8
 10001 ;; This function calls:
 10002 ;;		Nothing
 10003 ;; This function is called by:
 10004 ;;		_SYSTEM_Initialize
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text50
 10009  00430A                     __ptext50:
 10010                           	callstack 0
 10011  00430A                     _TMR2_Initialize:
 10012                           	callstack 21
 10013  00430A                     
 10014                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 10015  00430A  0E05               	movlw	5
 10016  00430C  6EAE               	movwf	174,c	;volatile
 10017                           
 10018                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 10019  00430E  0E00               	movlw	0
 10020  004310  6EAD               	movwf	173,c	;volatile
 10021                           
 10022                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 10023  004312  0E00               	movlw	0
 10024  004314  6EAF               	movwf	175,c	;volatile
 10025  004316                     
 10026                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 10027  004316  68AB               	setf	171,c	;volatile
 10028                           
 10029                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 10030  004318  0E00               	movlw	0
 10031  00431A  6EAA               	movwf	170,c	;volatile
 10032  00431C                     
 10033                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 10034  00431C  0139               	movlb	57	; () banked
 10035  00431E  95A4               	bcf	164,2,b	;volatile
 10036                           
 10037                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 10038  004320  0EB0               	movlw	176
 10039  004322  6EAC               	movwf	172,c	;volatile
 10040  004324                     
 10041                           ; BSR set to: 57
 10042  004324  0012               	return		;funcret
 10043  004326                     __end_of_TMR2_Initialize:
 10044                           	callstack 0
 10045                           
 10046 ;; *************** function _SMT1_Initialize *****************
 10047 ;; Defined at:
 10048 ;;		line 60 in file "mcc_generated_files/smt1.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;		None
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;		None
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, status,2
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10066 ;;Total ram usage:        0 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 8
 10069 ;; This function calls:
 10070 ;;		Nothing
 10071 ;; This function is called by:
 10072 ;;		_SYSTEM_Initialize
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           	psect	text51
 10077  004062                     __ptext51:
 10078                           	callstack 0
 10079  004062                     _SMT1_Initialize:
 10080                           	callstack 21
 10081  004062                     
 10082                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 10083  004062  0E80               	movlw	128
 10084  004064  013F               	movlb	63	; () banked
 10085  004066  6F1E               	movwf	30,b	;volatile
 10086                           
 10087                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 10088  004068  0E42               	movlw	66
 10089  00406A  6F1F               	movwf	31,b	;volatile
 10090                           
 10091                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 10092  00406C  0E00               	movlw	0
 10093  00406E  6F20               	movwf	32,b	;volatile
 10094                           
 10095                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 10096  004070  0E04               	movlw	4
 10097  004072  6F21               	movwf	33,b	;volatile
 10098                           
 10099                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 10100  004074  0E00               	movlw	0
 10101  004076  6F23               	movwf	35,b	;volatile
 10102                           
 10103                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 10104  004078  0E00               	movlw	0
 10105  00407A  6F22               	movwf	34,b	;volatile
 10106                           
 10107                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 10108  00407C  0E01               	movlw	1
 10109  00407E  6F1D               	movwf	29,b	;volatile
 10110  004080                     
 10111                           ; BSR set to: 63
 10112                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 10113  004080  691C               	setf	28,b	;volatile
 10114  004082                     
 10115                           ; BSR set to: 63
 10116                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 10117  004082  691B               	setf	27,b	;volatile
 10118  004084                     
 10119                           ; BSR set to: 63
 10120                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 10121  004084  0139               	movlb	57	; () banked
 10122  004086  8B91               	bsf	145,5,b	;volatile
 10123  004088                     
 10124                           ; BSR set to: 57
 10125                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 10126  004088  8F91               	bsf	145,7,b	;volatile
 10127  00408A                     
 10128                           ; BSR set to: 57
 10129                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 10130  00408A  8D91               	bsf	145,6,b	;volatile
 10131  00408C                     
 10132                           ; BSR set to: 57
 10133                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 10134  00408C  013F               	movlb	63	; () banked
 10135  00408E  8F1F               	bsf	31,7,b	;volatile
 10136  004090                     
 10137                           ; BSR set to: 63
 10138  004090  0012               	return		;funcret
 10139  004092                     __end_of_SMT1_Initialize:
 10140                           	callstack 0
 10141                           
 10142 ;; *************** function _PWM8_Initialize *****************
 10143 ;; Defined at:
 10144 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;		None
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;		None
 10149 ;; Return value:  Size  Location     Type
 10150 ;;                  1    wreg      void 
 10151 ;; Registers used:
 10152 ;;		wreg, status,2
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;Total ram usage:        0 bytes
 10163 ;; Hardware stack levels used: 1
 10164 ;; Hardware stack levels required when called: 8
 10165 ;; This function calls:
 10166 ;;		Nothing
 10167 ;; This function is called by:
 10168 ;;		_SYSTEM_Initialize
 10169 ;; This function uses a non-reentrant model
 10170 ;;
 10171                           
 10172                           	psect	text52
 10173  004342                     __ptext52:
 10174                           	callstack 0
 10175  004342                     _PWM8_Initialize:
 10176                           	callstack 21
 10177  004342                     
 10178                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 10179  004342  0E80               	movlw	128
 10180  004344  6E62               	movwf	98,c	;volatile
 10181                           
 10182                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 10183  004346  0E00               	movlw	0
 10184  004348  6E61               	movwf	97,c	;volatile
 10185                           
 10186                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 10187  00434A  0E00               	movlw	0
 10188  00434C  6E60               	movwf	96,c	;volatile
 10189                           
 10190                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 10191  00434E  013F               	movlb	63	; () banked
 10192  004350  515F               	movf	95,w,b	;volatile
 10193  004352  0B3F               	andlw	-193
 10194  004354  0980               	iorlw	128
 10195  004356  6F5F               	movwf	95,b	;volatile
 10196  004358                     
 10197                           ; BSR set to: 63
 10198  004358  0012               	return		;funcret
 10199  00435A                     __end_of_PWM8_Initialize:
 10200                           	callstack 0
 10201                           
 10202 ;; *************** function _PWM7_Initialize *****************
 10203 ;; Defined at:
 10204 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;Total ram usage:        0 bytes
 10223 ;; Hardware stack levels used: 1
 10224 ;; Hardware stack levels required when called: 8
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_SYSTEM_Initialize
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text53
 10233  00435A                     __ptext53:
 10234                           	callstack 0
 10235  00435A                     _PWM7_Initialize:
 10236                           	callstack 21
 10237  00435A                     
 10238                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 10239  00435A  0E80               	movlw	128
 10240  00435C  6E66               	movwf	102,c	;volatile
 10241                           
 10242                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 10243  00435E  0E00               	movlw	0
 10244  004360  6E65               	movwf	101,c	;volatile
 10245                           
 10246                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 10247  004362  0E00               	movlw	0
 10248  004364  6E64               	movwf	100,c	;volatile
 10249                           
 10250                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 10251  004366  013F               	movlb	63	; () banked
 10252  004368  515F               	movf	95,w,b	;volatile
 10253  00436A  0BCF               	andlw	-49
 10254  00436C  0920               	iorlw	32
 10255  00436E  6F5F               	movwf	95,b	;volatile
 10256  004370                     
 10257                           ; BSR set to: 63
 10258  004370  0012               	return		;funcret
 10259  004372                     __end_of_PWM7_Initialize:
 10260                           	callstack 0
 10261                           
 10262 ;; *************** function _PWM6_Initialize *****************
 10263 ;; Defined at:
 10264 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;		None
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;		None
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  1    wreg      void 
 10271 ;; Registers used:
 10272 ;;		wreg, status,2
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10282 ;;Total ram usage:        0 bytes
 10283 ;; Hardware stack levels used: 1
 10284 ;; Hardware stack levels required when called: 8
 10285 ;; This function calls:
 10286 ;;		Nothing
 10287 ;; This function is called by:
 10288 ;;		_SYSTEM_Initialize
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           	psect	text54
 10293  004372                     __ptext54:
 10294                           	callstack 0
 10295  004372                     _PWM6_Initialize:
 10296                           	callstack 21
 10297  004372                     
 10298                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 10299  004372  0E80               	movlw	128
 10300  004374  6E6A               	movwf	106,c	;volatile
 10301                           
 10302                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 10303  004376  0E59               	movlw	89
 10304  004378  6E69               	movwf	105,c	;volatile
 10305                           
 10306                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 10307  00437A  0E40               	movlw	64
 10308  00437C  6E68               	movwf	104,c	;volatile
 10309                           
 10310                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 10311  00437E  013F               	movlb	63	; () banked
 10312  004380  515F               	movf	95,w,b	;volatile
 10313  004382  0BF3               	andlw	-13
 10314  004384  0904               	iorlw	4
 10315  004386  6F5F               	movwf	95,b	;volatile
 10316  004388                     
 10317                           ; BSR set to: 63
 10318  004388  0012               	return		;funcret
 10319  00438A                     __end_of_PWM6_Initialize:
 10320                           	callstack 0
 10321                           
 10322 ;; *************** function _PWM5_Initialize *****************
 10323 ;; Defined at:
 10324 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;		None
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;		None
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      void 
 10331 ;; Registers used:
 10332 ;;		wreg, status,2
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10342 ;;Total ram usage:        0 bytes
 10343 ;; Hardware stack levels used: 1
 10344 ;; Hardware stack levels required when called: 8
 10345 ;; This function calls:
 10346 ;;		Nothing
 10347 ;; This function is called by:
 10348 ;;		_SYSTEM_Initialize
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text55
 10353  00438A                     __ptext55:
 10354                           	callstack 0
 10355  00438A                     _PWM5_Initialize:
 10356                           	callstack 21
 10357  00438A                     
 10358                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 10359  00438A  0E80               	movlw	128
 10360  00438C  6E6E               	movwf	110,c	;volatile
 10361                           
 10362                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 10363  00438E  0E59               	movlw	89
 10364  004390  6E6D               	movwf	109,c	;volatile
 10365                           
 10366                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 10367  004392  0E40               	movlw	64
 10368  004394  6E6C               	movwf	108,c	;volatile
 10369                           
 10370                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 10371  004396  013F               	movlb	63	; () banked
 10372  004398  515F               	movf	95,w,b	;volatile
 10373  00439A  0BFC               	andlw	-4
 10374  00439C  0901               	iorlw	1
 10375  00439E  6F5F               	movwf	95,b	;volatile
 10376  0043A0                     
 10377                           ; BSR set to: 63
 10378  0043A0  0012               	return		;funcret
 10379  0043A2                     __end_of_PWM5_Initialize:
 10380                           	callstack 0
 10381                           
 10382 ;; *************** function _PMD_Initialize *****************
 10383 ;; Defined at:
 10384 ;;		line 86 in file "mcc_generated_files/mcc.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;		None
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;		None
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  1    wreg      void 
 10391 ;; Registers used:
 10392 ;;		wreg, status,2
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10402 ;;Total ram usage:        0 bytes
 10403 ;; Hardware stack levels used: 1
 10404 ;; Hardware stack levels required when called: 8
 10405 ;; This function calls:
 10406 ;;		Nothing
 10407 ;; This function is called by:
 10408 ;;		_SYSTEM_Initialize
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text56
 10413  0042A2                     __ptext56:
 10414                           	callstack 0
 10415  0042A2                     _PMD_Initialize:
 10416                           	callstack 21
 10417  0042A2                     
 10418                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 10419  0042A2  0E00               	movlw	0
 10420  0042A4  0139               	movlb	57	; () banked
 10421  0042A6  6FC0               	movwf	192,b	;volatile
 10422                           
 10423                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 10424  0042A8  0E00               	movlw	0
 10425  0042AA  6FC1               	movwf	193,b	;volatile
 10426                           
 10427                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 10428  0042AC  0E00               	movlw	0
 10429  0042AE  6FC2               	movwf	194,b	;volatile
 10430                           
 10431                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 10432  0042B0  0E00               	movlw	0
 10433  0042B2  6FC3               	movwf	195,b	;volatile
 10434                           
 10435                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 10436  0042B4  0E00               	movlw	0
 10437  0042B6  6FC4               	movwf	196,b	;volatile
 10438                           
 10439                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 10440  0042B8  0E00               	movlw	0
 10441  0042BA  6FC5               	movwf	197,b	;volatile
 10442                           
 10443                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 10444  0042BC  0E00               	movlw	0
 10445  0042BE  6FC6               	movwf	198,b	;volatile
 10446                           
 10447                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 10448  0042C0  0E00               	movlw	0
 10449  0042C2  6FC7               	movwf	199,b	;volatile
 10450  0042C4                     
 10451                           ; BSR set to: 57
 10452  0042C4  0012               	return		;funcret
 10453  0042C6                     __end_of_PMD_Initialize:
 10454                           	callstack 0
 10455                           
 10456 ;; *************** function _PIN_MANAGER_Initialize *****************
 10457 ;; Defined at:
 10458 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;		None
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;		None
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg, status,2
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10476 ;;Total ram usage:        0 bytes
 10477 ;; Hardware stack levels used: 1
 10478 ;; Hardware stack levels required when called: 8
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_SYSTEM_Initialize
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text57
 10487  003394                     __ptext57:
 10488                           	callstack 0
 10489  003394                     _PIN_MANAGER_Initialize:
 10490                           	callstack 21
 10491  003394                     
 10492                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10493  003394  0E00               	movlw	0
 10494  003396  6EBE               	movwf	190,c	;volatile
 10495                           
 10496                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 10497  003398  0E00               	movlw	0
 10498  00339A  6EBD               	movwf	189,c	;volatile
 10499                           
 10500                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 10501  00339C  0E24               	movlw	36
 10502  00339E  6EBA               	movwf	186,c	;volatile
 10503                           
 10504                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 10505  0033A0  0E00               	movlw	0
 10506  0033A2  6EBB               	movwf	187,c	;volatile
 10507                           
 10508                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 10509  0033A4  0E00               	movlw	0
 10510  0033A6  6EBC               	movwf	188,c	;volatile
 10511                           
 10512                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 10513  0033A8  0E07               	movlw	7
 10514  0033AA  6EC6               	movwf	198,c	;volatile
 10515                           
 10516                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 10517  0033AC  0EC0               	movlw	192
 10518  0033AE  6EC2               	movwf	194,c	;volatile
 10519                           
 10520                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 10521  0033B0  0EF7               	movlw	247
 10522  0033B2  6EC3               	movwf	195,c	;volatile
 10523  0033B4                     
 10524                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 10525  0033B4  68C4               	setf	196,c	;volatile
 10526  0033B6                     
 10527                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 10528  0033B6  68C5               	setf	197,c	;volatile
 10529                           
 10530                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 10531  0033B8  0E1F               	movlw	31
 10532  0033BA  013A               	movlb	58	; () banked
 10533  0033BC  6F70               	movwf	112,b	;volatile
 10534  0033BE                     
 10535                           ; BSR set to: 58
 10536                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 10537  0033BE  6960               	setf	96,b	;volatile
 10538                           
 10539                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 10540  0033C0  0EC0               	movlw	192
 10541  0033C2  6F50               	movwf	80,b	;volatile
 10542                           
 10543                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 10544  0033C4  0E07               	movlw	7
 10545  0033C6  6F80               	movwf	128,b	;volatile
 10546                           
 10547                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 10548  0033C8  0E7F               	movlw	127
 10549  0033CA  6F40               	movwf	64,b	;volatile
 10550                           
 10551                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 10552  0033CC  0E00               	movlw	0
 10553  0033CE  6F71               	movwf	113,b	;volatile
 10554                           
 10555                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 10556  0033D0  0E00               	movlw	0
 10557  0033D2  6F81               	movwf	129,b	;volatile
 10558                           
 10559                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10560  0033D4  0E00               	movlw	0
 10561  0033D6  6F51               	movwf	81,b	;volatile
 10562                           
 10563                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 10564  0033D8  0E00               	movlw	0
 10565  0033DA  6F41               	movwf	65,b	;volatile
 10566                           
 10567                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 10568  0033DC  0E00               	movlw	0
 10569  0033DE  6F61               	movwf	97,b	;volatile
 10570                           
 10571                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 10572  0033E0  0E00               	movlw	0
 10573  0033E2  6F5A               	movwf	90,b	;volatile
 10574                           
 10575                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 10576  0033E4  0E00               	movlw	0
 10577  0033E6  6F5B               	movwf	91,b	;volatile
 10578                           
 10579                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 10580  0033E8  0E00               	movlw	0
 10581  0033EA  6F6A               	movwf	106,b	;volatile
 10582                           
 10583                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 10584  0033EC  0E00               	movlw	0
 10585  0033EE  6F6B               	movwf	107,b	;volatile
 10586                           
 10587                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 10588  0033F0  0E00               	movlw	0
 10589  0033F2  6F7A               	movwf	122,b	;volatile
 10590                           
 10591                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 10592  0033F4  0E00               	movlw	0
 10593  0033F6  6F7B               	movwf	123,b	;volatile
 10594                           
 10595                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 10596  0033F8  0E00               	movlw	0
 10597  0033FA  6F82               	movwf	130,b	;volatile
 10598                           
 10599                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 10600  0033FC  0E00               	movlw	0
 10601  0033FE  6F42               	movwf	66,b	;volatile
 10602                           
 10603                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 10604  003400  0E00               	movlw	0
 10605  003402  6F52               	movwf	82,b	;volatile
 10606                           
 10607                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 10608  003404  0E00               	movlw	0
 10609  003406  6F62               	movwf	98,b	;volatile
 10610                           
 10611                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 10612  003408  0E00               	movlw	0
 10613  00340A  6F72               	movwf	114,b	;volatile
 10614  00340C                     
 10615                           ; BSR set to: 58
 10616                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 10617  00340C  6943               	setf	67,b	;volatile
 10618  00340E                     
 10619                           ; BSR set to: 58
 10620                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 10621  00340E  6953               	setf	83,b	;volatile
 10622  003410                     
 10623                           ; BSR set to: 58
 10624                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 10625  003410  6963               	setf	99,b	;volatile
 10626  003412                     
 10627                           ; BSR set to: 58
 10628                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 10629  003412  6973               	setf	115,b	;volatile
 10630                           
 10631                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 10632  003414  0E07               	movlw	7
 10633  003416  6F83               	movwf	131,b	;volatile
 10634  003418                     
 10635                           ; BSR set to: 58
 10636                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 10637  003418  6944               	setf	68,b	;volatile
 10638  00341A                     
 10639                           ; BSR set to: 58
 10640                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 10641  00341A  6954               	setf	84,b	;volatile
 10642  00341C                     
 10643                           ; BSR set to: 58
 10644                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 10645  00341C  6964               	setf	100,b	;volatile
 10646  00341E                     
 10647                           ; BSR set to: 58
 10648                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 10649  00341E  6974               	setf	116,b	;volatile
 10650                           
 10651                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 10652  003420  0E0F               	movlw	15
 10653  003422  6F84               	movwf	132,b	;volatile
 10654                           
 10655                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 10656  003424  0E1F               	movlw	31
 10657  003426  6FCF               	movwf	207,b	;volatile
 10658                           
 10659                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 10660  003428  0E09               	movlw	9
 10661  00342A  6FDC               	movwf	220,b	;volatile
 10662                           
 10663                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 10664  00342C  0E0E               	movlw	14
 10665  00342E  6F01               	movwf	1,b	;volatile
 10666                           
 10667                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 10668  003430  0E0A               	movlw	10
 10669  003432  6FE5               	movwf	229,b	;volatile
 10670                           
 10671                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 10672  003434  0E0D               	movlw	13
 10673  003436  6F00               	movwf	0,b	;volatile
 10674                           
 10675                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 10676  003438  0E1D               	movlw	29
 10677  00343A  6FC9               	movwf	201,b	;volatile
 10678                           
 10679                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 10680  00343C  0E10               	movlw	16
 10681  00343E  6F04               	movwf	4,b	;volatile
 10682                           
 10683                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 10684  003440  0E07               	movlw	7
 10685  003442  6FD9               	movwf	217,b	;volatile
 10686                           
 10687                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 10688  003444  0E09               	movlw	9
 10689  003446  6FD1               	movwf	209,b	;volatile
 10690                           
 10691                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 10692  003448  0E0F               	movlw	15
 10693  00344A  6F03               	movwf	3,b	;volatile
 10694                           
 10695                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 10696  00344C  0E13               	movlw	19
 10697  00344E  6F0B               	movwf	11,b	;volatile
 10698                           
 10699                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 10700  003450  0E08               	movlw	8
 10701  003452  6FDB               	movwf	219,b	;volatile
 10702                           
 10703                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 10704  003454  0E08               	movlw	8
 10705  003456  6FD2               	movwf	210,b	;volatile
 10706                           
 10707                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 10708  003458  0E1E               	movlw	30
 10709  00345A  6FD0               	movwf	208,b	;volatile
 10710  00345C                     
 10711                           ; BSR set to: 58
 10712  00345C  0012               	return		;funcret
 10713  00345E                     __end_of_PIN_MANAGER_Initialize:
 10714                           	callstack 0
 10715                           
 10716 ;; *************** function _OSCILLATOR_Initialize *****************
 10717 ;; Defined at:
 10718 ;;		line 72 in file "mcc_generated_files/mcc.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;		None
 10721 ;; Auto vars:     Size  Location     Type
 10722 ;;		None
 10723 ;; Return value:  Size  Location     Type
 10724 ;;                  1    wreg      void 
 10725 ;; Registers used:
 10726 ;;		wreg, status,2
 10727 ;; Tracked objects:
 10728 ;;		On entry : 0/0
 10729 ;;		On exit  : 0/0
 10730 ;;		Unchanged: 0/0
 10731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;Total ram usage:        0 bytes
 10737 ;; Hardware stack levels used: 1
 10738 ;; Hardware stack levels required when called: 8
 10739 ;; This function calls:
 10740 ;;		Nothing
 10741 ;; This function is called by:
 10742 ;;		_SYSTEM_Initialize
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           	psect	text58
 10747  0043A2                     __ptext58:
 10748                           	callstack 0
 10749  0043A2                     _OSCILLATOR_Initialize:
 10750                           	callstack 21
 10751  0043A2                     
 10752                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 10753  0043A2  0E60               	movlw	96
 10754  0043A4  0139               	movlb	57	; () banked
 10755  0043A6  6FD9               	movwf	217,b	;volatile
 10756                           
 10757                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 10758  0043A8  0E00               	movlw	0
 10759  0043AA  6FDB               	movwf	219,b	;volatile
 10760                           
 10761                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 10762  0043AC  0E00               	movlw	0
 10763  0043AE  6FDD               	movwf	221,b	;volatile
 10764                           
 10765                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 10766  0043B0  0E08               	movlw	8
 10767  0043B2  6FDF               	movwf	223,b	;volatile
 10768                           
 10769                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 10770  0043B4  0E00               	movlw	0
 10771  0043B6  6FDE               	movwf	222,b	;volatile
 10772  0043B8                     
 10773                           ; BSR set to: 57
 10774  0043B8  0012               	return		;funcret
 10775  0043BA                     __end_of_OSCILLATOR_Initialize:
 10776                           	callstack 0
 10777                           
 10778 ;; *************** function _INTERRUPT_Initialize *****************
 10779 ;; Defined at:
 10780 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;		None
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;  state           1   31[COMRAM] _Bool 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      void 
 10787 ;; Registers used:
 10788 ;;		wreg, status,2
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10798 ;;Total ram usage:        1 bytes
 10799 ;; Hardware stack levels used: 1
 10800 ;; Hardware stack levels required when called: 8
 10801 ;; This function calls:
 10802 ;;		Nothing
 10803 ;; This function is called by:
 10804 ;;		_SYSTEM_Initialize
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text59
 10809  003C08                     __ptext59:
 10810                           	callstack 0
 10811  003C08                     _INTERRUPT_Initialize:
 10812                           	callstack 21
 10813  003C08                     
 10814                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 10815  003C08  8AD2               	bsf	210,5,c	;volatile
 10816  003C0A                     
 10817                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 10818  003C0A  0E00               	movlw	0
 10819  003C0C  BED2               	btfsc	16338,7,c	;volatile
 10820  003C0E  0E01               	movlw	1
 10821  003C10  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 10822  003C12                     
 10823                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 10824  003C12  9ED2               	bcf	16338,7,c	;volatile
 10825                           
 10826                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 10827  003C14  0E55               	movlw	85
 10828  003C16  6ED4               	movwf	212,c	;volatile
 10829                           
 10830                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 10831  003C18  0EAA               	movlw	170
 10832  003C1A  6ED4               	movwf	212,c	;volatile
 10833  003C1C                     
 10834                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 10835  003C1C  90D4               	bcf	212,0,c	;volatile
 10836                           
 10837                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 10838  003C1E  0E00               	movlw	0
 10839  003C20  6ED7               	movwf	215,c	;volatile
 10840                           
 10841                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 10842  003C22  0E00               	movlw	0
 10843  003C24  6ED6               	movwf	214,c	;volatile
 10844                           
 10845                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 10846  003C26  0E08               	movlw	8
 10847  003C28  6ED5               	movwf	213,c	;volatile
 10848                           
 10849                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 10850  003C2A  0E55               	movlw	85
 10851  003C2C  6ED4               	movwf	212,c	;volatile
 10852                           
 10853                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 10854  003C2E  0EAA               	movlw	170
 10855  003C30  6ED4               	movwf	212,c	;volatile
 10856  003C32                     
 10857                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 10858  003C32  80D4               	bsf	212,0,c	;volatile
 10859  003C34                     
 10860                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 10861  003C34  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 10862  003C36  D002               	bra	u1645
 10863  003C38  9ED2               	bcf	16338,7,c	;volatile
 10864  003C3A  D001               	bra	u1646
 10865  003C3C                     u1645:
 10866  003C3C  8ED2               	bsf	16338,7,c	;volatile
 10867  003C3E                     u1646:
 10868  003C3E                     
 10869                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 10870  003C3E  0139               	movlb	57	; () banked
 10871  003C40  9983               	bcf	131,4,b	;volatile
 10872  003C42                     
 10873                           ; BSR set to: 57
 10874                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 10875  003C42  9783               	bcf	131,3,b	;volatile
 10876  003C44                     
 10877                           ; BSR set to: 57
 10878                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 10879  003C44  8F81               	bsf	129,7,b	;volatile
 10880  003C46                     
 10881                           ; BSR set to: 57
 10882                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 10883  003C46  8B81               	bsf	129,5,b	;volatile
 10884  003C48                     
 10885                           ; BSR set to: 57
 10886                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 10887  003C48  8D81               	bsf	129,6,b	;volatile
 10888  003C4A                     
 10889                           ; BSR set to: 57
 10890                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 10891  003C4A  818A               	bsf	138,0,b	;volatile
 10892  003C4C                     
 10893                           ; BSR set to: 57
 10894                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 10895  003C4C  8F88               	bsf	136,7,b	;volatile
 10896  003C4E                     
 10897                           ; BSR set to: 57
 10898                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 10899  003C4E  9187               	bcf	135,0,b	;volatile
 10900  003C50                     
 10901                           ; BSR set to: 57
 10902                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 10903  003C50  8389               	bsf	137,1,b	;volatile
 10904  003C52                     
 10905                           ; BSR set to: 57
 10906  003C52  0012               	return		;funcret
 10907  003C54                     __end_of_INTERRUPT_Initialize:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _CLC3_Initialize *****************
 10911 ;; Defined at:
 10912 ;;		line 58 in file "mcc_generated_files/clc3.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;		None
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10930 ;;Total ram usage:        0 bytes
 10931 ;; Hardware stack levels used: 1
 10932 ;; Hardware stack levels required when called: 8
 10933 ;; This function calls:
 10934 ;;		Nothing
 10935 ;; This function is called by:
 10936 ;;		_SYSTEM_Initialize
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text60
 10941  0041A8                     __ptext60:
 10942                           	callstack 0
 10943  0041A8                     _CLC3_Initialize:
 10944                           	callstack 21
 10945  0041A8                     
 10946                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 10947  0041A8  0E00               	movlw	0
 10948  0041AA  013C               	movlb	60	; () banked
 10949  0041AC  6F61               	movwf	97,b	;volatile
 10950                           
 10951                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 10952  0041AE  0E03               	movlw	3
 10953  0041B0  6F62               	movwf	98,b	;volatile
 10954                           
 10955                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 10956  0041B2  0E02               	movlw	2
 10957  0041B4  6F63               	movwf	99,b	;volatile
 10958                           
 10959                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 10960  0041B6  0E00               	movlw	0
 10961  0041B8  6F64               	movwf	100,b	;volatile
 10962                           
 10963                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 10964  0041BA  0E00               	movlw	0
 10965  0041BC  6F65               	movwf	101,b	;volatile
 10966                           
 10967                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 10968  0041BE  0E02               	movlw	2
 10969  0041C0  6F66               	movwf	102,b	;volatile
 10970                           
 10971                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 10972  0041C2  0E08               	movlw	8
 10973  0041C4  6F67               	movwf	103,b	;volatile
 10974                           
 10975                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 10976  0041C6  0E00               	movlw	0
 10977  0041C8  6F68               	movwf	104,b	;volatile
 10978                           
 10979                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 10980  0041CA  0E00               	movlw	0
 10981  0041CC  6F69               	movwf	105,b	;volatile
 10982                           
 10983                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 10984  0041CE  0E85               	movlw	133
 10985  0041D0  6F60               	movwf	96,b	;volatile
 10986  0041D2                     
 10987                           ; BSR set to: 60
 10988  0041D2  0012               	return		;funcret
 10989  0041D4                     __end_of_CLC3_Initialize:
 10990                           	callstack 0
 10991                           
 10992 ;; *************** function _CCP4_Initialize *****************
 10993 ;; Defined at:
 10994 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;		None
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;		None
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  1    wreg      void 
 11001 ;; Registers used:
 11002 ;;		wreg, status,2, status,0, cstack
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;Total ram usage:        0 bytes
 11013 ;; Hardware stack levels used: 1
 11014 ;; Hardware stack levels required when called: 9
 11015 ;; This function calls:
 11016 ;;		_CCP4_SetCallBack
 11017 ;; This function is called by:
 11018 ;;		_SYSTEM_Initialize
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           	psect	text61
 11023  0040F2                     __ptext61:
 11024                           	callstack 0
 11025  0040F2                     _CCP4_Initialize:
 11026                           	callstack 20
 11027  0040F2                     
 11028                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 11029  0040F2  0E83               	movlw	131
 11030  0040F4  6E72               	movwf	114,c	;volatile
 11031                           
 11032                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 11033  0040F6  0E00               	movlw	0
 11034  0040F8  6E73               	movwf	115,c	;volatile
 11035                           
 11036                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 11037  0040FA  0E00               	movlw	0
 11038  0040FC  6E71               	movwf	113,c	;volatile
 11039                           
 11040                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 11041  0040FE  0E00               	movlw	0
 11042  004100  6E70               	movwf	112,c	;volatile
 11043  004102                     
 11044                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 11045  004102  0EC2               	movlw	low _CCP4_DefaultCallBack
 11046  004104  6E20               	movwf	CCP4_SetCallBack@customCallBack^0,c
 11047  004106  0E40               	movlw	high _CCP4_DefaultCallBack
 11048  004108  6E21               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 11049  00410A  EC0C  F022         	call	_CCP4_SetCallBack	;wreg free
 11050  00410E                     
 11051                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 11052  00410E  013F               	movlb	63	; () banked
 11053  004110  515E               	movf	94,w,b	;volatile
 11054  004112  0B3F               	andlw	-193
 11055  004114  0980               	iorlw	128
 11056  004116  6F5E               	movwf	94,b	;volatile
 11057  004118                     
 11058                           ; BSR set to: 63
 11059                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 11060  004118  0139               	movlb	57	; () banked
 11061  00411A  91AA               	bcf	170,0,b	;volatile
 11062  00411C                     
 11063                           ; BSR set to: 57
 11064                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 11065  00411C  819A               	bsf	154,0,b	;volatile
 11066  00411E                     
 11067                           ; BSR set to: 57
 11068  00411E  0012               	return		;funcret
 11069  004120                     __end_of_CCP4_Initialize:
 11070                           	callstack 0
 11071                           
 11072 ;; *************** function _CCP4_SetCallBack *****************
 11073 ;; Defined at:
 11074 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 11077 ;;		 -> CCP4_DefaultCallBack(1), 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;		None
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      void 
 11082 ;; Registers used:
 11083 ;;		wreg, status,2, status,0
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;Total ram usage:        2 bytes
 11094 ;; Hardware stack levels used: 1
 11095 ;; Hardware stack levels required when called: 8
 11096 ;; This function calls:
 11097 ;;		Nothing
 11098 ;; This function is called by:
 11099 ;;		_CCP4_Initialize
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text62
 11104  004418                     __ptext62:
 11105                           	callstack 0
 11106  004418                     _CCP4_SetCallBack:
 11107                           	callstack 20
 11108  004418                     
 11109                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 11110  004418  C020  F0F2         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 11111  00441C  C021  F0F3         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 11112  004420  0012               	return		;funcret
 11113  004422                     __end_of_CCP4_SetCallBack:
 11114                           	callstack 0
 11115                           
 11116 ;; *************** function _CCP3_Initialize *****************
 11117 ;; Defined at:
 11118 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;		None
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;		None
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  1    wreg      void 
 11125 ;; Registers used:
 11126 ;;		wreg, status,2, status,0, cstack
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;Total ram usage:        0 bytes
 11137 ;; Hardware stack levels used: 1
 11138 ;; Hardware stack levels required when called: 9
 11139 ;; This function calls:
 11140 ;;		_CCP3_SetCallBack
 11141 ;; This function is called by:
 11142 ;;		_SYSTEM_Initialize
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146                           	psect	text63
 11147  004120                     __ptext63:
 11148                           	callstack 0
 11149  004120                     _CCP3_Initialize:
 11150                           	callstack 20
 11151  004120                     
 11152                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 11153  004120  0E83               	movlw	131
 11154  004122  6E76               	movwf	118,c	;volatile
 11155                           
 11156                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 11157  004124  0E00               	movlw	0
 11158  004126  6E77               	movwf	119,c	;volatile
 11159                           
 11160                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 11161  004128  0E00               	movlw	0
 11162  00412A  6E75               	movwf	117,c	;volatile
 11163                           
 11164                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 11165  00412C  0E00               	movlw	0
 11166  00412E  6E74               	movwf	116,c	;volatile
 11167  004130                     
 11168                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 11169  004130  0E92               	movlw	low _CCP3_DefaultCallBack
 11170  004132  6E20               	movwf	CCP3_SetCallBack@customCallBack^0,c
 11171  004134  0E40               	movlw	high _CCP3_DefaultCallBack
 11172  004136  6E21               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 11173  004138  EC11  F022         	call	_CCP3_SetCallBack	;wreg free
 11174  00413C                     
 11175                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 11176  00413C  013F               	movlb	63	; () banked
 11177  00413E  515E               	movf	94,w,b	;volatile
 11178  004140  0BCF               	andlw	-49
 11179  004142  0920               	iorlw	32
 11180  004144  6F5E               	movwf	94,b	;volatile
 11181  004146                     
 11182                           ; BSR set to: 63
 11183                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 11184  004146  0139               	movlb	57	; () banked
 11185  004148  93A9               	bcf	169,1,b	;volatile
 11186  00414A                     
 11187                           ; BSR set to: 57
 11188                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 11189  00414A  8399               	bsf	153,1,b	;volatile
 11190  00414C                     
 11191                           ; BSR set to: 57
 11192  00414C  0012               	return		;funcret
 11193  00414E                     __end_of_CCP3_Initialize:
 11194                           	callstack 0
 11195                           
 11196 ;; *************** function _CCP3_SetCallBack *****************
 11197 ;; Defined at:
 11198 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 11201 ;;		 -> CCP3_DefaultCallBack(1), 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;		None
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  1    wreg      void 
 11206 ;; Registers used:
 11207 ;;		wreg, status,2, status,0
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;Total ram usage:        2 bytes
 11218 ;; Hardware stack levels used: 1
 11219 ;; Hardware stack levels required when called: 8
 11220 ;; This function calls:
 11221 ;;		Nothing
 11222 ;; This function is called by:
 11223 ;;		_CCP3_Initialize
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227                           	psect	text64
 11228  004422                     __ptext64:
 11229                           	callstack 0
 11230  004422                     _CCP3_SetCallBack:
 11231                           	callstack 20
 11232  004422                     
 11233                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 11234  004422  C020  F0F4         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 11235  004426  C021  F0F5         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 11236  00442A  0012               	return		;funcret
 11237  00442C                     __end_of_CCP3_SetCallBack:
 11238                           	callstack 0
 11239                           
 11240 ;; *************** function _ADCC_Initialize *****************
 11241 ;; Defined at:
 11242 ;;		line 62 in file "mcc_generated_files/adcc.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;		None
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;		None
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  1    wreg      void 
 11249 ;; Registers used:
 11250 ;;		wreg, status,2
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11260 ;;Total ram usage:        0 bytes
 11261 ;; Hardware stack levels used: 1
 11262 ;; Hardware stack levels required when called: 8
 11263 ;; This function calls:
 11264 ;;		Nothing
 11265 ;; This function is called by:
 11266 ;;		_SYSTEM_Initialize
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text65
 11271  003A5E                     __ptext65:
 11272                           	callstack 0
 11273  003A5E                     _ADCC_Initialize:
 11274                           	callstack 21
 11275  003A5E                     
 11276                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 11277  003A5E  0E00               	movlw	0
 11278  003A60  013E               	movlb	62	; () banked
 11279  003A62  6FDE               	movwf	222,b	;volatile
 11280                           
 11281                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 11282  003A64  0E00               	movlw	0
 11283  003A66  6FDF               	movwf	223,b	;volatile
 11284                           
 11285                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 11286  003A68  0E00               	movlw	0
 11287  003A6A  6FE0               	movwf	224,b	;volatile
 11288                           
 11289                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 11290  003A6C  0E00               	movlw	0
 11291  003A6E  6FE1               	movwf	225,b	;volatile
 11292                           
 11293                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 11294  003A70  0E00               	movlw	0
 11295  003A72  6FE4               	movwf	228,b	;volatile
 11296                           
 11297                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 11298  003A74  0E00               	movlw	0
 11299  003A76  6FE5               	movwf	229,b	;volatile
 11300                           
 11301                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 11302  003A78  0E00               	movlw	0
 11303  003A7A  6FEA               	movwf	234,b	;volatile
 11304                           
 11305                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 11306  003A7C  0E00               	movlw	0
 11307  003A7E  6FEC               	movwf	236,b	;volatile
 11308                           
 11309                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 11310  003A80  0E00               	movlw	0
 11311  003A82  6FF1               	movwf	241,b	;volatile
 11312                           
 11313                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 11314  003A84  0E58               	movlw	88
 11315  003A86  6FF3               	movwf	243,b	;volatile
 11316                           
 11317                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 11318  003A88  0E02               	movlw	2
 11319  003A8A  6FF4               	movwf	244,b	;volatile
 11320                           
 11321                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 11322  003A8C  0E00               	movlw	0
 11323  003A8E  6FF5               	movwf	245,b	;volatile
 11324                           
 11325                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 11326  003A90  0E00               	movlw	0
 11327  003A92  6FF6               	movwf	246,b	;volatile
 11328                           
 11329                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 11330  003A94  0E00               	movlw	0
 11331  003A96  6FF7               	movwf	247,b	;volatile
 11332                           
 11333                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 11334  003A98  0E00               	movlw	0
 11335  003A9A  6FF9               	movwf	249,b	;volatile
 11336                           
 11337                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 11338  003A9C  0E00               	movlw	0
 11339  003A9E  6FFA               	movwf	250,b	;volatile
 11340                           
 11341                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 11342  003AA0  0E00               	movlw	0
 11343  003AA2  6FFB               	movwf	251,b	;volatile
 11344                           
 11345                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 11346  003AA4  0E00               	movlw	0
 11347  003AA6  6FFC               	movwf	252,b	;volatile
 11348                           
 11349                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 11350  003AA8  0E00               	movlw	0
 11351  003AAA  6FFD               	movwf	253,b	;volatile
 11352                           
 11353                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 11354  003AAC  0E00               	movlw	0
 11355  003AAE  6FFE               	movwf	254,b	;volatile
 11356                           
 11357                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 11358  003AB0  0E1F               	movlw	31
 11359  003AB2  6FFF               	movwf	255,b	;volatile
 11360                           
 11361                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 11362  003AB4  0E84               	movlw	132
 11363  003AB6  6FF8               	movwf	248,b	;volatile
 11364  003AB8                     
 11365                           ; BSR set to: 62
 11366  003AB8  0012               	return		;funcret
 11367  003ABA                     __end_of_ADCC_Initialize:
 11368                           	callstack 0
 11369                           
 11370 ;; *************** function _UART1_tx_vect_isr *****************
 11371 ;; Defined at:
 11372 ;;		line 235 in file "mcc_generated_files/uart1.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;		None
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;		None
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  1    wreg      void 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;Total ram usage:        3 bytes
 11391 ;; Hardware stack levels used: 1
 11392 ;; Hardware stack levels required when called: 5
 11393 ;; This function calls:
 11394 ;;		Absolute function
 11395 ;;		_UART1_Transmit_ISR
 11396 ;; This function is called by:
 11397 ;;		Interrupt level 1
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text66
 11402  003B10                     __ptext66:
 11403                           	callstack 0
 11404  003B10                     _UART1_tx_vect_isr:
 11405                           	callstack 13
 11406                           
 11407                           ; BSR set to: 62
 11408                           ;incstack = 0
 11409  003B10  006F FF60  F017    	movff	status,??_UART1_tx_vect_isr
 11410  003B16  006F FFE8  F018    	movff	pclath,??_UART1_tx_vect_isr+1
 11411  003B1C  006F FFEC  F019    	movff	pclatu,??_UART1_tx_vect_isr+2
 11412  003B22                     
 11413                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 11414  003B22  0100               	movlb	0	; () banked
 11415  003B24  51FC               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11416  003B26  11FD               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11417  003B28  B4D8               	btfsc	status,2,c
 11418  003B2A  EF99  F01D         	goto	i1u469_21
 11419  003B2E  EF9B  F01D         	goto	i1u469_20
 11420  003B32                     i1u469_21:
 11421  003B32  EFA7  F01D         	goto	i1l324
 11422  003B36                     i1u469_20:
 11423  003B36                     
 11424                           ; BSR set to: 0
 11425                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 11426  003B36  D802               	call	i1u470_28
 11427  003B38  EFA7  F01D         	goto	i1u470_29
 11428  003B3C                     i1u470_28:
 11429  003B3C  0005               	push	
 11430  003B3E  6EFA               	movwf	pclath,c
 11431  003B40  51FC               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11432  003B42  6EFD               	movwf	tosl,c
 11433  003B44  51FD               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11434  003B46  6EFE               	movwf	tosh,c
 11435  003B48  6AFF               	clrf	tosu,c
 11436  003B4A  50FA               	movf	pclath,w,c
 11437  003B4C  0012               	return		;indir
 11438  003B4E                     i1u470_29:
 11439  003B4E                     i1l324:
 11440  003B4E  0060  F067  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 11441  003B54  0060  F063  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 11442  003B5A  0060  F05F  FFD8   	movff	??_UART1_tx_vect_isr,status
 11443  003B60  0011               	retfie		f
 11444  003B62                     __end_of_UART1_tx_vect_isr:
 11445                           	callstack 0
 11446                           
 11447 ;; *************** function _UART1_Transmit_ISR *****************
 11448 ;; Defined at:
 11449 ;;		line 253 in file "mcc_generated_files/uart1.c"
 11450 ;; Parameters:    Size  Location     Type
 11451 ;;		None
 11452 ;; Auto vars:     Size  Location     Type
 11453 ;;		None
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  1    wreg      void 
 11456 ;; Registers used:
 11457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11467 ;;Total ram usage:        0 bytes
 11468 ;; Hardware stack levels used: 1
 11469 ;; Hardware stack levels required when called: 4
 11470 ;; This function calls:
 11471 ;;		Nothing
 11472 ;; This function is called by:
 11473 ;;		_UART1_Initialize
 11474 ;;		_UART1_tx_vect_isr
 11475 ;; This function uses a non-reentrant model
 11476 ;;
 11477                           
 11478                           	psect	text67
 11479  003E5E                     __ptext67:
 11480                           	callstack 0
 11481  003E5E                     _UART1_Transmit_ISR:
 11482                           	callstack 13
 11483  003E5E                     
 11484                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 11485  003E5E  0E08               	movlw	8
 11486  003E60  6040               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 11487  003E62  EF35  F01F         	goto	i1u449_21
 11488  003E66  EF37  F01F         	goto	i1u449_20
 11489  003E6A                     i1u449_21:
 11490  003E6A  EF4E  F01F         	goto	i1l333
 11491  003E6E                     i1u449_20:
 11492  003E6E                     
 11493                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 11494  003E6E  0EBE               	movlw	low _uart1TxBuffer
 11495  003E70  2438               	addwf	_uart1TxTail^0,w,c	;volatile
 11496  003E72  6ED9               	movwf	fsr2l,c
 11497  003E74  6ADA               	clrf	fsr2h,c
 11498  003E76  0E00               	movlw	high _uart1TxBuffer
 11499  003E78  22DA               	addwfc	fsr2h,f,c
 11500  003E7A  50DF               	movf	indf2,w,c
 11501  003E7C  013D               	movlb	61	; () banked
 11502  003E7E  6FEA               	movwf	234,b	;volatile
 11503  003E80                     
 11504                           ; BSR set to: 61
 11505  003E80  2A38               	incf	_uart1TxTail^0,f,c	;volatile
 11506  003E82                     
 11507                           ; BSR set to: 61
 11508                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 11509  003E82  0E07               	movlw	7
 11510  003E84  6438               	cpfsgt	_uart1TxTail^0,c	;volatile
 11511  003E86  EF47  F01F         	goto	i1u450_21
 11512  003E8A  EF49  F01F         	goto	i1u450_20
 11513  003E8E                     i1u450_21:
 11514  003E8E  EF4B  F01F         	goto	i1l5676
 11515  003E92                     i1u450_20:
 11516  003E92                     
 11517                           ; BSR set to: 61
 11518                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 11519  003E92  0E00               	movlw	0
 11520  003E94  6E38               	movwf	_uart1TxTail^0,c	;volatile
 11521  003E96                     i1l5676:
 11522                           
 11523                           ; BSR set to: 61
 11524                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 11525  003E96  2A40               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 11526                           
 11527                           ;mcc_generated_files/uart1.c: 264:     }
 11528  003E98  EF50  F01F         	goto	i1l336
 11529  003E9C                     i1l333:
 11530                           
 11531                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 11532  003E9C  0139               	movlb	57	; () banked
 11533  003E9E  9993               	bcf	147,4,b	;volatile
 11534  003EA0                     i1l336:
 11535  003EA0  0012               	return		;funcret
 11536  003EA2                     __end_of_UART1_Transmit_ISR:
 11537                           	callstack 0
 11538                           
 11539 ;; *************** function _UART1_rx_vect_isr *****************
 11540 ;; Defined at:
 11541 ;;		line 243 in file "mcc_generated_files/uart1.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;		None
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;		None
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  1    wreg      void 
 11548 ;; Registers used:
 11549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11550 ;; Tracked objects:
 11551 ;;		On entry : 0/0
 11552 ;;		On exit  : 0/0
 11553 ;;		Unchanged: 0/0
 11554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11557 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;Total ram usage:        3 bytes
 11560 ;; Hardware stack levels used: 1
 11561 ;; Hardware stack levels required when called: 7
 11562 ;; This function calls:
 11563 ;;		Absolute function
 11564 ;;		_UART1_Receive_ISR
 11565 ;; This function is called by:
 11566 ;;		Interrupt level 1
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570                           	psect	text68
 11571  003B64                     __ptext68:
 11572                           	callstack 0
 11573  003B64                     _UART1_rx_vect_isr:
 11574                           	callstack 11
 11575                           
 11576                           ;incstack = 0
 11577  003B64  006F FF60  F01A    	movff	status,??_UART1_rx_vect_isr
 11578  003B6A  006F FFE8  F01B    	movff	pclath,??_UART1_rx_vect_isr+1
 11579  003B70  006F FFEC  F01C    	movff	pclatu,??_UART1_rx_vect_isr+2
 11580  003B76                     
 11581                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 11582  003B76  0100               	movlb	0	; () banked
 11583  003B78  51FE               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 11584  003B7A  11FF               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 11585  003B7C  B4D8               	btfsc	status,2,c
 11586  003B7E  EFC3  F01D         	goto	i1u471_21
 11587  003B82  EFC5  F01D         	goto	i1u471_20
 11588  003B86                     i1u471_21:
 11589  003B86  EFD1  F01D         	goto	i1l330
 11590  003B8A                     i1u471_20:
 11591  003B8A                     
 11592                           ; BSR set to: 0
 11593                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 11594  003B8A  D802               	call	i1u472_28
 11595  003B8C  EFD1  F01D         	goto	i1u472_29
 11596  003B90                     i1u472_28:
 11597  003B90  0005               	push	
 11598  003B92  6EFA               	movwf	pclath,c
 11599  003B94  51FE               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 11600  003B96  6EFD               	movwf	tosl,c
 11601  003B98  51FF               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 11602  003B9A  6EFE               	movwf	tosh,c
 11603  003B9C  6AFF               	clrf	tosu,c
 11604  003B9E  50FA               	movf	pclath,w,c
 11605  003BA0  0012               	return		;indir
 11606  003BA2                     i1u472_29:
 11607  003BA2                     i1l330:
 11608  003BA2  0060  F073  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 11609  003BA8  0060  F06F  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 11610  003BAE  0060  F06B  FFD8   	movff	??_UART1_rx_vect_isr,status
 11611  003BB4  0011               	retfie		f
 11612  003BB6                     __end_of_UART1_rx_vect_isr:
 11613                           	callstack 0
 11614                           
 11615 ;; *************** function _UART1_Receive_ISR *****************
 11616 ;; Defined at:
 11617 ;;		line 273 in file "mcc_generated_files/uart1.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;Total ram usage:        0 bytes
 11636 ;; Hardware stack levels used: 1
 11637 ;; Hardware stack levels required when called: 6
 11638 ;; This function calls:
 11639 ;;		Absolute function
 11640 ;;		_UART1_DefaultErrorHandler
 11641 ;;		_UART1_DefaultFramingErrorHandler
 11642 ;;		_UART1_DefaultOverrunErrorHandler
 11643 ;;		_UART1_RxDataHandler
 11644 ;; This function is called by:
 11645 ;;		_UART1_Initialize
 11646 ;;		_UART1_rx_vect_isr
 11647 ;; This function uses a non-reentrant model
 11648 ;;
 11649                           
 11650                           	psect	text69
 11651  0035EC                     __ptext69:
 11652                           	callstack 0
 11653  0035EC                     _UART1_Receive_ISR:
 11654                           	callstack 11
 11655  0035EC                     
 11656                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 11657  0035EC  0EAE               	movlw	low _uart1RxStatusBuffer
 11658  0035EE  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 11659  0035F0  6ED9               	movwf	fsr2l,c
 11660  0035F2  6ADA               	clrf	fsr2h,c
 11661  0035F4  0E00               	movlw	high _uart1RxStatusBuffer
 11662  0035F6  22DA               	addwfc	fsr2h,f,c
 11663  0035F8  0E00               	movlw	0
 11664  0035FA  6EDF               	movwf	indf2,c
 11665  0035FC                     
 11666                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 11667  0035FC  013D               	movlb	61	; () banked
 11668  0035FE  A7F9               	btfss	249,3,b	;volatile
 11669  003600  EF04  F01B         	goto	i1u451_21
 11670  003604  EF06  F01B         	goto	i1u451_20
 11671  003608                     i1u451_21:
 11672  003608  EF1A  F01B         	goto	i1l5686
 11673  00360C                     i1u451_20:
 11674  00360C                     
 11675                           ; BSR set to: 61
 11676                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 11677  00360C  0EAE               	movlw	low _uart1RxStatusBuffer
 11678  00360E  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 11679  003610  6ED9               	movwf	fsr2l,c
 11680  003612  6ADA               	clrf	fsr2h,c
 11681  003614  0E00               	movlw	high _uart1RxStatusBuffer
 11682  003616  22DA               	addwfc	fsr2h,f,c
 11683  003618  0100               	movlb	0	; () banked
 11684  00361A  82DF               	bsf	indf2,1,c
 11685  00361C                     
 11686                           ; BSR set to: 0
 11687                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 11688  00361C  D802               	call	i1u452_28
 11689  00361E  EF1A  F01B         	goto	i1u452_29
 11690  003622                     i1u452_28:
 11691  003622  0005               	push	
 11692  003624  6EFA               	movwf	pclath,c
 11693  003626  51FA               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 11694  003628  6EFD               	movwf	tosl,c
 11695  00362A  51FB               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 11696  00362C  6EFE               	movwf	tosh,c
 11697  00362E  6AFF               	clrf	tosu,c
 11698  003630  50FA               	movf	pclath,w,c
 11699  003632  0012               	return		;indir
 11700  003634                     i1u452_29:
 11701  003634                     i1l5686:
 11702                           
 11703                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 11704  003634  013D               	movlb	61	; () banked
 11705  003636  A3F9               	btfss	249,1,b	;volatile
 11706  003638  EF20  F01B         	goto	i1u453_21
 11707  00363C  EF22  F01B         	goto	i1u453_20
 11708  003640                     i1u453_21:
 11709  003640  EF36  F01B         	goto	i1l5692
 11710  003644                     i1u453_20:
 11711  003644                     
 11712                           ; BSR set to: 61
 11713                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 11714  003644  0EAE               	movlw	low _uart1RxStatusBuffer
 11715  003646  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 11716  003648  6ED9               	movwf	fsr2l,c
 11717  00364A  6ADA               	clrf	fsr2h,c
 11718  00364C  0E00               	movlw	high _uart1RxStatusBuffer
 11719  00364E  22DA               	addwfc	fsr2h,f,c
 11720  003650  0100               	movlb	0	; () banked
 11721  003652  84DF               	bsf	indf2,2,c
 11722  003654                     
 11723                           ; BSR set to: 0
 11724                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 11725  003654  D802               	call	i1u454_28
 11726  003656  EF36  F01B         	goto	i1u454_29
 11727  00365A                     i1u454_28:
 11728  00365A  0005               	push	
 11729  00365C  6EFA               	movwf	pclath,c
 11730  00365E  51F8               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 11731  003660  6EFD               	movwf	tosl,c
 11732  003662  51F9               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 11733  003664  6EFE               	movwf	tosh,c
 11734  003666  6AFF               	clrf	tosu,c
 11735  003668  50FA               	movf	pclath,w,c
 11736  00366A  0012               	return		;indir
 11737  00366C                     i1u454_29:
 11738  00366C                     i1l5692:
 11739                           
 11740                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 11741  00366C  0EAE               	movlw	low _uart1RxStatusBuffer
 11742  00366E  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 11743  003670  6ED9               	movwf	fsr2l,c
 11744  003672  6ADA               	clrf	fsr2h,c
 11745  003674  0E00               	movlw	high _uart1RxStatusBuffer
 11746  003676  22DA               	addwfc	fsr2h,f,c
 11747  003678  50DF               	movf	indf2,w,c
 11748  00367A  B4D8               	btfsc	status,2,c
 11749  00367C  EF42  F01B         	goto	i1u455_21
 11750  003680  EF44  F01B         	goto	i1u455_20
 11751  003684                     i1u455_21:
 11752  003684  EF53  F01B         	goto	i1l5696
 11753  003688                     i1u455_20:
 11754  003688                     
 11755                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 11756  003688  D802               	call	i1u456_28
 11757  00368A  EF51  F01B         	goto	i1u456_29
 11758  00368E                     i1u456_28:
 11759  00368E  0005               	push	
 11760  003690  6EFA               	movwf	pclath,c
 11761  003692  0100               	movlb	0	; () banked
 11762  003694  51F6               	movf	_UART1_ErrorHandler& (0+255),w,b
 11763  003696  6EFD               	movwf	tosl,c
 11764  003698  51F7               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 11765  00369A  6EFE               	movwf	tosh,c
 11766  00369C  6AFF               	clrf	tosu,c
 11767  00369E  50FA               	movf	pclath,w,c
 11768  0036A0  0012               	return		;indir
 11769  0036A2                     i1u456_29:
 11770                           
 11771                           ;mcc_generated_files/uart1.c: 290:     } else {
 11772  0036A2  EF55  F01B         	goto	i1l343
 11773  0036A6                     i1l5696:
 11774                           
 11775                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 11776  0036A6  ECEA  F020         	call	_UART1_RxDataHandler	;wreg free
 11777  0036AA                     i1l343:
 11778  0036AA  0012               	return		;funcret
 11779  0036AC                     __end_of_UART1_Receive_ISR:
 11780                           	callstack 0
 11781                           
 11782 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 11783 ;; Defined at:
 11784 ;;		line 309 in file "mcc_generated_files/uart1.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;		None
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;		None
 11789 ;; Return value:  Size  Location     Type
 11790 ;;                  1    wreg      void 
 11791 ;; Registers used:
 11792 ;;		None
 11793 ;; Tracked objects:
 11794 ;;		On entry : 0/0
 11795 ;;		On exit  : 0/0
 11796 ;;		Unchanged: 0/0
 11797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11802 ;;Total ram usage:        0 bytes
 11803 ;; Hardware stack levels used: 1
 11804 ;; Hardware stack levels required when called: 4
 11805 ;; This function calls:
 11806 ;;		Nothing
 11807 ;; This function is called by:
 11808 ;;		_UART1_Initialize
 11809 ;;		_UART1_Receive_ISR
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           	psect	text70
 11814  004436                     __ptext70:
 11815                           	callstack 0
 11816  004436                     _UART1_DefaultOverrunErrorHandler:
 11817                           	callstack 12
 11818  004436  0012               	return		;funcret
 11819  004438                     __end_of_UART1_DefaultOverrunErrorHandler:
 11820                           	callstack 0
 11821                           
 11822 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 11823 ;; Defined at:
 11824 ;;		line 307 in file "mcc_generated_files/uart1.c"
 11825 ;; Parameters:    Size  Location     Type
 11826 ;;		None
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;		None
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  1    wreg      void 
 11831 ;; Registers used:
 11832 ;;		None
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11842 ;;Total ram usage:        0 bytes
 11843 ;; Hardware stack levels used: 1
 11844 ;; Hardware stack levels required when called: 4
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_UART1_Initialize
 11849 ;;		_UART1_Receive_ISR
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           	psect	text71
 11854  004438                     __ptext71:
 11855                           	callstack 0
 11856  004438                     _UART1_DefaultFramingErrorHandler:
 11857                           	callstack 12
 11858  004438  0012               	return		;funcret
 11859  00443A                     __end_of_UART1_DefaultFramingErrorHandler:
 11860                           	callstack 0
 11861                           
 11862 ;; *************** function _UART1_DefaultErrorHandler *****************
 11863 ;; Defined at:
 11864 ;;		line 311 in file "mcc_generated_files/uart1.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;		None
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;		None
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  1    wreg      void 
 11871 ;; Registers used:
 11872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11882 ;;Total ram usage:        0 bytes
 11883 ;; Hardware stack levels used: 1
 11884 ;; Hardware stack levels required when called: 5
 11885 ;; This function calls:
 11886 ;;		_UART1_RxDataHandler
 11887 ;; This function is called by:
 11888 ;;		_UART1_Initialize
 11889 ;;		_UART1_Receive_ISR
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           	psect	text72
 11894  00442C                     __ptext72:
 11895                           	callstack 0
 11896  00442C                     _UART1_DefaultErrorHandler:
 11897                           	callstack 11
 11898  00442C                     
 11899                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 11900  00442C  ECEA  F020         	call	_UART1_RxDataHandler	;wreg free
 11901  004430  0012               	return		;funcret
 11902  004432                     __end_of_UART1_DefaultErrorHandler:
 11903                           	callstack 0
 11904                           
 11905 ;; *************** function _UART1_RxDataHandler *****************
 11906 ;; Defined at:
 11907 ;;		line 297 in file "mcc_generated_files/uart1.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;		None
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;		None
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  1    wreg      void 
 11914 ;; Registers used:
 11915 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11916 ;; Tracked objects:
 11917 ;;		On entry : 0/0
 11918 ;;		On exit  : 0/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11925 ;;Total ram usage:        0 bytes
 11926 ;; Hardware stack levels used: 1
 11927 ;; Hardware stack levels required when called: 4
 11928 ;; This function calls:
 11929 ;;		Nothing
 11930 ;; This function is called by:
 11931 ;;		_UART1_Receive_ISR
 11932 ;;		_UART1_DefaultErrorHandler
 11933 ;; This function uses a non-reentrant model
 11934 ;;
 11935                           
 11936                           	psect	text73
 11937  0041D4                     __ptext73:
 11938                           	callstack 0
 11939  0041D4                     _UART1_RxDataHandler:
 11940                           	callstack 12
 11941  0041D4                     
 11942                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 11943  0041D4  0EB6               	movlw	low _uart1RxBuffer
 11944  0041D6  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 11945  0041D8  6ED9               	movwf	fsr2l,c
 11946  0041DA  6ADA               	clrf	fsr2h,c
 11947  0041DC  0E00               	movlw	high _uart1RxBuffer
 11948  0041DE  22DA               	addwfc	fsr2h,f,c
 11949  0041E0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 11950  0041E6  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 11951  0041E8                     
 11952                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 11953  0041E8  0E07               	movlw	7
 11954  0041EA  6437               	cpfsgt	_uart1RxHead^0,c	;volatile
 11955  0041EC  EFFA  F020         	goto	i1u290_21
 11956  0041F0  EFFC  F020         	goto	i1u290_20
 11957  0041F4                     i1u290_21:
 11958  0041F4  EFFE  F020         	goto	i1l4544
 11959  0041F8                     i1u290_20:
 11960  0041F8                     
 11961                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 11962  0041F8  0E00               	movlw	0
 11963  0041FA  6E37               	movwf	_uart1RxHead^0,c	;volatile
 11964  0041FC                     i1l4544:
 11965                           
 11966                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 11967  0041FC  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 11968  0041FE  0012               	return		;funcret
 11969  004200                     __end_of_UART1_RxDataHandler:
 11970                           	callstack 0
 11971                           
 11972 ;; *************** function _TMR4_ISR *****************
 11973 ;; Defined at:
 11974 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;		None
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;		None
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11990 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11991 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11992 ;;Total ram usage:        3 bytes
 11993 ;; Hardware stack levels used: 1
 11994 ;; Hardware stack levels required when called: 6
 11995 ;; This function calls:
 11996 ;;		_TMR4_CallBack
 11997 ;; This function is called by:
 11998 ;;		Interrupt level 1
 11999 ;; This function uses a non-reentrant model
 12000 ;;
 12001                           
 12002                           	psect	text74
 12003  003BB8                     __ptext74:
 12004                           	callstack 0
 12005  003BB8                     _TMR4_ISR:
 12006                           	callstack 12
 12007                           
 12008                           ;incstack = 0
 12009  003BB8  006F FF60  F01D    	movff	status,??_TMR4_ISR
 12010  003BBE  006F FFE8  F01E    	movff	pclath,??_TMR4_ISR+1
 12011  003BC4  006F FFEC  F01F    	movff	pclatu,??_TMR4_ISR+2
 12012  003BCA                     
 12013                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 12014  003BCA  0139               	movlb	57	; () banked
 12015  003BCC  91A7               	bcf	167,0,b	;volatile
 12016  003BCE                     
 12017                           ; BSR set to: 57
 12018                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 12019  003BCE  4A2A               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 12020  003BD0  2A2B               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 12021  003BD2  502B               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 12022  003BD4  E109               	bnz	i1u477_20
 12023  003BD6  0E0A               	movlw	10
 12024  003BD8  5C2A               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 12025  003BDA  A0D8               	btfss	status,0,c
 12026  003BDC  EFF2  F01D         	goto	i1u477_21
 12027  003BE0  EFF4  F01D         	goto	i1u477_20
 12028  003BE4                     i1u477_21:
 12029  003BE4  EFFA  F01D         	goto	i1l688
 12030  003BE8                     i1u477_20:
 12031  003BE8                     
 12032                           ; BSR set to: 57
 12033                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 12034  003BE8  ECA7  F020         	call	_TMR4_CallBack	;wreg free
 12035  003BEC                     
 12036                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 12037  003BEC  0E00               	movlw	0
 12038  003BEE  6E2B               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 12039  003BF0  0E00               	movlw	0
 12040  003BF2  6E2A               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 12041  003BF4                     i1l688:
 12042  003BF4  0060  F07F  FFFB   	movff	??_TMR4_ISR+2,pclatu
 12043  003BFA  0060  F07B  FFFA   	movff	??_TMR4_ISR+1,pclath
 12044  003C00  0060  F077  FFD8   	movff	??_TMR4_ISR,status
 12045  003C06  0011               	retfie		f
 12046  003C08                     __end_of_TMR4_ISR:
 12047                           	callstack 0
 12048                           
 12049 ;; *************** function _TMR4_CallBack *****************
 12050 ;; Defined at:
 12051 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;		None
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;		None
 12056 ;; Return value:  Size  Location     Type
 12057 ;;                  1    wreg      void 
 12058 ;; Registers used:
 12059 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;Total ram usage:        0 bytes
 12070 ;; Hardware stack levels used: 1
 12071 ;; Hardware stack levels required when called: 5
 12072 ;; This function calls:
 12073 ;;		Absolute function
 12074 ;;		_TMR4_10msISR
 12075 ;;		_TMR4_DefaultInterruptHandler
 12076 ;; This function is called by:
 12077 ;;		_TMR4_ISR
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081                           	psect	text75
 12082  00414E                     __ptext75:
 12083                           	callstack 0
 12084  00414E                     _TMR4_CallBack:
 12085                           	callstack 12
 12086  00414E                     
 12087                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 12088  00414E  0100               	movlb	0	; () banked
 12089  004150  51EA               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12090  004152  11EB               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12091  004154  B4D8               	btfsc	status,2,c
 12092  004156  EFAF  F020         	goto	i1u460_21
 12093  00415A  EFB1  F020         	goto	i1u460_20
 12094  00415E                     i1u460_21:
 12095  00415E  EFBD  F020         	goto	i1l692
 12096  004162                     i1u460_20:
 12097  004162                     
 12098                           ; BSR set to: 0
 12099                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 12100  004162  D802               	call	i1u461_28
 12101  004164  EFBD  F020         	goto	i1u461_29
 12102  004168                     i1u461_28:
 12103  004168  0005               	push	
 12104  00416A  6EFA               	movwf	pclath,c
 12105  00416C  51EA               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12106  00416E  6EFD               	movwf	tosl,c
 12107  004170  51EB               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12108  004172  6EFE               	movwf	tosh,c
 12109  004174  6AFF               	clrf	tosu,c
 12110  004176  50FA               	movf	pclath,w,c
 12111  004178  0012               	return		;indir
 12112  00417A                     i1u461_29:
 12113  00417A                     i1l692:
 12114  00417A  0012               	return		;funcret
 12115  00417C                     __end_of_TMR4_CallBack:
 12116                           	callstack 0
 12117                           
 12118 ;; *************** function _TMR4_10msISR *****************
 12119 ;; Defined at:
 12120 ;;		line 67 in file "main.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;		None
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;		None
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  1    wreg      void 
 12127 ;; Registers used:
 12128 ;;		status,2, status,0
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;Total ram usage:        0 bytes
 12139 ;; Hardware stack levels used: 1
 12140 ;; Hardware stack levels required when called: 4
 12141 ;; This function calls:
 12142 ;;		Nothing
 12143 ;; This function is called by:
 12144 ;;		_main
 12145 ;;		_TMR4_CallBack
 12146 ;; This function uses a non-reentrant model
 12147 ;;
 12148                           
 12149                           	psect	text76
 12150  004432                     __ptext76:
 12151                           	callstack 0
 12152  004432                     _TMR4_10msISR:
 12153                           	callstack 12
 12154  004432                     
 12155                           ;main.c: 68:     ++cycle10ms;
 12156  004432  2A31               	incf	_cycle10ms^0,f,c	;volatile
 12157  004434  0012               	return		;funcret
 12158  004436                     __end_of_TMR4_10msISR:
 12159                           	callstack 0
 12160                           
 12161 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 12162 ;; Defined at:
 12163 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;		None
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;		None
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  1    wreg      void 
 12170 ;; Registers used:
 12171 ;;		None
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;Total ram usage:        0 bytes
 12182 ;; Hardware stack levels used: 1
 12183 ;; Hardware stack levels required when called: 4
 12184 ;; This function calls:
 12185 ;;		Nothing
 12186 ;; This function is called by:
 12187 ;;		_TMR4_Initialize
 12188 ;;		_TMR4_CallBack
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           	psect	text77
 12193  00443A                     __ptext77:
 12194                           	callstack 0
 12195  00443A                     _TMR4_DefaultInterruptHandler:
 12196                           	callstack 12
 12197  00443A  0012               	return		;funcret
 12198  00443C                     __end_of_TMR4_DefaultInterruptHandler:
 12199                           	callstack 0
 12200                           
 12201 ;; *************** function _Default_ISR *****************
 12202 ;; Defined at:
 12203 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;		None
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;		None
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  1    wreg      void 
 12210 ;; Registers used:
 12211 ;;		None
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12221 ;;Total ram usage:        0 bytes
 12222 ;; Hardware stack levels used: 1
 12223 ;; This function calls:
 12224 ;;		Nothing
 12225 ;; This function is called by:
 12226 ;;		Interrupt level 2
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           	psect	text78
 12231  00443C                     __ptext78:
 12232                           	callstack 0
 12233  00443C                     _Default_ISR:
 12234                           	callstack 14
 12235  00443C  0011               	retfie		f
 12236  00443E                     __end_of_Default_ISR:
 12237                           	callstack 0
 12238                           
 12239 ;; *************** function _CCP3_CaptureISR *****************
 12240 ;; Defined at:
 12241 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;		None
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;  module          2    4[COMRAM] struct CCPR3Reg_tag
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  1    wreg      void 
 12248 ;; Registers used:
 12249 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12257 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12259 ;;Total ram usage:        4 bytes
 12260 ;; Hardware stack levels used: 1
 12261 ;; Hardware stack levels required when called: 1
 12262 ;; This function calls:
 12263 ;;		Absolute function
 12264 ;;		_CCP3_DefaultCallBack
 12265 ;; This function is called by:
 12266 ;;		Interrupt level 2
 12267 ;; This function uses a non-reentrant model
 12268 ;;
 12269                           
 12270                           	psect	text79
 12271  003C54                     __ptext79:
 12272                           	callstack 0
 12273  003C54                     _CCP3_CaptureISR:
 12274                           	callstack 13
 12275                           
 12276                           ;incstack = 0
 12277  003C54  006F FFE8  F003    	movff	pclath,??_CCP3_CaptureISR
 12278  003C5A  006F FFEC  F004    	movff	pclatu,??_CCP3_CaptureISR+1
 12279  003C60                     
 12280                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 12281  003C60  0139               	movlb	57	; () banked
 12282  003C62  93A9               	bcf	169,1,b	;volatile
 12283                           
 12284                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 12285  003C64  006F FDD0  F005    	movff	16244,CCP3_CaptureISR@module	;volatile
 12286                           
 12287                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 12288  003C6A  006F FDD4  F006    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 12289  003C70                     
 12290                           ; BSR set to: 57
 12291                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 12292  003C70  C005  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 12293  003C74  C006  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 12294  003C78  D802               	call	i2u473_48
 12295  003C7A  EF49  F01E         	goto	i2u473_49
 12296  003C7E                     i2u473_48:
 12297  003C7E  0005               	push	
 12298  003C80  6EFA               	movwf	pclath,c
 12299  003C82  0100               	movlb	0	; () banked
 12300  003C84  51F4               	movf	_CCP3_CallBack& (0+255),w,b
 12301  003C86  6EFD               	movwf	tosl,c
 12302  003C88  51F5               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 12303  003C8A  6EFE               	movwf	tosh,c
 12304  003C8C  6AFF               	clrf	tosu,c
 12305  003C8E  50FA               	movf	pclath,w,c
 12306  003C90  0012               	return		;indir
 12307  003C92                     i2u473_49:
 12308  003C92  0060  F013  FFFB   	movff	??_CCP3_CaptureISR+1,pclatu
 12309  003C98  0060  F00F  FFFA   	movff	??_CCP3_CaptureISR,pclath
 12310  003C9E  0011               	retfie		f
 12311  003CA0                     __end_of_CCP3_CaptureISR:
 12312                           	callstack 0
 12313                           
 12314 ;; *************** function _CCP3_DefaultCallBack *****************
 12315 ;; Defined at:
 12316 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;  capturedValu    2    0[COMRAM] unsigned short 
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;		None
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		wreg, status,2, status,0
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12334 ;;Total ram usage:        2 bytes
 12335 ;; Hardware stack levels used: 1
 12336 ;; This function calls:
 12337 ;;		Nothing
 12338 ;; This function is called by:
 12339 ;;		_CCP3_Initialize
 12340 ;;		_CCP3_CaptureISR
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text80
 12345  004092                     __ptext80:
 12346                           	callstack 0
 12347  004092                     _CCP3_DefaultCallBack:
 12348                           	callstack 13
 12349  004092                     
 12350                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 12351  004092  AECD               	btfss	205,7,c	;volatile
 12352  004094  EF4E  F020         	goto	i2u457_41
 12353  004098  EF50  F020         	goto	i2u457_40
 12354  00409C                     i2u457_41:
 12355  00409C  EF56  F020         	goto	i2l5702
 12356  0040A0                     i2u457_40:
 12357  0040A0                     
 12358                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 12359  0040A0  C001  F0E8         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 12360  0040A4  C002  F0E9         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 12361                           
 12362                           ;mcc_generated_files/ccp3.c: 69:     } else {
 12363  0040A8  EF60  F020         	goto	i2l438
 12364  0040AC                     i2l5702:
 12365                           
 12366                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 12367  0040AC  0100               	movlb	0	; () banked
 12368  0040AE  51E8               	movf	_distLeftM& (0+255),w,b
 12369  0040B0  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 12370  0040B2  6E2E               	movwf	_distLeft^0,c	;volatile
 12371  0040B4  51E9               	movf	(_distLeftM+1)& (0+255),w,b
 12372  0040B6  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 12373  0040B8  6E2F               	movwf	(_distLeft+1)^0,c	;volatile
 12374  0040BA                     
 12375                           ; BSR set to: 0
 12376                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 12377  0040BA  90D8               	bcf	status,0,c
 12378  0040BC  322F               	rrcf	(_distLeft+1)^0,f,c	;volatile
 12379  0040BE  322E               	rrcf	_distLeft^0,f,c	;volatile
 12380  0040C0                     i2l438:
 12381  0040C0  0012               	return		;funcret
 12382  0040C2                     __end_of_CCP3_DefaultCallBack:
 12383                           	callstack 0
 12384                           
 12385 ;; *************** function _CCP4_CaptureISR *****************
 12386 ;; Defined at:
 12387 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;		None
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;  module          2   10[COMRAM] struct CCPR4Reg_tag
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  1    wreg      void 
 12394 ;; Registers used:
 12395 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/0
 12398 ;;		On exit  : 0/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12404 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12405 ;;Total ram usage:        4 bytes
 12406 ;; Hardware stack levels used: 1
 12407 ;; Hardware stack levels required when called: 1
 12408 ;; This function calls:
 12409 ;;		Absolute function
 12410 ;;		_CCP4_DefaultCallBack
 12411 ;; This function is called by:
 12412 ;;		Interrupt level 2
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416                           	psect	text81
 12417  003CA0                     __ptext81:
 12418                           	callstack 0
 12419  003CA0                     _CCP4_CaptureISR:
 12420                           	callstack 13
 12421                           
 12422                           ;incstack = 0
 12423  003CA0  006F FFE8  F009    	movff	pclath,??_CCP4_CaptureISR
 12424  003CA6  006F FFEC  F00A    	movff	pclatu,??_CCP4_CaptureISR+1
 12425  003CAC                     
 12426                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 12427  003CAC  0139               	movlb	57	; () banked
 12428  003CAE  91AA               	bcf	170,0,b	;volatile
 12429                           
 12430                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 12431  003CB0  006F FDC0  F00B    	movff	16240,CCP4_CaptureISR@module	;volatile
 12432                           
 12433                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 12434  003CB6  006F FDC4  F00C    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 12435  003CBC                     
 12436                           ; BSR set to: 57
 12437                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 12438  003CBC  C00B  F007         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 12439  003CC0  C00C  F008         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 12440  003CC4  D802               	call	i2u474_48
 12441  003CC6  EF6F  F01E         	goto	i2u474_49
 12442  003CCA                     i2u474_48:
 12443  003CCA  0005               	push	
 12444  003CCC  6EFA               	movwf	pclath,c
 12445  003CCE  0100               	movlb	0	; () banked
 12446  003CD0  51F2               	movf	_CCP4_CallBack& (0+255),w,b
 12447  003CD2  6EFD               	movwf	tosl,c
 12448  003CD4  51F3               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 12449  003CD6  6EFE               	movwf	tosh,c
 12450  003CD8  6AFF               	clrf	tosu,c
 12451  003CDA  50FA               	movf	pclath,w,c
 12452  003CDC  0012               	return		;indir
 12453  003CDE                     i2u474_49:
 12454  003CDE  0060  F02B  FFFB   	movff	??_CCP4_CaptureISR+1,pclatu
 12455  003CE4  0060  F027  FFFA   	movff	??_CCP4_CaptureISR,pclath
 12456  003CEA  0011               	retfie		f
 12457  003CEC                     __end_of_CCP4_CaptureISR:
 12458                           	callstack 0
 12459                           
 12460 ;; *************** function _CCP4_DefaultCallBack *****************
 12461 ;; Defined at:
 12462 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 12463 ;; Parameters:    Size  Location     Type
 12464 ;;  capturedValu    2    6[COMRAM] unsigned short 
 12465 ;; Auto vars:     Size  Location     Type
 12466 ;;		None
 12467 ;; Return value:  Size  Location     Type
 12468 ;;                  1    wreg      void 
 12469 ;; Registers used:
 12470 ;;		wreg, status,2, status,0
 12471 ;; Tracked objects:
 12472 ;;		On entry : 0/0
 12473 ;;		On exit  : 0/0
 12474 ;;		Unchanged: 0/0
 12475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12480 ;;Total ram usage:        2 bytes
 12481 ;; Hardware stack levels used: 1
 12482 ;; This function calls:
 12483 ;;		Nothing
 12484 ;; This function is called by:
 12485 ;;		_CCP4_Initialize
 12486 ;;		_CCP4_CaptureISR
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           	psect	text82
 12491  0040C2                     __ptext82:
 12492                           	callstack 0
 12493  0040C2                     _CCP4_DefaultCallBack:
 12494                           	callstack 13
 12495  0040C2                     
 12496                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 12497  0040C2  ACCD               	btfss	205,6,c	;volatile
 12498  0040C4  EF66  F020         	goto	i2u458_41
 12499  0040C8  EF68  F020         	goto	i2u458_40
 12500  0040CC                     i2u458_41:
 12501  0040CC  EF6E  F020         	goto	i2l5710
 12502  0040D0                     i2u458_40:
 12503  0040D0                     
 12504                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 12505  0040D0  C007  F0E6         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 12506  0040D4  C008  F0E7         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 12507                           
 12508                           ;mcc_generated_files/ccp4.c: 70:     } else {
 12509  0040D8  EF78  F020         	goto	i2l476
 12510  0040DC                     i2l5710:
 12511                           
 12512                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 12513  0040DC  0100               	movlb	0	; () banked
 12514  0040DE  51E6               	movf	_distRightM& (0+255),w,b
 12515  0040E0  5C07               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 12516  0040E2  6E2C               	movwf	_distRight^0,c	;volatile
 12517  0040E4  51E7               	movf	(_distRightM+1)& (0+255),w,b
 12518  0040E6  5808               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 12519  0040E8  6E2D               	movwf	(_distRight+1)^0,c	;volatile
 12520  0040EA                     
 12521                           ; BSR set to: 0
 12522                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 12523  0040EA  90D8               	bcf	status,0,c
 12524  0040EC  322D               	rrcf	(_distRight+1)^0,f,c	;volatile
 12525  0040EE  322C               	rrcf	_distRight^0,f,c	;volatile
 12526  0040F0                     i2l476:
 12527  0040F0  0012               	return		;funcret
 12528  0040F2                     __end_of_CCP4_DefaultCallBack:
 12529                           	callstack 0
 12530                           
 12531 ;; *************** function _TMR5_GATE_ISR *****************
 12532 ;; Defined at:
 12533 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;		None
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;		None
 12538 ;; Return value:  Size  Location     Type
 12539 ;;                  1    wreg      void 
 12540 ;; Registers used:
 12541 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12542 ;; Tracked objects:
 12543 ;;		On entry : 0/0
 12544 ;;		On exit  : 0/0
 12545 ;;		Unchanged: 0/0
 12546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;Total ram usage:        2 bytes
 12552 ;; Hardware stack levels used: 1
 12553 ;; Hardware stack levels required when called: 3
 12554 ;; This function calls:
 12555 ;;		Absolute function
 12556 ;;		_TMR5_DefaultGateInterruptHandler
 12557 ;; This function is called by:
 12558 ;;		Interrupt level 2
 12559 ;; This function uses a non-reentrant model
 12560 ;;
 12561                           
 12562                           	psect	text83
 12563  003D80                     __ptext83:
 12564                           	callstack 0
 12565  003D80                     _TMR5_GATE_ISR:
 12566                           	callstack 11
 12567                           
 12568                           ;incstack = 0
 12569  003D80  006F FFE8  F015    	movff	pclath,??_TMR5_GATE_ISR
 12570  003D86  006F FFEC  F016    	movff	pclatu,??_TMR5_GATE_ISR+1
 12571  003D8C                     
 12572                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 12573  003D8C  0139               	movlb	57	; () banked
 12574  003D8E  9FA8               	bcf	168,7,b	;volatile
 12575  003D90                     
 12576                           ; BSR set to: 57
 12577                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 12578  003D90  0100               	movlb	0	; () banked
 12579  003D92  51EE               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 12580  003D94  11EF               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 12581  003D96  B4D8               	btfsc	status,2,c
 12582  003D98  EFD0  F01E         	goto	i2u475_41
 12583  003D9C  EFD2  F01E         	goto	i2u475_40
 12584  003DA0                     i2u475_41:
 12585  003DA0  EFDE  F01E         	goto	i2l552
 12586  003DA4                     i2u475_40:
 12587  003DA4                     
 12588                           ; BSR set to: 0
 12589                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 12590  003DA4  D802               	call	i2u476_48
 12591  003DA6  EFDE  F01E         	goto	i2u476_49
 12592  003DAA                     i2u476_48:
 12593  003DAA  0005               	push	
 12594  003DAC  6EFA               	movwf	pclath,c
 12595  003DAE  51EE               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 12596  003DB0  6EFD               	movwf	tosl,c
 12597  003DB2  51EF               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 12598  003DB4  6EFE               	movwf	tosh,c
 12599  003DB6  6AFF               	clrf	tosu,c
 12600  003DB8  50FA               	movf	pclath,w,c
 12601  003DBA  0012               	return		;indir
 12602  003DBC                     i2u476_49:
 12603  003DBC                     i2l552:
 12604  003DBC  0060  F05B  FFFB   	movff	??_TMR5_GATE_ISR+1,pclatu
 12605  003DC2  0060  F057  FFFA   	movff	??_TMR5_GATE_ISR,pclath
 12606  003DC8  0011               	retfie		f
 12607  003DCA                     __end_of_TMR5_GATE_ISR:
 12608                           	callstack 0
 12609                           
 12610 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 12611 ;; Defined at:
 12612 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;		None
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;		None
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  1    wreg      void 
 12619 ;; Registers used:
 12620 ;;		wreg, status,2, status,0, cstack
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;Total ram usage:        0 bytes
 12631 ;; Hardware stack levels used: 1
 12632 ;; Hardware stack levels required when called: 2
 12633 ;; This function calls:
 12634 ;;		_TMR5_ReadTimer
 12635 ;;		_TMR5_Reload
 12636 ;; This function is called by:
 12637 ;;		_TMR5_Initialize
 12638 ;;		_TMR5_GATE_ISR
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text84
 12643  004326                     __ptext84:
 12644                           	callstack 0
 12645  004326                     _TMR5_DefaultGateInterruptHandler:
 12646                           	callstack 11
 12647  004326                     
 12648                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 12649  004326  EC63  F021         	call	_TMR5_ReadTimer	;wreg free
 12650  00432A  C00D  F03E         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 12651  00432E  C00E  F03F         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 12652  004332                     
 12653                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 12654  004332  90D8               	bcf	status,0,c
 12655  004334  323F               	rrcf	(_distFront+1)^0,f,c	;volatile
 12656  004336  323E               	rrcf	_distFront^0,f,c	;volatile
 12657  004338                     
 12658                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 12659  004338  ECDD  F021         	call	_TMR5_Reload	;wreg free
 12660  00433C                     
 12661                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 12662  00433C  0139               	movlb	57	; () banked
 12663  00433E  9FA8               	bcf	168,7,b	;volatile
 12664  004340                     
 12665                           ; BSR set to: 57
 12666  004340  0012               	return		;funcret
 12667  004342                     __end_of_TMR5_DefaultGateInterruptHandler:
 12668                           	callstack 0
 12669                           
 12670 ;; *************** function _TMR5_Reload *****************
 12671 ;; Defined at:
 12672 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;		None
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;		None
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1    wreg      void 
 12679 ;; Registers used:
 12680 ;;		wreg, status,2, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;Total ram usage:        0 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 1
 12693 ;; This function calls:
 12694 ;;		_TMR5_WriteTimer
 12695 ;; This function is called by:
 12696 ;;		_TMR5_DefaultGateInterruptHandler
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text85
 12701  0043BA                     __ptext85:
 12702                           	callstack 0
 12703  0043BA                     _TMR5_Reload:
 12704                           	callstack 11
 12705  0043BA                     
 12706                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 12707  0043BA  C0F0  F00D         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 12708  0043BE  C0F1  F00E         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 12709  0043C2  EC00  F021         	call	_TMR5_WriteTimer	;wreg free
 12710  0043C6  0012               	return		;funcret
 12711  0043C8                     __end_of_TMR5_Reload:
 12712                           	callstack 0
 12713                           
 12714 ;; *************** function _TMR5_WriteTimer *****************
 12715 ;; Defined at:
 12716 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;  timerVal        2   12[COMRAM] unsigned short 
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;		None
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      void 
 12723 ;; Registers used:
 12724 ;;		wreg, status,2
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12734 ;;Total ram usage:        2 bytes
 12735 ;; Hardware stack levels used: 1
 12736 ;; This function calls:
 12737 ;;		Nothing
 12738 ;; This function is called by:
 12739 ;;		_TMR5_Reload
 12740 ;; This function uses a non-reentrant model
 12741 ;;
 12742                           
 12743                           	psect	text86
 12744  004200                     __ptext86:
 12745                           	callstack 0
 12746  004200                     _TMR5_WriteTimer:
 12747                           	callstack 11
 12748  004200                     
 12749                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 12750  004200  A49A               	btfss	154,2,c	;volatile
 12751  004202  EF05  F021         	goto	i2u291_41
 12752  004206  EF07  F021         	goto	i2u291_40
 12753  00420A                     i2u291_41:
 12754  00420A  EF10  F021         	goto	i2l4562
 12755  00420E                     i2u291_40:
 12756  00420E                     
 12757                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 12758  00420E  909A               	bcf	154,0,c	;volatile
 12759  004210                     
 12760                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 12761  004210  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12762  004212  6E99               	movwf	153,c	;volatile
 12763  004214                     
 12764                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 12765  004214  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12766  00421A                     
 12767                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 12768  00421A  809A               	bsf	154,0,c	;volatile
 12769                           
 12770                           ;mcc_generated_files/tmr5.c: 146:     }
 12771  00421C  EF15  F021         	goto	i2l534
 12772  004220                     i2l4562:
 12773                           
 12774                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 12775  004220  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12776  004222  6E99               	movwf	153,c	;volatile
 12777  004224                     
 12778                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 12779  004224  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12780  00422A                     i2l534:
 12781  00422A  0012               	return		;funcret
 12782  00422C                     __end_of_TMR5_WriteTimer:
 12783                           	callstack 0
 12784                           
 12785 ;; *************** function _TMR5_ReadTimer *****************
 12786 ;; Defined at:
 12787 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;		None
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;  readVal         2   16[COMRAM] unsigned short 
 12792 ;;  readValLow      1   19[COMRAM] unsigned char 
 12793 ;;  readValHigh     1   18[COMRAM] unsigned char 
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  2   12[COMRAM] unsigned short 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12804 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12806 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12807 ;;Total ram usage:        8 bytes
 12808 ;; Hardware stack levels used: 1
 12809 ;; This function calls:
 12810 ;;		Nothing
 12811 ;; This function is called by:
 12812 ;;		_TMR5_DefaultGateInterruptHandler
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text87
 12817  0042C6                     __ptext87:
 12818                           	callstack 0
 12819  0042C6                     _TMR5_ReadTimer:
 12820                           	callstack 12
 12821  0042C6                     
 12822                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 12823  0042C6  829A               	bsf	154,1,c	;volatile
 12824                           
 12825                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 12826  0042C8  006F FE60  F014    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 12827                           
 12828                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 12829  0042CE  006F FE64  F013    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 12830  0042D4                     
 12831                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 12832  0042D4  5013               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 12833  0042D6  6E0F               	movwf	??_TMR5_ReadTimer^0,c
 12834  0042D8  5014               	movf	TMR5_ReadTimer@readValLow^0,w,c
 12835  0042DA  6E11               	movwf	TMR5_ReadTimer@readVal^0,c
 12836  0042DC  C00F  F012         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 12837  0042E0                     
 12838                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 12839  0042E0  C011  F00D         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 12840  0042E4  C012  F00E         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 12841  0042E8  0012               	return		;funcret
 12842  0042EA                     __end_of_TMR5_ReadTimer:
 12843                           	callstack 0
 12844                           
 12845 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 12846 ;; Defined at:
 12847 ;;		line 192 in file "mcc_generated_files/smt1.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;		None
 12850 ;; Auto vars:     Size  Location     Type
 12851 ;;		None
 12852 ;; Return value:  Size  Location     Type
 12853 ;;                  1    wreg      void 
 12854 ;; Registers used:
 12855 ;;		wreg, status,2, status,0
 12856 ;; Tracked objects:
 12857 ;;		On entry : 0/0
 12858 ;;		On exit  : 0/0
 12859 ;;		Unchanged: 0/0
 12860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12865 ;;Total ram usage:        0 bytes
 12866 ;; Hardware stack levels used: 1
 12867 ;; This function calls:
 12868 ;;		Nothing
 12869 ;; This function is called by:
 12870 ;;		Interrupt level 2
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text88
 12875  003DCC                     __ptext88:
 12876                           	callstack 0
 12877  003DCC                     _SMT1_PR_ACQ_ISR:
 12878                           	callstack 14
 12879  003DCC                     
 12880                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 12881  003DCC  0139               	movlb	57	; () banked
 12882  003DCE  9DA1               	bcf	161,6,b	;volatile
 12883  003DD0                     
 12884                           ; BSR set to: 57
 12885                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 12886  003DD0  013F               	movlb	63	; () banked
 12887  003DD2  5115               	movf	21,w,b	;volatile
 12888  003DD4  6E3A               	movwf	_smtPeriod^0,c	;volatile
 12889  003DD6  5116               	movf	22,w,b	;volatile
 12890  003DD8  6E3B               	movwf	(_smtPeriod+1)^0,c	;volatile
 12891  003DDA  5117               	movf	23,w,b	;volatile
 12892  003DDC  6E3C               	movwf	(_smtPeriod+2)^0,c	;volatile
 12893  003DDE  6A3D               	clrf	(_smtPeriod+3)^0,c	;volatile
 12894  003DE0                     
 12895                           ; BSR set to: 63
 12896                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 12897  003DE0  013C               	movlb	60	; () banked
 12898  003DE2  AB60               	btfss	96,5,b	;volatile
 12899  003DE4  EFF6  F01E         	goto	i2u478_41
 12900  003DE8  EFF8  F01E         	goto	i2u478_40
 12901  003DEC                     i2u478_41:
 12902  003DEC  EF01  F01F         	goto	i2l5834
 12903  003DF0                     i2u478_40:
 12904  003DF0                     
 12905                           ; BSR set to: 60
 12906  003DF0  0E01               	movlw	1
 12907  003DF2  0100               	movlb	0	; () banked
 12908  003DF4  27C6               	addwf	_smtWay& (0+255),f,b	;volatile
 12909  003DF6  0E00               	movlw	0
 12910  003DF8  23C7               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12911  003DFA  23C8               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12912  003DFC  23C9               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12913  003DFE  EF0A  F01F         	goto	i2l856
 12914  003E02                     i2l5834:
 12915                           
 12916                           ; BSR set to: 60
 12917  003E02  0EFF               	movlw	255
 12918  003E04  0100               	movlb	0	; () banked
 12919  003E06  27C6               	addwf	_smtWay& (0+255),f,b	;volatile
 12920  003E08  0EFF               	movlw	255
 12921  003E0A  23C7               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12922  003E0C  0EFF               	movlw	255
 12923  003E0E  23C8               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12924  003E10  0EFF               	movlw	255
 12925  003E12  23C9               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12926  003E14                     i2l856:
 12927                           
 12928                           ; BSR set to: 0
 12929  003E14  0011               	retfie		f
 12930  003E16                     __end_of_SMT1_PR_ACQ_ISR:
 12931                           	callstack 0
 12932                           
 12933 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 12934 ;; Defined at:
 12935 ;;		line 203 in file "mcc_generated_files/smt1.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;		None
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;		None
 12940 ;; Return value:  Size  Location     Type
 12941 ;;                  1    wreg      void 
 12942 ;; Registers used:
 12943 ;;		wreg, status,2, status,0
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/0
 12946 ;;		On exit  : 0/0
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12953 ;;Total ram usage:        0 bytes
 12954 ;; Hardware stack levels used: 1
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		Interrupt level 2
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962                           	psect	text89
 12963  003ABC                     __ptext89:
 12964                           	callstack 0
 12965  003ABC                     _SMT1_PW_ACQ_ISR:
 12966                           	callstack 14
 12967  003ABC                     
 12968                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 12969  003ABC  0139               	movlb	57	; () banked
 12970  003ABE  9FA1               	bcf	161,7,b	;volatile
 12971  003AC0                     
 12972                           ; BSR set to: 57
 12973                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 12974  003AC0  013F               	movlb	63	; () banked
 12975  003AC2  5118               	movf	24,w,b	;volatile
 12976  003AC4  0100               	movlb	0	; () banked
 12977  003AC6  6FCA               	movwf	_smtDuty& (0+255),b	;volatile
 12978  003AC8  013F               	movlb	63	; () banked
 12979  003ACA  5119               	movf	25,w,b	;volatile
 12980  003ACC  0100               	movlb	0	; () banked
 12981  003ACE  6FCB               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12982  003AD0  013F               	movlb	63	; () banked
 12983  003AD2  511A               	movf	26,w,b	;volatile
 12984  003AD4  0100               	movlb	0	; () banked
 12985  003AD6  6FCC               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12986  003AD8  6BCD               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 12987  003ADA                     
 12988                           ; BSR set to: 0
 12989                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 12990  003ADA  013C               	movlb	60	; () banked
 12991  003ADC  AB60               	btfss	96,5,b	;volatile
 12992  003ADE  EF73  F01D         	goto	i2u479_41
 12993  003AE2  EF75  F01D         	goto	i2u479_40
 12994  003AE6                     i2u479_41:
 12995  003AE6  EF7E  F01D         	goto	i2l5844
 12996  003AEA                     i2u479_40:
 12997  003AEA                     
 12998                           ; BSR set to: 60
 12999  003AEA  0E01               	movlw	1
 13000  003AEC  0100               	movlb	0	; () banked
 13001  003AEE  27C6               	addwf	_smtWay& (0+255),f,b	;volatile
 13002  003AF0  0E00               	movlw	0
 13003  003AF2  23C7               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13004  003AF4  23C8               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13005  003AF6  23C9               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13006  003AF8  EF87  F01D         	goto	i2l863
 13007  003AFC                     i2l5844:
 13008                           
 13009                           ; BSR set to: 60
 13010  003AFC  0EFF               	movlw	255
 13011  003AFE  0100               	movlb	0	; () banked
 13012  003B00  27C6               	addwf	_smtWay& (0+255),f,b	;volatile
 13013  003B02  0EFF               	movlw	255
 13014  003B04  23C7               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13015  003B06  0EFF               	movlw	255
 13016  003B08  23C8               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13017  003B0A  0EFF               	movlw	255
 13018  003B0C  23C9               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13019  003B0E                     i2l863:
 13020                           
 13021                           ; BSR set to: 0
 13022  003B0E  0011               	retfie		f
 13023  003B10                     __end_of_SMT1_PW_ACQ_ISR:
 13024                           	callstack 0
 13025                           
 13026 ;; *************** function _SMT1_Overflow_ISR *****************
 13027 ;; Defined at:
 13028 ;;		line 213 in file "mcc_generated_files/smt1.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;		None
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  1    wreg      void 
 13035 ;; Registers used:
 13036 ;;		wreg, status,2
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;Total ram usage:        0 bytes
 13047 ;; Hardware stack levels used: 1
 13048 ;; This function calls:
 13049 ;;		Nothing
 13050 ;; This function is called by:
 13051 ;;		Interrupt level 2
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           	psect	text90
 13056  004254                     __ptext90:
 13057                           	callstack 0
 13058  004254                     _SMT1_Overflow_ISR:
 13059                           	callstack 14
 13060  004254                     
 13061                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 13062  004254  0139               	movlb	57	; () banked
 13063  004256  9BA1               	bcf	161,5,b	;volatile
 13064  004258                     
 13065                           ; BSR set to: 57
 13066                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 13067  004258  0E00               	movlw	0
 13068  00425A  6E3A               	movwf	_smtPeriod^0,c	;volatile
 13069  00425C  0E00               	movlw	0
 13070  00425E  6E3B               	movwf	(_smtPeriod+1)^0,c	;volatile
 13071  004260  0E00               	movlw	0
 13072  004262  6E3C               	movwf	(_smtPeriod+2)^0,c	;volatile
 13073  004264  0E00               	movlw	0
 13074  004266  6E3D               	movwf	(_smtPeriod+3)^0,c	;volatile
 13075                           
 13076                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 13077  004268  0E00               	movlw	0
 13078  00426A  0100               	movlb	0	; () banked
 13079  00426C  6FCA               	movwf	_smtDuty& (0+255),b	;volatile
 13080  00426E  0E00               	movlw	0
 13081  004270  6FCB               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 13082  004272  0E00               	movlw	0
 13083  004274  6FCC               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 13084  004276  0E00               	movlw	0
 13085  004278  6FCD               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 13086  00427A                     
 13087                           ; BSR set to: 0
 13088  00427A  0011               	retfie		f
 13089  00427C                     __end_of_SMT1_Overflow_ISR:
 13090                           	callstack 0
 13091                           
 13092                           ;
 13093                           ; Interrupt Vector Table @ 0x8
 13094                           ;
 13095                           
 13096                           	psect	ivt0x8
 13097  000008                     __pivt0x8:
 13098                           	callstack 0
 13099  000008                     ivt0x8_base:
 13100                           	callstack 0
 13101                           
 13102                           ; Vector 0 : SWINT
 13103  000008  110F               	dw	_Default_ISR shr (0+2)
 13104                           
 13105                           ; Vector 1 : HLVD
 13106  00000A  110F               	dw	_Default_ISR shr (0+2)
 13107                           
 13108                           ; Vector 2 : OSF
 13109  00000C  110F               	dw	_Default_ISR shr (0+2)
 13110                           
 13111                           ; Vector 3 : CSW
 13112  00000E  110F               	dw	_Default_ISR shr (0+2)
 13113                           
 13114                           ; Vector 4 : NVM
 13115  000010  110F               	dw	_Default_ISR shr (0+2)
 13116                           
 13117                           ; Vector 5 : SCAN
 13118  000012  110F               	dw	_Default_ISR shr (0+2)
 13119                           
 13120                           ; Vector 6 : CRC
 13121  000014  110F               	dw	_Default_ISR shr (0+2)
 13122                           
 13123                           ; Vector 7 : IOC
 13124  000016  110F               	dw	_Default_ISR shr (0+2)
 13125                           
 13126                           ; Vector 8 : INT0
 13127  000018  110F               	dw	_Default_ISR shr (0+2)
 13128                           
 13129                           ; Vector 9 : ZCD
 13130  00001A  110F               	dw	_Default_ISR shr (0+2)
 13131                           
 13132                           ; Vector 10 : AD
 13133  00001C  110F               	dw	_Default_ISR shr (0+2)
 13134                           
 13135                           ; Vector 11 : ADT
 13136  00001E  110F               	dw	_Default_ISR shr (0+2)
 13137                           
 13138                           ; Vector 12 : CMP1
 13139  000020  110F               	dw	_Default_ISR shr (0+2)
 13140                           
 13141                           ; Vector 13 : SMT1
 13142  000022  1095               	dw	_SMT1_Overflow_ISR shr (0+2)
 13143                           
 13144                           ; Vector 14 : SMT1PRA
 13145  000024  0F73               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 13146                           
 13147                           ; Vector 15 : SMT1PRW
 13148  000026  0EAF               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 13149                           
 13150                           ; Vector 16 : DMA1SCNT
 13151  000028  110F               	dw	_Default_ISR shr (0+2)
 13152                           
 13153                           ; Vector 17 : DMA1DCNT
 13154  00002A  110F               	dw	_Default_ISR shr (0+2)
 13155                           
 13156                           ; Vector 18 : DMA1OR
 13157  00002C  110F               	dw	_Default_ISR shr (0+2)
 13158                           
 13159                           ; Vector 19 : DMA1A
 13160  00002E  110F               	dw	_Default_ISR shr (0+2)
 13161                           
 13162                           ; Vector 20 : SPI1RX
 13163  000030  110F               	dw	_Default_ISR shr (0+2)
 13164                           
 13165                           ; Vector 21 : SPI1TX
 13166  000032  110F               	dw	_Default_ISR shr (0+2)
 13167                           
 13168                           ; Vector 22 : SPI1
 13169  000034  110F               	dw	_Default_ISR shr (0+2)
 13170                           
 13171                           ; Vector 23 : I2C1RX
 13172  000036  110F               	dw	_Default_ISR shr (0+2)
 13173                           
 13174                           ; Vector 24 : I2C1TX
 13175  000038  110F               	dw	_Default_ISR shr (0+2)
 13176                           
 13177                           ; Vector 25 : I2C1
 13178  00003A  110F               	dw	_Default_ISR shr (0+2)
 13179                           
 13180                           ; Vector 26 : I2C1E
 13181  00003C  110F               	dw	_Default_ISR shr (0+2)
 13182                           
 13183                           ; Vector 27 : U1RX
 13184  00003E  0ED9               	dw	_UART1_rx_vect_isr shr (0+2)
 13185                           
 13186                           ; Vector 28 : U1TX
 13187  000040  0EC4               	dw	_UART1_tx_vect_isr shr (0+2)
 13188                           
 13189                           ; Vector 29 : U1E
 13190  000042  110F               	dw	_Default_ISR shr (0+2)
 13191                           
 13192                           ; Vector 30 : U1
 13193  000044  110F               	dw	_Default_ISR shr (0+2)
 13194                           
 13195                           ; Vector 31 : TMR0
 13196  000046  110F               	dw	_Default_ISR shr (0+2)
 13197                           
 13198                           ; Vector 32 : TMR1
 13199  000048  110F               	dw	_Default_ISR shr (0+2)
 13200                           
 13201                           ; Vector 33 : TMR1G
 13202  00004A  110F               	dw	_Default_ISR shr (0+2)
 13203                           
 13204                           ; Vector 34 : TMR2
 13205  00004C  110F               	dw	_Default_ISR shr (0+2)
 13206                           
 13207                           ; Vector 35 : CCP1
 13208  00004E  110F               	dw	_Default_ISR shr (0+2)
 13209                           
 13210                           ; Vector 36 : Undefined
 13211  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 13212                           
 13213                           ; Vector 37 : NCO1
 13214  000052  110F               	dw	_Default_ISR shr (0+2)
 13215                           
 13216                           ; Vector 38 : CWG1
 13217  000054  110F               	dw	_Default_ISR shr (0+2)
 13218                           
 13219                           ; Vector 39 : CLC1
 13220  000056  110F               	dw	_Default_ISR shr (0+2)
 13221                           
 13222                           ; Vector 40 : INT1
 13223  000058  110F               	dw	_Default_ISR shr (0+2)
 13224                           
 13225                           ; Vector 41 : CMP2
 13226  00005A  110F               	dw	_Default_ISR shr (0+2)
 13227                           
 13228                           ; Vector 42 : DMA2SCNT
 13229  00005C  110F               	dw	_Default_ISR shr (0+2)
 13230                           
 13231                           ; Vector 43 : DMA2DCNT
 13232  00005E  110F               	dw	_Default_ISR shr (0+2)
 13233                           
 13234                           ; Vector 44 : DMA2OR
 13235  000060  110F               	dw	_Default_ISR shr (0+2)
 13236                           
 13237                           ; Vector 45 : DMA2A
 13238  000062  110F               	dw	_Default_ISR shr (0+2)
 13239                           
 13240                           ; Vector 46 : I2C2RX
 13241  000064  110F               	dw	_Default_ISR shr (0+2)
 13242                           
 13243                           ; Vector 47 : I2C2TX
 13244  000066  110F               	dw	_Default_ISR shr (0+2)
 13245                           
 13246                           ; Vector 48 : I2C2
 13247  000068  110F               	dw	_Default_ISR shr (0+2)
 13248                           
 13249                           ; Vector 49 : I2C2E
 13250  00006A  110F               	dw	_Default_ISR shr (0+2)
 13251                           
 13252                           ; Vector 50 : U2RX
 13253  00006C  110F               	dw	_Default_ISR shr (0+2)
 13254                           
 13255                           ; Vector 51 : U2TX
 13256  00006E  110F               	dw	_Default_ISR shr (0+2)
 13257                           
 13258                           ; Vector 52 : U2E
 13259  000070  110F               	dw	_Default_ISR shr (0+2)
 13260                           
 13261                           ; Vector 53 : U2
 13262  000072  110F               	dw	_Default_ISR shr (0+2)
 13263                           
 13264                           ; Vector 54 : TMR3
 13265  000074  110F               	dw	_Default_ISR shr (0+2)
 13266                           
 13267                           ; Vector 55 : TMR3G
 13268  000076  110F               	dw	_Default_ISR shr (0+2)
 13269                           
 13270                           ; Vector 56 : TMR4
 13271  000078  0EEE               	dw	_TMR4_ISR shr (0+2)
 13272                           
 13273                           ; Vector 57 : CCP2
 13274  00007A  110F               	dw	_Default_ISR shr (0+2)
 13275                           
 13276                           ; Vector 58 : Undefined
 13277  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 13278                           
 13279                           ; Vector 59 : CWG2
 13280  00007E  110F               	dw	_Default_ISR shr (0+2)
 13281                           
 13282                           ; Vector 60 : CLC2
 13283  000080  110F               	dw	_Default_ISR shr (0+2)
 13284                           
 13285                           ; Vector 61 : INT2
 13286  000082  110F               	dw	_Default_ISR shr (0+2)
 13287                           
 13288                           ; Vector 62 : Undefined
 13289  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 13290                           
 13291                           ; Vector 63 : Undefined
 13292  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 13293                           
 13294                           ; Vector 64 : Undefined
 13295  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 13296                           
 13297                           ; Vector 65 : Undefined
 13298  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 13299                           
 13300                           ; Vector 66 : Undefined
 13301  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 13302                           
 13303                           ; Vector 67 : Undefined
 13304  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 13305                           
 13306                           ; Vector 68 : Undefined
 13307  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 13308                           
 13309                           ; Vector 69 : Undefined
 13310  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 13311                           
 13312                           ; Vector 70 : TMR5
 13313  000094  110F               	dw	_Default_ISR shr (0+2)
 13314                           
 13315                           ; Vector 71 : TMR5G
 13316  000096  0F60               	dw	_TMR5_GATE_ISR shr (0+2)
 13317                           
 13318                           ; Vector 72 : TMR6
 13319  000098  110F               	dw	_Default_ISR shr (0+2)
 13320                           
 13321                           ; Vector 73 : CCP3
 13322  00009A  0F15               	dw	_CCP3_CaptureISR shr (0+2)
 13323                           
 13324                           ; Vector 74 : CWG3
 13325  00009C  110F               	dw	_Default_ISR shr (0+2)
 13326                           
 13327                           ; Vector 75 : CLC3
 13328  00009E  110F               	dw	_Default_ISR shr (0+2)
 13329                           
 13330                           ; Vector 76 : Undefined
 13331  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 13332                           
 13333                           ; Vector 77 : Undefined
 13334  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 13335                           
 13336                           ; Vector 78 : Undefined
 13337  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 13338                           
 13339                           ; Vector 79 : Undefined
 13340  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 13341                           
 13342                           ; Vector 80 : CCP4
 13343  0000A8  0F28               	dw	_CCP4_CaptureISR shr (0+2)
 13344                           
 13345                           ; Vector 81 : CLC4
 13346  0000AA  110F               	dw	_Default_ISR shr (0+2)
 13347  0000AC                     ivt0x8_undefint:
 13348                           	callstack 0
 13349  0000AC  00FF               	reset	
 13350                           
 13351                           	psect	text91
 13352  000000                     __ptext91:
 13353                           	callstack 0
 13354  000000                     
 13355                           	psect	rparam
 13356  0000                     
 13357                           	psect	config
 13358                           
 13359                           ;Config register CONFIG1L @ 0x300000
 13360                           ;	External Oscillator Selection
 13361                           ;	FEXTOSC = OFF, Oscillator not enabled
 13362                           ;	Reset Oscillator Selection
 13363                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 13364  300000                     	org	3145728
 13365  300000  8C                 	db	140
 13366                           
 13367                           ;Config register CONFIG1H @ 0x300001
 13368                           ;	Clock out Enable bit
 13369                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 13370                           ;	PRLOCKED One-Way Set Enable bit
 13371                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 13372                           ;	Clock Switch Enable bit
 13373                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13374                           ;	Fail-Safe Clock Monitor Enable bit
 13375                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 13376  300001                     	org	3145729
 13377  300001  FF                 	db	255
 13378                           
 13379                           ;Config register CONFIG2L @ 0x300002
 13380                           ;	MCLR Enable bit
 13381                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 13382                           ;	Power-up timer selection bits
 13383                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 13384                           ;	Multi-vector enable bit
 13385                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 13386                           ;	IVTLOCK bit One-way set enable bit
 13387                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 13388                           ;	Low Power BOR Enable bit
 13389                           ;	LPBOREN = OFF, ULPBOR disabled
 13390                           ;	Brown-out Reset Enable bits
 13391                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 13392  300002                     	org	3145730
 13393  300002  FF                 	db	255
 13394                           
 13395                           ;Config register CONFIG2H @ 0x300003
 13396                           ;	Brown-out Reset Voltage Selection bits
 13397                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 13398                           ;	ZCD Disable bit
 13399                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13400                           ;	PPSLOCK bit One-Way Set Enable bit
 13401                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 13402                           ;	Stack Full/Underflow Reset Enable bit
 13403                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13404                           ;	Debugger Enable bit
 13405                           ;	DEBUG = OFF, Background debugger disabled
 13406                           ;	Extended Instruction Set Enable bit
 13407                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 13408  300003                     	org	3145731
 13409  300003  FF                 	db	255
 13410                           
 13411                           ;Config register CONFIG3L @ 0x300004
 13412                           ;	WDT Period selection bits
 13413                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13414                           ;	WDT operating mode
 13415                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 13416  300004                     	org	3145732
 13417  300004  9F                 	db	159
 13418                           
 13419                           ;Config register CONFIG3H @ 0x300005
 13420                           ;	WDT Window Select bits
 13421                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13422                           ;	WDT input clock selector
 13423                           ;	WDTCCS = SC, Software Control
 13424  300005                     	org	3145733
 13425  300005  FF                 	db	255
 13426                           
 13427                           ;Config register CONFIG4L @ 0x300006
 13428                           ;	Boot Block Size selection bits
 13429                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 13430                           ;	Boot Block enable bit
 13431                           ;	BBEN = OFF, Boot block disabled
 13432                           ;	Storage Area Flash enable bit
 13433                           ;	SAFEN = OFF, SAF disabled
 13434                           ;	Application Block write protection bit
 13435                           ;	WRTAPP = OFF, Application Block not write protected
 13436  300006                     	org	3145734
 13437  300006  FF                 	db	255
 13438                           
 13439                           ;Config register CONFIG4H @ 0x300007
 13440                           ;	Configuration Register Write Protection bit
 13441                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 13442                           ;	Boot Block Write Protection bit
 13443                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 13444                           ;	Data EEPROM Write Protection bit
 13445                           ;	WRTD = OFF, Data EEPROM not write-protected
 13446                           ;	SAF Write protection bit
 13447                           ;	WRTSAF = OFF, SAF not Write Protected
 13448                           ;	Low Voltage Programming Enable bit
 13449                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 13450  300007                     	org	3145735
 13451  300007  FF                 	db	255
 13452                           
 13453                           ;Config register CONFIG5L @ 0x300008
 13454                           ;	PFM and Data EEPROM Code Protection bit
 13455                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 13456  300008                     	org	3145736
 13457  300008  FF                 	db	255
 13458                           
 13459                           ;Config register CONFIG5H @ 0x300009
 13460                           ;	unspecified, using default values
 13461  300009                     	org	3145737
 13462  300009  FF                 	db	255
 13463                           tosu	equ	0x3FFF
 13464                           tosh	equ	0x3FFE
 13465                           tosl	equ	0x3FFD
 13466                           stkptr	equ	0x3FFC
 13467                           pclatu	equ	0x3FFB
 13468                           pclath	equ	0x3FFA
 13469                           pcl	equ	0x3FF9
 13470                           tblptru	equ	0x3FF8
 13471                           tblptrh	equ	0x3FF7
 13472                           tblptrl	equ	0x3FF6
 13473                           tablat	equ	0x3FF5
 13474                           prodh	equ	0x3FF4
 13475                           prodl	equ	0x3FF3
 13476                           indf0	equ	0x3FEF
 13477                           postinc0	equ	0x3FEE
 13478                           postdec0	equ	0x3FED
 13479                           preinc0	equ	0x3FEC
 13480                           plusw0	equ	0x3FEB
 13481                           fsr0h	equ	0x3FEA
 13482                           fsr0l	equ	0x3FE9
 13483                           wreg	equ	0x3FE8
 13484                           indf1	equ	0x3FE7
 13485                           postinc1	equ	0x3FE6
 13486                           postdec1	equ	0x3FE5
 13487                           preinc1	equ	0x3FE4
 13488                           plusw1	equ	0x3FE3
 13489                           fsr1h	equ	0x3FE2
 13490                           fsr1l	equ	0x3FE1
 13491                           bsr	equ	0x3FE0
 13492                           indf2	equ	0x3FDF
 13493                           postinc2	equ	0x3FDE
 13494                           postdec2	equ	0x3FDD
 13495                           preinc2	equ	0x3FDC
 13496                           plusw2	equ	0x3FDB
 13497                           fsr2h	equ	0x3FDA
 13498                           fsr2l	equ	0x3FD9
 13499                           status	equ	0x3FD8

Data Sizes:
    Strings     64
    Constant    0
    Data        0
    BSS         122
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      64
    BANK0           160     78     160
    BANK1           256     14      46
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3430$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3430$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[14]), STR_4(CODE[13]), STR_3(CODE[14]), STR_2(CODE[11]), 
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[14]), STR_4(CODE[13]), STR_3(CODE[14]), STR_2(CODE[11]), 
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[14]), STR_4(CODE[13]), STR_3(CODE[14]), STR_2(CODE[11]), 
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_TMR4_SetInterruptHandler
    _loop->_getCurve
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _pad->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _calcSteering->___fltol
    _setSteering->_PWM5_LoadDutyValue
    _setSteering->_PWM6_LoadDutyValue
    _calcSpeed->___fltol
    _calcMotorPow->___fltol
    _calcMotorPow->_actSpeed
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _SYSTEM_Initialize->_TMR3_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_calcMotorPow
    _startAccell->_setSteering
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___flge->___xxtofl
    _calcSteering->___fltol
    _setSteering->___awdiv
    ___fldiv->___xxtofl
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_printf
    _getReverse->_printf
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69447
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   68300
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          2     2      0    4982
                                             17 BANK0      2     2      0
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0    7574
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     130
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   12945
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0    7605
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    7574
                                              8 BANK1      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7043
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6    6573
                                             59 BANK0     18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4829
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (10) _UART1_Write                                         1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             31 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     626
                                             22 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    7403
                                             71 BANK0      4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3788
                                              8 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2003
                                             22 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    6596
                                             71 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                             47 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    7025
                                             71 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1126
                                              2 BANK0      4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     845
                                             31 COMRAM     2     0      2
                                             14 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     926
                                              8 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             31 COMRAM     2     2      0
                                             63 BANK0      8     4      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             22 BANK0     25    17      8
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     805
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   3     3      0       0
                                             22 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            3     3      0       0
                                             28 COMRAM     3     3      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     4     4      0     144
                                              2 COMRAM     4     4      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     4     4      0     144
                                              8 COMRAM     4     4      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       2     2      0     233
                                             20 COMRAM     2     2      0
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___fldiv
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         _printf
           _vfprintf
             _vfpfcnvrt
               _fputc
                 _putch
                   _UART1_Write
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                   _fputs
                     _fputc
                   _strlen
       _setSteering
     _getBatteryVoltage
     _getCurve
     _getReverse
       _printf
     _printf
     _setMotor
     _setSteering
     _startAccell
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      86        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     181      0       0      84        0.0%
BITBIGSFRhhhhll    17E      0       0      54        0.0%
BITBIGSFRhhhhll    17A      0       0      55        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      E      2E       7       18.0%
BITBIGSFRhhhhll     E3      0       0      51        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      40       1       67.4%
BITBIGSFRhhhhll     44      0       0      60        0.0%
BITBIGSFRhhhhll     3A      0       0      48        0.0%
BITBIGSFRhhhhll     34      0       0      68        0.0%
BITBIGSFRhhhhhh     28      0       0      36        0.0%
BITBIGSFRhhhhll     20      0       0      43        0.0%
BITBIGSFRhhhhll     20      0       0      71        0.0%
BITBIGSFRllhh       15      0       0      75        0.0%
BITBIGSFRhhhhll     12      0       0      49        0.0%
BITBIGSFRlh         11      0       0      74        0.0%
BITBIGSFRhhhhll      B      0       0      67        0.0%
BITBIGSFRhhhhll      A      0       0      42        0.0%
BITBIGSFRhhhhll      8      0       0      56        0.0%
BITBIGSFRllhlhl      6      0       0      78        0.0%
BITBIGSFRlllhhl      6      0       0      81        0.0%
BITBIGSFRhhhhll      6      0       0      58        0.0%
BITBIGSFRhhhhll      6      0       0      69        0.0%
BITBIGSFRhhhhll      5      0       0      59        0.0%
BITBIGSFRhhhhll      5      0       0      66        0.0%
BITBIGSFRhhhhll      5      0       0      64        0.0%
BITBIGSFRhhhhll      5      0       0      62        0.0%
BITBIGSFRhhhhhh      4      0       0      38        0.0%
BITBIGSFRhhhhll      4      0       0      61        0.0%
BITBIGSFRhhhhll      4      0       0      63        0.0%
BITBIGSFRhhhhll      4      0       0      65        0.0%
BITBIGSFRhhhhhh      4      0       0      40        0.0%
BITBIGSFRlllhll      3      0       0      82        0.0%
BITBIGSFRllhll       3      0       0      79        0.0%
BITBIGSFRhhhhhl      3      0       0      41        0.0%
BITBIGSFRllhlhl      2      0       0      77        0.0%
BITBIGSFRhhhhhh      1      0       0      39        0.0%
BITBIGSFRhhhhll      1      0       0      50        0.0%
BITBIGSFRllhlhl      1      0       0      76        0.0%
BITBIGSFRlllhhh      1      0       0      80        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      47        0.0%
BITBIGSFRhhhhll      1      0       0      46        0.0%
BITBIGSFRllllh       1      0       0      83        0.0%
BITBIGSFRhhhhhh      1      0       0      37        0.0%
BITBIGSFRhhhhll      1      0       0      53        0.0%
BITBIGSFRhhhhll      1      0       0      52        0.0%
BITBIGSFRhhhhll      1      0       0      57        0.0%
BITBIGSFRhhhhll      1      0       0      70        0.0%
BITBIGSFRhhl         1      0       0      72        0.0%
BITBIGSFRhl          1      0       0      73        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10E      85        0.0%
DATA                 0      0     10E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jan 26 14:10:01 2024

                             _CCP4_Initialize 40F2                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 008E                                  ___fldiv@bexp 008D  
                                 _startAccell 3916                                  ___fldiv@sign 0086  
                                          l72 43B8                                            l75 42C4  
                                          l69 3D34                                  ___awdiv@sign 0065  
                           ??_TMR5_WriteTimer 000F                                           l312 3A5C  
                                         l404 3C52                                           l308 3A14  
                                         l309 3A2E                                           l318 43D0  
                                         l520 3D7E                                           l441 414C  
                                         l362 43EE                                           l371 43DA  
                                         l188 345C                                           l284 374E  
                                         l365 4402                                           l359 43F8  
                                         l368 43E4                                           l712 4060  
                                         l449 442A                                           l482 411E  
                                         l723 4358                                           l555 440C  
                                         l644 41A6                                           l740 3FF4  
                                         l709 4370                                           l581 3F52  
                                         l726 402A                                           l479 4420  
                                         l751 4388                                           l737 43A0  
                                         l754 3FBE                                           l923 4324  
                                         l695 4416                                           l795 4090  
                                         l893 41D2                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _pad 345E                               _TMR2_Initialize 430A  
              CCP4_SetCallBack@customCallBack 0020                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 4418  
                                ___flmul@aexp 0083                                  ___flmul@bexp 0088  
                          _UART1_Transmit_ISR 3E5E                                  ___flmul@sign 0082  
                                ___flmul@temp 008D                                  ___flmul@prod 0089  
                     __end_of_CCP4_CaptureISR 3CEC                                  ___fltol@exp1 0021  
                                        l1042 3AB8                                          l2012 17E4  
                                        l2005 15CA                                          l2022 1914  
                                        l2014 185C                                          l1054 3EB4  
                                        l2015 184A                                          l2104 1F66  
                                        l1224 2A2C                                          l2009 1952  
                                        l1313 2380                                          l1057 3EDE  
                                        l1241 2B64                                          l1250 37E8  
                                        l2114 2132                                          l2106 1F6E  
                                        l1306 2DBA                                          l1307 2DCC  
                                        l2060 27F8                                          l1332 24E2  
                                        l2053 279C                                          l2125 39F8  
                                        l1253 42A0                                          l2046 2704  
                                        l1318 240C                                          l2126 3A00  
                                        l2119 2314                                          l3200 3394  
                                        l2152 3F1A                                          l2049 2860  
                                        l1353 1F2C                                          l3210 340E  
                                        l3202 33B4                                          l1362 2CAE  
                                        l1338 1DA6                                          l2138 3880  
                                        l2146 3E5C                                          l1258 3914  
                                        l1371 32C0                               _timer3ReloadVal 00EC  
                                        l3220 341C                                          l3212 3410  
                                        l3204 33B6                                          l2069 4252  
                                        l1293 26A8                                          l1277 2698  
                                        l1269 3998                                          l3222 341E  
                                        l3214 3412                                          l3206 33BE  
                                        l1622 35EA                                          l1470 2EDA  
                                        l2094 34A4                                          l1375 2870  
                                        l3224 43A2                                          l3216 3418  
                                        l3208 340C                                          l1377 2894  
                                        l2097 34E8                                          l3170 3C0A  
                                        l3218 341A                                          l3250 4080  
                                        l1378 28A8                                          l1379 28D0  
                                        l2099 3524                                          l3236 3A5E  
                                        l3180 3C3E                                          l3172 3C12  
                                        l3308 435A                                          l3260 408C  
                                        l3252 4082                                          l1388 2A0A  
                                        l1661 30E8                                          l3190 3C4A  
                                        l3182 3C42                                          l3174 3C1C  
                                        l3270 4372                                          l3262 4342  
                                        l3254 4084                                          l3192 3C4C  
                                        l3184 3C44                                          l3176 3C32  
                                        l3168 3C08                                          l3256 4088  
                                        l3248 4062                                          l3264 430A  
                                        l1920 1220                                          l1656 30A2  
                                        l6000 3A54                                          l1921 11E6  
                                        l3282 41A8                                          l3194 3C4E  
                                        l3186 3C46                                          l3178 3C34  
                                        l3258 408A                                          l3266 4316  
                                        l6002 3A58                                          l6010 37FE  
                                        l3196 3C50                                          l3188 3C48  
                                        l3292 438A                                          l3268 431C  
                                        l5300 36E6                                          l5140 2EDC  
                                        l1836 31DA                                          l6004 3A5A  
                                        l6012 3810                                          l6100 1F2E  
                                        l1829 31BA                                          l5230 4120  
                                        l3198 42A2                                          l5310 36FA  
                                        l5302 36EA                                          l5150 2F34  
                                        l5142 2EF4                                          l1846 3392  
                                        l6006 43CA                                          l6014 381A  
                                        l6022 3E16                                          l6030 3EE0  
                                        l6110 1F9E                                          l6102 1F3E  
                                        l1919 1232                                          l1839 3372  
                                        l5232 4130                                          l5240 417C  
                                        l5320 3716                                          l5312 36FE  
                                        l5304 36EE                                          l5152 2F44  
                                        l1688 2FE2                                          l7000 2C4E  
                                        l1936 134C                                          l1928 1502  
                                        l6200 3EC2                                          l6040 30EA  
                                        l6016 3838                                          l6008 37EA  
                                        l6024 3E24                                          l6032 3EEC  
                                        l6120 2032                                          l6112 1FA8  
                                        l6104 1F40                                          l1945 141C  
                                        l5234 413C                                          l5250 40F2  
                                        l5242 4190                                          l4530 43F0  
                                        l5322 3722                                          l5314 3702  
                                        l5306 36F2                                          l5162 2F6E  
                                        l5154 2F48                                          l5146 2F08  
                                        l6210 2DCE                                          l7010 2CA6  
                                        l7002 2C6A                                          l1946 140A  
                                        l6050 3140                                          l6042 30F6  
                                        l6018 386E                                          l6026 3E36  
                                        l6034 3EF0                                          l6130 20FC  
                                        l6114 1FAE                                          l6122 2096  
                                        l6106 1F5A                                          l5236 4146  
                                        l5252 4102                                          l5260 3F1C  
                                        l5244 4194                                          l4532 43E6  
                                        l5324 374A                                          l5316 3706  
                                        l5308 36F6                                          l7020 3D0C  
                                        l7012 3CEC                                          l5180 2FD2  
                                        l5172 2F96                                          l5164 2F78  
                                        l5156 2F56                                          l5148 2F32  
                                        l6220 2E04                                          l6212 2DD4  
                                        l6300 31FA                                          l7004 2C76  
                                        l4700 1150                                          l6060 31B4  
                                        l6052 3152                                          l6044 3116  
                                        l6028 3E3C                                          l6036 3F0C  
                                        l6124 20AA                                          l6132 210A  
                                        l6116 2026                                          l6108 1F96  
                                        l6140 2174                                          l6204 422C  
                                        l1973 1CEE                                          l5238 414A  
                                        l5254 410E                                          l5262 3F30  
                                        l5246 4196                                          l4550 4404  
                                        l4534 43FA                                          l4526 43DC  
                                        l5318 370A                                          l7030 3D28  
                                        l7022 3D10                                          l7014 3CFC  
                                        l5174 2FA2                                          l5166 2F82  
                                        l6230 2E46                                          l6222 2E14  
                                        l6214 2DE2                                          l6310 3256  
                                        l6302 3216                                          l7006 2C92  
                                        l4710 1164                                          l4702 1154  
                                        l6054 3180                                          l6046 311E  
                                        l6070 330C                                          l6062 32C2  
                                        l6126 20C8                                          l6118 202C  
                                        l6142 2186                                          l6206 4236  
                                        ?_pad 0070                                          l1975 1B4E  
                                        l5256 4118                                          l5264 3F34  
                                        l5248 41A2                                          l4528 43D2  
                                        l7032 3D2C                                          l7024 3D14  
                                        l7016 3D00                                          l5176 2FB2  
                                        l6240 2E98                                          l6232 2E52  
                                        l6224 2E18                                          l6216 2DF2  
                                        l6312 3272                                          l6304 321E  
                                        l7008 2C9A                                          l4800 13B6  
                                        l4720 1178                                          l4712 1168  
                                        l4704 1158                                          l1984 1B94  
                                        l6400 19C2                                          l6320 2862  
                                        l6056 31A0                                          l6048 3132  
                                        l6072 333A                                          l6064 32E2  
                                        l6080 346C                                          l6128 20E2  
                                        l6152 224E                                          l6144 218A  
                                        l6136 2134                                          l7040 2A4E  
                                        l4546 4422                                          l5258 411C  
                                        l5266 3F4E                                          l5290 36D2  
                                        l5282 36AC                                          l7026 3D1C  
                                        l7018 3D08                                          l5178 2FC2  
                                        l6250 2ECA                                          l6242 2E9A  
                                        l6234 2E60                                          l6226 2E28  
                                        l6218 2DF6                                          l6314 327A  
                                        l6306 322A                                          l4810 13DE  
                                        l4802 13BA                                          l4730 11B2  
                                        l4722 117C                                          l4714 116C  
                                        l4706 115C                                          l4650 1050  
                                        l1986 1C0C                                          l1978 1B12  
                                        l6410 19F8                                          l6402 19C8  
                                        l6330 28F8                                          l6322 28B0  
                                        l6058 31A2                                          l6074 335A  
                                        l6066 32EA                                          l6090 34C4  
                                        l6082 3480                                          l6170 22FE  
                                        l6154 227C                                          l6162 22B0  
                                        l6146 21B8                                          l6138 2162  
                                        l7050 2AB0                                          l7042 2A52  
                                        l7034 2A0C                                          l1987 1BFA  
                                        l4548 4418                                          l5292 36D6  
                                        l5284 36B0                                          l7028 3D20  
                                        l6260 3542                                          l6244 2EA4  
                                        l6236 2E6A                                          l6228 2E3E  
                                        l6316 3286                                          l6308 323A  
                                        l4820 1438                                          l4812 13EC  
                                        l4804 13CA                                          l4740 1204  
                                        l4732 11CE                                          l4724 1180  
                                        l4716 1170                                          l4708 1160  
                                        l4660 1090                                          l4652 105E  
                                        l6500 1CAE                                          l6420 1A38  
                                        l6412 1A08                                          l6404 19D6  
                                        l6340 2978                                          l6324 28D8  
                                        l6076 336C                                          l6068 32FE  
                                        l6092 34CA                                          l6084 3490  
                                        l6164 22C2                                          l6156 228E  
                                        l6148 2216                                          l6180 39B0  
                                        l7060 2AE8                                          l7052 2AB4  
                                        l7044 2A9C                                          l7036 2A3A  
                                        l4566 440E                                          l5294 36DA  
                                        l5286 36BC                                          l6270 3568  
                                        l6262 3546                                          l6254 3526  
                                        l6238 2E88                                          l6246 2EAA  
                                        l6318 32A8                                          l4830 14A2  
                                        l4822 1446                                          l4814 1402  
                                        l4806 13CC                                          l4750 1250  
                                        l4742 1212                                          l4734 11DE  
                                        l4718 1174                                          l4726 1184  
                                        l4670 10C2                                          l4662 1092  
                                        l4654 1060                                          l6510 1CE4  
                                        l6502 1CCA                                          l6422 1A48  
                                        l6430 1A68                                          l6414 1A0A  
                                        l6406 19D8                                          l6190 3F8A  
                                        l6350 29E0                                          l6342 2994  
                                        l6326 28E4                                          l6334 290C  
                                        l6094 34F6                                          l6086 349C  
                                        l6078 345E                                          l6158 22A2  
                                        l6182 39D6                                          l7070 2B34  
                                        l7062 2AFC                                          l7054 2AC4  
                                        l7046 2AA0                                          l7038 2A4A  
                                        l5296 36DE                                          l5288 36CC  
                                        l6280 359E                                          l6272 357A  
                                        l6264 3554                                          l6256 352C  
                                        l6600 17CA                                          l6520 1512  
                                        l6248 2EBA                                          l6184 402C  
                                        l4840 14DC                                          l4832 14C2  
                                        l4824 1480                                          l4760 1290  
                                        l4808 13DA                                          l4744 1214  
                                        l4736 11F4                                          l4728 1188  
                                        l4680 10EA                                          l4672 10C4  
                                        l4656 1070                                          l4664 109A  
                                        l4648 1042                                          l7240 1EA4  
                                        l6504 1CCE                                          l6440 1AA6  
                                        l6432 1A78                                          l6424 1A50  
                                        l6408 19E8                                          l6416 1A12  
                                        l6352 29E8                                          l6344 299C  
                                        l6328 28EC                                          l6336 294E  
                                        l6192 3EA6                                          l6096 350A  
                                        l6088 34B0                                          l6168 22CE  
                                        l6176 399A                                          l7232 2672  
                                        l7080 2B58                                          l7064 2B02  
                                        l7056 2AC8                                          l7048 2AA8  
                                        l5298 36E2                                          l6282 35B4  
                                        l6274 3582                                          l6290 35CA  
                                        l6266 355C                                          l6258 353A  
                                        l6610 1806                                          l6602 17D4  
                                        l6530 1552                                          l6522 1520  
                                        l6370 3770                                          l6186 3FF6  
                                        l4842 14E2                                          l4834 14C6  
                                        l4818 142C                                          l4826 1482  
                                        l4770 12BA                                          l4762 129C  
                                        l4754 1264                                          l4746 121E  
                                        l4738 1200                                          l4690 1124  
                                        l4682 10FA                                          l4674 10CA  
                                        l4666 10AA                                          l4658 1080  
                                        l6506 1CDC                                          l6450 1AEE  
                                        l6442 1AB6                                          l6434 1A78  
                                        l6426 1A54                                          l6418 1A22  
                                        l6354 29F8                                          l6346 29B8  
                                        l6338 296C                                          l7234 23E6  
                                        l6194 3EAC                                          l6178 39A2  
                                        l6362 427C                                          l7082 2B5C  
                                        l7074 2B4C                                          l7066 2B1E  
                                        l7058 2AD6                                          l7090 42FE  
                                        l6292 35DA                                          l6284 35BC  
                                        l6276 358A                                          l6268 3560  
                                        l6620 1878                                          l6612 1814  
                                        l6604 17E2                                          l6540 1582  
                                        l6532 1558                                          l6524 1522  
                                        l6700 2806                                          l6372 3780  
                                        l4844 14F0                                          l4836 14D4  
                                        l4828 1492                                          l4780 132C  
                                        l4764 12A0                                          l4756 1274  
                                        l4748 1240                                          l4772 12C0  
                                        l4692 1136                                          l4684 110A  
                                        l4676 10D8                                          l4668 10B0  
                                        l6508 1CE2                                          l6460 1B3C  
                                        l6452 1B02                                          l6444 1AC6  
                                        l6380 1954                                          l6188 3FC0  
                                        l6348 29C4                                          l7236 24AC  
                                        l6196 3EB0                                          l6364 428A  
                                        l7076 2B50                                          l7068 2B26  
                                        l7084 42EA                                          l6294 35E2  
                                        l6286 35BE                                          l6278 3598  
                                        l6630 18E2                                          l6622 1886  
                                        l6614 1842                                          l6606 17F4  
                                        l6550 15BA                                          l6542 1584  
                                        l6534 1568                                          l6526 1532  
                                        l6518 1504                                          l6710 284E  
                                        l6702 2808                                          l6374 37B2  
                                        l6366 3750                                          l4846 14F2  
                                        l4838 14DA                                          l4790 1386  
                                        l4774 12E6                                          l4782 133C  
                                        l4766 12AE                                          l4758 1282  
                                        l4694 1144                                          l4686 110C  
                                        l4678 10DA                                          l6470 1B84  
                                        l6462 1B4C                                          l6454 1B10  
                                        l6446 1AD6                                          l6438 1A8C  
                                        l6390 1992                                          l6382 1962  
                                        l7238 2920                                          l6198 3EB2  
                                        l7078 2B54                                          l7086 42EE  
                                        l6720 3D4E                                          l6288 35C4  
                                        l6640 1938                                          l6632 18FC  
                                        l6624 18B0                                          l6608 1802  
                                        l6560 160E                                          l6552 15DA  
                                        l6544 1594                                          l6536 156E  
                                        l6528 1542                                          l6712 2850  
                                        l6704 280C                                          l6376 37E0  
                                        l6368 375A                                          l4792 1390  
                                        l4784 1362                                          l4776 131A  
                                        l4768 12B0                                          l4696 1148  
                                        l4688 1114                                          l6480 1BC4  
                                        l6472 1B92                                          l6464 1B5E  
                                        l6456 1B1C                                          l6448 1ADE  
                                        l6392 19A2                                          l6384 1970  
                                        l6800 25DA                                          l7088 42F0  
                                        l6722 3D68                                          l6634 1918  
                                        l6642 193E                                          l6618 186C  
                                        l6626 18B4                                          l6570 1666  
                                        l6562 1618                                          l6554 15EA  
                                        l6546 15A4                                          l6538 1574  
                                        l6706 2830                                          l6298 31DC  
                                        l4794 139E                                          l4786 1372  
                                        l4778 131C                                          l4698 114C  
                                        l6490 1C36                                          l6482 1BF2  
                                        l6466 1B74                                          l6474 1BA4  
                                        l6458 1B3A                                          l6394 19A4  
                                        l6386 1972                                          l6650 3014  
                                        l6810 25F0                                          l6802 25E0  
                                        l6730 3916                                          l6724 3D6C  
                                        l6716 3D36                                          l6644 1942  
                                        l6636 1928                                          l6628 18CE  
                                        l6580 16B0                                          l6572 1672  
                                        l6564 1632                                          l6548 15B4  
                                        l6708 2840                                          l4796 13A0  
                                        l6492 1C60                                          l6476 1BB2  
                                        l6468 1B7A                                          l6388 1982  
                                        l6396 19AC                                          l6900 2472  
                                        l6660 3082                                          l6652 3024  
                                        l6820 2642                                          l6812 2606  
                                        l6740 393A                                          l6732 3928  
                                        l6726 3D6E                                          l6718 3D4A  
                                        l6638 1936                                          l6590 171E  
                                        l6582 16C0                                          l6574 1680  
                                        l6566 163E                                          l6558 15FE  
                                        l6670 26AE                                          l4798 13AE  
                                        l6486 1C1C                                          l6494 1C64  
                                        l6478 1BB6                                          l6398 19BC  
                                        l6902 2484                                          l6662 3090  
                                        l6654 3052                                          l6822 2652  
                                        l6814 261C                                          l6750 3968  
                                        l6742 3942                                          l6734 3930  
                                        l6728 3D7A                                          l6592 173E  
                                        l6584 16DE                                          l6576 1690  
                                        l6568 165A                                          l6672 26C0  
                                        l6496 1C7E                                          l6488 1C28  
                                        l6664 30E0                                          l6656 3062  
                                        l6648 2FE4                                          l6760 389E  
                                        l6816 2632                                          l6840 2CDA  
                                        l6752 3984                                          l6744 394E  
                                        l6594 1768                                          l6586 16EE  
                                        l6578 16A0                                          l6690 2786  
                                        l6682 273E                                          l6674 26CE  
                                        l6930 1D34                                          l6922 1CF0  
                                        l6498 1C94                                          l6666 30E6  
                                        l6658 3070                                          l6770 390C  
                                        l6762 38A6                                          l6850 2D2E  
                                        l6842 2CF0                                          l6834 2CB0  
                                        l6754 3988                                          l6746 3952  
                                        l6596 179E                                          l6588 170E  
                                        l6692 2792                                          l6684 2746  
                                        l6676 2714                                          l6940 1D92  
                                        l6932 1D4E                                          l6924 1CFE  
                                        l6908 2498                                          l6764 38AA  
                                        l6756 3882                                          l6780 24E8  
                                        l6828 265E                                          l6860 2D6C  
                                        l6852 2D3C                                          l6844 2CF4  
                                        l6836 2CC6                                          l6748 3962  
                                        l6598 17AC                                          l6694 27CE  
                                        l6686 2752                                          l6678 272A  
                                        l6950 1DDA                                          l6942 1D9A  
                                        l6934 1D56                                          l6926 1D14  
                                        l6870 2316                                          l5990 3A04  
                                        l6766 38F4                                          l6774 3912  
                                        l6758 3888                                          l6790 257C  
                                        l6782 251E                                          l6862 2D8A  
                                        l6854 2D44                                          l6846 2D06  
                                        l6838 2CD0                                          l6696 27DA  
                                        l6688 2784                                          l6952 1E6C  
                                        l6944 1DAA                                          l6936 1D62  
                                        l6928 1D18                                          l6880 23C4  
                                        l6872 2324                                          l5992 3A24  
                                        l6768 38FC                                          l6792 2598  
                                        l6784 253A                                          l6864 2D98  
                                        l6856 2D52                                          l6848 2D18  
                                        l6698 27E8                                          l6970 1F00  
                                        l6954 1E78                                          l6946 1DC0  
                                        l6938 1D7C                                          l6890 2438  
                                        l6874 2380                                          l5994 3A30  
                                        l6794 25AE                                          l6786 2550  
                                        l6778 24E4                                          l6866 2DAE  
                                        l6858 2D56                                          l6972 1F1C  
                                        l6948 1DC4                                          l6964 1E90  
                                        l6876 239C                                          l6884 23D0  
                                        l5996 3A42                                          l5988 3A04  
                                        l6796 25BE                                          l6788 2560  
                                        l6868 2DB6                                          l6990 2C0A  
                                        l6982 2B66                                          l6974 1F24  
                                        l6958 1E84                                          l6966 1EDA  
                                        l6894 244C                                          l6886 2410  
                                        l6878 23A8                                          l5998 3A44  
                                        l6798 25CE                                          l6992 2C1E  
                                        l6984 2B80                                          l6968 1EF8  
                                        l6896 245E                                          l6888 2424  
                                        l6994 2C26                                          l6986 2B80  
                                        l6996 2C3A                                          l6988 2B8C  
                                        l6998 2C3E                                          STR_1 102A  
                                        STR_2 1036                                          STR_3 100F  
                                        STR_4 101D                                          STR_5 1001  
                                        u3100 1144                                          u3020 105E  
                                        u3101 1140                                          u3021 105A  
                                        _LATA 003FBA                                          u3110 11B2  
                                        u3030 1070                                          _LATB 003FBB  
                                        u3111 11AE                                          u3031 106C  
                                        _LATC 003FBC                                          u3200 1290  
                                        u3120 11CA                                          u3040 1080  
                                        _LATD 003FBD                                          u3201 128C  
                                        u3121 11C4                                          u3041 107C  
                                        _LATE 003FBE                                          u3210 12AE  
                                        u3130 11CC                                          u3050 10C2  
                                        u3211 12AA                                          u3051 10BE  
                                        u3300 13EC                                          u3220 12E6  
                                        u3140 11F4                                          u3060 10D8  
                                        u3301 13E8                                          u3221 12E2  
                                        u3141 11F0                                          u3061 10D4  
                                        u3310 1402                                          u3230 132C  
                                        u3150 1212                                          u3070 10EA  
                                        u3311 13FE                                          u3231 1328  
                                        u3151 120E                                          u3071 10E6  
                                        u3400 14F0                                          u3320 1418  
                                        u3240 1362                                          u3160 1232  
                                        u3080 10FA                                          u5000 1F3E  
                                        u3401 14EC                                          u3321 1414  
                                        u3241 135E                                          u3161 122E  
                                        u3081 10F6                                          u5001 1F3A  
                                        u3330 142C                                          u3250 1372  
                                        u3170 1240                                          u3090 1136  
                                        u5010 1F5A                                          _T2PR 003FAB  
                                        u3331 1428                                          u3251 136E  
                                        u3171 123C                                          u3091 1132  
                                        u5011 1F56                                          u3340 1446  
                                        u3260 139E                                          u3180 1250  
                                        u5020 20AA                                          u5100 39F8  
                                        u1645 3C3C                                          u3341 1442  
                                        u3261 139A                                          u3181 124C  
                                        u5021 20A6                                          u5101 39F4  
                                        u1646 3C3E                                          u3350 1480  
                                        u3270 13AE                                          u3190 1282  
                                        u5030 20C8                                          u3351 147C  
                                        u3271 13AA                                          u3191 127E  
                                        u5031 20C4                                          u5200 2E88  
                                        u3360 1492                                          u3280 13CA  
                                        u5040 20E2                                          u6000 251E  
                                        u5201 2E84                                          u3361 148E  
                                        u3281 13C6                                          u5041 20DE  
                                        u6001 251A                                          u5210 2EBA  
                                        u3370 14A2                                          u3290 13DA  
                                        u5050 20FC                                          u6010 253A  
                                        _T4PR 003F9F                                          u5211 2EB6  
                                        u5115 4052                                          u3371 149E  
                                        u3291 13D6                                          u5051 20F8  
                                        u6011 2536                                          u5220 353A  
                                        u5300 3256                                          u3380 14C2  
                                        u5060 210A                                          u6100 2632  
                                        u6020 2550                                          u5221 3536  
                                        u5125 401C                                          u5301 3252  
                                        u3381 14BE                                          u5061 2106  
                                        u6101 262E                                          u6021 254C  
                                        u5230 3554                                          u5310 3272  
                                        u3390 14D4                                          u5150 3EC2  
                                        u5070 2162                                          u6110 2652  
                                        u6030 257C                                          u5231 3550  
                                        u5311 326E                                          u3391 14D0  
                                        u5135 3FE6                                          u5151 3EBE  
                                        u5071 215E                                          u6111 264E  
                                        u6031 2578                                          u5240 357A  
                                        u5160 2DE2                                          u5400 1992  
                                        u5320 296C                                          u6200 239C  
                                        u5080 21B8                                          u6040 2598  
                                        u6120 2CC6                                          u5241 3576  
                                        u5161 2DDE                                          u5401 198E  
                                        u5145 3FB0                                          u5321 2968  
                                        u6201 2398                                          u5081 21B4  
                                        u6041 2594                                          u6121 2CC2  
                                        u5250 3598                                          u5170 2E04  
                                        u5410 19D6                                          u5330 2994  
                                        u6210 23C4                                          u5090 227C  
                                        u6050 25AE                                          u6130 2CF0  
                                        u5251 3594                                          u5171 2E00  
                                        u5411 19D2                                          u5331 2990  
                                        u6211 23C0                                          u5091 2278  
                                        u6051 25AA                                          u6131 2CEC  
                                        u5260 35B4                                          u3900 2F56  
                                        u5180 2E3E                                          u6300 1DDA  
                                        u5500 1B74                                          u5420 19E8  
                                        u5340 29B8                                          u6220 245E  
                                        u6060 25CE                                          u6140 2D06  
                                        _PMD0 0039C0                                          u5261 35B0  
                                        u3901 2F52                                          u5181 2E3A  
                                        u6301 1DD6                                          u5501 1B70  
                                        u5421 19E4                                          u5341 29B4  
                                        u6221 245A                                          u6061 25CA  
                                        u6141 2D02                                          _PMD1 0039C1  
                                        u5270 35DA                                          u3910 2F6A  
                                        u5190 2E60                                          u6310 1EF8  
                                        u5510 1B92                                          u5430 19F8  
                                        u5350 29E0                                          u6230 2484  
                                        u6070 25F0                                          u6150 2D18  
                                        _PMD2 0039C2                                          u5271 35D6  
                                        u3911 2F66                                          u5191 2E5C  
                                        u6311 1EF4                                          u5511 1B8E  
                                        u5431 19F4                                          u5351 29DC  
                                        u6231 2480                                          u6071 25EC  
                                        u6151 2D14                                          _PMD3 0039C3  
                                        u3920 2F92                                          u5360 3770  
                                        u5280 31FA                                          u6320 1F1C  
                                        u6240 1D14                                          u5600 1CDC  
                                        u5520 1BB2                                          u5440 1A38  
                                        u4800 3A14                                          u6080 2606  
                                        u6160 2D2E                                          u6400 2AC4  
                                        _PMD4 0039C4                                          u3921 2F8E  
                                        u5361 376C                                          u5281 31F6  
                                        u6321 1F18                                          u6241 1D10  
                                        u5601 1CD8                                          u5521 1BAE  
                                        u5441 1A34                                          u4801 3A10  
                                        u6081 2602                                          u6161 2D2A  
                                        u6401 2AC0                                          _PMD5 0039C5  
                                        u5610 1520                                          u3930 2FB2  
                                        u5370 3780                                          u5290 3216  
                                        u6330 2C1E                                          u6250 1D34  
                                        u5530 1BC4                                          u5450 1A78  
                                        u4810 3A24                                          u6090 261C  
                                        u6170 2D6C                                          u6410 2AD6  
                                        _PMD6 0039C6                                          u5611 151C  
                                        u3931 2FAE                                          u5371 377C  
                                        u5291 3212                                          u6331 2C1A  
                                        u6251 1D30                                          u5531 1BC0  
                                        u5451 1A74                                          u4811 3A20  
                                        u6091 2618                                          u6171 2D68  
                                        u6411 2AD2                                          _PMD7 0039C7  
                                        u5700 17E2                                          u5620 1532  
                                        u3940 2FC2                                          u6340 2C3A  
                                        u6260 1D4E                                          u5540 1BF2  
                                        u5460 1AEE                                          u5380 1970  
                                        u4900 3116                                          u4820 3A54  
                                        u6180 2D8A                                          u6420 2B1E  
                                        u5701 17DE                                          u5621 152E  
                                        u3941 2FBE                                          u6341 2C36  
                                        u6261 1D4A                                          u5541 1BEE  
                                        u5461 1AEA                                          u5381 196C  
                                        u4901 3112                                          u4821 3A50  
                                        u6181 2D86                                          u6421 2B1A  
                                        u5710 1802                                          u5630 1542  
                                        u6350 2C6A                                          u6270 1D7C  
                                        u5550 1C08                                          u5470 1B10  
                                        u5390 1982                                          u4910 3140  
                                        u4830 37FE                                          u6190 2DAE  
                                        u6430 2B48                                          u5711 17FE  
                                        u5631 153E                                          u6351 2C66  
                                        u6271 1D78                                          u5551 1C04  
                                        u5471 1B0C                                          u5391 197E  
                                        u4911 313C                                          u4831 37FA  
                                        u6191 2DAA                                          u6431 2B44  
                                        u5720 1814                                          u5640 1582  
                                        u3880 2EF4                                          u6360 2C92  
                                        u6280 1D92                                          u5560 1C1C  
                                        u5480 1B3A                                          u5800 3014  
                                        u4920 3180                                          u4840 3810  
                                        u5721 1810                                          u5641 157E  
                                        u3881 2EF0                                          u6361 2C8E  
                                        u6281 1D8E                                          u5561 1C18  
                                        u5481 1B36                                          u5801 3010  
                                        u4921 317C                                          u4841 380C  
                                        u5730 1842                                          u5650 1594  
                                        u3890 2F28                                          u6290 1DC0  
                                        u5570 1C36                                          u5490 1B5E  
                                        u5810 3052                                          u4930 32E2  
                                        u4850 3838                                          u6370 2A3A  
                                        u5731 183E                                          u5651 1590  
                                        u6291 1DBC                                          u5571 1C32  
                                        u5491 1B5A                                          u5811 304E  
                                        u4931 32DE                                          u4851 3834  
                                        u6371 2A36                                          u5740 1858  
                                        u5660 15A4                                          u5900 27E8  
                                        u5580 1C7E                                          u5820 3070  
                                        u4940 330C                                          u4860 386E  
                                        u6380 2A4A                                          u5741 1854  
                                        u5661 15A0                                          u5901 27E4  
                                        u5581 1C7A                                          u5821 306C  
                                        u4941 3308                                          u4861 386A  
                                        u6381 2A46                                          u5750 186C  
                                        u5670 15DA                                          u5910 27F8  
                                        u5590 1CAE                                          u5830 3090  
                                        u4950 333A                                          u4870 3E5C  
                                        u6390 2A9C                                          u5751 1868  
                                        u5671 15D6                                          u3895 2F1E  
                                        u5911 27F4                                          u5591 1CAA  
                                        u5831 308C                                          u4951 3336  
                                        u4871 3E58                                          u6391 2A98  
                                        u5760 1886                                          u5680 15EA  
                                        u5920 2806                                          u5840 30E0  
                                        u4880 3F0C                                          u4960 346C  
                                        u5761 1882                                          u5681 15E6  
                                        u5921 2802                                          u5841 30DC  
                                        u4881 3F08                                          u4961 3468  
                                        u5770 18CE                                          u5690 1788  
                                        u5930 2840                                          u5850 26C0  
                                        u4970 3490                                          u5771 18CA  
                                        u5931 283C                                          u5851 26BC  
                                        u4891 30F0                                          u4971 348C  
                                        u5780 18FC                                          u5940 284E  
                                        u5860 26CE                                          u4980 34E8  
                                        u5781 18F8                                          u5941 284A  
                                        u5861 26CA                                          u4981 34E4  
                                        u5790 1936                                          u5870 272A  
                                        u4990 34F6                                          u5950 3962  
                                        u5791 1932                                          u5695 177E  
                                        u5871 2726                                          u4991 34F2  
                                        u5951 395E                                          u5880 2780  
                                        u5960 3984                                          u5881 277C  
                                        u5961 3980                                          u5890 27CA  
                                        u5970 3998                                          u5891 27C6  
                                        u5971 3994                                          u5980 389E  
                                        u5981 389A                                          u5990 38F4  
                                        u5991 38F0                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          _dbuf 0100  
                                        _main 42EA                                          _loop 2A0C  
                                        _prec 00D2                                          _nout 00CE  
                                        pad@i 0077                                          pad@p 0074  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 0079                                          fsr2l 003FD9  
                                        _utoa 1F2E                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 00F0                               ___fldiv@new_exp 0087  
                             _TMR3_Initialize 3F1C                               _PWM5_Initialize 438A  
                           ??_CLC3_Initialize 0020                 ??_UART1_SetTxInterruptHandler 0022  
                  ??_TMR4_SetInterruptHandler 0022                             _UART1_rx_vect_isr 3B64  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 3FF6  
                          ?_UART1_rx_vect_isr 0001                                         ??_pad 0076  
                        ??_UART1_Transmit_ISR 0017                 __end_of_OSCILLATOR_Initialize 43BA  
                               ___fltol@sign1 0020                               __end_of___aldiv 2EDC  
                                       _ADACT 003EFE                                         _ADCAP 003EF5  
                     __end_of_CCP3_Initialize 414E                               __end_of___fladd 1504  
                                       ?_main 0001                                         _ADCLK 003EFF  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 1CF0                                         _ADREF 003EFD  
                             __end_of___awdiv 35EC                                         ?_loop 0001  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0009  
                             __end_of___flmul 1954                      TMR5_ReadTimer@readValLow 0014  
                             __end_of___fltol 2FE4                                         ?_utoa 007B  
                             __end_of___lodiv 31DC                               ___awdiv@divisor 0062  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P3H 003DF1                                         _U1P1L 003DEC  
                                       _T3CLK 003FA9                                         _U1P2L 003DEE  
                                       _T2CON 003FAC                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                               __end_of___lomod 3394  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 3BA2  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 3B4E                                         i1l333 3E9C  
                                       i1l350 4438                                         i1l343 36AA  
                                       i1l336 3EA0                                         i1l353 4436  
                                       _U1TXB 003DEA                                         i1l347 41FE  
                                       i1l356 4430                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 443C  
                                       i1l692 417A                                         i2l534 422A  
                                       i2l438 40C0                                         i2l446 3C92  
                                       i2l552 3DBC                                         i1l688 3BF4  
                                       i2l529 42E8                                         i2l537 43C6  
                                       i1l698 443A                                         i2l476 40F0  
                                       i2l558 4340                                         i2l487 3CDE  
                         ??_UART1_rx_vect_isr 001A                                         i2l863 3B0E  
                                       i2l856 3E14                                         i2l868 427A  
                             ___awdiv@counter 0064                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 009D                                  vfpfcnvrt@llu 00A5  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 443C  
                             _TMR4_Initialize 417C                               _PWM6_Initialize 4372  
                           _UART1_tx_vect_isr 3B10                              __end_of_TMR4_ISR 3C08  
                     setSteering@steeringMode 006A                                         _delay 0030  
                                       _flags 0022                                         _fputc 37EA  
                                       _fputs 3E16                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0070                                         _width 00D0  
                                       _putch 43C8                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         pclatu 003FFB  
                                       tablat 003FF5                                   _BatteryVolt 0024  
                                       utoa@d 007D                                         utoa@i 0099  
                                       utoa@n 0091                                         utoa@p 008D  
                                       utoa@w 008F                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 43E6                   _UART1_SetRxInterruptHandler 43DC  
                     __end_of_CCP4_Initialize 4120                              ___lodiv@dividend 0060  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 443A  
          ??_UART1_DefaultFramingErrorHandler 001A             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 4438                           ??_UART1_tx_vect_isr 0017  
                   __end_of_UART1_rx_vect_isr 3BB6                               _TMR5_Initialize 3D36  
                             _PWM7_Initialize 435A                               __initialization 3F54  
                       TMR5_ReadTimer@readVal 0011                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 430A                                  __end_of_loop 2B66  
                                __end_of_utoa 2134                   ??_UART1_DefaultErrorHandler 001A  
                     __end_of_TMR2_Initialize 4326                                  ?_UART1_Write 0001  
                                      ??_main 0022                                        ??_loop 0022  
                                      ??_utoa 0085                                 __activetblptr 000003  
                                _calcMotorPow 2B66                     __end_of_UART1_tx_vect_isr 3B62  
                                startAccell@i 0071                              ___lodiv@quotient 0070  
                             _PWM8_Initialize 4342                              _UART1_Initialize 36AC  
                                _calcSteering 2316                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0060  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0069                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0060  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 3FF6  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1244 4434                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 43A2                       __end_of_TMR3_Initialize 3F54  
                                      i1l4540 41E8                                        i1l4542 41F8  
                                      i1l5326 442C                                        i1l4544 41FC  
                                      i1l4536 41D4                                        i1l4538 41E6  
                                      i1l5620 4432                                        i1l5800 3B8A  
                                      i1l5820 3BCE                                        i1l5822 3BE8  
                                      i1l5670 3E80                                        i1l5736 414E  
                                      i1l5824 3BEC                                        i1l5680 35FC  
                                      i1l5672 3E82                                        i1l5738 4162  
                                      i1l5818 3BCA                                        i1l5690 3654  
                                      i1l5682 360C                                        i1l5674 3E92  
                                      i1l5666 3E5E                                        i1l5692 366C  
                                      i1l5684 361C                                        i1l5676 3E96  
                                      i1l5668 3E6E                                        i1l5694 3688  
                                      i1l5686 3634                                        i1l5678 35EC  
                                      i1l5696 36A6                                        i1l5688 3644  
                                      i2l5330 42D4                                        i1l5794 3B22  
                                      i2l5332 42E0                                        i1l5796 3B36  
                                      i1l5798 3B76                                        i2l5328 42C6  
                                      i2l4560 421A                                        i2l4552 4200  
                                      i2l5336 43BA                                        _INLVLA 003A44  
                                      i2l4554 420E                                        i2l4562 4220  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l4564 4224                                        i2l4556 4210  
                                      i2l5700 40A0                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l4558 4214  
                                      i2l5710 40DC                                        i2l5702 40AC  
                                      i2l5720 433C                                        i2l5712 40EA  
                                      i2l5704 40BA                                        i2l5714 4326  
                                      i2l5810 3D8C                                        i2l5706 40C2  
                                      i2l5802 3C60                                        i2l5716 4332  
                                      i2l5812 3D90                                        i2l5708 40D0  
                                      i2l5804 3C70                                        i2l5830 3DE0  
                                      i2l5718 4338                                        i2l5814 3DA4  
                                      i2l5806 3CAC                                        i2l5840 3ADA  
                                      i2l5832 3DF0                                        i2l5808 3CBC  
                                      i2l5842 3AEA                                        i2l5834 3E02  
                                      i2l5826 3DCC                                        i2l5844 3AFC  
                                      i2l5836 3ABC                                        i2l5828 3DD0  
                                      i2l5846 4254                                        i2l5838 3AC0  
                                      i2l5848 4258                                        i2l5698 4092  
                                ?_setSteering 0068                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 37EA                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 43FA                              __end_of___xxtofl 2862  
                         ?_PWM8_LoadDutyValue 0020                              __end_of_getCurve 26AA  
                    __end_of_CCP3_SetCallBack 442C                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 0126  
                                      ___flge 2FE4                                     ??___aldiv 0020  
                                   ??___fladd 0097                                     ??___fldiv 007E  
                                   ??___awdiv 0020                                     ??___flmul 007E  
                                   ??___fltol 00A3                                     ??___lodiv 0020  
                                   ??___lomod 0020                                 _CCP3_CallBack 00F4  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 438A  
                     __end_of_TMR4_Initialize 41A8                                        clear_0 3F5A  
                                      clear_1 3F66                                        clear_2 3F72  
                            ___awdiv@quotient 0066                                        _motPow 00DE  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                               _CCP4_CallBack 00F2                                        _smtWay 00C6  
                                      _printf 422C                                        pad@buf 0072  
                            ?_CCP3_Initialize 0001                                        _strlen 3EE0  
                        ??_PWM8_LoadDutyValue 0060                              __end_of_setMotor 32C2  
                             _ADCC_Initialize 3A5E          __end_of_TMR4_DefaultInterruptHandler 443C  
                _TMR4_DefaultInterruptHandler 443A                                        fputc@c 0060  
                              _PMD_Initialize 42A2                                        fputs@c 006D  
                                      fputs@i 006E                                        fputs@s 0069  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 3DCA  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                              __end_of_vfprintf 3A02  
                   ?_ADCC_GetSingleConversion 0020                                        utoa@fp 007B  
    TMR4_SetInterruptHandler@InterruptHandler 0020  TMR5_SetGateInterruptHandler@InterruptHandler 0020  
 UART1_SetTxInterruptHandler@InterruptHandler 0020   UART1_SetRxInterruptHandler@InterruptHandler 0020  
        __end_of_UART1_SetOverrunErrorHandler 43F0                  _UART1_SetOverrunErrorHandler 43E6  
                   _UART1_DefaultErrorHandler 442C                             getCurve@deltaLeft 0060  
                                  ___flge@ff1 0076                                    ___flge@ff2 007A  
                     __end_of_PWM7_Initialize 4372                       __end_of_TMR5_Initialize 3D80  
                                ___xxtofl@arg 0072                                  ___xxtofl@exp 0071  
                           _SYSTEM_Initialize 3CEC                                  ___xxtofl@val 0068  
                                  __accesstop 0060                       __end_of__initialization 3F84  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0068  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                                  ___fltol@f1 009F                               _TMR5_WriteTimer 4200  
                   calcMotorPow@setSpeedDelta 00A9                      __end_of_CCP4_SetCallBack 4422  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 417C  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0022  
                                   ?_TMR4_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 3882                                 __end_of_fputs 3E5E  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 43D2  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 435A  
                      __end_of_PMD_Initialize 42C6                         CCP3_CaptureISR@module 0005  
              CCP3_SetCallBack@customCallBack 0020                     _UART1_FramingErrorHandler 00FA  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                                       ??_fputc 0064  
                   __end_of_SYSTEM_Initialize 3D36                                       ??_fputs 0022  
                             _CLC3_Initialize 41A8                                       ??_putch 0021  
                 PWM7_LoadDutyValue@dutyValue 0020                                    __pbssBANK0 00AE  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0020  
                      ?_UART1_SetErrorHandler 0020                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 0040  
                       _TMR4_InterruptHandler 00EA                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 0076                                    ??_TMR4_ISR 001D  
                     __end_of_ADCC_Initialize 3ABA                    __end_of_PWM6_LoadDutyValue 3FC0  
        __end_of_TMR5_SetGateInterruptHandler 440E                  _TMR5_SetGateInterruptHandler 4404  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 0128                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 35EC                                    _getReverse 2CB0  
                                     ?_strlen 0020                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0020                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0068                            _PWM5_LoadDutyValue 3FC0  
                                  _distRightM 00E6                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 1F2E  
                                     _IVTLOCK 003FD4                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1TMR 003F12  
                                     _SMT1WIN 003F23                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 3916  
                         ??_UART1_Receive_ISR 001A                              ___lomod@dividend 0060  
                     __end_of_TMR5_WriteTimer 422C                           ?_PWM5_LoadDutyValue 0020  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0020                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0062  
                                     __Lparam 0000                      __end_of_UART1_Initialize 3750  
                                     ___aldiv 2DCE                                       ___fladd 1042  
                                     ___fldiv 1954                                       ___awdiv 3526  
                                     ___flmul 1504                                       ___fltol 2EDC  
                                     ___lodiv 30EA                                       ___lomod 32C2  
                   __end_of_UART1_Receive_ISR 36AC                                     ?_vfprintf 0120  
                        ??_PWM5_LoadDutyValue 0060                                  __psmallconst 1000  
                                     __pcinit 3F54                     _TMR5_GateInterruptHandler 00EE  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
               ?_TMR5_SetGateInterruptHandler 0020                                       __ptext0 42EA  
                                     __ptext1 2A0C                                       __ptext2 3916  
                                     __ptext3 2CB0                                       __ptext4 24E4  
                                     __ptext5 3882                                       __ptext6 427C  
                                     __ptext7 422C                                       __ptext8 399A  
                                     __ptext9 2134                                ??_TMR4_10msISR 001D  
                                  ??_actSpeed 0022                       __end_of_CLC3_Initialize 41D4  
                       _OSCILLATOR_Initialize 43A2                                     _T2CONbits 003FAC  
                                  ??___xxtofl 006C                                     _T3CONbits 003FA6  
                            ___aldiv@dividend 0060                                     _T4CONbits 003FA0  
                                     _tempCNT 00D4                      ??_PIN_MANAGER_Initialize 0020  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0020                                     _IPR10bits 00398A  
                                     _smtDuty 00CA                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0020                                     _PIE10bits 00399A  
                        end_of_initialization 3F84                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 001D                                     _PIR10bits 0039AA  
                                   _T4RSTbits 003FA3                                       fputc@fp 0062  
                           ??_SMT1_PR_ACQ_ISR 0017           __end_of_UART1_SetTxInterruptHandler 43DC  
                 _UART1_SetTxInterruptHandler 43D2                                       fputs@fp 006B  
              ??_UART1_SetOverrunErrorHandler 0022                                    ??_setMotor 0064  
                           __end_of_vfpfcnvrt 2316                             ?_CCP3_SetCallBack 0020  
                            ___aldiv@quotient 006A                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0017                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0022  
                                  ??_vfprintf 0022              __end_of_ADCC_GetSingleConversion 3EE0  
                           UART1_Write@txData 0020                           _UART1_RxDataHandler 41D4  
                                     strlen@a 0060                                       strlen@s 0020  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                                   ___fladd@grs 009E  
                          getCurve@deltaRight 0062                                 ___xxtofl@sign 0070  
                                 ___fldiv@grs 0089                                   ___fldiv@rem 0082  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 000D  
                        setSteering@steeringB 006F                          setSteering@steeringF 006D  
                     TMR5_WriteTimer@timerVal 000D                                   ___flmul@grs 0084  
           CCP4_DefaultCallBack@capturedValue 0007                             ?_CCP4_SetCallBack 0020  
                __end_of_INTERRUPT_Initialize 3C54                                __end_of___flge 30EA  
                          ??_CCP4_SetCallBack 0022                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 009F                                   vfpfcnvrt@fp 009B  
                      ?_OSCILLATOR_Initialize 0001                                __end_of_printf 4254  
                            ?_CLC3_Initialize 0001                                __end_of_strlen 3F1C  
                              _TMR5_ReadTimer 42C6                           start_initialization 3F54  
                             ___lodiv@divisor 0068                               ___lodiv@counter 0078  
              ??_TMR5_SetGateInterruptHandler 0022                                   __end_of_pad 3526  
                     ??_UART1_SetErrorHandler 0022                         ??_UART1_RxDataHandler 001A  
                                 putch@txData 0021                                    ivt0x8_base 0008  
                               _uart1RxBuffer 00B6                                   _actMotorPow 0026  
                               _uart1TxBuffer 00BE                          __end_of_TMR4_10msISR 4436  
                                 vfprintf@fmt 0122                                      ??___flge 007E  
                            ??_PMD_Initialize 0020                                  _oldDistRight 00E2  
                  __end_of_PWM7_LoadDutyValue 4062                             ??_SMT1_Initialize 0020  
                                    ??_printf 0022                                      ??_strlen 0022  
                      __end_of_TMR5_ReadTimer 42EA                         CCP4_CaptureISR@module 000B  
                                   ___fladd@a 0093                                     ___fladd@b 008F  
                         calcMotorPow@addMPow 00AD                      _ADCC_GetSingleConversion 3EA2  
                                   ___fldiv@a 007A                                     ___fldiv@b 0076  
                 PWM5_LoadDutyValue@dutyValue 0020                         TMR4_ISR@CountCallBack 002A  
                                   ___flmul@a 007A                                     ___flmul@b 0076  
                                 __pbssCOMRAM 0022                            _UART1_ErrorHandler 00F6  
                               __pcstackBANK0 0060                                 __pcstackBANK1 0120  
                          _PWM6_LoadDutyValue 3F8A                      _UART1_RxInterruptHandler 00FE  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 40C2  
                                   _calcSpeed 1CF0                           ?_PWM6_LoadDutyValue 0020  
                 PWM8_LoadDutyValue@dutyValue 0020                  fp__UART1_DefaultErrorHandler 0000  
                                   _checkBatt 3882                                  _currentSpeed 00DA  
                ?_UART1_SetRxInterruptHandler 0020                                     __pnvBANK0 00EA  
                          setMotor@motorPower 0062                        _PIN_MANAGER_Initialize 3394  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 43FA  
                _UART1_SetFramingErrorHandler 43F0                                      ?___aldiv 0060  
             ADCC_GetSingleConversion@channel 0062                                      ?___fladd 008F  
            __end_of_TMR4_SetInterruptHandler 4418                                      ?___fldiv 0076  
                                    ?___awdiv 0060             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0009                                      ?___flmul 0076  
                                    ?___fltol 009F                                      ?___lodiv 0060  
                                    ?___lomod 0060                            ??_UART1_Initialize 0022  
                                   _distLeftM 00E8                                     _distFront 003E  
                            _uart1RxLastError 0034                                 ??_UART1_Write 0020  
                                   _distRight 002C                          ??_PWM6_LoadDutyValue 0060  
                                   _cycle10ms 0031                               ?_TMR5_ReadTimer 000D  
                               ?_calcMotorPow 0001                               ___lomod@divisor 0068  
                                 __smallconst 1000                               ___lomod@counter 0020  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 0033           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 4438            ??_UART1_DefaultOverrunErrorHandler 001A  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 4436  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 3DCC                                 ?_calcSteering 0001  
                               _TMR5_GATE_ISR 3D80                                     _curveMode 0032  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 3C08                                 ??_setSteering 006B  
                             ___aldiv@divisor 0064                               _SMT1_PW_ACQ_ISR 3ABC  
                             ___aldiv@counter 0068                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0020                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 40F2                             ??_CCP3_Initialize 0022  
                                    _PIE1bits 003991                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _PIE7bits 003997  
                                    _IPR9bits 003989                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                    i1u290_20 41F8                                      i1u450_20 3E92  
                                    i1u290_21 41F4                                      i1u450_21 3E8E  
                                    i1u451_20 360C                                      i1u451_21 3608  
               ??_UART1_SetRxInterruptHandler 0022                                      i1u460_20 4162  
                                    i1u460_21 415E                                      i1u453_20 3644  
                                    i1u452_28 3622                                      i1u453_21 3640  
                                    i1u452_29 3634                                      i1u461_28 4168  
                                    i1u461_29 417A                                      i1u455_20 3688  
                                    i1u454_28 365A                                      i1u471_20 3B8A  
                                    i1u470_28 3B3C                                      i1u455_21 3684  
                                    i1u454_29 366C                                      i1u471_21 3B86  
                                    i1u470_29 3B4E                                      i1u456_28 368E  
                                    i1u472_28 3B90                                      i1u449_20 3E6E  
                                    i1u456_29 36A2                                      i1u472_29 3BA2  
                                    i1u449_21 3E6A                                      i1u477_20 3BE8  
                                    i1u469_20 3B36                                      i1u477_21 3BE4  
                                    i1u469_21 3B32                                      _PIR1bits 0039A1  
                                    i2u291_40 420E                                      i2u291_41 420A  
                                    _PIR4bits 0039A4                                      i2u457_40 40A0  
                                    i2u457_41 409C                                      i2u458_40 40D0  
                                    i2u473_48 3C7E                                      i2u458_41 40CC  
                                    i2u473_49 3C92                                      i2u475_40 3DA4  
                                    i2u474_48 3CCA                                      i2u475_41 3DA0  
                                    i2u474_49 3CDE                                      _PIR6bits 0039A6  
                                    i2u476_48 3DAA                                      i2u476_49 3DBC  
                                    _PIR7bits 0039A7                                      i2u478_40 3DF0  
                                    i2u478_41 3DEC                                      i2u479_40 3AEA  
                                    i2u479_41 3AE6                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 4254                                      _TMR4_ISR 3BB8  
                  __end_of_UART1_Transmit_ISR 3EA2                                 _TMR4_CallBack 414E  
                                   _smtPeriod 003A                 ?_UART1_SetFramingErrorHandler 0020  
                               ??_TMR5_Reload 000F                                     _vfpfcnvrt 2134  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 427C  
                                ??_getReverse 0022                                ??_calcMotorPow 00A7  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0022  
                              ??_calcSteering 00A7                           ??_SMT1_Overflow_ISR 0017  
                   TMR5_ReadTimer@readValHigh 0013                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 3A5E                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                           ??_getBatteryVoltage 0022  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 0040  
                           ??_TMR2_Initialize 0020                                  _uart1RxCount 0035  
                          __end_of_getReverse 2DCE                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 427C  
                         __end_of_setSteering 2A0C                                    vfprintf@ap 0124  
                                    __Lrparam 0000                                    vfprintf@fp 0120  
                                 _oldDistLeft 0028                                 ??_startAccell 0022  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00AB  
                   __end_of_getBatteryVoltage 42A2                       ??_OSCILLATOR_Initialize 0020  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 4092  
                     __end_of_SMT1_PR_ACQ_ISR 3E16                                    ?_vfpfcnvrt 009B  
                           ??_PWM5_Initialize 0020                             ??_TMR3_Initialize 0020  
                    _TMR4_SetInterruptHandler 440E                                      _actSpeed 3750  
                                _TMR4_10msISR 4432                                      ___xxtofl 26AA  
                         __end_of_TMR5_Reload 43C8                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 3B10                                      _getCurve 24E4  
                                    __ptext10 1F2E                                      __ptext11 345E  
                                    __ptext20 2FE4                                      __ptext12 3EE0  
                                    __ptext21 2316                                      __ptext13 3E16  
                                    __ptext30 3FF6                                      __ptext22 2862  
                                    __ptext14 37EA                                      __ptext31 402C  
                                    __ptext23 3F8A                                      __ptext15 43C8  
                                    __ptext40 43D2                                      __ptext32 3750  
                                    __ptext24 3FC0                                      __ptext16 3A02  
                                    __ptext41 43DC                                      __ptext33 2DCE  
                                    __ptext25 1954                                      __ptext17 32C2  
                                    __ptext50 430A                                      __ptext42 43E6  
                                    __ptext34 26AA                                      __ptext26 1CF0  
                                    __ptext18 30EA                                      __ptext51 4062  
                                    __ptext43 43F0                                      __ptext35 2EDC  
                                    __ptext27 1042                                      __ptext19 3EA2  
                                    __ptext60 41A8                                      __ptext52 4342  
                                    __ptext44 43FA                                      __ptext36 1504  
                                    __ptext28 2B66                                      __ptext61 40F2  
                                    __ptext53 435A                                      __ptext45 3D36  
                                    __ptext37 3526                                      __ptext29 31DC  
                                    __ptext70 4436                                      __ptext62 4418  
                                    __ptext54 4372                                      __ptext46 4404  
                                    __ptext38 3CEC                                      __ptext71 4438  
                                    __ptext63 4120                                      __ptext55 438A  
                                    __ptext47 417C                                      __ptext39 36AC  
                                    __ptext80 4092                                      __ptext72 442C  
                                    __ptext64 4422                                      __ptext56 42A2  
                                    __ptext48 440E                                      __ptext81 3CA0  
                                    __ptext73 41D4                                      __ptext65 3A5E  
                                    __ptext57 3394                                      __ptext49 3F1C  
                                    __ptext90 4254                                      __ptext82 40C2  
                                    __ptext74 3BB8                                      __ptext66 3B10  
                                    __ptext58 43A2                                      __ptext91 0000  
                                    __ptext83 3D80                                      __ptext75 414E  
                                    __ptext67 3E5E                                      __ptext59 3C08  
                                    __ptext84 4326                                      __ptext76 4432  
                                    __ptext68 3B64                                      __ptext85 43BA  
                                    __ptext77 443A                                      __ptext69 35EC  
                                    __ptext86 4200                                      __ptext78 443C  
                                    __ptext87 42C6                                      __ptext79 3C54  
                                    __ptext88 3DCC                                      __ptext89 3ABC  
                                    _distLeft 002E                                   ??_calcSpeed 00A7  
               __end_of_UART1_SetErrorHandler 4404                                    _T3GCONbits 003FA7  
                                 ??_checkBatt 0022                             ??_TMR4_Initialize 0022  
                           ??_PWM6_Initialize 0020                                      _oldSpeed 00D8  
                                  _T5GCONbits 003F9B                               _SMT1_Initialize 4062  
                                 _IVTLOCKbits 003FD4                                      _setMotor 31DC  
                                    _setSpeed 00DC                     _UART1_OverrunErrorHandler 00F8  
UART1_SetOverrunErrorHandler@interruptHandler 0020                                      isa$xinst 000000  
                  ??_ADCC_GetSingleConversion 0060                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 399A  
                                   printf@fmt 0128                    __end_of_PWM8_LoadDutyValue 402C  
                             _CCP3_CaptureISR 3C54                                   _UART1_Write 3A02  
                       fp__UART1_Transmit_ISR 0000                             ??_PWM7_Initialize 0020  
                           ??_TMR5_Initialize 0060           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 4342            ??_TMR5_DefaultGateInterruptHandler 0015  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 4326  
                         __end_of_startAccell 399A                                _battCheckCount 00E0  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0022  
                                _reverseCount 00E4                               ??_TMR5_GATE_ISR 0015  
                 __end_of_UART1_RxDataHandler 4200                                   _uart1RxHead 0037  
                        _CCP4_DefaultCallBack 40C2                                   _uart1TxHead 0039  
                                 _uart1RxTail 0036                                   _uart1TxTail 0038  
                      ??_INTERRUPT_Initialize 0020                            _PWM7_LoadDutyValue 402C  
                                    intlevel1 0000                                      intlevel2 0000  
                                 _setSteering 2862                               _CCP4_CaptureISR 3CA0  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0020  
                         ?_PWM7_LoadDutyValue 0020                          __end_of_calcMotorPow 2CB0  
                             ??_TMR4_CallBack 001D                          __end_of_calcSteering 24E4  
                         _uart1RxStatusBuffer 00AE                                      printf@ap 012C  
                            ??_TMR5_ReadTimer 000F  UART1_SetFramingErrorHandler@interruptHandler 0020  
           __end_of_UART1_DefaultErrorHandler 4432                                   ??_vfpfcnvrt 00A1  
                                 _reverseTime 00D6                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 43BA                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0060  
                               actSpeed@speed 006E                         ?_CCP4_DefaultCallBack 0007  
                   calcMotorPow@oldSpeedDelta 00AB                              _CCP3_SetCallBack 4422  
                                ___aldiv@sign 0069                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 4120                   PWM6_LoadDutyValue@dutyValue 0020  
                           calcSteering@delta 00A9                      _UART1_TxInterruptHandler 00FC  
                               ___fladd@signs 009B                           __end_of_Default_ISR 443E  
                     __end_of_SMT1_Initialize 4092                __end_of_PIN_MANAGER_Initialize 345E  
                           ??_ADCC_Initialize 0020                                  ___fladd@aexp 009C  
                                ___fladd@bexp 009D                  ?_UART1_SetTxInterruptHandler 0020  
                     __end_of_CCP3_CaptureISR 3CA0  
