

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jan 24 21:55:13 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=4,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=4,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=4,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=4,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=4,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=4,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=4,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	text91,global,reloc=4,class=CODE,delta=1
   107                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	text92,global,reloc=4,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112  0000                     
   113                           ; Version 2.20
   114                           ; Generated 05/05/2020 GMT
   115                           ; 
   116                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F46K42 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     _ADERRL	set	16098
   148  0000                     _ADERRH	set	16099
   149  0000                     _ADPREVL	set	16109
   150  0000                     _ADPREVH	set	16110
   151  0000                     _ADFLTRL	set	16102
   152  0000                     _ADFLTRH	set	16103
   153  0000                     _ADACCL	set	16104
   154  0000                     _ADACCH	set	16105
   155  0000                     _ADCNT	set	16107
   156  0000                     _ADRESL	set	16111
   157  0000                     _ADRESH	set	16112
   158  0000                     _ADCON0	set	16120
   159  0000                     _ADCON1	set	16121
   160  0000                     _ADPREH	set	16119
   161  0000                     _ADPREL	set	16118
   162  0000                     _ADCAP	set	16117
   163  0000                     _ADACQH	set	16116
   164  0000                     _ADPCH	set	16113
   165  0000                     _ADRPT	set	16108
   166  0000                     _ADACCU	set	16106
   167  0000                     _ADSTPTH	set	16101
   168  0000                     _ADSTPTL	set	16100
   169  0000                     _ADUTHH	set	16097
   170  0000                     _ADUTHL	set	16096
   171  0000                     _ADLTHH	set	16095
   172  0000                     _T2CON	set	16300
   173  0000                     _T2TMR	set	16298
   174  0000                     _T2PR	set	16299
   175  0000                     _T2HLT	set	16301
   176  0000                     _T2CLKCON	set	16302
   177  0000                     _SMT1SIG	set	16162
   178  0000                     _SMT1WIN	set	16163
   179  0000                     _SMT1CLK	set	16161
   180  0000                     _SMT1STAT	set	16160
   181  0000                     _SMT1CON1	set	16159
   182  0000                     _PWM8DCL	set	16224
   183  0000                     _PWM8DCH	set	16225
   184  0000                     _PWM8CON	set	16226
   185  0000                     _CCPTMRS1bits	set	16223
   186  0000                     _PWM7DCL	set	16228
   187  0000                     _PWM7DCH	set	16229
   188  0000                     _PWM7CON	set	16230
   189  0000                     _T4CON	set	16288
   190  0000                     _PIR7bits	set	14759
   191  0000                     _T4TMR	set	16286
   192  0000                     _T4PR	set	16287
   193  0000                     _T4RST	set	16291
   194  0000                     _T4HLT	set	16289
   195  0000                     _T4CLKCON	set	16290
   196  0000                     _T3CON	set	16294
   197  0000                     _TMR3L	set	16292
   198  0000                     _TMR3H	set	16293
   199  0000                     _T3CLK	set	16297
   200  0000                     _T3GATE	set	16296
   201  0000                     _T3GCON	set	16295
   202  0000                     _T5CON	set	16282
   203  0000                     _T5CLK	set	16285
   204  0000                     _T5GATE	set	16284
   205  0000                     _CCPR4L	set	16240
   206  0000                     _CCPR4H	set	16241
   207  0000                     _CCP4CAP	set	16243
   208  0000                     _CCP4CON	set	16242
   209  0000                     _IPR9bits	set	14729
   210  0000                     _IVTBASEL	set	16341
   211  0000                     _IVTBASEH	set	16342
   212  0000                     _IVTBASEU	set	16343
   213  0000                     _CCP4PPS	set	15056
   214  0000                     _SMT1WINPPS	set	15057
   215  0000                     _CLCIN0PPS	set	15065
   216  0000                     _CLCIN3PPS	set	15068
   217  0000                     _TRISD	set	16325
   218  0000                     _TRISC	set	16324
   219  0000                     _TRISB	set	16323
   220  0000                     _LATC	set	16316
   221  0000                     _LATB	set	16315
   222  0000                     _OSCTUNE	set	14814
   223  0000                     _OSCFRQ	set	14815
   224                           
   225                           	psect	nvCOMRAM
   226  000038                     __pnvCOMRAM:
   227                           	callstack 0
   228  000038                     _TMR5_GateInterruptHandler:
   229                           	callstack 0
   230  000038                     	ds	2
   231  00003A                     _timer5ReloadVal:
   232                           	callstack 0
   233  00003A                     	ds	2
   234  00003C                     _UART1_TxInterruptHandler:
   235                           	callstack 0
   236  00003C                     	ds	2
   237  00003E                     _UART1_RxInterruptHandler:
   238                           	callstack 0
   239  00003E                     	ds	2
   240  000040                     _uart1TxBufferRemaining:
   241                           	callstack 0
   242  000040                     	ds	1
   243                           
   244                           	psect	nvBANK0
   245  0000EF                     __pnvBANK0:
   246                           	callstack 0
   247  0000EF                     _BatteryVolt:
   248                           	callstack 0
   249  0000EF                     	ds	2
   250  0000F1                     _TMR4_InterruptHandler:
   251                           	callstack 0
   252  0000F1                     	ds	2
   253  0000F3                     _timer3ReloadVal:
   254                           	callstack 0
   255  0000F3                     	ds	2
   256  0000F5                     _CCP4_CallBack:
   257                           	callstack 0
   258  0000F5                     	ds	2
   259  0000F7                     _CCP3_CallBack:
   260                           	callstack 0
   261  0000F7                     	ds	2
   262  0000F9                     _UART1_ErrorHandler:
   263                           	callstack 0
   264  0000F9                     	ds	2
   265  0000FB                     _UART1_OverrunErrorHandler:
   266                           	callstack 0
   267  0000FB                     	ds	2
   268  0000FD                     _UART1_FramingErrorHandler:
   269                           	callstack 0
   270  0000FD                     	ds	2
   271  0000                     _CLC3CON	set	15456
   272  0000                     _U1ERRIRbits	set	15865
   273  0000                     _ADCON1bits	set	16121
   274  0000                     _ADSTATbits	set	16124
   275  0000                     _ADCON2bits	set	16122
   276  0000                     _ADCON3bits	set	16123
   277  0000                     _ADCON0bits	set	16120
   278  0000                     _SMT1PR	set	16155
   279  0000                     _SMT1STATbits	set	16160
   280  0000                     _SMT1CON0bits	set	16158
   281  0000                     _SMT1CON1bits	set	16159
   282  0000                     _PR2	set	16299
   283  0000                     _TMR2	set	16298
   284  0000                     _T2CONbits	set	16300
   285  0000                     _T2RSTbits	set	16303
   286  0000                     _T2HLTbits	set	16301
   287  0000                     _PR4	set	16287
   288  0000                     _TMR4	set	16286
   289  0000                     _T4CONbits	set	16288
   290  0000                     _T4RSTbits	set	16291
   291  0000                     _T4HLTbits	set	16289
   292  0000                     _T3GCONbits	set	16295
   293  0000                     _T3CONbits	set	16294
   294  0000                     _T5GCONbits	set	16283
   295  0000                     _T5CONbits	set	16282
   296  0000                     _IVTLOCKbits	set	16340
   297  0000                     _GIE	set	130711
   298  0000                     _IPR1bits	set	14721
   299  0000                     _IPR3bits	set	14723
   300  0000                     _PIE3bits	set	14739
   301  0000                     _PMD0	set	14784
   302  0000                     _OSCCON1	set	14809
   303  0000                     _OSCCON3	set	14811
   304  0000                     _OSCEN	set	14813
   305  0000                     _RA0PPS	set	14848
   306  0000                     _RA1PPS	set	14849
   307  0000                     _ANSELA	set	14912
   308  0000                     _ANSELB	set	14928
   309  0000                     _ANSELC	set	14944
   310  0000                     _ANSELD	set	14960
   311  0000                     _LATA	set	16314
   312  0000                     _LATD	set	16317
   313  0000                     _LATE	set	16318
   314  0000                     _PMD7	set	14791
   315  0000                     _PMD6	set	14790
   316  0000                     _PMD5	set	14789
   317  0000                     _PMD4	set	14788
   318  0000                     _PMD3	set	14787
   319  0000                     _PMD2	set	14786
   320  0000                     _PMD1	set	14785
   321  0000                     _TRISA	set	16322
   322  0000                     _TRISE	set	16326
   323  0000                     _PORTDbits	set	16333
   324  0000                     _INTCON0bits	set	16338
   325  0000                     _INLVLD	set	14964
   326  0000                     _SLRCOND	set	14963
   327  0000                     _ODCOND	set	14962
   328  0000                     _RD0I2C	set	14970
   329  0000                     _WPUD	set	14961
   330  0000                     _ANSELE	set	14976
   331  0000                     _INLVLC	set	14948
   332  0000                     _SLRCONC	set	14947
   333  0000                     _ODCONC	set	14946
   334  0000                     _RC3I2C	set	14954
   335  0000                     _WPUC	set	14945
   336  0000                     _INLVLB	set	14932
   337  0000                     _SLRCONB	set	14931
   338  0000                     _ODCONB	set	14930
   339  0000                     _RB1I2C	set	14938
   340  0000                     _WPUB	set	14929
   341  0000                     _T5GPPS	set	15049
   342  0000                     _CCP3PPS	set	15055
   343  0000                     _INLVLE	set	14980
   344  0000                     _SLRCONE	set	14979
   345  0000                     _ODCONE	set	14978
   346  0000                     _WPUE	set	14977
   347  0000                     _INLVLA	set	14916
   348  0000                     _SLRCONA	set	14915
   349  0000                     _ODCONA	set	14914
   350  0000                     _WPUA	set	14913
   351  0000                     _RB2I2C	set	14939
   352  0000                     _RC4I2C	set	14955
   353  0000                     _RD1I2C	set	14971
   354  0000                     _U1RXPPS	set	15077
   355  0000                     _RA3PPS	set	14851
   356  0000                     _RA4PPS	set	14852
   357  0000                     _CLC3CONbits	set	15456
   358  0000                     _U1RXB	set	15848
   359  0000                     _U1TXB	set	15850
   360  0000                     _U1P1L	set	15852
   361  0000                     _RB3PPS	set	14859
   362  0000                     _CLCIN2PPS	set	15067
   363  0000                     _SMT1SIGPPS	set	15058
   364  0000                     _PIE7bits	set	14743
   365  0000                     _PIE8bits	set	14744
   366  0000                     _PIE9bits	set	14745
   367  0000                     _PIR9bits	set	14761
   368  0000                     _SMT1TMR	set	16146
   369  0000                     _SMT1CPR	set	16149
   370  0000                     _SMT1CPW	set	16152
   371  0000                     _ADLTHL	set	16094
   372  0000                     _SMT1PRL	set	16155
   373  0000                     _SMT1PRH	set	16156
   374  0000                     _SMT1PRU	set	16157
   375  0000                     _SMT1CON0	set	16158
   376  0000                     _CCPTMRS0bits	set	16222
   377  0000                     _CCPR3L	set	16244
   378  0000                     _CCPR3H	set	16245
   379  0000                     _CCP3CON	set	16246
   380  0000                     _U1ERRIE	set	15866
   381  0000                     _U1ERRIR	set	15865
   382  0000                     _U1UIR	set	15864
   383  0000                     _U1FIFO	set	15863
   384  0000                     _U1BRGH	set	15862
   385  0000                     _U1BRGL	set	15861
   386  0000                     _U1CON2	set	15860
   387  0000                     _U1CON1	set	15859
   388  0000                     _U1CON0	set	15858
   389  0000                     _U1P3H	set	15857
   390  0000                     _U1P3L	set	15856
   391  0000                     _U1P2H	set	15855
   392  0000                     _U1P2L	set	15854
   393  0000                     _U1P1H	set	15853
   394  0000                     _IVTLOCK	set	16340
   395  0000                     _IPR7bits	set	14727
   396  0000                     _IPR8bits	set	14728
   397  0000                     _IPR10bits	set	14730
   398  0000                     _PIE1bits	set	14737
   399  0000                     _TMR5L	set	16280
   400  0000                     _TMR5H	set	16281
   401  0000                     _T5GCON	set	16283
   402  0000                     _CCP3CAP	set	16247
   403  0000                     _PIR10bits	set	14762
   404  0000                     _PIR1bits	set	14753
   405  0000                     _PIR6bits	set	14758
   406  0000                     _PIR8bits	set	14760
   407  0000                     _PIE10bits	set	14746
   408  0000                     _PWM6DCL	set	16232
   409  0000                     _PWM6DCH	set	16233
   410  0000                     _PWM6CON	set	16234
   411  0000                     _PWM5DCL	set	16236
   412  0000                     _PWM5DCH	set	16237
   413  0000                     _PWM5CON	set	16238
   414  0000                     _PIR4bits	set	14756
   415  0000                     _CLC3GLS3	set	15465
   416  0000                     _CLC3GLS2	set	15464
   417  0000                     _CLC3GLS1	set	15463
   418  0000                     _CLC3GLS0	set	15462
   419  0000                     _CLC3SEL3	set	15461
   420  0000                     _CLC3SEL2	set	15460
   421  0000                     _CLC3SEL1	set	15459
   422  0000                     _CLC3SEL0	set	15458
   423  0000                     _CLC3POL	set	15457
   424  0000                     _T2RST	set	16303
   425  0000                     _ADACQL	set	16115
   426  0000                     _ADCLK	set	16127
   427  0000                     _ADACT	set	16126
   428  0000                     _ADREF	set	16125
   429  0000                     _ADSTAT	set	16124
   430  0000                     _ADCON3	set	16123
   431  0000                     _ADCON2	set	16122
   432                           
   433                           	psect	smallconst
   434  001000                     __psmallconst:
   435                           	callstack 0
   436  001000  00                 	db	0
   437  001001                     STR_2:
   438                           
   439                           ; BSR set to: 0
   440  001001  4F                 	db	79	;'O'
   441  001002  75                 	db	117	;'u'
   442  001003  74                 	db	116	;'t'
   443  001004  20                 	db	32
   444  001005  7C                 	db	124
   445  001006  20                 	db	32
   446  001007  64                 	db	100	;'d'
   447  001008  4C                 	db	76	;'L'
   448  001009  3D                 	db	61	;'='
   449  00100A  20                 	db	32
   450  00100B  25                 	db	37
   451  00100C  64                 	db	100	;'d'
   452  00100D  20                 	db	32
   453  00100E  7C                 	db	124
   454  00100F  20                 	db	32
   455  001010  64                 	db	100	;'d'
   456  001011  52                 	db	82	;'R'
   457  001012  3D                 	db	61	;'='
   458  001013  20                 	db	32
   459  001014  25                 	db	37
   460  001015  64                 	db	100	;'d'
   461  001016  00                 	db	0
   462  001017                     STR_5:
   463                           
   464                           ; BSR set to: 0
   465  001017  20                 	db	32
   466  001018  20                 	db	32
   467  001019  20                 	db	32
   468  00101A  43                 	db	67	;'C'
   469  00101B  75                 	db	117	;'u'
   470  00101C  72                 	db	114	;'r'
   471  00101D  76                 	db	118	;'v'
   472  00101E  65                 	db	101	;'e'
   473  00101F  52                 	db	82	;'R'
   474  001020  69                 	db	105	;'i'
   475  001021  67                 	db	103	;'g'
   476  001022  68                 	db	104	;'h'
   477  001023  74                 	db	116	;'t'
   478  001024  00                 	db	0
   479  001025                     STR_3:
   480                           
   481                           ; BSR set to: 0
   482  001025  20                 	db	32
   483  001026  20                 	db	32
   484  001027  20                 	db	32
   485  001028  43                 	db	67	;'C'
   486  001029  75                 	db	117	;'u'
   487  00102A  72                 	db	114	;'r'
   488  00102B  76                 	db	118	;'v'
   489  00102C  65                 	db	101	;'e'
   490  00102D  4C                 	db	76	;'L'
   491  00102E  65                 	db	101	;'e'
   492  00102F  66                 	db	102	;'f'
   493  001030  74                 	db	116	;'t'
   494  001031  00                 	db	0
   495  001032                     STR_9:
   496                           
   497                           ; BSR set to: 0
   498  001032  41                 	db	65	;'A'
   499  001033  66                 	db	102	;'f'
   500  001034  74                 	db	116	;'t'
   501  001035  65                 	db	101	;'e'
   502  001036  72                 	db	114	;'r'
   503  001037  43                 	db	67	;'C'
   504  001038  75                 	db	117	;'u'
   505  001039  72                 	db	114	;'r'
   506  00103A  76                 	db	118	;'v'
   507  00103B  65                 	db	101	;'e'
   508  00103C  0A                 	db	10
   509  00103D  00                 	db	0
   510  00103E                     STR_7:
   511                           
   512                           ; BSR set to: 0
   513  00103E  64                 	db	100	;'d'
   514  00103F  69                 	db	105	;'i'
   515  001040  73                 	db	115	;'s'
   516  001041  74                 	db	116	;'t'
   517  001042  4C                 	db	76	;'L'
   518  001043  3D                 	db	61	;'='
   519  001044  20                 	db	32
   520  001045  25                 	db	37
   521  001046  64                 	db	100	;'d'
   522  001047  0A                 	db	10
   523  001048  00                 	db	0
   524  001049                     STR_8:
   525                           
   526                           ; BSR set to: 0
   527  001049  64                 	db	100	;'d'
   528  00104A  69                 	db	105	;'i'
   529  00104B  73                 	db	115	;'s'
   530  00104C  74                 	db	116	;'t'
   531  00104D  52                 	db	82	;'R'
   532  00104E  3D                 	db	61	;'='
   533  00104F  20                 	db	32
   534  001050  25                 	db	37
   535  001051  64                 	db	100	;'d'
   536  001052  0A                 	db	10
   537  001053  00                 	db	0
   538  001054                     STR_1:
   539                           
   540                           ; BSR set to: 0
   541  001054  42                 	db	66	;'B'
   542  001055  56                 	db	86	;'V'
   543  001056  6F                 	db	111	;'o'
   544  001057  6C                 	db	108	;'l'
   545  001058  74                 	db	116	;'t'
   546  001059  3A                 	db	58	;':'
   547  00105A  20                 	db	32
   548  00105B  25                 	db	37
   549  00105C  75                 	db	117	;'u'
   550  00105D  0A                 	db	10
   551  00105E  00                 	db	0
   552  00105F                     STR_10:
   553                           
   554                           ; BSR set to: 0
   555  00105F  4F                 	db	79	;'O'
   556  001060  75                 	db	117	;'u'
   557  001061  74                 	db	116	;'t'
   558  001062  43                 	db	67	;'C'
   559  001063  75                 	db	117	;'u'
   560  001064  72                 	db	114	;'r'
   561  001065  76                 	db	118	;'v'
   562  001066  65                 	db	101	;'e'
   563  001067  0A                 	db	10
   564  001068  00                 	db	0
   565  001069                     STR_6:
   566                           
   567                           ; BSR set to: 0
   568  001069  49                 	db	73	;'I'
   569  00106A  6E                 	db	110	;'n'
   570  00106B  43                 	db	67	;'C'
   571  00106C  75                 	db	117	;'u'
   572  00106D  72                 	db	114	;'r'
   573  00106E  76                 	db	118	;'v'
   574  00106F  65                 	db	101	;'e'
   575  001070  0A                 	db	10
   576  001071  00                 	db	0
   577  001072  00                 	db	0	; dummy byte at the end
   578  0000                     
   579                           ; #config settings
   580                           
   581                           	psect	cinit
   582  004146                     __pcinit:
   583                           	callstack 0
   584  004146                     start_initialization:
   585                           	callstack 0
   586  004146                     __initialization:
   587                           	callstack 0
   588                           
   589                           ; Clear objects allocated to BANK1 (32 bytes)
   590  004146  EE00  F100         	lfsr	0,__pbssBANK1
   591  00414A  0E20               	movlw	32
   592  00414C                     clear_0:
   593  00414C  6AEE               	clrf	postinc0,c
   594  00414E  06E8               	decf	wreg,f,c
   595  004150  E1FD               	bnz	clear_0
   596                           
   597                           ; Clear objects allocated to BANK0 (61 bytes)
   598  004152  EE00  F0B2         	lfsr	0,__pbssBANK0
   599  004156  0E3D               	movlw	61
   600  004158                     clear_1:
   601  004158  6AEE               	clrf	postinc0,c
   602  00415A  06E8               	decf	wreg,f,c
   603  00415C  E1FD               	bnz	clear_1
   604                           
   605                           ; Clear objects allocated to COMRAM (21 bytes)
   606  00415E  EE00  F023         	lfsr	0,__pbssCOMRAM
   607  004162  0E15               	movlw	21
   608  004164                     clear_2:
   609  004164  6AEE               	clrf	postinc0,c
   610  004166  06E8               	decf	wreg,f,c
   611  004168  E1FD               	bnz	clear_2
   612                           
   613                           ;
   614                           ; Setup IVTBASE
   615                           ;
   616  00416A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   617  00416C  6ED5               	movwf	213,c
   618  00416E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   619  004170  6ED6               	movwf	214,c
   620  004172  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   621  004174  6ED7               	movwf	215,c
   622  004176                     end_of_initialization:
   623                           	callstack 0
   624  004176                     __end_of__initialization:
   625                           	callstack 0
   626  004176  0100               	movlb	0
   627  004178  EF5C  F022         	goto	_main	;jump to C main() function
   628                           
   629                           	psect	bssCOMRAM
   630  000023                     __pbssCOMRAM:
   631                           	callstack 0
   632  000023                     _flags:
   633                           	callstack 0
   634  000023                     	ds	2
   635  000025                     _motPow:
   636                           	callstack 0
   637  000025                     	ds	2
   638  000027                     TMR4_ISR@CountCallBack:
   639                           	callstack 0
   640  000027                     	ds	2
   641  000029                     _distRightM:
   642                           	callstack 0
   643  000029                     	ds	2
   644  00002B                     _distLeftM:
   645                           	callstack 0
   646  00002B                     	ds	2
   647  00002D                     _reverseCount:
   648                           	callstack 0
   649  00002D                     	ds	1
   650  00002E                     _uart1RxLastError:
   651                           	callstack 0
   652  00002E                     	ds	1
   653  00002F                     _uart1RxCount:
   654                           	callstack 0
   655  00002F                     	ds	1
   656  000030                     _uart1RxTail:
   657                           	callstack 0
   658  000030                     	ds	1
   659  000031                     _uart1RxHead:
   660                           	callstack 0
   661  000031                     	ds	1
   662  000032                     _uart1TxTail:
   663                           	callstack 0
   664  000032                     	ds	1
   665  000033                     _uart1TxHead:
   666                           	callstack 0
   667  000033                     	ds	1
   668  000034                     _smtPeriod:
   669                           	callstack 0
   670  000034                     	ds	4
   671                           
   672                           	psect	bssBANK0
   673  0000B2                     __pbssBANK0:
   674                           	callstack 0
   675  0000B2                     _uart1RxStatusBuffer:
   676                           	callstack 0
   677  0000B2                     	ds	8
   678  0000BA                     _uart1RxBuffer:
   679                           	callstack 0
   680  0000BA                     	ds	8
   681  0000C2                     _uart1TxBuffer:
   682                           	callstack 0
   683  0000C2                     	ds	8
   684  0000CA                     _smtWay:
   685                           	callstack 0
   686  0000CA                     	ds	4
   687  0000CE                     _smtDuty:
   688                           	callstack 0
   689  0000CE                     	ds	4
   690  0000D2                     _nout:
   691                           	callstack 0
   692  0000D2                     	ds	2
   693  0000D4                     _width:
   694                           	callstack 0
   695  0000D4                     	ds	2
   696  0000D6                     _prec:
   697                           	callstack 0
   698  0000D6                     	ds	2
   699  0000D8                     _actMotorPow:
   700                           	callstack 0
   701  0000D8                     	ds	2
   702  0000DA                     _oldSpeed:
   703                           	callstack 0
   704  0000DA                     	ds	2
   705  0000DC                     _currentSpeed:
   706                           	callstack 0
   707  0000DC                     	ds	2
   708  0000DE                     _setSpeed:
   709                           	callstack 0
   710  0000DE                     	ds	2
   711  0000E0                     _oldDistRight:
   712                           	callstack 0
   713  0000E0                     	ds	2
   714  0000E2                     _oldDistLeft:
   715                           	callstack 0
   716  0000E2                     	ds	2
   717  0000E4                     _distRight:
   718                           	callstack 0
   719  0000E4                     	ds	2
   720  0000E6                     _distLeft:
   721                           	callstack 0
   722  0000E6                     	ds	2
   723  0000E8                     _battCheckCount:
   724                           	callstack 0
   725  0000E8                     	ds	1
   726  0000E9                     _delay:
   727                           	callstack 0
   728  0000E9                     	ds	1
   729  0000EA                     _cycle10ms:
   730                           	callstack 0
   731  0000EA                     	ds	1
   732  0000EB                     _curveMode:
   733                           	callstack 0
   734  0000EB                     	ds	1
   735  0000EC                     _driveMode:
   736                           	callstack 0
   737  0000EC                     	ds	1
   738  0000ED                     _distFront:
   739                           	callstack 0
   740  0000ED                     	ds	2
   741                           
   742                           	psect	bssBANK1
   743  000100                     __pbssBANK1:
   744                           	callstack 0
   745  000100                     _dbuf:
   746                           	callstack 0
   747  000100                     	ds	32
   748                           
   749                           	psect	cstackBANK1
   750  000120                     __pcstackBANK1:
   751                           	callstack 0
   752  000120                     vfpfcnvrt@ll:
   753                           	callstack 0
   754                           
   755                           ; 8 bytes @ 0x0
   756  000120                     	ds	8
   757  000128                     vfpfcnvrt@llu:
   758                           	callstack 0
   759                           
   760                           ; 8 bytes @ 0x8
   761  000128                     	ds	8
   762  000130                     ?_printf:
   763                           	callstack 0
   764  000130                     printf@fmt:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x10
   768  000130                     	ds	6
   769  000136                     ??_getCurve:
   770                           
   771                           ; 1 bytes @ 0x16
   772  000136                     	ds	2
   773  000138                     getCurve@deltaLeft:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x18
   777  000138                     	ds	2
   778  00013A                     getCurve@deltaRight:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x1A
   782  00013A                     	ds	2
   783                           
   784                           	psect	cstackBANK0
   785  000060                     __pcstackBANK0:
   786                           	callstack 0
   787  000060                     ??_TMR5_Initialize:
   788  000060                     ??_PWM7_LoadDutyValue:
   789  000060                     ??_PWM8_LoadDutyValue:
   790  000060                     ??_PWM5_LoadDutyValue:
   791  000060                     ??_PWM6_LoadDutyValue:
   792  000060                     ??_ADCC_GetSingleConversion:
   793  000060                     ?___awdiv:
   794                           	callstack 0
   795  000060                     ?___aldiv:
   796                           	callstack 0
   797  000060                     ?___aodiv:
   798                           	callstack 0
   799  000060                     ?___aomod:
   800                           	callstack 0
   801  000060                     ?___lodiv:
   802                           	callstack 0
   803  000060                     ?___lomod:
   804                           	callstack 0
   805  000060                     ___awdiv@dividend:
   806                           	callstack 0
   807  000060                     fputc@c:
   808                           	callstack 0
   809  000060                     strlen@a:
   810                           	callstack 0
   811  000060                     ___aldiv@dividend:
   812                           	callstack 0
   813  000060                     ___aodiv@dividend:
   814                           	callstack 0
   815  000060                     ___aomod@dividend:
   816                           	callstack 0
   817  000060                     ___lodiv@dividend:
   818                           	callstack 0
   819  000060                     ___lomod@dividend:
   820                           	callstack 0
   821                           
   822                           ; 8 bytes @ 0x0
   823  000060                     	ds	2
   824  000062                     setMotor@motorPower:
   825                           	callstack 0
   826  000062                     ___awdiv@divisor:
   827                           	callstack 0
   828  000062                     fputc@fp:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x2
   832  000062                     	ds	2
   833  000064                     ??_setMotor:
   834  000064                     ??_fputc:
   835  000064                     ___awdiv@counter:
   836                           	callstack 0
   837  000064                     ___aldiv@divisor:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x4
   841  000064                     	ds	1
   842  000065                     ___awdiv@sign:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x5
   846  000065                     	ds	1
   847  000066                     ___awdiv@quotient:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x6
   851  000066                     	ds	2
   852  000068                     ?___xxtofl:
   853                           	callstack 0
   854  000068                     ___aldiv@counter:
   855                           	callstack 0
   856  000068                     setSteering@steering:
   857                           	callstack 0
   858  000068                     ___xxtofl@val:
   859                           	callstack 0
   860  000068                     ___aodiv@divisor:
   861                           	callstack 0
   862  000068                     ___aomod@divisor:
   863                           	callstack 0
   864  000068                     ___lodiv@divisor:
   865                           	callstack 0
   866  000068                     ___lomod@divisor:
   867                           	callstack 0
   868                           
   869                           ; 8 bytes @ 0x8
   870  000068                     	ds	1
   871  000069                     ___aldiv@sign:
   872                           	callstack 0
   873  000069                     fputs@s:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x9
   877  000069                     	ds	1
   878  00006A                     setSteering@steeringMode:
   879                           	callstack 0
   880  00006A                     ___aldiv@quotient:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0xA
   884  00006A                     	ds	1
   885  00006B                     ??_setSteering:
   886  00006B                     fputs@fp:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0xB
   890  00006B                     	ds	1
   891  00006C                     ??___xxtofl:
   892                           
   893                           ; 1 bytes @ 0xC
   894  00006C                     	ds	1
   895  00006D                     fputs@c:
   896                           	callstack 0
   897  00006D                     setSteering@steeringF:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0xD
   901  00006D                     	ds	1
   902  00006E                     actSpeed@speed:
   903                           	callstack 0
   904  00006E                     fputs@i:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0xE
   908  00006E                     	ds	1
   909  00006F                     setSteering@steeringB:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0xF
   913  00006F                     	ds	1
   914  000070                     ?_abs:
   915                           	callstack 0
   916  000070                     ?_pad:
   917                           	callstack 0
   918  000070                     ___aodiv@counter:
   919                           	callstack 0
   920  000070                     ___xxtofl@sign:
   921                           	callstack 0
   922  000070                     pad@fp:
   923                           	callstack 0
   924  000070                     abs@a:
   925                           	callstack 0
   926  000070                     ___lodiv@quotient:
   927                           	callstack 0
   928                           
   929                           ; 8 bytes @ 0x10
   930  000070                     	ds	1
   931  000071                     ??_calcSteering:
   932  000071                     ___aodiv@sign:
   933                           	callstack 0
   934  000071                     ___xxtofl@exp:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x11
   938  000071                     	ds	1
   939  000072                     ??_abs:
   940  000072                     pad@buf:
   941                           	callstack 0
   942  000072                     ___xxtofl@arg:
   943                           	callstack 0
   944  000072                     ___aodiv@quotient:
   945                           	callstack 0
   946                           
   947                           ; 8 bytes @ 0x12
   948  000072                     	ds	1
   949  000073                     calcSteering@delta:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x13
   953  000073                     	ds	1
   954  000074                     pad@p:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x14
   958  000074                     	ds	2
   959  000076                     ?___flmul:
   960                           	callstack 0
   961  000076                     pad@i:
   962                           	callstack 0
   963  000076                     ___flge@ff1:
   964                           	callstack 0
   965  000076                     ___flmul@b:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x16
   969  000076                     	ds	2
   970  000078                     ___lodiv@counter:
   971                           	callstack 0
   972  000078                     pad@w:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x18
   976  000078                     	ds	2
   977  00007A                     ?_dtoa:
   978                           	callstack 0
   979  00007A                     ?_utoa:
   980                           	callstack 0
   981  00007A                     dtoa@fp:
   982                           	callstack 0
   983  00007A                     utoa@fp:
   984                           	callstack 0
   985  00007A                     ___flge@ff2:
   986                           	callstack 0
   987  00007A                     ___flmul@a:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x1A
   991  00007A                     	ds	2
   992  00007C                     dtoa@d:
   993                           	callstack 0
   994  00007C                     utoa@d:
   995                           	callstack 0
   996                           
   997                           ; 8 bytes @ 0x1C
   998  00007C                     	ds	2
   999  00007E                     ??___flmul:
  1000  00007E                     ??___flge:
  1001                           
  1002                           ; 1 bytes @ 0x1E
  1003  00007E                     	ds	4
  1004  000082                     ___flmul@sign:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x22
  1008  000082                     	ds	1
  1009  000083                     ___flmul@aexp:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x23
  1013  000083                     	ds	1
  1014  000084                     ??_dtoa:
  1015  000084                     ??_utoa:
  1016  000084                     ___flmul@grs:
  1017                           	callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x24
  1020  000084                     	ds	4
  1021  000088                     ___flmul@bexp:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x28
  1025  000088                     	ds	1
  1026  000089                     ___flmul@prod:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x29
  1030  000089                     	ds	3
  1031  00008C                     _dtoa$3455:
  1032                           	callstack 0
  1033  00008C                     utoa@p:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x2C
  1037  00008C                     	ds	1
  1038  00008D                     ___flmul@temp:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x2D
  1042  00008D                     	ds	1
  1043  00008E                     dtoa@p:
  1044                           	callstack 0
  1045  00008E                     utoa@w:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x2E
  1049  00008E                     	ds	1
  1050  00008F                     ?___fladd:
  1051                           	callstack 0
  1052  00008F                     ___fladd@b:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x2F
  1056  00008F                     	ds	1
  1057  000090                     dtoa@w:
  1058                           	callstack 0
  1059  000090                     utoa@n:
  1060                           	callstack 0
  1061                           
  1062                           ; 8 bytes @ 0x30
  1063  000090                     	ds	2
  1064  000092                     dtoa@s:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x32
  1068  000092                     	ds	1
  1069  000093                     ___fladd@a:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x33
  1073  000093                     	ds	1
  1074  000094                     dtoa@n:
  1075                           	callstack 0
  1076                           
  1077                           ; 8 bytes @ 0x34
  1078  000094                     	ds	3
  1079  000097                     ??___fladd:
  1080                           
  1081                           ; 1 bytes @ 0x37
  1082  000097                     	ds	1
  1083  000098                     utoa@i:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x38
  1087  000098                     	ds	3
  1088  00009B                     ___fladd@signs:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x3B
  1092  00009B                     	ds	1
  1093  00009C                     ___fladd@aexp:
  1094                           	callstack 0
  1095  00009C                     dtoa@i:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x3C
  1099  00009C                     	ds	1
  1100  00009D                     ___fladd@bexp:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x3D
  1104  00009D                     	ds	1
  1105  00009E                     ?_vfpfcnvrt:
  1106                           	callstack 0
  1107  00009E                     ___fladd@grs:
  1108                           	callstack 0
  1109  00009E                     vfpfcnvrt@fp:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x3E
  1113  00009E                     	ds	1
  1114  00009F                     ?___fltol:
  1115                           	callstack 0
  1116  00009F                     ___fltol@f1:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x3F
  1120  00009F                     	ds	1
  1121  0000A0                     vfpfcnvrt@fmt:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x40
  1125  0000A0                     	ds	2
  1126  0000A2                     vfpfcnvrt@ap:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x42
  1130  0000A2                     	ds	1
  1131  0000A3                     ??___fltol:
  1132                           
  1133                           ; 1 bytes @ 0x43
  1134  0000A3                     	ds	1
  1135  0000A4                     ??_vfpfcnvrt:
  1136                           
  1137                           ; 1 bytes @ 0x44
  1138  0000A4                     	ds	3
  1139  0000A7                     ??_calcSpeed:
  1140  0000A7                     ??_calcMotorPow:
  1141                           
  1142                           ; 1 bytes @ 0x47
  1143  0000A7                     	ds	1
  1144  0000A8                     ?_vfprintf:
  1145                           	callstack 0
  1146  0000A8                     vfprintf@fp:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x48
  1150  0000A8                     	ds	1
  1151  0000A9                     calcMotorPow@setSpeedDelta:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x49
  1155  0000A9                     	ds	1
  1156  0000AA                     vfprintf@fmt:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x4A
  1160  0000AA                     	ds	1
  1161  0000AB                     calcSpeed@speed:
  1162                           	callstack 0
  1163  0000AB                     calcMotorPow@oldSpeedDelta:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x4B
  1167  0000AB                     	ds	1
  1168  0000AC                     vfprintf@ap:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x4C
  1172  0000AC                     	ds	1
  1173  0000AD                     calcMotorPow@addMPow:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x4D
  1177  0000AD                     	ds	1
  1178  0000AE                     vfprintf@cfmt:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x4E
  1182  0000AE                     	ds	2
  1183  0000B0                     printf@ap:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x50
  1187  0000B0                     	ds	2
  1188                           
  1189                           	psect	cstackCOMRAM
  1190  000001                     __pcstackCOMRAM:
  1191                           	callstack 0
  1192  000001                     CCP3_DefaultCallBack@capturedValue:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x0
  1196  000001                     	ds	2
  1197  000003                     ??_CCP3_CaptureISR:
  1198                           
  1199                           ; 1 bytes @ 0x2
  1200  000003                     	ds	2
  1201  000005                     CCP3_CaptureISR@module:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x4
  1205  000005                     	ds	2
  1206  000007                     CCP4_DefaultCallBack@capturedValue:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x6
  1210  000007                     	ds	2
  1211  000009                     ??_CCP4_CaptureISR:
  1212                           
  1213                           ; 1 bytes @ 0x8
  1214  000009                     	ds	2
  1215  00000B                     CCP4_CaptureISR@module:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0xA
  1219  00000B                     	ds	2
  1220  00000D                     ?_TMR5_ReadTimer:
  1221                           	callstack 0
  1222  00000D                     TMR5_WriteTimer@timerVal:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0xC
  1226  00000D                     	ds	2
  1227  00000F                     ??_TMR5_ReadTimer:
  1228  00000F                     
  1229                           ; 1 bytes @ 0xE
  1230  00000F                     	ds	2
  1231  000011                     TMR5_ReadTimer@readVal:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x10
  1235  000011                     	ds	2
  1236  000013                     TMR5_ReadTimer@readValHigh:
  1237                           	callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x12
  1240  000013                     	ds	1
  1241  000014                     TMR5_ReadTimer@readValLow:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x13
  1245  000014                     	ds	1
  1246  000015                     ??_TMR5_GATE_ISR:
  1247                           
  1248                           ; 1 bytes @ 0x14
  1249  000015                     	ds	2
  1250  000017                     ??_UART1_tx_vect_isr:
  1251  000017                     
  1252                           ; 1 bytes @ 0x16
  1253  000017                     	ds	3
  1254  00001A                     ??_UART1_rx_vect_isr:
  1255                           
  1256                           ; 1 bytes @ 0x19
  1257  00001A                     	ds	3
  1258  00001D                     ??_TMR4_ISR:
  1259                           
  1260                           ; 1 bytes @ 0x1C
  1261  00001D                     	ds	3
  1262  000020                     ??_TMR3_Initialize:
  1263  000020                     ?_strlen:
  1264                           	callstack 0
  1265  000020                     ?_ADCC_GetSingleConversion:
  1266                           	callstack 0
  1267  000020                     ?_actSpeed:
  1268                           	callstack 0
  1269  000020                     UART1_Write@txData:
  1270                           	callstack 0
  1271  000020                     INTERRUPT_Initialize@state:
  1272                           	callstack 0
  1273  000020                     ___aomod@counter:
  1274                           	callstack 0
  1275  000020                     ___fltol@sign1:
  1276                           	callstack 0
  1277  000020                     ___lomod@counter:
  1278                           	callstack 0
  1279  000020                     UART1_SetFramingErrorHandler@interruptHandler:
  1280                           	callstack 0
  1281  000020                     UART1_SetOverrunErrorHandler@interruptHandler:
  1282                           	callstack 0
  1283  000020                     UART1_SetErrorHandler@interruptHandler:
  1284                           	callstack 0
  1285  000020                     UART1_SetRxInterruptHandler@InterruptHandler:
  1286                           	callstack 0
  1287  000020                     UART1_SetTxInterruptHandler@InterruptHandler:
  1288                           	callstack 0
  1289  000020                     CCP3_SetCallBack@customCallBack:
  1290                           	callstack 0
  1291  000020                     CCP4_SetCallBack@customCallBack:
  1292                           	callstack 0
  1293  000020                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1294                           	callstack 0
  1295  000020                     TMR4_SetInterruptHandler@InterruptHandler:
  1296                           	callstack 0
  1297  000020                     PWM7_LoadDutyValue@dutyValue:
  1298                           	callstack 0
  1299  000020                     PWM8_LoadDutyValue@dutyValue:
  1300                           	callstack 0
  1301  000020                     PWM5_LoadDutyValue@dutyValue:
  1302                           	callstack 0
  1303  000020                     PWM6_LoadDutyValue@dutyValue:
  1304                           	callstack 0
  1305  000020                     strlen@s:
  1306                           	callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x1F
  1309  000020                     	ds	1
  1310  000021                     putch@txData:
  1311                           	callstack 0
  1312  000021                     ___aomod@sign:
  1313                           	callstack 0
  1314  000021                     ___fltol@exp1:
  1315                           	callstack 0
  1316                           
  1317                           ; 1 bytes @ 0x20
  1318  000021                     	ds	1
  1319  000022                     ??_pad:
  1320  000022                     ADCC_GetSingleConversion@channel:
  1321                           	callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x21
  1324  000022                     	ds	1
  1325  000023                     
  1326                           ; 1 bytes @ 0x22
  1327 ;;
  1328 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1329 ;;
  1330 ;; *************** function _main *****************
  1331 ;; Defined at:
  1332 ;;		line 9 in file "main.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;Total ram usage:        0 bytes
  1351 ;; Hardware stack levels required when called: 19
  1352 ;; This function calls:
  1353 ;;		_SYSTEM_Initialize
  1354 ;;		_TMR4_SetInterruptHandler
  1355 ;;		_loop
  1356 ;; This function is called by:
  1357 ;;		Startup code after reset
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text0
  1362  0044B8                     __ptext0:
  1363                           	callstack 0
  1364  0044B8                     _main:
  1365                           	callstack 12
  1366  0044B8                     
  1367                           ;main.c: 10:     SYSTEM_Initialize();
  1368  0044B8  EC50  F01F         	call	_SYSTEM_Initialize	;wreg free
  1369  0044BC                     
  1370                           ;main.c: 11:     (INTCON0bits.GIEH = 1);
  1371  0044BC  8ED2               	bsf	210,7,c	;volatile
  1372  0044BE                     
  1373                           ;main.c: 12:     (INTCON0bits.GIEL = 1);
  1374  0044BE  8CD2               	bsf	210,6,c	;volatile
  1375                           
  1376                           ;main.c: 13:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1377  0044C0  0E12               	movlw	low _TMR4_10msISR
  1378  0044C2  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1379  0044C4  0E46               	movlw	high _TMR4_10msISR
  1380  0044C6  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1381  0044C8  ECF7  F022         	call	_TMR4_SetInterruptHandler	;wreg free
  1382  0044CC                     l6870:
  1383                           
  1384                           ;main.c: 16:         loop();
  1385  0044CC  EC7D  F017         	call	_loop	;wreg free
  1386  0044D0  EF66  F022         	goto	l6870
  1387  0044D4  EF57  F000         	goto	start
  1388  0044D8                     __end_of_main:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _loop *****************
  1392 ;; Defined at:
  1393 ;;		line 20 in file "main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 18
  1414 ;; This function calls:
  1415 ;;		___flge
  1416 ;;		___xxtofl
  1417 ;;		_calcMotorPow
  1418 ;;		_calcSpeed
  1419 ;;		_calcSteering
  1420 ;;		_getBatteryVoltage
  1421 ;;		_getCurve
  1422 ;;		_getReverse
  1423 ;;		_printf
  1424 ;;		_setSteering
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text1
  1431  002EFA                     __ptext1:
  1432                           	callstack 0
  1433  002EFA                     _loop:
  1434                           	callstack 12
  1435  002EFA                     l1214:
  1436  002EFA                     
  1437                           ;main.c: 26:         getBatteryVoltage();
  1438  002EFA  ECC5  F022         	call	_getBatteryVoltage	;wreg free
  1439  002EFE                     
  1440                           ;main.c: 27:         printf("BVolt: %u\n", (uint16_t)BatteryVolt);
  1441  002EFE  0E54               	movlw	low STR_1
  1442  002F00  0101               	movlb	1	; () banked
  1443  002F02  6F30               	movwf	printf@fmt& (0+255),b
  1444  002F04  0E10               	movlw	high STR_1
  1445  002F06  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1446  002F08  C0EF  F132         	movff	_BatteryVolt,?_printf+2
  1447  002F0C  C0F0  F133         	movff	_BatteryVolt+1,?_printf+3
  1448  002F10  EC0F  F022         	call	_printf	;wreg free
  1449  002F14                     
  1450                           ;main.c: 28:     }while(BatteryVolt < ((7.5) * 409.6));
  1451  002F14  C0EF  F068         	movff	_BatteryVolt,___xxtofl@val
  1452  002F18  C0F0  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  1453  002F1C  0100               	movlb	0	; () banked
  1454  002F1E  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  1455  002F20  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  1456  002F22  0E00               	movlw	0
  1457  002F24  ECEA  F012         	call	___xxtofl
  1458  002F28  C068  F076         	movff	?___xxtofl,___flge@ff1
  1459  002F2C  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  1460  002F30  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  1461  002F34  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  1462  002F38  0E00               	movlw	0
  1463  002F3A  0100               	movlb	0	; () banked
  1464  002F3C  6F7A               	movwf	___flge@ff2& (0+255),b
  1465  002F3E  0E00               	movlw	0
  1466  002F40  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  1467  002F42  0E40               	movlw	64
  1468  002F44  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  1469  002F46  0E45               	movlw	69
  1470  002F48  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  1471  002F4A  EC19  F019         	call	___flge	;wreg free
  1472  002F4E  0100               	movlb	0	; () banked
  1473  002F50  A0D8               	btfss	status,0,c
  1474  002F52  EFAD  F017         	goto	u6201
  1475  002F56  EFAF  F017         	goto	u6200
  1476  002F5A                     u6201:
  1477  002F5A  EF7D  F017         	goto	l1214
  1478  002F5E                     u6200:
  1479  002F5E                     
  1480                           ; BSR set to: 0
  1481                           ;main.c: 30:     oldDistLeft = distLeft;
  1482  002F5E  C0E6  F0E2         	movff	_distLeft,_oldDistLeft	;volatile
  1483  002F62  C0E7  F0E3         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1484                           
  1485                           ;main.c: 31:     oldDistRight = distRight;
  1486  002F66  C0E4  F0E0         	movff	_distRight,_oldDistRight	;volatile
  1487  002F6A  C0E5  F0E1         	movff	_distRight+1,_oldDistRight+1	;volatile
  1488  002F6E                     
  1489                           ; BSR set to: 0
  1490                           ;main.c: 32:     cycle10ms = 0;
  1491  002F6E  0E00               	movlw	0
  1492  002F70  6FEA               	movwf	_cycle10ms& (0+255),b
  1493  002F72                     l6838:
  1494  002F72  0100               	movlb	0	; () banked
  1495  002F74  51EA               	movf	_cycle10ms& (0+255),w,b
  1496  002F76  B4D8               	btfsc	status,2,c
  1497  002F78  EFC0  F017         	goto	u6211
  1498  002F7C  EFC2  F017         	goto	u6210
  1499  002F80                     u6211:
  1500  002F80  EFB9  F017         	goto	l6838
  1501  002F84                     u6210:
  1502  002F84                     
  1503                           ; BSR set to: 0
  1504                           ;main.c: 35:         cycle10ms = 0;
  1505  002F84  0E00               	movlw	0
  1506  002F86  6FEA               	movwf	_cycle10ms& (0+255),b
  1507  002F88                     
  1508                           ; BSR set to: 0
  1509                           ;main.c: 44:         if(battCheckCount > 100){
  1510  002F88  0E64               	movlw	100
  1511  002F8A  65E8               	cpfsgt	_battCheckCount& (0+255),b
  1512  002F8C  EFCA  F017         	goto	u6221
  1513  002F90  EFCC  F017         	goto	u6220
  1514  002F94                     u6221:
  1515  002F94  EF00  F018         	goto	l6852
  1516  002F98                     u6220:
  1517  002F98                     
  1518                           ; BSR set to: 0
  1519                           ;main.c: 45:             battCheckCount = 0;
  1520  002F98  0E00               	movlw	0
  1521  002F9A  6FE8               	movwf	_battCheckCount& (0+255),b
  1522  002F9C                     
  1523                           ; BSR set to: 0
  1524                           ;main.c: 47:             if(BatteryVolt < (7.5) * 409.6){
  1525  002F9C  C0EF  F068         	movff	_BatteryVolt,___xxtofl@val
  1526  002FA0  C0F0  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  1527  002FA4  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  1528  002FA6  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  1529  002FA8  0E00               	movlw	0
  1530  002FAA  ECEA  F012         	call	___xxtofl
  1531  002FAE  C068  F076         	movff	?___xxtofl,___flge@ff1
  1532  002FB2  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  1533  002FB6  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  1534  002FBA  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  1535  002FBE  0E00               	movlw	0
  1536  002FC0  0100               	movlb	0	; () banked
  1537  002FC2  6F7A               	movwf	___flge@ff2& (0+255),b
  1538  002FC4  0E00               	movlw	0
  1539  002FC6  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  1540  002FC8  0E40               	movlw	64
  1541  002FCA  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  1542  002FCC  0E45               	movlw	69
  1543  002FCE  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  1544  002FD0  EC19  F019         	call	___flge	;wreg free
  1545  002FD4  0100               	movlb	0	; () banked
  1546  002FD6  B0D8               	btfsc	status,0,c
  1547  002FD8  EFF0  F017         	goto	u6231
  1548  002FDC  EFF2  F017         	goto	u6230
  1549  002FE0                     u6231:
  1550  002FE0  EF01  F018         	goto	l6854
  1551  002FE4                     u6230:
  1552  002FE4                     
  1553                           ; BSR set to: 0
  1554                           ;main.c: 48:                 setSpeed = 0;
  1555  002FE4  0E00               	movlw	0
  1556  002FE6  6FDF               	movwf	(_setSpeed+1)& (0+255),b
  1557  002FE8  0E00               	movlw	0
  1558  002FEA  6FDE               	movwf	_setSpeed& (0+255),b
  1559  002FEC                     
  1560                           ; BSR set to: 0
  1561                           ;main.c: 49:                 setSteering(0,Front);
  1562  002FEC  0E00               	movlw	0
  1563  002FEE  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1564  002FF0  0E00               	movlw	0
  1565  002FF2  6F68               	movwf	setSteering@steering& (0+255),b
  1566  002FF4  0E03               	movlw	3
  1567  002FF6  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1568  002FF8  ECC6  F013         	call	_setSteering	;wreg free
  1569                           
  1570                           ;main.c: 50:                 break;
  1571  002FFC  EF0D  F018         	goto	l1225
  1572  003000                     l6852:
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main.c: 53:             ++battCheckCount;
  1576  003000  2BE8               	incf	_battCheckCount& (0+255),f,b
  1577  003002                     l6854:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;main.c: 56:         getCurve();
  1581  003002  ECA1  F00F         	call	_getCurve	;wreg free
  1582  003006                     
  1583                           ;main.c: 57:         getReverse();
  1584  003006  EC68  F01D         	call	_getReverse	;wreg free
  1585  00300A                     
  1586                           ;main.c: 59:         calcSteering();
  1587  00300A  EC97  F014         	call	_calcSteering	;wreg free
  1588  00300E                     
  1589                           ;main.c: 60:         calcSpeed();
  1590  00300E  ECD8  F010         	call	_calcSpeed	;wreg free
  1591  003012                     
  1592                           ;main.c: 61:         calcMotorPow();
  1593  003012  ECD8  F016         	call	_calcMotorPow	;wreg free
  1594  003016  EFB9  F017         	goto	l6838
  1595  00301A                     l1225:
  1596  00301A  0012               	return		;funcret
  1597  00301C                     __end_of_loop:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _getReverse *****************
  1601 ;; Defined at:
  1602 ;;		line 153 in file "main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 8
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_loop
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text2
  1631  003AD0                     __ptext2:
  1632                           	callstack 0
  1633  003AD0                     _getReverse:
  1634                           	callstack 21
  1635  003AD0                     
  1636                           ;main.c: 154:     if(distFront < (10)){
  1637  003AD0  0100               	movlb	0	; () banked
  1638  003AD2  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1639  003AD4  E107               	bnz	u4141
  1640  003AD6  0E0A               	movlw	10
  1641  003AD8  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  1642  003ADA  B0D8               	btfsc	status,0,c
  1643  003ADC  EF72  F01D         	goto	u4141
  1644  003AE0  EF74  F01D         	goto	u4140
  1645  003AE4                     u4141:
  1646  003AE4  EF77  F01D         	goto	l5334
  1647  003AE8                     u4140:
  1648  003AE8                     
  1649                           ; BSR set to: 0
  1650                           ;main.c: 155:         ++reverseCount;
  1651  003AE8  2A2D               	incf	_reverseCount^0,f,c
  1652                           
  1653                           ;main.c: 156:     }else if(driveMode != ReverseRight){
  1654  003AEA  EF82  F01D         	goto	l5338
  1655  003AEE                     l5334:
  1656                           
  1657                           ; BSR set to: 0
  1658  003AEE  0E02               	movlw	2
  1659  003AF0  19EC               	xorwf	_driveMode& (0+255),w,b
  1660  003AF2  B4D8               	btfsc	status,2,c
  1661  003AF4  EF7E  F01D         	goto	u4151
  1662  003AF8  EF80  F01D         	goto	u4150
  1663  003AFC                     u4151:
  1664  003AFC  EF82  F01D         	goto	l5338
  1665  003B00                     u4150:
  1666  003B00                     
  1667                           ; BSR set to: 0
  1668                           ;main.c: 157:         reverseCount = 0;
  1669  003B00  0E00               	movlw	0
  1670  003B02  6E2D               	movwf	_reverseCount^0,c
  1671  003B04                     l5338:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;main.c: 160:     if(reverseCount > (100)){
  1675  003B04  0E64               	movlw	100
  1676  003B06  642D               	cpfsgt	_reverseCount^0,c
  1677  003B08  EF88  F01D         	goto	u4161
  1678  003B0C  EF8A  F01D         	goto	u4160
  1679  003B10                     u4161:
  1680  003B10  EFAA  F01D         	goto	l1271
  1681  003B14                     u4160:
  1682  003B14                     
  1683                           ; BSR set to: 0
  1684                           ;main.c: 161:         if(distLeft > distRight){
  1685  003B14  51E6               	movf	_distLeft& (0+255),w,b	;volatile
  1686  003B16  5DE4               	subwf	_distRight& (0+255),w,b	;volatile
  1687  003B18  51E7               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1688  003B1A  59E5               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1689  003B1C  B0D8               	btfsc	status,0,c
  1690  003B1E  EF93  F01D         	goto	u4171
  1691  003B22  EF95  F01D         	goto	u4170
  1692  003B26                     u4171:
  1693  003B26  EF99  F01D         	goto	l5344
  1694  003B2A                     u4170:
  1695  003B2A                     
  1696                           ; BSR set to: 0
  1697                           ;main.c: 162:             driveMode = ReverseRight;
  1698  003B2A  0E02               	movlw	2
  1699  003B2C  6FEC               	movwf	_driveMode& (0+255),b
  1700                           
  1701                           ;main.c: 163:         }else{
  1702  003B2E  EF9B  F01D         	goto	l5346
  1703  003B32                     l5344:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;main.c: 164:             driveMode = ReverseLeft;
  1707  003B32  0E03               	movlw	3
  1708  003B34  6FEC               	movwf	_driveMode& (0+255),b
  1709  003B36                     l5346:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 167:         if(distFront > (40)){
  1713  003B36  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1714  003B38  E109               	bnz	u4180
  1715  003B3A  0E29               	movlw	41
  1716  003B3C  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  1717  003B3E  A0D8               	btfss	status,0,c
  1718  003B40  EFA4  F01D         	goto	u4181
  1719  003B44  EFA6  F01D         	goto	u4180
  1720  003B48                     u4181:
  1721  003B48  EFAA  F01D         	goto	l1271
  1722  003B4C                     u4180:
  1723  003B4C                     
  1724                           ; BSR set to: 0
  1725                           ;main.c: 168:              driveMode = Straight;
  1726  003B4C  0E00               	movlw	0
  1727  003B4E  6FEC               	movwf	_driveMode& (0+255),b
  1728                           
  1729                           ;main.c: 169:              reverseCount = 0;
  1730  003B50  0E00               	movlw	0
  1731  003B52  6E2D               	movwf	_reverseCount^0,c
  1732  003B54                     l1271:
  1733                           
  1734                           ; BSR set to: 0
  1735  003B54  0012               	return		;funcret
  1736  003B56                     __end_of_getReverse:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _getCurve *****************
  1740 ;; Defined at:
  1741 ;;		line 86 in file "main.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  deltaRight      2   26[BANK1 ] short 
  1746 ;;  deltaLeft       2   24[BANK1 ] short 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        6 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; Hardware stack levels required when called: 17
  1763 ;; This function calls:
  1764 ;;		_printf
  1765 ;; This function is called by:
  1766 ;;		_loop
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text3
  1771  001F42                     __ptext3:
  1772                           	callstack 0
  1773  001F42                     _getCurve:
  1774                           	callstack 12
  1775  001F42                     
  1776                           ;main.c: 87:     int16_t deltaLeft;;main.c: 88:     int16_t deltaRight;;main.c: 90:     
      +                          switch (curveMode){
  1777  001F42  EFB0  F010         	goto	l6642
  1778  001F46                     l6584:
  1779                           
  1780                           ; BSR set to: 1
  1781                           ;main.c: 92:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1782  001F46  0100               	movlb	0	; () banked
  1783  001F48  51E2               	movf	_oldDistLeft& (0+255),w,b
  1784  001F4A  5DE6               	subwf	_distLeft& (0+255),w,b	;volatile
  1785  001F4C  0101               	movlb	1	; () banked
  1786  001F4E  6F38               	movwf	getCurve@deltaLeft& (0+255),b
  1787  001F50  0100               	movlb	0	; () banked
  1788  001F52  51E3               	movf	(_oldDistLeft+1)& (0+255),w,b
  1789  001F54  59E7               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1790  001F56  0101               	movlb	1	; () banked
  1791  001F58  6F39               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1792                           
  1793                           ;main.c: 93:             deltaRight = (int16_t)(distRight - oldDistRight);
  1794  001F5A  0100               	movlb	0	; () banked
  1795  001F5C  51E0               	movf	_oldDistRight& (0+255),w,b
  1796  001F5E  5DE4               	subwf	_distRight& (0+255),w,b	;volatile
  1797  001F60  0101               	movlb	1	; () banked
  1798  001F62  6F3A               	movwf	getCurve@deltaRight& (0+255),b
  1799  001F64  0100               	movlb	0	; () banked
  1800  001F66  51E1               	movf	(_oldDistRight+1)& (0+255),w,b
  1801  001F68  59E5               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1802  001F6A  0101               	movlb	1	; () banked
  1803  001F6C  6F3B               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1804                           
  1805                           ;main.c: 96:             if(deltaLeft > (60) && oldDistLeft < (200)){
  1806  001F6E  BF39               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1807  001F70  EFC3  F00F         	goto	u5881
  1808  001F74  5139               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1809  001F76  E109               	bnz	u5880
  1810  001F78  0E3D               	movlw	61
  1811  001F7A  5D38               	subwf	getCurve@deltaLeft& (0+255),w,b
  1812  001F7C  A0D8               	btfss	status,0,c
  1813  001F7E  EFC3  F00F         	goto	u5881
  1814  001F82  EFC5  F00F         	goto	u5880
  1815  001F86                     u5881:
  1816  001F86  EFEF  F00F         	goto	l6594
  1817  001F8A                     u5880:
  1818  001F8A                     
  1819                           ; BSR set to: 1
  1820  001F8A  0100               	movlb	0	; () banked
  1821  001F8C  51E3               	movf	(_oldDistLeft+1)& (0+255),w,b
  1822  001F8E  E107               	bnz	u5891
  1823  001F90  0EC8               	movlw	200
  1824  001F92  5DE2               	subwf	_oldDistLeft& (0+255),w,b
  1825  001F94  B0D8               	btfsc	status,0,c
  1826  001F96  EFCF  F00F         	goto	u5891
  1827  001F9A  EFD1  F00F         	goto	u5890
  1828  001F9E                     u5891:
  1829  001F9E  EFEF  F00F         	goto	l6594
  1830  001FA2                     u5890:
  1831  001FA2                     
  1832                           ; BSR set to: 0
  1833                           ;main.c: 97:                 delay = 0;
  1834  001FA2  0E00               	movlw	0
  1835  001FA4  6FE9               	movwf	_delay& (0+255),b
  1836                           
  1837                           ;main.c: 98:                 curveMode = BeforeCurve;
  1838  001FA6  0E01               	movlw	1
  1839  001FA8  6FEB               	movwf	_curveMode& (0+255),b
  1840                           
  1841                           ;main.c: 99:                 driveMode = CurveLeft;
  1842  001FAA  0E04               	movlw	4
  1843  001FAC  6FEC               	movwf	_driveMode& (0+255),b
  1844  001FAE                     
  1845                           ; BSR set to: 0
  1846                           ;main.c: 100:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1847  001FAE  0E01               	movlw	low STR_2
  1848  001FB0  0101               	movlb	1	; () banked
  1849  001FB2  6F30               	movwf	printf@fmt& (0+255),b
  1850  001FB4  0E10               	movlw	high STR_2
  1851  001FB6  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1852  001FB8  C138  F132         	movff	getCurve@deltaLeft,?_printf+2
  1853  001FBC  C139  F133         	movff	getCurve@deltaLeft+1,?_printf+3
  1854  001FC0  C13A  F134         	movff	getCurve@deltaRight,?_printf+4
  1855  001FC4  C13B  F135         	movff	getCurve@deltaRight+1,?_printf+5
  1856  001FC8  EC0F  F022         	call	_printf	;wreg free
  1857  001FCC                     
  1858                           ;main.c: 101:                 printf("   CurveLeft");
  1859  001FCC  0E25               	movlw	low STR_3
  1860  001FCE  0101               	movlb	1	; () banked
  1861  001FD0  6F30               	movwf	printf@fmt& (0+255),b
  1862  001FD2  0E10               	movlw	high STR_3
  1863  001FD4  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1864  001FD6  EC0F  F022         	call	_printf	;wreg free
  1865                           
  1866                           ;main.c: 102:             } else if(deltaRight > (60) && oldDistRight < (200)){
  1867  001FDA  EFCF  F010         	goto	l1245
  1868  001FDE                     l6594:
  1869  001FDE  0101               	movlb	1	; () banked
  1870  001FE0  BF3B               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1871  001FE2  EFFC  F00F         	goto	u5901
  1872  001FE6  513B               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1873  001FE8  E109               	bnz	u5900
  1874  001FEA  0E3D               	movlw	61
  1875  001FEC  5D3A               	subwf	getCurve@deltaRight& (0+255),w,b
  1876  001FEE  A0D8               	btfss	status,0,c
  1877  001FF0  EFFC  F00F         	goto	u5901
  1878  001FF4  EFFE  F00F         	goto	u5900
  1879  001FF8                     u5901:
  1880  001FF8  EFCF  F010         	goto	l1245
  1881  001FFC                     u5900:
  1882  001FFC                     
  1883                           ; BSR set to: 1
  1884  001FFC  0100               	movlb	0	; () banked
  1885  001FFE  51E1               	movf	(_oldDistRight+1)& (0+255),w,b
  1886  002000  E107               	bnz	u5911
  1887  002002  0EC8               	movlw	200
  1888  002004  5DE0               	subwf	_oldDistRight& (0+255),w,b
  1889  002006  B0D8               	btfsc	status,0,c
  1890  002008  EF08  F010         	goto	u5911
  1891  00200C  EF0A  F010         	goto	u5910
  1892  002010                     u5911:
  1893  002010  EFCF  F010         	goto	l1245
  1894  002014                     u5910:
  1895  002014                     
  1896                           ; BSR set to: 0
  1897                           ;main.c: 103:                 delay = 0;
  1898  002014  0E00               	movlw	0
  1899  002016  6FE9               	movwf	_delay& (0+255),b
  1900                           
  1901                           ;main.c: 104:                 curveMode = BeforeCurve;
  1902  002018  0E01               	movlw	1
  1903  00201A  6FEB               	movwf	_curveMode& (0+255),b
  1904                           
  1905                           ;main.c: 105:                 driveMode = CurveRight;
  1906  00201C  0E05               	movlw	5
  1907  00201E  6FEC               	movwf	_driveMode& (0+255),b
  1908  002020                     
  1909                           ; BSR set to: 0
  1910                           ;main.c: 106:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1911  002020  0E01               	movlw	low STR_2
  1912  002022  0101               	movlb	1	; () banked
  1913  002024  6F30               	movwf	printf@fmt& (0+255),b
  1914  002026  0E10               	movlw	high STR_2
  1915  002028  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1916  00202A  C138  F132         	movff	getCurve@deltaLeft,?_printf+2
  1917  00202E  C139  F133         	movff	getCurve@deltaLeft+1,?_printf+3
  1918  002032  C13A  F134         	movff	getCurve@deltaRight,?_printf+4
  1919  002036  C13B  F135         	movff	getCurve@deltaRight+1,?_printf+5
  1920  00203A  EC0F  F022         	call	_printf	;wreg free
  1921  00203E                     
  1922                           ;main.c: 107:                 printf("   CurveRight");
  1923  00203E  0E17               	movlw	low STR_5
  1924  002040  0101               	movlb	1	; () banked
  1925  002042  6F30               	movwf	printf@fmt& (0+255),b
  1926  002044  0E10               	movlw	high STR_5
  1927  002046  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1928  002048  EC0F  F022         	call	_printf	;wreg free
  1929  00204C  EFCF  F010         	goto	l1245
  1930  002050                     l6604:
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;main.c: 113:             if(delay > (15)){
  1934  002050  0E0F               	movlw	15
  1935  002052  0100               	movlb	0	; () banked
  1936  002054  65E9               	cpfsgt	_delay& (0+255),b
  1937  002056  EF2F  F010         	goto	u5921
  1938  00205A  EF31  F010         	goto	u5920
  1939  00205E                     u5921:
  1940  00205E  EF3E  F010         	goto	l6610
  1941  002062                     u5920:
  1942  002062                     
  1943                           ; BSR set to: 0
  1944                           ;main.c: 114:                 delay = 0;
  1945  002062  0E00               	movlw	0
  1946  002064  6FE9               	movwf	_delay& (0+255),b
  1947                           
  1948                           ;main.c: 115:                 curveMode = InCurve;
  1949  002066  0E02               	movlw	2
  1950  002068  6FEB               	movwf	_curveMode& (0+255),b
  1951  00206A                     
  1952                           ; BSR set to: 0
  1953                           ;main.c: 116:                 printf("InCurve\n");
  1954  00206A  0E69               	movlw	low STR_6
  1955  00206C  0101               	movlb	1	; () banked
  1956  00206E  6F30               	movwf	printf@fmt& (0+255),b
  1957  002070  0E10               	movlw	high STR_6
  1958  002072  6F31               	movwf	(printf@fmt+1)& (0+255),b
  1959  002074  EC0F  F022         	call	_printf	;wreg free
  1960                           
  1961                           ;main.c: 117:             } else {
  1962  002078  EFCF  F010         	goto	l1245
  1963  00207C                     l6610:
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;main.c: 118:                 delay++;
  1967  00207C  2BE9               	incf	_delay& (0+255),f,b
  1968  00207E  EFCF  F010         	goto	l1245
  1969  002082                     l6612:
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;main.c: 122:             if(delay > (60)){
  1973  002082  0E3C               	movlw	60
  1974  002084  0100               	movlb	0	; () banked
  1975  002086  65E9               	cpfsgt	_delay& (0+255),b
  1976  002088  EF48  F010         	goto	u5931
  1977  00208C  EF4A  F010         	goto	u5930
  1978  002090                     u5931:
  1979  002090  EF3E  F010         	goto	l6610
  1980  002094                     u5930:
  1981  002094                     
  1982                           ; BSR set to: 0
  1983                           ;main.c: 123:                 if(driveMode == CurveLeft){
  1984  002094  0E04               	movlw	4
  1985  002096  19EC               	xorwf	_driveMode& (0+255),w,b
  1986  002098  A4D8               	btfss	status,2,c
  1987  00209A  EF51  F010         	goto	u5941
  1988  00209E  EF53  F010         	goto	u5940
  1989  0020A2                     u5941:
  1990  0020A2  EF60  F010         	goto	l6618
  1991  0020A6                     u5940:
  1992  0020A6                     
  1993                           ; BSR set to: 0
  1994                           ;main.c: 124:                     printf("distL= %d\n", distLeft);
  1995  0020A6  0E3E               	movlw	low STR_7
  1996  0020A8  0101               	movlb	1	; () banked
  1997  0020AA  6F30               	movwf	printf@fmt& (0+255),b
  1998  0020AC  0E10               	movlw	high STR_7
  1999  0020AE  6F31               	movwf	(printf@fmt+1)& (0+255),b
  2000  0020B0  C0E6  F132         	movff	_distLeft,?_printf+2	;volatile
  2001  0020B4  C0E7  F133         	movff	_distLeft+1,?_printf+3	;volatile
  2002  0020B8  EC0F  F022         	call	_printf	;wreg free
  2003                           
  2004                           ;main.c: 125:                 } else if(driveMode == CurveLeft){
  2005  0020BC  EF74  F010         	goto	l6622
  2006  0020C0                     l6618:
  2007                           
  2008                           ; BSR set to: 0
  2009  0020C0  0E04               	movlw	4
  2010  0020C2  19EC               	xorwf	_driveMode& (0+255),w,b
  2011  0020C4  A4D8               	btfss	status,2,c
  2012  0020C6  EF67  F010         	goto	u5951
  2013  0020CA  EF69  F010         	goto	u5950
  2014  0020CE                     u5951:
  2015  0020CE  EF74  F010         	goto	l6622
  2016  0020D2                     u5950:
  2017  0020D2                     
  2018                           ; BSR set to: 0
  2019                           ;main.c: 126:                     printf("distR= %d\n", distRight);
  2020  0020D2  0E49               	movlw	low STR_8
  2021  0020D4  0101               	movlb	1	; () banked
  2022  0020D6  6F30               	movwf	printf@fmt& (0+255),b
  2023  0020D8  0E10               	movlw	high STR_8
  2024  0020DA  6F31               	movwf	(printf@fmt+1)& (0+255),b
  2025  0020DC  C0E4  F132         	movff	_distRight,?_printf+2	;volatile
  2026  0020E0  C0E5  F133         	movff	_distRight+1,?_printf+3	;volatile
  2027  0020E4  EC0F  F022         	call	_printf	;wreg free
  2028  0020E8                     l6622:
  2029                           
  2030                           ;main.c: 129:                 if(distLeft < (40) || distRight < (40)){
  2031  0020E8  0100               	movlb	0	; () banked
  2032  0020EA  51E7               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2033  0020EC  E109               	bnz	u5960
  2034  0020EE  0E28               	movlw	40
  2035  0020F0  5DE6               	subwf	_distLeft& (0+255),w,b	;volatile
  2036  0020F2  A0D8               	btfss	status,0,c
  2037  0020F4  EF7E  F010         	goto	u5961
  2038  0020F8  EF80  F010         	goto	u5960
  2039  0020FC                     u5961:
  2040  0020FC  EF8B  F010         	goto	l6626
  2041  002100                     u5960:
  2042  002100                     
  2043                           ; BSR set to: 0
  2044  002100  51E5               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2045  002102  E107               	bnz	u5971
  2046  002104  0E28               	movlw	40
  2047  002106  5DE4               	subwf	_distRight& (0+255),w,b	;volatile
  2048  002108  B0D8               	btfsc	status,0,c
  2049  00210A  EF89  F010         	goto	u5971
  2050  00210E  EF8B  F010         	goto	u5970
  2051  002112                     u5971:
  2052  002112  EFCF  F010         	goto	l1245
  2053  002116                     u5970:
  2054  002116                     l6626:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;main.c: 130:                     delay = 0;
  2058  002116  0E00               	movlw	0
  2059  002118  6FE9               	movwf	_delay& (0+255),b
  2060                           
  2061                           ;main.c: 131:                     curveMode = AfterCurve;
  2062  00211A  0E03               	movlw	3
  2063  00211C  6FEB               	movwf	_curveMode& (0+255),b
  2064                           
  2065                           ;main.c: 132:                     driveMode = Straight;
  2066  00211E  0E00               	movlw	0
  2067  002120  6FEC               	movwf	_driveMode& (0+255),b
  2068  002122                     
  2069                           ; BSR set to: 0
  2070                           ;main.c: 133:                     printf("AfterCurve\n");
  2071  002122  0E32               	movlw	low STR_9
  2072  002124  0101               	movlb	1	; () banked
  2073  002126  6F30               	movwf	printf@fmt& (0+255),b
  2074  002128  0E10               	movlw	high STR_9
  2075  00212A  6F31               	movwf	(printf@fmt+1)& (0+255),b
  2076  00212C  EC0F  F022         	call	_printf	;wreg free
  2077  002130  EFCF  F010         	goto	l1245
  2078  002134                     l6632:
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;main.c: 140:             if(delay > (50)){
  2082  002134  0E32               	movlw	50
  2083  002136  0100               	movlb	0	; () banked
  2084  002138  65E9               	cpfsgt	_delay& (0+255),b
  2085  00213A  EFA1  F010         	goto	u5981
  2086  00213E  EFA3  F010         	goto	u5980
  2087  002142                     u5981:
  2088  002142  EF3E  F010         	goto	l6610
  2089  002146                     u5980:
  2090  002146                     
  2091                           ; BSR set to: 0
  2092                           ;main.c: 141:                 delay = 0;
  2093  002146  0E00               	movlw	0
  2094  002148  6FE9               	movwf	_delay& (0+255),b
  2095                           
  2096                           ;main.c: 142:                 curveMode = OutCurve;
  2097  00214A  0E00               	movlw	0
  2098  00214C  6FEB               	movwf	_curveMode& (0+255),b
  2099  00214E                     
  2100                           ; BSR set to: 0
  2101                           ;main.c: 143:                 printf("OutCurve\n");
  2102  00214E  0E5F               	movlw	low STR_10
  2103  002150  0101               	movlb	1	; () banked
  2104  002152  6F30               	movwf	printf@fmt& (0+255),b
  2105  002154  0E10               	movlw	high STR_10
  2106  002156  6F31               	movwf	(printf@fmt+1)& (0+255),b
  2107  002158  EC0F  F022         	call	_printf	;wreg free
  2108                           
  2109                           ;main.c: 144:             } else {
  2110  00215C  EFCF  F010         	goto	l1245
  2111  002160                     l6642:
  2112  002160  0100               	movlb	0	; () banked
  2113  002162  51EB               	movf	_curveMode& (0+255),w,b
  2114  002164  0101               	movlb	1	; () banked
  2115  002166  6F36               	movwf	??_getCurve& (0+255),b
  2116  002168  6B37               	clrf	(??_getCurve+1)& (0+255),b
  2117                           
  2118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2119                           ; Switch size 1, requested type "simple"
  2120                           ; Number of cases is 1, Range of values is 0 to 0
  2121                           ; switch strategies available:
  2122                           ; Name         Instructions Cycles
  2123                           ; simple_byte            4     3 (average)
  2124                           ;	Chosen strategy is simple_byte
  2125  00216A  5137               	movf	(??_getCurve+1)& (0+255),w,b
  2126  00216C  0A00               	xorlw	0	; case 0
  2127  00216E  B4D8               	btfsc	status,2,c
  2128  002170  EFBC  F010         	goto	l7002
  2129  002174  EFCF  F010         	goto	l1245
  2130  002178                     l7002:
  2131                           
  2132                           ; BSR set to: 1
  2133                           ; Switch size 1, requested type "simple"
  2134                           ; Number of cases is 4, Range of values is 0 to 3
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte           13     7 (average)
  2138                           ;	Chosen strategy is simple_byte
  2139  002178  5136               	movf	??_getCurve& (0+255),w,b
  2140  00217A  0A00               	xorlw	0	; case 0
  2141  00217C  B4D8               	btfsc	status,2,c
  2142  00217E  EFA3  F00F         	goto	l6584
  2143  002182  0A01               	xorlw	1	; case 1
  2144  002184  B4D8               	btfsc	status,2,c
  2145  002186  EF28  F010         	goto	l6604
  2146  00218A  0A03               	xorlw	3	; case 2
  2147  00218C  B4D8               	btfsc	status,2,c
  2148  00218E  EF41  F010         	goto	l6612
  2149  002192  0A01               	xorlw	1	; case 3
  2150  002194  B4D8               	btfsc	status,2,c
  2151  002196  EF9A  F010         	goto	l6632
  2152  00219A  EFCF  F010         	goto	l1245
  2153  00219E                     l1245:
  2154                           
  2155                           ;main.c: 149:     oldDistLeft = distLeft;
  2156  00219E  C0E6  F0E2         	movff	_distLeft,_oldDistLeft	;volatile
  2157  0021A2  C0E7  F0E3         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2158                           
  2159                           ;main.c: 150:     oldDistRight = distRight;
  2160  0021A6  C0E4  F0E0         	movff	_distRight,_oldDistRight	;volatile
  2161  0021AA  C0E5  F0E1         	movff	_distRight+1,_oldDistRight+1	;volatile
  2162  0021AE  0012               	return		;funcret
  2163  0021B0                     __end_of_getCurve:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _printf *****************
  2167 ;; Defined at:
  2168 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  fmt             2   16[BANK1 ] PTR const unsigned char 
  2171 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2172 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2173 ;;		 -> STR_2(22), STR_1(11), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  ap              2   80[BANK0 ] PTR void [1]
  2176 ;;		 -> ?_printf(2), 
  2177 ;;  ret             2    0        int 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  2   16[BANK1 ] int 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2187 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;Total ram usage:        8 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 16
  2194 ;; This function calls:
  2195 ;;		_vfprintf
  2196 ;; This function is called by:
  2197 ;;		_loop
  2198 ;;		_getCurve
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text4
  2203  00441E                     __ptext4:
  2204                           	callstack 0
  2205  00441E                     _printf:
  2206                           	callstack 13
  2207  00441E  0E32               	movlw	low (?_printf+2)
  2208  004420  0100               	movlb	0	; () banked
  2209  004422  6FB0               	movwf	printf@ap& (0+255),b
  2210  004424  0E01               	movlw	high (?_printf+2)
  2211  004426  6FB1               	movwf	(printf@ap+1)& (0+255),b
  2212  004428                     
  2213                           ; BSR set to: 0
  2214  004428  0E00               	movlw	0
  2215  00442A  6FA8               	movwf	vfprintf@fp& (0+255),b
  2216  00442C  0E00               	movlw	0
  2217  00442E  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2218  004430  C130  F0AA         	movff	printf@fmt,vfprintf@fmt
  2219  004434  C131  F0AB         	movff	printf@fmt+1,vfprintf@fmt+1
  2220  004438  0EB0               	movlw	low printf@ap
  2221  00443A  6FAC               	movwf	vfprintf@ap& (0+255),b
  2222  00443C  0E00               	movlw	high printf@ap
  2223  00443E  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2224  004440  ECAB  F01D         	call	_vfprintf	;wreg free
  2225  004444  0012               	return		;funcret
  2226  004446                     __end_of_printf:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _vfprintf *****************
  2230 ;; Defined at:
  2231 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2234 ;;		 -> NULL(0), 
  2235 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2236 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2237 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2238 ;;		 -> STR_2(22), STR_1(11), 
  2239 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2240 ;;		 -> printf@ap(2), 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2243 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2244 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2245 ;;		 -> STR_2(22), STR_1(11), 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2   72[BANK0 ] int 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2255 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;Total ram usage:        8 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 15
  2262 ;; This function calls:
  2263 ;;		_vfpfcnvrt
  2264 ;; This function is called by:
  2265 ;;		_printf
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text5
  2270  003B56                     __ptext5:
  2271                           	callstack 0
  2272  003B56                     _vfprintf:
  2273                           	callstack 13
  2274  003B56                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2276  003B56  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2277  003B5A  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2278  003B5E                     
  2279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2280  003B5E  0E00               	movlw	0
  2281  003B60  0100               	movlb	0	; () banked
  2282  003B62  6FD3               	movwf	(_nout+1)& (0+255),b
  2283  003B64  0E00               	movlw	0
  2284  003B66  6FD2               	movwf	_nout& (0+255),b
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2287  003B68  EFC9  F01D         	goto	l6298
  2288  003B6C                     l6296:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2292  003B6C  C0A8  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2293  003B70  C0A9  F09F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2294  003B74  0EAE               	movlw	low vfprintf@cfmt
  2295  003B76  6FA0               	movwf	vfpfcnvrt@fmt& (0+255),b
  2296  003B78  0E00               	movlw	high vfprintf@cfmt
  2297  003B7A  6FA1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2298  003B7C  C0AC  F0A2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2299  003B80  C0AD  F0A3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2300  003B84  EC36  F00E         	call	_vfpfcnvrt	;wreg free
  2301  003B88  0100               	movlb	0	; () banked
  2302  003B8A  519E               	movf	?_vfpfcnvrt& (0+255),w,b
  2303  003B8C  27D2               	addwf	_nout& (0+255),f,b
  2304  003B8E  519F               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2305  003B90  23D3               	addwfc	(_nout+1)& (0+255),f,b
  2306  003B92                     l6298:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2310  003B92  0060  F2BB  FFF6   	movff	vfprintf@cfmt,tblptrl
  2311  003B98  0060  F2BF  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2312  003B9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2313  003B9E  6AF8               	clrf	tblptru,c
  2314  003BA0                     	endif
  2315  003BA0                     	if	0	;tblptru may be non-zero
  2316  003BA0                     	endif
  2317  003BA0  0008               	tblrd		*
  2318  003BA2  50F5               	movf	tablat,w,c
  2319  003BA4  0900               	iorlw	0
  2320  003BA6  A4D8               	btfss	status,2,c
  2321  003BA8  EFD8  F01D         	goto	u5471
  2322  003BAC  EFDA  F01D         	goto	u5470
  2323  003BB0                     u5471:
  2324  003BB0  EFB6  F01D         	goto	l6296
  2325  003BB4                     u5470:
  2326  003BB4                     
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2329  003BB4  C0D2  F0A8         	movff	_nout,?_vfprintf
  2330  003BB8  C0D3  F0A9         	movff	_nout+1,?_vfprintf+1
  2331  003BBC                     
  2332                           ; BSR set to: 0
  2333  003BBC  0012               	return		;funcret
  2334  003BBE                     __end_of_vfprintf:
  2335                           	callstack 0
  2336                           
  2337 ;; *************** function _vfpfcnvrt *****************
  2338 ;; Defined at:
  2339 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  2342 ;;		 -> NULL(0), 
  2343 ;;  fmt             2   64[BANK0 ] PTR PTR unsigned char 
  2344 ;;		 -> vfprintf@cfmt(2), 
  2345 ;;  ap              2   66[BANK0 ] PTR PTR void 
  2346 ;;		 -> printf@ap(2), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  llu             8    8[BANK1 ] unsigned long long 
  2349 ;;  ll              8    0[BANK1 ] long long 
  2350 ;;  f               4    0        long long 
  2351 ;;  vp              3    0        PTR void 
  2352 ;;  ct              3    0        unsigned char [3]
  2353 ;;  cp              3    0        PTR unsigned char 
  2354 ;;  i               2    0        int 
  2355 ;;  done            2    0        int 
  2356 ;;  c               1    0        unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  2   62[BANK0 ] int 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         0      10      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:       26 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 14
  2373 ;; This function calls:
  2374 ;;		_dtoa
  2375 ;;		_fputc
  2376 ;;		_utoa
  2377 ;; This function is called by:
  2378 ;;		_vfprintf
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text6
  2383  001C6C                     __ptext6:
  2384                           	callstack 0
  2385  001C6C                     _vfpfcnvrt:
  2386                           	callstack 13
  2387  001C6C                     
  2388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2389  001C6C  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2390  001C72  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2391  001C78  006F FF7B FFF6     	movff	postinc2,tblptrl
  2392  001C7E  006F FF77 FFF7     	movff	postdec2,tblptrh
  2393  001C84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2394  001C84  6AF8               	clrf	tblptru,c
  2395  001C86                     	endif
  2396  001C86                     	if	0	;tblptru may be non-zero
  2397  001C86                     	endif
  2398  001C86  0008               	tblrd		*
  2399  001C88  50F5               	movf	tablat,w,c
  2400  001C8A  0A25               	xorlw	37
  2401  001C8C  A4D8               	btfss	status,2,c
  2402  001C8E  EF4B  F00E         	goto	u5261
  2403  001C92  EF4D  F00E         	goto	u5260
  2404  001C96                     u5261:
  2405  001C96  EF7D  F00F         	goto	l6188
  2406  001C9A                     u5260:
  2407  001C9A                     
  2408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2409  001C9A  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2410  001CA0  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2411  001CA6  2ADE               	incf	postinc2,f,c
  2412  001CA8  0E00               	movlw	0
  2413  001CAA  22DD               	addwfc	postdec2,f,c
  2414  001CAC                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2416  001CAC  0E00               	movlw	0
  2417  001CAE  0100               	movlb	0	; () banked
  2418  001CB0  6FD5               	movwf	(_width+1)& (0+255),b
  2419  001CB2  0E00               	movlw	0
  2420  001CB4  6FD4               	movwf	_width& (0+255),b
  2421  001CB6  C0D4  F023         	movff	_width,_flags
  2422  001CBA  C0D5  F024         	movff	_width+1,_flags+1
  2423  001CBE                     
  2424                           ; BSR set to: 0
  2425                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2426  001CBE  69D6               	setf	_prec& (0+255),b
  2427  001CC0  69D7               	setf	(_prec+1)& (0+255),b
  2428  001CC2                     
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2431  001CC2  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2432  001CC8  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  001CCE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2434  001CD4  006F FF77 FFF7     	movff	postdec2,tblptrh
  2435  001CDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2436  001CDA  6AF8               	clrf	tblptru,c
  2437  001CDC                     	endif
  2438  001CDC                     	if	0	;tblptru may be non-zero
  2439  001CDC                     	endif
  2440  001CDC  0008               	tblrd		*
  2441  001CDE  50F5               	movf	tablat,w,c
  2442  001CE0  0A64               	xorlw	100
  2443  001CE2  B4D8               	btfsc	status,2,c
  2444  001CE4  EF76  F00E         	goto	u5271
  2445  001CE8  EF78  F00E         	goto	u5270
  2446  001CEC                     u5271:
  2447  001CEC  EF8F  F00E         	goto	l6158
  2448  001CF0                     u5270:
  2449  001CF0                     
  2450                           ; BSR set to: 0
  2451  001CF0  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2452  001CF6  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2453  001CFC  006F FF7B FFF6     	movff	postinc2,tblptrl
  2454  001D02  006F FF77 FFF7     	movff	postdec2,tblptrh
  2455  001D08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2456  001D08  6AF8               	clrf	tblptru,c
  2457  001D0A                     	endif
  2458  001D0A                     	if	0	;tblptru may be non-zero
  2459  001D0A                     	endif
  2460  001D0A  0008               	tblrd		*
  2461  001D0C  50F5               	movf	tablat,w,c
  2462  001D0E  0A69               	xorlw	105
  2463  001D10  A4D8               	btfss	status,2,c
  2464  001D12  EF8D  F00E         	goto	u5281
  2465  001D16  EF8F  F00E         	goto	u5280
  2466  001D1A                     u5281:
  2467  001D1A  EFDA  F00E         	goto	l6164
  2468  001D1E                     u5280:
  2469  001D1E                     l6158:
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2473  001D1E  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2474  001D24  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2475  001D2A  2ADE               	incf	postinc2,f,c
  2476  001D2C  0E00               	movlw	0
  2477  001D2E  22DD               	addwfc	postdec2,f,c
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2480  001D30  0060  F28B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2481  001D36  0060  F28F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2482  001D3C  006F FF7C  F0A4    	movff	indf2,??_vfpfcnvrt
  2483  001D42  0E02               	movlw	2
  2484  001D44  26DE               	addwf	postinc2,f,c
  2485  001D46  006F FF7C  F0A5    	movff	indf2,??_vfpfcnvrt+1
  2486  001D4C  0E00               	movlw	0
  2487  001D4E  22DD               	addwfc	postdec2,f,c
  2488  001D50  0060  F293  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2489  001D56  0060  F297  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2490  001D5C  006F FF78  F120    	movff	postinc2,vfpfcnvrt@ll
  2491  001D62  006F FF74  F121    	movff	postdec2,vfpfcnvrt@ll+1
  2492  001D68  0101               	movlb	1	; () banked
  2493  001D6A  0E00               	movlw	0
  2494  001D6C  BF21               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2495  001D6E  0EFF               	movlw	-1
  2496  001D70  6F22               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2497  001D72  6F23               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2498  001D74  6F24               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2499  001D76  6F25               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2500  001D78  6F26               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2501  001D7A  6F27               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2502  001D7C                     
  2503                           ; BSR set to: 1
  2504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2505  001D7C  C09E  F07A         	movff	vfpfcnvrt@fp,dtoa@fp
  2506  001D80  C09F  F07B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2507  001D84  C120  F07C         	movff	vfpfcnvrt@ll,dtoa@d
  2508  001D88  C121  F07D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2509  001D8C  C122  F07E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2510  001D90  C123  F07F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2511  001D94  C124  F080         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2512  001D98  C125  F081         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2513  001D9C  C126  F082         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2514  001DA0  C127  F083         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2515  001DA4  ECC3  F00C         	call	_dtoa	;wreg free
  2516  001DA8  C07A  F09E         	movff	?_dtoa,?_vfpfcnvrt
  2517  001DAC  C07B  F09F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2518  001DB0  EFA0  F00F         	goto	l2111
  2519  001DB4                     l6164:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2523  001DB4  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2524  001DBA  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2525  001DC0  006F FF7B FFF6     	movff	postinc2,tblptrl
  2526  001DC6  006F FF77 FFF7     	movff	postdec2,tblptrh
  2527  001DCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2528  001DCC  6AF8               	clrf	tblptru,c
  2529  001DCE                     	endif
  2530  001DCE                     	if	0	;tblptru may be non-zero
  2531  001DCE                     	endif
  2532  001DCE  0008               	tblrd		*
  2533  001DD0  50F5               	movf	tablat,w,c
  2534  001DD2  0A75               	xorlw	117
  2535  001DD4  A4D8               	btfss	status,2,c
  2536  001DD6  EFEF  F00E         	goto	u5291
  2537  001DDA  EFF1  F00E         	goto	u5290
  2538  001DDE                     u5291:
  2539  001DDE  EF3D  F00F         	goto	l6172
  2540  001DE2                     u5290:
  2541  001DE2                     
  2542                           ; BSR set to: 0
  2543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2544  001DE2  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2545  001DE8  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2546  001DEE  2ADE               	incf	postinc2,f,c
  2547  001DF0  0E00               	movlw	0
  2548  001DF2  22DD               	addwfc	postdec2,f,c
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2551  001DF4  0060  F28B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2552  001DFA  0060  F28F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2553  001E00  006F FF7C  F0A4    	movff	indf2,??_vfpfcnvrt
  2554  001E06  0E02               	movlw	2
  2555  001E08  26DE               	addwf	postinc2,f,c
  2556  001E0A  006F FF7C  F0A5    	movff	indf2,??_vfpfcnvrt+1
  2557  001E10  0E00               	movlw	0
  2558  001E12  22DD               	addwfc	postdec2,f,c
  2559  001E14  0060  F293  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2560  001E1A  0060  F297  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2561  001E20  006F FF78  F0A6    	movff	postinc2,??_vfpfcnvrt+2
  2562  001E26  006F FF74  F0A7    	movff	postdec2,??_vfpfcnvrt+3
  2563  001E2C  C0A6  F128         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2564  001E30  C0A7  F129         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2565  001E34  0101               	movlb	1	; () banked
  2566  001E36  6B2A               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2567  001E38  6B2B               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2568  001E3A  6B2C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2569  001E3C  6B2D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2570  001E3E  6B2E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2571  001E40  6B2F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2572  001E42                     
  2573                           ; BSR set to: 1
  2574                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2575  001E42  C09E  F07A         	movff	vfpfcnvrt@fp,utoa@fp
  2576  001E46  C09F  F07B         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2577  001E4A  C128  F07C         	movff	vfpfcnvrt@llu,utoa@d
  2578  001E4E  C129  F07D         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2579  001E52  C12A  F07E         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2580  001E56  C12B  F07F         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2581  001E5A  C12C  F080         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2582  001E5E  C12D  F081         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2583  001E62  C12E  F082         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2584  001E66  C12F  F083         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2585  001E6A  ECE7  F011         	call	_utoa	;wreg free
  2586  001E6E  C07A  F09E         	movff	?_utoa,?_vfpfcnvrt
  2587  001E72  C07B  F09F         	movff	?_utoa+1,?_vfpfcnvrt+1
  2588  001E76  EFA0  F00F         	goto	l2111
  2589  001E7A                     l6172:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2593  001E7A  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2594  001E80  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2595  001E86  006F FF7B FFF6     	movff	postinc2,tblptrl
  2596  001E8C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2597  001E92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2598  001E92  6AF8               	clrf	tblptru,c
  2599  001E94                     	endif
  2600  001E94                     	if	0	;tblptru may be non-zero
  2601  001E94                     	endif
  2602  001E94  0008               	tblrd		*
  2603  001E96  50F5               	movf	tablat,w,c
  2604  001E98  0A25               	xorlw	37
  2605  001E9A  A4D8               	btfss	status,2,c
  2606  001E9C  EF52  F00F         	goto	u5301
  2607  001EA0  EF54  F00F         	goto	u5300
  2608  001EA4                     u5301:
  2609  001EA4  EF6E  F00F         	goto	l6182
  2610  001EA8                     u5300:
  2611  001EA8                     
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2614  001EA8  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2615  001EAE  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2616  001EB4  2ADE               	incf	postinc2,f,c
  2617  001EB6  0E00               	movlw	0
  2618  001EB8  22DD               	addwfc	postdec2,f,c
  2619  001EBA                     
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2622  001EBA  0E00               	movlw	0
  2623  001EBC  6F61               	movwf	(fputc@c+1)& (0+255),b
  2624  001EBE  0E25               	movlw	37
  2625  001EC0  6F60               	movwf	fputc@c& (0+255),b
  2626  001EC2  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2627  001EC6  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2628  001ECA  EC1C  F01D         	call	_fputc	;wreg free
  2629  001ECE                     l6178:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2632  001ECE  0E00               	movlw	0
  2633  001ED0  0100               	movlb	0	; () banked
  2634  001ED2  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2635  001ED4  0E01               	movlw	1
  2636  001ED6  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2637  001ED8  EFA0  F00F         	goto	l2111
  2638  001EDC                     l6182:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2642  001EDC  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2643  001EE2  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2644  001EE8  2ADE               	incf	postinc2,f,c
  2645  001EEA  0E00               	movlw	0
  2646  001EEC  22DD               	addwfc	postdec2,f,c
  2647  001EEE                     
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2650  001EEE  0E00               	movlw	0
  2651  001EF0  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2652  001EF2  0E00               	movlw	0
  2653  001EF4  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2654  001EF6  EFA0  F00F         	goto	l2111
  2655  001EFA                     l6188:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2658  001EFA  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2659  001F00  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2660  001F06  006F FF7B FFF6     	movff	postinc2,tblptrl
  2661  001F0C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2662  001F12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2663  001F12  6AF8               	clrf	tblptru,c
  2664  001F14                     	endif
  2665  001F14                     	if	0	;tblptru may be non-zero
  2666  001F14                     	endif
  2667  001F14  0008               	tblrd		*
  2668  001F16  50F5               	movf	tablat,w,c
  2669  001F18  0100               	movlb	0	; () banked
  2670  001F1A  6F60               	movwf	fputc@c& (0+255),b
  2671  001F1C  6B61               	clrf	(fputc@c+1)& (0+255),b
  2672  001F1E  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2673  001F22  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2674  001F26  EC1C  F01D         	call	_fputc	;wreg free
  2675  001F2A                     
  2676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2677  001F2A  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2678  001F30  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2679  001F36  2ADE               	incf	postinc2,f,c
  2680  001F38  0E00               	movlw	0
  2681  001F3A  22DD               	addwfc	postdec2,f,c
  2682  001F3C  EF67  F00F         	goto	l6178
  2683  001F40                     l2111:
  2684  001F40  0012               	return		;funcret
  2685  001F42                     __end_of_vfpfcnvrt:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _utoa *****************
  2689 ;; Defined at:
  2690 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2693 ;;		 -> NULL(0), 
  2694 ;;  d               8   28[BANK0 ] unsigned long long 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  n               8   48[BANK0 ] unsigned long long 
  2697 ;;  i               2   56[BANK0 ] int 
  2698 ;;  w               2   46[BANK0 ] int 
  2699 ;;  p               2   44[BANK0 ] int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2   26[BANK0 ] int 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2709 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;Total ram usage:       32 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 13
  2716 ;; This function calls:
  2717 ;;		___lodiv
  2718 ;;		___lomod
  2719 ;;		_pad
  2720 ;; This function is called by:
  2721 ;;		_vfpfcnvrt
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text7
  2726  0023CE                     __ptext7:
  2727                           	callstack 0
  2728  0023CE                     _utoa:
  2729                           	callstack 13
  2730  0023CE                     
  2731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2732  0023CE  0100               	movlb	0	; () banked
  2733  0023D0  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  2734  0023D2  EFED  F011         	goto	u5191
  2735  0023D6  EFEF  F011         	goto	u5190
  2736  0023DA                     u5191:
  2737  0023DA  EFF0  F011         	goto	l6114
  2738  0023DE                     u5190:
  2739  0023DE                     
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2742  0023DE  9223               	bcf	_flags^0,1,c
  2743  0023E0                     l6114:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2747  0023E0  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  2748  0023E2  EFFD  F011         	goto	u5200
  2749  0023E6  51D7               	movf	(_prec+1)& (0+255),w,b
  2750  0023E8  E106               	bnz	u5201
  2751  0023EA  05D6               	decf	_prec& (0+255),w,b
  2752  0023EC  B0D8               	btfsc	status,0,c
  2753  0023EE  EFFB  F011         	goto	u5201
  2754  0023F2  EFFD  F011         	goto	u5200
  2755  0023F6                     u5201:
  2756  0023F6  EF03  F012         	goto	l2094
  2757  0023FA                     u5200:
  2758  0023FA                     
  2759                           ; BSR set to: 0
  2760  0023FA  0E00               	movlw	0
  2761  0023FC  6F8D               	movwf	(utoa@p+1)& (0+255),b
  2762  0023FE  0E01               	movlw	1
  2763  002400  6F8C               	movwf	utoa@p& (0+255),b
  2764  002402  EF07  F012         	goto	l2096
  2765  002406                     l2094:
  2766                           
  2767                           ; BSR set to: 0
  2768  002406  C0D6  F08C         	movff	_prec,utoa@p
  2769  00240A  C0D7  F08D         	movff	_prec+1,utoa@p+1
  2770  00240E                     l2096:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2774  00240E  C0D4  F08E         	movff	_width,utoa@w
  2775  002412  C0D5  F08F         	movff	_width+1,utoa@w+1
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2778  002416  C07C  F090         	movff	utoa@d,utoa@n
  2779  00241A  C07D  F091         	movff	utoa@d+1,utoa@n+1
  2780  00241E  C07E  F092         	movff	utoa@d+2,utoa@n+2
  2781  002422  C07F  F093         	movff	utoa@d+3,utoa@n+3
  2782  002426  C080  F094         	movff	utoa@d+4,utoa@n+4
  2783  00242A  C081  F095         	movff	utoa@d+5,utoa@n+5
  2784  00242E  C082  F096         	movff	utoa@d+6,utoa@n+6
  2785  002432  C083  F097         	movff	utoa@d+7,utoa@n+7
  2786  002436                     
  2787                           ; BSR set to: 0
  2788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2789  002436  0E00               	movlw	0
  2790  002438  6F99               	movwf	(utoa@i+1)& (0+255),b
  2791  00243A  0E1F               	movlw	31
  2792  00243C  6F98               	movwf	utoa@i& (0+255),b
  2793  00243E                     
  2794                           ; BSR set to: 0
  2795                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2796  00243E  0E00               	movlw	0
  2797  002440  0101               	movlb	1	; () banked
  2798  002442  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2801  002444  EF9B  F012         	goto	l6132
  2802  002448                     l6122:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  2806  002448  0798               	decf	utoa@i& (0+255),f,b
  2807  00244A  A0D8               	btfss	status,0,c
  2808  00244C  0799               	decf	(utoa@i+1)& (0+255),f,b
  2809  00244E                     
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2812  00244E  0E00               	movlw	low _dbuf
  2813  002450  2598               	addwf	utoa@i& (0+255),w,b
  2814  002452  6ED9               	movwf	fsr2l,c
  2815  002454  0E01               	movlw	high _dbuf
  2816  002456  2199               	addwfc	(utoa@i+1)& (0+255),w,b
  2817  002458  6EDA               	movwf	fsr2h,c
  2818  00245A  C090  F060         	movff	utoa@n,___lomod@dividend
  2819  00245E  C091  F061         	movff	utoa@n+1,___lomod@dividend+1
  2820  002462  C092  F062         	movff	utoa@n+2,___lomod@dividend+2
  2821  002466  C093  F063         	movff	utoa@n+3,___lomod@dividend+3
  2822  00246A  C094  F064         	movff	utoa@n+4,___lomod@dividend+4
  2823  00246E  C095  F065         	movff	utoa@n+5,___lomod@dividend+5
  2824  002472  C096  F066         	movff	utoa@n+6,___lomod@dividend+6
  2825  002476  C097  F067         	movff	utoa@n+7,___lomod@dividend+7
  2826  00247A  0E0A               	movlw	10
  2827  00247C  6F68               	movwf	___lomod@divisor& (0+255),b
  2828  00247E  0E00               	movlw	0
  2829  002480  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  2830  002482  0E00               	movlw	0
  2831  002484  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  2832  002486  0E00               	movlw	0
  2833  002488  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  2834  00248A  0E00               	movlw	0
  2835  00248C  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  2836  00248E  0E00               	movlw	0
  2837  002490  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  2838  002492  0E00               	movlw	0
  2839  002494  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  2840  002496  0E00               	movlw	0
  2841  002498  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  2842  00249A  EC88  F01A         	call	___lomod	;wreg free
  2843  00249E  C060  F084         	movff	?___lomod,??_utoa
  2844  0024A2  C061  F085         	movff	?___lomod+1,??_utoa+1
  2845  0024A6  C062  F086         	movff	?___lomod+2,??_utoa+2
  2846  0024AA  C063  F087         	movff	?___lomod+3,??_utoa+3
  2847  0024AE  C064  F088         	movff	?___lomod+4,??_utoa+4
  2848  0024B2  C065  F089         	movff	?___lomod+5,??_utoa+5
  2849  0024B6  C066  F08A         	movff	?___lomod+6,??_utoa+6
  2850  0024BA  C067  F08B         	movff	?___lomod+7,??_utoa+7
  2851  0024BE  0100               	movlb	0	; () banked
  2852  0024C0  5184               	movf	??_utoa& (0+255),w,b
  2853  0024C2  0F30               	addlw	48
  2854  0024C4  6EDF               	movwf	indf2,c
  2855  0024C6                     
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  2858  0024C6  078C               	decf	utoa@p& (0+255),f,b
  2859  0024C8  A0D8               	btfss	status,0,c
  2860  0024CA  078D               	decf	(utoa@p+1)& (0+255),f,b
  2861  0024CC                     
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  2864  0024CC  078E               	decf	utoa@w& (0+255),f,b
  2865  0024CE  A0D8               	btfss	status,0,c
  2866  0024D0  078F               	decf	(utoa@w+1)& (0+255),f,b
  2867  0024D2                     
  2868                           ; BSR set to: 0
  2869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2870  0024D2  C090  F060         	movff	utoa@n,___lodiv@dividend
  2871  0024D6  C091  F061         	movff	utoa@n+1,___lodiv@dividend+1
  2872  0024DA  C092  F062         	movff	utoa@n+2,___lodiv@dividend+2
  2873  0024DE  C093  F063         	movff	utoa@n+3,___lodiv@dividend+3
  2874  0024E2  C094  F064         	movff	utoa@n+4,___lodiv@dividend+4
  2875  0024E6  C095  F065         	movff	utoa@n+5,___lodiv@dividend+5
  2876  0024EA  C096  F066         	movff	utoa@n+6,___lodiv@dividend+6
  2877  0024EE  C097  F067         	movff	utoa@n+7,___lodiv@dividend+7
  2878  0024F2  0E0A               	movlw	10
  2879  0024F4  6F68               	movwf	___lodiv@divisor& (0+255),b
  2880  0024F6  0E00               	movlw	0
  2881  0024F8  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  2882  0024FA  0E00               	movlw	0
  2883  0024FC  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  2884  0024FE  0E00               	movlw	0
  2885  002500  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  2886  002502  0E00               	movlw	0
  2887  002504  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  2888  002506  0E00               	movlw	0
  2889  002508  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  2890  00250A  0E00               	movlw	0
  2891  00250C  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  2892  00250E  0E00               	movlw	0
  2893  002510  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  2894  002512  EC9C  F019         	call	___lodiv	;wreg free
  2895  002516  C060  F090         	movff	?___lodiv,utoa@n
  2896  00251A  C061  F091         	movff	?___lodiv+1,utoa@n+1
  2897  00251E  C062  F092         	movff	?___lodiv+2,utoa@n+2
  2898  002522  C063  F093         	movff	?___lodiv+3,utoa@n+3
  2899  002526  C064  F094         	movff	?___lodiv+4,utoa@n+4
  2900  00252A  C065  F095         	movff	?___lodiv+5,utoa@n+5
  2901  00252E  C066  F096         	movff	?___lodiv+6,utoa@n+6
  2902  002532  C067  F097         	movff	?___lodiv+7,utoa@n+7
  2903  002536                     l6132:
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2906  002536  0100               	movlb	0	; () banked
  2907  002538  5198               	movf	utoa@i& (0+255),w,b
  2908  00253A  1199               	iorwf	(utoa@i+1)& (0+255),w,b
  2909  00253C  B4D8               	btfsc	status,2,c
  2910  00253E  EFA3  F012         	goto	u5211
  2911  002542  EFA5  F012         	goto	u5210
  2912  002546                     u5211:
  2913  002546  EFD5  F012         	goto	l6142
  2914  00254A                     u5210:
  2915  00254A                     
  2916                           ; BSR set to: 0
  2917  00254A  5190               	movf	utoa@n& (0+255),w,b
  2918  00254C  1191               	iorwf	(utoa@n+1)& (0+255),w,b
  2919  00254E  1192               	iorwf	(utoa@n+2)& (0+255),w,b
  2920  002550  1193               	iorwf	(utoa@n+3)& (0+255),w,b
  2921  002552  1194               	iorwf	(utoa@n+4)& (0+255),w,b
  2922  002554  1195               	iorwf	(utoa@n+5)& (0+255),w,b
  2923  002556  1196               	iorwf	(utoa@n+6)& (0+255),w,b
  2924  002558  1197               	iorwf	(utoa@n+7)& (0+255),w,b
  2925  00255A  A4D8               	btfss	status,2,c
  2926  00255C  EFB2  F012         	goto	u5221
  2927  002560  EFB4  F012         	goto	u5220
  2928  002564                     u5221:
  2929  002564  EF24  F012         	goto	l6122
  2930  002568                     u5220:
  2931  002568                     
  2932                           ; BSR set to: 0
  2933  002568  BF8D               	btfsc	(utoa@p+1)& (0+255),7,b
  2934  00256A  EFC1  F012         	goto	u5230
  2935  00256E  518D               	movf	(utoa@p+1)& (0+255),w,b
  2936  002570  E106               	bnz	u5231
  2937  002572  058C               	decf	utoa@p& (0+255),w,b
  2938  002574  B0D8               	btfsc	status,0,c
  2939  002576  EFBF  F012         	goto	u5231
  2940  00257A  EFC1  F012         	goto	u5230
  2941  00257E                     u5231:
  2942  00257E  EF24  F012         	goto	l6122
  2943  002582                     u5230:
  2944  002582                     
  2945                           ; BSR set to: 0
  2946  002582  BF8F               	btfsc	(utoa@w+1)& (0+255),7,b
  2947  002584  EFCC  F012         	goto	u5241
  2948  002588  518F               	movf	(utoa@w+1)& (0+255),w,b
  2949  00258A  E108               	bnz	u5240
  2950  00258C  058E               	decf	utoa@w& (0+255),w,b
  2951  00258E  A0D8               	btfss	status,0,c
  2952  002590  EFCC  F012         	goto	u5241
  2953  002594  EFCE  F012         	goto	u5240
  2954  002598                     u5241:
  2955  002598  EFD5  F012         	goto	l6142
  2956  00259C                     u5240:
  2957  00259C                     
  2958                           ; BSR set to: 0
  2959  00259C  B223               	btfsc	_flags^0,1,c
  2960  00259E  EFD3  F012         	goto	u5251
  2961  0025A2  EFD5  F012         	goto	u5250
  2962  0025A6                     u5251:
  2963  0025A6  EF24  F012         	goto	l6122
  2964  0025AA                     u5250:
  2965  0025AA                     l6142:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2969  0025AA  C07A  F070         	movff	utoa@fp,pad@fp
  2970  0025AE  C07B  F071         	movff	utoa@fp+1,pad@fp+1
  2971  0025B2  0E00               	movlw	low _dbuf
  2972  0025B4  2598               	addwf	utoa@i& (0+255),w,b
  2973  0025B6  6F72               	movwf	pad@buf& (0+255),b
  2974  0025B8  0E01               	movlw	high _dbuf
  2975  0025BA  2199               	addwfc	(utoa@i+1)& (0+255),w,b
  2976  0025BC  6F73               	movwf	(pad@buf+1)& (0+255),b
  2977  0025BE  C08E  F074         	movff	utoa@w,pad@p
  2978  0025C2  C08F  F075         	movff	utoa@w+1,pad@p+1
  2979  0025C6  EC56  F01B         	call	_pad	;wreg free
  2980  0025CA  C070  F07A         	movff	?_pad,?_utoa
  2981  0025CE  C071  F07B         	movff	?_pad+1,?_utoa+1
  2982  0025D2  0012               	return		;funcret
  2983  0025D4                     __end_of_utoa:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function ___lomod *****************
  2987 ;; Defined at:
  2988 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  dividend        8    0[BANK0 ] unsigned long long 
  2991 ;;  divisor         8    8[BANK0 ] unsigned long long 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  counter         1   31[COMRAM] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  8    0[BANK0 ] unsigned long long 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3003 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;Total ram usage:       17 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 8
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_utoa
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text8
  3018  003510                     __ptext8:
  3019                           	callstack 0
  3020  003510                     ___lomod:
  3021                           	callstack 17
  3022  003510  0100               	movlb	0	; () banked
  3023  003512  5168               	movf	___lomod@divisor& (0+255),w,b
  3024  003514  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3025  003516  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3026  003518  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3027  00351A  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3028  00351C  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3029  00351E  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3030  003520  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3031  003522  B4D8               	btfsc	status,2,c
  3032  003524  EF96  F01A         	goto	u4961
  3033  003528  EF98  F01A         	goto	u4960
  3034  00352C                     u4961:
  3035  00352C  EFE0  F01A         	goto	l1801
  3036  003530                     u4960:
  3037  003530                     
  3038                           ; BSR set to: 0
  3039  003530  0E01               	movlw	1
  3040  003532  6E20               	movwf	___lomod@counter^0,c
  3041  003534  EFA6  F01A         	goto	l6012
  3042  003538                     l6010:
  3043                           
  3044                           ; BSR set to: 0
  3045  003538  90D8               	bcf	status,0,c
  3046  00353A  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3047  00353C  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3048  00353E  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3049  003540  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3050  003542  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3051  003544  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3052  003546  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3053  003548  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3054  00354A  2A20               	incf	___lomod@counter^0,f,c
  3055  00354C                     l6012:
  3056                           
  3057                           ; BSR set to: 0
  3058  00354C  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3059  00354E  EFAB  F01A         	goto	u4971
  3060  003552  EFAD  F01A         	goto	u4970
  3061  003556                     u4971:
  3062  003556  EF9C  F01A         	goto	l6010
  3063  00355A                     u4970:
  3064  00355A                     l6014:
  3065                           
  3066                           ; BSR set to: 0
  3067  00355A  5168               	movf	___lomod@divisor& (0+255),w,b
  3068  00355C  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3069  00355E  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3070  003560  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3071  003562  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3072  003564  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3073  003566  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3074  003568  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3075  00356A  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3076  00356C  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3077  00356E  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3078  003570  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3079  003572  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3080  003574  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3081  003576  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3082  003578  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3083  00357A  A0D8               	btfss	status,0,c
  3084  00357C  EFC2  F01A         	goto	u4981
  3085  003580  EFC4  F01A         	goto	u4980
  3086  003584                     u4981:
  3087  003584  EFD4  F01A         	goto	l6018
  3088  003588                     u4980:
  3089  003588                     
  3090                           ; BSR set to: 0
  3091  003588  5168               	movf	___lomod@divisor& (0+255),w,b
  3092  00358A  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3093  00358C  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3094  00358E  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3095  003590  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3096  003592  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3097  003594  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3098  003596  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3099  003598  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3100  00359A  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3101  00359C  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3102  00359E  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3103  0035A0  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3104  0035A2  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3105  0035A4  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3106  0035A6  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3107  0035A8                     l6018:
  3108                           
  3109                           ; BSR set to: 0
  3110  0035A8  90D8               	bcf	status,0,c
  3111  0035AA  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3112  0035AC  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3113  0035AE  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3114  0035B0  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3115  0035B2  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3116  0035B4  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3117  0035B6  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3118  0035B8  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3119  0035BA                     
  3120                           ; BSR set to: 0
  3121  0035BA  2E20               	decfsz	___lomod@counter^0,f,c
  3122  0035BC  EFAD  F01A         	goto	l6014
  3123  0035C0                     l1801:
  3124                           
  3125                           ; BSR set to: 0
  3126  0035C0  C060  F060         	movff	___lomod@dividend,?___lomod
  3127  0035C4  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3128  0035C8  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3129  0035CC  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3130  0035D0  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3131  0035D4  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3132  0035D8  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3133  0035DC  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3134  0035E0                     
  3135                           ; BSR set to: 0
  3136  0035E0  0012               	return		;funcret
  3137  0035E2                     __end_of___lomod:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function ___lodiv *****************
  3141 ;; Defined at:
  3142 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3145 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3148 ;;  counter         1   24[BANK0 ] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  8    0[BANK0 ] unsigned long long 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3158 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;Total ram usage:       25 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 8
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_utoa
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text9
  3173  003338                     __ptext9:
  3174                           	callstack 0
  3175  003338                     ___lodiv:
  3176                           	callstack 17
  3177  003338  EE20  F070         	lfsr	2,___lodiv@quotient
  3178  00333C  0E07               	movlw	7
  3179  00333E                     u4921:
  3180  00333E  6ADE               	clrf	postinc2,c
  3181  003340  06E8               	decf	wreg,f,c
  3182  003342  E2FD               	bc	u4921
  3183  003344  0100               	movlb	0	; () banked
  3184  003346  5168               	movf	___lodiv@divisor& (0+255),w,b
  3185  003348  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3186  00334A  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3187  00334C  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3188  00334E  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3189  003350  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3190  003352  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3191  003354  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3192  003356  B4D8               	btfsc	status,2,c
  3193  003358  EFB0  F019         	goto	u4931
  3194  00335C  EFB2  F019         	goto	u4930
  3195  003360                     u4931:
  3196  003360  EF04  F01A         	goto	l1791
  3197  003364                     u4930:
  3198  003364                     
  3199                           ; BSR set to: 0
  3200  003364  0E01               	movlw	1
  3201  003366  6F78               	movwf	___lodiv@counter& (0+255),b
  3202  003368  EFC0  F019         	goto	l5992
  3203  00336C                     l5990:
  3204                           
  3205                           ; BSR set to: 0
  3206  00336C  90D8               	bcf	status,0,c
  3207  00336E  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3208  003370  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3209  003372  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3210  003374  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3211  003376  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3212  003378  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3213  00337A  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3214  00337C  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3215  00337E  2B78               	incf	___lodiv@counter& (0+255),f,b
  3216  003380                     l5992:
  3217                           
  3218                           ; BSR set to: 0
  3219  003380  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3220  003382  EFC5  F019         	goto	u4941
  3221  003386  EFC7  F019         	goto	u4940
  3222  00338A                     u4941:
  3223  00338A  EFB6  F019         	goto	l5990
  3224  00338E                     u4940:
  3225  00338E                     l5994:
  3226                           
  3227                           ; BSR set to: 0
  3228  00338E  90D8               	bcf	status,0,c
  3229  003390  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3230  003392  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3231  003394  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3232  003396  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3233  003398  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3234  00339A  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3235  00339C  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3236  00339E  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3237  0033A0                     
  3238                           ; BSR set to: 0
  3239  0033A0  5168               	movf	___lodiv@divisor& (0+255),w,b
  3240  0033A2  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3241  0033A4  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3242  0033A6  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3243  0033A8  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3244  0033AA  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3245  0033AC  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3246  0033AE  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3247  0033B0  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3248  0033B2  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3249  0033B4  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3250  0033B6  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3251  0033B8  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3252  0033BA  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3253  0033BC  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3254  0033BE  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3255  0033C0  A0D8               	btfss	status,0,c
  3256  0033C2  EFE5  F019         	goto	u4951
  3257  0033C6  EFE7  F019         	goto	u4950
  3258  0033CA                     u4951:
  3259  0033CA  EFF8  F019         	goto	l6002
  3260  0033CE                     u4950:
  3261  0033CE                     
  3262                           ; BSR set to: 0
  3263  0033CE  5168               	movf	___lodiv@divisor& (0+255),w,b
  3264  0033D0  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3265  0033D2  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3266  0033D4  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3267  0033D6  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3268  0033D8  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3269  0033DA  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3270  0033DC  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3271  0033DE  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3272  0033E0  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3273  0033E2  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3274  0033E4  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3275  0033E6  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3276  0033E8  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3277  0033EA  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3278  0033EC  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3279  0033EE                     
  3280                           ; BSR set to: 0
  3281  0033EE  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3282  0033F0                     l6002:
  3283                           
  3284                           ; BSR set to: 0
  3285  0033F0  90D8               	bcf	status,0,c
  3286  0033F2  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3287  0033F4  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3288  0033F6  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3289  0033F8  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3290  0033FA  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3291  0033FC  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3292  0033FE  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3293  003400  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3294  003402                     
  3295                           ; BSR set to: 0
  3296  003402  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3297  003404  EFC7  F019         	goto	l5994
  3298  003408                     l1791:
  3299                           
  3300                           ; BSR set to: 0
  3301  003408  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3302  00340C  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3303  003410  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3304  003414  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3305  003418  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3306  00341C  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3307  003420  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3308  003424  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3309  003428                     
  3310                           ; BSR set to: 0
  3311  003428  0012               	return		;funcret
  3312  00342A                     __end_of___lodiv:
  3313                           	callstack 0
  3314                           
  3315 ;; *************** function _dtoa *****************
  3316 ;; Defined at:
  3317 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  3320 ;;		 -> NULL(0), 
  3321 ;;  d               8   28[BANK0 ] long long 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  n               8   52[BANK0 ] long long 
  3324 ;;  i               2   60[BANK0 ] int 
  3325 ;;  s               2   50[BANK0 ] int 
  3326 ;;  w               2   48[BANK0 ] int 
  3327 ;;  p               2   46[BANK0 ] int 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2   26[BANK0 ] int 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3337 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;Total ram usage:       36 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; Hardware stack levels required when called: 13
  3344 ;; This function calls:
  3345 ;;		___aodiv
  3346 ;;		___aomod
  3347 ;;		_abs
  3348 ;;		_pad
  3349 ;; This function is called by:
  3350 ;;		_vfpfcnvrt
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text10
  3355  001986                     __ptext10:
  3356                           	callstack 0
  3357  001986                     _dtoa:
  3358                           	callstack 13
  3359  001986                     
  3360                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3361  001986  C07C  F094         	movff	dtoa@d,dtoa@n
  3362  00198A  C07D  F095         	movff	dtoa@d+1,dtoa@n+1
  3363  00198E  C07E  F096         	movff	dtoa@d+2,dtoa@n+2
  3364  001992  C07F  F097         	movff	dtoa@d+3,dtoa@n+3
  3365  001996  C080  F098         	movff	dtoa@d+4,dtoa@n+4
  3366  00199A  C081  F099         	movff	dtoa@d+5,dtoa@n+5
  3367  00199E  C082  F09A         	movff	dtoa@d+6,dtoa@n+6
  3368  0019A2  C083  F09B         	movff	dtoa@d+7,dtoa@n+7
  3369  0019A6                     
  3370                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3371  0019A6  0100               	movlb	0	; () banked
  3372  0019A8  BF9B               	btfsc	(dtoa@n+7)& (0+255),7,b
  3373  0019AA  EFD9  F00C         	goto	u5041
  3374  0019AE  EFDC  F00C         	goto	u5040
  3375  0019B2                     u5041:
  3376  0019B2  0E01               	movlw	1
  3377  0019B4  EFDD  F00C         	goto	u5050
  3378  0019B8                     u5040:
  3379  0019B8  0E00               	movlw	0
  3380  0019BA                     u5050:
  3381  0019BA  6F92               	movwf	dtoa@s& (0+255),b
  3382  0019BC  6B93               	clrf	(dtoa@s+1)& (0+255),b
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3385  0019BE  5192               	movf	dtoa@s& (0+255),w,b
  3386  0019C0  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  3387  0019C2  B4D8               	btfsc	status,2,c
  3388  0019C4  EFE6  F00C         	goto	u5061
  3389  0019C8  EFE8  F00C         	goto	u5060
  3390  0019CC                     u5061:
  3391  0019CC  EFF8  F00C         	goto	l6054
  3392  0019D0                     u5060:
  3393  0019D0                     
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3396  0019D0  1F9B               	comf	(dtoa@n+7)& (0+255),f,b
  3397  0019D2  1F9A               	comf	(dtoa@n+6)& (0+255),f,b
  3398  0019D4  1F99               	comf	(dtoa@n+5)& (0+255),f,b
  3399  0019D6  1F98               	comf	(dtoa@n+4)& (0+255),f,b
  3400  0019D8  1F97               	comf	(dtoa@n+3)& (0+255),f,b
  3401  0019DA  1F96               	comf	(dtoa@n+2)& (0+255),f,b
  3402  0019DC  1F95               	comf	(dtoa@n+1)& (0+255),f,b
  3403  0019DE  6D94               	negf	dtoa@n& (0+255),b
  3404  0019E0  0E00               	movlw	0
  3405  0019E2  2395               	addwfc	(dtoa@n+1)& (0+255),f,b
  3406  0019E4  2396               	addwfc	(dtoa@n+2)& (0+255),f,b
  3407  0019E6  2397               	addwfc	(dtoa@n+3)& (0+255),f,b
  3408  0019E8  2398               	addwfc	(dtoa@n+4)& (0+255),f,b
  3409  0019EA  2399               	addwfc	(dtoa@n+5)& (0+255),f,b
  3410  0019EC  239A               	addwfc	(dtoa@n+6)& (0+255),f,b
  3411  0019EE  239B               	addwfc	(dtoa@n+7)& (0+255),f,b
  3412  0019F0                     l6054:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3416  0019F0  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  3417  0019F2  EFFD  F00C         	goto	u5071
  3418  0019F6  EFFF  F00C         	goto	u5070
  3419  0019FA                     u5071:
  3420  0019FA  EF00  F00D         	goto	l6058
  3421  0019FE                     u5070:
  3422  0019FE                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3425  0019FE  9223               	bcf	_flags^0,1,c
  3426  001A00                     l6058:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3430  001A00  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  3431  001A02  EF0D  F00D         	goto	u5080
  3432  001A06  51D7               	movf	(_prec+1)& (0+255),w,b
  3433  001A08  E106               	bnz	u5081
  3434  001A0A  05D6               	decf	_prec& (0+255),w,b
  3435  001A0C  B0D8               	btfsc	status,0,c
  3436  001A0E  EF0B  F00D         	goto	u5081
  3437  001A12  EF0D  F00D         	goto	u5080
  3438  001A16                     u5081:
  3439  001A16  EF13  F00D         	goto	l2069
  3440  001A1A                     u5080:
  3441  001A1A                     
  3442                           ; BSR set to: 0
  3443  001A1A  0E00               	movlw	0
  3444  001A1C  6F8F               	movwf	(dtoa@p+1)& (0+255),b
  3445  001A1E  0E01               	movlw	1
  3446  001A20  6F8E               	movwf	dtoa@p& (0+255),b
  3447  001A22  EF17  F00D         	goto	l2071
  3448  001A26                     l2069:
  3449                           
  3450                           ; BSR set to: 0
  3451  001A26  C0D6  F08E         	movff	_prec,dtoa@p
  3452  001A2A  C0D7  F08F         	movff	_prec+1,dtoa@p+1
  3453  001A2E                     l2071:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3457  001A2E  C0D4  F090         	movff	_width,dtoa@w
  3458  001A32  C0D5  F091         	movff	_width+1,dtoa@w+1
  3459  001A36                     
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3462  001A36  5192               	movf	dtoa@s& (0+255),w,b
  3463  001A38  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  3464  001A3A  A4D8               	btfss	status,2,c
  3465  001A3C  EF22  F00D         	goto	u5091
  3466  001A40  EF24  F00D         	goto	u5090
  3467  001A44                     u5091:
  3468  001A44  EF2B  F00D         	goto	l6066
  3469  001A48                     u5090:
  3470  001A48                     
  3471                           ; BSR set to: 0
  3472  001A48  A423               	btfss	_flags^0,2,c
  3473  001A4A  EF29  F00D         	goto	u5101
  3474  001A4E  EF2B  F00D         	goto	u5100
  3475  001A52                     u5101:
  3476  001A52  EF2E  F00D         	goto	l6068
  3477  001A56                     u5100:
  3478  001A56                     l6066:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  3482  001A56  0790               	decf	dtoa@w& (0+255),f,b
  3483  001A58  A0D8               	btfss	status,0,c
  3484  001A5A  0791               	decf	(dtoa@w+1)& (0+255),f,b
  3485  001A5C                     l6068:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3489  001A5C  0E00               	movlw	0
  3490  001A5E  6F9D               	movwf	(dtoa@i+1)& (0+255),b
  3491  001A60  0E1F               	movlw	31
  3492  001A62  6F9C               	movwf	dtoa@i& (0+255),b
  3493  001A64                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3496  001A64  0E00               	movlw	0
  3497  001A66  0101               	movlb	1	; () banked
  3498  001A68  6F1F               	movwf	(_dbuf+31)& (0+255),b
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3501  001A6A  EFB4  F00D         	goto	l6082
  3502  001A6E                     l6072:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  3506  001A6E  079C               	decf	dtoa@i& (0+255),f,b
  3507  001A70  A0D8               	btfss	status,0,c
  3508  001A72  079D               	decf	(dtoa@i+1)& (0+255),f,b
  3509  001A74                     
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3512  001A74  0E00               	movlw	low _dbuf
  3513  001A76  259C               	addwf	dtoa@i& (0+255),w,b
  3514  001A78  6ED9               	movwf	fsr2l,c
  3515  001A7A  0E01               	movlw	high _dbuf
  3516  001A7C  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  3517  001A7E  6EDA               	movwf	fsr2h,c
  3518  001A80  C094  F060         	movff	dtoa@n,___aomod@dividend
  3519  001A84  C095  F061         	movff	dtoa@n+1,___aomod@dividend+1
  3520  001A88  C096  F062         	movff	dtoa@n+2,___aomod@dividend+2
  3521  001A8C  C097  F063         	movff	dtoa@n+3,___aomod@dividend+3
  3522  001A90  C098  F064         	movff	dtoa@n+4,___aomod@dividend+4
  3523  001A94  C099  F065         	movff	dtoa@n+5,___aomod@dividend+5
  3524  001A98  C09A  F066         	movff	dtoa@n+6,___aomod@dividend+6
  3525  001A9C  C09B  F067         	movff	dtoa@n+7,___aomod@dividend+7
  3526  001AA0  0E0A               	movlw	10
  3527  001AA2  6F68               	movwf	___aomod@divisor& (0+255),b
  3528  001AA4  0E00               	movlw	0
  3529  001AA6  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  3530  001AA8  0E00               	movlw	0
  3531  001AAA  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  3532  001AAC  0E00               	movlw	0
  3533  001AAE  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  3534  001AB0  0E00               	movlw	0
  3535  001AB2  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  3536  001AB4  0E00               	movlw	0
  3537  001AB6  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  3538  001AB8  0E00               	movlw	0
  3539  001ABA  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  3540  001ABC  0E00               	movlw	0
  3541  001ABE  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  3542  001AC0  EC25  F016         	call	___aomod	;wreg free
  3543  001AC4  C060  F084         	movff	?___aomod,??_dtoa
  3544  001AC8  C061  F085         	movff	?___aomod+1,??_dtoa+1
  3545  001ACC  C062  F086         	movff	?___aomod+2,??_dtoa+2
  3546  001AD0  C063  F087         	movff	?___aomod+3,??_dtoa+3
  3547  001AD4  C064  F088         	movff	?___aomod+4,??_dtoa+4
  3548  001AD8  C065  F089         	movff	?___aomod+5,??_dtoa+5
  3549  001ADC  C066  F08A         	movff	?___aomod+6,??_dtoa+6
  3550  001AE0  C067  F08B         	movff	?___aomod+7,??_dtoa+7
  3551  001AE4  C084  F070         	movff	??_dtoa,abs@a
  3552  001AE8  C086  F071         	movff	??_dtoa+2,abs@a+1
  3553  001AEC  EC2A  F020         	call	_abs	;wreg free
  3554  001AF0  0100               	movlb	0	; () banked
  3555  001AF2  5170               	movf	?_abs& (0+255),w,b
  3556  001AF4  0F30               	addlw	48
  3557  001AF6  6EDF               	movwf	indf2,c
  3558  001AF8                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  3561  001AF8  078E               	decf	dtoa@p& (0+255),f,b
  3562  001AFA  A0D8               	btfss	status,0,c
  3563  001AFC  078F               	decf	(dtoa@p+1)& (0+255),f,b
  3564  001AFE                     
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  3567  001AFE  0790               	decf	dtoa@w& (0+255),f,b
  3568  001B00  A0D8               	btfss	status,0,c
  3569  001B02  0791               	decf	(dtoa@w+1)& (0+255),f,b
  3570  001B04                     
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3573  001B04  C094  F060         	movff	dtoa@n,___aodiv@dividend
  3574  001B08  C095  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  3575  001B0C  C096  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  3576  001B10  C097  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  3577  001B14  C098  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  3578  001B18  C099  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  3579  001B1C  C09A  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  3580  001B20  C09B  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  3581  001B24  0E0A               	movlw	10
  3582  001B26  6F68               	movwf	___aodiv@divisor& (0+255),b
  3583  001B28  0E00               	movlw	0
  3584  001B2A  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  3585  001B2C  0E00               	movlw	0
  3586  001B2E  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3587  001B30  0E00               	movlw	0
  3588  001B32  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3589  001B34  0E00               	movlw	0
  3590  001B36  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3591  001B38  0E00               	movlw	0
  3592  001B3A  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3593  001B3C  0E00               	movlw	0
  3594  001B3E  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3595  001B40  0E00               	movlw	0
  3596  001B42  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3597  001B44  EC60  F015         	call	___aodiv	;wreg free
  3598  001B48  C060  F094         	movff	?___aodiv,dtoa@n
  3599  001B4C  C061  F095         	movff	?___aodiv+1,dtoa@n+1
  3600  001B50  C062  F096         	movff	?___aodiv+2,dtoa@n+2
  3601  001B54  C063  F097         	movff	?___aodiv+3,dtoa@n+3
  3602  001B58  C064  F098         	movff	?___aodiv+4,dtoa@n+4
  3603  001B5C  C065  F099         	movff	?___aodiv+5,dtoa@n+5
  3604  001B60  C066  F09A         	movff	?___aodiv+6,dtoa@n+6
  3605  001B64  C067  F09B         	movff	?___aodiv+7,dtoa@n+7
  3606  001B68                     l6082:
  3607                           
  3608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3609  001B68  0100               	movlb	0	; () banked
  3610  001B6A  BF9D               	btfsc	(dtoa@i+1)& (0+255),7,b
  3611  001B6C  EFC0  F00D         	goto	u5111
  3612  001B70  519D               	movf	(dtoa@i+1)& (0+255),w,b
  3613  001B72  E108               	bnz	u5110
  3614  001B74  059C               	decf	dtoa@i& (0+255),w,b
  3615  001B76  A0D8               	btfss	status,0,c
  3616  001B78  EFC0  F00D         	goto	u5111
  3617  001B7C  EFC2  F00D         	goto	u5110
  3618  001B80                     u5111:
  3619  001B80  EFF2  F00D         	goto	l6092
  3620  001B84                     u5110:
  3621  001B84                     
  3622                           ; BSR set to: 0
  3623  001B84  5194               	movf	dtoa@n& (0+255),w,b
  3624  001B86  1195               	iorwf	(dtoa@n+1)& (0+255),w,b
  3625  001B88  1196               	iorwf	(dtoa@n+2)& (0+255),w,b
  3626  001B8A  1197               	iorwf	(dtoa@n+3)& (0+255),w,b
  3627  001B8C  1198               	iorwf	(dtoa@n+4)& (0+255),w,b
  3628  001B8E  1199               	iorwf	(dtoa@n+5)& (0+255),w,b
  3629  001B90  119A               	iorwf	(dtoa@n+6)& (0+255),w,b
  3630  001B92  119B               	iorwf	(dtoa@n+7)& (0+255),w,b
  3631  001B94  A4D8               	btfss	status,2,c
  3632  001B96  EFCF  F00D         	goto	u5121
  3633  001B9A  EFD1  F00D         	goto	u5120
  3634  001B9E                     u5121:
  3635  001B9E  EF37  F00D         	goto	l6072
  3636  001BA2                     u5120:
  3637  001BA2                     
  3638                           ; BSR set to: 0
  3639  001BA2  BF8F               	btfsc	(dtoa@p+1)& (0+255),7,b
  3640  001BA4  EFDE  F00D         	goto	u5130
  3641  001BA8  518F               	movf	(dtoa@p+1)& (0+255),w,b
  3642  001BAA  E106               	bnz	u5131
  3643  001BAC  058E               	decf	dtoa@p& (0+255),w,b
  3644  001BAE  B0D8               	btfsc	status,0,c
  3645  001BB0  EFDC  F00D         	goto	u5131
  3646  001BB4  EFDE  F00D         	goto	u5130
  3647  001BB8                     u5131:
  3648  001BB8  EF37  F00D         	goto	l6072
  3649  001BBC                     u5130:
  3650  001BBC                     
  3651                           ; BSR set to: 0
  3652  001BBC  BF91               	btfsc	(dtoa@w+1)& (0+255),7,b
  3653  001BBE  EFE9  F00D         	goto	u5141
  3654  001BC2  5191               	movf	(dtoa@w+1)& (0+255),w,b
  3655  001BC4  E108               	bnz	u5140
  3656  001BC6  0590               	decf	dtoa@w& (0+255),w,b
  3657  001BC8  A0D8               	btfss	status,0,c
  3658  001BCA  EFE9  F00D         	goto	u5141
  3659  001BCE  EFEB  F00D         	goto	u5140
  3660  001BD2                     u5141:
  3661  001BD2  EFF2  F00D         	goto	l6092
  3662  001BD6                     u5140:
  3663  001BD6                     
  3664                           ; BSR set to: 0
  3665  001BD6  B223               	btfsc	_flags^0,1,c
  3666  001BD8  EFF0  F00D         	goto	u5151
  3667  001BDC  EFF2  F00D         	goto	u5150
  3668  001BE0                     u5151:
  3669  001BE0  EF37  F00D         	goto	l6072
  3670  001BE4                     u5150:
  3671  001BE4                     l6092:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3675  001BE4  5192               	movf	dtoa@s& (0+255),w,b
  3676  001BE6  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  3677  001BE8  A4D8               	btfss	status,2,c
  3678  001BEA  EFF9  F00D         	goto	u5161
  3679  001BEE  EFFB  F00D         	goto	u5160
  3680  001BF2                     u5161:
  3681  001BF2  EF02  F00E         	goto	l6096
  3682  001BF6                     u5160:
  3683  001BF6                     
  3684                           ; BSR set to: 0
  3685  001BF6  A423               	btfss	_flags^0,2,c
  3686  001BF8  EF00  F00E         	goto	u5171
  3687  001BFC  EF02  F00E         	goto	u5170
  3688  001C00                     u5171:
  3689  001C00  EF21  F00E         	goto	l6106
  3690  001C04                     u5170:
  3691  001C04                     l6096:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  3695  001C04  079C               	decf	dtoa@i& (0+255),f,b
  3696  001C06  A0D8               	btfss	status,0,c
  3697  001C08  079D               	decf	(dtoa@i+1)& (0+255),f,b
  3698  001C0A                     
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3701  001C0A  5192               	movf	dtoa@s& (0+255),w,b
  3702  001C0C  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  3703  001C0E  A4D8               	btfss	status,2,c
  3704  001C10  EF0C  F00E         	goto	u5181
  3705  001C14  EF0E  F00E         	goto	u5180
  3706  001C18                     u5181:
  3707  001C18  EF14  F00E         	goto	l6102
  3708  001C1C                     u5180:
  3709  001C1C                     
  3710                           ; BSR set to: 0
  3711  001C1C  0E00               	movlw	0
  3712  001C1E  6F8D               	movwf	(_dtoa$3455+1)& (0+255),b
  3713  001C20  0E2B               	movlw	43
  3714  001C22  6F8C               	movwf	_dtoa$3455& (0+255),b
  3715  001C24  EF18  F00E         	goto	l6104
  3716  001C28                     l6102:
  3717                           
  3718                           ; BSR set to: 0
  3719  001C28  0E00               	movlw	0
  3720  001C2A  6F8D               	movwf	(_dtoa$3455+1)& (0+255),b
  3721  001C2C  0E2D               	movlw	45
  3722  001C2E  6F8C               	movwf	_dtoa$3455& (0+255),b
  3723  001C30                     l6104:
  3724                           
  3725                           ; BSR set to: 0
  3726  001C30  0E00               	movlw	low _dbuf
  3727  001C32  259C               	addwf	dtoa@i& (0+255),w,b
  3728  001C34  6ED9               	movwf	fsr2l,c
  3729  001C36  0E01               	movlw	high _dbuf
  3730  001C38  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  3731  001C3A  6EDA               	movwf	fsr2h,c
  3732  001C3C  0060  F233  FFDF   	movff	_dtoa$3455,indf2
  3733  001C42                     l6106:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3737  001C42  C07A  F070         	movff	dtoa@fp,pad@fp
  3738  001C46  C07B  F071         	movff	dtoa@fp+1,pad@fp+1
  3739  001C4A  0E00               	movlw	low _dbuf
  3740  001C4C  259C               	addwf	dtoa@i& (0+255),w,b
  3741  001C4E  6F72               	movwf	pad@buf& (0+255),b
  3742  001C50  0E01               	movlw	high _dbuf
  3743  001C52  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  3744  001C54  6F73               	movwf	(pad@buf+1)& (0+255),b
  3745  001C56  C090  F074         	movff	dtoa@w,pad@p
  3746  001C5A  C091  F075         	movff	dtoa@w+1,pad@p+1
  3747  001C5E  EC56  F01B         	call	_pad	;wreg free
  3748  001C62  C070  F07A         	movff	?_pad,?_dtoa
  3749  001C66  C071  F07B         	movff	?_pad+1,?_dtoa+1
  3750  001C6A  0012               	return		;funcret
  3751  001C6C                     __end_of_dtoa:
  3752                           	callstack 0
  3753                           
  3754 ;; *************** function _pad *****************
  3755 ;; Defined at:
  3756 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3759 ;;		 -> NULL(0), 
  3760 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3761 ;;		 -> dbuf(32), 
  3762 ;;  p               2   20[BANK0 ] int 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  w               2   24[BANK0 ] int 
  3765 ;;  i               2   22[BANK0 ] int 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  2   16[BANK0 ] int 
  3768 ;; Registers used:
  3769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3775 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;Total ram usage:       11 bytes
  3780 ;; Hardware stack levels used: 1
  3781 ;; Hardware stack levels required when called: 12
  3782 ;; This function calls:
  3783 ;;		_fputc
  3784 ;;		_fputs
  3785 ;;		_strlen
  3786 ;; This function is called by:
  3787 ;;		_dtoa
  3788 ;;		_utoa
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text11
  3793  0036AC                     __ptext11:
  3794                           	callstack 0
  3795  0036AC                     _pad:
  3796                           	callstack 13
  3797  0036AC                     
  3798                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3799  0036AC  A023               	btfss	_flags^0,0,c
  3800  0036AE  EF5B  F01B         	goto	u4991
  3801  0036B2  EF5D  F01B         	goto	u4990
  3802  0036B6                     u4991:
  3803  0036B6  EF67  F01B         	goto	l6026
  3804  0036BA                     u4990:
  3805  0036BA                     
  3806                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3807  0036BA  C072  F069         	movff	pad@buf,fputs@s
  3808  0036BE  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3809  0036C2  C070  F06B         	movff	pad@fp,fputs@fp
  3810  0036C6  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3811  0036CA  ECBF  F01F         	call	_fputs	;wreg free
  3812  0036CE                     l6026:
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3815  0036CE  0100               	movlb	0	; () banked
  3816  0036D0  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  3817  0036D2  EF6D  F01B         	goto	u5001
  3818  0036D6  EF6F  F01B         	goto	u5000
  3819  0036DA                     u5001:
  3820  0036DA  EF75  F01B         	goto	l6030
  3821  0036DE                     u5000:
  3822  0036DE                     
  3823                           ; BSR set to: 0
  3824  0036DE  C074  F078         	movff	pad@p,pad@w
  3825  0036E2  C075  F079         	movff	pad@p+1,pad@w+1
  3826  0036E6  EF79  F01B         	goto	l2058
  3827  0036EA                     l6030:
  3828                           
  3829                           ; BSR set to: 0
  3830  0036EA  0E00               	movlw	0
  3831  0036EC  6F79               	movwf	(pad@w+1)& (0+255),b
  3832  0036EE  0E00               	movlw	0
  3833  0036F0  6F78               	movwf	pad@w& (0+255),b
  3834  0036F2                     l2058:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3838  0036F2  0E00               	movlw	0
  3839  0036F4  6F77               	movwf	(pad@i+1)& (0+255),b
  3840  0036F6  0E00               	movlw	0
  3841  0036F8  6F76               	movwf	pad@i& (0+255),b
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3844  0036FA  EF8C  F01B         	goto	l6036
  3845  0036FE                     l6032:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3849  0036FE  0E00               	movlw	0
  3850  003700  6F61               	movwf	(fputc@c+1)& (0+255),b
  3851  003702  0E20               	movlw	32
  3852  003704  6F60               	movwf	fputc@c& (0+255),b
  3853  003706  C070  F062         	movff	pad@fp,fputc@fp
  3854  00370A  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3855  00370E  EC1C  F01D         	call	_fputc	;wreg free
  3856  003712                     
  3857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3858  003712  0100               	movlb	0	; () banked
  3859  003714  4B76               	infsnz	pad@i& (0+255),f,b
  3860  003716  2B77               	incf	(pad@i+1)& (0+255),f,b
  3861  003718                     l6036:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3865  003718  5178               	movf	pad@w& (0+255),w,b
  3866  00371A  5D76               	subwf	pad@i& (0+255),w,b
  3867  00371C  5177               	movf	(pad@i+1)& (0+255),w,b
  3868  00371E  0A80               	xorlw	128
  3869  003720  6E22               	movwf	??_pad^0,c
  3870  003722  5179               	movf	(pad@w+1)& (0+255),w,b
  3871  003724  0A80               	xorlw	128
  3872  003726  5822               	subwfb	??_pad^0,w,c
  3873  003728  A0D8               	btfss	status,0,c
  3874  00372A  EF99  F01B         	goto	u5011
  3875  00372E  EF9B  F01B         	goto	u5010
  3876  003732                     u5011:
  3877  003732  EF7F  F01B         	goto	l6032
  3878  003736                     u5010:
  3879  003736                     
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3882  003736  B023               	btfsc	_flags^0,0,c
  3883  003738  EFA0  F01B         	goto	u5021
  3884  00373C  EFA2  F01B         	goto	u5020
  3885  003740                     u5021:
  3886  003740  EFAC  F01B         	goto	l6040
  3887  003744                     u5020:
  3888  003744                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3891  003744  C072  F069         	movff	pad@buf,fputs@s
  3892  003748  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3893  00374C  C070  F06B         	movff	pad@fp,fputs@fp
  3894  003750  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3895  003754  ECBF  F01F         	call	_fputs	;wreg free
  3896  003758                     l6040:
  3897                           
  3898                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3899  003758  C072  F020         	movff	pad@buf,strlen@s
  3900  00375C  C073  F021         	movff	pad@buf+1,strlen@s+1
  3901  003760  EC4B  F020         	call	_strlen	;wreg free
  3902  003764  0100               	movlb	0	; () banked
  3903  003766  5178               	movf	pad@w& (0+255),w,b
  3904  003768  2420               	addwf	?_strlen^0,w,c
  3905  00376A  6F70               	movwf	?_pad& (0+255),b
  3906  00376C  5179               	movf	(pad@w+1)& (0+255),w,b
  3907  00376E  2021               	addwfc	(?_strlen+1)^0,w,c
  3908  003770  6F71               	movwf	(?_pad+1)& (0+255),b
  3909  003772                     
  3910                           ; BSR set to: 0
  3911  003772  0012               	return		;funcret
  3912  003774                     __end_of_pad:
  3913                           	callstack 0
  3914                           
  3915 ;; *************** function _strlen *****************
  3916 ;; Defined at:
  3917 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3920 ;;		 -> dbuf(32), 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  3923 ;;		 -> dbuf(32), 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2   31[COMRAM] unsigned int 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;Total ram usage:        4 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 8
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_pad
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text12
  3948  004096                     __ptext12:
  3949                           	callstack 0
  3950  004096                     _strlen:
  3951                           	callstack 16
  3952  004096  C020  F060         	movff	strlen@s,strlen@a
  3953  00409A  C021  F061         	movff	strlen@s+1,strlen@a+1
  3954  00409E  EF53  F020         	goto	l5898
  3955  0040A2                     l5896:
  3956  0040A2  4A20               	infsnz	strlen@s^0,f,c
  3957  0040A4  2A21               	incf	(strlen@s+1)^0,f,c
  3958  0040A6                     l5898:
  3959  0040A6  0060  F083  FFD9   	movff	strlen@s,fsr2l
  3960  0040AC  0060  F087  FFDA   	movff	strlen@s+1,fsr2h
  3961  0040B2  50DF               	movf	indf2,w,c
  3962  0040B4  A4D8               	btfss	status,2,c
  3963  0040B6  EF5F  F020         	goto	u4781
  3964  0040BA  EF61  F020         	goto	u4780
  3965  0040BE                     u4781:
  3966  0040BE  EF51  F020         	goto	l5896
  3967  0040C2                     u4780:
  3968  0040C2  0100               	movlb	0	; () banked
  3969  0040C4  5160               	movf	strlen@a& (0+255),w,b
  3970  0040C6  5C20               	subwf	strlen@s^0,w,c
  3971  0040C8  6E20               	movwf	?_strlen^0,c
  3972  0040CA  5161               	movf	(strlen@a+1)& (0+255),w,b
  3973  0040CC  5821               	subwfb	(strlen@s+1)^0,w,c
  3974  0040CE  6E21               	movwf	(?_strlen+1)^0,c
  3975  0040D0                     
  3976                           ; BSR set to: 0
  3977  0040D0  0012               	return		;funcret
  3978  0040D2                     __end_of_strlen:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _fputs *****************
  3982 ;; Defined at:
  3983 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3986 ;;		 -> dbuf(32), 
  3987 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3988 ;;		 -> NULL(0), 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  i               2   14[BANK0 ] int 
  3991 ;;  c               1   13[BANK0 ] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  2    9[BANK0 ] int 
  3994 ;; Registers used:
  3995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;Total ram usage:        7 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 11
  4008 ;; This function calls:
  4009 ;;		_fputc
  4010 ;; This function is called by:
  4011 ;;		_pad
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text13
  4016  003F7E                     __ptext13:
  4017                           	callstack 0
  4018  003F7E                     _fputs:
  4019                           	callstack 13
  4020  003F7E  0E00               	movlw	0
  4021  003F80  0100               	movlb	0	; () banked
  4022  003F82  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4023  003F84  0E00               	movlw	0
  4024  003F86  6F6E               	movwf	fputs@i& (0+255),b
  4025  003F88  EFD2  F01F         	goto	l5892
  4026  003F8C                     l5888:
  4027                           
  4028                           ; BSR set to: 0
  4029  003F8C  C06D  F060         	movff	fputs@c,fputc@c
  4030  003F90  6B61               	clrf	(fputc@c+1)& (0+255),b
  4031  003F92  C06B  F062         	movff	fputs@fp,fputc@fp
  4032  003F96  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  4033  003F9A  EC1C  F01D         	call	_fputc	;wreg free
  4034  003F9E  0100               	movlb	0	; () banked
  4035  003FA0  4B6E               	infsnz	fputs@i& (0+255),f,b
  4036  003FA2  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4037  003FA4                     l5892:
  4038                           
  4039                           ; BSR set to: 0
  4040  003FA4  516E               	movf	fputs@i& (0+255),w,b
  4041  003FA6  2569               	addwf	fputs@s& (0+255),w,b
  4042  003FA8  6ED9               	movwf	fsr2l,c
  4043  003FAA  516F               	movf	(fputs@i+1)& (0+255),w,b
  4044  003FAC  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4045  003FAE  6EDA               	movwf	fsr2h,c
  4046  003FB0  50DF               	movf	indf2,w,c
  4047  003FB2  6F6D               	movwf	fputs@c& (0+255),b
  4048  003FB4  516D               	movf	fputs@c& (0+255),w,b
  4049  003FB6  A4D8               	btfss	status,2,c
  4050  003FB8  EFE0  F01F         	goto	u4771
  4051  003FBC  EFE2  F01F         	goto	u4770
  4052  003FC0                     u4771:
  4053  003FC0  EFC6  F01F         	goto	l5888
  4054  003FC4                     u4770:
  4055  003FC4                     
  4056                           ; BSR set to: 0
  4057  003FC4  0012               	return		;funcret
  4058  003FC6                     __end_of_fputs:
  4059                           	callstack 0
  4060                           
  4061 ;; *************** function _fputc *****************
  4062 ;; Defined at:
  4063 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  c               2    0[BANK0 ] int 
  4066 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4067 ;;		 -> NULL(0), 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  2    0[BANK0 ] int 
  4072 ;; Registers used:
  4073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4079 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;Total ram usage:        9 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: 10
  4086 ;; This function calls:
  4087 ;;		_putch
  4088 ;; This function is called by:
  4089 ;;		_pad
  4090 ;;		_vfpfcnvrt
  4091 ;;		_fputs
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text14
  4096  003A38                     __ptext14:
  4097                           	callstack 0
  4098  003A38                     _fputc:
  4099                           	callstack 13
  4100  003A38  0100               	movlb	0	; () banked
  4101  003A3A  5162               	movf	fputc@fp& (0+255),w,b
  4102  003A3C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4103  003A3E  B4D8               	btfsc	status,2,c
  4104  003A40  EF24  F01D         	goto	u4731
  4105  003A44  EF26  F01D         	goto	u4730
  4106  003A48                     u4731:
  4107  003A48  EF2F  F01D         	goto	l5876
  4108  003A4C                     u4730:
  4109  003A4C                     
  4110                           ; BSR set to: 0
  4111  003A4C  5162               	movf	fputc@fp& (0+255),w,b
  4112  003A4E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4113  003A50  A4D8               	btfss	status,2,c
  4114  003A52  EF2D  F01D         	goto	u4741
  4115  003A56  EF2F  F01D         	goto	u4740
  4116  003A5A                     u4741:
  4117  003A5A  EF34  F01D         	goto	l5878
  4118  003A5E                     u4740:
  4119  003A5E                     l5876:
  4120                           
  4121                           ; BSR set to: 0
  4122  003A5E  5160               	movf	fputc@c& (0+255),w,b
  4123  003A60  ECD4  F022         	call	_putch
  4124  003A64  EF67  F01D         	goto	l2138
  4125  003A68                     l5878:
  4126                           
  4127                           ; BSR set to: 0
  4128  003A68  EE20 F009          	lfsr	2,9
  4129  003A6C  5162               	movf	fputc@fp& (0+255),w,b
  4130  003A6E  26D9               	addwf	fsr2l,f,c
  4131  003A70  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4132  003A72  22DA               	addwfc	fsr2h,f,c
  4133  003A74  50DE               	movf	postinc2,w,c
  4134  003A76  10DE               	iorwf	postinc2,w,c
  4135  003A78  B4D8               	btfsc	status,2,c
  4136  003A7A  EF41  F01D         	goto	u4751
  4137  003A7E  EF43  F01D         	goto	u4750
  4138  003A82                     u4751:
  4139  003A82  EF5E  F01D         	goto	l5882
  4140  003A86                     u4750:
  4141  003A86                     
  4142                           ; BSR set to: 0
  4143  003A86  EE20 F009          	lfsr	2,9
  4144  003A8A  5162               	movf	fputc@fp& (0+255),w,b
  4145  003A8C  26D9               	addwf	fsr2l,f,c
  4146  003A8E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4147  003A90  22DA               	addwfc	fsr2h,f,c
  4148  003A92  EE10 F003          	lfsr	1,3
  4149  003A96  5162               	movf	fputc@fp& (0+255),w,b
  4150  003A98  26E1               	addwf	fsr1l,f,c
  4151  003A9A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4152  003A9C  22E2               	addwfc	fsr1h,f,c
  4153  003A9E  50DE               	movf	postinc2,w,c
  4154  003AA0  5CE6               	subwf	postinc1,w,c
  4155  003AA2  50E6               	movf	postinc1,w,c
  4156  003AA4  0A80               	xorlw	128
  4157  003AA6  6F68               	movwf	(??_fputc+4)& (0+255),b
  4158  003AA8  50DE               	movf	postinc2,w,c
  4159  003AAA  0A80               	xorlw	128
  4160  003AAC  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4161  003AAE  B0D8               	btfsc	status,0,c
  4162  003AB0  EF5C  F01D         	goto	u4761
  4163  003AB4  EF5E  F01D         	goto	u4760
  4164  003AB8                     u4761:
  4165  003AB8  EF67  F01D         	goto	l2138
  4166  003ABC                     u4760:
  4167  003ABC                     l5882:
  4168                           
  4169                           ; BSR set to: 0
  4170  003ABC  EE20 F003          	lfsr	2,3
  4171  003AC0  5162               	movf	fputc@fp& (0+255),w,b
  4172  003AC2  26D9               	addwf	fsr2l,f,c
  4173  003AC4  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4174  003AC6  22DA               	addwfc	fsr2h,f,c
  4175  003AC8  2ADE               	incf	postinc2,f,c
  4176  003ACA  0E00               	movlw	0
  4177  003ACC  22DD               	addwfc	postdec2,f,c
  4178  003ACE                     l2138:
  4179  003ACE  0012               	return		;funcret
  4180  003AD0                     __end_of_fputc:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _putch *****************
  4184 ;; Defined at:
  4185 ;;		line 230 in file "mcc_generated_files/uart1.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  txData          1    wreg     unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  txData          1   32[COMRAM] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;Total ram usage:        1 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 9
  4206 ;; This function calls:
  4207 ;;		_UART1_Write
  4208 ;; This function is called by:
  4209 ;;		_fputc
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text15
  4214  0045A8                     __ptext15:
  4215                           	callstack 0
  4216  0045A8                     _putch:
  4217                           	callstack 13
  4218                           
  4219                           ;incstack = 0
  4220                           ;putch@txData stored from wreg
  4221  0045A8  6E21               	movwf	putch@txData^0,c
  4222  0045AA                     
  4223                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  4224  0045AA  5021               	movf	putch@txData^0,w,c
  4225  0045AC  ECDF  F01D         	call	_UART1_Write
  4226  0045B0  0012               	return		;funcret
  4227  0045B2                     __end_of_putch:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _UART1_Write *****************
  4231 ;; Defined at:
  4232 ;;		line 202 in file "mcc_generated_files/uart1.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  txData          1    wreg     unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  txData          1   31[COMRAM] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;Total ram usage:        1 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 8
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_putch
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text16
  4261  003BBE                     __ptext16:
  4262                           	callstack 0
  4263  003BBE                     _UART1_Write:
  4264                           	callstack 13
  4265                           
  4266                           ;incstack = 0
  4267                           ;UART1_Write@txData stored from wreg
  4268  003BBE  6E20               	movwf	UART1_Write@txData^0,c
  4269  003BC0                     l5854:
  4270                           
  4271                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  4272  003BC0  5040               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  4273  003BC2  B4D8               	btfsc	status,2,c
  4274  003BC4  EFE6  F01D         	goto	u4701
  4275  003BC8  EFE8  F01D         	goto	u4700
  4276  003BCC                     u4701:
  4277  003BCC  EFE0  F01D         	goto	l5854
  4278  003BD0                     u4700:
  4279  003BD0                     
  4280                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  4281  003BD0  0139               	movlb	57	; () banked
  4282  003BD2  B993               	btfsc	147,4,b	;volatile
  4283  003BD4  EFEE  F01D         	goto	u4711
  4284  003BD8  EFF0  F01D         	goto	u4710
  4285  003BDC                     u4711:
  4286  003BDC  EFF5  F01D         	goto	l309
  4287  003BE0                     u4710:
  4288  003BE0                     
  4289                           ; BSR set to: 57
  4290                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  4291  003BE0  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
  4292                           
  4293                           ;mcc_generated_files/uart1.c: 211:     }
  4294  003BE6  EF0B  F01E         	goto	l5868
  4295  003BEA                     l309:
  4296                           
  4297                           ; BSR set to: 57
  4298                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  4299  003BEA  9993               	bcf	147,4,b	;volatile
  4300  003BEC                     
  4301                           ; BSR set to: 57
  4302                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  4303  003BEC  0EC2               	movlw	low _uart1TxBuffer
  4304  003BEE  2433               	addwf	_uart1TxHead^0,w,c	;volatile
  4305  003BF0  6ED9               	movwf	fsr2l,c
  4306  003BF2  6ADA               	clrf	fsr2h,c
  4307  003BF4  0E00               	movlw	high _uart1TxBuffer
  4308  003BF6  22DA               	addwfc	fsr2h,f,c
  4309  003BF8  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
  4310  003BFE                     
  4311                           ; BSR set to: 57
  4312  003BFE  2A33               	incf	_uart1TxHead^0,f,c	;volatile
  4313  003C00                     
  4314                           ; BSR set to: 57
  4315                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  4316  003C00  0E07               	movlw	7
  4317  003C02  6433               	cpfsgt	_uart1TxHead^0,c	;volatile
  4318  003C04  EF06  F01E         	goto	u4721
  4319  003C08  EF08  F01E         	goto	u4720
  4320  003C0C                     u4721:
  4321  003C0C  EF0A  F01E         	goto	l5866
  4322  003C10                     u4720:
  4323  003C10                     
  4324                           ; BSR set to: 57
  4325                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  4326  003C10  0E00               	movlw	0
  4327  003C12  6E33               	movwf	_uart1TxHead^0,c	;volatile
  4328  003C14                     l5866:
  4329                           
  4330                           ; BSR set to: 57
  4331                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  4332  003C14  0640               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  4333  003C16                     l5868:
  4334                           
  4335                           ; BSR set to: 57
  4336                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  4337  003C16  8993               	bsf	147,4,b	;volatile
  4338  003C18                     
  4339                           ; BSR set to: 57
  4340  003C18  0012               	return		;funcret
  4341  003C1A                     __end_of_UART1_Write:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _abs *****************
  4345 ;; Defined at:
  4346 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  a               2   16[BANK0 ] int 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  2   16[BANK0 ] int 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;Total ram usage:        4 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 8
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_dtoa
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text17
  4375  004054                     __ptext17:
  4376                           	callstack 0
  4377  004054                     _abs:
  4378                           	callstack 17
  4379  004054  0100               	movlb	0	; () banked
  4380  004056  BF71               	btfsc	(abs@a+1)& (0+255),7,b
  4381  004058  EF38  F020         	goto	u5030
  4382  00405C  5171               	movf	(abs@a+1)& (0+255),w,b
  4383  00405E  E106               	bnz	u5031
  4384  004060  0570               	decf	abs@a& (0+255),w,b
  4385  004062  B0D8               	btfsc	status,0,c
  4386  004064  EF36  F020         	goto	u5031
  4387  004068  EF38  F020         	goto	u5030
  4388  00406C                     u5031:
  4389  00406C  EF46  F020         	goto	l2123
  4390  004070                     u5030:
  4391  004070                     
  4392                           ; BSR set to: 0
  4393  004070  C070  F072         	movff	abs@a,??_abs
  4394  004074  C071  F073         	movff	abs@a+1,??_abs+1
  4395  004078  1F72               	comf	??_abs& (0+255),f,b
  4396  00407A  1F73               	comf	(??_abs+1)& (0+255),f,b
  4397  00407C  4B72               	infsnz	??_abs& (0+255),f,b
  4398  00407E  2B73               	incf	(??_abs+1)& (0+255),f,b
  4399  004080  C072  F070         	movff	??_abs,?_abs
  4400  004084  C073  F071         	movff	??_abs+1,?_abs+1
  4401  004088  EF4A  F020         	goto	l2126
  4402  00408C                     l2123:
  4403                           
  4404                           ; BSR set to: 0
  4405  00408C  C070  F070         	movff	abs@a,?_abs
  4406  004090  C071  F071         	movff	abs@a+1,?_abs+1
  4407  004094                     l2126:
  4408                           
  4409                           ; BSR set to: 0
  4410  004094  0012               	return		;funcret
  4411  004096                     __end_of_abs:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function ___aomod *****************
  4415 ;; Defined at:
  4416 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  dividend        8    0[BANK0 ] long long 
  4419 ;;  divisor         8    8[BANK0 ] long long 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  sign            1   32[COMRAM] unsigned char 
  4422 ;;  counter         1   31[COMRAM] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  8    0[BANK0 ] long long 
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4432 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;Total ram usage:       18 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; Hardware stack levels required when called: 8
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_dtoa
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text18
  4447  002C4A                     __ptext18:
  4448                           	callstack 0
  4449  002C4A                     ___aomod:
  4450                           	callstack 17
  4451  002C4A  0E00               	movlw	0
  4452  002C4C  6E21               	movwf	___aomod@sign^0,c
  4453  002C4E  0100               	movlb	0	; () banked
  4454  002C50  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  4455  002C52  EF2F  F016         	goto	u4860
  4456  002C56  EF2D  F016         	goto	u4861
  4457  002C5A                     u4861:
  4458  002C5A  EF41  F016         	goto	l5956
  4459  002C5E                     u4860:
  4460  002C5E                     
  4461                           ; BSR set to: 0
  4462  002C5E  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  4463  002C60  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  4464  002C62  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  4465  002C64  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  4466  002C66  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  4467  002C68  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  4468  002C6A  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  4469  002C6C  6D60               	negf	___aomod@dividend& (0+255),b
  4470  002C6E  0E00               	movlw	0
  4471  002C70  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4472  002C72  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4473  002C74  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4474  002C76  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4475  002C78  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4476  002C7A  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4477  002C7C  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4478  002C7E                     
  4479                           ; BSR set to: 0
  4480  002C7E  0E01               	movlw	1
  4481  002C80  6E21               	movwf	___aomod@sign^0,c
  4482  002C82                     l5956:
  4483                           
  4484                           ; BSR set to: 0
  4485  002C82  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  4486  002C84  EF48  F016         	goto	u4870
  4487  002C88  EF46  F016         	goto	u4871
  4488  002C8C                     u4871:
  4489  002C8C  EF58  F016         	goto	l5960
  4490  002C90                     u4870:
  4491  002C90                     
  4492                           ; BSR set to: 0
  4493  002C90  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  4494  002C92  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  4495  002C94  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  4496  002C96  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  4497  002C98  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  4498  002C9A  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  4499  002C9C  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  4500  002C9E  6D68               	negf	___aomod@divisor& (0+255),b
  4501  002CA0  0E00               	movlw	0
  4502  002CA2  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  4503  002CA4  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  4504  002CA6  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  4505  002CA8  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  4506  002CAA  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  4507  002CAC  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  4508  002CAE  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  4509  002CB0                     l5960:
  4510                           
  4511                           ; BSR set to: 0
  4512  002CB0  5168               	movf	___aomod@divisor& (0+255),w,b
  4513  002CB2  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  4514  002CB4  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  4515  002CB6  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  4516  002CB8  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  4517  002CBA  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  4518  002CBC  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  4519  002CBE  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  4520  002CC0  B4D8               	btfsc	status,2,c
  4521  002CC2  EF65  F016         	goto	u4881
  4522  002CC6  EF67  F016         	goto	u4880
  4523  002CCA                     u4881:
  4524  002CCA  EFAF  F016         	goto	l5976
  4525  002CCE                     u4880:
  4526  002CCE                     
  4527                           ; BSR set to: 0
  4528  002CCE  0E01               	movlw	1
  4529  002CD0  6E20               	movwf	___aomod@counter^0,c
  4530  002CD2  EF75  F016         	goto	l5966
  4531  002CD6                     l5964:
  4532                           
  4533                           ; BSR set to: 0
  4534  002CD6  90D8               	bcf	status,0,c
  4535  002CD8  3768               	rlcf	___aomod@divisor& (0+255),f,b
  4536  002CDA  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  4537  002CDC  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  4538  002CDE  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  4539  002CE0  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  4540  002CE2  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  4541  002CE4  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  4542  002CE6  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  4543  002CE8  2A20               	incf	___aomod@counter^0,f,c
  4544  002CEA                     l5966:
  4545                           
  4546                           ; BSR set to: 0
  4547  002CEA  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4548  002CEC  EF7A  F016         	goto	u4891
  4549  002CF0  EF7C  F016         	goto	u4890
  4550  002CF4                     u4891:
  4551  002CF4  EF6B  F016         	goto	l5964
  4552  002CF8                     u4890:
  4553  002CF8                     l5968:
  4554                           
  4555                           ; BSR set to: 0
  4556  002CF8  5168               	movf	___aomod@divisor& (0+255),w,b
  4557  002CFA  5D60               	subwf	___aomod@dividend& (0+255),w,b
  4558  002CFC  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  4559  002CFE  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  4560  002D00  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4561  002D02  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  4562  002D04  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4563  002D06  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  4564  002D08  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4565  002D0A  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  4566  002D0C  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4567  002D0E  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  4568  002D10  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4569  002D12  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  4570  002D14  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4571  002D16  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  4572  002D18  A0D8               	btfss	status,0,c
  4573  002D1A  EF91  F016         	goto	u4901
  4574  002D1E  EF93  F016         	goto	u4900
  4575  002D22                     u4901:
  4576  002D22  EFA3  F016         	goto	l5972
  4577  002D26                     u4900:
  4578  002D26                     
  4579                           ; BSR set to: 0
  4580  002D26  5168               	movf	___aomod@divisor& (0+255),w,b
  4581  002D28  5F60               	subwf	___aomod@dividend& (0+255),f,b
  4582  002D2A  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  4583  002D2C  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4584  002D2E  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4585  002D30  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4586  002D32  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4587  002D34  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4588  002D36  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4589  002D38  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4590  002D3A  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4591  002D3C  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4592  002D3E  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4593  002D40  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4594  002D42  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4595  002D44  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4596  002D46                     l5972:
  4597                           
  4598                           ; BSR set to: 0
  4599  002D46  90D8               	bcf	status,0,c
  4600  002D48  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4601  002D4A  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4602  002D4C  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4603  002D4E  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4604  002D50  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4605  002D52  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4606  002D54  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4607  002D56  3368               	rrcf	___aomod@divisor& (0+255),f,b
  4608  002D58                     
  4609                           ; BSR set to: 0
  4610  002D58  2E20               	decfsz	___aomod@counter^0,f,c
  4611  002D5A  EF7C  F016         	goto	l5968
  4612  002D5E                     l5976:
  4613                           
  4614                           ; BSR set to: 0
  4615  002D5E  5021               	movf	___aomod@sign^0,w,c
  4616  002D60  B4D8               	btfsc	status,2,c
  4617  002D62  EFB5  F016         	goto	u4911
  4618  002D66  EFB7  F016         	goto	u4910
  4619  002D6A                     u4911:
  4620  002D6A  EFC7  F016         	goto	l5980
  4621  002D6E                     u4910:
  4622  002D6E                     
  4623                           ; BSR set to: 0
  4624  002D6E  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  4625  002D70  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  4626  002D72  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  4627  002D74  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  4628  002D76  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  4629  002D78  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  4630  002D7A  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  4631  002D7C  6D60               	negf	___aomod@dividend& (0+255),b
  4632  002D7E  0E00               	movlw	0
  4633  002D80  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4634  002D82  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4635  002D84  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4636  002D86  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4637  002D88  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4638  002D8A  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4639  002D8C  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4640  002D8E                     l5980:
  4641                           
  4642                           ; BSR set to: 0
  4643  002D8E  C060  F060         	movff	___aomod@dividend,?___aomod
  4644  002D92  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  4645  002D96  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  4646  002D9A  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  4647  002D9E  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  4648  002DA2  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  4649  002DA6  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  4650  002DAA  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  4651  002DAE                     
  4652                           ; BSR set to: 0
  4653  002DAE  0012               	return		;funcret
  4654  002DB0                     __end_of___aomod:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function ___aodiv *****************
  4658 ;; Defined at:
  4659 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  dividend        8    0[BANK0 ] long long 
  4662 ;;  divisor         8    8[BANK0 ] long long 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  quotient        8   18[BANK0 ] long long 
  4665 ;;  sign            1   17[BANK0 ] unsigned char 
  4666 ;;  counter         1   16[BANK0 ] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  8    0[BANK0 ] long long 
  4669 ;; Registers used:
  4670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4676 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;Total ram usage:       26 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 8
  4683 ;; This function calls:
  4684 ;;		Nothing
  4685 ;; This function is called by:
  4686 ;;		_dtoa
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text19
  4691  002AC0                     __ptext19:
  4692                           	callstack 0
  4693  002AC0                     ___aodiv:
  4694                           	callstack 17
  4695  002AC0  0E00               	movlw	0
  4696  002AC2  0100               	movlb	0	; () banked
  4697  002AC4  6F71               	movwf	___aodiv@sign& (0+255),b
  4698  002AC6                     
  4699                           ; BSR set to: 0
  4700  002AC6  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  4701  002AC8  EF6A  F015         	goto	u4790
  4702  002ACC  EF68  F015         	goto	u4791
  4703  002AD0                     u4791:
  4704  002AD0  EF7C  F015         	goto	l5912
  4705  002AD4                     u4790:
  4706  002AD4                     
  4707                           ; BSR set to: 0
  4708  002AD4  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4709  002AD6  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4710  002AD8  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4711  002ADA  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4712  002ADC  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4713  002ADE  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4714  002AE0  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4715  002AE2  6D68               	negf	___aodiv@divisor& (0+255),b
  4716  002AE4  0E00               	movlw	0
  4717  002AE6  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4718  002AE8  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4719  002AEA  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4720  002AEC  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4721  002AEE  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4722  002AF0  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4723  002AF2  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4724  002AF4                     
  4725                           ; BSR set to: 0
  4726  002AF4  0E01               	movlw	1
  4727  002AF6  6F71               	movwf	___aodiv@sign& (0+255),b
  4728  002AF8                     l5912:
  4729                           
  4730                           ; BSR set to: 0
  4731  002AF8  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  4732  002AFA  EF83  F015         	goto	u4800
  4733  002AFE  EF81  F015         	goto	u4801
  4734  002B02                     u4801:
  4735  002B02  EF95  F015         	goto	l5918
  4736  002B06                     u4800:
  4737  002B06                     
  4738                           ; BSR set to: 0
  4739  002B06  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4740  002B08  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4741  002B0A  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4742  002B0C  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4743  002B0E  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4744  002B10  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4745  002B12  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4746  002B14  6D60               	negf	___aodiv@dividend& (0+255),b
  4747  002B16  0E00               	movlw	0
  4748  002B18  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4749  002B1A  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4750  002B1C  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4751  002B1E  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4752  002B20  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4753  002B22  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4754  002B24  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4755  002B26                     
  4756                           ; BSR set to: 0
  4757  002B26  0E01               	movlw	1
  4758  002B28  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  4759  002B2A                     l5918:
  4760                           
  4761                           ; BSR set to: 0
  4762  002B2A  EE20  F072         	lfsr	2,___aodiv@quotient
  4763  002B2E  0E07               	movlw	7
  4764  002B30                     u4811:
  4765  002B30  6ADE               	clrf	postinc2,c
  4766  002B32  06E8               	decf	wreg,f,c
  4767  002B34  E2FD               	bc	u4811
  4768  002B36                     
  4769                           ; BSR set to: 0
  4770  002B36  5168               	movf	___aodiv@divisor& (0+255),w,b
  4771  002B38  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4772  002B3A  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4773  002B3C  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4774  002B3E  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4775  002B40  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4776  002B42  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4777  002B44  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4778  002B46  B4D8               	btfsc	status,2,c
  4779  002B48  EFA8  F015         	goto	u4821
  4780  002B4C  EFAA  F015         	goto	u4820
  4781  002B50                     u4821:
  4782  002B50  EFFC  F015         	goto	l5940
  4783  002B54                     u4820:
  4784  002B54                     
  4785                           ; BSR set to: 0
  4786  002B54  0E01               	movlw	1
  4787  002B56  6F70               	movwf	___aodiv@counter& (0+255),b
  4788  002B58  EFB8  F015         	goto	l5926
  4789  002B5C                     l5924:
  4790                           
  4791                           ; BSR set to: 0
  4792  002B5C  90D8               	bcf	status,0,c
  4793  002B5E  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  4794  002B60  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4795  002B62  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4796  002B64  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4797  002B66  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4798  002B68  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4799  002B6A  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4800  002B6C  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4801  002B6E  2B70               	incf	___aodiv@counter& (0+255),f,b
  4802  002B70                     l5926:
  4803                           
  4804                           ; BSR set to: 0
  4805  002B70  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4806  002B72  EFBD  F015         	goto	u4831
  4807  002B76  EFBF  F015         	goto	u4830
  4808  002B7A                     u4831:
  4809  002B7A  EFAE  F015         	goto	l5924
  4810  002B7E                     u4830:
  4811  002B7E                     l5928:
  4812                           
  4813                           ; BSR set to: 0
  4814  002B7E  90D8               	bcf	status,0,c
  4815  002B80  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  4816  002B82  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4817  002B84  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4818  002B86  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4819  002B88  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4820  002B8A  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4821  002B8C  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4822  002B8E  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4823  002B90                     
  4824                           ; BSR set to: 0
  4825  002B90  5168               	movf	___aodiv@divisor& (0+255),w,b
  4826  002B92  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  4827  002B94  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4828  002B96  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4829  002B98  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4830  002B9A  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4831  002B9C  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4832  002B9E  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4833  002BA0  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4834  002BA2  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4835  002BA4  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4836  002BA6  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4837  002BA8  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4838  002BAA  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4839  002BAC  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4840  002BAE  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4841  002BB0  A0D8               	btfss	status,0,c
  4842  002BB2  EFDD  F015         	goto	u4841
  4843  002BB6  EFDF  F015         	goto	u4840
  4844  002BBA                     u4841:
  4845  002BBA  EFF0  F015         	goto	l5936
  4846  002BBE                     u4840:
  4847  002BBE                     
  4848                           ; BSR set to: 0
  4849  002BBE  5168               	movf	___aodiv@divisor& (0+255),w,b
  4850  002BC0  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  4851  002BC2  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4852  002BC4  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4853  002BC6  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4854  002BC8  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4855  002BCA  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4856  002BCC  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4857  002BCE  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4858  002BD0  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4859  002BD2  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4860  002BD4  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4861  002BD6  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4862  002BD8  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4863  002BDA  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4864  002BDC  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4865  002BDE                     
  4866                           ; BSR set to: 0
  4867  002BDE  8172               	bsf	___aodiv@quotient& (0+255),0,b
  4868  002BE0                     l5936:
  4869                           
  4870                           ; BSR set to: 0
  4871  002BE0  90D8               	bcf	status,0,c
  4872  002BE2  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4873  002BE4  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4874  002BE6  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4875  002BE8  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4876  002BEA  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4877  002BEC  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4878  002BEE  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4879  002BF0  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  4880  002BF2                     
  4881                           ; BSR set to: 0
  4882  002BF2  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  4883  002BF4  EFBF  F015         	goto	l5928
  4884  002BF8                     l5940:
  4885                           
  4886                           ; BSR set to: 0
  4887  002BF8  5171               	movf	___aodiv@sign& (0+255),w,b
  4888  002BFA  B4D8               	btfsc	status,2,c
  4889  002BFC  EF02  F016         	goto	u4851
  4890  002C00  EF04  F016         	goto	u4850
  4891  002C04                     u4851:
  4892  002C04  EF14  F016         	goto	l5944
  4893  002C08                     u4850:
  4894  002C08                     
  4895                           ; BSR set to: 0
  4896  002C08  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4897  002C0A  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4898  002C0C  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4899  002C0E  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4900  002C10  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4901  002C12  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4902  002C14  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4903  002C16  6D72               	negf	___aodiv@quotient& (0+255),b
  4904  002C18  0E00               	movlw	0
  4905  002C1A  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4906  002C1C  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4907  002C1E  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4908  002C20  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4909  002C22  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4910  002C24  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4911  002C26  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4912  002C28                     l5944:
  4913                           
  4914                           ; BSR set to: 0
  4915  002C28  C072  F060         	movff	___aodiv@quotient,?___aodiv
  4916  002C2C  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  4917  002C30  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  4918  002C34  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  4919  002C38  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  4920  002C3C  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  4921  002C40  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  4922  002C44  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  4923  002C48                     
  4924                           ; BSR set to: 0
  4925  002C48  0012               	return		;funcret
  4926  002C4A                     __end_of___aodiv:
  4927                           	callstack 0
  4928                           
  4929 ;; *************** function _getBatteryVoltage *****************
  4930 ;; Defined at:
  4931 ;;		line 81 in file "main.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;		None
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;Total ram usage:        0 bytes
  4950 ;; Hardware stack levels used: 1
  4951 ;; Hardware stack levels required when called: 9
  4952 ;; This function calls:
  4953 ;;		_ADCC_GetSingleConversion
  4954 ;; This function is called by:
  4955 ;;		_loop
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text20
  4960  00458A                     __ptext20:
  4961                           	callstack 0
  4962  00458A                     _getBatteryVoltage:
  4963                           	callstack 20
  4964  00458A                     
  4965                           ;main.c: 82:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  4966  00458A  0E22               	movlw	34
  4967  00458C  EC69  F020         	call	_ADCC_GetSingleConversion
  4968  004590  C020  F0EF         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  4969  004594  C021  F0F0         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  4970  004598  0012               	return		;funcret
  4971  00459A                     __end_of_getBatteryVoltage:
  4972                           	callstack 0
  4973                           
  4974 ;; *************** function _ADCC_GetSingleConversion *****************
  4975 ;; Defined at:
  4976 ;;		line 137 in file "mcc_generated_files/adcc.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  channel         1    wreg     enum E16067
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  channel         1   33[COMRAM] enum E16067
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  2   31[COMRAM] unsigned short 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;Total ram usage:        5 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; Hardware stack levels required when called: 8
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_getBatteryVoltage
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text21
  5005  0040D2                     __ptext21:
  5006                           	callstack 0
  5007  0040D2                     _ADCC_GetSingleConversion:
  5008                           	callstack 20
  5009                           
  5010                           ;incstack = 0
  5011                           ;ADCC_GetSingleConversion@channel stored from wreg
  5012  0040D2  6E22               	movwf	ADCC_GetSingleConversion@channel^0,c
  5013  0040D4                     
  5014                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  5015  0040D4  0060  F08B  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  5016  0040DA                     
  5017                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  5018  0040DA  013E               	movlb	62	; () banked
  5019  0040DC  8FF8               	bsf	248,7,b	;volatile
  5020  0040DE                     
  5021                           ; BSR set to: 62
  5022                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  5023  0040DE  9DF8               	bcf	248,6,b	;volatile
  5024  0040E0                     
  5025                           ; BSR set to: 62
  5026                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  5027  0040E0  81F8               	bsf	248,0,b	;volatile
  5028  0040E2                     l1054:
  5029                           
  5030                           ; BSR set to: 62
  5031                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  5032  0040E2  B1F8               	btfsc	248,0,b	;volatile
  5033  0040E4  EF76  F020         	goto	u5481
  5034  0040E8  EF78  F020         	goto	u5480
  5035  0040EC                     u5481:
  5036  0040EC  EF71  F020         	goto	l1054
  5037  0040F0                     u5480:
  5038  0040F0                     
  5039                           ; BSR set to: 62
  5040                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5041  0040F0  51F0               	movf	240,w,b	;volatile
  5042  0040F2  0100               	movlb	0	; () banked
  5043  0040F4  6F61               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  5044  0040F6  6B60               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  5045  0040F8  013E               	movlb	62	; () banked
  5046  0040FA  51EF               	movf	239,w,b	;volatile
  5047  0040FC  0100               	movlb	0	; () banked
  5048  0040FE  2560               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  5049  004100  6E20               	movwf	?_ADCC_GetSingleConversion^0,c
  5050  004102  013E               	movlb	62	; () banked
  5051  004104  0E00               	movlw	0
  5052  004106  0100               	movlb	0	; () banked
  5053  004108  2161               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  5054  00410A  6E21               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  5055  00410C                     
  5056                           ; BSR set to: 0
  5057  00410C  0012               	return		;funcret
  5058  00410E                     __end_of_ADCC_GetSingleConversion:
  5059                           	callstack 0
  5060                           
  5061 ;; *************** function _calcSteering *****************
  5062 ;; Defined at:
  5063 ;;		line 174 in file "main.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;		None
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;  delta           2   19[BANK0 ] short 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;Total ram usage:        4 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; Hardware stack levels required when called: 10
  5084 ;; This function calls:
  5085 ;;		___awdiv
  5086 ;;		_setSteering
  5087 ;; This function is called by:
  5088 ;;		_loop
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text22
  5093  00292E                     __ptext22:
  5094                           	callstack 0
  5095  00292E                     _calcSteering:
  5096                           	callstack 19
  5097  00292E                     
  5098                           ;main.c: 175:     int16_t delta = (int16_t)(distLeft - distRight ) - (int16_t)((0) * 1.4
      +                          142135);
  5099  00292E  0100               	movlb	0	; () banked
  5100  002930  51E4               	movf	_distRight& (0+255),w,b	;volatile
  5101  002932  5DE6               	subwf	_distLeft& (0+255),w,b	;volatile
  5102  002934  6F73               	movwf	calcSteering@delta& (0+255),b
  5103  002936  51E5               	movf	(_distRight+1)& (0+255),w,b	;volatile
  5104  002938  59E7               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  5105  00293A  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  5106  00293C                     
  5107                           ; BSR set to: 0
  5108                           ;main.c: 176:     delta /= (2);
  5109  00293C  C073  F060         	movff	calcSteering@delta,___awdiv@dividend
  5110  002940  C074  F061         	movff	calcSteering@delta+1,___awdiv@dividend+1
  5111  002944  0E00               	movlw	0
  5112  002946  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5113  002948  0E02               	movlw	2
  5114  00294A  6F62               	movwf	___awdiv@divisor& (0+255),b
  5115  00294C  ECBA  F01B         	call	___awdiv	;wreg free
  5116  002950  C060  F073         	movff	?___awdiv,calcSteering@delta
  5117  002954  C061  F074         	movff	?___awdiv+1,calcSteering@delta+1
  5118                           
  5119                           ;main.c: 179:     switch (driveMode){
  5120  002958  EFD6  F014         	goto	l6662
  5121  00295C                     l1277:
  5122  00295C                     l6652:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;main.c: 184:             if(delta > (30)){
  5126  00295C  BF74               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  5127  00295E  EFBA  F014         	goto	u5991
  5128  002962  5174               	movf	(calcSteering@delta+1)& (0+255),w,b
  5129  002964  E109               	bnz	u5990
  5130  002966  0E1F               	movlw	31
  5131  002968  5D73               	subwf	calcSteering@delta& (0+255),w,b
  5132  00296A  A0D8               	btfss	status,0,c
  5133  00296C  EFBA  F014         	goto	u5991
  5134  002970  EFBC  F014         	goto	u5990
  5135  002974                     u5991:
  5136  002974  EFC2  F014         	goto	l6656
  5137  002978                     u5990:
  5138  002978                     
  5139                           ; BSR set to: 0
  5140                           ;main.c: 185:                 delta = (30);
  5141  002978  0E00               	movlw	0
  5142  00297A  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  5143  00297C  0E1E               	movlw	30
  5144  00297E  6F73               	movwf	calcSteering@delta& (0+255),b
  5145                           
  5146                           ;main.c: 186:             }else if(delta < -(30)){
  5147  002980  EF3A  F015         	goto	l6686
  5148  002984                     l6656:
  5149                           
  5150                           ; BSR set to: 0
  5151  002984  AF74               	btfss	(calcSteering@delta+1)& (0+255),7,b
  5152  002986  EFCE  F014         	goto	u6001
  5153  00298A  0EE2               	movlw	226
  5154  00298C  5D73               	subwf	calcSteering@delta& (0+255),w,b
  5155  00298E  0EFF               	movlw	255
  5156  002990  5974               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  5157  002992  B0D8               	btfsc	status,0,c
  5158  002994  EFCE  F014         	goto	u6001
  5159  002998  EFD0  F014         	goto	u6000
  5160  00299C                     u6001:
  5161  00299C  EFF4  F014         	goto	l1282
  5162  0029A0                     u6000:
  5163  0029A0                     
  5164                           ; BSR set to: 0
  5165                           ;main.c: 187:                 delta = -(30);
  5166  0029A0  0EFF               	movlw	255
  5167  0029A2  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  5168  0029A4  0EE2               	movlw	226
  5169  0029A6  6F73               	movwf	calcSteering@delta& (0+255),b
  5170  0029A8  EF3A  F015         	goto	l6686
  5171  0029AC                     l6662:
  5172  0029AC  0100               	movlb	0	; () banked
  5173  0029AE  51EC               	movf	_driveMode& (0+255),w,b
  5174  0029B0  6F71               	movwf	??_calcSteering& (0+255),b
  5175  0029B2  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  5176                           
  5177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5178                           ; Switch size 1, requested type "simple"
  5179                           ; Number of cases is 1, Range of values is 0 to 0
  5180                           ; switch strategies available:
  5181                           ; Name         Instructions Cycles
  5182                           ; simple_byte            4     3 (average)
  5183                           ;	Chosen strategy is simple_byte
  5184  0029B4  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  5185  0029B6  0A00               	xorlw	0	; case 0
  5186  0029B8  B4D8               	btfsc	status,2,c
  5187  0029BA  EFE1  F014         	goto	l7004
  5188  0029BE  EF3A  F015         	goto	l6686
  5189  0029C2                     l7004:
  5190                           
  5191                           ; BSR set to: 0
  5192                           ; Switch size 1, requested type "simple"
  5193                           ; Number of cases is 4, Range of values is 0 to 5
  5194                           ; switch strategies available:
  5195                           ; Name         Instructions Cycles
  5196                           ; simple_byte           13     7 (average)
  5197                           ;	Chosen strategy is simple_byte
  5198  0029C2  5171               	movf	??_calcSteering& (0+255),w,b
  5199  0029C4  0A00               	xorlw	0	; case 0
  5200  0029C6  B4D8               	btfsc	status,2,c
  5201  0029C8  EFAE  F014         	goto	l6652
  5202  0029CC  0A01               	xorlw	1	; case 1
  5203  0029CE  B4D8               	btfsc	status,2,c
  5204  0029D0  EFAE  F014         	goto	l1277
  5205  0029D4  0A05               	xorlw	5	; case 4
  5206  0029D6  B4D8               	btfsc	status,2,c
  5207  0029D8  EFAE  F014         	goto	l6652
  5208  0029DC  0A01               	xorlw	1	; case 5
  5209  0029DE  B4D8               	btfsc	status,2,c
  5210  0029E0  EFAE  F014         	goto	l6652
  5211  0029E4  EF3A  F015         	goto	l6686
  5212  0029E8                     l1282:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;main.c: 192:     switch (driveMode){
  5216  0029E8  EF3A  F015         	goto	l6686
  5217  0029EC                     l6664:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;main.c: 194:             setSteering(delta, Ratio);
  5221  0029EC  C073  F068         	movff	calcSteering@delta,setSteering@steering
  5222  0029F0  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  5223  0029F4  0E02               	movlw	2
  5224  0029F6  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5225  0029F8  ECC6  F013         	call	_setSteering	;wreg free
  5226                           
  5227                           ;main.c: 195:             break;
  5228  0029FC  EF5F  F015         	goto	l1295
  5229  002A00                     l6666:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;main.c: 197:             setSteering(delta, Front);
  5233  002A00  C073  F068         	movff	calcSteering@delta,setSteering@steering
  5234  002A04  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  5235  002A08  0E03               	movlw	3
  5236  002A0A  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5237  002A0C  ECC6  F013         	call	_setSteering	;wreg free
  5238                           
  5239                           ;main.c: 198:             break;
  5240  002A10  EF5F  F015         	goto	l1295
  5241  002A14                     l6668:
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;main.c: 200:             setSteering((40), Inverted);
  5245  002A14  0E00               	movlw	0
  5246  002A16  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  5247  002A18  0E28               	movlw	40
  5248  002A1A  6F68               	movwf	setSteering@steering& (0+255),b
  5249  002A1C  0E00               	movlw	0
  5250  002A1E  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5251  002A20  ECC6  F013         	call	_setSteering	;wreg free
  5252                           
  5253                           ;main.c: 201:             break;
  5254  002A24  EF5F  F015         	goto	l1295
  5255  002A28                     l6672:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;main.c: 206:             if(curveMode == InCurve){
  5259  002A28  0E02               	movlw	2
  5260  002A2A  19EB               	xorwf	_curveMode& (0+255),w,b
  5261  002A2C  A4D8               	btfss	status,2,c
  5262  002A2E  EF1B  F015         	goto	u6011
  5263  002A32  EF1D  F015         	goto	u6010
  5264  002A36                     u6011:
  5265  002A36  EF00  F015         	goto	l6666
  5266  002A3A                     u6010:
  5267  002A3A                     
  5268                           ; BSR set to: 0
  5269                           ;main.c: 207:                 setSteering((65), Ratio);
  5270  002A3A  0E00               	movlw	0
  5271  002A3C  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  5272  002A3E  0E41               	movlw	65
  5273  002A40  6F68               	movwf	setSteering@steering& (0+255),b
  5274  002A42  0E02               	movlw	2
  5275  002A44  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5276  002A46  ECC6  F013         	call	_setSteering	;wreg free
  5277                           
  5278                           ;main.c: 208:             } else {
  5279  002A4A  EF5F  F015         	goto	l1295
  5280  002A4E                     l6678:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;main.c: 213:             if(curveMode == InCurve){
  5284  002A4E  0E02               	movlw	2
  5285  002A50  19EB               	xorwf	_curveMode& (0+255),w,b
  5286  002A52  A4D8               	btfss	status,2,c
  5287  002A54  EF2E  F015         	goto	u6021
  5288  002A58  EF30  F015         	goto	u6020
  5289  002A5C                     u6021:
  5290  002A5C  EF00  F015         	goto	l6666
  5291  002A60                     u6020:
  5292  002A60                     
  5293                           ; BSR set to: 0
  5294                           ;main.c: 214:                 setSteering(-(65), Ratio);
  5295  002A60  0EFF               	movlw	255
  5296  002A62  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  5297  002A64  0EBF               	movlw	191
  5298  002A66  6F68               	movwf	setSteering@steering& (0+255),b
  5299  002A68  0E02               	movlw	2
  5300  002A6A  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  5301  002A6C  ECC6  F013         	call	_setSteering	;wreg free
  5302                           
  5303                           ;main.c: 215:             } else {
  5304  002A70  EF5F  F015         	goto	l1295
  5305  002A74                     l6686:
  5306                           
  5307                           ; BSR set to: 0
  5308  002A74  51EC               	movf	_driveMode& (0+255),w,b
  5309  002A76  6F71               	movwf	??_calcSteering& (0+255),b
  5310  002A78  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  5311                           
  5312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5313                           ; Switch size 1, requested type "simple"
  5314                           ; Number of cases is 1, Range of values is 0 to 0
  5315                           ; switch strategies available:
  5316                           ; Name         Instructions Cycles
  5317                           ; simple_byte            4     3 (average)
  5318                           ;	Chosen strategy is simple_byte
  5319  002A7A  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  5320  002A7C  0A00               	xorlw	0	; case 0
  5321  002A7E  B4D8               	btfsc	status,2,c
  5322  002A80  EF44  F015         	goto	l7006
  5323  002A84  EF5F  F015         	goto	l1295
  5324  002A88                     l7006:
  5325                           
  5326                           ; BSR set to: 0
  5327                           ; Switch size 1, requested type "simple"
  5328                           ; Number of cases is 6, Range of values is 0 to 5
  5329                           ; switch strategies available:
  5330                           ; Name         Instructions Cycles
  5331                           ; simple_byte           19    10 (average)
  5332                           ;	Chosen strategy is simple_byte
  5333  002A88  5171               	movf	??_calcSteering& (0+255),w,b
  5334  002A8A  0A00               	xorlw	0	; case 0
  5335  002A8C  B4D8               	btfsc	status,2,c
  5336  002A8E  EF00  F015         	goto	l6666
  5337  002A92  0A01               	xorlw	1	; case 1
  5338  002A94  B4D8               	btfsc	status,2,c
  5339  002A96  EFF6  F014         	goto	l6664
  5340  002A9A  0A03               	xorlw	3	; case 2
  5341  002A9C  B4D8               	btfsc	status,2,c
  5342  002A9E  EF0A  F015         	goto	l6668
  5343  002AA2  0A01               	xorlw	1	; case 3
  5344  002AA4  B4D8               	btfsc	status,2,c
  5345  002AA6  EF0A  F015         	goto	l6668
  5346  002AAA  0A07               	xorlw	7	; case 4
  5347  002AAC  B4D8               	btfsc	status,2,c
  5348  002AAE  EF14  F015         	goto	l6672
  5349  002AB2  0A01               	xorlw	1	; case 5
  5350  002AB4  B4D8               	btfsc	status,2,c
  5351  002AB6  EF27  F015         	goto	l6678
  5352  002ABA  EF5F  F015         	goto	l1295
  5353  002ABE                     l1295:
  5354  002ABE  0012               	return		;funcret
  5355  002AC0                     __end_of_calcSteering:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _setSteering *****************
  5359 ;; Defined at:
  5360 ;;		line 225 in file "main.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  steering        2    8[BANK0 ] short 
  5363 ;;  steeringMode    1   10[BANK0 ] enum E17299
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  steeringB       2   15[BANK0 ] short 
  5366 ;;  steeringF       2   13[BANK0 ] short 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5376 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;Total ram usage:        9 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 9
  5383 ;; This function calls:
  5384 ;;		_PWM5_LoadDutyValue
  5385 ;;		_PWM6_LoadDutyValue
  5386 ;;		___awdiv
  5387 ;; This function is called by:
  5388 ;;		_loop
  5389 ;;		_calcSteering
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text23
  5394  00278C                     __ptext23:
  5395                           	callstack 0
  5396  00278C                     _setSteering:
  5397                           	callstack 20
  5398  00278C                     
  5399                           ;main.c: 226:     int16_t steeringF = 0, steeringB = 0;
  5400  00278C  0E00               	movlw	0
  5401  00278E  0100               	movlb	0	; () banked
  5402  002790  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  5403  002792  0E00               	movlw	0
  5404  002794  6F6D               	movwf	setSteering@steeringF& (0+255),b
  5405  002796  0E00               	movlw	0
  5406  002798  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5407  00279A  0E00               	movlw	0
  5408  00279C  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5409                           
  5410                           ;main.c: 227:     switch(steeringMode){
  5411  00279E  EF17  F014         	goto	l6326
  5412  0027A2                     l1299:
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;main.c: 229:             steeringF = (+steering);
  5416  0027A2  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  5417  0027A6  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  5418                           
  5419                           ;main.c: 230:             steeringB = -steering;
  5420  0027AA  C068  F06B         	movff	setSteering@steering,??_setSteering
  5421  0027AE  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  5422  0027B2  1F6B               	comf	??_setSteering& (0+255),f,b
  5423  0027B4  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  5424  0027B6  4B6B               	infsnz	??_setSteering& (0+255),f,b
  5425  0027B8  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  5426  0027BA  C06B  F06F         	movff	??_setSteering,setSteering@steeringB
  5427  0027BE  C06C  F070         	movff	??_setSteering+1,setSteering@steeringB+1
  5428                           
  5429                           ;main.c: 231:             break;
  5430  0027C2  EF38  F014         	goto	l6328
  5431  0027C6                     l1301:
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;main.c: 233:             steeringF = (+steering);
  5435  0027C6  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  5436  0027CA  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  5437                           
  5438                           ;main.c: 234:             steeringB = (+steering);
  5439  0027CE  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  5440  0027D2  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  5441                           
  5442                           ;main.c: 235:             break;
  5443  0027D6  EF38  F014         	goto	l6328
  5444  0027DA                     l1302:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;main.c: 237:             steeringF = (+steering);
  5448  0027DA  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  5449  0027DE  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  5450  0027E2                     
  5451                           ; BSR set to: 0
  5452                           ;main.c: 238:             steeringB = (-steering / (3));
  5453  0027E2  C068  F060         	movff	setSteering@steering,___awdiv@dividend
  5454  0027E6  C069  F061         	movff	setSteering@steering+1,___awdiv@dividend+1
  5455  0027EA  0EFF               	movlw	255
  5456  0027EC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5457  0027EE  0EFD               	movlw	253
  5458  0027F0  6F62               	movwf	___awdiv@divisor& (0+255),b
  5459  0027F2  ECBA  F01B         	call	___awdiv	;wreg free
  5460  0027F6  C060  F06F         	movff	?___awdiv,setSteering@steeringB
  5461  0027FA  C061  F070         	movff	?___awdiv+1,setSteering@steeringB+1
  5462                           
  5463                           ;main.c: 239:             break;
  5464  0027FE  EF38  F014         	goto	l6328
  5465  002802                     l1303:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;main.c: 241:             steeringF = (+steering);
  5469  002802  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  5470  002806  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  5471                           
  5472                           ;main.c: 243:             break;
  5473  00280A  EF38  F014         	goto	l6328
  5474  00280E                     l1304:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;main.c: 246:             steeringB = (+steering);
  5478  00280E  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  5479  002812  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  5480                           
  5481                           ;main.c: 247:             break;
  5482  002816  EF38  F014         	goto	l6328
  5483  00281A                     l6322:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;main.c: 249:             steeringF = 0;
  5487  00281A  0E00               	movlw	0
  5488  00281C  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  5489  00281E  0E00               	movlw	0
  5490  002820  6F6D               	movwf	setSteering@steeringF& (0+255),b
  5491                           
  5492                           ;main.c: 250:             steeringB = 0;
  5493  002822  0E00               	movlw	0
  5494  002824  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5495  002826  0E00               	movlw	0
  5496  002828  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5497                           
  5498                           ;main.c: 251:             break;
  5499  00282A  EF38  F014         	goto	l6328
  5500  00282E                     l6326:
  5501                           
  5502                           ; BSR set to: 0
  5503  00282E  516A               	movf	setSteering@steeringMode& (0+255),w,b
  5504  002830  6F6B               	movwf	??_setSteering& (0+255),b
  5505  002832  6B6C               	clrf	(??_setSteering+1)& (0+255),b
  5506                           
  5507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5508                           ; Switch size 1, requested type "simple"
  5509                           ; Number of cases is 1, Range of values is 0 to 0
  5510                           ; switch strategies available:
  5511                           ; Name         Instructions Cycles
  5512                           ; simple_byte            4     3 (average)
  5513                           ;	Chosen strategy is simple_byte
  5514  002834  516C               	movf	(??_setSteering+1)& (0+255),w,b
  5515  002836  0A00               	xorlw	0	; case 0
  5516  002838  B4D8               	btfsc	status,2,c
  5517  00283A  EF21  F014         	goto	l7008
  5518  00283E  EF0D  F014         	goto	l6322
  5519  002842                     l7008:
  5520                           
  5521                           ; BSR set to: 0
  5522                           ; Switch size 1, requested type "simple"
  5523                           ; Number of cases is 5, Range of values is 0 to 4
  5524                           ; switch strategies available:
  5525                           ; Name         Instructions Cycles
  5526                           ; simple_byte           16     9 (average)
  5527                           ;	Chosen strategy is simple_byte
  5528  002842  516B               	movf	??_setSteering& (0+255),w,b
  5529  002844  0A00               	xorlw	0	; case 0
  5530  002846  B4D8               	btfsc	status,2,c
  5531  002848  EFD1  F013         	goto	l1299
  5532  00284C  0A01               	xorlw	1	; case 1
  5533  00284E  B4D8               	btfsc	status,2,c
  5534  002850  EFE3  F013         	goto	l1301
  5535  002854  0A03               	xorlw	3	; case 2
  5536  002856  B4D8               	btfsc	status,2,c
  5537  002858  EFED  F013         	goto	l1302
  5538  00285C  0A01               	xorlw	1	; case 3
  5539  00285E  B4D8               	btfsc	status,2,c
  5540  002860  EF01  F014         	goto	l1303
  5541  002864  0A07               	xorlw	7	; case 4
  5542  002866  B4D8               	btfsc	status,2,c
  5543  002868  EF07  F014         	goto	l1304
  5544  00286C  EF0D  F014         	goto	l6322
  5545  002870                     l6328:
  5546                           
  5547                           ;main.c: 254:     if(steeringF > ((65))){
  5548  002870  0100               	movlb	0	; () banked
  5549  002872  BF6E               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  5550  002874  EF45  F014         	goto	u5491
  5551  002878  516E               	movf	(setSteering@steeringF+1)& (0+255),w,b
  5552  00287A  E109               	bnz	u5490
  5553  00287C  0E42               	movlw	66
  5554  00287E  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  5555  002880  A0D8               	btfss	status,0,c
  5556  002882  EF45  F014         	goto	u5491
  5557  002886  EF47  F014         	goto	u5490
  5558  00288A                     u5491:
  5559  00288A  EF4D  F014         	goto	l6332
  5560  00288E                     u5490:
  5561  00288E                     
  5562                           ; BSR set to: 0
  5563                           ;main.c: 255:         steeringF = ((65));
  5564  00288E  0E00               	movlw	0
  5565  002890  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  5566  002892  0E41               	movlw	65
  5567  002894  6F6D               	movwf	setSteering@steeringF& (0+255),b
  5568                           
  5569                           ;main.c: 256:     } else if(steeringF < (-(65))){
  5570  002896  EF5F  F014         	goto	l6336
  5571  00289A                     l6332:
  5572                           
  5573                           ; BSR set to: 0
  5574  00289A  AF6E               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  5575  00289C  EF59  F014         	goto	u5501
  5576  0028A0  0EBF               	movlw	191
  5577  0028A2  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  5578  0028A4  0EFF               	movlw	255
  5579  0028A6  596E               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  5580  0028A8  B0D8               	btfsc	status,0,c
  5581  0028AA  EF59  F014         	goto	u5501
  5582  0028AE  EF5B  F014         	goto	u5500
  5583  0028B2                     u5501:
  5584  0028B2  EF5F  F014         	goto	l6336
  5585  0028B6                     u5500:
  5586  0028B6                     
  5587                           ; BSR set to: 0
  5588                           ;main.c: 257:         steeringF = (-(65));
  5589  0028B6  0EFF               	movlw	255
  5590  0028B8  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  5591  0028BA  0EBF               	movlw	191
  5592  0028BC  6F6D               	movwf	setSteering@steeringF& (0+255),b
  5593  0028BE                     l6336:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;main.c: 260:     if(steeringB > ((40))){
  5597  0028BE  BF70               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  5598  0028C0  EF6B  F014         	goto	u5511
  5599  0028C4  5170               	movf	(setSteering@steeringB+1)& (0+255),w,b
  5600  0028C6  E109               	bnz	u5510
  5601  0028C8  0E29               	movlw	41
  5602  0028CA  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  5603  0028CC  A0D8               	btfss	status,0,c
  5604  0028CE  EF6B  F014         	goto	u5511
  5605  0028D2  EF6D  F014         	goto	u5510
  5606  0028D6                     u5511:
  5607  0028D6  EF73  F014         	goto	l6340
  5608  0028DA                     u5510:
  5609  0028DA                     
  5610                           ; BSR set to: 0
  5611                           ;main.c: 261:         steeringB = ((40));
  5612  0028DA  0E00               	movlw	0
  5613  0028DC  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5614  0028DE  0E28               	movlw	40
  5615  0028E0  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5616                           
  5617                           ;main.c: 262:     } else if(steeringB < (-(40))){
  5618  0028E2  EF85  F014         	goto	l6344
  5619  0028E6                     l6340:
  5620                           
  5621                           ; BSR set to: 0
  5622  0028E6  AF70               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  5623  0028E8  EF7F  F014         	goto	u5521
  5624  0028EC  0ED8               	movlw	216
  5625  0028EE  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  5626  0028F0  0EFF               	movlw	255
  5627  0028F2  5970               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  5628  0028F4  B0D8               	btfsc	status,0,c
  5629  0028F6  EF7F  F014         	goto	u5521
  5630  0028FA  EF81  F014         	goto	u5520
  5631  0028FE                     u5521:
  5632  0028FE  EF85  F014         	goto	l6344
  5633  002902                     u5520:
  5634  002902                     
  5635                           ; BSR set to: 0
  5636                           ;main.c: 263:         steeringB = (-(40));
  5637  002902  0EFF               	movlw	255
  5638  002904  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  5639  002906  0ED8               	movlw	216
  5640  002908  6F6F               	movwf	setSteering@steeringB& (0+255),b
  5641  00290A                     l6344:
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;main.c: 267:     PWM6_LoadDutyValue((uint16_t)((352) + steeringF));
  5645  00290A  0E60               	movlw	96
  5646  00290C  256D               	addwf	setSteering@steeringF& (0+255),w,b
  5647  00290E  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  5648  002910  0E01               	movlw	1
  5649  002912  216E               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  5650  002914  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  5651  002916  ECBE  F020         	call	_PWM6_LoadDutyValue	;wreg free
  5652  00291A                     
  5653                           ;main.c: 268:     PWM5_LoadDutyValue((uint16_t)((357) + steeringB));
  5654  00291A  0E65               	movlw	101
  5655  00291C  0100               	movlb	0	; () banked
  5656  00291E  256F               	addwf	setSteering@steeringB& (0+255),w,b
  5657  002920  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  5658  002922  0E01               	movlw	1
  5659  002924  2170               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  5660  002926  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  5661  002928  ECD9  F020         	call	_PWM5_LoadDutyValue	;wreg free
  5662  00292C  0012               	return		;funcret
  5663  00292E                     __end_of_setSteering:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _PWM6_LoadDutyValue *****************
  5667 ;; Defined at:
  5668 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  dutyValue       2   31[COMRAM] unsigned short 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;Total ram usage:        4 bytes
  5687 ;; Hardware stack levels used: 1
  5688 ;; Hardware stack levels required when called: 8
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_setSteering
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text24
  5697  00417C                     __ptext24:
  5698                           	callstack 0
  5699  00417C                     _PWM6_LoadDutyValue:
  5700                           	callstack 20
  5701  00417C                     
  5702                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5703  00417C  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5704  004180  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  5705  004184  0100               	movlb	0	; () banked
  5706  004186  90D8               	bcf	status,0,c
  5707  004188  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5708  00418A  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5709  00418C  90D8               	bcf	status,0,c
  5710  00418E  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5711  004190  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5712  004192  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  5713  004194  6E69               	movwf	105,c	;volatile
  5714                           
  5715                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  5716  004196  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  5717  00419A  0E03               	movlw	3
  5718  00419C  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
  5719  00419E  0E06               	movlw	6
  5720  0041A0  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
  5721  0041A2                     u5345:
  5722  0041A2  90D8               	bcf	status,0,c
  5723  0041A4  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
  5724  0041A6  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  5725  0041A8  EFD1  F020         	goto	u5345
  5726  0041AC  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  5727  0041AE  6E68               	movwf	104,c	;volatile
  5728  0041B0                     
  5729                           ; BSR set to: 0
  5730  0041B0  0012               	return		;funcret
  5731  0041B2                     __end_of_PWM6_LoadDutyValue:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function _PWM5_LoadDutyValue *****************
  5735 ;; Defined at:
  5736 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  dutyValue       2   31[COMRAM] unsigned short 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      void 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;Total ram usage:        4 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 8
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_setSteering
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text25
  5765  0041B2                     __ptext25:
  5766                           	callstack 0
  5767  0041B2                     _PWM5_LoadDutyValue:
  5768                           	callstack 20
  5769  0041B2                     
  5770                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5771  0041B2  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5772  0041B6  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  5773  0041BA  0100               	movlb	0	; () banked
  5774  0041BC  90D8               	bcf	status,0,c
  5775  0041BE  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5776  0041C0  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5777  0041C2  90D8               	bcf	status,0,c
  5778  0041C4  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5779  0041C6  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5780  0041C8  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  5781  0041CA  6E6D               	movwf	109,c	;volatile
  5782                           
  5783                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  5784  0041CC  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  5785  0041D0  0E03               	movlw	3
  5786  0041D2  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
  5787  0041D4  0E06               	movlw	6
  5788  0041D6  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
  5789  0041D8                     u5335:
  5790  0041D8  90D8               	bcf	status,0,c
  5791  0041DA  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
  5792  0041DC  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  5793  0041DE  EFEC  F020         	goto	u5335
  5794  0041E2  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  5795  0041E4  6E6C               	movwf	108,c	;volatile
  5796  0041E6                     
  5797                           ; BSR set to: 0
  5798  0041E6  0012               	return		;funcret
  5799  0041E8                     __end_of_PWM5_LoadDutyValue:
  5800                           	callstack 0
  5801                           
  5802 ;; *************** function _calcSpeed *****************
  5803 ;; Defined at:
  5804 ;;		line 271 in file "main.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  speed           2   75[BANK0 ] short 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;Total ram usage:        6 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 9
  5825 ;; This function calls:
  5826 ;;		___fladd
  5827 ;;		___flmul
  5828 ;;		___fltol
  5829 ;;		___xxtofl
  5830 ;; This function is called by:
  5831 ;;		_loop
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text26
  5836  0021B0                     __ptext26:
  5837                           	callstack 0
  5838  0021B0                     _calcSpeed:
  5839                           	callstack 20
  5840  0021B0                     
  5841                           ;main.c: 272:     int16_t speed = 0;
  5842  0021B0  0E00               	movlw	0
  5843  0021B2  0100               	movlb	0	; () banked
  5844  0021B4  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5845  0021B6  0E00               	movlw	0
  5846  0021B8  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5847                           
  5848                           ;main.c: 274:     switch (driveMode){
  5849  0021BA  EF98  F011         	goto	l6740
  5850  0021BE                     l6702:
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;main.c: 276:             if(distFront > (40)) {
  5854  0021BE  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5855  0021C0  E109               	bnz	u6030
  5856  0021C2  0E29               	movlw	41
  5857  0021C4  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  5858  0021C6  A0D8               	btfss	status,0,c
  5859  0021C8  EFE8  F010         	goto	u6031
  5860  0021CC  EFEA  F010         	goto	u6030
  5861  0021D0                     u6031:
  5862  0021D0  EFEC  F010         	goto	l6706
  5863  0021D4                     u6030:
  5864  0021D4                     
  5865                           ; BSR set to: 0
  5866                           ;main.c: 277:                 driveMode = Straight;
  5867  0021D4  0E00               	movlw	0
  5868  0021D6  6FEC               	movwf	_driveMode& (0+255),b
  5869  0021D8                     l6706:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;main.c: 280:             if(setSpeed > 0){
  5873  0021D8  BFDF               	btfsc	(_setSpeed+1)& (0+255),7,b
  5874  0021DA  EFF7  F010         	goto	u6041
  5875  0021DE  51DF               	movf	(_setSpeed+1)& (0+255),w,b
  5876  0021E0  E108               	bnz	u6040
  5877  0021E2  05DE               	decf	_setSpeed& (0+255),w,b
  5878  0021E4  A0D8               	btfss	status,0,c
  5879  0021E6  EFF7  F010         	goto	u6041
  5880  0021EA  EFF9  F010         	goto	u6040
  5881  0021EE                     u6041:
  5882  0021EE  EF03  F011         	goto	l6712
  5883  0021F2                     u6040:
  5884  0021F2                     
  5885                           ; BSR set to: 0
  5886                           ;main.c: 281:                 speed = setSpeed;
  5887  0021F2  C0DE  F0AB         	movff	_setSpeed,calcSpeed@speed
  5888  0021F6  C0DF  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5889  0021FA                     
  5890                           ; BSR set to: 0
  5891                           ;main.c: 282:                 speed -= 2;
  5892  0021FA  0EFE               	movlw	254
  5893  0021FC  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5894  0021FE  0EFF               	movlw	255
  5895  002200  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5896                           
  5897                           ;main.c: 283:             }else if( setSpeed > 0 && distFront < (20)){
  5898  002202  EFBD  F011         	goto	l6742
  5899  002206                     l6712:
  5900                           
  5901                           ; BSR set to: 0
  5902  002206  BFDF               	btfsc	(_setSpeed+1)& (0+255),7,b
  5903  002208  EF0E  F011         	goto	u6051
  5904  00220C  51DF               	movf	(_setSpeed+1)& (0+255),w,b
  5905  00220E  E108               	bnz	u6050
  5906  002210  05DE               	decf	_setSpeed& (0+255),w,b
  5907  002212  A0D8               	btfss	status,0,c
  5908  002214  EF0E  F011         	goto	u6051
  5909  002218  EF10  F011         	goto	u6050
  5910  00221C                     u6051:
  5911  00221C  EFBD  F011         	goto	l6742
  5912  002220                     u6050:
  5913  002220                     
  5914                           ; BSR set to: 0
  5915  002220  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5916  002222  E107               	bnz	u6061
  5917  002224  0E14               	movlw	20
  5918  002226  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  5919  002228  B0D8               	btfsc	status,0,c
  5920  00222A  EF19  F011         	goto	u6061
  5921  00222E  EF1B  F011         	goto	u6060
  5922  002232                     u6061:
  5923  002232  EFBD  F011         	goto	l6742
  5924  002236                     u6060:
  5925  002236                     
  5926                           ; BSR set to: 0
  5927                           ;main.c: 284:                 speed = setSpeed;
  5928  002236  C0DE  F0AB         	movff	_setSpeed,calcSpeed@speed
  5929  00223A  C0DF  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5930  00223E                     
  5931                           ; BSR set to: 0
  5932                           ;main.c: 285:                 speed -= 4;
  5933  00223E  0EFC               	movlw	252
  5934  002240  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5935  002242  0EFF               	movlw	255
  5936  002244  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5937  002246  EFBD  F011         	goto	l6742
  5938  00224A                     l6720:
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;main.c: 289:             if(distFront < (40)) {
  5942  00224A  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5943  00224C  E107               	bnz	u6071
  5944  00224E  0E28               	movlw	40
  5945  002250  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  5946  002252  B0D8               	btfsc	status,0,c
  5947  002254  EF2E  F011         	goto	u6071
  5948  002258  EF30  F011         	goto	u6070
  5949  00225C                     u6071:
  5950  00225C  EF32  F011         	goto	l6724
  5951  002260                     u6070:
  5952  002260                     
  5953                           ; BSR set to: 0
  5954                           ;main.c: 290:                 driveMode = Brake;
  5955  002260  0E01               	movlw	1
  5956  002262  6FEC               	movwf	_driveMode& (0+255),b
  5957  002264                     l6724:
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;main.c: 293:             if(distFront > (100)){
  5961  002264  51EE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5962  002266  E109               	bnz	u6080
  5963  002268  0E65               	movlw	101
  5964  00226A  5DED               	subwf	_distFront& (0+255),w,b	;volatile
  5965  00226C  A0D8               	btfss	status,0,c
  5966  00226E  EF3B  F011         	goto	u6081
  5967  002272  EF3D  F011         	goto	u6080
  5968  002276                     u6081:
  5969  002276  EF86  F011         	goto	l6728
  5970  00227A                     u6080:
  5971  00227A                     
  5972                           ; BSR set to: 0
  5973                           ;main.c: 294:                 speed = (int16_t)((0.8) * (distFront - (100)) + (200));
  5974  00227A  0E00               	movlw	0
  5975  00227C  6F93               	movwf	___fladd@a& (0+255),b
  5976  00227E  0E00               	movlw	0
  5977  002280  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5978  002282  0E48               	movlw	72
  5979  002284  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5980  002286  0E43               	movlw	67
  5981  002288  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5982  00228A  0ECD               	movlw	205
  5983  00228C  6F7A               	movwf	___flmul@a& (0+255),b
  5984  00228E  0ECC               	movlw	204
  5985  002290  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  5986  002292  0E4C               	movlw	76
  5987  002294  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  5988  002296  0E3F               	movlw	63
  5989  002298  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  5990  00229A  0E9C               	movlw	156
  5991  00229C  6FA7               	movwf	??_calcSpeed& (0+255),b
  5992  00229E  0EFF               	movlw	255
  5993  0022A0  6FA8               	movwf	(??_calcSpeed+1)& (0+255),b
  5994  0022A2  C0ED  F0A9         	movff	_distFront,??_calcSpeed+2	;volatile
  5995  0022A6  C0EE  F0AA         	movff	_distFront+1,??_calcSpeed+3	;volatile
  5996  0022AA  51A7               	movf	??_calcSpeed& (0+255),w,b
  5997  0022AC  27A9               	addwf	(??_calcSpeed+2)& (0+255),f,b
  5998  0022AE  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  5999  0022B0  23AA               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  6000  0022B2  C0A9  F068         	movff	??_calcSpeed+2,___xxtofl@val
  6001  0022B6  C0AA  F069         	movff	??_calcSpeed+3,___xxtofl@val+1
  6002  0022BA  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  6003  0022BC  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  6004  0022BE  0E00               	movlw	0
  6005  0022C0  ECEA  F012         	call	___xxtofl
  6006  0022C4  C068  F076         	movff	?___xxtofl,___flmul@b
  6007  0022C8  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  6008  0022CC  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  6009  0022D0  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  6010  0022D4  EC9B  F00A         	call	___flmul	;wreg free
  6011  0022D8  C076  F08F         	movff	?___flmul,___fladd@b
  6012  0022DC  C077  F090         	movff	?___flmul+1,___fladd@b+1
  6013  0022E0  C078  F091         	movff	?___flmul+2,___fladd@b+2
  6014  0022E4  C079  F092         	movff	?___flmul+3,___fladd@b+3
  6015  0022E8  EC3A  F008         	call	___fladd	;wreg free
  6016  0022EC  C08F  F09F         	movff	?___fladd,___fltol@f1
  6017  0022F0  C090  F0A0         	movff	?___fladd+1,___fltol@f1+1
  6018  0022F4  C091  F0A1         	movff	?___fladd+2,___fltol@f1+2
  6019  0022F8  C092  F0A2         	movff	?___fladd+3,___fltol@f1+3
  6020  0022FC  EC95  F018         	call	___fltol	;wreg free
  6021  002300  C09F  F0AB         	movff	?___fltol,calcSpeed@speed
  6022  002304  C0A0  F0AC         	movff	?___fltol+1,calcSpeed@speed+1
  6023                           
  6024                           ;main.c: 295:             }else{
  6025  002308  EFBD  F011         	goto	l6742
  6026  00230C                     l6728:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;main.c: 296:                 speed = (200);
  6030  00230C  0E00               	movlw	0
  6031  00230E  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6032  002310  0EC8               	movlw	200
  6033  002312  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6034  002314  EFBD  F011         	goto	l6742
  6035  002318                     l6730:
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;main.c: 302:             speed = (-150);
  6039  002318  0EFF               	movlw	255
  6040  00231A  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6041  00231C  0E6A               	movlw	106
  6042  00231E  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6043                           
  6044                           ;main.c: 303:             break;
  6045  002320  EFBD  F011         	goto	l6742
  6046  002324                     l6734:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;main.c: 308:             speed = (150);
  6050  002324  0E00               	movlw	0
  6051  002326  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6052  002328  0E96               	movlw	150
  6053  00232A  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6054                           
  6055                           ;main.c: 309:             break;
  6056  00232C  EFBD  F011         	goto	l6742
  6057  002330                     l6740:
  6058                           
  6059                           ; BSR set to: 0
  6060  002330  51EC               	movf	_driveMode& (0+255),w,b
  6061  002332  6FA7               	movwf	??_calcSpeed& (0+255),b
  6062  002334  6BA8               	clrf	(??_calcSpeed+1)& (0+255),b
  6063                           
  6064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6065                           ; Switch size 1, requested type "simple"
  6066                           ; Number of cases is 1, Range of values is 0 to 0
  6067                           ; switch strategies available:
  6068                           ; Name         Instructions Cycles
  6069                           ; simple_byte            4     3 (average)
  6070                           ;	Chosen strategy is simple_byte
  6071  002336  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  6072  002338  0A00               	xorlw	0	; case 0
  6073  00233A  B4D8               	btfsc	status,2,c
  6074  00233C  EFA2  F011         	goto	l7010
  6075  002340  EFBD  F011         	goto	l6742
  6076  002344                     l7010:
  6077                           
  6078                           ; BSR set to: 0
  6079                           ; Switch size 1, requested type "simple"
  6080                           ; Number of cases is 6, Range of values is 0 to 5
  6081                           ; switch strategies available:
  6082                           ; Name         Instructions Cycles
  6083                           ; simple_byte           19    10 (average)
  6084                           ;	Chosen strategy is simple_byte
  6085  002344  51A7               	movf	??_calcSpeed& (0+255),w,b
  6086  002346  0A00               	xorlw	0	; case 0
  6087  002348  B4D8               	btfsc	status,2,c
  6088  00234A  EF25  F011         	goto	l6720
  6089  00234E  0A01               	xorlw	1	; case 1
  6090  002350  B4D8               	btfsc	status,2,c
  6091  002352  EFDF  F010         	goto	l6702
  6092  002356  0A03               	xorlw	3	; case 2
  6093  002358  B4D8               	btfsc	status,2,c
  6094  00235A  EF8C  F011         	goto	l6730
  6095  00235E  0A01               	xorlw	1	; case 3
  6096  002360  B4D8               	btfsc	status,2,c
  6097  002362  EF8C  F011         	goto	l6730
  6098  002366  0A07               	xorlw	7	; case 4
  6099  002368  B4D8               	btfsc	status,2,c
  6100  00236A  EF92  F011         	goto	l6734
  6101  00236E  0A01               	xorlw	1	; case 5
  6102  002370  B4D8               	btfsc	status,2,c
  6103  002372  EF92  F011         	goto	l6734
  6104  002376  EFBD  F011         	goto	l6742
  6105  00237A                     l6742:
  6106                           
  6107                           ;main.c: 315:     if(speed > (450)){
  6108  00237A  0100               	movlb	0	; () banked
  6109  00237C  BFAC               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  6110  00237E  EFCA  F011         	goto	u6091
  6111  002382  0EC3               	movlw	195
  6112  002384  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  6113  002386  0E01               	movlw	1
  6114  002388  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  6115  00238A  A0D8               	btfss	status,0,c
  6116  00238C  EFCA  F011         	goto	u6091
  6117  002390  EFCC  F011         	goto	u6090
  6118  002394                     u6091:
  6119  002394  EFD0  F011         	goto	l6746
  6120  002398                     u6090:
  6121  002398                     
  6122                           ; BSR set to: 0
  6123                           ;main.c: 316:         speed = (450);
  6124  002398  0E01               	movlw	1
  6125  00239A  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6126  00239C  0EC2               	movlw	194
  6127  00239E  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6128  0023A0                     l6746:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;main.c: 318:     if(speed < (-200)){
  6132  0023A0  AFAC               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  6133  0023A2  EFDC  F011         	goto	u6101
  6134  0023A6  0E38               	movlw	56
  6135  0023A8  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  6136  0023AA  0EFF               	movlw	255
  6137  0023AC  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  6138  0023AE  B0D8               	btfsc	status,0,c
  6139  0023B0  EFDC  F011         	goto	u6101
  6140  0023B4  EFDE  F011         	goto	u6100
  6141  0023B8                     u6101:
  6142  0023B8  EFE2  F011         	goto	l6750
  6143  0023BC                     u6100:
  6144  0023BC                     
  6145                           ; BSR set to: 0
  6146                           ;main.c: 319:         speed = (-200);
  6147  0023BC  0EFF               	movlw	255
  6148  0023BE  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  6149  0023C0  0E38               	movlw	56
  6150  0023C2  6FAB               	movwf	calcSpeed@speed& (0+255),b
  6151  0023C4                     l6750:
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;main.c: 321:     setSpeed = speed;
  6155  0023C4  C0AB  F0DE         	movff	calcSpeed@speed,_setSpeed
  6156  0023C8  C0AC  F0DF         	movff	calcSpeed@speed+1,_setSpeed+1
  6157  0023CC                     
  6158                           ; BSR set to: 0
  6159  0023CC  0012               	return		;funcret
  6160  0023CE                     __end_of_calcSpeed:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function ___fladd *****************
  6164 ;; Defined at:
  6165 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  b               4   47[BANK0 ] void 
  6168 ;;  a               4   51[BANK0 ] void 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  grs             1   62[BANK0 ] unsigned char 
  6171 ;;  bexp            1   61[BANK0 ] unsigned char 
  6172 ;;  aexp            1   60[BANK0 ] unsigned char 
  6173 ;;  signs           1   59[BANK0 ] unsigned char 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  4   47[BANK0 ] unsigned char 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6183 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;Total ram usage:       16 bytes
  6188 ;; Hardware stack levels used: 1
  6189 ;; Hardware stack levels required when called: 8
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		_calcSpeed
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text27
  6198  001074                     __ptext27:
  6199                           	callstack 0
  6200  001074                     ___fladd:
  6201                           	callstack 20
  6202  001074  0100               	movlb	0	; () banked
  6203  001076  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6204  001078  0B80               	andlw	128
  6205  00107A  6F9B               	movwf	___fladd@signs& (0+255),b
  6206  00107C  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6207  00107E  2592               	addwf	(___fladd@b+3)& (0+255),w,b
  6208  001080  6F9D               	movwf	___fladd@bexp& (0+255),b
  6209  001082                     
  6210                           ; BSR set to: 0
  6211  001082  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  6212  001084  EF46  F008         	goto	u3281
  6213  001088  EF48  F008         	goto	u3280
  6214  00108C                     u3281:
  6215  00108C  EF49  F008         	goto	l4738
  6216  001090                     u3280:
  6217  001090                     
  6218                           ; BSR set to: 0
  6219  001090  819D               	bsf	___fladd@bexp& (0+255),0,b
  6220  001092                     l4738:
  6221                           
  6222                           ; BSR set to: 0
  6223  001092  519D               	movf	___fladd@bexp& (0+255),w,b
  6224  001094  B4D8               	btfsc	status,2,c
  6225  001096  EF4F  F008         	goto	u3291
  6226  00109A  EF51  F008         	goto	u3290
  6227  00109E                     u3291:
  6228  00109E  EF66  F008         	goto	l4748
  6229  0010A2                     u3290:
  6230  0010A2                     
  6231                           ; BSR set to: 0
  6232  0010A2  299D               	incf	___fladd@bexp& (0+255),w,b
  6233  0010A4  A4D8               	btfss	status,2,c
  6234  0010A6  EF57  F008         	goto	u3301
  6235  0010AA  EF59  F008         	goto	u3300
  6236  0010AE                     u3301:
  6237  0010AE  EF61  F008         	goto	l4744
  6238  0010B2                     u3300:
  6239  0010B2                     
  6240                           ; BSR set to: 0
  6241  0010B2  0E00               	movlw	0
  6242  0010B4  6F8F               	movwf	___fladd@b& (0+255),b
  6243  0010B6  0E00               	movlw	0
  6244  0010B8  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6245  0010BA  0E00               	movlw	0
  6246  0010BC  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6247  0010BE  0E00               	movlw	0
  6248  0010C0  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6249  0010C2                     l4744:
  6250                           
  6251                           ; BSR set to: 0
  6252  0010C2  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  6253  0010C4                     
  6254                           ; BSR set to: 0
  6255  0010C4  0E00               	movlw	0
  6256  0010C6  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6257  0010C8  EF6E  F008         	goto	l4750
  6258  0010CC                     l4748:
  6259                           
  6260                           ; BSR set to: 0
  6261  0010CC  0E00               	movlw	0
  6262  0010CE  6F8F               	movwf	___fladd@b& (0+255),b
  6263  0010D0  0E00               	movlw	0
  6264  0010D2  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6265  0010D4  0E00               	movlw	0
  6266  0010D6  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6267  0010D8  0E00               	movlw	0
  6268  0010DA  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6269  0010DC                     l4750:
  6270                           
  6271                           ; BSR set to: 0
  6272  0010DC  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6273  0010DE  0B80               	andlw	128
  6274  0010E0  6F9C               	movwf	___fladd@aexp& (0+255),b
  6275  0010E2                     
  6276                           ; BSR set to: 0
  6277  0010E2  519B               	movf	___fladd@signs& (0+255),w,b
  6278  0010E4  199C               	xorwf	___fladd@aexp& (0+255),w,b
  6279  0010E6  B4D8               	btfsc	status,2,c
  6280  0010E8  EF78  F008         	goto	u3311
  6281  0010EC  EF7A  F008         	goto	u3310
  6282  0010F0                     u3311:
  6283  0010F0  EF7B  F008         	goto	l4756
  6284  0010F4                     u3310:
  6285  0010F4                     
  6286                           ; BSR set to: 0
  6287  0010F4  8D9B               	bsf	___fladd@signs& (0+255),6,b
  6288  0010F6                     l4756:
  6289                           
  6290                           ; BSR set to: 0
  6291  0010F6  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6292  0010F8  2596               	addwf	(___fladd@a+3)& (0+255),w,b
  6293  0010FA  6F9C               	movwf	___fladd@aexp& (0+255),b
  6294  0010FC                     
  6295                           ; BSR set to: 0
  6296  0010FC  AF95               	btfss	(___fladd@a+2)& (0+255),7,b
  6297  0010FE  EF83  F008         	goto	u3321
  6298  001102  EF85  F008         	goto	u3320
  6299  001106                     u3321:
  6300  001106  EF86  F008         	goto	l4762
  6301  00110A                     u3320:
  6302  00110A                     
  6303                           ; BSR set to: 0
  6304  00110A  819C               	bsf	___fladd@aexp& (0+255),0,b
  6305  00110C                     l4762:
  6306                           
  6307                           ; BSR set to: 0
  6308  00110C  519C               	movf	___fladd@aexp& (0+255),w,b
  6309  00110E  B4D8               	btfsc	status,2,c
  6310  001110  EF8C  F008         	goto	u3331
  6311  001114  EF8E  F008         	goto	u3330
  6312  001118                     u3331:
  6313  001118  EFA3  F008         	goto	l4772
  6314  00111C                     u3330:
  6315  00111C                     
  6316                           ; BSR set to: 0
  6317  00111C  299C               	incf	___fladd@aexp& (0+255),w,b
  6318  00111E  A4D8               	btfss	status,2,c
  6319  001120  EF94  F008         	goto	u3341
  6320  001124  EF96  F008         	goto	u3340
  6321  001128                     u3341:
  6322  001128  EF9E  F008         	goto	l4768
  6323  00112C                     u3340:
  6324  00112C                     
  6325                           ; BSR set to: 0
  6326  00112C  0E00               	movlw	0
  6327  00112E  6F93               	movwf	___fladd@a& (0+255),b
  6328  001130  0E00               	movlw	0
  6329  001132  6F94               	movwf	(___fladd@a+1)& (0+255),b
  6330  001134  0E00               	movlw	0
  6331  001136  6F95               	movwf	(___fladd@a+2)& (0+255),b
  6332  001138  0E00               	movlw	0
  6333  00113A  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6334  00113C                     l4768:
  6335                           
  6336                           ; BSR set to: 0
  6337  00113C  8F95               	bsf	(___fladd@a+2)& (0+255),7,b
  6338  00113E                     
  6339                           ; BSR set to: 0
  6340  00113E  0E00               	movlw	0
  6341  001140  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6342  001142  EFAB  F008         	goto	l4774
  6343  001146                     l4772:
  6344                           
  6345                           ; BSR set to: 0
  6346  001146  0E00               	movlw	0
  6347  001148  6F93               	movwf	___fladd@a& (0+255),b
  6348  00114A  0E00               	movlw	0
  6349  00114C  6F94               	movwf	(___fladd@a+1)& (0+255),b
  6350  00114E  0E00               	movlw	0
  6351  001150  6F95               	movwf	(___fladd@a+2)& (0+255),b
  6352  001152  0E00               	movlw	0
  6353  001154  6F96               	movwf	(___fladd@a+3)& (0+255),b
  6354  001156                     l4774:
  6355                           
  6356                           ; BSR set to: 0
  6357  001156  519D               	movf	___fladd@bexp& (0+255),w,b
  6358  001158  5D9C               	subwf	___fladd@aexp& (0+255),w,b
  6359  00115A  B0D8               	btfsc	status,0,c
  6360  00115C  EFB2  F008         	goto	u3351
  6361  001160  EFB4  F008         	goto	u3350
  6362  001164                     u3351:
  6363  001164  EFDB  F008         	goto	l4810
  6364  001168                     u3350:
  6365  001168                     
  6366                           ; BSR set to: 0
  6367  001168  AD9B               	btfss	___fladd@signs& (0+255),6,b
  6368  00116A  EFB9  F008         	goto	u3361
  6369  00116E  EFBB  F008         	goto	u3360
  6370  001172                     u3361:
  6371  001172  EFBD  F008         	goto	l4780
  6372  001176                     u3360:
  6373  001176                     
  6374                           ; BSR set to: 0
  6375  001176  0E80               	movlw	128
  6376  001178  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  6377  00117A                     l4780:
  6378                           
  6379                           ; BSR set to: 0
  6380  00117A  C09D  F09E         	movff	___fladd@bexp,___fladd@grs
  6381  00117E                     
  6382                           ; BSR set to: 0
  6383  00117E  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  6384  001182                     
  6385                           ; BSR set to: 0
  6386  001182  C09E  F09C         	movff	___fladd@grs,___fladd@aexp
  6387  001186                     
  6388                           ; BSR set to: 0
  6389  001186  C08F  F09E         	movff	___fladd@b,___fladd@grs
  6390  00118A                     
  6391                           ; BSR set to: 0
  6392  00118A  C093  F08F         	movff	___fladd@a,___fladd@b
  6393  00118E                     
  6394                           ; BSR set to: 0
  6395  00118E  C09E  F093         	movff	___fladd@grs,___fladd@a
  6396  001192                     
  6397                           ; BSR set to: 0
  6398  001192  C090  F09E         	movff	___fladd@b+1,___fladd@grs
  6399  001196                     
  6400                           ; BSR set to: 0
  6401  001196  C094  F090         	movff	___fladd@a+1,___fladd@b+1
  6402  00119A                     
  6403                           ; BSR set to: 0
  6404  00119A  C09E  F094         	movff	___fladd@grs,___fladd@a+1
  6405  00119E                     
  6406                           ; BSR set to: 0
  6407  00119E  C091  F09E         	movff	___fladd@b+2,___fladd@grs
  6408  0011A2                     
  6409                           ; BSR set to: 0
  6410  0011A2  C095  F091         	movff	___fladd@a+2,___fladd@b+2
  6411  0011A6                     
  6412                           ; BSR set to: 0
  6413  0011A6  C09E  F095         	movff	___fladd@grs,___fladd@a+2
  6414  0011AA                     
  6415                           ; BSR set to: 0
  6416  0011AA  C092  F09E         	movff	___fladd@b+3,___fladd@grs
  6417  0011AE                     
  6418                           ; BSR set to: 0
  6419  0011AE  C096  F092         	movff	___fladd@a+3,___fladd@b+3
  6420  0011B2                     
  6421                           ; BSR set to: 0
  6422  0011B2  C09E  F096         	movff	___fladd@grs,___fladd@a+3
  6423  0011B6                     l4810:
  6424                           
  6425                           ; BSR set to: 0
  6426  0011B6  0E00               	movlw	0
  6427  0011B8  6F9E               	movwf	___fladd@grs& (0+255),b
  6428  0011BA                     
  6429                           ; BSR set to: 0
  6430  0011BA  519D               	movf	___fladd@bexp& (0+255),w,b
  6431  0011BC  C09C  F097         	movff	___fladd@aexp,??___fladd
  6432  0011C0  6B98               	clrf	(??___fladd+1)& (0+255),b
  6433  0011C2  5F97               	subwf	??___fladd& (0+255),f,b
  6434  0011C4  0E00               	movlw	0
  6435  0011C6  5B98               	subwfb	(??___fladd+1)& (0+255),f,b
  6436  0011C8  BF98               	btfsc	(??___fladd+1)& (0+255),7,b
  6437  0011CA  EFF0  F008         	goto	u3371
  6438  0011CE  5198               	movf	(??___fladd+1)& (0+255),w,b
  6439  0011D0  E109               	bnz	u3370
  6440  0011D2  0E1A               	movlw	26
  6441  0011D4  5D97               	subwf	??___fladd& (0+255),w,b
  6442  0011D6  A0D8               	btfss	status,0,c
  6443  0011D8  EFF0  F008         	goto	u3371
  6444  0011DC  EFF2  F008         	goto	u3370
  6445  0011E0                     u3371:
  6446  0011E0  EF29  F009         	goto	l1882
  6447  0011E4                     u3370:
  6448  0011E4                     
  6449                           ; BSR set to: 0
  6450  0011E4  518F               	movf	___fladd@b& (0+255),w,b
  6451  0011E6  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  6452  0011E8  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  6453  0011EA  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  6454  0011EC  A4D8               	btfss	status,2,c
  6455  0011EE  EFFB  F008         	goto	u3381
  6456  0011F2  EFFE  F008         	goto	u3380
  6457  0011F6                     u3381:
  6458  0011F6  0E01               	movlw	1
  6459  0011F8  EFFF  F008         	goto	u3390
  6460  0011FC                     u3380:
  6461  0011FC  0E00               	movlw	0
  6462  0011FE                     u3390:
  6463  0011FE  6F9E               	movwf	___fladd@grs& (0+255),b
  6464  001200                     
  6465                           ; BSR set to: 0
  6466  001200  0E00               	movlw	0
  6467  001202  6F8F               	movwf	___fladd@b& (0+255),b
  6468  001204  0E00               	movlw	0
  6469  001206  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6470  001208  0E00               	movlw	0
  6471  00120A  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6472  00120C  0E00               	movlw	0
  6473  00120E  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6474  001210                     
  6475                           ; BSR set to: 0
  6476  001210  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  6477  001214  EF32  F009         	goto	l1881
  6478  001218                     l1883:
  6479                           
  6480                           ; BSR set to: 0
  6481  001218  A19E               	btfss	___fladd@grs& (0+255),0,b
  6482  00121A  EF11  F009         	goto	u3401
  6483  00121E  EF13  F009         	goto	u3400
  6484  001222                     u3401:
  6485  001222  EF19  F009         	goto	l4822
  6486  001226                     u3400:
  6487  001226                     
  6488                           ; BSR set to: 0
  6489  001226  90D8               	bcf	status,0,c
  6490  001228  319E               	rrcf	___fladd@grs& (0+255),w,b
  6491  00122A  0901               	iorlw	1
  6492  00122C  6F9E               	movwf	___fladd@grs& (0+255),b
  6493  00122E  EF1B  F009         	goto	l4824
  6494  001232                     l4822:
  6495                           
  6496                           ; BSR set to: 0
  6497  001232  90D8               	bcf	status,0,c
  6498  001234  339E               	rrcf	___fladd@grs& (0+255),f,b
  6499  001236                     l4824:
  6500                           
  6501                           ; BSR set to: 0
  6502  001236  A18F               	btfss	___fladd@b& (0+255),0,b
  6503  001238  EF20  F009         	goto	u3411
  6504  00123C  EF22  F009         	goto	u3410
  6505  001240                     u3411:
  6506  001240  EF23  F009         	goto	l4828
  6507  001244                     u3410:
  6508  001244                     
  6509                           ; BSR set to: 0
  6510  001244  8F9E               	bsf	___fladd@grs& (0+255),7,b
  6511  001246                     l4828:
  6512                           
  6513                           ; BSR set to: 0
  6514  001246  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  6515  001248  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  6516  00124A  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  6517  00124C  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  6518  00124E  338F               	rrcf	___fladd@b& (0+255),f,b
  6519  001250                     
  6520                           ; BSR set to: 0
  6521  001250  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6522  001252                     l1882:
  6523                           
  6524                           ; BSR set to: 0
  6525  001252  519C               	movf	___fladd@aexp& (0+255),w,b
  6526  001254  5D9D               	subwf	___fladd@bexp& (0+255),w,b
  6527  001256  A0D8               	btfss	status,0,c
  6528  001258  EF30  F009         	goto	u3421
  6529  00125C  EF32  F009         	goto	u3420
  6530  001260                     u3421:
  6531  001260  EF0C  F009         	goto	l1883
  6532  001264                     u3420:
  6533  001264                     l1881:
  6534                           
  6535                           ; BSR set to: 0
  6536  001264  BD9B               	btfsc	___fladd@signs& (0+255),6,b
  6537  001266  EF37  F009         	goto	u3431
  6538  00126A  EF39  F009         	goto	u3430
  6539  00126E                     u3431:
  6540  00126E  EF79  F009         	goto	l4856
  6541  001272                     u3430:
  6542  001272                     
  6543                           ; BSR set to: 0
  6544  001272  519D               	movf	___fladd@bexp& (0+255),w,b
  6545  001274  A4D8               	btfss	status,2,c
  6546  001276  EF3F  F009         	goto	u3441
  6547  00127A  EF41  F009         	goto	u3440
  6548  00127E                     u3441:
  6549  00127E  EF4B  F009         	goto	l4838
  6550  001282                     u3440:
  6551  001282                     
  6552                           ; BSR set to: 0
  6553  001282  0E00               	movlw	0
  6554  001284  6F8F               	movwf	?___fladd& (0+255),b
  6555  001286  0E00               	movlw	0
  6556  001288  6F90               	movwf	(?___fladd+1)& (0+255),b
  6557  00128A  0E00               	movlw	0
  6558  00128C  6F91               	movwf	(?___fladd+2)& (0+255),b
  6559  00128E  0E00               	movlw	0
  6560  001290  6F92               	movwf	(?___fladd+3)& (0+255),b
  6561  001292  EF9A  F00A         	goto	l1890
  6562  001296                     l4838:
  6563                           
  6564                           ; BSR set to: 0
  6565  001296  5193               	movf	___fladd@a& (0+255),w,b
  6566  001298  278F               	addwf	___fladd@b& (0+255),f,b
  6567  00129A  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6568  00129C  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6569  00129E  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6570  0012A0  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6571  0012A2  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6572  0012A4  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6573  0012A6                     
  6574                           ; BSR set to: 0
  6575  0012A6  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  6576  0012A8  EF58  F009         	goto	u3451
  6577  0012AC  EF5A  F009         	goto	u3450
  6578  0012B0                     u3451:
  6579  0012B0  EF06  F00A         	goto	l4892
  6580  0012B4                     u3450:
  6581  0012B4                     
  6582                           ; BSR set to: 0
  6583  0012B4  A19E               	btfss	___fladd@grs& (0+255),0,b
  6584  0012B6  EF5F  F009         	goto	u3461
  6585  0012BA  EF61  F009         	goto	u3460
  6586  0012BE                     u3461:
  6587  0012BE  EF67  F009         	goto	l4846
  6588  0012C2                     u3460:
  6589  0012C2                     
  6590                           ; BSR set to: 0
  6591  0012C2  90D8               	bcf	status,0,c
  6592  0012C4  319E               	rrcf	___fladd@grs& (0+255),w,b
  6593  0012C6  0901               	iorlw	1
  6594  0012C8  6F9E               	movwf	___fladd@grs& (0+255),b
  6595  0012CA  EF69  F009         	goto	l4848
  6596  0012CE                     l4846:
  6597                           
  6598                           ; BSR set to: 0
  6599  0012CE  90D8               	bcf	status,0,c
  6600  0012D0  339E               	rrcf	___fladd@grs& (0+255),f,b
  6601  0012D2                     l4848:
  6602                           
  6603                           ; BSR set to: 0
  6604  0012D2  A18F               	btfss	___fladd@b& (0+255),0,b
  6605  0012D4  EF6E  F009         	goto	u3471
  6606  0012D8  EF70  F009         	goto	u3470
  6607  0012DC                     u3471:
  6608  0012DC  EF71  F009         	goto	l4852
  6609  0012E0                     u3470:
  6610  0012E0                     
  6611                           ; BSR set to: 0
  6612  0012E0  8F9E               	bsf	___fladd@grs& (0+255),7,b
  6613  0012E2                     l4852:
  6614                           
  6615                           ; BSR set to: 0
  6616  0012E2  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  6617  0012E4  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  6618  0012E6  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  6619  0012E8  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  6620  0012EA  338F               	rrcf	___fladd@b& (0+255),f,b
  6621  0012EC                     
  6622                           ; BSR set to: 0
  6623  0012EC  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6624  0012EE  EF06  F00A         	goto	l4892
  6625  0012F2                     l4856:
  6626                           
  6627                           ; BSR set to: 0
  6628  0012F2  5193               	movf	___fladd@a& (0+255),w,b
  6629  0012F4  5D8F               	subwf	___fladd@b& (0+255),w,b
  6630  0012F6  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6631  0012F8  5990               	subwfb	(___fladd@b+1)& (0+255),w,b
  6632  0012FA  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6633  0012FC  5991               	subwfb	(___fladd@b+2)& (0+255),w,b
  6634  0012FE  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6635  001300  0A80               	xorlw	128
  6636  001302  6F97               	movwf	??___fladd& (0+255),b
  6637  001304  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6638  001306  0A80               	xorlw	128
  6639  001308  5997               	subwfb	??___fladd& (0+255),w,b
  6640  00130A  B0D8               	btfsc	status,0,c
  6641  00130C  EF8A  F009         	goto	u3481
  6642  001310  EF8C  F009         	goto	u3480
  6643  001314                     u3481:
  6644  001314  EFB7  F009         	goto	l4866
  6645  001318                     u3480:
  6646  001318                     
  6647                           ; BSR set to: 0
  6648  001318  518F               	movf	___fladd@b& (0+255),w,b
  6649  00131A  5D93               	subwf	___fladd@a& (0+255),w,b
  6650  00131C  6F97               	movwf	??___fladd& (0+255),b
  6651  00131E  5190               	movf	(___fladd@b+1)& (0+255),w,b
  6652  001320  5994               	subwfb	(___fladd@a+1)& (0+255),w,b
  6653  001322  6F98               	movwf	(??___fladd+1)& (0+255),b
  6654  001324  5191               	movf	(___fladd@b+2)& (0+255),w,b
  6655  001326  5995               	subwfb	(___fladd@a+2)& (0+255),w,b
  6656  001328  6F99               	movwf	(??___fladd+2)& (0+255),b
  6657  00132A  5192               	movf	(___fladd@b+3)& (0+255),w,b
  6658  00132C  5996               	subwfb	(___fladd@a+3)& (0+255),w,b
  6659  00132E  6F9A               	movwf	(??___fladd+3)& (0+255),b
  6660  001330  0EFF               	movlw	255
  6661  001332  2597               	addwf	??___fladd& (0+255),w,b
  6662  001334  6F8F               	movwf	___fladd@b& (0+255),b
  6663  001336  0EFF               	movlw	255
  6664  001338  2198               	addwfc	(??___fladd+1)& (0+255),w,b
  6665  00133A  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6666  00133C  0EFF               	movlw	255
  6667  00133E  2199               	addwfc	(??___fladd+2)& (0+255),w,b
  6668  001340  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6669  001342  0EFF               	movlw	255
  6670  001344  219A               	addwfc	(??___fladd+3)& (0+255),w,b
  6671  001346  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6672  001348  0E80               	movlw	128
  6673  00134A  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  6674  00134C                     
  6675                           ; BSR set to: 0
  6676  00134C  6D9E               	negf	___fladd@grs& (0+255),b
  6677  00134E                     
  6678                           ; BSR set to: 0
  6679  00134E  519E               	movf	___fladd@grs& (0+255),w,b
  6680  001350  A4D8               	btfss	status,2,c
  6681  001352  EFAD  F009         	goto	u3491
  6682  001356  EFAF  F009         	goto	u3490
  6683  00135A                     u3491:
  6684  00135A  EFBF  F009         	goto	l1898
  6685  00135E                     u3490:
  6686  00135E                     
  6687                           ; BSR set to: 0
  6688  00135E  0E01               	movlw	1
  6689  001360  278F               	addwf	___fladd@b& (0+255),f,b
  6690  001362  0E00               	movlw	0
  6691  001364  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6692  001366  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6693  001368  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6694  00136A  EFBF  F009         	goto	l1898
  6695  00136E                     l4866:
  6696                           
  6697                           ; BSR set to: 0
  6698  00136E  5193               	movf	___fladd@a& (0+255),w,b
  6699  001370  5F8F               	subwf	___fladd@b& (0+255),f,b
  6700  001372  5194               	movf	(___fladd@a+1)& (0+255),w,b
  6701  001374  5B90               	subwfb	(___fladd@b+1)& (0+255),f,b
  6702  001376  5195               	movf	(___fladd@a+2)& (0+255),w,b
  6703  001378  5B91               	subwfb	(___fladd@b+2)& (0+255),f,b
  6704  00137A  5196               	movf	(___fladd@a+3)& (0+255),w,b
  6705  00137C  5B92               	subwfb	(___fladd@b+3)& (0+255),f,b
  6706  00137E                     l1898:
  6707                           
  6708                           ; BSR set to: 0
  6709  00137E  518F               	movf	___fladd@b& (0+255),w,b
  6710  001380  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  6711  001382  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  6712  001384  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  6713  001386  A4D8               	btfss	status,2,c
  6714  001388  EFC8  F009         	goto	u3501
  6715  00138C  EFCA  F009         	goto	u3500
  6716  001390                     u3501:
  6717  001390  EFFF  F009         	goto	l4890
  6718  001394                     u3500:
  6719  001394                     
  6720                           ; BSR set to: 0
  6721  001394  519E               	movf	___fladd@grs& (0+255),w,b
  6722  001396  A4D8               	btfss	status,2,c
  6723  001398  EFD0  F009         	goto	u3511
  6724  00139C  EFD2  F009         	goto	u3510
  6725  0013A0                     u3511:
  6726  0013A0  EFFF  F009         	goto	l4890
  6727  0013A4                     u3510:
  6728  0013A4                     
  6729                           ; BSR set to: 0
  6730  0013A4  0E00               	movlw	0
  6731  0013A6  6F8F               	movwf	?___fladd& (0+255),b
  6732  0013A8  0E00               	movlw	0
  6733  0013AA  6F90               	movwf	(?___fladd+1)& (0+255),b
  6734  0013AC  0E00               	movlw	0
  6735  0013AE  6F91               	movwf	(?___fladd+2)& (0+255),b
  6736  0013B0  0E00               	movlw	0
  6737  0013B2  6F92               	movwf	(?___fladd+3)& (0+255),b
  6738  0013B4  EF9A  F00A         	goto	l1890
  6739  0013B8                     l4874:
  6740                           
  6741                           ; BSR set to: 0
  6742  0013B8  90D8               	bcf	status,0,c
  6743  0013BA  378F               	rlcf	___fladd@b& (0+255),f,b
  6744  0013BC  3790               	rlcf	(___fladd@b+1)& (0+255),f,b
  6745  0013BE  3791               	rlcf	(___fladd@b+2)& (0+255),f,b
  6746  0013C0  3792               	rlcf	(___fladd@b+3)& (0+255),f,b
  6747  0013C2                     
  6748                           ; BSR set to: 0
  6749  0013C2  AF9E               	btfss	___fladd@grs& (0+255),7,b
  6750  0013C4  EFE6  F009         	goto	u3521
  6751  0013C8  EFE8  F009         	goto	u3520
  6752  0013CC                     u3521:
  6753  0013CC  EFE9  F009         	goto	l4880
  6754  0013D0                     u3520:
  6755  0013D0                     
  6756                           ; BSR set to: 0
  6757  0013D0  818F               	bsf	___fladd@b& (0+255),0,b
  6758  0013D2                     l4880:
  6759                           
  6760                           ; BSR set to: 0
  6761  0013D2  A19E               	btfss	___fladd@grs& (0+255),0,b
  6762  0013D4  EFEE  F009         	goto	u3531
  6763  0013D8  EFF0  F009         	goto	u3530
  6764  0013DC                     u3531:
  6765  0013DC  EFF4  F009         	goto	l4884
  6766  0013E0                     u3530:
  6767  0013E0                     
  6768                           ; BSR set to: 0
  6769  0013E0  80D8               	bsf	status,0,c
  6770  0013E2  379E               	rlcf	___fladd@grs& (0+255),f,b
  6771  0013E4  EFF6  F009         	goto	l4886
  6772  0013E8                     l4884:
  6773                           
  6774                           ; BSR set to: 0
  6775  0013E8  90D8               	bcf	status,0,c
  6776  0013EA  379E               	rlcf	___fladd@grs& (0+255),f,b
  6777  0013EC                     l4886:
  6778                           
  6779                           ; BSR set to: 0
  6780  0013EC  519D               	movf	___fladd@bexp& (0+255),w,b
  6781  0013EE  B4D8               	btfsc	status,2,c
  6782  0013F0  EFFC  F009         	goto	u3541
  6783  0013F4  EFFE  F009         	goto	u3540
  6784  0013F8                     u3541:
  6785  0013F8  EFFF  F009         	goto	l4890
  6786  0013FC                     u3540:
  6787  0013FC                     
  6788                           ; BSR set to: 0
  6789  0013FC  079D               	decf	___fladd@bexp& (0+255),f,b
  6790  0013FE                     l4890:
  6791                           
  6792                           ; BSR set to: 0
  6793  0013FE  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  6794  001400  EF04  F00A         	goto	u3551
  6795  001404  EF06  F00A         	goto	u3550
  6796  001408                     u3551:
  6797  001408  EFDC  F009         	goto	l4874
  6798  00140C                     u3550:
  6799  00140C                     l4892:
  6800                           
  6801                           ; BSR set to: 0
  6802  00140C  0E00               	movlw	0
  6803  00140E  6F9C               	movwf	___fladd@aexp& (0+255),b
  6804  001410                     
  6805                           ; BSR set to: 0
  6806  001410  AF9E               	btfss	___fladd@grs& (0+255),7,b
  6807  001412  EF0D  F00A         	goto	u3561
  6808  001416  EF0F  F00A         	goto	u3560
  6809  00141A                     u3561:
  6810  00141A  EF27  F00A         	goto	l1907
  6811  00141E                     u3560:
  6812  00141E                     
  6813                           ; BSR set to: 0
  6814  00141E  C09E  F097         	movff	___fladd@grs,??___fladd
  6815  001422  0E7F               	movlw	127
  6816  001424  1797               	andwf	??___fladd& (0+255),f,b
  6817  001426  B4D8               	btfsc	status,2,c
  6818  001428  EF18  F00A         	goto	u3571
  6819  00142C  EF1A  F00A         	goto	u3570
  6820  001430                     u3571:
  6821  001430  EF1E  F00A         	goto	l1908
  6822  001434                     u3570:
  6823  001434                     l4898:
  6824                           
  6825                           ; BSR set to: 0
  6826  001434  0E01               	movlw	1
  6827  001436  6F9C               	movwf	___fladd@aexp& (0+255),b
  6828  001438  EF27  F00A         	goto	l1907
  6829  00143C                     l1908:
  6830                           
  6831                           ; BSR set to: 0
  6832  00143C  A18F               	btfss	___fladd@b& (0+255),0,b
  6833  00143E  EF23  F00A         	goto	u3581
  6834  001442  EF25  F00A         	goto	u3580
  6835  001446                     u3581:
  6836  001446  EF27  F00A         	goto	l1907
  6837  00144A                     u3580:
  6838  00144A  EF1A  F00A         	goto	l4898
  6839  00144E                     l1907:
  6840                           
  6841                           ; BSR set to: 0
  6842  00144E  519C               	movf	___fladd@aexp& (0+255),w,b
  6843  001450  B4D8               	btfsc	status,2,c
  6844  001452  EF2D  F00A         	goto	u3591
  6845  001456  EF2F  F00A         	goto	u3590
  6846  00145A                     u3591:
  6847  00145A  EF5A  F00A         	goto	l4910
  6848  00145E                     u3590:
  6849  00145E                     
  6850                           ; BSR set to: 0
  6851  00145E  0E01               	movlw	1
  6852  001460  278F               	addwf	___fladd@b& (0+255),f,b
  6853  001462  0E00               	movlw	0
  6854  001464  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6855  001466  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6856  001468  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6857  00146A                     
  6858                           ; BSR set to: 0
  6859  00146A  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  6860  00146C  EF3A  F00A         	goto	u3601
  6861  001470  EF3C  F00A         	goto	u3600
  6862  001474                     u3601:
  6863  001474  EF5A  F00A         	goto	l4910
  6864  001478                     u3600:
  6865  001478                     
  6866                           ; BSR set to: 0
  6867  001478  C08F  F097         	movff	___fladd@b,??___fladd
  6868  00147C  C090  F098         	movff	___fladd@b+1,??___fladd+1
  6869  001480  C091  F099         	movff	___fladd@b+2,??___fladd+2
  6870  001484  C092  F09A         	movff	___fladd@b+3,??___fladd+3
  6871  001488  359A               	rlcf	(??___fladd+3)& (0+255),w,b
  6872  00148A  339A               	rrcf	(??___fladd+3)& (0+255),f,b
  6873  00148C  3399               	rrcf	(??___fladd+2)& (0+255),f,b
  6874  00148E  3398               	rrcf	(??___fladd+1)& (0+255),f,b
  6875  001490  3397               	rrcf	??___fladd& (0+255),f,b
  6876  001492  C097  F08F         	movff	??___fladd,___fladd@b
  6877  001496  C098  F090         	movff	??___fladd+1,___fladd@b+1
  6878  00149A  C099  F091         	movff	??___fladd+2,___fladd@b+2
  6879  00149E  C09A  F092         	movff	??___fladd+3,___fladd@b+3
  6880  0014A2  299D               	incf	___fladd@bexp& (0+255),w,b
  6881  0014A4  B4D8               	btfsc	status,2,c
  6882  0014A6  EF57  F00A         	goto	u3611
  6883  0014AA  EF59  F00A         	goto	u3610
  6884  0014AE                     u3611:
  6885  0014AE  EF5A  F00A         	goto	l4910
  6886  0014B2                     u3610:
  6887  0014B2                     
  6888                           ; BSR set to: 0
  6889  0014B2  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6890  0014B4                     l4910:
  6891                           
  6892                           ; BSR set to: 0
  6893  0014B4  299D               	incf	___fladd@bexp& (0+255),w,b
  6894  0014B6  B4D8               	btfsc	status,2,c
  6895  0014B8  EF60  F00A         	goto	u3621
  6896  0014BC  EF62  F00A         	goto	u3620
  6897  0014C0                     u3621:
  6898  0014C0  EF6A  F00A         	goto	l4914
  6899  0014C4                     u3620:
  6900  0014C4                     
  6901                           ; BSR set to: 0
  6902  0014C4  519D               	movf	___fladd@bexp& (0+255),w,b
  6903  0014C6  A4D8               	btfss	status,2,c
  6904  0014C8  EF68  F00A         	goto	u3631
  6905  0014CC  EF6A  F00A         	goto	u3630
  6906  0014D0                     u3631:
  6907  0014D0  EF7C  F00A         	goto	l4918
  6908  0014D4                     u3630:
  6909  0014D4                     l4914:
  6910                           
  6911                           ; BSR set to: 0
  6912  0014D4  0E00               	movlw	0
  6913  0014D6  6F8F               	movwf	___fladd@b& (0+255),b
  6914  0014D8  0E00               	movlw	0
  6915  0014DA  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6916  0014DC  0E00               	movlw	0
  6917  0014DE  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6918  0014E0  0E00               	movlw	0
  6919  0014E2  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6920  0014E4  519D               	movf	___fladd@bexp& (0+255),w,b
  6921  0014E6  A4D8               	btfss	status,2,c
  6922  0014E8  EF78  F00A         	goto	u3641
  6923  0014EC  EF7A  F00A         	goto	u3640
  6924  0014F0                     u3641:
  6925  0014F0  EF7C  F00A         	goto	l4918
  6926  0014F4                     u3640:
  6927  0014F4                     
  6928                           ; BSR set to: 0
  6929  0014F4  0E00               	movlw	0
  6930  0014F6  6F9B               	movwf	___fladd@signs& (0+255),b
  6931  0014F8                     l4918:
  6932                           
  6933                           ; BSR set to: 0
  6934  0014F8  A19D               	btfss	___fladd@bexp& (0+255),0,b
  6935  0014FA  EF81  F00A         	goto	u3651
  6936  0014FE  EF83  F00A         	goto	u3650
  6937  001502                     u3651:
  6938  001502  EF86  F00A         	goto	l4922
  6939  001506                     u3650:
  6940  001506                     
  6941                           ; BSR set to: 0
  6942  001506  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  6943  001508  EF87  F00A         	goto	l4924
  6944  00150C                     l4922:
  6945                           
  6946                           ; BSR set to: 0
  6947  00150C  9F91               	bcf	(___fladd@b+2)& (0+255),7,b
  6948  00150E                     l4924:
  6949                           
  6950                           ; BSR set to: 0
  6951  00150E  90D8               	bcf	status,0,c
  6952  001510  319D               	rrcf	___fladd@bexp& (0+255),w,b
  6953  001512  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6954  001514                     
  6955                           ; BSR set to: 0
  6956  001514  AF9B               	btfss	___fladd@signs& (0+255),7,b
  6957  001516  EF8F  F00A         	goto	u3661
  6958  00151A  EF91  F00A         	goto	u3660
  6959  00151E                     u3661:
  6960  00151E  EF92  F00A         	goto	l4930
  6961  001522                     u3660:
  6962  001522                     
  6963                           ; BSR set to: 0
  6964  001522  8F92               	bsf	(___fladd@b+3)& (0+255),7,b
  6965  001524                     l4930:
  6966                           
  6967                           ; BSR set to: 0
  6968  001524  C08F  F08F         	movff	___fladd@b,?___fladd
  6969  001528  C090  F090         	movff	___fladd@b+1,?___fladd+1
  6970  00152C  C091  F091         	movff	___fladd@b+2,?___fladd+2
  6971  001530  C092  F092         	movff	___fladd@b+3,?___fladd+3
  6972  001534                     l1890:
  6973                           
  6974                           ; BSR set to: 0
  6975  001534  0012               	return		;funcret
  6976  001536                     __end_of___fladd:
  6977                           	callstack 0
  6978                           
  6979 ;; *************** function _calcMotorPow *****************
  6980 ;; Defined at:
  6981 ;;		line 324 in file "main.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  oldSpeedDelt    2   75[BANK0 ] short 
  6986 ;;  setSpeedDelt    2   73[BANK0 ] short 
  6987 ;;  addMPow         1   77[BANK0 ] char 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;Total ram usage:        7 bytes
  7002 ;; Hardware stack levels used: 1
  7003 ;; Hardware stack levels required when called: 10
  7004 ;; This function calls:
  7005 ;;		___awdiv
  7006 ;;		___flmul
  7007 ;;		___fltol
  7008 ;;		___xxtofl
  7009 ;;		_actSpeed
  7010 ;;		_setMotor
  7011 ;; This function is called by:
  7012 ;;		_loop
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text28
  7017  002DB0                     __ptext28:
  7018                           	callstack 0
  7019  002DB0                     _calcMotorPow:
  7020                           	callstack 19
  7021  002DB0                     
  7022                           ;main.c: 325:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  7023  002DB0  0100               	movlb	0	; () banked
  7024  002DB2  51DC               	movf	_currentSpeed& (0+255),w,b
  7025  002DB4  5DDE               	subwf	_setSpeed& (0+255),w,b
  7026  002DB6  6FA9               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  7027  002DB8  51DD               	movf	(_currentSpeed+1)& (0+255),w,b
  7028  002DBA  59DF               	subwfb	(_setSpeed+1)& (0+255),w,b
  7029  002DBC  6FAA               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  7030                           
  7031                           ;main.c: 326:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  7032  002DBE  51DA               	movf	_oldSpeed& (0+255),w,b
  7033  002DC0  5DDC               	subwf	_currentSpeed& (0+255),w,b
  7034  002DC2  6FAB               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  7035  002DC4  51DB               	movf	(_oldSpeed+1)& (0+255),w,b
  7036  002DC6  59DD               	subwfb	(_currentSpeed+1)& (0+255),w,b
  7037  002DC8  6FAC               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  7038  002DCA                     
  7039                           ; BSR set to: 0
  7040                           ;main.c: 329:     currentSpeed = actSpeed();
  7041  002DCA  ECCF  F01C         	call	_actSpeed	;wreg free
  7042  002DCE  C020  F0DC         	movff	?_actSpeed,_currentSpeed
  7043  002DD2  C021  F0DD         	movff	?_actSpeed+1,_currentSpeed+1
  7044  002DD6                     
  7045                           ;main.c: 333:  addMPow = (int8_t)((0.025) * (setSpeedDelta - (oldSpeedDelta / (2))));
  7046  002DD6  0ECD               	movlw	205
  7047  002DD8  0100               	movlb	0	; () banked
  7048  002DDA  6F7A               	movwf	___flmul@a& (0+255),b
  7049  002DDC  0ECC               	movlw	204
  7050  002DDE  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  7051  002DE0  0ECC               	movlw	204
  7052  002DE2  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  7053  002DE4  0E3C               	movlw	60
  7054  002DE6  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  7055  002DE8  0E00               	movlw	0
  7056  002DEA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7057  002DEC  0E02               	movlw	2
  7058  002DEE  6F62               	movwf	___awdiv@divisor& (0+255),b
  7059  002DF0  C0AB  F060         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  7060  002DF4  C0AC  F061         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  7061  002DF8  ECBA  F01B         	call	___awdiv	;wreg free
  7062  002DFC  C0A9  F0A7         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  7063  002E00  C0AA  F0A8         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  7064  002E04  0100               	movlb	0	; () banked
  7065  002E06  5160               	movf	?___awdiv& (0+255),w,b
  7066  002E08  5FA7               	subwf	??_calcMotorPow& (0+255),f,b
  7067  002E0A  5161               	movf	(?___awdiv+1)& (0+255),w,b
  7068  002E0C  5BA8               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  7069  002E0E  C0A7  F068         	movff	??_calcMotorPow,___xxtofl@val
  7070  002E12  C0A8  F069         	movff	??_calcMotorPow+1,___xxtofl@val+1
  7071  002E16  0E00               	movlw	0
  7072  002E18  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  7073  002E1A  0EFF               	movlw	-1
  7074  002E1C  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  7075  002E1E  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  7076  002E20  0E01               	movlw	1
  7077  002E22  ECEA  F012         	call	___xxtofl
  7078  002E26  C068  F076         	movff	?___xxtofl,___flmul@b
  7079  002E2A  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  7080  002E2E  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  7081  002E32  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  7082  002E36  EC9B  F00A         	call	___flmul	;wreg free
  7083  002E3A  C076  F09F         	movff	?___flmul,___fltol@f1
  7084  002E3E  C077  F0A0         	movff	?___flmul+1,___fltol@f1+1
  7085  002E42  C078  F0A1         	movff	?___flmul+2,___fltol@f1+2
  7086  002E46  C079  F0A2         	movff	?___flmul+3,___fltol@f1+3
  7087  002E4A  EC95  F018         	call	___fltol	;wreg free
  7088  002E4E  0100               	movlb	0	; () banked
  7089  002E50  519F               	movf	?___fltol& (0+255),w,b
  7090  002E52  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  7091  002E54                     
  7092                           ; BSR set to: 0
  7093                           ;main.c: 335:     if(addMPow > (2)){
  7094  002E54  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  7095  002E56  0A80               	xorlw	128
  7096  002E58  0F7D               	addlw	-131
  7097  002E5A  A0D8               	btfss	status,0,c
  7098  002E5C  EF32  F017         	goto	u6111
  7099  002E60  EF34  F017         	goto	u6110
  7100  002E64                     u6111:
  7101  002E64  EF38  F017         	goto	l6768
  7102  002E68                     u6110:
  7103  002E68                     
  7104                           ; BSR set to: 0
  7105                           ;main.c: 336:         addMPow = (2);
  7106  002E68  0E02               	movlw	2
  7107  002E6A  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  7108                           
  7109                           ;main.c: 337:     }else if(addMPow < -(2)){
  7110  002E6C  EF44  F017         	goto	l6772
  7111  002E70                     l6768:
  7112                           
  7113                           ; BSR set to: 0
  7114  002E70  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  7115  002E72  0A80               	xorlw	128
  7116  002E74  0F82               	addlw	130
  7117  002E76  B0D8               	btfsc	status,0,c
  7118  002E78  EF40  F017         	goto	u6121
  7119  002E7C  EF42  F017         	goto	u6120
  7120  002E80                     u6121:
  7121  002E80  EF44  F017         	goto	l6772
  7122  002E84                     u6120:
  7123  002E84                     
  7124                           ; BSR set to: 0
  7125                           ;main.c: 338:         addMPow = -(2);
  7126  002E84  0EFE               	movlw	254
  7127  002E86  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  7128  002E88                     l6772:
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;main.c: 341:  actMotorPow = actMotorPow + addMPow;
  7132  002E88  51D8               	movf	_actMotorPow& (0+255),w,b
  7133  002E8A  25AD               	addwf	calcMotorPow@addMPow& (0+255),w,b
  7134  002E8C  6FD8               	movwf	_actMotorPow& (0+255),b
  7135  002E8E  0E00               	movlw	0
  7136  002E90  BFAD               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  7137  002E92  0EFF               	movlw	255
  7138  002E94  21D9               	addwfc	(_actMotorPow+1)& (0+255),w,b
  7139  002E96  6FD9               	movwf	(_actMotorPow+1)& (0+255),b
  7140  002E98                     
  7141                           ; BSR set to: 0
  7142                           ;main.c: 343:  if(actMotorPow > (700)){
  7143  002E98  BFD9               	btfsc	(_actMotorPow+1)& (0+255),7,b
  7144  002E9A  EF58  F017         	goto	u6131
  7145  002E9E  0EBD               	movlw	189
  7146  002EA0  5DD8               	subwf	_actMotorPow& (0+255),w,b
  7147  002EA2  0E02               	movlw	2
  7148  002EA4  59D9               	subwfb	(_actMotorPow+1)& (0+255),w,b
  7149  002EA6  A0D8               	btfss	status,0,c
  7150  002EA8  EF58  F017         	goto	u6131
  7151  002EAC  EF5A  F017         	goto	u6130
  7152  002EB0                     u6131:
  7153  002EB0  EF60  F017         	goto	l6778
  7154  002EB4                     u6130:
  7155  002EB4                     
  7156                           ; BSR set to: 0
  7157                           ;main.c: 344:   actMotorPow = (700);
  7158  002EB4  0E02               	movlw	2
  7159  002EB6  6FD9               	movwf	(_actMotorPow+1)& (0+255),b
  7160  002EB8  0EBC               	movlw	188
  7161  002EBA  6FD8               	movwf	_actMotorPow& (0+255),b
  7162                           
  7163                           ;main.c: 345:  }else if(actMotorPow < (-300)){
  7164  002EBC  EF72  F017         	goto	l6782
  7165  002EC0                     l6778:
  7166                           
  7167                           ; BSR set to: 0
  7168  002EC0  AFD9               	btfss	(_actMotorPow+1)& (0+255),7,b
  7169  002EC2  EF6C  F017         	goto	u6141
  7170  002EC6  0ED4               	movlw	212
  7171  002EC8  5DD8               	subwf	_actMotorPow& (0+255),w,b
  7172  002ECA  0EFE               	movlw	254
  7173  002ECC  59D9               	subwfb	(_actMotorPow+1)& (0+255),w,b
  7174  002ECE  B0D8               	btfsc	status,0,c
  7175  002ED0  EF6C  F017         	goto	u6141
  7176  002ED4  EF6E  F017         	goto	u6140
  7177  002ED8                     u6141:
  7178  002ED8  EF72  F017         	goto	l6782
  7179  002EDC                     u6140:
  7180  002EDC                     
  7181                           ; BSR set to: 0
  7182                           ;main.c: 346:   actMotorPow = (-300);
  7183  002EDC  0EFE               	movlw	254
  7184  002EDE  6FD9               	movwf	(_actMotorPow+1)& (0+255),b
  7185  002EE0  0ED4               	movlw	212
  7186  002EE2  6FD8               	movwf	_actMotorPow& (0+255),b
  7187  002EE4                     l6782:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;main.c: 349:     setMotor(actMotorPow);
  7191  002EE4  C0D8  F062         	movff	_actMotorPow,setMotor@motorPower
  7192  002EE8  C0D9  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  7193  002EEC  EC15  F01A         	call	_setMotor	;wreg free
  7194  002EF0                     
  7195                           ;main.c: 351:     oldSpeed = currentSpeed;
  7196  002EF0  C0DC  F0DA         	movff	_currentSpeed,_oldSpeed
  7197  002EF4  C0DD  F0DB         	movff	_currentSpeed+1,_oldSpeed+1
  7198  002EF8  0012               	return		;funcret
  7199  002EFA                     __end_of_calcMotorPow:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _setMotor *****************
  7203 ;; Defined at:
  7204 ;;		line 355 in file "main.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  motorPower      2    2[BANK0 ] short 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;Total ram usage:        4 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 9
  7225 ;; This function calls:
  7226 ;;		_PWM7_LoadDutyValue
  7227 ;;		_PWM8_LoadDutyValue
  7228 ;; This function is called by:
  7229 ;;		_calcMotorPow
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text29
  7234  00342A                     __ptext29:
  7235                           	callstack 0
  7236  00342A                     _setMotor:
  7237                           	callstack 19
  7238  00342A                     
  7239                           ;main.c: 356:     if(motorPower > (50)){
  7240  00342A  0100               	movlb	0	; () banked
  7241  00342C  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  7242  00342E  EF22  F01A         	goto	u5551
  7243  003432  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  7244  003434  E109               	bnz	u5550
  7245  003436  0E33               	movlw	51
  7246  003438  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7247  00343A  A0D8               	btfss	status,0,c
  7248  00343C  EF22  F01A         	goto	u5551
  7249  003440  EF24  F01A         	goto	u5550
  7250  003444                     u5551:
  7251  003444  EF44  F01A         	goto	l6378
  7252  003448                     u5550:
  7253  003448                     
  7254                           ; BSR set to: 0
  7255                           ;main.c: 357:        if(motorPower > (700)){
  7256  003448  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  7257  00344A  EF30  F01A         	goto	u5561
  7258  00344E  0EBD               	movlw	189
  7259  003450  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7260  003452  0E02               	movlw	2
  7261  003454  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  7262  003456  A0D8               	btfss	status,0,c
  7263  003458  EF30  F01A         	goto	u5561
  7264  00345C  EF32  F01A         	goto	u5560
  7265  003460                     u5561:
  7266  003460  EF36  F01A         	goto	l6374
  7267  003464                     u5560:
  7268  003464                     
  7269                           ; BSR set to: 0
  7270                           ;main.c: 358:             motorPower = (700);
  7271  003464  0E02               	movlw	2
  7272  003466  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  7273  003468  0EBC               	movlw	188
  7274  00346A  6F62               	movwf	setMotor@motorPower& (0+255),b
  7275  00346C                     l6374:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;main.c: 360:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  7279  00346C  C062  F020         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  7280  003470  C063  F021         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  7281  003474  EC0F  F021         	call	_PWM7_LoadDutyValue	;wreg free
  7282  003478                     
  7283                           ;main.c: 361:         PWM8_LoadDutyValue(0);
  7284  003478  0E00               	movlw	0
  7285  00347A  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7286  00347C  0E00               	movlw	0
  7287  00347E  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7288  003480  ECF4  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7289                           
  7290                           ;main.c: 362:     } else if(motorPower < (50)){
  7291  003484  EF87  F01A         	goto	l1350
  7292  003488                     l6378:
  7293                           
  7294                           ; BSR set to: 0
  7295  003488  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  7296  00348A  EF52  F01A         	goto	u5570
  7297  00348E  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  7298  003490  E107               	bnz	u5571
  7299  003492  0E32               	movlw	50
  7300  003494  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7301  003496  B0D8               	btfsc	status,0,c
  7302  003498  EF50  F01A         	goto	u5571
  7303  00349C  EF52  F01A         	goto	u5570
  7304  0034A0                     u5571:
  7305  0034A0  EF7B  F01A         	goto	l6388
  7306  0034A4                     u5570:
  7307  0034A4                     
  7308                           ; BSR set to: 0
  7309                           ;main.c: 363:         if(motorPower < (-300)){
  7310  0034A4  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  7311  0034A6  EF5E  F01A         	goto	u5581
  7312  0034AA  0ED4               	movlw	212
  7313  0034AC  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  7314  0034AE  0EFE               	movlw	254
  7315  0034B0  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  7316  0034B2  B0D8               	btfsc	status,0,c
  7317  0034B4  EF5E  F01A         	goto	u5581
  7318  0034B8  EF60  F01A         	goto	u5580
  7319  0034BC                     u5581:
  7320  0034BC  EF64  F01A         	goto	l6384
  7321  0034C0                     u5580:
  7322  0034C0                     
  7323                           ; BSR set to: 0
  7324                           ;main.c: 364:             motorPower = (-300);
  7325  0034C0  0EFE               	movlw	254
  7326  0034C2  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  7327  0034C4  0ED4               	movlw	212
  7328  0034C6  6F62               	movwf	setMotor@motorPower& (0+255),b
  7329  0034C8                     l6384:
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;main.c: 366:         PWM7_LoadDutyValue(0);
  7333  0034C8  0E00               	movlw	0
  7334  0034CA  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  7335  0034CC  0E00               	movlw	0
  7336  0034CE  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  7337  0034D0  EC0F  F021         	call	_PWM7_LoadDutyValue	;wreg free
  7338  0034D4                     
  7339                           ;main.c: 367:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  7340  0034D4  C062  F064         	movff	setMotor@motorPower,??_setMotor
  7341  0034D8  C063  F065         	movff	setMotor@motorPower+1,??_setMotor+1
  7342  0034DC  0100               	movlb	0	; () banked
  7343  0034DE  1F64               	comf	??_setMotor& (0+255),f,b
  7344  0034E0  1F65               	comf	(??_setMotor+1)& (0+255),f,b
  7345  0034E2  4B64               	infsnz	??_setMotor& (0+255),f,b
  7346  0034E4  2B65               	incf	(??_setMotor+1)& (0+255),f,b
  7347  0034E6  C064  F020         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  7348  0034EA  C065  F021         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  7349  0034EE  ECF4  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7350                           
  7351                           ;main.c: 368:     } else {
  7352  0034F2  EF87  F01A         	goto	l1350
  7353  0034F6                     l6388:
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;main.c: 369:         PWM7_LoadDutyValue(0);
  7357  0034F6  0E00               	movlw	0
  7358  0034F8  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  7359  0034FA  0E00               	movlw	0
  7360  0034FC  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  7361  0034FE  EC0F  F021         	call	_PWM7_LoadDutyValue	;wreg free
  7362                           
  7363                           ;main.c: 370:         PWM8_LoadDutyValue(0);
  7364  003502  0E00               	movlw	0
  7365  003504  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7366  003506  0E00               	movlw	0
  7367  003508  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7368  00350A  ECF4  F020         	call	_PWM8_LoadDutyValue	;wreg free
  7369  00350E                     l1350:
  7370  00350E  0012               	return		;funcret
  7371  003510                     __end_of_setMotor:
  7372                           	callstack 0
  7373                           
  7374 ;; *************** function _PWM8_LoadDutyValue *****************
  7375 ;; Defined at:
  7376 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  dutyValue       2   31[COMRAM] unsigned short 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;Total ram usage:        4 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; Hardware stack levels required when called: 8
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_setMotor
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text30
  7405  0041E8                     __ptext30:
  7406                           	callstack 0
  7407  0041E8                     _PWM8_LoadDutyValue:
  7408                           	callstack 19
  7409  0041E8                     
  7410                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7411  0041E8  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  7412  0041EC  C021  F061         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  7413  0041F0  0100               	movlb	0	; () banked
  7414  0041F2  90D8               	bcf	status,0,c
  7415  0041F4  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7416  0041F6  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7417  0041F8  90D8               	bcf	status,0,c
  7418  0041FA  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7419  0041FC  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7420  0041FE  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  7421  004200  6E61               	movwf	97,c	;volatile
  7422                           
  7423                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  7424  004202  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  7425  004206  0E03               	movlw	3
  7426  004208  1760               	andwf	??_PWM8_LoadDutyValue& (0+255),f,b
  7427  00420A  0E06               	movlw	6
  7428  00420C  6F61               	movwf	(??_PWM8_LoadDutyValue+1)& (0+255),b
  7429  00420E                     u5325:
  7430  00420E  90D8               	bcf	status,0,c
  7431  004210  3760               	rlcf	??_PWM8_LoadDutyValue& (0+255),f,b
  7432  004212  2F61               	decfsz	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  7433  004214  EF07  F021         	goto	u5325
  7434  004218  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  7435  00421A  6E60               	movwf	96,c	;volatile
  7436  00421C                     
  7437                           ; BSR set to: 0
  7438  00421C  0012               	return		;funcret
  7439  00421E                     __end_of_PWM8_LoadDutyValue:
  7440                           	callstack 0
  7441                           
  7442 ;; *************** function _PWM7_LoadDutyValue *****************
  7443 ;; Defined at:
  7444 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  dutyValue       2   31[COMRAM] unsigned short 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;Total ram usage:        4 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 8
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_setMotor
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text31
  7473  00421E                     __ptext31:
  7474                           	callstack 0
  7475  00421E                     _PWM7_LoadDutyValue:
  7476                           	callstack 19
  7477  00421E                     
  7478                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  7479  00421E  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7480  004222  C021  F061         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  7481  004226  0100               	movlb	0	; () banked
  7482  004228  90D8               	bcf	status,0,c
  7483  00422A  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7484  00422C  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7485  00422E  90D8               	bcf	status,0,c
  7486  004230  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7487  004232  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7488  004234  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  7489  004236  6E65               	movwf	101,c	;volatile
  7490                           
  7491                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  7492  004238  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  7493  00423C  0E03               	movlw	3
  7494  00423E  1760               	andwf	??_PWM7_LoadDutyValue& (0+255),f,b
  7495  004240  0E06               	movlw	6
  7496  004242  6F61               	movwf	(??_PWM7_LoadDutyValue+1)& (0+255),b
  7497  004244                     u5315:
  7498  004244  90D8               	bcf	status,0,c
  7499  004246  3760               	rlcf	??_PWM7_LoadDutyValue& (0+255),f,b
  7500  004248  2F61               	decfsz	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  7501  00424A  EF22  F021         	goto	u5315
  7502  00424E  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  7503  004250  6E64               	movwf	100,c	;volatile
  7504  004252                     
  7505                           ; BSR set to: 0
  7506  004252  0012               	return		;funcret
  7507  004254                     __end_of_PWM7_LoadDutyValue:
  7508                           	callstack 0
  7509                           
  7510 ;; *************** function _actSpeed *****************
  7511 ;; Defined at:
  7512 ;;		line 69 in file "main.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  speed           2   14[BANK0 ] short 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  2   31[COMRAM] short 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;Total ram usage:        4 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 9
  7533 ;; This function calls:
  7534 ;;		___aldiv
  7535 ;; This function is called by:
  7536 ;;		_calcMotorPow
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text32
  7541  00399E                     __ptext32:
  7542                           	callstack 0
  7543  00399E                     _actSpeed:
  7544                           	callstack 19
  7545  00399E                     
  7546                           ;main.c: 70:     int16_t speed = 0;
  7547  00399E  0E00               	movlw	0
  7548  0039A0  0100               	movlb	0	; () banked
  7549  0039A2  6F6F               	movwf	(actSpeed@speed+1)& (0+255),b
  7550  0039A4  0E00               	movlw	0
  7551  0039A6  6F6E               	movwf	actSpeed@speed& (0+255),b
  7552  0039A8                     
  7553                           ; BSR set to: 0
  7554                           ;main.c: 71:     if(smtPeriod){
  7555  0039A8  5034               	movf	_smtPeriod^0,w,c	;volatile
  7556  0039AA  1035               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  7557  0039AC  1036               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  7558  0039AE  1037               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  7559  0039B0  B4D8               	btfsc	status,2,c
  7560  0039B2  EFDD  F01C         	goto	u5531
  7561  0039B6  EFDF  F01C         	goto	u5530
  7562  0039BA                     u5531:
  7563  0039BA  EF17  F01D         	goto	l6364
  7564  0039BE                     u5530:
  7565  0039BE                     
  7566                           ; BSR set to: 0
  7567                           ;main.c: 72:         if(CLC3CONbits.LC3OUT){
  7568  0039BE  013C               	movlb	60	; () banked
  7569  0039C0  AB60               	btfss	96,5,b	;volatile
  7570  0039C2  EFE5  F01C         	goto	u5541
  7571  0039C6  EFE7  F01C         	goto	u5540
  7572  0039CA                     u5541:
  7573  0039CA  EF00  F01D         	goto	l6362
  7574  0039CE                     u5540:
  7575  0039CE                     
  7576                           ; BSR set to: 60
  7577                           ;main.c: 73:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  7578  0039CE  0E20               	movlw	32
  7579  0039D0  0100               	movlb	0	; () banked
  7580  0039D2  6F60               	movwf	___aldiv@dividend& (0+255),b
  7581  0039D4  0EA1               	movlw	161
  7582  0039D6  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  7583  0039D8  0E07               	movlw	7
  7584  0039DA  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  7585  0039DC  0E00               	movlw	0
  7586  0039DE  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  7587  0039E0  C034  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7588  0039E4  C035  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7589  0039E8  C036  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7590  0039EC  C037  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7591  0039F0  EC0E  F018         	call	___aldiv	;wreg free
  7592  0039F4  C060  F06E         	movff	?___aldiv,actSpeed@speed
  7593  0039F8  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  7594                           
  7595                           ;main.c: 74:         } else {
  7596  0039FC  EF17  F01D         	goto	l6364
  7597  003A00                     l6362:
  7598                           
  7599                           ; BSR set to: 60
  7600                           ;main.c: 75:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  7601  003A00  0EE0               	movlw	224
  7602  003A02  0100               	movlb	0	; () banked
  7603  003A04  6F60               	movwf	___aldiv@dividend& (0+255),b
  7604  003A06  0E5E               	movlw	94
  7605  003A08  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  7606  003A0A  0EF8               	movlw	248
  7607  003A0C  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  7608  003A0E  0EFF               	movlw	255
  7609  003A10  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  7610  003A12  C034  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  7611  003A16  C035  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  7612  003A1A  C036  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  7613  003A1E  C037  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  7614  003A22  EC0E  F018         	call	___aldiv	;wreg free
  7615  003A26  C060  F06E         	movff	?___aldiv,actSpeed@speed
  7616  003A2A  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  7617  003A2E                     l6364:
  7618                           
  7619                           ;main.c: 78:     return speed;
  7620  003A2E  C06E  F020         	movff	actSpeed@speed,?_actSpeed
  7621  003A32  C06F  F021         	movff	actSpeed@speed+1,?_actSpeed+1
  7622  003A36  0012               	return		;funcret
  7623  003A38                     __end_of_actSpeed:
  7624                           	callstack 0
  7625                           
  7626 ;; *************** function ___aldiv *****************
  7627 ;; Defined at:
  7628 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  dividend        4    0[BANK0 ] long 
  7631 ;;  divisor         4    4[BANK0 ] long 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;  quotient        4   10[BANK0 ] long 
  7634 ;;  sign            1    9[BANK0 ] unsigned char 
  7635 ;;  counter         1    8[BANK0 ] unsigned char 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  4    0[BANK0 ] long 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7645 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;Total ram usage:       14 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; Hardware stack levels required when called: 8
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_actSpeed
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           	psect	text33
  7660  00301C                     __ptext33:
  7661                           	callstack 0
  7662  00301C                     ___aldiv:
  7663                           	callstack 19
  7664  00301C  0E00               	movlw	0
  7665  00301E  0100               	movlb	0	; () banked
  7666  003020  6F69               	movwf	___aldiv@sign& (0+255),b
  7667  003022                     
  7668                           ; BSR set to: 0
  7669  003022  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  7670  003024  EF18  F018         	goto	u5350
  7671  003028  EF16  F018         	goto	u5351
  7672  00302C                     u5351:
  7673  00302C  EF22  F018         	goto	l6212
  7674  003030                     u5350:
  7675  003030                     
  7676                           ; BSR set to: 0
  7677  003030  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7678  003032  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7679  003034  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7680  003036  6D64               	negf	___aldiv@divisor& (0+255),b
  7681  003038  0E00               	movlw	0
  7682  00303A  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7683  00303C  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7684  00303E  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7685  003040                     
  7686                           ; BSR set to: 0
  7687  003040  0E01               	movlw	1
  7688  003042  6F69               	movwf	___aldiv@sign& (0+255),b
  7689  003044                     l6212:
  7690                           
  7691                           ; BSR set to: 0
  7692  003044  BF63               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  7693  003046  EF29  F018         	goto	u5360
  7694  00304A  EF27  F018         	goto	u5361
  7695  00304E                     u5361:
  7696  00304E  EF33  F018         	goto	l6218
  7697  003052                     u5360:
  7698  003052                     
  7699                           ; BSR set to: 0
  7700  003052  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7701  003054  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7702  003056  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7703  003058  6D60               	negf	___aldiv@dividend& (0+255),b
  7704  00305A  0E00               	movlw	0
  7705  00305C  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7706  00305E  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7707  003060  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7708  003062                     
  7709                           ; BSR set to: 0
  7710  003062  0E01               	movlw	1
  7711  003064  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  7712  003066                     l6218:
  7713                           
  7714                           ; BSR set to: 0
  7715  003066  0E00               	movlw	0
  7716  003068  6F6A               	movwf	___aldiv@quotient& (0+255),b
  7717  00306A  0E00               	movlw	0
  7718  00306C  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  7719  00306E  0E00               	movlw	0
  7720  003070  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  7721  003072  0E00               	movlw	0
  7722  003074  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  7723  003076                     
  7724                           ; BSR set to: 0
  7725  003076  5164               	movf	___aldiv@divisor& (0+255),w,b
  7726  003078  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7727  00307A  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7728  00307C  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7729  00307E  B4D8               	btfsc	status,2,c
  7730  003080  EF44  F018         	goto	u5371
  7731  003084  EF46  F018         	goto	u5370
  7732  003088                     u5371:
  7733  003088  EF7C  F018         	goto	l6240
  7734  00308C                     u5370:
  7735  00308C                     
  7736                           ; BSR set to: 0
  7737  00308C  0E01               	movlw	1
  7738  00308E  6F68               	movwf	___aldiv@counter& (0+255),b
  7739  003090  EF50  F018         	goto	l6226
  7740  003094                     l6224:
  7741                           
  7742                           ; BSR set to: 0
  7743  003094  90D8               	bcf	status,0,c
  7744  003096  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  7745  003098  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7746  00309A  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7747  00309C  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7748  00309E  2B68               	incf	___aldiv@counter& (0+255),f,b
  7749  0030A0                     l6226:
  7750                           
  7751                           ; BSR set to: 0
  7752  0030A0  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7753  0030A2  EF55  F018         	goto	u5381
  7754  0030A6  EF57  F018         	goto	u5380
  7755  0030AA                     u5381:
  7756  0030AA  EF4A  F018         	goto	l6224
  7757  0030AE                     u5380:
  7758  0030AE                     l6228:
  7759                           
  7760                           ; BSR set to: 0
  7761  0030AE  90D8               	bcf	status,0,c
  7762  0030B0  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  7763  0030B2  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7764  0030B4  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7765  0030B6  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7766  0030B8                     
  7767                           ; BSR set to: 0
  7768  0030B8  5164               	movf	___aldiv@divisor& (0+255),w,b
  7769  0030BA  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  7770  0030BC  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7771  0030BE  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7772  0030C0  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7773  0030C2  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7774  0030C4  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7775  0030C6  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7776  0030C8  A0D8               	btfss	status,0,c
  7777  0030CA  EF69  F018         	goto	u5391
  7778  0030CE  EF6B  F018         	goto	u5390
  7779  0030D2                     u5391:
  7780  0030D2  EF74  F018         	goto	l6236
  7781  0030D6                     u5390:
  7782  0030D6                     
  7783                           ; BSR set to: 0
  7784  0030D6  5164               	movf	___aldiv@divisor& (0+255),w,b
  7785  0030D8  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  7786  0030DA  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7787  0030DC  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7788  0030DE  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7789  0030E0  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7790  0030E2  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7791  0030E4  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7792  0030E6                     
  7793                           ; BSR set to: 0
  7794  0030E6  816A               	bsf	___aldiv@quotient& (0+255),0,b
  7795  0030E8                     l6236:
  7796                           
  7797                           ; BSR set to: 0
  7798  0030E8  90D8               	bcf	status,0,c
  7799  0030EA  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7800  0030EC  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7801  0030EE  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7802  0030F0  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  7803  0030F2                     
  7804                           ; BSR set to: 0
  7805  0030F2  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  7806  0030F4  EF57  F018         	goto	l6228
  7807  0030F8                     l6240:
  7808                           
  7809                           ; BSR set to: 0
  7810  0030F8  5169               	movf	___aldiv@sign& (0+255),w,b
  7811  0030FA  B4D8               	btfsc	status,2,c
  7812  0030FC  EF82  F018         	goto	u5401
  7813  003100  EF84  F018         	goto	u5400
  7814  003104                     u5401:
  7815  003104  EF8C  F018         	goto	l6244
  7816  003108                     u5400:
  7817  003108                     
  7818                           ; BSR set to: 0
  7819  003108  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7820  00310A  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7821  00310C  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7822  00310E  6D6A               	negf	___aldiv@quotient& (0+255),b
  7823  003110  0E00               	movlw	0
  7824  003112  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7825  003114  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7826  003116  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7827  003118                     l6244:
  7828                           
  7829                           ; BSR set to: 0
  7830  003118  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  7831  00311C  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  7832  003120  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  7833  003124  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  7834  003128                     
  7835                           ; BSR set to: 0
  7836  003128  0012               	return		;funcret
  7837  00312A                     __end_of___aldiv:
  7838                           	callstack 0
  7839                           
  7840 ;; *************** function ___xxtofl *****************
  7841 ;; Defined at:
  7842 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  sign            1    wreg     unsigned char 
  7845 ;;  val             4    8[BANK0 ] long 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  sign            1   16[BANK0 ] unsigned char 
  7848 ;;  arg             4   18[BANK0 ] unsigned long 
  7849 ;;  exp             1   17[BANK0 ] unsigned char 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  4    8[BANK0 ] unsigned char 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7859 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;Total ram usage:       14 bytes
  7864 ;; Hardware stack levels used: 1
  7865 ;; Hardware stack levels required when called: 8
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_loop
  7870 ;;		_calcSpeed
  7871 ;;		_calcMotorPow
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           	psect	text34
  7876  0025D4                     __ptext34:
  7877                           	callstack 0
  7878  0025D4                     ___xxtofl:
  7879                           	callstack 20
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;incstack = 0
  7883                           ;___xxtofl@sign stored from wreg
  7884  0025D4  0100               	movlb	0	; () banked
  7885  0025D6  6F70               	movwf	___xxtofl@sign& (0+255),b
  7886  0025D8  0100               	movlb	0	; () banked
  7887  0025DA  5170               	movf	___xxtofl@sign& (0+255),w,b
  7888  0025DC  B4D8               	btfsc	status,2,c
  7889  0025DE  EFF3  F012         	goto	u5781
  7890  0025E2  EFF5  F012         	goto	u5780
  7891  0025E6                     u5781:
  7892  0025E6  EF17  F013         	goto	l2008
  7893  0025EA                     u5780:
  7894  0025EA                     
  7895                           ; BSR set to: 0
  7896  0025EA  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7897  0025EC  EFFC  F012         	goto	u5790
  7898  0025F0  EFFA  F012         	goto	u5791
  7899  0025F4                     u5791:
  7900  0025F4  EF17  F013         	goto	l2008
  7901  0025F8                     u5790:
  7902  0025F8                     
  7903                           ; BSR set to: 0
  7904  0025F8  C068  F06C         	movff	___xxtofl@val,??___xxtofl
  7905  0025FC  C069  F06D         	movff	___xxtofl@val+1,??___xxtofl+1
  7906  002600  C06A  F06E         	movff	___xxtofl@val+2,??___xxtofl+2
  7907  002604  C06B  F06F         	movff	___xxtofl@val+3,??___xxtofl+3
  7908  002608  1F6C               	comf	??___xxtofl& (0+255),f,b
  7909  00260A  1F6D               	comf	(??___xxtofl+1)& (0+255),f,b
  7910  00260C  1F6E               	comf	(??___xxtofl+2)& (0+255),f,b
  7911  00260E  1F6F               	comf	(??___xxtofl+3)& (0+255),f,b
  7912  002610  2B6C               	incf	??___xxtofl& (0+255),f,b
  7913  002612  0E00               	movlw	0
  7914  002614  236D               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7915  002616  236E               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7916  002618  236F               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7917  00261A  C06C  F072         	movff	??___xxtofl,___xxtofl@arg
  7918  00261E  C06D  F073         	movff	??___xxtofl+1,___xxtofl@arg+1
  7919  002622  C06E  F074         	movff	??___xxtofl+2,___xxtofl@arg+2
  7920  002626  C06F  F075         	movff	??___xxtofl+3,___xxtofl@arg+3
  7921  00262A  EF1F  F013         	goto	l6526
  7922  00262E                     l2008:
  7923                           
  7924                           ; BSR set to: 0
  7925  00262E  C068  F072         	movff	___xxtofl@val,___xxtofl@arg
  7926  002632  C069  F073         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7927  002636  C06A  F074         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7928  00263A  C06B  F075         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7929  00263E                     l6526:
  7930                           
  7931                           ; BSR set to: 0
  7932  00263E  5168               	movf	___xxtofl@val& (0+255),w,b
  7933  002640  1169               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7934  002642  116A               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7935  002644  116B               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7936  002646  A4D8               	btfss	status,2,c
  7937  002648  EF28  F013         	goto	u5801
  7938  00264C  EF2A  F013         	goto	u5800
  7939  002650                     u5801:
  7940  002650  EF34  F013         	goto	l6532
  7941  002654                     u5800:
  7942  002654                     
  7943                           ; BSR set to: 0
  7944  002654  0E00               	movlw	0
  7945  002656  6F68               	movwf	?___xxtofl& (0+255),b
  7946  002658  0E00               	movlw	0
  7947  00265A  6F69               	movwf	(?___xxtofl+1)& (0+255),b
  7948  00265C  0E00               	movlw	0
  7949  00265E  6F6A               	movwf	(?___xxtofl+2)& (0+255),b
  7950  002660  0E00               	movlw	0
  7951  002662  6F6B               	movwf	(?___xxtofl+3)& (0+255),b
  7952  002664  EFC5  F013         	goto	l2011
  7953  002668                     l6532:
  7954                           
  7955                           ; BSR set to: 0
  7956  002668  0E96               	movlw	150
  7957  00266A  6F71               	movwf	___xxtofl@exp& (0+255),b
  7958  00266C  EF3E  F013         	goto	l6536
  7959  002670                     l6534:
  7960                           
  7961                           ; BSR set to: 0
  7962  002670  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7963  002672  90D8               	bcf	status,0,c
  7964  002674  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7965  002676  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7966  002678  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7967  00267A  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7968  00267C                     l6536:
  7969                           
  7970                           ; BSR set to: 0
  7971  00267C  0E00               	movlw	0
  7972  00267E  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7973  002680  6F6C               	movwf	??___xxtofl& (0+255),b
  7974  002682  0E00               	movlw	0
  7975  002684  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7976  002686  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7977  002688  0E00               	movlw	0
  7978  00268A  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7979  00268C  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7980  00268E  0EFE               	movlw	254
  7981  002690  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7982  002692  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7983  002694  516C               	movf	??___xxtofl& (0+255),w,b
  7984  002696  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7985  002698  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7986  00269A  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7987  00269C  A4D8               	btfss	status,2,c
  7988  00269E  EF53  F013         	goto	u5811
  7989  0026A2  EF55  F013         	goto	u5810
  7990  0026A6                     u5811:
  7991  0026A6  EF38  F013         	goto	l6534
  7992  0026AA                     u5810:
  7993  0026AA  EF63  F013         	goto	l2015
  7994  0026AE                     l6538:
  7995                           
  7996                           ; BSR set to: 0
  7997  0026AE  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7998  0026B0                     
  7999                           ; BSR set to: 0
  8000  0026B0  0E01               	movlw	1
  8001  0026B2  2772               	addwf	___xxtofl@arg& (0+255),f,b
  8002  0026B4  0E00               	movlw	0
  8003  0026B6  2373               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8004  0026B8  2374               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8005  0026BA  2375               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8006  0026BC                     
  8007                           ; BSR set to: 0
  8008  0026BC  90D8               	bcf	status,0,c
  8009  0026BE  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8010  0026C0  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8011  0026C2  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8012  0026C4  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  8013  0026C6                     l2015:
  8014                           
  8015                           ; BSR set to: 0
  8016  0026C6  0E00               	movlw	0
  8017  0026C8  1572               	andwf	___xxtofl@arg& (0+255),w,b
  8018  0026CA  6F6C               	movwf	??___xxtofl& (0+255),b
  8019  0026CC  0E00               	movlw	0
  8020  0026CE  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8021  0026D0  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  8022  0026D2  0E00               	movlw	0
  8023  0026D4  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8024  0026D6  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  8025  0026D8  0EFF               	movlw	255
  8026  0026DA  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8027  0026DC  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  8028  0026DE  516C               	movf	??___xxtofl& (0+255),w,b
  8029  0026E0  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8030  0026E2  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8031  0026E4  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8032  0026E6  A4D8               	btfss	status,2,c
  8033  0026E8  EF78  F013         	goto	u5821
  8034  0026EC  EF7A  F013         	goto	u5820
  8035  0026F0                     u5821:
  8036  0026F0  EF57  F013         	goto	l6538
  8037  0026F4                     u5820:
  8038  0026F4  EF82  F013         	goto	l6546
  8039  0026F8                     l6544:
  8040                           
  8041                           ; BSR set to: 0
  8042  0026F8  0771               	decf	___xxtofl@exp& (0+255),f,b
  8043  0026FA  90D8               	bcf	status,0,c
  8044  0026FC  3772               	rlcf	___xxtofl@arg& (0+255),f,b
  8045  0026FE  3773               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8046  002700  3774               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8047  002702  3775               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8048  002704                     l6546:
  8049                           
  8050                           ; BSR set to: 0
  8051  002704  BF74               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8052  002706  EF87  F013         	goto	u5831
  8053  00270A  EF89  F013         	goto	u5830
  8054  00270E                     u5831:
  8055  00270E  EF91  F013         	goto	l2022
  8056  002712                     u5830:
  8057  002712                     
  8058                           ; BSR set to: 0
  8059  002712  0E02               	movlw	2
  8060  002714  6171               	cpfslt	___xxtofl@exp& (0+255),b
  8061  002716  EF8F  F013         	goto	u5841
  8062  00271A  EF91  F013         	goto	u5840
  8063  00271E                     u5841:
  8064  00271E  EF7C  F013         	goto	l6544
  8065  002722                     u5840:
  8066  002722                     l2022:
  8067                           
  8068                           ; BSR set to: 0
  8069  002722  B171               	btfsc	___xxtofl@exp& (0+255),0,b
  8070  002724  EF96  F013         	goto	u5851
  8071  002728  EF98  F013         	goto	u5850
  8072  00272C                     u5851:
  8073  00272C  EF99  F013         	goto	l6552
  8074  002730                     u5850:
  8075  002730                     
  8076                           ; BSR set to: 0
  8077  002730  9F74               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  8078  002732                     l6552:
  8079                           
  8080                           ; BSR set to: 0
  8081  002732  90D8               	bcf	status,0,c
  8082  002734  3371               	rrcf	___xxtofl@exp& (0+255),f,b
  8083  002736                     
  8084                           ; BSR set to: 0
  8085  002736  C071  F06C         	movff	___xxtofl@exp,??___xxtofl
  8086  00273A  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  8087  00273C  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  8088  00273E  6B6F               	clrf	(??___xxtofl+3)& (0+255),b
  8089  002740  C06C  F06F         	movff	??___xxtofl,??___xxtofl+3
  8090  002744  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  8091  002746  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  8092  002748  6B6C               	clrf	??___xxtofl& (0+255),b
  8093  00274A  516C               	movf	??___xxtofl& (0+255),w,b
  8094  00274C  1372               	iorwf	___xxtofl@arg& (0+255),f,b
  8095  00274E  516D               	movf	(??___xxtofl+1)& (0+255),w,b
  8096  002750  1373               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8097  002752  516E               	movf	(??___xxtofl+2)& (0+255),w,b
  8098  002754  1374               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8099  002756  516F               	movf	(??___xxtofl+3)& (0+255),w,b
  8100  002758  1375               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8101  00275A                     
  8102                           ; BSR set to: 0
  8103  00275A  5170               	movf	___xxtofl@sign& (0+255),w,b
  8104  00275C  B4D8               	btfsc	status,2,c
  8105  00275E  EFB3  F013         	goto	u5861
  8106  002762  EFB5  F013         	goto	u5860
  8107  002766                     u5861:
  8108  002766  EFBD  F013         	goto	l6562
  8109  00276A                     u5860:
  8110  00276A                     
  8111                           ; BSR set to: 0
  8112  00276A  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  8113  00276C  EFBC  F013         	goto	u5870
  8114  002770  EFBA  F013         	goto	u5871
  8115  002774                     u5871:
  8116  002774  EFBD  F013         	goto	l6562
  8117  002778                     u5870:
  8118  002778                     
  8119                           ; BSR set to: 0
  8120  002778  8F75               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8121  00277A                     l6562:
  8122                           
  8123                           ; BSR set to: 0
  8124  00277A  C072  F068         	movff	___xxtofl@arg,?___xxtofl
  8125  00277E  C073  F069         	movff	___xxtofl@arg+1,?___xxtofl+1
  8126  002782  C074  F06A         	movff	___xxtofl@arg+2,?___xxtofl+2
  8127  002786  C075  F06B         	movff	___xxtofl@arg+3,?___xxtofl+3
  8128  00278A                     l2011:
  8129                           
  8130                           ; BSR set to: 0
  8131  00278A  0012               	return		;funcret
  8132  00278C                     __end_of___xxtofl:
  8133                           	callstack 0
  8134                           
  8135 ;; *************** function ___fltol *****************
  8136 ;; Defined at:
  8137 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;  f1              4   63[BANK0 ] unsigned char 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  exp1            1   32[COMRAM] unsigned char 
  8142 ;;  sign1           1   31[COMRAM] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  4   63[BANK0 ] long 
  8145 ;; Registers used:
  8146 ;;		wreg, status,2, status,0
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;Total ram usage:       10 bytes
  8157 ;; Hardware stack levels used: 1
  8158 ;; Hardware stack levels required when called: 8
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_calcSpeed
  8163 ;;		_calcMotorPow
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text35
  8168  00312A                     __ptext35:
  8169                           	callstack 0
  8170  00312A                     ___fltol:
  8171                           	callstack 20
  8172  00312A  0100               	movlb	0	; () banked
  8173  00312C  35A1               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8174  00312E  35A2               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8175  003130  6E21               	movwf	___fltol@exp1^0,c
  8176  003132  5021               	movf	___fltol@exp1^0,w,c
  8177  003134  A4D8               	btfss	status,2,c
  8178  003136  EF9F  F018         	goto	u3861
  8179  00313A  EFA1  F018         	goto	u3860
  8180  00313E                     u3861:
  8181  00313E  EFAB  F018         	goto	l5070
  8182  003142                     u3860:
  8183  003142                     l5066:
  8184                           
  8185                           ; BSR set to: 0
  8186  003142  0E00               	movlw	0
  8187  003144  6F9F               	movwf	?___fltol& (0+255),b
  8188  003146  0E00               	movlw	0
  8189  003148  6FA0               	movwf	(?___fltol+1)& (0+255),b
  8190  00314A  0E00               	movlw	0
  8191  00314C  6FA1               	movwf	(?___fltol+2)& (0+255),b
  8192  00314E  0E00               	movlw	0
  8193  003150  6FA2               	movwf	(?___fltol+3)& (0+255),b
  8194  003152  EF18  F019         	goto	l1650
  8195  003156                     l5070:
  8196                           
  8197                           ; BSR set to: 0
  8198  003156  C09F  F0A3         	movff	___fltol@f1,??___fltol
  8199  00315A  C0A0  F0A4         	movff	___fltol@f1+1,??___fltol+1
  8200  00315E  C0A1  F0A5         	movff	___fltol@f1+2,??___fltol+2
  8201  003162  C0A2  F0A6         	movff	___fltol@f1+3,??___fltol+3
  8202  003166  0E20               	movlw	32
  8203  003168  EFBB  F018         	goto	u3870
  8204  00316C                     u3875:
  8205  00316C  90D8               	bcf	status,0,c
  8206  00316E  33A6               	rrcf	(??___fltol+3)& (0+255),f,b
  8207  003170  33A5               	rrcf	(??___fltol+2)& (0+255),f,b
  8208  003172  33A4               	rrcf	(??___fltol+1)& (0+255),f,b
  8209  003174  33A3               	rrcf	??___fltol& (0+255),f,b
  8210  003176                     u3870:
  8211  003176  2EE8               	decfsz	wreg,f,c
  8212  003178  EFB6  F018         	goto	u3875
  8213  00317C  51A3               	movf	??___fltol& (0+255),w,b
  8214  00317E  6E20               	movwf	___fltol@sign1^0,c
  8215  003180                     
  8216                           ; BSR set to: 0
  8217  003180  8FA1               	bsf	(___fltol@f1+2)& (0+255),7,b
  8218  003182                     
  8219                           ; BSR set to: 0
  8220  003182  0EFF               	movlw	255
  8221  003184  179F               	andwf	___fltol@f1& (0+255),f,b
  8222  003186  0EFF               	movlw	255
  8223  003188  17A0               	andwf	(___fltol@f1+1)& (0+255),f,b
  8224  00318A  0EFF               	movlw	255
  8225  00318C  17A1               	andwf	(___fltol@f1+2)& (0+255),f,b
  8226  00318E  0E00               	movlw	0
  8227  003190  17A2               	andwf	(___fltol@f1+3)& (0+255),f,b
  8228  003192                     
  8229                           ; BSR set to: 0
  8230  003192  0E96               	movlw	150
  8231  003194  5E21               	subwf	___fltol@exp1^0,f,c
  8232  003196                     
  8233                           ; BSR set to: 0
  8234  003196  BE21               	btfsc	___fltol@exp1^0,7,c
  8235  003198  EFD2  F018         	goto	u3880
  8236  00319C  EFD0  F018         	goto	u3881
  8237  0031A0                     u3881:
  8238  0031A0  EFE8  F018         	goto	l5090
  8239  0031A4                     u3880:
  8240  0031A4                     
  8241                           ; BSR set to: 0
  8242  0031A4  5021               	movf	___fltol@exp1^0,w,c
  8243  0031A6  0A80               	xorlw	128
  8244  0031A8  0F97               	addlw	151
  8245  0031AA  B0D8               	btfsc	status,0,c
  8246  0031AC  EFDA  F018         	goto	u3891
  8247  0031B0  EFDC  F018         	goto	u3890
  8248  0031B4                     u3891:
  8249  0031B4  EFDE  F018         	goto	l5086
  8250  0031B8                     u3890:
  8251  0031B8  EFA1  F018         	goto	l5066
  8252  0031BC                     l5086:
  8253                           
  8254                           ; BSR set to: 0
  8255  0031BC  90D8               	bcf	status,0,c
  8256  0031BE  33A2               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8257  0031C0  33A1               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8258  0031C2  33A0               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8259  0031C4  339F               	rrcf	___fltol@f1& (0+255),f,b
  8260  0031C6                     
  8261                           ; BSR set to: 0
  8262  0031C6  3E21               	incfsz	___fltol@exp1^0,f,c
  8263  0031C8  EFDE  F018         	goto	l5086
  8264  0031CC  EF00  F019         	goto	l5100
  8265  0031D0                     l5090:
  8266                           
  8267                           ; BSR set to: 0
  8268  0031D0  0E1F               	movlw	31
  8269  0031D2  6421               	cpfsgt	___fltol@exp1^0,c
  8270  0031D4  EFEE  F018         	goto	u3901
  8271  0031D8  EFF0  F018         	goto	u3900
  8272  0031DC                     u3901:
  8273  0031DC  EFF8  F018         	goto	l5098
  8274  0031E0                     u3900:
  8275  0031E0  EFA1  F018         	goto	l5066
  8276  0031E4                     l5096:
  8277                           
  8278                           ; BSR set to: 0
  8279  0031E4  90D8               	bcf	status,0,c
  8280  0031E6  379F               	rlcf	___fltol@f1& (0+255),f,b
  8281  0031E8  37A0               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8282  0031EA  37A1               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8283  0031EC  37A2               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8284  0031EE  0621               	decf	___fltol@exp1^0,f,c
  8285  0031F0                     l5098:
  8286                           
  8287                           ; BSR set to: 0
  8288  0031F0  5021               	movf	___fltol@exp1^0,w,c
  8289  0031F2  A4D8               	btfss	status,2,c
  8290  0031F4  EFFE  F018         	goto	u3911
  8291  0031F8  EF00  F019         	goto	u3910
  8292  0031FC                     u3911:
  8293  0031FC  EFF2  F018         	goto	l5096
  8294  003200                     u3910:
  8295  003200                     l5100:
  8296                           
  8297                           ; BSR set to: 0
  8298  003200  5020               	movf	___fltol@sign1^0,w,c
  8299  003202  B4D8               	btfsc	status,2,c
  8300  003204  EF06  F019         	goto	u3921
  8301  003208  EF08  F019         	goto	u3920
  8302  00320C                     u3921:
  8303  00320C  EF10  F019         	goto	l5104
  8304  003210                     u3920:
  8305  003210                     
  8306                           ; BSR set to: 0
  8307  003210  1FA2               	comf	(___fltol@f1+3)& (0+255),f,b
  8308  003212  1FA1               	comf	(___fltol@f1+2)& (0+255),f,b
  8309  003214  1FA0               	comf	(___fltol@f1+1)& (0+255),f,b
  8310  003216  6D9F               	negf	___fltol@f1& (0+255),b
  8311  003218  0E00               	movlw	0
  8312  00321A  23A0               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8313  00321C  23A1               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8314  00321E  23A2               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8315  003220                     l5104:
  8316                           
  8317                           ; BSR set to: 0
  8318  003220  C09F  F09F         	movff	___fltol@f1,?___fltol
  8319  003224  C0A0  F0A0         	movff	___fltol@f1+1,?___fltol+1
  8320  003228  C0A1  F0A1         	movff	___fltol@f1+2,?___fltol+2
  8321  00322C  C0A2  F0A2         	movff	___fltol@f1+3,?___fltol+3
  8322  003230                     l1650:
  8323                           
  8324                           ; BSR set to: 0
  8325  003230  0012               	return		;funcret
  8326  003232                     __end_of___fltol:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function ___flmul *****************
  8330 ;; Defined at:
  8331 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  b               4   22[BANK0 ] long 
  8334 ;;  a               4   26[BANK0 ] long 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  prod            4   41[BANK0 ] struct .
  8337 ;;  grs             4   36[BANK0 ] unsigned long 
  8338 ;;  temp            2   45[BANK0 ] struct .
  8339 ;;  bexp            1   40[BANK0 ] unsigned char 
  8340 ;;  aexp            1   35[BANK0 ] unsigned char 
  8341 ;;  sign            1   34[BANK0 ] unsigned char 
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  4   22[BANK0 ] unsigned char 
  8344 ;; Registers used:
  8345 ;;		wreg, status,2, status,0, prodl, prodh
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8351 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;Total ram usage:       25 bytes
  8356 ;; Hardware stack levels used: 1
  8357 ;; Hardware stack levels required when called: 8
  8358 ;; This function calls:
  8359 ;;		Nothing
  8360 ;; This function is called by:
  8361 ;;		_calcSpeed
  8362 ;;		_calcMotorPow
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text36
  8367  001536                     __ptext36:
  8368                           	callstack 0
  8369  001536                     ___flmul:
  8370                           	callstack 20
  8371  001536  0100               	movlb	0	; () banked
  8372  001538  5179               	movf	(___flmul@b+3)& (0+255),w,b
  8373  00153A  0B80               	andlw	128
  8374  00153C  6F82               	movwf	___flmul@sign& (0+255),b
  8375  00153E  5179               	movf	(___flmul@b+3)& (0+255),w,b
  8376  001540  2579               	addwf	(___flmul@b+3)& (0+255),w,b
  8377  001542  6F88               	movwf	___flmul@bexp& (0+255),b
  8378  001544                     
  8379                           ; BSR set to: 0
  8380  001544  AF78               	btfss	(___flmul@b+2)& (0+255),7,b
  8381  001546  EFA7  F00A         	goto	u5591
  8382  00154A  EFA9  F00A         	goto	u5590
  8383  00154E                     u5591:
  8384  00154E  EFAA  F00A         	goto	l6396
  8385  001552                     u5590:
  8386  001552                     
  8387                           ; BSR set to: 0
  8388  001552  8188               	bsf	___flmul@bexp& (0+255),0,b
  8389  001554                     l6396:
  8390                           
  8391                           ; BSR set to: 0
  8392  001554  5188               	movf	___flmul@bexp& (0+255),w,b
  8393  001556  B4D8               	btfsc	status,2,c
  8394  001558  EFB0  F00A         	goto	u5601
  8395  00155C  EFB2  F00A         	goto	u5600
  8396  001560                     u5601:
  8397  001560  EFC5  F00A         	goto	l6404
  8398  001564                     u5600:
  8399  001564                     
  8400                           ; BSR set to: 0
  8401  001564  2988               	incf	___flmul@bexp& (0+255),w,b
  8402  001566  A4D8               	btfss	status,2,c
  8403  001568  EFB8  F00A         	goto	u5611
  8404  00156C  EFBA  F00A         	goto	u5610
  8405  001570                     u5611:
  8406  001570  EFC2  F00A         	goto	l6402
  8407  001574                     u5610:
  8408  001574                     
  8409                           ; BSR set to: 0
  8410  001574  0E00               	movlw	0
  8411  001576  6F76               	movwf	___flmul@b& (0+255),b
  8412  001578  0E00               	movlw	0
  8413  00157A  6F77               	movwf	(___flmul@b+1)& (0+255),b
  8414  00157C  0E00               	movlw	0
  8415  00157E  6F78               	movwf	(___flmul@b+2)& (0+255),b
  8416  001580  0E00               	movlw	0
  8417  001582  6F79               	movwf	(___flmul@b+3)& (0+255),b
  8418  001584                     l6402:
  8419                           
  8420                           ; BSR set to: 0
  8421  001584  8F78               	bsf	(___flmul@b+2)& (0+255),7,b
  8422  001586  EFCD  F00A         	goto	l6406
  8423  00158A                     l6404:
  8424                           
  8425                           ; BSR set to: 0
  8426  00158A  0E00               	movlw	0
  8427  00158C  6F76               	movwf	___flmul@b& (0+255),b
  8428  00158E  0E00               	movlw	0
  8429  001590  6F77               	movwf	(___flmul@b+1)& (0+255),b
  8430  001592  0E00               	movlw	0
  8431  001594  6F78               	movwf	(___flmul@b+2)& (0+255),b
  8432  001596  0E00               	movlw	0
  8433  001598  6F79               	movwf	(___flmul@b+3)& (0+255),b
  8434  00159A                     l6406:
  8435                           
  8436                           ; BSR set to: 0
  8437  00159A  517D               	movf	(___flmul@a+3)& (0+255),w,b
  8438  00159C  0B80               	andlw	128
  8439  00159E  1B82               	xorwf	___flmul@sign& (0+255),f,b
  8440  0015A0                     
  8441                           ; BSR set to: 0
  8442  0015A0  517D               	movf	(___flmul@a+3)& (0+255),w,b
  8443  0015A2  257D               	addwf	(___flmul@a+3)& (0+255),w,b
  8444  0015A4  6F83               	movwf	___flmul@aexp& (0+255),b
  8445  0015A6                     
  8446                           ; BSR set to: 0
  8447  0015A6  AF7C               	btfss	(___flmul@a+2)& (0+255),7,b
  8448  0015A8  EFD8  F00A         	goto	u5621
  8449  0015AC  EFDA  F00A         	goto	u5620
  8450  0015B0                     u5621:
  8451  0015B0  EFDB  F00A         	goto	l6414
  8452  0015B4                     u5620:
  8453  0015B4                     
  8454                           ; BSR set to: 0
  8455  0015B4  8183               	bsf	___flmul@aexp& (0+255),0,b
  8456  0015B6                     l6414:
  8457                           
  8458                           ; BSR set to: 0
  8459  0015B6  5183               	movf	___flmul@aexp& (0+255),w,b
  8460  0015B8  B4D8               	btfsc	status,2,c
  8461  0015BA  EFE1  F00A         	goto	u5631
  8462  0015BE  EFE3  F00A         	goto	u5630
  8463  0015C2                     u5631:
  8464  0015C2  EFF6  F00A         	goto	l6422
  8465  0015C6                     u5630:
  8466  0015C6                     
  8467                           ; BSR set to: 0
  8468  0015C6  2983               	incf	___flmul@aexp& (0+255),w,b
  8469  0015C8  A4D8               	btfss	status,2,c
  8470  0015CA  EFE9  F00A         	goto	u5641
  8471  0015CE  EFEB  F00A         	goto	u5640
  8472  0015D2                     u5641:
  8473  0015D2  EFF3  F00A         	goto	l6420
  8474  0015D6                     u5640:
  8475  0015D6                     
  8476                           ; BSR set to: 0
  8477  0015D6  0E00               	movlw	0
  8478  0015D8  6F7A               	movwf	___flmul@a& (0+255),b
  8479  0015DA  0E00               	movlw	0
  8480  0015DC  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  8481  0015DE  0E00               	movlw	0
  8482  0015E0  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  8483  0015E2  0E00               	movlw	0
  8484  0015E4  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  8485  0015E6                     l6420:
  8486                           
  8487                           ; BSR set to: 0
  8488  0015E6  8F7C               	bsf	(___flmul@a+2)& (0+255),7,b
  8489  0015E8  EFFE  F00A         	goto	l1967
  8490  0015EC                     l6422:
  8491                           
  8492                           ; BSR set to: 0
  8493  0015EC  0E00               	movlw	0
  8494  0015EE  6F7A               	movwf	___flmul@a& (0+255),b
  8495  0015F0  0E00               	movlw	0
  8496  0015F2  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  8497  0015F4  0E00               	movlw	0
  8498  0015F6  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  8499  0015F8  0E00               	movlw	0
  8500  0015FA  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  8501  0015FC                     l1967:
  8502                           
  8503                           ; BSR set to: 0
  8504  0015FC  5183               	movf	___flmul@aexp& (0+255),w,b
  8505  0015FE  B4D8               	btfsc	status,2,c
  8506  001600  EF04  F00B         	goto	u5651
  8507  001604  EF06  F00B         	goto	u5650
  8508  001608                     u5651:
  8509  001608  EF0E  F00B         	goto	l6426
  8510  00160C                     u5650:
  8511  00160C                     
  8512                           ; BSR set to: 0
  8513  00160C  5188               	movf	___flmul@bexp& (0+255),w,b
  8514  00160E  A4D8               	btfss	status,2,c
  8515  001610  EF0C  F00B         	goto	u5661
  8516  001614  EF0E  F00B         	goto	u5660
  8517  001618                     u5661:
  8518  001618  EF18  F00B         	goto	l6430
  8519  00161C                     u5660:
  8520  00161C                     l6426:
  8521                           
  8522                           ; BSR set to: 0
  8523  00161C  0E00               	movlw	0
  8524  00161E  6F76               	movwf	?___flmul& (0+255),b
  8525  001620  0E00               	movlw	0
  8526  001622  6F77               	movwf	(?___flmul+1)& (0+255),b
  8527  001624  0E00               	movlw	0
  8528  001626  6F78               	movwf	(?___flmul+2)& (0+255),b
  8529  001628  0E00               	movlw	0
  8530  00162A  6F79               	movwf	(?___flmul+3)& (0+255),b
  8531  00162C  EFC2  F00C         	goto	l1971
  8532  001630                     l6430:
  8533                           
  8534                           ; BSR set to: 0
  8535  001630  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8536  001632  0376               	mulwf	___flmul@b& (0+255),b
  8537  001634  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8538  00163A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8539  001640                     
  8540                           ; BSR set to: 0
  8541  001640  518D               	movf	___flmul@temp& (0+255),w,b
  8542  001642  6F84               	movwf	___flmul@grs& (0+255),b
  8543  001644  6B85               	clrf	(___flmul@grs+1)& (0+255),b
  8544  001646  6B86               	clrf	(___flmul@grs+2)& (0+255),b
  8545  001648  6B87               	clrf	(___flmul@grs+3)& (0+255),b
  8546  00164A                     
  8547                           ; BSR set to: 0
  8548  00164A  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8549  00164C  6F89               	movwf	___flmul@prod& (0+255),b
  8550  00164E  6B8A               	clrf	(___flmul@prod+1)& (0+255),b
  8551  001650  6B8B               	clrf	(___flmul@prod+2)& (0+255),b
  8552  001652  6B8C               	clrf	(___flmul@prod+3)& (0+255),b
  8553  001654  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8554  001656  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8555  001658  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8556  00165E  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8557  001664                     
  8558                           ; BSR set to: 0
  8559  001664  518D               	movf	___flmul@temp& (0+255),w,b
  8560  001666  2784               	addwf	___flmul@grs& (0+255),f,b
  8561  001668  0E00               	movlw	0
  8562  00166A  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8563  00166C  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8564  00166E  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8565  001670                     
  8566                           ; BSR set to: 0
  8567  001670  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8568  001672  2789               	addwf	___flmul@prod& (0+255),f,b
  8569  001674  0E00               	movlw	0
  8570  001676  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8571  001678  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8572  00167A  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8573  00167C  517A               	movf	___flmul@a& (0+255),w,b
  8574  00167E  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8575  001680  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8576  001686  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8577  00168C                     
  8578                           ; BSR set to: 0
  8579  00168C  518D               	movf	___flmul@temp& (0+255),w,b
  8580  00168E  2784               	addwf	___flmul@grs& (0+255),f,b
  8581  001690  0E00               	movlw	0
  8582  001692  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8583  001694  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8584  001696  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8585  001698                     
  8586                           ; BSR set to: 0
  8587  001698  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8588  00169A  2789               	addwf	___flmul@prod& (0+255),f,b
  8589  00169C  0E00               	movlw	0
  8590  00169E  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8591  0016A0  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8592  0016A2  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8593  0016A4                     
  8594                           ; BSR set to: 0
  8595  0016A4  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8596  0016A8  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8597  0016AC  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8598  0016B0  6B84               	clrf	___flmul@grs& (0+255),b
  8599  0016B2                     
  8600                           ; BSR set to: 0
  8601  0016B2  517A               	movf	___flmul@a& (0+255),w,b
  8602  0016B4  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8603  0016B6  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8604  0016BC  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8605  0016C2                     
  8606                           ; BSR set to: 0
  8607  0016C2  518D               	movf	___flmul@temp& (0+255),w,b
  8608  0016C4  2784               	addwf	___flmul@grs& (0+255),f,b
  8609  0016C6  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8610  0016C8  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8611  0016CA  0E00               	movlw	0
  8612  0016CC  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8613  0016CE  0E00               	movlw	0
  8614  0016D0  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8615  0016D2                     
  8616                           ; BSR set to: 0
  8617  0016D2  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8618  0016D4  0376               	mulwf	___flmul@b& (0+255),b
  8619  0016D6  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8620  0016DC  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8621  0016E2                     
  8622                           ; BSR set to: 0
  8623  0016E2  518D               	movf	___flmul@temp& (0+255),w,b
  8624  0016E4  2784               	addwf	___flmul@grs& (0+255),f,b
  8625  0016E6  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8626  0016E8  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8627  0016EA  0E00               	movlw	0
  8628  0016EC  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8629  0016EE  0E00               	movlw	0
  8630  0016F0  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8631  0016F2                     
  8632                           ; BSR set to: 0
  8633  0016F2  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8634  0016F6  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8635  0016FA  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8636  0016FE  6B84               	clrf	___flmul@grs& (0+255),b
  8637  001700  517A               	movf	___flmul@a& (0+255),w,b
  8638  001702  0376               	mulwf	___flmul@b& (0+255),b
  8639  001704  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8640  00170A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8641  001710                     
  8642                           ; BSR set to: 0
  8643  001710  518D               	movf	___flmul@temp& (0+255),w,b
  8644  001712  2784               	addwf	___flmul@grs& (0+255),f,b
  8645  001714  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8646  001716  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8647  001718  0E00               	movlw	0
  8648  00171A  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8649  00171C  0E00               	movlw	0
  8650  00171E  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8651  001720                     
  8652                           ; BSR set to: 0
  8653  001720  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8654  001722  0377               	mulwf	(___flmul@b+1)& (0+255),b
  8655  001724  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8656  00172A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8657  001730  518D               	movf	___flmul@temp& (0+255),w,b
  8658  001732  2789               	addwf	___flmul@prod& (0+255),f,b
  8659  001734  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8660  001736  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8661  001738  0E00               	movlw	0
  8662  00173A  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8663  00173C  0E00               	movlw	0
  8664  00173E  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8665  001740                     
  8666                           ; BSR set to: 0
  8667  001740  517B               	movf	(___flmul@a+1)& (0+255),w,b
  8668  001742  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8669  001744  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8670  00174A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8671  001750                     
  8672                           ; BSR set to: 0
  8673  001750  518D               	movf	___flmul@temp& (0+255),w,b
  8674  001752  2789               	addwf	___flmul@prod& (0+255),f,b
  8675  001754  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8676  001756  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8677  001758  0E00               	movlw	0
  8678  00175A  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8679  00175C  0E00               	movlw	0
  8680  00175E  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8681  001760  517C               	movf	(___flmul@a+2)& (0+255),w,b
  8682  001762  0378               	mulwf	(___flmul@b+2)& (0+255),b
  8683  001764  006F FFCC  F08D    	movff	prodl,___flmul@temp
  8684  00176A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  8685  001770                     
  8686                           ; BSR set to: 0
  8687  001770  518D               	movf	___flmul@temp& (0+255),w,b
  8688  001772  6F7E               	movwf	??___flmul& (0+255),b
  8689  001774  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8690  001776  6F7F               	movwf	(??___flmul+1)& (0+255),b
  8691  001778  6B80               	clrf	(??___flmul+2)& (0+255),b
  8692  00177A  6B81               	clrf	(??___flmul+3)& (0+255),b
  8693  00177C  C080  F081         	movff	??___flmul+2,??___flmul+3
  8694  001780  C07F  F080         	movff	??___flmul+1,??___flmul+2
  8695  001784  C07E  F07F         	movff	??___flmul,??___flmul+1
  8696  001788  6B7E               	clrf	??___flmul& (0+255),b
  8697  00178A  517E               	movf	??___flmul& (0+255),w,b
  8698  00178C  2789               	addwf	___flmul@prod& (0+255),f,b
  8699  00178E  517F               	movf	(??___flmul+1)& (0+255),w,b
  8700  001790  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8701  001792  5180               	movf	(??___flmul+2)& (0+255),w,b
  8702  001794  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8703  001796  5181               	movf	(??___flmul+3)& (0+255),w,b
  8704  001798  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8705  00179A                     
  8706                           ; BSR set to: 0
  8707  00179A  C084  F07E         	movff	___flmul@grs,??___flmul
  8708  00179E  C085  F07F         	movff	___flmul@grs+1,??___flmul+1
  8709  0017A2  C086  F080         	movff	___flmul@grs+2,??___flmul+2
  8710  0017A6  C087  F081         	movff	___flmul@grs+3,??___flmul+3
  8711  0017AA  0E19               	movlw	25
  8712  0017AC  EFDD  F00B         	goto	u5670
  8713  0017B0                     u5675:
  8714  0017B0  90D8               	bcf	status,0,c
  8715  0017B2  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  8716  0017B4  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  8717  0017B6  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  8718  0017B8  337E               	rrcf	??___flmul& (0+255),f,b
  8719  0017BA                     u5670:
  8720  0017BA  2EE8               	decfsz	wreg,f,c
  8721  0017BC  EFD8  F00B         	goto	u5675
  8722  0017C0  517E               	movf	??___flmul& (0+255),w,b
  8723  0017C2  2789               	addwf	___flmul@prod& (0+255),f,b
  8724  0017C4  517F               	movf	(??___flmul+1)& (0+255),w,b
  8725  0017C6  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8726  0017C8  5180               	movf	(??___flmul+2)& (0+255),w,b
  8727  0017CA  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8728  0017CC  5181               	movf	(??___flmul+3)& (0+255),w,b
  8729  0017CE  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8730  0017D0                     
  8731                           ; BSR set to: 0
  8732  0017D0  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  8733  0017D4  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  8734  0017D8  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  8735  0017DC  6B84               	clrf	___flmul@grs& (0+255),b
  8736  0017DE                     
  8737                           ; BSR set to: 0
  8738  0017DE  5183               	movf	___flmul@aexp& (0+255),w,b
  8739  0017E0  C088  F07E         	movff	___flmul@bexp,??___flmul
  8740  0017E4  6B7F               	clrf	(??___flmul+1)& (0+255),b
  8741  0017E6  277E               	addwf	??___flmul& (0+255),f,b
  8742  0017E8  0E00               	movlw	0
  8743  0017EA  237F               	addwfc	(??___flmul+1)& (0+255),f,b
  8744  0017EC  0E82               	movlw	130
  8745  0017EE  257E               	addwf	??___flmul& (0+255),w,b
  8746  0017F0  6F8D               	movwf	___flmul@temp& (0+255),b
  8747  0017F2  0EFF               	movlw	255
  8748  0017F4  217F               	addwfc	(??___flmul+1)& (0+255),w,b
  8749  0017F6  6F8E               	movwf	(___flmul@temp+1)& (0+255),b
  8750  0017F8  EF13  F00C         	goto	l6478
  8751  0017FC                     l6472:
  8752                           
  8753                           ; BSR set to: 0
  8754  0017FC  90D8               	bcf	status,0,c
  8755  0017FE  3789               	rlcf	___flmul@prod& (0+255),f,b
  8756  001800  378A               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8757  001802  378B               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8758  001804  378C               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8759  001806                     
  8760                           ; BSR set to: 0
  8761  001806  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  8762  001808  EF08  F00C         	goto	u5681
  8763  00180C  EF0A  F00C         	goto	u5680
  8764  001810                     u5681:
  8765  001810  EF0B  F00C         	goto	l1974
  8766  001814                     u5680:
  8767  001814                     
  8768                           ; BSR set to: 0
  8769  001814  8189               	bsf	___flmul@prod& (0+255),0,b
  8770  001816                     l1974:
  8771                           
  8772                           ; BSR set to: 0
  8773  001816  90D8               	bcf	status,0,c
  8774  001818  3784               	rlcf	___flmul@grs& (0+255),f,b
  8775  00181A  3785               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8776  00181C  3786               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8777  00181E  3787               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8778  001820  078D               	decf	___flmul@temp& (0+255),f,b
  8779  001822  A0D8               	btfss	status,0,c
  8780  001824  078E               	decf	(___flmul@temp+1)& (0+255),f,b
  8781  001826                     l6478:
  8782                           
  8783                           ; BSR set to: 0
  8784  001826  AF8B               	btfss	(___flmul@prod+2)& (0+255),7,b
  8785  001828  EF18  F00C         	goto	u5691
  8786  00182C  EF1A  F00C         	goto	u5690
  8787  001830                     u5691:
  8788  001830  EFFE  F00B         	goto	l6472
  8789  001834                     u5690:
  8790  001834                     
  8791                           ; BSR set to: 0
  8792  001834  0E00               	movlw	0
  8793  001836  6F83               	movwf	___flmul@aexp& (0+255),b
  8794  001838                     
  8795                           ; BSR set to: 0
  8796  001838  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  8797  00183A  EF21  F00C         	goto	u5701
  8798  00183E  EF23  F00C         	goto	u5700
  8799  001842                     u5701:
  8800  001842  EF47  F00C         	goto	l1976
  8801  001846                     u5700:
  8802  001846                     
  8803                           ; BSR set to: 0
  8804  001846  0EFF               	movlw	255
  8805  001848  1584               	andwf	___flmul@grs& (0+255),w,b
  8806  00184A  6F7E               	movwf	??___flmul& (0+255),b
  8807  00184C  0EFF               	movlw	255
  8808  00184E  1585               	andwf	(___flmul@grs+1)& (0+255),w,b
  8809  001850  6F7F               	movwf	(??___flmul+1)& (0+255),b
  8810  001852  0EFF               	movlw	255
  8811  001854  1586               	andwf	(___flmul@grs+2)& (0+255),w,b
  8812  001856  6F80               	movwf	(??___flmul+2)& (0+255),b
  8813  001858  0E7F               	movlw	127
  8814  00185A  1587               	andwf	(___flmul@grs+3)& (0+255),w,b
  8815  00185C  6F81               	movwf	(??___flmul+3)& (0+255),b
  8816  00185E  517E               	movf	??___flmul& (0+255),w,b
  8817  001860  117F               	iorwf	(??___flmul+1)& (0+255),w,b
  8818  001862  1180               	iorwf	(??___flmul+2)& (0+255),w,b
  8819  001864  1181               	iorwf	(??___flmul+3)& (0+255),w,b
  8820  001866  B4D8               	btfsc	status,2,c
  8821  001868  EF38  F00C         	goto	u5711
  8822  00186C  EF3A  F00C         	goto	u5710
  8823  001870                     u5711:
  8824  001870  EF3E  F00C         	goto	l1977
  8825  001874                     u5710:
  8826  001874                     l6486:
  8827                           
  8828                           ; BSR set to: 0
  8829  001874  0E01               	movlw	1
  8830  001876  6F83               	movwf	___flmul@aexp& (0+255),b
  8831  001878  EF47  F00C         	goto	l1976
  8832  00187C                     l1977:
  8833                           
  8834                           ; BSR set to: 0
  8835  00187C  A189               	btfss	___flmul@prod& (0+255),0,b
  8836  00187E  EF43  F00C         	goto	u5721
  8837  001882  EF45  F00C         	goto	u5720
  8838  001886                     u5721:
  8839  001886  EF47  F00C         	goto	l1976
  8840  00188A                     u5720:
  8841  00188A  EF3A  F00C         	goto	l6486
  8842  00188E                     l1976:
  8843                           
  8844                           ; BSR set to: 0
  8845  00188E  5183               	movf	___flmul@aexp& (0+255),w,b
  8846  001890  B4D8               	btfsc	status,2,c
  8847  001892  EF4D  F00C         	goto	u5731
  8848  001896  EF4F  F00C         	goto	u5730
  8849  00189A                     u5731:
  8850  00189A  EF73  F00C         	goto	l6498
  8851  00189E                     u5730:
  8852  00189E                     
  8853                           ; BSR set to: 0
  8854  00189E  0E01               	movlw	1
  8855  0018A0  2789               	addwf	___flmul@prod& (0+255),f,b
  8856  0018A2  0E00               	movlw	0
  8857  0018A4  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8858  0018A6  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8859  0018A8  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8860  0018AA                     
  8861                           ; BSR set to: 0
  8862  0018AA  A18C               	btfss	(___flmul@prod+3)& (0+255),0,b
  8863  0018AC  EF5A  F00C         	goto	u5741
  8864  0018B0  EF5C  F00C         	goto	u5740
  8865  0018B4                     u5741:
  8866  0018B4  EF73  F00C         	goto	l6498
  8867  0018B8                     u5740:
  8868  0018B8                     
  8869                           ; BSR set to: 0
  8870  0018B8  C089  F07E         	movff	___flmul@prod,??___flmul
  8871  0018BC  C08A  F07F         	movff	___flmul@prod+1,??___flmul+1
  8872  0018C0  C08B  F080         	movff	___flmul@prod+2,??___flmul+2
  8873  0018C4  C08C  F081         	movff	___flmul@prod+3,??___flmul+3
  8874  0018C8  3581               	rlcf	(??___flmul+3)& (0+255),w,b
  8875  0018CA  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  8876  0018CC  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  8877  0018CE  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  8878  0018D0  337E               	rrcf	??___flmul& (0+255),f,b
  8879  0018D2  C07E  F089         	movff	??___flmul,___flmul@prod
  8880  0018D6  C07F  F08A         	movff	??___flmul+1,___flmul@prod+1
  8881  0018DA  C080  F08B         	movff	??___flmul+2,___flmul@prod+2
  8882  0018DE  C081  F08C         	movff	??___flmul+3,___flmul@prod+3
  8883  0018E2                     
  8884                           ; BSR set to: 0
  8885  0018E2  4B8D               	infsnz	___flmul@temp& (0+255),f,b
  8886  0018E4  2B8E               	incf	(___flmul@temp+1)& (0+255),f,b
  8887  0018E6                     l6498:
  8888                           
  8889                           ; BSR set to: 0
  8890  0018E6  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8891  0018E8  EF7E  F00C         	goto	u5751
  8892  0018EC  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8893  0018EE  E108               	bnz	u5750
  8894  0018F0  298D               	incf	___flmul@temp& (0+255),w,b
  8895  0018F2  A0D8               	btfss	status,0,c
  8896  0018F4  EF7E  F00C         	goto	u5751
  8897  0018F8  EF80  F00C         	goto	u5750
  8898  0018FC                     u5751:
  8899  0018FC  EF8A  F00C         	goto	l6502
  8900  001900                     u5750:
  8901  001900                     
  8902                           ; BSR set to: 0
  8903  001900  0E00               	movlw	0
  8904  001902  6F89               	movwf	___flmul@prod& (0+255),b
  8905  001904  0E00               	movlw	0
  8906  001906  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8907  001908  0E80               	movlw	128
  8908  00190A  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8909  00190C  0E7F               	movlw	127
  8910  00190E  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8911  001910  EFB8  F00C         	goto	l6514
  8912  001914                     l6502:
  8913                           
  8914                           ; BSR set to: 0
  8915  001914  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8916  001916  EF97  F00C         	goto	u5760
  8917  00191A  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8918  00191C  E106               	bnz	u5761
  8919  00191E  058D               	decf	___flmul@temp& (0+255),w,b
  8920  001920  B0D8               	btfsc	status,0,c
  8921  001922  EF95  F00C         	goto	u5761
  8922  001926  EF97  F00C         	goto	u5760
  8923  00192A                     u5761:
  8924  00192A  EFA3  F00C         	goto	l1984
  8925  00192E                     u5760:
  8926  00192E                     
  8927                           ; BSR set to: 0
  8928  00192E  0E00               	movlw	0
  8929  001930  6F89               	movwf	___flmul@prod& (0+255),b
  8930  001932  0E00               	movlw	0
  8931  001934  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8932  001936  0E00               	movlw	0
  8933  001938  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8934  00193A  0E00               	movlw	0
  8935  00193C  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8936  00193E  0E00               	movlw	0
  8937  001940  6F82               	movwf	___flmul@sign& (0+255),b
  8938  001942  EFB8  F00C         	goto	l6514
  8939  001946                     l1984:
  8940                           
  8941                           ; BSR set to: 0
  8942  001946  C08D  F088         	movff	___flmul@temp,___flmul@bexp
  8943  00194A                     
  8944                           ; BSR set to: 0
  8945  00194A  0EFF               	movlw	255
  8946  00194C  1789               	andwf	___flmul@prod& (0+255),f,b
  8947  00194E  0EFF               	movlw	255
  8948  001950  178A               	andwf	(___flmul@prod+1)& (0+255),f,b
  8949  001952  0E7F               	movlw	127
  8950  001954  178B               	andwf	(___flmul@prod+2)& (0+255),f,b
  8951  001956  0E00               	movlw	0
  8952  001958  178C               	andwf	(___flmul@prod+3)& (0+255),f,b
  8953  00195A                     
  8954                           ; BSR set to: 0
  8955  00195A  A188               	btfss	___flmul@bexp& (0+255),0,b
  8956  00195C  EFB2  F00C         	goto	u5771
  8957  001960  EFB4  F00C         	goto	u5770
  8958  001964                     u5771:
  8959  001964  EFB5  F00C         	goto	l6512
  8960  001968                     u5770:
  8961  001968                     
  8962                           ; BSR set to: 0
  8963  001968  8F8B               	bsf	(___flmul@prod+2)& (0+255),7,b
  8964  00196A                     l6512:
  8965                           
  8966                           ; BSR set to: 0
  8967  00196A  90D8               	bcf	status,0,c
  8968  00196C  3188               	rrcf	___flmul@bexp& (0+255),w,b
  8969  00196E  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8970  001970                     l6514:
  8971                           
  8972                           ; BSR set to: 0
  8973  001970  5182               	movf	___flmul@sign& (0+255),w,b
  8974  001972  138C               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8975  001974                     
  8976                           ; BSR set to: 0
  8977  001974  C089  F076         	movff	___flmul@prod,?___flmul
  8978  001978  C08A  F077         	movff	___flmul@prod+1,?___flmul+1
  8979  00197C  C08B  F078         	movff	___flmul@prod+2,?___flmul+2
  8980  001980  C08C  F079         	movff	___flmul@prod+3,?___flmul+3
  8981  001984                     l1971:
  8982                           
  8983                           ; BSR set to: 0
  8984  001984  0012               	return		;funcret
  8985  001986                     __end_of___flmul:
  8986                           	callstack 0
  8987                           
  8988 ;; *************** function ___awdiv *****************
  8989 ;; Defined at:
  8990 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  dividend        2    0[BANK0 ] int 
  8993 ;;  divisor         2    2[BANK0 ] int 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  quotient        2    6[BANK0 ] int 
  8996 ;;  sign            1    5[BANK0 ] unsigned char 
  8997 ;;  counter         1    4[BANK0 ] unsigned char 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  2    0[BANK0 ] int 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9007 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9010 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9011 ;;Total ram usage:        8 bytes
  9012 ;; Hardware stack levels used: 1
  9013 ;; Hardware stack levels required when called: 8
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_calcSteering
  9018 ;;		_setSteering
  9019 ;;		_calcMotorPow
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text37
  9024  003774                     __ptext37:
  9025                           	callstack 0
  9026  003774                     ___awdiv:
  9027                           	callstack 20
  9028  003774  0E00               	movlw	0
  9029  003776  0100               	movlb	0	; () banked
  9030  003778  6F65               	movwf	___awdiv@sign& (0+255),b
  9031  00377A                     
  9032                           ; BSR set to: 0
  9033  00377A  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  9034  00377C  EFC4  F01B         	goto	u5410
  9035  003780  EFC2  F01B         	goto	u5411
  9036  003784                     u5411:
  9037  003784  EFCA  F01B         	goto	l6256
  9038  003788                     u5410:
  9039  003788                     
  9040                           ; BSR set to: 0
  9041  003788  6D62               	negf	___awdiv@divisor& (0+255),b
  9042  00378A  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9043  00378C  B0D8               	btfsc	status,0,c
  9044  00378E  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9045  003790                     
  9046                           ; BSR set to: 0
  9047  003790  0E01               	movlw	1
  9048  003792  6F65               	movwf	___awdiv@sign& (0+255),b
  9049  003794                     l6256:
  9050                           
  9051                           ; BSR set to: 0
  9052  003794  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  9053  003796  EFD1  F01B         	goto	u5420
  9054  00379A  EFCF  F01B         	goto	u5421
  9055  00379E                     u5421:
  9056  00379E  EFD7  F01B         	goto	l6262
  9057  0037A2                     u5420:
  9058  0037A2                     
  9059                           ; BSR set to: 0
  9060  0037A2  6D60               	negf	___awdiv@dividend& (0+255),b
  9061  0037A4  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9062  0037A6  B0D8               	btfsc	status,0,c
  9063  0037A8  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9064  0037AA                     
  9065                           ; BSR set to: 0
  9066  0037AA  0E01               	movlw	1
  9067  0037AC  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  9068  0037AE                     l6262:
  9069                           
  9070                           ; BSR set to: 0
  9071  0037AE  0E00               	movlw	0
  9072  0037B0  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  9073  0037B2  0E00               	movlw	0
  9074  0037B4  6F66               	movwf	___awdiv@quotient& (0+255),b
  9075  0037B6                     
  9076                           ; BSR set to: 0
  9077  0037B6  5162               	movf	___awdiv@divisor& (0+255),w,b
  9078  0037B8  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9079  0037BA  B4D8               	btfsc	status,2,c
  9080  0037BC  EFE2  F01B         	goto	u5431
  9081  0037C0  EFE4  F01B         	goto	u5430
  9082  0037C4                     u5431:
  9083  0037C4  EF0C  F01C         	goto	l6284
  9084  0037C8                     u5430:
  9085  0037C8                     
  9086                           ; BSR set to: 0
  9087  0037C8  0E01               	movlw	1
  9088  0037CA  6F64               	movwf	___awdiv@counter& (0+255),b
  9089  0037CC  EFEC  F01B         	goto	l6270
  9090  0037D0                     l6268:
  9091                           
  9092                           ; BSR set to: 0
  9093  0037D0  90D8               	bcf	status,0,c
  9094  0037D2  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  9095  0037D4  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9096  0037D6  2B64               	incf	___awdiv@counter& (0+255),f,b
  9097  0037D8                     l6270:
  9098                           
  9099                           ; BSR set to: 0
  9100  0037D8  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9101  0037DA  EFF1  F01B         	goto	u5441
  9102  0037DE  EFF3  F01B         	goto	u5440
  9103  0037E2                     u5441:
  9104  0037E2  EFE8  F01B         	goto	l6268
  9105  0037E6                     u5440:
  9106  0037E6                     l6272:
  9107                           
  9108                           ; BSR set to: 0
  9109  0037E6  90D8               	bcf	status,0,c
  9110  0037E8  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  9111  0037EA  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9112  0037EC                     
  9113                           ; BSR set to: 0
  9114  0037EC  5162               	movf	___awdiv@divisor& (0+255),w,b
  9115  0037EE  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  9116  0037F0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9117  0037F2  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9118  0037F4  A0D8               	btfss	status,0,c
  9119  0037F6  EFFF  F01B         	goto	u5451
  9120  0037FA  EF01  F01C         	goto	u5450
  9121  0037FE                     u5451:
  9122  0037FE  EF06  F01C         	goto	l6280
  9123  003802                     u5450:
  9124  003802                     
  9125                           ; BSR set to: 0
  9126  003802  5162               	movf	___awdiv@divisor& (0+255),w,b
  9127  003804  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  9128  003806  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9129  003808  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9130  00380A                     
  9131                           ; BSR set to: 0
  9132  00380A  8166               	bsf	___awdiv@quotient& (0+255),0,b
  9133  00380C                     l6280:
  9134                           
  9135                           ; BSR set to: 0
  9136  00380C  90D8               	bcf	status,0,c
  9137  00380E  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9138  003810  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  9139  003812                     
  9140                           ; BSR set to: 0
  9141  003812  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  9142  003814  EFF3  F01B         	goto	l6272
  9143  003818                     l6284:
  9144                           
  9145                           ; BSR set to: 0
  9146  003818  5165               	movf	___awdiv@sign& (0+255),w,b
  9147  00381A  B4D8               	btfsc	status,2,c
  9148  00381C  EF12  F01C         	goto	u5461
  9149  003820  EF14  F01C         	goto	u5460
  9150  003824                     u5461:
  9151  003824  EF18  F01C         	goto	l6288
  9152  003828                     u5460:
  9153  003828                     
  9154                           ; BSR set to: 0
  9155  003828  6D66               	negf	___awdiv@quotient& (0+255),b
  9156  00382A  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9157  00382C  B0D8               	btfsc	status,0,c
  9158  00382E  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9159  003830                     l6288:
  9160                           
  9161                           ; BSR set to: 0
  9162  003830  C066  F060         	movff	___awdiv@quotient,?___awdiv
  9163  003834  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  9164  003838                     
  9165                           ; BSR set to: 0
  9166  003838  0012               	return		;funcret
  9167  00383A                     __end_of___awdiv:
  9168                           	callstack 0
  9169                           
  9170 ;; *************** function ___flge *****************
  9171 ;; Defined at:
  9172 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  ff1             4   22[BANK0 ] int 
  9175 ;;  ff2             4   26[BANK0 ] int 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;		None               void
  9180 ;; Registers used:
  9181 ;;		wreg, status,2, status,0
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9187 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;Total ram usage:       12 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; Hardware stack levels required when called: 8
  9194 ;; This function calls:
  9195 ;;		Nothing
  9196 ;; This function is called by:
  9197 ;;		_loop
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text38
  9202  003232                     __ptext38:
  9203                           	callstack 0
  9204  003232                     ___flge:
  9205                           	callstack 21
  9206  003232  0E00               	movlw	0
  9207  003234  0100               	movlb	0	; () banked
  9208  003236  1576               	andwf	___flge@ff1& (0+255),w,b
  9209  003238  6F7E               	movwf	??___flge& (0+255),b
  9210  00323A  0E00               	movlw	0
  9211  00323C  1577               	andwf	(___flge@ff1+1)& (0+255),w,b
  9212  00323E  6F7F               	movwf	(??___flge+1)& (0+255),b
  9213  003240  0E80               	movlw	128
  9214  003242  1578               	andwf	(___flge@ff1+2)& (0+255),w,b
  9215  003244  6F80               	movwf	(??___flge+2)& (0+255),b
  9216  003246  0E7F               	movlw	127
  9217  003248  1579               	andwf	(___flge@ff1+3)& (0+255),w,b
  9218  00324A  6F81               	movwf	(??___flge+3)& (0+255),b
  9219  00324C  517E               	movf	??___flge& (0+255),w,b
  9220  00324E  117F               	iorwf	(??___flge+1)& (0+255),w,b
  9221  003250  1180               	iorwf	(??___flge+2)& (0+255),w,b
  9222  003252  1181               	iorwf	(??___flge+3)& (0+255),w,b
  9223  003254  A4D8               	btfss	status,2,c
  9224  003256  EF2F  F019         	goto	u6151
  9225  00325A  EF31  F019         	goto	u6150
  9226  00325E                     u6151:
  9227  00325E  EF39  F019         	goto	l6790
  9228  003262                     u6150:
  9229  003262                     
  9230                           ; BSR set to: 0
  9231  003262  0E00               	movlw	0
  9232  003264  6F76               	movwf	___flge@ff1& (0+255),b
  9233  003266  0E00               	movlw	0
  9234  003268  6F77               	movwf	(___flge@ff1+1)& (0+255),b
  9235  00326A  0E00               	movlw	0
  9236  00326C  6F78               	movwf	(___flge@ff1+2)& (0+255),b
  9237  00326E  0E00               	movlw	0
  9238  003270  6F79               	movwf	(___flge@ff1+3)& (0+255),b
  9239  003272                     l6790:
  9240                           
  9241                           ; BSR set to: 0
  9242  003272  0E00               	movlw	0
  9243  003274  157A               	andwf	___flge@ff2& (0+255),w,b
  9244  003276  6F7E               	movwf	??___flge& (0+255),b
  9245  003278  0E00               	movlw	0
  9246  00327A  157B               	andwf	(___flge@ff2+1)& (0+255),w,b
  9247  00327C  6F7F               	movwf	(??___flge+1)& (0+255),b
  9248  00327E  0E80               	movlw	128
  9249  003280  157C               	andwf	(___flge@ff2+2)& (0+255),w,b
  9250  003282  6F80               	movwf	(??___flge+2)& (0+255),b
  9251  003284  0E7F               	movlw	127
  9252  003286  157D               	andwf	(___flge@ff2+3)& (0+255),w,b
  9253  003288  6F81               	movwf	(??___flge+3)& (0+255),b
  9254  00328A  517E               	movf	??___flge& (0+255),w,b
  9255  00328C  117F               	iorwf	(??___flge+1)& (0+255),w,b
  9256  00328E  1180               	iorwf	(??___flge+2)& (0+255),w,b
  9257  003290  1181               	iorwf	(??___flge+3)& (0+255),w,b
  9258  003292  A4D8               	btfss	status,2,c
  9259  003294  EF4E  F019         	goto	u6161
  9260  003298  EF50  F019         	goto	u6160
  9261  00329C                     u6161:
  9262  00329C  EF58  F019         	goto	l6794
  9263  0032A0                     u6160:
  9264  0032A0                     
  9265                           ; BSR set to: 0
  9266  0032A0  0E00               	movlw	0
  9267  0032A2  6F7A               	movwf	___flge@ff2& (0+255),b
  9268  0032A4  0E00               	movlw	0
  9269  0032A6  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  9270  0032A8  0E00               	movlw	0
  9271  0032AA  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  9272  0032AC  0E00               	movlw	0
  9273  0032AE  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  9274  0032B0                     l6794:
  9275                           
  9276                           ; BSR set to: 0
  9277  0032B0  AF79               	btfss	(___flge@ff1+3)& (0+255),7,b
  9278  0032B2  EF5D  F019         	goto	u6171
  9279  0032B6  EF5F  F019         	goto	u6170
  9280  0032BA                     u6171:
  9281  0032BA  EF68  F019         	goto	l6798
  9282  0032BE                     u6170:
  9283  0032BE                     
  9284                           ; BSR set to: 0
  9285  0032BE  6D76               	negf	___flge@ff1& (0+255),b
  9286  0032C0  1F77               	comf	(___flge@ff1+1)& (0+255),f,b
  9287  0032C2  B0D8               	btfsc	status,0,c
  9288  0032C4  2B77               	incf	(___flge@ff1+1)& (0+255),f,b
  9289  0032C6  1F78               	comf	(___flge@ff1+2)& (0+255),f,b
  9290  0032C8  B0D8               	btfsc	status,0,c
  9291  0032CA  2B78               	incf	(___flge@ff1+2)& (0+255),f,b
  9292  0032CC  0E80               	movlw	128
  9293  0032CE  5779               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9294  0032D0                     l6798:
  9295                           
  9296                           ; BSR set to: 0
  9297  0032D0  AF7D               	btfss	(___flge@ff2+3)& (0+255),7,b
  9298  0032D2  EF6D  F019         	goto	u6181
  9299  0032D6  EF6F  F019         	goto	u6180
  9300  0032DA                     u6181:
  9301  0032DA  EF78  F019         	goto	l1618
  9302  0032DE                     u6180:
  9303  0032DE                     
  9304                           ; BSR set to: 0
  9305  0032DE  6D7A               	negf	___flge@ff2& (0+255),b
  9306  0032E0  1F7B               	comf	(___flge@ff2+1)& (0+255),f,b
  9307  0032E2  B0D8               	btfsc	status,0,c
  9308  0032E4  2B7B               	incf	(___flge@ff2+1)& (0+255),f,b
  9309  0032E6  1F7C               	comf	(___flge@ff2+2)& (0+255),f,b
  9310  0032E8  B0D8               	btfsc	status,0,c
  9311  0032EA  2B7C               	incf	(___flge@ff2+2)& (0+255),f,b
  9312  0032EC  0E80               	movlw	128
  9313  0032EE  577D               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9314  0032F0                     l1618:
  9315                           
  9316                           ; BSR set to: 0
  9317  0032F0  0E00               	movlw	0
  9318  0032F2  1B76               	xorwf	___flge@ff1& (0+255),f,b
  9319  0032F4  0E00               	movlw	0
  9320  0032F6  1B77               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9321  0032F8  0E00               	movlw	0
  9322  0032FA  1B78               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9323  0032FC  0E80               	movlw	128
  9324  0032FE  1B79               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9325  003300  0E00               	movlw	0
  9326  003302  1B7A               	xorwf	___flge@ff2& (0+255),f,b
  9327  003304  0E00               	movlw	0
  9328  003306  1B7B               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9329  003308  0E00               	movlw	0
  9330  00330A  1B7C               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9331  00330C  0E80               	movlw	128
  9332  00330E  1B7D               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9333  003310  517A               	movf	___flge@ff2& (0+255),w,b
  9334  003312  5D76               	subwf	___flge@ff1& (0+255),w,b
  9335  003314  517B               	movf	(___flge@ff2+1)& (0+255),w,b
  9336  003316  5977               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9337  003318  517C               	movf	(___flge@ff2+2)& (0+255),w,b
  9338  00331A  5978               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9339  00331C  517D               	movf	(___flge@ff2+3)& (0+255),w,b
  9340  00331E  5979               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9341  003320  B0D8               	btfsc	status,0,c
  9342  003322  EF95  F019         	goto	u6191
  9343  003326  EF97  F019         	goto	u6190
  9344  00332A                     u6191:
  9345  00332A  EF9A  F019         	goto	l6804
  9346  00332E                     u6190:
  9347  00332E                     
  9348                           ; BSR set to: 0
  9349  00332E  90D8               	bcf	status,0,c
  9350  003330  EF9B  F019         	goto	l1623
  9351  003334                     l6804:
  9352                           
  9353                           ; BSR set to: 0
  9354  003334  80D8               	bsf	status,0,c
  9355  003336                     l1623:
  9356                           
  9357                           ; BSR set to: 0
  9358  003336  0012               	return		;funcret
  9359  003338                     __end_of___flge:
  9360                           	callstack 0
  9361                           
  9362 ;; *************** function _SYSTEM_Initialize *****************
  9363 ;; Defined at:
  9364 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;		None
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;		None
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9382 ;;Total ram usage:        0 bytes
  9383 ;; Hardware stack levels used: 1
  9384 ;; Hardware stack levels required when called: 10
  9385 ;; This function calls:
  9386 ;;		_ADCC_Initialize
  9387 ;;		_CCP3_Initialize
  9388 ;;		_CCP4_Initialize
  9389 ;;		_CLC3_Initialize
  9390 ;;		_INTERRUPT_Initialize
  9391 ;;		_OSCILLATOR_Initialize
  9392 ;;		_PIN_MANAGER_Initialize
  9393 ;;		_PMD_Initialize
  9394 ;;		_PWM5_Initialize
  9395 ;;		_PWM6_Initialize
  9396 ;;		_PWM7_Initialize
  9397 ;;		_PWM8_Initialize
  9398 ;;		_SMT1_Initialize
  9399 ;;		_TMR2_Initialize
  9400 ;;		_TMR3_Initialize
  9401 ;;		_TMR4_Initialize
  9402 ;;		_TMR5_Initialize
  9403 ;;		_UART1_Initialize
  9404 ;; This function is called by:
  9405 ;;		_main
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text39
  9410  003EA0                     __ptext39:
  9411                           	callstack 0
  9412  003EA0                     _SYSTEM_Initialize:
  9413                           	callstack 20
  9414  003EA0                     
  9415                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  9416  003EA0  ECDE  F01E         	call	_INTERRUPT_Initialize	;wreg free
  9417                           
  9418                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  9419  003EA4  EC38  F022         	call	_PMD_Initialize	;wreg free
  9420                           
  9421                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9422  003EA8  ECF1  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  9423                           
  9424                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9425  003EAC  ECB9  F022         	call	_OSCILLATOR_Initialize	;wreg free
  9426  003EB0                     
  9427                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  9428  003EB0  EC89  F021         	call	_CCP3_Initialize	;wreg free
  9429  003EB4                     
  9430                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  9431  003EB4  EC0D  F01E         	call	_ADCC_Initialize	;wreg free
  9432                           
  9433                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  9434  003EB8  ECB7  F021         	call	_TMR4_Initialize	;wreg free
  9435  003EBC                     
  9436                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  9437  003EBC  EC2A  F021         	call	_SMT1_Initialize	;wreg free
  9438  003EC0                     
  9439                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  9440  003EC0  EC89  F022         	call	_PWM8_Initialize	;wreg free
  9441  003EC4                     
  9442                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  9443  003EC4  EC7B  F022         	call	_TMR2_Initialize	;wreg free
  9444  003EC8                     
  9445                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  9446  003EC8  ECA1  F022         	call	_PWM6_Initialize	;wreg free
  9447                           
  9448                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  9449  003ECC  EC72  F021         	call	_CCP4_Initialize	;wreg free
  9450  003ED0                     
  9451                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  9452  003ED0  ECCD  F021         	call	_CLC3_Initialize	;wreg free
  9453  003ED4                     
  9454                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  9455  003ED4  EC87  F020         	call	_TMR3_Initialize	;wreg free
  9456                           
  9457                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  9458  003ED8  ECAD  F022         	call	_PWM5_Initialize	;wreg free
  9459  003EDC                     
  9460                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  9461  003EDC  EC75  F01F         	call	_TMR5_Initialize	;wreg free
  9462  003EE0                     
  9463                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  9464  003EE0  EC95  F022         	call	_PWM7_Initialize	;wreg free
  9465                           
  9466                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  9467  003EE4  EC7D  F01C         	call	_UART1_Initialize	;wreg free
  9468  003EE8  0012               	return		;funcret
  9469  003EEA                     __end_of_SYSTEM_Initialize:
  9470                           	callstack 0
  9471                           
  9472 ;; *************** function _UART1_Initialize *****************
  9473 ;; Defined at:
  9474 ;;		line 87 in file "mcc_generated_files/uart1.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;		None
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  1    wreg      void 
  9481 ;; Registers used:
  9482 ;;		wreg, status,2, status,0, cstack
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;Total ram usage:        0 bytes
  9493 ;; Hardware stack levels used: 1
  9494 ;; Hardware stack levels required when called: 9
  9495 ;; This function calls:
  9496 ;;		_UART1_SetErrorHandler
  9497 ;;		_UART1_SetFramingErrorHandler
  9498 ;;		_UART1_SetOverrunErrorHandler
  9499 ;;		_UART1_SetRxInterruptHandler
  9500 ;;		_UART1_SetTxInterruptHandler
  9501 ;; This function is called by:
  9502 ;;		_SYSTEM_Initialize
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text40
  9507  0038FA                     __ptext40:
  9508                           	callstack 0
  9509  0038FA                     _UART1_Initialize:
  9510                           	callstack 20
  9511  0038FA                     
  9512                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  9513  0038FA  0139               	movlb	57	; () banked
  9514  0038FC  9793               	bcf	147,3,b	;volatile
  9515  0038FE                     
  9516                           ; BSR set to: 57
  9517                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  9518  0038FE  0E3A               	movlw	low _UART1_Receive_ISR
  9519  003900  6E20               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  9520  003902  0E38               	movlw	high _UART1_Receive_ISR
  9521  003904  6E21               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  9522  003906  ECDE  F022         	call	_UART1_SetRxInterruptHandler	;wreg free
  9523  00390A                     
  9524                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  9525  00390A  0139               	movlb	57	; () banked
  9526  00390C  9993               	bcf	147,4,b	;volatile
  9527                           
  9528                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  9529  00390E  0E10               	movlw	low _UART1_Transmit_ISR
  9530  003910  6E20               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  9531  003912  0E40               	movlw	high _UART1_Transmit_ISR
  9532  003914  6E21               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  9533  003916  ECD9  F022         	call	_UART1_SetTxInterruptHandler	;wreg free
  9534  00391A                     
  9535                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  9536  00391A  0E00               	movlw	0
  9537  00391C  013D               	movlb	61	; () banked
  9538  00391E  6FEC               	movwf	236,b	;volatile
  9539  003920                     
  9540                           ; BSR set to: 61
  9541                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  9542  003920  0E00               	movlw	0
  9543  003922  6FED               	movwf	237,b	;volatile
  9544  003924                     
  9545                           ; BSR set to: 61
  9546                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  9547  003924  0E00               	movlw	0
  9548  003926  6FEE               	movwf	238,b	;volatile
  9549  003928                     
  9550                           ; BSR set to: 61
  9551                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  9552  003928  0E00               	movlw	0
  9553  00392A  6FEF               	movwf	239,b	;volatile
  9554  00392C                     
  9555                           ; BSR set to: 61
  9556                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  9557  00392C  0E00               	movlw	0
  9558  00392E  6FF0               	movwf	240,b	;volatile
  9559  003930                     
  9560                           ; BSR set to: 61
  9561                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  9562  003930  0E00               	movlw	0
  9563  003932  6FF1               	movwf	241,b	;volatile
  9564  003934                     
  9565                           ; BSR set to: 61
  9566                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  9567  003934  0EB0               	movlw	176
  9568  003936  6FF2               	movwf	242,b	;volatile
  9569  003938                     
  9570                           ; BSR set to: 61
  9571                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  9572  003938  0E80               	movlw	128
  9573  00393A  6FF3               	movwf	243,b	;volatile
  9574  00393C                     
  9575                           ; BSR set to: 61
  9576                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  9577  00393C  0E00               	movlw	0
  9578  00393E  6FF4               	movwf	244,b	;volatile
  9579  003940                     
  9580                           ; BSR set to: 61
  9581                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  9582  003940  0E8A               	movlw	138
  9583  003942  6FF5               	movwf	245,b	;volatile
  9584  003944                     
  9585                           ; BSR set to: 61
  9586                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  9587  003944  0E00               	movlw	0
  9588  003946  6FF6               	movwf	246,b	;volatile
  9589  003948                     
  9590                           ; BSR set to: 61
  9591                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  9592  003948  0E00               	movlw	0
  9593  00394A  6FF7               	movwf	247,b	;volatile
  9594  00394C                     
  9595                           ; BSR set to: 61
  9596                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  9597  00394C  0E00               	movlw	0
  9598  00394E  6FF8               	movwf	248,b	;volatile
  9599  003950                     
  9600                           ; BSR set to: 61
  9601                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  9602  003950  0E00               	movlw	0
  9603  003952  6FF9               	movwf	249,b	;volatile
  9604  003954                     
  9605                           ; BSR set to: 61
  9606                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  9607  003954  0E00               	movlw	0
  9608  003956  6FFA               	movwf	250,b	;volatile
  9609  003958                     
  9610                           ; BSR set to: 61
  9611                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  9612  003958  0E1A               	movlw	low _UART1_DefaultFramingErrorHandler
  9613  00395A  6E20               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  9614  00395C  0E46               	movlw	high _UART1_DefaultFramingErrorHandler
  9615  00395E  6E21               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  9616  003960  ECE8  F022         	call	_UART1_SetFramingErrorHandler	;wreg free
  9617  003964                     
  9618                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  9619  003964  0E18               	movlw	low _UART1_DefaultOverrunErrorHandler
  9620  003966  6E20               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  9621  003968  0E46               	movlw	high _UART1_DefaultOverrunErrorHandler
  9622  00396A  6E21               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9623  00396C  ECE3  F022         	call	_UART1_SetOverrunErrorHandler	;wreg free
  9624  003970                     
  9625                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  9626  003970  0E0C               	movlw	low _UART1_DefaultErrorHandler
  9627  003972  6E20               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  9628  003974  0E46               	movlw	high _UART1_DefaultErrorHandler
  9629  003976  6E21               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  9630  003978  ECED  F022         	call	_UART1_SetErrorHandler	;wreg free
  9631                           
  9632                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  9633  00397C  0E00               	movlw	0
  9634  00397E  6E2E               	movwf	_uart1RxLastError^0,c	;volatile
  9635                           
  9636                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  9637  003980  0E00               	movlw	0
  9638  003982  6E33               	movwf	_uart1TxHead^0,c	;volatile
  9639                           
  9640                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  9641  003984  0E00               	movlw	0
  9642  003986  6E32               	movwf	_uart1TxTail^0,c	;volatile
  9643                           
  9644                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  9645  003988  0E08               	movlw	8
  9646  00398A  6E40               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  9647                           
  9648                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  9649  00398C  0E00               	movlw	0
  9650  00398E  6E31               	movwf	_uart1RxHead^0,c	;volatile
  9651                           
  9652                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  9653  003990  0E00               	movlw	0
  9654  003992  6E30               	movwf	_uart1RxTail^0,c	;volatile
  9655                           
  9656                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  9657  003994  0E00               	movlw	0
  9658  003996  6E2F               	movwf	_uart1RxCount^0,c	;volatile
  9659  003998                     
  9660                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  9661  003998  0139               	movlb	57	; () banked
  9662  00399A  8793               	bsf	147,3,b	;volatile
  9663  00399C                     
  9664                           ; BSR set to: 57
  9665  00399C  0012               	return		;funcret
  9666  00399E                     __end_of_UART1_Initialize:
  9667                           	callstack 0
  9668                           
  9669 ;; *************** function _UART1_SetTxInterruptHandler *****************
  9670 ;; Defined at:
  9671 ;;		line 333 in file "mcc_generated_files/uart1.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9674 ;;		 -> UART1_Transmit_ISR(1), 
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1    wreg      void 
  9679 ;; Registers used:
  9680 ;;		wreg, status,2, status,0
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;Total ram usage:        2 bytes
  9691 ;; Hardware stack levels used: 1
  9692 ;; Hardware stack levels required when called: 8
  9693 ;; This function calls:
  9694 ;;		Nothing
  9695 ;; This function is called by:
  9696 ;;		_UART1_Initialize
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text41
  9701  0045B2                     __ptext41:
  9702                           	callstack 0
  9703  0045B2                     _UART1_SetTxInterruptHandler:
  9704                           	callstack 20
  9705  0045B2                     
  9706                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  9707  0045B2  C020  F03C         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  9708  0045B6  C021  F03D         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  9709  0045BA  0012               	return		;funcret
  9710  0045BC                     __end_of_UART1_SetTxInterruptHandler:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function _UART1_SetRxInterruptHandler *****************
  9714 ;; Defined at:
  9715 ;;		line 329 in file "mcc_generated_files/uart1.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9718 ;;		 -> UART1_Receive_ISR(1), 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;		None
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;Total ram usage:        2 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 8
  9737 ;; This function calls:
  9738 ;;		Nothing
  9739 ;; This function is called by:
  9740 ;;		_UART1_Initialize
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           	psect	text42
  9745  0045BC                     __ptext42:
  9746                           	callstack 0
  9747  0045BC                     _UART1_SetRxInterruptHandler:
  9748                           	callstack 20
  9749  0045BC                     
  9750                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  9751  0045BC  C020  F03E         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  9752  0045C0  C021  F03F         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  9753  0045C4  0012               	return		;funcret
  9754  0045C6                     __end_of_UART1_SetRxInterruptHandler:
  9755                           	callstack 0
  9756                           
  9757 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  9758 ;; Defined at:
  9759 ;;		line 319 in file "mcc_generated_files/uart1.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9762 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;Total ram usage:        2 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; Hardware stack levels required when called: 8
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_UART1_Initialize
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text43
  9789  0045C6                     __ptext43:
  9790                           	callstack 0
  9791  0045C6                     _UART1_SetOverrunErrorHandler:
  9792                           	callstack 20
  9793  0045C6                     
  9794                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  9795  0045C6  C020  F0FB         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  9796  0045CA  C021  F0FC         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  9797  0045CE  0012               	return		;funcret
  9798  0045D0                     __end_of_UART1_SetOverrunErrorHandler:
  9799                           	callstack 0
  9800                           
  9801 ;; *************** function _UART1_SetFramingErrorHandler *****************
  9802 ;; Defined at:
  9803 ;;		line 315 in file "mcc_generated_files/uart1.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9806 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;Total ram usage:        2 bytes
  9823 ;; Hardware stack levels used: 1
  9824 ;; Hardware stack levels required when called: 8
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_UART1_Initialize
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text44
  9833  0045D0                     __ptext44:
  9834                           	callstack 0
  9835  0045D0                     _UART1_SetFramingErrorHandler:
  9836                           	callstack 20
  9837  0045D0                     
  9838                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  9839  0045D0  C020  F0FD         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  9840  0045D4  C021  F0FE         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  9841  0045D8  0012               	return		;funcret
  9842  0045DA                     __end_of_UART1_SetFramingErrorHandler:
  9843                           	callstack 0
  9844                           
  9845 ;; *************** function _UART1_SetErrorHandler *****************
  9846 ;; Defined at:
  9847 ;;		line 323 in file "mcc_generated_files/uart1.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9850 ;;		 -> UART1_DefaultErrorHandler(1), 
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;		None
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  1    wreg      void 
  9855 ;; Registers used:
  9856 ;;		wreg, status,2, status,0
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9866 ;;Total ram usage:        2 bytes
  9867 ;; Hardware stack levels used: 1
  9868 ;; Hardware stack levels required when called: 8
  9869 ;; This function calls:
  9870 ;;		Nothing
  9871 ;; This function is called by:
  9872 ;;		_UART1_Initialize
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text45
  9877  0045DA                     __ptext45:
  9878                           	callstack 0
  9879  0045DA                     _UART1_SetErrorHandler:
  9880                           	callstack 20
  9881  0045DA                     
  9882                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  9883  0045DA  C020  F0F9         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  9884  0045DE  C021  F0FA         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  9885  0045E2  0012               	return		;funcret
  9886  0045E4                     __end_of_UART1_SetErrorHandler:
  9887                           	callstack 0
  9888                           
  9889 ;; *************** function _TMR5_Initialize *****************
  9890 ;; Defined at:
  9891 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;		None
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;		None
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;Total ram usage:        2 bytes
  9910 ;; Hardware stack levels used: 1
  9911 ;; Hardware stack levels required when called: 9
  9912 ;; This function calls:
  9913 ;;		_TMR5_SetGateInterruptHandler
  9914 ;; This function is called by:
  9915 ;;		_SYSTEM_Initialize
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           	psect	text46
  9920  003EEA                     __ptext46:
  9921                           	callstack 0
  9922  003EEA                     _TMR5_Initialize:
  9923                           	callstack 20
  9924  003EEA                     
  9925                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  9926  003EEA  0EC0               	movlw	192
  9927  003EEC  6E9B               	movwf	155,c	;volatile
  9928                           
  9929                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  9930  003EEE  0E00               	movlw	0
  9931  003EF0  6E9C               	movwf	156,c	;volatile
  9932                           
  9933                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  9934  003EF2  0E05               	movlw	5
  9935  003EF4  6E9D               	movwf	157,c	;volatile
  9936                           
  9937                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  9938  003EF6  0E00               	movlw	0
  9939  003EF8  6E99               	movwf	153,c	;volatile
  9940                           
  9941                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  9942  003EFA  0E00               	movlw	0
  9943  003EFC  6E98               	movwf	152,c	;volatile
  9944  003EFE                     
  9945                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  9946  003EFE  0139               	movlb	57	; () banked
  9947  003F00  9DA8               	bcf	168,6,b	;volatile
  9948  003F02                     
  9949                           ; BSR set to: 57
  9950                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9951  003F02  5098               	movf	152,w,c	;volatile
  9952  003F04  006F FE64  F060    	movff	16281,??_TMR5_Initialize	;volatile
  9953  003F0A  0100               	movlb	0	; () banked
  9954  003F0C  6B61               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  9955  003F0E  C060  F061         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  9956  003F12  6B60               	clrf	??_TMR5_Initialize& (0+255),b
  9957  003F14  1160               	iorwf	??_TMR5_Initialize& (0+255),w,b
  9958  003F16  6E3A               	movwf	_timer5ReloadVal^0,c	;volatile
  9959  003F18  5161               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  9960  003F1A  6E3B               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
  9961  003F1C                     
  9962                           ; BSR set to: 0
  9963                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  9964  003F1C  0139               	movlb	57	; () banked
  9965  003F1E  9FA8               	bcf	168,7,b	;volatile
  9966  003F20                     
  9967                           ; BSR set to: 57
  9968                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  9969  003F20  8F98               	bsf	152,7,b	;volatile
  9970  003F22                     
  9971                           ; BSR set to: 57
  9972                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  9973  003F22  0ED8               	movlw	low _TMR5_DefaultGateInterruptHandler
  9974  003F24  6E20               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  9975  003F26  0E44               	movlw	high _TMR5_DefaultGateInterruptHandler
  9976  003F28  6E21               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  9977  003F2A  ECF2  F022         	call	_TMR5_SetGateInterruptHandler	;wreg free
  9978  003F2E                     
  9979                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  9980  003F2E  0E03               	movlw	3
  9981  003F30  6E9A               	movwf	154,c	;volatile
  9982  003F32  0012               	return		;funcret
  9983  003F34                     __end_of_TMR5_Initialize:
  9984                           	callstack 0
  9985                           
  9986 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  9987 ;; Defined at:
  9988 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9991 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;		None
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1    wreg      void 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;Total ram usage:        2 bytes
 10008 ;; Hardware stack levels used: 1
 10009 ;; Hardware stack levels required when called: 8
 10010 ;; This function calls:
 10011 ;;		Nothing
 10012 ;; This function is called by:
 10013 ;;		_TMR5_Initialize
 10014 ;; This function uses a non-reentrant model
 10015 ;;
 10016                           
 10017                           	psect	text47
 10018  0045E4                     __ptext47:
 10019                           	callstack 0
 10020  0045E4                     _TMR5_SetGateInterruptHandler:
 10021                           	callstack 20
 10022  0045E4                     
 10023                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 10024  0045E4  C020  F038         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 10025  0045E8  C021  F039         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 10026  0045EC  0012               	return		;funcret
 10027  0045EE                     __end_of_TMR5_SetGateInterruptHandler:
 10028                           	callstack 0
 10029                           
 10030 ;; *************** function _TMR4_Initialize *****************
 10031 ;; Defined at:
 10032 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;		None
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  1    wreg      void 
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0, cstack
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;Total ram usage:        0 bytes
 10051 ;; Hardware stack levels used: 1
 10052 ;; Hardware stack levels required when called: 9
 10053 ;; This function calls:
 10054 ;;		_TMR4_SetInterruptHandler
 10055 ;; This function is called by:
 10056 ;;		_SYSTEM_Initialize
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text48
 10061  00436E                     __ptext48:
 10062                           	callstack 0
 10063  00436E                     _TMR4_Initialize:
 10064                           	callstack 20
 10065  00436E                     
 10066                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 10067  00436E  0E01               	movlw	1
 10068  004370  6EA2               	movwf	162,c	;volatile
 10069                           
 10070                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 10071  004372  0E00               	movlw	0
 10072  004374  6EA1               	movwf	161,c	;volatile
 10073                           
 10074                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 10075  004376  0E00               	movlw	0
 10076  004378  6EA3               	movwf	163,c	;volatile
 10077                           
 10078                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 10079  00437A  0EF9               	movlw	249
 10080  00437C  6E9F               	movwf	159,c	;volatile
 10081                           
 10082                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 10083  00437E  0E00               	movlw	0
 10084  004380  6E9E               	movwf	158,c	;volatile
 10085  004382                     
 10086                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 10087  004382  0139               	movlb	57	; () banked
 10088  004384  91A7               	bcf	167,0,b	;volatile
 10089  004386                     
 10090                           ; BSR set to: 57
 10091                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 10092  004386  8197               	bsf	151,0,b	;volatile
 10093  004388                     
 10094                           ; BSR set to: 57
 10095                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 10096  004388  0E1C               	movlw	low _TMR4_DefaultInterruptHandler
 10097  00438A  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 10098  00438C  0E46               	movlw	high _TMR4_DefaultInterruptHandler
 10099  00438E  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 10100  004390  ECF7  F022         	call	_TMR4_SetInterruptHandler	;wreg free
 10101  004394                     
 10102                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 10103  004394  0EE0               	movlw	224
 10104  004396  6EA0               	movwf	160,c	;volatile
 10105  004398  0012               	return		;funcret
 10106  00439A                     __end_of_TMR4_Initialize:
 10107                           	callstack 0
 10108                           
 10109 ;; *************** function _TMR4_SetInterruptHandler *****************
 10110 ;; Defined at:
 10111 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
 10114 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, status,2, status,0
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10130 ;;Total ram usage:        2 bytes
 10131 ;; Hardware stack levels used: 1
 10132 ;; Hardware stack levels required when called: 8
 10133 ;; This function calls:
 10134 ;;		Nothing
 10135 ;; This function is called by:
 10136 ;;		_TMR4_Initialize
 10137 ;;		_main
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text49
 10142  0045EE                     __ptext49:
 10143                           	callstack 0
 10144  0045EE                     _TMR4_SetInterruptHandler:
 10145                           	callstack 22
 10146  0045EE                     
 10147                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 10148  0045EE  C020  F0F1         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 10149  0045F2  C021  F0F2         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 10150  0045F6  0012               	return		;funcret
 10151  0045F8                     __end_of_TMR4_SetInterruptHandler:
 10152                           	callstack 0
 10153                           
 10154 ;; *************** function _TMR3_Initialize *****************
 10155 ;; Defined at:
 10156 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;		None
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;		None
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  1    wreg      void 
 10163 ;; Registers used:
 10164 ;;		wreg, status,2, status,0
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10174 ;;Total ram usage:        2 bytes
 10175 ;; Hardware stack levels used: 1
 10176 ;; Hardware stack levels required when called: 8
 10177 ;; This function calls:
 10178 ;;		Nothing
 10179 ;; This function is called by:
 10180 ;;		_SYSTEM_Initialize
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           	psect	text50
 10185  00410E                     __ptext50:
 10186                           	callstack 0
 10187  00410E                     _TMR3_Initialize:
 10188                           	callstack 21
 10189  00410E                     
 10190                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 10191  00410E  0E00               	movlw	0
 10192  004110  6EA7               	movwf	167,c	;volatile
 10193                           
 10194                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 10195  004112  0E00               	movlw	0
 10196  004114  6EA8               	movwf	168,c	;volatile
 10197                           
 10198                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 10199  004116  0E05               	movlw	5
 10200  004118  6EA9               	movwf	169,c	;volatile
 10201                           
 10202                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 10203  00411A  0E00               	movlw	0
 10204  00411C  6EA5               	movwf	165,c	;volatile
 10205                           
 10206                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 10207  00411E  0E00               	movlw	0
 10208  004120  6EA4               	movwf	164,c	;volatile
 10209  004122                     
 10210                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 10211  004122  0139               	movlb	57	; () banked
 10212  004124  9DA6               	bcf	166,6,b	;volatile
 10213  004126                     
 10214                           ; BSR set to: 57
 10215                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 10216  004126  50A4               	movf	164,w,c	;volatile
 10217  004128  006F FE94  F020    	movff	16293,??_TMR3_Initialize	;volatile
 10218  00412E  6A21               	clrf	(??_TMR3_Initialize+1)^0,c
 10219  004130  C020  F021         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 10220  004134  6A20               	clrf	??_TMR3_Initialize^0,c
 10221  004136  1020               	iorwf	??_TMR3_Initialize^0,w,c
 10222  004138  0100               	movlb	0	; () banked
 10223  00413A  6FF3               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 10224  00413C  5021               	movf	(??_TMR3_Initialize+1)^0,w,c
 10225  00413E  6FF4               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 10226  004140                     
 10227                           ; BSR set to: 0
 10228                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 10229  004140  0E01               	movlw	1
 10230  004142  6EA6               	movwf	166,c	;volatile
 10231  004144                     
 10232                           ; BSR set to: 0
 10233  004144  0012               	return		;funcret
 10234  004146                     __end_of_TMR3_Initialize:
 10235                           	callstack 0
 10236                           
 10237 ;; *************** function _TMR2_Initialize *****************
 10238 ;; Defined at:
 10239 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;Total ram usage:        0 bytes
 10258 ;; Hardware stack levels used: 1
 10259 ;; Hardware stack levels required when called: 8
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_SYSTEM_Initialize
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text51
 10268  0044F6                     __ptext51:
 10269                           	callstack 0
 10270  0044F6                     _TMR2_Initialize:
 10271                           	callstack 21
 10272  0044F6                     
 10273                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 10274  0044F6  0E05               	movlw	5
 10275  0044F8  6EAE               	movwf	174,c	;volatile
 10276                           
 10277                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 10278  0044FA  0E00               	movlw	0
 10279  0044FC  6EAD               	movwf	173,c	;volatile
 10280                           
 10281                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 10282  0044FE  0E00               	movlw	0
 10283  004500  6EAF               	movwf	175,c	;volatile
 10284  004502                     
 10285                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 10286  004502  68AB               	setf	171,c	;volatile
 10287                           
 10288                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 10289  004504  0E00               	movlw	0
 10290  004506  6EAA               	movwf	170,c	;volatile
 10291  004508                     
 10292                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 10293  004508  0139               	movlb	57	; () banked
 10294  00450A  95A4               	bcf	164,2,b	;volatile
 10295                           
 10296                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 10297  00450C  0EB0               	movlw	176
 10298  00450E  6EAC               	movwf	172,c	;volatile
 10299  004510                     
 10300                           ; BSR set to: 57
 10301  004510  0012               	return		;funcret
 10302  004512                     __end_of_TMR2_Initialize:
 10303                           	callstack 0
 10304                           
 10305 ;; *************** function _SMT1_Initialize *****************
 10306 ;; Defined at:
 10307 ;;		line 60 in file "mcc_generated_files/smt1.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;		None
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;                  1    wreg      void 
 10314 ;; Registers used:
 10315 ;;		wreg, status,2
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;Total ram usage:        0 bytes
 10326 ;; Hardware stack levels used: 1
 10327 ;; Hardware stack levels required when called: 8
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_SYSTEM_Initialize
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           	psect	text52
 10336  004254                     __ptext52:
 10337                           	callstack 0
 10338  004254                     _SMT1_Initialize:
 10339                           	callstack 21
 10340  004254                     
 10341                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 10342  004254  0E80               	movlw	128
 10343  004256  013F               	movlb	63	; () banked
 10344  004258  6F1E               	movwf	30,b	;volatile
 10345                           
 10346                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 10347  00425A  0E42               	movlw	66
 10348  00425C  6F1F               	movwf	31,b	;volatile
 10349                           
 10350                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 10351  00425E  0E00               	movlw	0
 10352  004260  6F20               	movwf	32,b	;volatile
 10353                           
 10354                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 10355  004262  0E04               	movlw	4
 10356  004264  6F21               	movwf	33,b	;volatile
 10357                           
 10358                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 10359  004266  0E00               	movlw	0
 10360  004268  6F23               	movwf	35,b	;volatile
 10361                           
 10362                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 10363  00426A  0E00               	movlw	0
 10364  00426C  6F22               	movwf	34,b	;volatile
 10365                           
 10366                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 10367  00426E  0E01               	movlw	1
 10368  004270  6F1D               	movwf	29,b	;volatile
 10369  004272                     
 10370                           ; BSR set to: 63
 10371                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 10372  004272  691C               	setf	28,b	;volatile
 10373  004274                     
 10374                           ; BSR set to: 63
 10375                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 10376  004274  691B               	setf	27,b	;volatile
 10377  004276                     
 10378                           ; BSR set to: 63
 10379                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 10380  004276  0139               	movlb	57	; () banked
 10381  004278  8B91               	bsf	145,5,b	;volatile
 10382  00427A                     
 10383                           ; BSR set to: 57
 10384                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 10385  00427A  8F91               	bsf	145,7,b	;volatile
 10386  00427C                     
 10387                           ; BSR set to: 57
 10388                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 10389  00427C  8D91               	bsf	145,6,b	;volatile
 10390  00427E                     
 10391                           ; BSR set to: 57
 10392                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 10393  00427E  013F               	movlb	63	; () banked
 10394  004280  8F1F               	bsf	31,7,b	;volatile
 10395  004282                     
 10396                           ; BSR set to: 63
 10397  004282  0012               	return		;funcret
 10398  004284                     __end_of_SMT1_Initialize:
 10399                           	callstack 0
 10400                           
 10401 ;; *************** function _PWM8_Initialize *****************
 10402 ;; Defined at:
 10403 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;		None
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;Total ram usage:        0 bytes
 10422 ;; Hardware stack levels used: 1
 10423 ;; Hardware stack levels required when called: 8
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_SYSTEM_Initialize
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text53
 10432  004512                     __ptext53:
 10433                           	callstack 0
 10434  004512                     _PWM8_Initialize:
 10435                           	callstack 21
 10436  004512                     
 10437                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 10438  004512  0E80               	movlw	128
 10439  004514  6E62               	movwf	98,c	;volatile
 10440                           
 10441                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 10442  004516  0E00               	movlw	0
 10443  004518  6E61               	movwf	97,c	;volatile
 10444                           
 10445                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 10446  00451A  0E00               	movlw	0
 10447  00451C  6E60               	movwf	96,c	;volatile
 10448                           
 10449                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 10450  00451E  013F               	movlb	63	; () banked
 10451  004520  515F               	movf	95,w,b	;volatile
 10452  004522  0B3F               	andlw	-193
 10453  004524  0980               	iorlw	128
 10454  004526  6F5F               	movwf	95,b	;volatile
 10455  004528                     
 10456                           ; BSR set to: 63
 10457  004528  0012               	return		;funcret
 10458  00452A                     __end_of_PWM8_Initialize:
 10459                           	callstack 0
 10460                           
 10461 ;; *************** function _PWM7_Initialize *****************
 10462 ;; Defined at:
 10463 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 10464 ;; Parameters:    Size  Location     Type
 10465 ;;		None
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;		None
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      void 
 10470 ;; Registers used:
 10471 ;;		wreg, status,2
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10481 ;;Total ram usage:        0 bytes
 10482 ;; Hardware stack levels used: 1
 10483 ;; Hardware stack levels required when called: 8
 10484 ;; This function calls:
 10485 ;;		Nothing
 10486 ;; This function is called by:
 10487 ;;		_SYSTEM_Initialize
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text54
 10492  00452A                     __ptext54:
 10493                           	callstack 0
 10494  00452A                     _PWM7_Initialize:
 10495                           	callstack 21
 10496  00452A                     
 10497                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 10498  00452A  0E80               	movlw	128
 10499  00452C  6E66               	movwf	102,c	;volatile
 10500                           
 10501                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 10502  00452E  0E00               	movlw	0
 10503  004530  6E65               	movwf	101,c	;volatile
 10504                           
 10505                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 10506  004532  0E00               	movlw	0
 10507  004534  6E64               	movwf	100,c	;volatile
 10508                           
 10509                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 10510  004536  013F               	movlb	63	; () banked
 10511  004538  515F               	movf	95,w,b	;volatile
 10512  00453A  0BCF               	andlw	-49
 10513  00453C  0920               	iorlw	32
 10514  00453E  6F5F               	movwf	95,b	;volatile
 10515  004540                     
 10516                           ; BSR set to: 63
 10517  004540  0012               	return		;funcret
 10518  004542                     __end_of_PWM7_Initialize:
 10519                           	callstack 0
 10520                           
 10521 ;; *************** function _PWM6_Initialize *****************
 10522 ;; Defined at:
 10523 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10524 ;; Parameters:    Size  Location     Type
 10525 ;;		None
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;		None
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  1    wreg      void 
 10530 ;; Registers used:
 10531 ;;		wreg, status,2
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10541 ;;Total ram usage:        0 bytes
 10542 ;; Hardware stack levels used: 1
 10543 ;; Hardware stack levels required when called: 8
 10544 ;; This function calls:
 10545 ;;		Nothing
 10546 ;; This function is called by:
 10547 ;;		_SYSTEM_Initialize
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           	psect	text55
 10552  004542                     __ptext55:
 10553                           	callstack 0
 10554  004542                     _PWM6_Initialize:
 10555                           	callstack 21
 10556  004542                     
 10557                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 10558  004542  0E80               	movlw	128
 10559  004544  6E6A               	movwf	106,c	;volatile
 10560                           
 10561                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 10562  004546  0E59               	movlw	89
 10563  004548  6E69               	movwf	105,c	;volatile
 10564                           
 10565                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 10566  00454A  0E40               	movlw	64
 10567  00454C  6E68               	movwf	104,c	;volatile
 10568                           
 10569                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 10570  00454E  013F               	movlb	63	; () banked
 10571  004550  515F               	movf	95,w,b	;volatile
 10572  004552  0BF3               	andlw	-13
 10573  004554  0904               	iorlw	4
 10574  004556  6F5F               	movwf	95,b	;volatile
 10575  004558                     
 10576                           ; BSR set to: 63
 10577  004558  0012               	return		;funcret
 10578  00455A                     __end_of_PWM6_Initialize:
 10579                           	callstack 0
 10580                           
 10581 ;; *************** function _PWM5_Initialize *****************
 10582 ;; Defined at:
 10583 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;		None
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;		None
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  1    wreg      void 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10601 ;;Total ram usage:        0 bytes
 10602 ;; Hardware stack levels used: 1
 10603 ;; Hardware stack levels required when called: 8
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_SYSTEM_Initialize
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text56
 10612  00455A                     __ptext56:
 10613                           	callstack 0
 10614  00455A                     _PWM5_Initialize:
 10615                           	callstack 21
 10616  00455A                     
 10617                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 10618  00455A  0E80               	movlw	128
 10619  00455C  6E6E               	movwf	110,c	;volatile
 10620                           
 10621                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 10622  00455E  0E59               	movlw	89
 10623  004560  6E6D               	movwf	109,c	;volatile
 10624                           
 10625                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 10626  004562  0E40               	movlw	64
 10627  004564  6E6C               	movwf	108,c	;volatile
 10628                           
 10629                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 10630  004566  013F               	movlb	63	; () banked
 10631  004568  515F               	movf	95,w,b	;volatile
 10632  00456A  0BFC               	andlw	-4
 10633  00456C  0901               	iorlw	1
 10634  00456E  6F5F               	movwf	95,b	;volatile
 10635  004570                     
 10636                           ; BSR set to: 63
 10637  004570  0012               	return		;funcret
 10638  004572                     __end_of_PWM5_Initialize:
 10639                           	callstack 0
 10640                           
 10641 ;; *************** function _PMD_Initialize *****************
 10642 ;; Defined at:
 10643 ;;		line 86 in file "mcc_generated_files/mcc.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;		None
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;		None
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      void 
 10650 ;; Registers used:
 10651 ;;		wreg, status,2
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10661 ;;Total ram usage:        0 bytes
 10662 ;; Hardware stack levels used: 1
 10663 ;; Hardware stack levels required when called: 8
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_SYSTEM_Initialize
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text57
 10672  004470                     __ptext57:
 10673                           	callstack 0
 10674  004470                     _PMD_Initialize:
 10675                           	callstack 21
 10676  004470                     
 10677                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 10678  004470  0E00               	movlw	0
 10679  004472  0139               	movlb	57	; () banked
 10680  004474  6FC0               	movwf	192,b	;volatile
 10681                           
 10682                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 10683  004476  0E00               	movlw	0
 10684  004478  6FC1               	movwf	193,b	;volatile
 10685                           
 10686                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 10687  00447A  0E00               	movlw	0
 10688  00447C  6FC2               	movwf	194,b	;volatile
 10689                           
 10690                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 10691  00447E  0E00               	movlw	0
 10692  004480  6FC3               	movwf	195,b	;volatile
 10693                           
 10694                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 10695  004482  0E00               	movlw	0
 10696  004484  6FC4               	movwf	196,b	;volatile
 10697                           
 10698                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 10699  004486  0E00               	movlw	0
 10700  004488  6FC5               	movwf	197,b	;volatile
 10701                           
 10702                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 10703  00448A  0E00               	movlw	0
 10704  00448C  6FC6               	movwf	198,b	;volatile
 10705                           
 10706                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 10707  00448E  0E00               	movlw	0
 10708  004490  6FC7               	movwf	199,b	;volatile
 10709  004492                     
 10710                           ; BSR set to: 57
 10711  004492  0012               	return		;funcret
 10712  004494                     __end_of_PMD_Initialize:
 10713                           	callstack 0
 10714                           
 10715 ;; *************** function _PIN_MANAGER_Initialize *****************
 10716 ;; Defined at:
 10717 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;		None
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      void 
 10724 ;; Registers used:
 10725 ;;		wreg, status,2
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;Total ram usage:        0 bytes
 10736 ;; Hardware stack levels used: 1
 10737 ;; Hardware stack levels required when called: 8
 10738 ;; This function calls:
 10739 ;;		Nothing
 10740 ;; This function is called by:
 10741 ;;		_SYSTEM_Initialize
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           	psect	text58
 10746  0035E2                     __ptext58:
 10747                           	callstack 0
 10748  0035E2                     _PIN_MANAGER_Initialize:
 10749                           	callstack 21
 10750  0035E2                     
 10751                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 10752  0035E2  0E00               	movlw	0
 10753  0035E4  6EBE               	movwf	190,c	;volatile
 10754                           
 10755                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 10756  0035E6  0E00               	movlw	0
 10757  0035E8  6EBD               	movwf	189,c	;volatile
 10758                           
 10759                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 10760  0035EA  0E24               	movlw	36
 10761  0035EC  6EBA               	movwf	186,c	;volatile
 10762                           
 10763                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 10764  0035EE  0E00               	movlw	0
 10765  0035F0  6EBB               	movwf	187,c	;volatile
 10766                           
 10767                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 10768  0035F2  0E00               	movlw	0
 10769  0035F4  6EBC               	movwf	188,c	;volatile
 10770                           
 10771                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 10772  0035F6  0E07               	movlw	7
 10773  0035F8  6EC6               	movwf	198,c	;volatile
 10774                           
 10775                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 10776  0035FA  0EC0               	movlw	192
 10777  0035FC  6EC2               	movwf	194,c	;volatile
 10778                           
 10779                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 10780  0035FE  0EF7               	movlw	247
 10781  003600  6EC3               	movwf	195,c	;volatile
 10782  003602                     
 10783                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 10784  003602  68C4               	setf	196,c	;volatile
 10785  003604                     
 10786                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 10787  003604  68C5               	setf	197,c	;volatile
 10788                           
 10789                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 10790  003606  0E1F               	movlw	31
 10791  003608  013A               	movlb	58	; () banked
 10792  00360A  6F70               	movwf	112,b	;volatile
 10793  00360C                     
 10794                           ; BSR set to: 58
 10795                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 10796  00360C  6960               	setf	96,b	;volatile
 10797                           
 10798                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 10799  00360E  0EC0               	movlw	192
 10800  003610  6F50               	movwf	80,b	;volatile
 10801                           
 10802                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 10803  003612  0E07               	movlw	7
 10804  003614  6F80               	movwf	128,b	;volatile
 10805                           
 10806                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 10807  003616  0E7F               	movlw	127
 10808  003618  6F40               	movwf	64,b	;volatile
 10809                           
 10810                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 10811  00361A  0E00               	movlw	0
 10812  00361C  6F71               	movwf	113,b	;volatile
 10813                           
 10814                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 10815  00361E  0E00               	movlw	0
 10816  003620  6F81               	movwf	129,b	;volatile
 10817                           
 10818                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10819  003622  0E00               	movlw	0
 10820  003624  6F51               	movwf	81,b	;volatile
 10821                           
 10822                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 10823  003626  0E00               	movlw	0
 10824  003628  6F41               	movwf	65,b	;volatile
 10825                           
 10826                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 10827  00362A  0E00               	movlw	0
 10828  00362C  6F61               	movwf	97,b	;volatile
 10829                           
 10830                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 10831  00362E  0E00               	movlw	0
 10832  003630  6F5A               	movwf	90,b	;volatile
 10833                           
 10834                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 10835  003632  0E00               	movlw	0
 10836  003634  6F5B               	movwf	91,b	;volatile
 10837                           
 10838                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 10839  003636  0E00               	movlw	0
 10840  003638  6F6A               	movwf	106,b	;volatile
 10841                           
 10842                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 10843  00363A  0E00               	movlw	0
 10844  00363C  6F6B               	movwf	107,b	;volatile
 10845                           
 10846                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 10847  00363E  0E00               	movlw	0
 10848  003640  6F7A               	movwf	122,b	;volatile
 10849                           
 10850                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 10851  003642  0E00               	movlw	0
 10852  003644  6F7B               	movwf	123,b	;volatile
 10853                           
 10854                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 10855  003646  0E00               	movlw	0
 10856  003648  6F82               	movwf	130,b	;volatile
 10857                           
 10858                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 10859  00364A  0E00               	movlw	0
 10860  00364C  6F42               	movwf	66,b	;volatile
 10861                           
 10862                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 10863  00364E  0E00               	movlw	0
 10864  003650  6F52               	movwf	82,b	;volatile
 10865                           
 10866                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 10867  003652  0E00               	movlw	0
 10868  003654  6F62               	movwf	98,b	;volatile
 10869                           
 10870                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 10871  003656  0E00               	movlw	0
 10872  003658  6F72               	movwf	114,b	;volatile
 10873  00365A                     
 10874                           ; BSR set to: 58
 10875                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 10876  00365A  6943               	setf	67,b	;volatile
 10877  00365C                     
 10878                           ; BSR set to: 58
 10879                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 10880  00365C  6953               	setf	83,b	;volatile
 10881  00365E                     
 10882                           ; BSR set to: 58
 10883                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 10884  00365E  6963               	setf	99,b	;volatile
 10885  003660                     
 10886                           ; BSR set to: 58
 10887                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 10888  003660  6973               	setf	115,b	;volatile
 10889                           
 10890                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 10891  003662  0E07               	movlw	7
 10892  003664  6F83               	movwf	131,b	;volatile
 10893  003666                     
 10894                           ; BSR set to: 58
 10895                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 10896  003666  6944               	setf	68,b	;volatile
 10897  003668                     
 10898                           ; BSR set to: 58
 10899                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 10900  003668  6954               	setf	84,b	;volatile
 10901  00366A                     
 10902                           ; BSR set to: 58
 10903                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 10904  00366A  6964               	setf	100,b	;volatile
 10905  00366C                     
 10906                           ; BSR set to: 58
 10907                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 10908  00366C  6974               	setf	116,b	;volatile
 10909                           
 10910                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 10911  00366E  0E0F               	movlw	15
 10912  003670  6F84               	movwf	132,b	;volatile
 10913                           
 10914                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 10915  003672  0E1F               	movlw	31
 10916  003674  6FCF               	movwf	207,b	;volatile
 10917                           
 10918                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 10919  003676  0E09               	movlw	9
 10920  003678  6FDC               	movwf	220,b	;volatile
 10921                           
 10922                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 10923  00367A  0E0E               	movlw	14
 10924  00367C  6F01               	movwf	1,b	;volatile
 10925                           
 10926                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 10927  00367E  0E0A               	movlw	10
 10928  003680  6FE5               	movwf	229,b	;volatile
 10929                           
 10930                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 10931  003682  0E0D               	movlw	13
 10932  003684  6F00               	movwf	0,b	;volatile
 10933                           
 10934                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 10935  003686  0E1D               	movlw	29
 10936  003688  6FC9               	movwf	201,b	;volatile
 10937                           
 10938                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 10939  00368A  0E10               	movlw	16
 10940  00368C  6F04               	movwf	4,b	;volatile
 10941                           
 10942                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 10943  00368E  0E07               	movlw	7
 10944  003690  6FD9               	movwf	217,b	;volatile
 10945                           
 10946                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 10947  003692  0E09               	movlw	9
 10948  003694  6FD1               	movwf	209,b	;volatile
 10949                           
 10950                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 10951  003696  0E0F               	movlw	15
 10952  003698  6F03               	movwf	3,b	;volatile
 10953                           
 10954                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 10955  00369A  0E13               	movlw	19
 10956  00369C  6F0B               	movwf	11,b	;volatile
 10957                           
 10958                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 10959  00369E  0E08               	movlw	8
 10960  0036A0  6FDB               	movwf	219,b	;volatile
 10961                           
 10962                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 10963  0036A2  0E08               	movlw	8
 10964  0036A4  6FD2               	movwf	210,b	;volatile
 10965                           
 10966                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 10967  0036A6  0E1E               	movlw	30
 10968  0036A8  6FD0               	movwf	208,b	;volatile
 10969  0036AA                     
 10970                           ; BSR set to: 58
 10971  0036AA  0012               	return		;funcret
 10972  0036AC                     __end_of_PIN_MANAGER_Initialize:
 10973                           	callstack 0
 10974                           
 10975 ;; *************** function _OSCILLATOR_Initialize *****************
 10976 ;; Defined at:
 10977 ;;		line 72 in file "mcc_generated_files/mcc.c"
 10978 ;; Parameters:    Size  Location     Type
 10979 ;;		None
 10980 ;; Auto vars:     Size  Location     Type
 10981 ;;		None
 10982 ;; Return value:  Size  Location     Type
 10983 ;;                  1    wreg      void 
 10984 ;; Registers used:
 10985 ;;		wreg, status,2
 10986 ;; Tracked objects:
 10987 ;;		On entry : 0/0
 10988 ;;		On exit  : 0/0
 10989 ;;		Unchanged: 0/0
 10990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;Total ram usage:        0 bytes
 10996 ;; Hardware stack levels used: 1
 10997 ;; Hardware stack levels required when called: 8
 10998 ;; This function calls:
 10999 ;;		Nothing
 11000 ;; This function is called by:
 11001 ;;		_SYSTEM_Initialize
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           	psect	text59
 11006  004572                     __ptext59:
 11007                           	callstack 0
 11008  004572                     _OSCILLATOR_Initialize:
 11009                           	callstack 21
 11010  004572                     
 11011                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 11012  004572  0E60               	movlw	96
 11013  004574  0139               	movlb	57	; () banked
 11014  004576  6FD9               	movwf	217,b	;volatile
 11015                           
 11016                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 11017  004578  0E00               	movlw	0
 11018  00457A  6FDB               	movwf	219,b	;volatile
 11019                           
 11020                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 11021  00457C  0E00               	movlw	0
 11022  00457E  6FDD               	movwf	221,b	;volatile
 11023                           
 11024                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 11025  004580  0E08               	movlw	8
 11026  004582  6FDF               	movwf	223,b	;volatile
 11027                           
 11028                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 11029  004584  0E00               	movlw	0
 11030  004586  6FDE               	movwf	222,b	;volatile
 11031  004588                     
 11032                           ; BSR set to: 57
 11033  004588  0012               	return		;funcret
 11034  00458A                     __end_of_OSCILLATOR_Initialize:
 11035                           	callstack 0
 11036                           
 11037 ;; *************** function _INTERRUPT_Initialize *****************
 11038 ;; Defined at:
 11039 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;		None
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  state           1   31[COMRAM] _Bool 
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      void 
 11046 ;; Registers used:
 11047 ;;		wreg, status,2
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11057 ;;Total ram usage:        1 bytes
 11058 ;; Hardware stack levels used: 1
 11059 ;; Hardware stack levels required when called: 8
 11060 ;; This function calls:
 11061 ;;		Nothing
 11062 ;; This function is called by:
 11063 ;;		_SYSTEM_Initialize
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text60
 11068  003DBC                     __ptext60:
 11069                           	callstack 0
 11070  003DBC                     _INTERRUPT_Initialize:
 11071                           	callstack 21
 11072  003DBC                     
 11073                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11074  003DBC  8AD2               	bsf	210,5,c	;volatile
 11075  003DBE                     
 11076                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11077  003DBE  0E00               	movlw	0
 11078  003DC0  BED2               	btfsc	16338,7,c	;volatile
 11079  003DC2  0E01               	movlw	1
 11080  003DC4  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 11081  003DC6                     
 11082                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11083  003DC6  9ED2               	bcf	16338,7,c	;volatile
 11084                           
 11085                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11086  003DC8  0E55               	movlw	85
 11087  003DCA  6ED4               	movwf	212,c	;volatile
 11088                           
 11089                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11090  003DCC  0EAA               	movlw	170
 11091  003DCE  6ED4               	movwf	212,c	;volatile
 11092  003DD0                     
 11093                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11094  003DD0  90D4               	bcf	212,0,c	;volatile
 11095                           
 11096                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 11097  003DD2  0E00               	movlw	0
 11098  003DD4  6ED7               	movwf	215,c	;volatile
 11099                           
 11100                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 11101  003DD6  0E00               	movlw	0
 11102  003DD8  6ED6               	movwf	214,c	;volatile
 11103                           
 11104                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 11105  003DDA  0E08               	movlw	8
 11106  003DDC  6ED5               	movwf	213,c	;volatile
 11107                           
 11108                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11109  003DDE  0E55               	movlw	85
 11110  003DE0  6ED4               	movwf	212,c	;volatile
 11111                           
 11112                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11113  003DE2  0EAA               	movlw	170
 11114  003DE4  6ED4               	movwf	212,c	;volatile
 11115  003DE6                     
 11116                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11117  003DE6  80D4               	bsf	212,0,c	;volatile
 11118  003DE8                     
 11119                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11120  003DE8  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 11121  003DEA  D002               	bra	u1675
 11122  003DEC  9ED2               	bcf	16338,7,c	;volatile
 11123  003DEE  D001               	bra	u1676
 11124  003DF0                     u1675:
 11125  003DF0  8ED2               	bsf	16338,7,c	;volatile
 11126  003DF2                     u1676:
 11127  003DF2                     
 11128                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 11129  003DF2  0139               	movlb	57	; () banked
 11130  003DF4  9983               	bcf	131,4,b	;volatile
 11131  003DF6                     
 11132                           ; BSR set to: 57
 11133                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 11134  003DF6  9783               	bcf	131,3,b	;volatile
 11135  003DF8                     
 11136                           ; BSR set to: 57
 11137                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 11138  003DF8  8F81               	bsf	129,7,b	;volatile
 11139  003DFA                     
 11140                           ; BSR set to: 57
 11141                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 11142  003DFA  8B81               	bsf	129,5,b	;volatile
 11143  003DFC                     
 11144                           ; BSR set to: 57
 11145                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 11146  003DFC  8D81               	bsf	129,6,b	;volatile
 11147  003DFE                     
 11148                           ; BSR set to: 57
 11149                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 11150  003DFE  818A               	bsf	138,0,b	;volatile
 11151  003E00                     
 11152                           ; BSR set to: 57
 11153                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 11154  003E00  8F88               	bsf	136,7,b	;volatile
 11155  003E02                     
 11156                           ; BSR set to: 57
 11157                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 11158  003E02  9187               	bcf	135,0,b	;volatile
 11159  003E04                     
 11160                           ; BSR set to: 57
 11161                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 11162  003E04  8389               	bsf	137,1,b	;volatile
 11163  003E06                     
 11164                           ; BSR set to: 57
 11165  003E06  0012               	return		;funcret
 11166  003E08                     __end_of_INTERRUPT_Initialize:
 11167                           	callstack 0
 11168                           
 11169 ;; *************** function _CLC3_Initialize *****************
 11170 ;; Defined at:
 11171 ;;		line 58 in file "mcc_generated_files/clc3.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;		None
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  1    wreg      void 
 11178 ;; Registers used:
 11179 ;;		wreg, status,2
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;Total ram usage:        0 bytes
 11190 ;; Hardware stack levels used: 1
 11191 ;; Hardware stack levels required when called: 8
 11192 ;; This function calls:
 11193 ;;		Nothing
 11194 ;; This function is called by:
 11195 ;;		_SYSTEM_Initialize
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           	psect	text61
 11200  00439A                     __ptext61:
 11201                           	callstack 0
 11202  00439A                     _CLC3_Initialize:
 11203                           	callstack 21
 11204  00439A                     
 11205                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 11206  00439A  0E00               	movlw	0
 11207  00439C  013C               	movlb	60	; () banked
 11208  00439E  6F61               	movwf	97,b	;volatile
 11209                           
 11210                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 11211  0043A0  0E03               	movlw	3
 11212  0043A2  6F62               	movwf	98,b	;volatile
 11213                           
 11214                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 11215  0043A4  0E02               	movlw	2
 11216  0043A6  6F63               	movwf	99,b	;volatile
 11217                           
 11218                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 11219  0043A8  0E00               	movlw	0
 11220  0043AA  6F64               	movwf	100,b	;volatile
 11221                           
 11222                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 11223  0043AC  0E00               	movlw	0
 11224  0043AE  6F65               	movwf	101,b	;volatile
 11225                           
 11226                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 11227  0043B0  0E02               	movlw	2
 11228  0043B2  6F66               	movwf	102,b	;volatile
 11229                           
 11230                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 11231  0043B4  0E08               	movlw	8
 11232  0043B6  6F67               	movwf	103,b	;volatile
 11233                           
 11234                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 11235  0043B8  0E00               	movlw	0
 11236  0043BA  6F68               	movwf	104,b	;volatile
 11237                           
 11238                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 11239  0043BC  0E00               	movlw	0
 11240  0043BE  6F69               	movwf	105,b	;volatile
 11241                           
 11242                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 11243  0043C0  0E85               	movlw	133
 11244  0043C2  6F60               	movwf	96,b	;volatile
 11245  0043C4                     
 11246                           ; BSR set to: 60
 11247  0043C4  0012               	return		;funcret
 11248  0043C6                     __end_of_CLC3_Initialize:
 11249                           	callstack 0
 11250                           
 11251 ;; *************** function _CCP4_Initialize *****************
 11252 ;; Defined at:
 11253 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;		None
 11256 ;; Auto vars:     Size  Location     Type
 11257 ;;		None
 11258 ;; Return value:  Size  Location     Type
 11259 ;;                  1    wreg      void 
 11260 ;; Registers used:
 11261 ;;		wreg, status,2, status,0, cstack
 11262 ;; Tracked objects:
 11263 ;;		On entry : 0/0
 11264 ;;		On exit  : 0/0
 11265 ;;		Unchanged: 0/0
 11266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11271 ;;Total ram usage:        0 bytes
 11272 ;; Hardware stack levels used: 1
 11273 ;; Hardware stack levels required when called: 9
 11274 ;; This function calls:
 11275 ;;		_CCP4_SetCallBack
 11276 ;; This function is called by:
 11277 ;;		_SYSTEM_Initialize
 11278 ;; This function uses a non-reentrant model
 11279 ;;
 11280                           
 11281                           	psect	text62
 11282  0042E4                     __ptext62:
 11283                           	callstack 0
 11284  0042E4                     _CCP4_Initialize:
 11285                           	callstack 20
 11286  0042E4                     
 11287                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 11288  0042E4  0E83               	movlw	131
 11289  0042E6  6E72               	movwf	114,c	;volatile
 11290                           
 11291                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 11292  0042E8  0E00               	movlw	0
 11293  0042EA  6E73               	movwf	115,c	;volatile
 11294                           
 11295                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 11296  0042EC  0E00               	movlw	0
 11297  0042EE  6E71               	movwf	113,c	;volatile
 11298                           
 11299                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 11300  0042F0  0E00               	movlw	0
 11301  0042F2  6E70               	movwf	112,c	;volatile
 11302  0042F4                     
 11303                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 11304  0042F4  0EB4               	movlw	low _CCP4_DefaultCallBack
 11305  0042F6  6E20               	movwf	CCP4_SetCallBack@customCallBack^0,c
 11306  0042F8  0E42               	movlw	high _CCP4_DefaultCallBack
 11307  0042FA  6E21               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 11308  0042FC  ECFC  F022         	call	_CCP4_SetCallBack	;wreg free
 11309  004300                     
 11310                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 11311  004300  013F               	movlb	63	; () banked
 11312  004302  515E               	movf	94,w,b	;volatile
 11313  004304  0B3F               	andlw	-193
 11314  004306  0980               	iorlw	128
 11315  004308  6F5E               	movwf	94,b	;volatile
 11316  00430A                     
 11317                           ; BSR set to: 63
 11318                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 11319  00430A  0139               	movlb	57	; () banked
 11320  00430C  91AA               	bcf	170,0,b	;volatile
 11321  00430E                     
 11322                           ; BSR set to: 57
 11323                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 11324  00430E  819A               	bsf	154,0,b	;volatile
 11325  004310                     
 11326                           ; BSR set to: 57
 11327  004310  0012               	return		;funcret
 11328  004312                     __end_of_CCP4_Initialize:
 11329                           	callstack 0
 11330                           
 11331 ;; *************** function _CCP4_SetCallBack *****************
 11332 ;; Defined at:
 11333 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 11336 ;;		 -> CCP4_DefaultCallBack(1), 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;		None
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      void 
 11341 ;; Registers used:
 11342 ;;		wreg, status,2, status,0
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;Total ram usage:        2 bytes
 11353 ;; Hardware stack levels used: 1
 11354 ;; Hardware stack levels required when called: 8
 11355 ;; This function calls:
 11356 ;;		Nothing
 11357 ;; This function is called by:
 11358 ;;		_CCP4_Initialize
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           	psect	text63
 11363  0045F8                     __ptext63:
 11364                           	callstack 0
 11365  0045F8                     _CCP4_SetCallBack:
 11366                           	callstack 20
 11367  0045F8                     
 11368                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 11369  0045F8  C020  F0F5         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 11370  0045FC  C021  F0F6         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 11371  004600  0012               	return		;funcret
 11372  004602                     __end_of_CCP4_SetCallBack:
 11373                           	callstack 0
 11374                           
 11375 ;; *************** function _CCP3_Initialize *****************
 11376 ;; Defined at:
 11377 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;		None
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, status,2, status,0, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11395 ;;Total ram usage:        0 bytes
 11396 ;; Hardware stack levels used: 1
 11397 ;; Hardware stack levels required when called: 9
 11398 ;; This function calls:
 11399 ;;		_CCP3_SetCallBack
 11400 ;; This function is called by:
 11401 ;;		_SYSTEM_Initialize
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text64
 11406  004312                     __ptext64:
 11407                           	callstack 0
 11408  004312                     _CCP3_Initialize:
 11409                           	callstack 20
 11410  004312  0E83               	movlw	131
 11411  004314  6E76               	movwf	118,c	;volatile
 11412  004316  0E00               	movlw	0
 11413  004318  6E77               	movwf	119,c	;volatile
 11414  00431A  0E00               	movlw	0
 11415  00431C  6E75               	movwf	117,c	;volatile
 11416  00431E  0E00               	movlw	0
 11417  004320  6E74               	movwf	116,c	;volatile
 11418  004322  0E84               	movlw	low _CCP3_DefaultCallBack
 11419  004324  6E20               	movwf	CCP3_SetCallBack@customCallBack^0,c
 11420  004326  0E42               	movlw	high _CCP3_DefaultCallBack
 11421  004328  6E21               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 11422  00432A  EC01  F023         	call	_CCP3_SetCallBack	;wreg free
 11423  00432E  013F               	movlb	63	; () banked
 11424  004330  515E               	movf	94,w,b	;volatile
 11425  004332  0BCF               	andlw	-49
 11426  004334  0920               	iorlw	32
 11427  004336  6F5E               	movwf	94,b	;volatile
 11428  004338                     
 11429                           ; BSR set to: 63
 11430  004338  0139               	movlb	57	; () banked
 11431  00433A  93A9               	bcf	169,1,b	;volatile
 11432  00433C                     
 11433                           ; BSR set to: 57
 11434  00433C  8399               	bsf	153,1,b	;volatile
 11435  00433E                     
 11436                           ; BSR set to: 57
 11437  00433E  0012               	return		;funcret
 11438  004340                     __end_of_CCP3_Initialize:
 11439                           	callstack 0
 11440                           
 11441 ;; *************** function _CCP3_SetCallBack *****************
 11442 ;; Defined at:
 11443 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 11446 ;;		 -> CCP3_DefaultCallBack(1), 
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;		None
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      void 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;Total ram usage:        2 bytes
 11463 ;; Hardware stack levels used: 1
 11464 ;; Hardware stack levels required when called: 8
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_CCP3_Initialize
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text65
 11473  004602                     __ptext65:
 11474                           	callstack 0
 11475  004602                     _CCP3_SetCallBack:
 11476                           	callstack 20
 11477  004602  C020  F0F7         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 11478  004606  C021  F0F8         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 11479  00460A  0012               	return		;funcret
 11480  00460C                     __end_of_CCP3_SetCallBack:
 11481                           	callstack 0
 11482                           
 11483 ;; *************** function _ADCC_Initialize *****************
 11484 ;; Defined at:
 11485 ;;		line 62 in file "mcc_generated_files/adcc.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;		None
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      void 
 11492 ;; Registers used:
 11493 ;;		wreg, status,2
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11503 ;;Total ram usage:        0 bytes
 11504 ;; Hardware stack levels used: 1
 11505 ;; Hardware stack levels required when called: 8
 11506 ;; This function calls:
 11507 ;;		Nothing
 11508 ;; This function is called by:
 11509 ;;		_SYSTEM_Initialize
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           	psect	text66
 11514  003C1A                     __ptext66:
 11515                           	callstack 0
 11516  003C1A                     _ADCC_Initialize:
 11517                           	callstack 21
 11518  003C1A                     
 11519                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 11520  003C1A  0E00               	movlw	0
 11521  003C1C  013E               	movlb	62	; () banked
 11522  003C1E  6FDE               	movwf	222,b	;volatile
 11523                           
 11524                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 11525  003C20  0E00               	movlw	0
 11526  003C22  6FDF               	movwf	223,b	;volatile
 11527                           
 11528                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 11529  003C24  0E00               	movlw	0
 11530  003C26  6FE0               	movwf	224,b	;volatile
 11531                           
 11532                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 11533  003C28  0E00               	movlw	0
 11534  003C2A  6FE1               	movwf	225,b	;volatile
 11535                           
 11536                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 11537  003C2C  0E00               	movlw	0
 11538  003C2E  6FE4               	movwf	228,b	;volatile
 11539                           
 11540                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 11541  003C30  0E00               	movlw	0
 11542  003C32  6FE5               	movwf	229,b	;volatile
 11543                           
 11544                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 11545  003C34  0E00               	movlw	0
 11546  003C36  6FEA               	movwf	234,b	;volatile
 11547                           
 11548                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 11549  003C38  0E00               	movlw	0
 11550  003C3A  6FEC               	movwf	236,b	;volatile
 11551                           
 11552                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 11553  003C3C  0E00               	movlw	0
 11554  003C3E  6FF1               	movwf	241,b	;volatile
 11555                           
 11556                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 11557  003C40  0E58               	movlw	88
 11558  003C42  6FF3               	movwf	243,b	;volatile
 11559                           
 11560                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 11561  003C44  0E02               	movlw	2
 11562  003C46  6FF4               	movwf	244,b	;volatile
 11563                           
 11564                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 11565  003C48  0E00               	movlw	0
 11566  003C4A  6FF5               	movwf	245,b	;volatile
 11567                           
 11568                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 11569  003C4C  0E00               	movlw	0
 11570  003C4E  6FF6               	movwf	246,b	;volatile
 11571                           
 11572                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 11573  003C50  0E00               	movlw	0
 11574  003C52  6FF7               	movwf	247,b	;volatile
 11575                           
 11576                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 11577  003C54  0E00               	movlw	0
 11578  003C56  6FF9               	movwf	249,b	;volatile
 11579                           
 11580                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 11581  003C58  0E00               	movlw	0
 11582  003C5A  6FFA               	movwf	250,b	;volatile
 11583                           
 11584                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 11585  003C5C  0E00               	movlw	0
 11586  003C5E  6FFB               	movwf	251,b	;volatile
 11587                           
 11588                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 11589  003C60  0E00               	movlw	0
 11590  003C62  6FFC               	movwf	252,b	;volatile
 11591                           
 11592                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 11593  003C64  0E00               	movlw	0
 11594  003C66  6FFD               	movwf	253,b	;volatile
 11595                           
 11596                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 11597  003C68  0E00               	movlw	0
 11598  003C6A  6FFE               	movwf	254,b	;volatile
 11599                           
 11600                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 11601  003C6C  0E1F               	movlw	31
 11602  003C6E  6FFF               	movwf	255,b	;volatile
 11603                           
 11604                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 11605  003C70  0E84               	movlw	132
 11606  003C72  6FF8               	movwf	248,b	;volatile
 11607  003C74                     
 11608                           ; BSR set to: 62
 11609  003C74  0012               	return		;funcret
 11610  003C76                     __end_of_ADCC_Initialize:
 11611                           	callstack 0
 11612                           
 11613 ;; *************** function _UART1_tx_vect_isr *****************
 11614 ;; Defined at:
 11615 ;;		line 235 in file "mcc_generated_files/uart1.c"
 11616 ;; Parameters:    Size  Location     Type
 11617 ;;		None
 11618 ;; Auto vars:     Size  Location     Type
 11619 ;;		None
 11620 ;; Return value:  Size  Location     Type
 11621 ;;                  1    wreg      void 
 11622 ;; Registers used:
 11623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11624 ;; Tracked objects:
 11625 ;;		On entry : 0/0
 11626 ;;		On exit  : 0/0
 11627 ;;		Unchanged: 0/0
 11628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11631 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11633 ;;Total ram usage:        3 bytes
 11634 ;; Hardware stack levels used: 1
 11635 ;; Hardware stack levels required when called: 5
 11636 ;; This function calls:
 11637 ;;		Absolute function
 11638 ;;		_UART1_Transmit_ISR
 11639 ;; This function is called by:
 11640 ;;		Interrupt level 1
 11641 ;; This function uses a non-reentrant model
 11642 ;;
 11643                           
 11644                           	psect	text67
 11645  003CCC                     __ptext67:
 11646                           	callstack 0
 11647  003CCC                     _UART1_tx_vect_isr:
 11648                           	callstack 14
 11649                           
 11650                           ; BSR set to: 62
 11651                           ;incstack = 0
 11652  003CCC  006F FF60  F017    	movff	status,??_UART1_tx_vect_isr
 11653  003CD2  006F FFE8  F018    	movff	pclath,??_UART1_tx_vect_isr+1
 11654  003CD8  006F FFEC  F019    	movff	pclatu,??_UART1_tx_vect_isr+2
 11655  003CDE                     
 11656                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 11657  003CDE  503C               	movf	_UART1_TxInterruptHandler^0,w,c
 11658  003CE0  103D               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 11659  003CE2  B4D8               	btfsc	status,2,c
 11660  003CE4  EF76  F01E         	goto	i1u459_21
 11661  003CE8  EF78  F01E         	goto	i1u459_20
 11662  003CEC                     i1u459_21:
 11663  003CEC  EF84  F01E         	goto	i1l324
 11664  003CF0                     i1u459_20:
 11665  003CF0                     
 11666                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 11667  003CF0  D802               	call	i1u460_28
 11668  003CF2  EF84  F01E         	goto	i1u460_29
 11669  003CF6                     i1u460_28:
 11670  003CF6  0005               	push	
 11671  003CF8  6EFA               	movwf	pclath,c
 11672  003CFA  503C               	movf	_UART1_TxInterruptHandler^0,w,c
 11673  003CFC  6EFD               	movwf	tosl,c
 11674  003CFE  503D               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 11675  003D00  6EFE               	movwf	tosh,c
 11676  003D02  6AFF               	clrf	tosu,c
 11677  003D04  50FA               	movf	pclath,w,c
 11678  003D06  0012               	return		;indir
 11679  003D08                     i1u460_29:
 11680  003D08                     i1l324:
 11681  003D08  0060  F067  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 11682  003D0E  0060  F063  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 11683  003D14  0060  F05F  FFD8   	movff	??_UART1_tx_vect_isr,status
 11684  003D1A  0011               	retfie		f
 11685  003D1C                     __end_of_UART1_tx_vect_isr:
 11686                           	callstack 0
 11687                           
 11688 ;; *************** function _UART1_Transmit_ISR *****************
 11689 ;; Defined at:
 11690 ;;		line 253 in file "mcc_generated_files/uart1.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;		None
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;Total ram usage:        0 bytes
 11709 ;; Hardware stack levels used: 1
 11710 ;; Hardware stack levels required when called: 4
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_UART1_Initialize
 11715 ;;		_UART1_tx_vect_isr
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text68
 11720  004010                     __ptext68:
 11721                           	callstack 0
 11722  004010                     _UART1_Transmit_ISR:
 11723                           	callstack 14
 11724  004010                     
 11725                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 11726  004010  0E08               	movlw	8
 11727  004012  6040               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 11728  004014  EF0E  F020         	goto	i1u442_21
 11729  004018  EF10  F020         	goto	i1u442_20
 11730  00401C                     i1u442_21:
 11731  00401C  EF27  F020         	goto	i1l333
 11732  004020                     i1u442_20:
 11733  004020                     
 11734                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 11735  004020  0EC2               	movlw	low _uart1TxBuffer
 11736  004022  2432               	addwf	_uart1TxTail^0,w,c	;volatile
 11737  004024  6ED9               	movwf	fsr2l,c
 11738  004026  6ADA               	clrf	fsr2h,c
 11739  004028  0E00               	movlw	high _uart1TxBuffer
 11740  00402A  22DA               	addwfc	fsr2h,f,c
 11741  00402C  50DF               	movf	indf2,w,c
 11742  00402E  013D               	movlb	61	; () banked
 11743  004030  6FEA               	movwf	234,b	;volatile
 11744  004032                     
 11745                           ; BSR set to: 61
 11746  004032  2A32               	incf	_uart1TxTail^0,f,c	;volatile
 11747  004034                     
 11748                           ; BSR set to: 61
 11749                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 11750  004034  0E07               	movlw	7
 11751  004036  6432               	cpfsgt	_uart1TxTail^0,c	;volatile
 11752  004038  EF20  F020         	goto	i1u443_21
 11753  00403C  EF22  F020         	goto	i1u443_20
 11754  004040                     i1u443_21:
 11755  004040  EF24  F020         	goto	i1l5566
 11756  004044                     i1u443_20:
 11757  004044                     
 11758                           ; BSR set to: 61
 11759                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 11760  004044  0E00               	movlw	0
 11761  004046  6E32               	movwf	_uart1TxTail^0,c	;volatile
 11762  004048                     i1l5566:
 11763                           
 11764                           ; BSR set to: 61
 11765                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 11766  004048  2A40               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 11767                           
 11768                           ;mcc_generated_files/uart1.c: 264:     }
 11769  00404A  EF29  F020         	goto	i1l336
 11770  00404E                     i1l333:
 11771                           
 11772                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 11773  00404E  0139               	movlb	57	; () banked
 11774  004050  9993               	bcf	147,4,b	;volatile
 11775  004052                     i1l336:
 11776  004052  0012               	return		;funcret
 11777  004054                     __end_of_UART1_Transmit_ISR:
 11778                           	callstack 0
 11779                           
 11780 ;; *************** function _UART1_rx_vect_isr *****************
 11781 ;; Defined at:
 11782 ;;		line 243 in file "mcc_generated_files/uart1.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;		None
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;		None
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  1    wreg      void 
 11789 ;; Registers used:
 11790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;Total ram usage:        3 bytes
 11801 ;; Hardware stack levels used: 1
 11802 ;; Hardware stack levels required when called: 7
 11803 ;; This function calls:
 11804 ;;		Absolute function
 11805 ;;		_UART1_Receive_ISR
 11806 ;; This function is called by:
 11807 ;;		Interrupt level 1
 11808 ;; This function uses a non-reentrant model
 11809 ;;
 11810                           
 11811                           	psect	text69
 11812  003D1C                     __ptext69:
 11813                           	callstack 0
 11814  003D1C                     _UART1_rx_vect_isr:
 11815                           	callstack 12
 11816                           
 11817                           ;incstack = 0
 11818  003D1C  006F FF60  F01A    	movff	status,??_UART1_rx_vect_isr
 11819  003D22  006F FFE8  F01B    	movff	pclath,??_UART1_rx_vect_isr+1
 11820  003D28  006F FFEC  F01C    	movff	pclatu,??_UART1_rx_vect_isr+2
 11821  003D2E                     
 11822                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 11823  003D2E  503E               	movf	_UART1_RxInterruptHandler^0,w,c
 11824  003D30  103F               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 11825  003D32  B4D8               	btfsc	status,2,c
 11826  003D34  EF9E  F01E         	goto	i1u461_21
 11827  003D38  EFA0  F01E         	goto	i1u461_20
 11828  003D3C                     i1u461_21:
 11829  003D3C  EFAC  F01E         	goto	i1l330
 11830  003D40                     i1u461_20:
 11831  003D40                     
 11832                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 11833  003D40  D802               	call	i1u462_28
 11834  003D42  EFAC  F01E         	goto	i1u462_29
 11835  003D46                     i1u462_28:
 11836  003D46  0005               	push	
 11837  003D48  6EFA               	movwf	pclath,c
 11838  003D4A  503E               	movf	_UART1_RxInterruptHandler^0,w,c
 11839  003D4C  6EFD               	movwf	tosl,c
 11840  003D4E  503F               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 11841  003D50  6EFE               	movwf	tosh,c
 11842  003D52  6AFF               	clrf	tosu,c
 11843  003D54  50FA               	movf	pclath,w,c
 11844  003D56  0012               	return		;indir
 11845  003D58                     i1u462_29:
 11846  003D58                     i1l330:
 11847  003D58  0060  F073  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 11848  003D5E  0060  F06F  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 11849  003D64  0060  F06B  FFD8   	movff	??_UART1_rx_vect_isr,status
 11850  003D6A  0011               	retfie		f
 11851  003D6C                     __end_of_UART1_rx_vect_isr:
 11852                           	callstack 0
 11853                           
 11854 ;; *************** function _UART1_Receive_ISR *****************
 11855 ;; Defined at:
 11856 ;;		line 273 in file "mcc_generated_files/uart1.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;		None
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;		None
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  1    wreg      void 
 11863 ;; Registers used:
 11864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11865 ;; Tracked objects:
 11866 ;;		On entry : 0/0
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11874 ;;Total ram usage:        0 bytes
 11875 ;; Hardware stack levels used: 1
 11876 ;; Hardware stack levels required when called: 6
 11877 ;; This function calls:
 11878 ;;		Absolute function
 11879 ;;		_UART1_DefaultErrorHandler
 11880 ;;		_UART1_DefaultFramingErrorHandler
 11881 ;;		_UART1_DefaultOverrunErrorHandler
 11882 ;;		_UART1_RxDataHandler
 11883 ;; This function is called by:
 11884 ;;		_UART1_Initialize
 11885 ;;		_UART1_rx_vect_isr
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           
 11889                           	psect	text70
 11890  00383A                     __ptext70:
 11891                           	callstack 0
 11892  00383A                     _UART1_Receive_ISR:
 11893                           	callstack 12
 11894  00383A                     
 11895                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 11896  00383A  0EB2               	movlw	low _uart1RxStatusBuffer
 11897  00383C  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11898  00383E  6ED9               	movwf	fsr2l,c
 11899  003840  6ADA               	clrf	fsr2h,c
 11900  003842  0E00               	movlw	high _uart1RxStatusBuffer
 11901  003844  22DA               	addwfc	fsr2h,f,c
 11902  003846  0E00               	movlw	0
 11903  003848  6EDF               	movwf	indf2,c
 11904  00384A                     
 11905                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 11906  00384A  013D               	movlb	61	; () banked
 11907  00384C  A7F9               	btfss	249,3,b	;volatile
 11908  00384E  EF2B  F01C         	goto	i1u444_21
 11909  003852  EF2D  F01C         	goto	i1u444_20
 11910  003856                     i1u444_21:
 11911  003856  EF41  F01C         	goto	i1l5576
 11912  00385A                     i1u444_20:
 11913  00385A                     
 11914                           ; BSR set to: 61
 11915                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 11916  00385A  0EB2               	movlw	low _uart1RxStatusBuffer
 11917  00385C  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11918  00385E  6ED9               	movwf	fsr2l,c
 11919  003860  6ADA               	clrf	fsr2h,c
 11920  003862  0E00               	movlw	high _uart1RxStatusBuffer
 11921  003864  22DA               	addwfc	fsr2h,f,c
 11922  003866  0100               	movlb	0	; () banked
 11923  003868  82DF               	bsf	indf2,1,c
 11924  00386A                     
 11925                           ; BSR set to: 0
 11926                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 11927  00386A  D802               	call	i1u445_28
 11928  00386C  EF41  F01C         	goto	i1u445_29
 11929  003870                     i1u445_28:
 11930  003870  0005               	push	
 11931  003872  6EFA               	movwf	pclath,c
 11932  003874  51FD               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 11933  003876  6EFD               	movwf	tosl,c
 11934  003878  51FE               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 11935  00387A  6EFE               	movwf	tosh,c
 11936  00387C  6AFF               	clrf	tosu,c
 11937  00387E  50FA               	movf	pclath,w,c
 11938  003880  0012               	return		;indir
 11939  003882                     i1u445_29:
 11940  003882                     i1l5576:
 11941                           
 11942                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 11943  003882  013D               	movlb	61	; () banked
 11944  003884  A3F9               	btfss	249,1,b	;volatile
 11945  003886  EF47  F01C         	goto	i1u446_21
 11946  00388A  EF49  F01C         	goto	i1u446_20
 11947  00388E                     i1u446_21:
 11948  00388E  EF5D  F01C         	goto	i1l5582
 11949  003892                     i1u446_20:
 11950  003892                     
 11951                           ; BSR set to: 61
 11952                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 11953  003892  0EB2               	movlw	low _uart1RxStatusBuffer
 11954  003894  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11955  003896  6ED9               	movwf	fsr2l,c
 11956  003898  6ADA               	clrf	fsr2h,c
 11957  00389A  0E00               	movlw	high _uart1RxStatusBuffer
 11958  00389C  22DA               	addwfc	fsr2h,f,c
 11959  00389E  0100               	movlb	0	; () banked
 11960  0038A0  84DF               	bsf	indf2,2,c
 11961  0038A2                     
 11962                           ; BSR set to: 0
 11963                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 11964  0038A2  D802               	call	i1u447_28
 11965  0038A4  EF5D  F01C         	goto	i1u447_29
 11966  0038A8                     i1u447_28:
 11967  0038A8  0005               	push	
 11968  0038AA  6EFA               	movwf	pclath,c
 11969  0038AC  51FB               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 11970  0038AE  6EFD               	movwf	tosl,c
 11971  0038B0  51FC               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 11972  0038B2  6EFE               	movwf	tosh,c
 11973  0038B4  6AFF               	clrf	tosu,c
 11974  0038B6  50FA               	movf	pclath,w,c
 11975  0038B8  0012               	return		;indir
 11976  0038BA                     i1u447_29:
 11977  0038BA                     i1l5582:
 11978                           
 11979                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 11980  0038BA  0EB2               	movlw	low _uart1RxStatusBuffer
 11981  0038BC  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11982  0038BE  6ED9               	movwf	fsr2l,c
 11983  0038C0  6ADA               	clrf	fsr2h,c
 11984  0038C2  0E00               	movlw	high _uart1RxStatusBuffer
 11985  0038C4  22DA               	addwfc	fsr2h,f,c
 11986  0038C6  50DF               	movf	indf2,w,c
 11987  0038C8  B4D8               	btfsc	status,2,c
 11988  0038CA  EF69  F01C         	goto	i1u448_21
 11989  0038CE  EF6B  F01C         	goto	i1u448_20
 11990  0038D2                     i1u448_21:
 11991  0038D2  EF7A  F01C         	goto	i1l5586
 11992  0038D6                     i1u448_20:
 11993  0038D6                     
 11994                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 11995  0038D6  D802               	call	i1u449_28
 11996  0038D8  EF78  F01C         	goto	i1u449_29
 11997  0038DC                     i1u449_28:
 11998  0038DC  0005               	push	
 11999  0038DE  6EFA               	movwf	pclath,c
 12000  0038E0  0100               	movlb	0	; () banked
 12001  0038E2  51F9               	movf	_UART1_ErrorHandler& (0+255),w,b
 12002  0038E4  6EFD               	movwf	tosl,c
 12003  0038E6  51FA               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 12004  0038E8  6EFE               	movwf	tosh,c
 12005  0038EA  6AFF               	clrf	tosu,c
 12006  0038EC  50FA               	movf	pclath,w,c
 12007  0038EE  0012               	return		;indir
 12008  0038F0                     i1u449_29:
 12009                           
 12010                           ;mcc_generated_files/uart1.c: 290:     } else {
 12011  0038F0  EF7C  F01C         	goto	i1l343
 12012  0038F4                     i1l5586:
 12013                           
 12014                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 12015  0038F4  ECE3  F021         	call	_UART1_RxDataHandler	;wreg free
 12016  0038F8                     i1l343:
 12017  0038F8  0012               	return		;funcret
 12018  0038FA                     __end_of_UART1_Receive_ISR:
 12019                           	callstack 0
 12020                           
 12021 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 12022 ;; Defined at:
 12023 ;;		line 309 in file "mcc_generated_files/uart1.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;		None
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;		None
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      void 
 12030 ;; Registers used:
 12031 ;;		None
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;Total ram usage:        0 bytes
 12042 ;; Hardware stack levels used: 1
 12043 ;; Hardware stack levels required when called: 4
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_UART1_Initialize
 12048 ;;		_UART1_Receive_ISR
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text71
 12053  004618                     __ptext71:
 12054                           	callstack 0
 12055  004618                     _UART1_DefaultOverrunErrorHandler:
 12056                           	callstack 13
 12057  004618  0012               	return		;funcret
 12058  00461A                     __end_of_UART1_DefaultOverrunErrorHandler:
 12059                           	callstack 0
 12060                           
 12061 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 12062 ;; Defined at:
 12063 ;;		line 307 in file "mcc_generated_files/uart1.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;		None
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;		None
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  1    wreg      void 
 12070 ;; Registers used:
 12071 ;;		None
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12081 ;;Total ram usage:        0 bytes
 12082 ;; Hardware stack levels used: 1
 12083 ;; Hardware stack levels required when called: 4
 12084 ;; This function calls:
 12085 ;;		Nothing
 12086 ;; This function is called by:
 12087 ;;		_UART1_Initialize
 12088 ;;		_UART1_Receive_ISR
 12089 ;; This function uses a non-reentrant model
 12090 ;;
 12091                           
 12092                           	psect	text72
 12093  00461A                     __ptext72:
 12094                           	callstack 0
 12095  00461A                     _UART1_DefaultFramingErrorHandler:
 12096                           	callstack 13
 12097  00461A  0012               	return		;funcret
 12098  00461C                     __end_of_UART1_DefaultFramingErrorHandler:
 12099                           	callstack 0
 12100                           
 12101 ;; *************** function _UART1_DefaultErrorHandler *****************
 12102 ;; Defined at:
 12103 ;;		line 311 in file "mcc_generated_files/uart1.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;		None
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;		None
 12108 ;; Return value:  Size  Location     Type
 12109 ;;                  1    wreg      void 
 12110 ;; Registers used:
 12111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12112 ;; Tracked objects:
 12113 ;;		On entry : 0/0
 12114 ;;		On exit  : 0/0
 12115 ;;		Unchanged: 0/0
 12116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12121 ;;Total ram usage:        0 bytes
 12122 ;; Hardware stack levels used: 1
 12123 ;; Hardware stack levels required when called: 5
 12124 ;; This function calls:
 12125 ;;		_UART1_RxDataHandler
 12126 ;; This function is called by:
 12127 ;;		_UART1_Initialize
 12128 ;;		_UART1_Receive_ISR
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           	psect	text73
 12133  00460C                     __ptext73:
 12134                           	callstack 0
 12135  00460C                     _UART1_DefaultErrorHandler:
 12136                           	callstack 12
 12137  00460C                     
 12138                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 12139  00460C  ECE3  F021         	call	_UART1_RxDataHandler	;wreg free
 12140  004610  0012               	return		;funcret
 12141  004612                     __end_of_UART1_DefaultErrorHandler:
 12142                           	callstack 0
 12143                           
 12144 ;; *************** function _UART1_RxDataHandler *****************
 12145 ;; Defined at:
 12146 ;;		line 297 in file "mcc_generated_files/uart1.c"
 12147 ;; Parameters:    Size  Location     Type
 12148 ;;		None
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;		None
 12151 ;; Return value:  Size  Location     Type
 12152 ;;                  1    wreg      void 
 12153 ;; Registers used:
 12154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12155 ;; Tracked objects:
 12156 ;;		On entry : 0/0
 12157 ;;		On exit  : 0/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12164 ;;Total ram usage:        0 bytes
 12165 ;; Hardware stack levels used: 1
 12166 ;; Hardware stack levels required when called: 4
 12167 ;; This function calls:
 12168 ;;		Nothing
 12169 ;; This function is called by:
 12170 ;;		_UART1_Receive_ISR
 12171 ;;		_UART1_DefaultErrorHandler
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           	psect	text74
 12176  0043C6                     __ptext74:
 12177                           	callstack 0
 12178  0043C6                     _UART1_RxDataHandler:
 12179                           	callstack 13
 12180  0043C6                     
 12181                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 12182  0043C6  0EBA               	movlw	low _uart1RxBuffer
 12183  0043C8  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 12184  0043CA  6ED9               	movwf	fsr2l,c
 12185  0043CC  6ADA               	clrf	fsr2h,c
 12186  0043CE  0E00               	movlw	high _uart1RxBuffer
 12187  0043D0  22DA               	addwfc	fsr2h,f,c
 12188  0043D2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 12189  0043D8  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 12190  0043DA                     
 12191                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 12192  0043DA  0E07               	movlw	7
 12193  0043DC  6431               	cpfsgt	_uart1RxHead^0,c	;volatile
 12194  0043DE  EFF3  F021         	goto	i1u315_21
 12195  0043E2  EFF5  F021         	goto	i1u315_20
 12196  0043E6                     i1u315_21:
 12197  0043E6  EFF7  F021         	goto	i1l4620
 12198  0043EA                     i1u315_20:
 12199  0043EA                     
 12200                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 12201  0043EA  0E00               	movlw	0
 12202  0043EC  6E31               	movwf	_uart1RxHead^0,c	;volatile
 12203  0043EE                     i1l4620:
 12204                           
 12205                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 12206  0043EE  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 12207  0043F0  0012               	return		;funcret
 12208  0043F2                     __end_of_UART1_RxDataHandler:
 12209                           	callstack 0
 12210                           
 12211 ;; *************** function _TMR4_ISR *****************
 12212 ;; Defined at:
 12213 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 12214 ;; Parameters:    Size  Location     Type
 12215 ;;		None
 12216 ;; Auto vars:     Size  Location     Type
 12217 ;;		None
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  1    wreg      void 
 12220 ;; Registers used:
 12221 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12231 ;;Total ram usage:        3 bytes
 12232 ;; Hardware stack levels used: 1
 12233 ;; Hardware stack levels required when called: 6
 12234 ;; This function calls:
 12235 ;;		_TMR4_CallBack
 12236 ;; This function is called by:
 12237 ;;		Interrupt level 1
 12238 ;; This function uses a non-reentrant model
 12239 ;;
 12240                           
 12241                           	psect	text75
 12242  003D6C                     __ptext75:
 12243                           	callstack 0
 12244  003D6C                     _TMR4_ISR:
 12245                           	callstack 13
 12246                           
 12247                           ;incstack = 0
 12248  003D6C  006F FF60  F01D    	movff	status,??_TMR4_ISR
 12249  003D72  006F FFE8  F01E    	movff	pclath,??_TMR4_ISR+1
 12250  003D78  006F FFEC  F01F    	movff	pclatu,??_TMR4_ISR+2
 12251  003D7E                     
 12252                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 12253  003D7E  0139               	movlb	57	; () banked
 12254  003D80  91A7               	bcf	167,0,b	;volatile
 12255  003D82                     
 12256                           ; BSR set to: 57
 12257                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 12258  003D82  4A27               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 12259  003D84  2A28               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 12260  003D86  5028               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 12261  003D88  E109               	bnz	i1u467_20
 12262  003D8A  0E0A               	movlw	10
 12263  003D8C  5C27               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 12264  003D8E  A0D8               	btfss	status,0,c
 12265  003D90  EFCC  F01E         	goto	i1u467_21
 12266  003D94  EFCE  F01E         	goto	i1u467_20
 12267  003D98                     i1u467_21:
 12268  003D98  EFD4  F01E         	goto	i1l688
 12269  003D9C                     i1u467_20:
 12270  003D9C                     
 12271                           ; BSR set to: 57
 12272                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 12273  003D9C  ECA0  F021         	call	_TMR4_CallBack	;wreg free
 12274  003DA0                     
 12275                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 12276  003DA0  0E00               	movlw	0
 12277  003DA2  6E28               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 12278  003DA4  0E00               	movlw	0
 12279  003DA6  6E27               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 12280  003DA8                     i1l688:
 12281  003DA8  0060  F07F  FFFB   	movff	??_TMR4_ISR+2,pclatu
 12282  003DAE  0060  F07B  FFFA   	movff	??_TMR4_ISR+1,pclath
 12283  003DB4  0060  F077  FFD8   	movff	??_TMR4_ISR,status
 12284  003DBA  0011               	retfie		f
 12285  003DBC                     __end_of_TMR4_ISR:
 12286                           	callstack 0
 12287                           
 12288 ;; *************** function _TMR4_CallBack *****************
 12289 ;; Defined at:
 12290 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;		None
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;		None
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  1    wreg      void 
 12297 ;; Registers used:
 12298 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/0
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12308 ;;Total ram usage:        0 bytes
 12309 ;; Hardware stack levels used: 1
 12310 ;; Hardware stack levels required when called: 5
 12311 ;; This function calls:
 12312 ;;		Absolute function
 12313 ;;		_TMR4_10msISR
 12314 ;;		_TMR4_DefaultInterruptHandler
 12315 ;; This function is called by:
 12316 ;;		_TMR4_ISR
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           	psect	text76
 12321  004340                     __ptext76:
 12322                           	callstack 0
 12323  004340                     _TMR4_CallBack:
 12324                           	callstack 13
 12325  004340                     
 12326                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 12327  004340  0100               	movlb	0	; () banked
 12328  004342  51F1               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12329  004344  11F2               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12330  004346  B4D8               	btfsc	status,2,c
 12331  004348  EFA8  F021         	goto	i1u453_21
 12332  00434C  EFAA  F021         	goto	i1u453_20
 12333  004350                     i1u453_21:
 12334  004350  EFB6  F021         	goto	i1l692
 12335  004354                     i1u453_20:
 12336  004354                     
 12337                           ; BSR set to: 0
 12338                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 12339  004354  D802               	call	i1u454_28
 12340  004356  EFB6  F021         	goto	i1u454_29
 12341  00435A                     i1u454_28:
 12342  00435A  0005               	push	
 12343  00435C  6EFA               	movwf	pclath,c
 12344  00435E  51F1               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12345  004360  6EFD               	movwf	tosl,c
 12346  004362  51F2               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12347  004364  6EFE               	movwf	tosh,c
 12348  004366  6AFF               	clrf	tosu,c
 12349  004368  50FA               	movf	pclath,w,c
 12350  00436A  0012               	return		;indir
 12351  00436C                     i1u454_29:
 12352  00436C                     i1l692:
 12353  00436C  0012               	return		;funcret
 12354  00436E                     __end_of_TMR4_CallBack:
 12355                           	callstack 0
 12356                           
 12357 ;; *************** function _TMR4_10msISR *****************
 12358 ;; Defined at:
 12359 ;;		line 65 in file "main.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		status,2, status,0
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12377 ;;Total ram usage:        0 bytes
 12378 ;; Hardware stack levels used: 1
 12379 ;; Hardware stack levels required when called: 4
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_main
 12384 ;;		_TMR4_CallBack
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text77
 12389  004612                     __ptext77:
 12390                           	callstack 0
 12391  004612                     _TMR4_10msISR:
 12392                           	callstack 13
 12393  004612                     
 12394                           ;main.c: 66:     ++cycle10ms;
 12395  004612  0100               	movlb	0	; () banked
 12396  004614  2BEA               	incf	_cycle10ms& (0+255),f,b
 12397  004616                     
 12398                           ; BSR set to: 0
 12399  004616  0012               	return		;funcret
 12400  004618                     __end_of_TMR4_10msISR:
 12401                           	callstack 0
 12402                           
 12403 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 12404 ;; Defined at:
 12405 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;		None
 12408 ;; Auto vars:     Size  Location     Type
 12409 ;;		None
 12410 ;; Return value:  Size  Location     Type
 12411 ;;                  1    wreg      void 
 12412 ;; Registers used:
 12413 ;;		None
 12414 ;; Tracked objects:
 12415 ;;		On entry : 0/0
 12416 ;;		On exit  : 0/0
 12417 ;;		Unchanged: 0/0
 12418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12423 ;;Total ram usage:        0 bytes
 12424 ;; Hardware stack levels used: 1
 12425 ;; Hardware stack levels required when called: 4
 12426 ;; This function calls:
 12427 ;;		Nothing
 12428 ;; This function is called by:
 12429 ;;		_TMR4_Initialize
 12430 ;;		_TMR4_CallBack
 12431 ;; This function uses a non-reentrant model
 12432 ;;
 12433                           
 12434                           	psect	text78
 12435  00461C                     __ptext78:
 12436                           	callstack 0
 12437  00461C                     _TMR4_DefaultInterruptHandler:
 12438                           	callstack 13
 12439  00461C  0012               	return		;funcret
 12440  00461E                     __end_of_TMR4_DefaultInterruptHandler:
 12441                           	callstack 0
 12442                           
 12443 ;; *************** function _Default_ISR *****************
 12444 ;; Defined at:
 12445 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 12446 ;; Parameters:    Size  Location     Type
 12447 ;;		None
 12448 ;; Auto vars:     Size  Location     Type
 12449 ;;		None
 12450 ;; Return value:  Size  Location     Type
 12451 ;;                  1    wreg      void 
 12452 ;; Registers used:
 12453 ;;		None
 12454 ;; Tracked objects:
 12455 ;;		On entry : 0/0
 12456 ;;		On exit  : 0/0
 12457 ;;		Unchanged: 0/0
 12458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12463 ;;Total ram usage:        0 bytes
 12464 ;; Hardware stack levels used: 1
 12465 ;; This function calls:
 12466 ;;		Nothing
 12467 ;; This function is called by:
 12468 ;;		Interrupt level 2
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text79
 12473  004620                     __ptext79:
 12474                           	callstack 0
 12475  004620                     _Default_ISR:
 12476                           	callstack 15
 12477  004620  0011               	retfie		f
 12478  004622                     __end_of_Default_ISR:
 12479                           	callstack 0
 12480                           
 12481 ;; *************** function _CCP3_CaptureISR *****************
 12482 ;; Defined at:
 12483 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;		None
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;  module          2    4[COMRAM] struct CCPR3Reg_tag
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  1    wreg      void 
 12490 ;; Registers used:
 12491 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;Total ram usage:        4 bytes
 12502 ;; Hardware stack levels used: 1
 12503 ;; Hardware stack levels required when called: 1
 12504 ;; This function calls:
 12505 ;;		Absolute function
 12506 ;;		_CCP3_DefaultCallBack
 12507 ;; This function is called by:
 12508 ;;		Interrupt level 2
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512                           	psect	text80
 12513  003E08                     __ptext80:
 12514                           	callstack 0
 12515  003E08                     _CCP3_CaptureISR:
 12516                           	callstack 14
 12517                           
 12518                           ;incstack = 0
 12519  003E08  006F FFE8  F003    	movff	pclath,??_CCP3_CaptureISR
 12520  003E0E  006F FFEC  F004    	movff	pclatu,??_CCP3_CaptureISR+1
 12521  003E14  0139               	movlb	57	; () banked
 12522  003E16  93A9               	bcf	169,1,b	;volatile
 12523  003E18  006F FDD0  F005    	movff	16244,CCP3_CaptureISR@module	;volatile
 12524  003E1E  006F FDD4  F006    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 12525  003E24                     
 12526                           ; BSR set to: 57
 12527  003E24  C005  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 12528  003E28  C006  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 12529  003E2C  D802               	call	i2u463_48
 12530  003E2E  EF23  F01F         	goto	i2u463_49
 12531  003E32                     i2u463_48:
 12532  003E32  0005               	push	
 12533  003E34  6EFA               	movwf	pclath,c
 12534  003E36  0100               	movlb	0	; () banked
 12535  003E38  51F7               	movf	_CCP3_CallBack& (0+255),w,b
 12536  003E3A  6EFD               	movwf	tosl,c
 12537  003E3C  51F8               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 12538  003E3E  6EFE               	movwf	tosh,c
 12539  003E40  6AFF               	clrf	tosu,c
 12540  003E42  50FA               	movf	pclath,w,c
 12541  003E44  0012               	return		;indir
 12542  003E46                     i2u463_49:
 12543  003E46  0060  F013  FFFB   	movff	??_CCP3_CaptureISR+1,pclatu
 12544  003E4C  0060  F00F  FFFA   	movff	??_CCP3_CaptureISR,pclath
 12545  003E52  0011               	retfie		f
 12546  003E54                     __end_of_CCP3_CaptureISR:
 12547                           	callstack 0
 12548                           
 12549 ;; *************** function _CCP3_DefaultCallBack *****************
 12550 ;; Defined at:
 12551 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  capturedValu    2    0[COMRAM] unsigned short 
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;		None
 12556 ;; Return value:  Size  Location     Type
 12557 ;;                  1    wreg      void 
 12558 ;; Registers used:
 12559 ;;		wreg, status,2, status,0
 12560 ;; Tracked objects:
 12561 ;;		On entry : 0/0
 12562 ;;		On exit  : 0/0
 12563 ;;		Unchanged: 0/0
 12564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12568 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;Total ram usage:        2 bytes
 12570 ;; Hardware stack levels used: 1
 12571 ;; This function calls:
 12572 ;;		Nothing
 12573 ;; This function is called by:
 12574 ;;		_CCP3_Initialize
 12575 ;;		_CCP3_CaptureISR
 12576 ;; This function uses a non-reentrant model
 12577 ;;
 12578                           
 12579                           	psect	text81
 12580  004284                     __ptext81:
 12581                           	callstack 0
 12582  004284                     _CCP3_DefaultCallBack:
 12583                           	callstack 14
 12584  004284  AECD               	btfss	205,7,c	;volatile
 12585  004286  EF47  F021         	goto	i2u450_41
 12586  00428A  EF49  F021         	goto	i2u450_40
 12587  00428E                     i2u450_41:
 12588  00428E  EF4F  F021         	goto	i2l5592
 12589  004292                     i2u450_40:
 12590  004292  C001  F02B         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 12591  004296  C002  F02C         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 12592  00429A  EF59  F021         	goto	i2l438
 12593  00429E                     i2l5592:
 12594  00429E  502B               	movf	_distLeftM^0,w,c
 12595  0042A0  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 12596  0042A2  0100               	movlb	0	; () banked
 12597  0042A4  6FE6               	movwf	_distLeft& (0+255),b	;volatile
 12598  0042A6  502C               	movf	(_distLeftM+1)^0,w,c
 12599  0042A8  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 12600  0042AA  6FE7               	movwf	(_distLeft+1)& (0+255),b	;volatile
 12601  0042AC                     
 12602                           ; BSR set to: 0
 12603  0042AC  90D8               	bcf	status,0,c
 12604  0042AE  33E7               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 12605  0042B0  33E6               	rrcf	_distLeft& (0+255),f,b	;volatile
 12606  0042B2                     i2l438:
 12607  0042B2  0012               	return		;funcret
 12608  0042B4                     __end_of_CCP3_DefaultCallBack:
 12609                           	callstack 0
 12610                           
 12611 ;; *************** function _CCP4_CaptureISR *****************
 12612 ;; Defined at:
 12613 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 12614 ;; Parameters:    Size  Location     Type
 12615 ;;		None
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;  module          2   10[COMRAM] struct CCPR4Reg_tag
 12618 ;; Return value:  Size  Location     Type
 12619 ;;                  1    wreg      void 
 12620 ;; Registers used:
 12621 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12622 ;; Tracked objects:
 12623 ;;		On entry : 0/0
 12624 ;;		On exit  : 0/0
 12625 ;;		Unchanged: 0/0
 12626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12631 ;;Total ram usage:        4 bytes
 12632 ;; Hardware stack levels used: 1
 12633 ;; Hardware stack levels required when called: 1
 12634 ;; This function calls:
 12635 ;;		Absolute function
 12636 ;;		_CCP4_DefaultCallBack
 12637 ;; This function is called by:
 12638 ;;		Interrupt level 2
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text82
 12643  003E54                     __ptext82:
 12644                           	callstack 0
 12645  003E54                     _CCP4_CaptureISR:
 12646                           	callstack 14
 12647                           
 12648                           ;incstack = 0
 12649  003E54  006F FFE8  F009    	movff	pclath,??_CCP4_CaptureISR
 12650  003E5A  006F FFEC  F00A    	movff	pclatu,??_CCP4_CaptureISR+1
 12651  003E60                     
 12652                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 12653  003E60  0139               	movlb	57	; () banked
 12654  003E62  91AA               	bcf	170,0,b	;volatile
 12655                           
 12656                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 12657  003E64  006F FDC0  F00B    	movff	16240,CCP4_CaptureISR@module	;volatile
 12658                           
 12659                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 12660  003E6A  006F FDC4  F00C    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 12661  003E70                     
 12662                           ; BSR set to: 57
 12663                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 12664  003E70  C00B  F007         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 12665  003E74  C00C  F008         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 12666  003E78  D802               	call	i2u464_48
 12667  003E7A  EF49  F01F         	goto	i2u464_49
 12668  003E7E                     i2u464_48:
 12669  003E7E  0005               	push	
 12670  003E80  6EFA               	movwf	pclath,c
 12671  003E82  0100               	movlb	0	; () banked
 12672  003E84  51F5               	movf	_CCP4_CallBack& (0+255),w,b
 12673  003E86  6EFD               	movwf	tosl,c
 12674  003E88  51F6               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 12675  003E8A  6EFE               	movwf	tosh,c
 12676  003E8C  6AFF               	clrf	tosu,c
 12677  003E8E  50FA               	movf	pclath,w,c
 12678  003E90  0012               	return		;indir
 12679  003E92                     i2u464_49:
 12680  003E92  0060  F02B  FFFB   	movff	??_CCP4_CaptureISR+1,pclatu
 12681  003E98  0060  F027  FFFA   	movff	??_CCP4_CaptureISR,pclath
 12682  003E9E  0011               	retfie		f
 12683  003EA0                     __end_of_CCP4_CaptureISR:
 12684                           	callstack 0
 12685                           
 12686 ;; *************** function _CCP4_DefaultCallBack *****************
 12687 ;; Defined at:
 12688 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;  capturedValu    2    6[COMRAM] unsigned short 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  1    wreg      void 
 12695 ;; Registers used:
 12696 ;;		wreg, status,2, status,0
 12697 ;; Tracked objects:
 12698 ;;		On entry : 0/0
 12699 ;;		On exit  : 0/0
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12706 ;;Total ram usage:        2 bytes
 12707 ;; Hardware stack levels used: 1
 12708 ;; This function calls:
 12709 ;;		Nothing
 12710 ;; This function is called by:
 12711 ;;		_CCP4_Initialize
 12712 ;;		_CCP4_CaptureISR
 12713 ;; This function uses a non-reentrant model
 12714 ;;
 12715                           
 12716                           	psect	text83
 12717  0042B4                     __ptext83:
 12718                           	callstack 0
 12719  0042B4                     _CCP4_DefaultCallBack:
 12720                           	callstack 14
 12721  0042B4                     
 12722                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 12723  0042B4  ACCD               	btfss	205,6,c	;volatile
 12724  0042B6  EF5F  F021         	goto	i2u451_41
 12725  0042BA  EF61  F021         	goto	i2u451_40
 12726  0042BE                     i2u451_41:
 12727  0042BE  EF67  F021         	goto	i2l5600
 12728  0042C2                     i2u451_40:
 12729  0042C2                     
 12730                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 12731  0042C2  C007  F029         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 12732  0042C6  C008  F02A         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 12733                           
 12734                           ;mcc_generated_files/ccp4.c: 70:     } else {
 12735  0042CA  EF71  F021         	goto	i2l476
 12736  0042CE                     i2l5600:
 12737                           
 12738                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 12739  0042CE  5029               	movf	_distRightM^0,w,c
 12740  0042D0  5C07               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 12741  0042D2  0100               	movlb	0	; () banked
 12742  0042D4  6FE4               	movwf	_distRight& (0+255),b	;volatile
 12743  0042D6  502A               	movf	(_distRightM+1)^0,w,c
 12744  0042D8  5808               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 12745  0042DA  6FE5               	movwf	(_distRight+1)& (0+255),b	;volatile
 12746  0042DC                     
 12747                           ; BSR set to: 0
 12748                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 12749  0042DC  90D8               	bcf	status,0,c
 12750  0042DE  33E5               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 12751  0042E0  33E4               	rrcf	_distRight& (0+255),f,b	;volatile
 12752  0042E2                     i2l476:
 12753  0042E2  0012               	return		;funcret
 12754  0042E4                     __end_of_CCP4_DefaultCallBack:
 12755                           	callstack 0
 12756                           
 12757 ;; *************** function _TMR5_GATE_ISR *****************
 12758 ;; Defined at:
 12759 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;		None
 12762 ;; Auto vars:     Size  Location     Type
 12763 ;;		None
 12764 ;; Return value:  Size  Location     Type
 12765 ;;                  1    wreg      void 
 12766 ;; Registers used:
 12767 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12768 ;; Tracked objects:
 12769 ;;		On entry : 0/0
 12770 ;;		On exit  : 0/0
 12771 ;;		Unchanged: 0/0
 12772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12777 ;;Total ram usage:        2 bytes
 12778 ;; Hardware stack levels used: 1
 12779 ;; Hardware stack levels required when called: 3
 12780 ;; This function calls:
 12781 ;;		Absolute function
 12782 ;;		_TMR5_DefaultGateInterruptHandler
 12783 ;; This function is called by:
 12784 ;;		Interrupt level 2
 12785 ;; This function uses a non-reentrant model
 12786 ;;
 12787                           
 12788                           	psect	text84
 12789  003FC8                     __ptext84:
 12790                           	callstack 0
 12791  003FC8                     _TMR5_GATE_ISR:
 12792                           	callstack 12
 12793                           
 12794                           ;incstack = 0
 12795  003FC8  006F FFE8  F015    	movff	pclath,??_TMR5_GATE_ISR
 12796  003FCE  006F FFEC  F016    	movff	pclatu,??_TMR5_GATE_ISR+1
 12797  003FD4                     
 12798                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 12799  003FD4  0139               	movlb	57	; () banked
 12800  003FD6  9FA8               	bcf	168,7,b	;volatile
 12801  003FD8                     
 12802                           ; BSR set to: 57
 12803                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 12804  003FD8  5038               	movf	_TMR5_GateInterruptHandler^0,w,c
 12805  003FDA  1039               	iorwf	(_TMR5_GateInterruptHandler+1)^0,w,c
 12806  003FDC  B4D8               	btfsc	status,2,c
 12807  003FDE  EFF3  F01F         	goto	i2u465_41
 12808  003FE2  EFF5  F01F         	goto	i2u465_40
 12809  003FE6                     i2u465_41:
 12810  003FE6  EF01  F020         	goto	i2l552
 12811  003FEA                     i2u465_40:
 12812  003FEA                     
 12813                           ; BSR set to: 57
 12814                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 12815  003FEA  D802               	call	i2u466_48
 12816  003FEC  EF01  F020         	goto	i2u466_49
 12817  003FF0                     i2u466_48:
 12818  003FF0  0005               	push	
 12819  003FF2  6EFA               	movwf	pclath,c
 12820  003FF4  5038               	movf	_TMR5_GateInterruptHandler^0,w,c
 12821  003FF6  6EFD               	movwf	tosl,c
 12822  003FF8  5039               	movf	(_TMR5_GateInterruptHandler+1)^0,w,c
 12823  003FFA  6EFE               	movwf	tosh,c
 12824  003FFC  6AFF               	clrf	tosu,c
 12825  003FFE  50FA               	movf	pclath,w,c
 12826  004000  0012               	return		;indir
 12827  004002                     i2u466_49:
 12828  004002                     i2l552:
 12829  004002  0060  F05B  FFFB   	movff	??_TMR5_GATE_ISR+1,pclatu
 12830  004008  0060  F057  FFFA   	movff	??_TMR5_GATE_ISR,pclath
 12831  00400E  0011               	retfie		f
 12832  004010                     __end_of_TMR5_GATE_ISR:
 12833                           	callstack 0
 12834                           
 12835 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 12836 ;; Defined at:
 12837 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;		None
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;		None
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  1    wreg      void 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0, cstack
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;Total ram usage:        0 bytes
 12856 ;; Hardware stack levels used: 1
 12857 ;; Hardware stack levels required when called: 2
 12858 ;; This function calls:
 12859 ;;		_TMR5_ReadTimer
 12860 ;;		_TMR5_Reload
 12861 ;; This function is called by:
 12862 ;;		_TMR5_Initialize
 12863 ;;		_TMR5_GATE_ISR
 12864 ;; This function uses a non-reentrant model
 12865 ;;
 12866                           
 12867                           	psect	text85
 12868  0044D8                     __ptext85:
 12869                           	callstack 0
 12870  0044D8                     _TMR5_DefaultGateInterruptHandler:
 12871                           	callstack 12
 12872  0044D8                     
 12873                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 12874  0044D8  EC4A  F022         	call	_TMR5_ReadTimer	;wreg free
 12875  0044DC  C00D  F0ED         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 12876  0044E0  C00E  F0EE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 12877  0044E4                     
 12878                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 12879  0044E4  0100               	movlb	0	; () banked
 12880  0044E6  90D8               	bcf	status,0,c
 12881  0044E8  33EE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 12882  0044EA  33ED               	rrcf	_distFront& (0+255),f,b	;volatile
 12883  0044EC                     
 12884                           ; BSR set to: 0
 12885                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 12886  0044EC  ECCD  F022         	call	_TMR5_Reload	;wreg free
 12887  0044F0                     
 12888                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 12889  0044F0  0139               	movlb	57	; () banked
 12890  0044F2  9FA8               	bcf	168,7,b	;volatile
 12891  0044F4                     
 12892                           ; BSR set to: 57
 12893  0044F4  0012               	return		;funcret
 12894  0044F6                     __end_of_TMR5_DefaultGateInterruptHandler:
 12895                           	callstack 0
 12896                           
 12897 ;; *************** function _TMR5_Reload *****************
 12898 ;; Defined at:
 12899 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;		None
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;		None
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      void 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;Total ram usage:        0 bytes
 12918 ;; Hardware stack levels used: 1
 12919 ;; Hardware stack levels required when called: 1
 12920 ;; This function calls:
 12921 ;;		_TMR5_WriteTimer
 12922 ;; This function is called by:
 12923 ;;		_TMR5_DefaultGateInterruptHandler
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           	psect	text86
 12928  00459A                     __ptext86:
 12929                           	callstack 0
 12930  00459A                     _TMR5_Reload:
 12931                           	callstack 12
 12932  00459A                     
 12933                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 12934  00459A  C03A  F00D         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 12935  00459E  C03B  F00E         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 12936  0045A2  ECF9  F021         	call	_TMR5_WriteTimer	;wreg free
 12937  0045A6  0012               	return		;funcret
 12938  0045A8                     __end_of_TMR5_Reload:
 12939                           	callstack 0
 12940                           
 12941 ;; *************** function _TMR5_WriteTimer *****************
 12942 ;; Defined at:
 12943 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 12944 ;; Parameters:    Size  Location     Type
 12945 ;;  timerVal        2   12[COMRAM] unsigned short 
 12946 ;; Auto vars:     Size  Location     Type
 12947 ;;		None
 12948 ;; Return value:  Size  Location     Type
 12949 ;;                  1    wreg      void 
 12950 ;; Registers used:
 12951 ;;		wreg, status,2
 12952 ;; Tracked objects:
 12953 ;;		On entry : 0/0
 12954 ;;		On exit  : 0/0
 12955 ;;		Unchanged: 0/0
 12956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12961 ;;Total ram usage:        2 bytes
 12962 ;; Hardware stack levels used: 1
 12963 ;; This function calls:
 12964 ;;		Nothing
 12965 ;; This function is called by:
 12966 ;;		_TMR5_Reload
 12967 ;; This function uses a non-reentrant model
 12968 ;;
 12969                           
 12970                           	psect	text87
 12971  0043F2                     __ptext87:
 12972                           	callstack 0
 12973  0043F2                     _TMR5_WriteTimer:
 12974                           	callstack 12
 12975  0043F2                     
 12976                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 12977  0043F2  A49A               	btfss	154,2,c	;volatile
 12978  0043F4  EFFE  F021         	goto	i2u316_41
 12979  0043F8  EF00  F022         	goto	i2u316_40
 12980  0043FC                     i2u316_41:
 12981  0043FC  EF09  F022         	goto	i2l4638
 12982  004400                     i2u316_40:
 12983  004400                     
 12984                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 12985  004400  909A               	bcf	154,0,c	;volatile
 12986  004402                     
 12987                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 12988  004402  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12989  004404  6E99               	movwf	153,c	;volatile
 12990  004406                     
 12991                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 12992  004406  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12993  00440C                     
 12994                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 12995  00440C  809A               	bsf	154,0,c	;volatile
 12996                           
 12997                           ;mcc_generated_files/tmr5.c: 146:     }
 12998  00440E  EF0E  F022         	goto	i2l534
 12999  004412                     i2l4638:
 13000                           
 13001                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 13002  004412  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 13003  004414  6E99               	movwf	153,c	;volatile
 13004  004416                     
 13005                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 13006  004416  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13007  00441C                     i2l534:
 13008  00441C  0012               	return		;funcret
 13009  00441E                     __end_of_TMR5_WriteTimer:
 13010                           	callstack 0
 13011                           
 13012 ;; *************** function _TMR5_ReadTimer *****************
 13013 ;; Defined at:
 13014 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;		None
 13017 ;; Auto vars:     Size  Location     Type
 13018 ;;  readVal         2   16[COMRAM] unsigned short 
 13019 ;;  readValLow      1   19[COMRAM] unsigned char 
 13020 ;;  readValHigh     1   18[COMRAM] unsigned char 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  2   12[COMRAM] unsigned short 
 13023 ;; Registers used:
 13024 ;;		wreg, status,2
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13031 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;Total ram usage:        8 bytes
 13035 ;; Hardware stack levels used: 1
 13036 ;; This function calls:
 13037 ;;		Nothing
 13038 ;; This function is called by:
 13039 ;;		_TMR5_DefaultGateInterruptHandler
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043                           	psect	text88
 13044  004494                     __ptext88:
 13045                           	callstack 0
 13046  004494                     _TMR5_ReadTimer:
 13047                           	callstack 13
 13048  004494                     
 13049                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 13050  004494  829A               	bsf	154,1,c	;volatile
 13051                           
 13052                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 13053  004496  006F FE60  F014    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 13054                           
 13055                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 13056  00449C  006F FE64  F013    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 13057  0044A2                     
 13058                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 13059  0044A2  5013               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 13060  0044A4  6E0F               	movwf	??_TMR5_ReadTimer^0,c
 13061  0044A6  5014               	movf	TMR5_ReadTimer@readValLow^0,w,c
 13062  0044A8  6E11               	movwf	TMR5_ReadTimer@readVal^0,c
 13063  0044AA  C00F  F012         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 13064  0044AE                     
 13065                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 13066  0044AE  C011  F00D         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 13067  0044B2  C012  F00E         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 13068  0044B6  0012               	return		;funcret
 13069  0044B8                     __end_of_TMR5_ReadTimer:
 13070                           	callstack 0
 13071                           
 13072 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 13073 ;; Defined at:
 13074 ;;		line 192 in file "mcc_generated_files/smt1.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;		None
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;		None
 13079 ;; Return value:  Size  Location     Type
 13080 ;;                  1    wreg      void 
 13081 ;; Registers used:
 13082 ;;		wreg, status,2, status,0
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13092 ;;Total ram usage:        0 bytes
 13093 ;; Hardware stack levels used: 1
 13094 ;; This function calls:
 13095 ;;		Nothing
 13096 ;; This function is called by:
 13097 ;;		Interrupt level 2
 13098 ;; This function uses a non-reentrant model
 13099 ;;
 13100                           
 13101                           	psect	text89
 13102  003F34                     __ptext89:
 13103                           	callstack 0
 13104  003F34                     _SMT1_PR_ACQ_ISR:
 13105                           	callstack 15
 13106  003F34                     
 13107                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 13108  003F34  0139               	movlb	57	; () banked
 13109  003F36  9DA1               	bcf	161,6,b	;volatile
 13110  003F38                     
 13111                           ; BSR set to: 57
 13112                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 13113  003F38  013F               	movlb	63	; () banked
 13114  003F3A  5115               	movf	21,w,b	;volatile
 13115  003F3C  6E34               	movwf	_smtPeriod^0,c	;volatile
 13116  003F3E  5116               	movf	22,w,b	;volatile
 13117  003F40  6E35               	movwf	(_smtPeriod+1)^0,c	;volatile
 13118  003F42  5117               	movf	23,w,b	;volatile
 13119  003F44  6E36               	movwf	(_smtPeriod+2)^0,c	;volatile
 13120  003F46  6A37               	clrf	(_smtPeriod+3)^0,c	;volatile
 13121  003F48                     
 13122                           ; BSR set to: 63
 13123                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 13124  003F48  013C               	movlb	60	; () banked
 13125  003F4A  AB60               	btfss	96,5,b	;volatile
 13126  003F4C  EFAA  F01F         	goto	i2u468_41
 13127  003F50  EFAC  F01F         	goto	i2u468_40
 13128  003F54                     i2u468_41:
 13129  003F54  EFB5  F01F         	goto	i2l5708
 13130  003F58                     i2u468_40:
 13131  003F58                     
 13132                           ; BSR set to: 60
 13133  003F58  0E01               	movlw	1
 13134  003F5A  0100               	movlb	0	; () banked
 13135  003F5C  27CA               	addwf	_smtWay& (0+255),f,b	;volatile
 13136  003F5E  0E00               	movlw	0
 13137  003F60  23CB               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13138  003F62  23CC               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13139  003F64  23CD               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13140  003F66  EFBE  F01F         	goto	i2l856
 13141  003F6A                     i2l5708:
 13142                           
 13143                           ; BSR set to: 60
 13144  003F6A  0EFF               	movlw	255
 13145  003F6C  0100               	movlb	0	; () banked
 13146  003F6E  27CA               	addwf	_smtWay& (0+255),f,b	;volatile
 13147  003F70  0EFF               	movlw	255
 13148  003F72  23CB               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13149  003F74  0EFF               	movlw	255
 13150  003F76  23CC               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13151  003F78  0EFF               	movlw	255
 13152  003F7A  23CD               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13153  003F7C                     i2l856:
 13154                           
 13155                           ; BSR set to: 0
 13156  003F7C  0011               	retfie		f
 13157  003F7E                     __end_of_SMT1_PR_ACQ_ISR:
 13158                           	callstack 0
 13159                           
 13160 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 13161 ;; Defined at:
 13162 ;;		line 203 in file "mcc_generated_files/smt1.c"
 13163 ;; Parameters:    Size  Location     Type
 13164 ;;		None
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;		None
 13167 ;; Return value:  Size  Location     Type
 13168 ;;                  1    wreg      void 
 13169 ;; Registers used:
 13170 ;;		wreg, status,2, status,0
 13171 ;; Tracked objects:
 13172 ;;		On entry : 0/0
 13173 ;;		On exit  : 0/0
 13174 ;;		Unchanged: 0/0
 13175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;Total ram usage:        0 bytes
 13181 ;; Hardware stack levels used: 1
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		Interrupt level 2
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           	psect	text90
 13190  003C78                     __ptext90:
 13191                           	callstack 0
 13192  003C78                     _SMT1_PW_ACQ_ISR:
 13193                           	callstack 15
 13194  003C78                     
 13195                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 13196  003C78  0139               	movlb	57	; () banked
 13197  003C7A  9FA1               	bcf	161,7,b	;volatile
 13198  003C7C                     
 13199                           ; BSR set to: 57
 13200                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 13201  003C7C  013F               	movlb	63	; () banked
 13202  003C7E  5118               	movf	24,w,b	;volatile
 13203  003C80  0100               	movlb	0	; () banked
 13204  003C82  6FCE               	movwf	_smtDuty& (0+255),b	;volatile
 13205  003C84  013F               	movlb	63	; () banked
 13206  003C86  5119               	movf	25,w,b	;volatile
 13207  003C88  0100               	movlb	0	; () banked
 13208  003C8A  6FCF               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 13209  003C8C  013F               	movlb	63	; () banked
 13210  003C8E  511A               	movf	26,w,b	;volatile
 13211  003C90  0100               	movlb	0	; () banked
 13212  003C92  6FD0               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 13213  003C94  6BD1               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 13214  003C96                     
 13215                           ; BSR set to: 0
 13216                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 13217  003C96  013C               	movlb	60	; () banked
 13218  003C98  AB60               	btfss	96,5,b	;volatile
 13219  003C9A  EF51  F01E         	goto	i2u469_41
 13220  003C9E  EF53  F01E         	goto	i2u469_40
 13221  003CA2                     i2u469_41:
 13222  003CA2  EF5C  F01E         	goto	i2l5718
 13223  003CA6                     i2u469_40:
 13224  003CA6                     
 13225                           ; BSR set to: 60
 13226  003CA6  0E01               	movlw	1
 13227  003CA8  0100               	movlb	0	; () banked
 13228  003CAA  27CA               	addwf	_smtWay& (0+255),f,b	;volatile
 13229  003CAC  0E00               	movlw	0
 13230  003CAE  23CB               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13231  003CB0  23CC               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13232  003CB2  23CD               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13233  003CB4  EF65  F01E         	goto	i2l863
 13234  003CB8                     i2l5718:
 13235                           
 13236                           ; BSR set to: 60
 13237  003CB8  0EFF               	movlw	255
 13238  003CBA  0100               	movlb	0	; () banked
 13239  003CBC  27CA               	addwf	_smtWay& (0+255),f,b	;volatile
 13240  003CBE  0EFF               	movlw	255
 13241  003CC0  23CB               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 13242  003CC2  0EFF               	movlw	255
 13243  003CC4  23CC               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 13244  003CC6  0EFF               	movlw	255
 13245  003CC8  23CD               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 13246  003CCA                     i2l863:
 13247                           
 13248                           ; BSR set to: 0
 13249  003CCA  0011               	retfie		f
 13250  003CCC                     __end_of_SMT1_PW_ACQ_ISR:
 13251                           	callstack 0
 13252                           
 13253 ;; *************** function _SMT1_Overflow_ISR *****************
 13254 ;; Defined at:
 13255 ;;		line 213 in file "mcc_generated_files/smt1.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;		None
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;		None
 13260 ;; Return value:  Size  Location     Type
 13261 ;;                  1    wreg      void 
 13262 ;; Registers used:
 13263 ;;		wreg, status,2
 13264 ;; Tracked objects:
 13265 ;;		On entry : 0/0
 13266 ;;		On exit  : 0/0
 13267 ;;		Unchanged: 0/0
 13268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;Total ram usage:        0 bytes
 13274 ;; Hardware stack levels used: 1
 13275 ;; This function calls:
 13276 ;;		Nothing
 13277 ;; This function is called by:
 13278 ;;		Interrupt level 2
 13279 ;; This function uses a non-reentrant model
 13280 ;;
 13281                           
 13282                           	psect	text91
 13283  004448                     __ptext91:
 13284                           	callstack 0
 13285  004448                     _SMT1_Overflow_ISR:
 13286                           	callstack 15
 13287  004448                     
 13288                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 13289  004448  0139               	movlb	57	; () banked
 13290  00444A  9BA1               	bcf	161,5,b	;volatile
 13291  00444C                     
 13292                           ; BSR set to: 57
 13293                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 13294  00444C  0E00               	movlw	0
 13295  00444E  6E34               	movwf	_smtPeriod^0,c	;volatile
 13296  004450  0E00               	movlw	0
 13297  004452  6E35               	movwf	(_smtPeriod+1)^0,c	;volatile
 13298  004454  0E00               	movlw	0
 13299  004456  6E36               	movwf	(_smtPeriod+2)^0,c	;volatile
 13300  004458  0E00               	movlw	0
 13301  00445A  6E37               	movwf	(_smtPeriod+3)^0,c	;volatile
 13302                           
 13303                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 13304  00445C  0E00               	movlw	0
 13305  00445E  0100               	movlb	0	; () banked
 13306  004460  6FCE               	movwf	_smtDuty& (0+255),b	;volatile
 13307  004462  0E00               	movlw	0
 13308  004464  6FCF               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 13309  004466  0E00               	movlw	0
 13310  004468  6FD0               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 13311  00446A  0E00               	movlw	0
 13312  00446C  6FD1               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 13313  00446E                     
 13314                           ; BSR set to: 0
 13315  00446E  0011               	retfie		f
 13316  004470                     __end_of_SMT1_Overflow_ISR:
 13317                           	callstack 0
 13318                           
 13319                           ;
 13320                           ; Interrupt Vector Table @ 0x8
 13321                           ;
 13322                           
 13323                           	psect	ivt0x8
 13324  000008                     __pivt0x8:
 13325                           	callstack 0
 13326  000008                     ivt0x8_base:
 13327                           	callstack 0
 13328                           
 13329                           ; Vector 0 : SWINT
 13330  000008  1188               	dw	_Default_ISR shr (0+2)
 13331                           
 13332                           ; Vector 1 : HLVD
 13333  00000A  1188               	dw	_Default_ISR shr (0+2)
 13334                           
 13335                           ; Vector 2 : OSF
 13336  00000C  1188               	dw	_Default_ISR shr (0+2)
 13337                           
 13338                           ; Vector 3 : CSW
 13339  00000E  1188               	dw	_Default_ISR shr (0+2)
 13340                           
 13341                           ; Vector 4 : NVM
 13342  000010  1188               	dw	_Default_ISR shr (0+2)
 13343                           
 13344                           ; Vector 5 : SCAN
 13345  000012  1188               	dw	_Default_ISR shr (0+2)
 13346                           
 13347                           ; Vector 6 : CRC
 13348  000014  1188               	dw	_Default_ISR shr (0+2)
 13349                           
 13350                           ; Vector 7 : IOC
 13351  000016  1188               	dw	_Default_ISR shr (0+2)
 13352                           
 13353                           ; Vector 8 : INT0
 13354  000018  1188               	dw	_Default_ISR shr (0+2)
 13355                           
 13356                           ; Vector 9 : ZCD
 13357  00001A  1188               	dw	_Default_ISR shr (0+2)
 13358                           
 13359                           ; Vector 10 : AD
 13360  00001C  1188               	dw	_Default_ISR shr (0+2)
 13361                           
 13362                           ; Vector 11 : ADT
 13363  00001E  1188               	dw	_Default_ISR shr (0+2)
 13364                           
 13365                           ; Vector 12 : CMP1
 13366  000020  1188               	dw	_Default_ISR shr (0+2)
 13367                           
 13368                           ; Vector 13 : SMT1
 13369  000022  1112               	dw	_SMT1_Overflow_ISR shr (0+2)
 13370                           
 13371                           ; Vector 14 : SMT1PRA
 13372  000024  0FCD               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 13373                           
 13374                           ; Vector 15 : SMT1PRW
 13375  000026  0F1E               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 13376                           
 13377                           ; Vector 16 : DMA1SCNT
 13378  000028  1188               	dw	_Default_ISR shr (0+2)
 13379                           
 13380                           ; Vector 17 : DMA1DCNT
 13381  00002A  1188               	dw	_Default_ISR shr (0+2)
 13382                           
 13383                           ; Vector 18 : DMA1OR
 13384  00002C  1188               	dw	_Default_ISR shr (0+2)
 13385                           
 13386                           ; Vector 19 : DMA1A
 13387  00002E  1188               	dw	_Default_ISR shr (0+2)
 13388                           
 13389                           ; Vector 20 : SPI1RX
 13390  000030  1188               	dw	_Default_ISR shr (0+2)
 13391                           
 13392                           ; Vector 21 : SPI1TX
 13393  000032  1188               	dw	_Default_ISR shr (0+2)
 13394                           
 13395                           ; Vector 22 : SPI1
 13396  000034  1188               	dw	_Default_ISR shr (0+2)
 13397                           
 13398                           ; Vector 23 : I2C1RX
 13399  000036  1188               	dw	_Default_ISR shr (0+2)
 13400                           
 13401                           ; Vector 24 : I2C1TX
 13402  000038  1188               	dw	_Default_ISR shr (0+2)
 13403                           
 13404                           ; Vector 25 : I2C1
 13405  00003A  1188               	dw	_Default_ISR shr (0+2)
 13406                           
 13407                           ; Vector 26 : I2C1E
 13408  00003C  1188               	dw	_Default_ISR shr (0+2)
 13409                           
 13410                           ; Vector 27 : U1RX
 13411  00003E  0F47               	dw	_UART1_rx_vect_isr shr (0+2)
 13412                           
 13413                           ; Vector 28 : U1TX
 13414  000040  0F33               	dw	_UART1_tx_vect_isr shr (0+2)
 13415                           
 13416                           ; Vector 29 : U1E
 13417  000042  1188               	dw	_Default_ISR shr (0+2)
 13418                           
 13419                           ; Vector 30 : U1
 13420  000044  1188               	dw	_Default_ISR shr (0+2)
 13421                           
 13422                           ; Vector 31 : TMR0
 13423  000046  1188               	dw	_Default_ISR shr (0+2)
 13424                           
 13425                           ; Vector 32 : TMR1
 13426  000048  1188               	dw	_Default_ISR shr (0+2)
 13427                           
 13428                           ; Vector 33 : TMR1G
 13429  00004A  1188               	dw	_Default_ISR shr (0+2)
 13430                           
 13431                           ; Vector 34 : TMR2
 13432  00004C  1188               	dw	_Default_ISR shr (0+2)
 13433                           
 13434                           ; Vector 35 : CCP1
 13435  00004E  1188               	dw	_Default_ISR shr (0+2)
 13436                           
 13437                           ; Vector 36 : Undefined
 13438  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 13439                           
 13440                           ; Vector 37 : NCO1
 13441  000052  1188               	dw	_Default_ISR shr (0+2)
 13442                           
 13443                           ; Vector 38 : CWG1
 13444  000054  1188               	dw	_Default_ISR shr (0+2)
 13445                           
 13446                           ; Vector 39 : CLC1
 13447  000056  1188               	dw	_Default_ISR shr (0+2)
 13448                           
 13449                           ; Vector 40 : INT1
 13450  000058  1188               	dw	_Default_ISR shr (0+2)
 13451                           
 13452                           ; Vector 41 : CMP2
 13453  00005A  1188               	dw	_Default_ISR shr (0+2)
 13454                           
 13455                           ; Vector 42 : DMA2SCNT
 13456  00005C  1188               	dw	_Default_ISR shr (0+2)
 13457                           
 13458                           ; Vector 43 : DMA2DCNT
 13459  00005E  1188               	dw	_Default_ISR shr (0+2)
 13460                           
 13461                           ; Vector 44 : DMA2OR
 13462  000060  1188               	dw	_Default_ISR shr (0+2)
 13463                           
 13464                           ; Vector 45 : DMA2A
 13465  000062  1188               	dw	_Default_ISR shr (0+2)
 13466                           
 13467                           ; Vector 46 : I2C2RX
 13468  000064  1188               	dw	_Default_ISR shr (0+2)
 13469                           
 13470                           ; Vector 47 : I2C2TX
 13471  000066  1188               	dw	_Default_ISR shr (0+2)
 13472                           
 13473                           ; Vector 48 : I2C2
 13474  000068  1188               	dw	_Default_ISR shr (0+2)
 13475                           
 13476                           ; Vector 49 : I2C2E
 13477  00006A  1188               	dw	_Default_ISR shr (0+2)
 13478                           
 13479                           ; Vector 50 : U2RX
 13480  00006C  1188               	dw	_Default_ISR shr (0+2)
 13481                           
 13482                           ; Vector 51 : U2TX
 13483  00006E  1188               	dw	_Default_ISR shr (0+2)
 13484                           
 13485                           ; Vector 52 : U2E
 13486  000070  1188               	dw	_Default_ISR shr (0+2)
 13487                           
 13488                           ; Vector 53 : U2
 13489  000072  1188               	dw	_Default_ISR shr (0+2)
 13490                           
 13491                           ; Vector 54 : TMR3
 13492  000074  1188               	dw	_Default_ISR shr (0+2)
 13493                           
 13494                           ; Vector 55 : TMR3G
 13495  000076  1188               	dw	_Default_ISR shr (0+2)
 13496                           
 13497                           ; Vector 56 : TMR4
 13498  000078  0F5B               	dw	_TMR4_ISR shr (0+2)
 13499                           
 13500                           ; Vector 57 : CCP2
 13501  00007A  1188               	dw	_Default_ISR shr (0+2)
 13502                           
 13503                           ; Vector 58 : Undefined
 13504  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 13505                           
 13506                           ; Vector 59 : CWG2
 13507  00007E  1188               	dw	_Default_ISR shr (0+2)
 13508                           
 13509                           ; Vector 60 : CLC2
 13510  000080  1188               	dw	_Default_ISR shr (0+2)
 13511                           
 13512                           ; Vector 61 : INT2
 13513  000082  1188               	dw	_Default_ISR shr (0+2)
 13514                           
 13515                           ; Vector 62 : Undefined
 13516  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 13517                           
 13518                           ; Vector 63 : Undefined
 13519  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 13520                           
 13521                           ; Vector 64 : Undefined
 13522  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 13523                           
 13524                           ; Vector 65 : Undefined
 13525  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 13526                           
 13527                           ; Vector 66 : Undefined
 13528  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 13529                           
 13530                           ; Vector 67 : Undefined
 13531  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 13532                           
 13533                           ; Vector 68 : Undefined
 13534  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 13535                           
 13536                           ; Vector 69 : Undefined
 13537  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 13538                           
 13539                           ; Vector 70 : TMR5
 13540  000094  1188               	dw	_Default_ISR shr (0+2)
 13541                           
 13542                           ; Vector 71 : TMR5G
 13543  000096  0FF2               	dw	_TMR5_GATE_ISR shr (0+2)
 13544                           
 13545                           ; Vector 72 : TMR6
 13546  000098  1188               	dw	_Default_ISR shr (0+2)
 13547                           
 13548                           ; Vector 73 : CCP3
 13549  00009A  0F82               	dw	_CCP3_CaptureISR shr (0+2)
 13550                           
 13551                           ; Vector 74 : CWG3
 13552  00009C  1188               	dw	_Default_ISR shr (0+2)
 13553                           
 13554                           ; Vector 75 : CLC3
 13555  00009E  1188               	dw	_Default_ISR shr (0+2)
 13556                           
 13557                           ; Vector 76 : Undefined
 13558  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 13559                           
 13560                           ; Vector 77 : Undefined
 13561  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 13562                           
 13563                           ; Vector 78 : Undefined
 13564  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 13565                           
 13566                           ; Vector 79 : Undefined
 13567  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 13568                           
 13569                           ; Vector 80 : CCP4
 13570  0000A8  0F95               	dw	_CCP4_CaptureISR shr (0+2)
 13571                           
 13572                           ; Vector 81 : CLC4
 13573  0000AA  1188               	dw	_Default_ISR shr (0+2)
 13574  0000AC                     ivt0x8_undefint:
 13575                           	callstack 0
 13576  0000AC  00FF               	reset	
 13577                           
 13578                           	psect	text92
 13579  000000                     __ptext92:
 13580                           	callstack 0
 13581  000000                     
 13582                           	psect	rparam
 13583  0000                     
 13584                           	psect	config
 13585                           
 13586                           ;Config register CONFIG1L @ 0x300000
 13587                           ;	External Oscillator Selection
 13588                           ;	FEXTOSC = OFF, Oscillator not enabled
 13589                           ;	Reset Oscillator Selection
 13590                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 13591  300000                     	org	3145728
 13592  300000  8C                 	db	140
 13593                           
 13594                           ;Config register CONFIG1H @ 0x300001
 13595                           ;	Clock out Enable bit
 13596                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 13597                           ;	PRLOCKED One-Way Set Enable bit
 13598                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 13599                           ;	Clock Switch Enable bit
 13600                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13601                           ;	Fail-Safe Clock Monitor Enable bit
 13602                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 13603  300001                     	org	3145729
 13604  300001  FF                 	db	255
 13605                           
 13606                           ;Config register CONFIG2L @ 0x300002
 13607                           ;	MCLR Enable bit
 13608                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 13609                           ;	Power-up timer selection bits
 13610                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 13611                           ;	Multi-vector enable bit
 13612                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 13613                           ;	IVTLOCK bit One-way set enable bit
 13614                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 13615                           ;	Low Power BOR Enable bit
 13616                           ;	LPBOREN = OFF, ULPBOR disabled
 13617                           ;	Brown-out Reset Enable bits
 13618                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 13619  300002                     	org	3145730
 13620  300002  FF                 	db	255
 13621                           
 13622                           ;Config register CONFIG2H @ 0x300003
 13623                           ;	Brown-out Reset Voltage Selection bits
 13624                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 13625                           ;	ZCD Disable bit
 13626                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13627                           ;	PPSLOCK bit One-Way Set Enable bit
 13628                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 13629                           ;	Stack Full/Underflow Reset Enable bit
 13630                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13631                           ;	Debugger Enable bit
 13632                           ;	DEBUG = OFF, Background debugger disabled
 13633                           ;	Extended Instruction Set Enable bit
 13634                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 13635  300003                     	org	3145731
 13636  300003  FF                 	db	255
 13637                           
 13638                           ;Config register CONFIG3L @ 0x300004
 13639                           ;	WDT Period selection bits
 13640                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13641                           ;	WDT operating mode
 13642                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 13643  300004                     	org	3145732
 13644  300004  9F                 	db	159
 13645                           
 13646                           ;Config register CONFIG3H @ 0x300005
 13647                           ;	WDT Window Select bits
 13648                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13649                           ;	WDT input clock selector
 13650                           ;	WDTCCS = SC, Software Control
 13651  300005                     	org	3145733
 13652  300005  FF                 	db	255
 13653                           
 13654                           ;Config register CONFIG4L @ 0x300006
 13655                           ;	Boot Block Size selection bits
 13656                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 13657                           ;	Boot Block enable bit
 13658                           ;	BBEN = OFF, Boot block disabled
 13659                           ;	Storage Area Flash enable bit
 13660                           ;	SAFEN = OFF, SAF disabled
 13661                           ;	Application Block write protection bit
 13662                           ;	WRTAPP = OFF, Application Block not write protected
 13663  300006                     	org	3145734
 13664  300006  FF                 	db	255
 13665                           
 13666                           ;Config register CONFIG4H @ 0x300007
 13667                           ;	Configuration Register Write Protection bit
 13668                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 13669                           ;	Boot Block Write Protection bit
 13670                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 13671                           ;	Data EEPROM Write Protection bit
 13672                           ;	WRTD = OFF, Data EEPROM not write-protected
 13673                           ;	SAF Write protection bit
 13674                           ;	WRTSAF = OFF, SAF not Write Protected
 13675                           ;	Low Voltage Programming Enable bit
 13676                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 13677  300007                     	org	3145735
 13678  300007  FF                 	db	255
 13679                           
 13680                           ;Config register CONFIG5L @ 0x300008
 13681                           ;	PFM and Data EEPROM Code Protection bit
 13682                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 13683  300008                     	org	3145736
 13684  300008  FF                 	db	255
 13685                           
 13686                           ;Config register CONFIG5H @ 0x300009
 13687                           ;	unspecified, using default values
 13688  300009                     	org	3145737
 13689  300009  FF                 	db	255
 13690                           tosu	equ	0x3FFF
 13691                           tosh	equ	0x3FFE
 13692                           tosl	equ	0x3FFD
 13693                           stkptr	equ	0x3FFC
 13694                           pclatu	equ	0x3FFB
 13695                           pclath	equ	0x3FFA
 13696                           pcl	equ	0x3FF9
 13697                           tblptru	equ	0x3FF8
 13698                           tblptrh	equ	0x3FF7
 13699                           tblptrl	equ	0x3FF6
 13700                           tablat	equ	0x3FF5
 13701                           prodh	equ	0x3FF4
 13702                           prodl	equ	0x3FF3
 13703                           indf0	equ	0x3FEF
 13704                           postinc0	equ	0x3FEE
 13705                           postdec0	equ	0x3FED
 13706                           preinc0	equ	0x3FEC
 13707                           plusw0	equ	0x3FEB
 13708                           fsr0h	equ	0x3FEA
 13709                           fsr0l	equ	0x3FE9
 13710                           wreg	equ	0x3FE8
 13711                           indf1	equ	0x3FE7
 13712                           postinc1	equ	0x3FE6
 13713                           postdec1	equ	0x3FE5
 13714                           preinc1	equ	0x3FE4
 13715                           plusw1	equ	0x3FE3
 13716                           fsr1h	equ	0x3FE2
 13717                           fsr1l	equ	0x3FE1
 13718                           bsr	equ	0x3FE0
 13719                           indf2	equ	0x3FDF
 13720                           postinc2	equ	0x3FDE
 13721                           postdec2	equ	0x3FDD
 13722                           preinc2	equ	0x3FDC
 13723                           plusw2	equ	0x3FDB
 13724                           fsr2h	equ	0x3FDA
 13725                           fsr2l	equ	0x3FD9
 13726                           status	equ	0x3FD8

Data Sizes:
    Strings     113
    Constant    0
    Data        0
    BSS         114
    Persistent  25
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      64
    BANK0           160     82     159
    BANK1           256     28      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3386$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3386$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _utoa->_pad
    _dtoa->_pad
    _pad->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _setSteering->_PWM5_LoadDutyValue
    _setSteering->_PWM6_LoadDutyValue
    _calcSpeed->___fltol
    _calcMotorPow->___fltol
    _calcMotorPow->_actSpeed
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _SYSTEM_Initialize->_TMR3_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_printf
    _getCurve->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getCurve->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   53087
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   51940
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   14646
                                             22 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   14454
                                             80 BANK0      2     2      0
                                             16 BANK1      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   13467
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   12985
                                             62 BANK0     10     4      6
                                              0 BANK1     16    16      0
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5099
                                             26 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5953
                                             26 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3687
                                             33 COMRAM     1     1      0
                                             16 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (10) _UART1_Write                                         1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             16 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             31 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      31
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             31 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    4636
                                             17 BANK0      4     4      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    3422
                                              8 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    6430
                                             71 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                             47 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    6859
                                             71 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     946
                                              2 BANK0      4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     845
                                             31 COMRAM     2     0      2
                                             14 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              8 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             31 COMRAM     2     2      0
                                             63 BANK0      8     4      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             22 BANK0     25    17      8
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     985
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     626
                                             22 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   3     3      0       0
                                             22 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            3     3      0       0
                                             28 COMRAM     3     3      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     4     4      0     144
                                              2 COMRAM     4     4      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     4     4      0     144
                                              8 COMRAM     4     4      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       2     2      0     233
                                             20 COMRAM     2     2      0
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getBatteryVoltage
       _ADCC_GetSingleConversion
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
             _utoa
               ___lodiv
               ___lomod
               _pad
     _getReverse
     _printf
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      85        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     181      0       0      83        0.0%
BITBIGSFRhhhhll    17E      0       0      53        0.0%
BITBIGSFRhhhhll    17A      0       0      54        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1C      3C       7       23.4%
BITBIGSFRhhhhll     E3      0       0      50        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      40       1       67.4%
BITBIGSFRhhhhll     44      0       0      59        0.0%
BITBIGSFRhhhhll     3A      0       0      47        0.0%
BITBIGSFRhhhhll     34      0       0      67        0.0%
BITBIGSFRhhhhhh     28      0       0      36        0.0%
BITBIGSFRhhhhll     20      0       0      42        0.0%
BITBIGSFRhhhhll     20      0       0      70        0.0%
BITBIGSFRllhh       15      0       0      74        0.0%
BITBIGSFRhhhhll     12      0       0      48        0.0%
BITBIGSFRlh         11      0       0      73        0.0%
BITBIGSFRhhhhll      B      0       0      66        0.0%
BITBIGSFRhhhhll      A      0       0      41        0.0%
BITBIGSFRhhhhll      8      0       0      55        0.0%
BITBIGSFRllhlhl      6      0       0      77        0.0%
BITBIGSFRlllhhl      6      0       0      80        0.0%
BITBIGSFRhhhhll      6      0       0      57        0.0%
BITBIGSFRhhhhll      6      0       0      68        0.0%
BITBIGSFRhhhhhh      6      0       0      39        0.0%
BITBIGSFRhhhhll      5      0       0      58        0.0%
BITBIGSFRhhhhll      5      0       0      65        0.0%
BITBIGSFRhhhhll      5      0       0      63        0.0%
BITBIGSFRhhhhll      5      0       0      61        0.0%
BITBIGSFRhhhhhh      4      0       0      38        0.0%
BITBIGSFRhhhhll      4      0       0      60        0.0%
BITBIGSFRhhhhll      4      0       0      62        0.0%
BITBIGSFRhhhhll      4      0       0      64        0.0%
BITBIGSFRlllhll      3      0       0      81        0.0%
BITBIGSFRllhll       3      0       0      78        0.0%
BITBIGSFRhhhhhl      3      0       0      40        0.0%
BITBIGSFRllhlhl      2      0       0      76        0.0%
BITBIGSFRhhhhll      1      0       0      49        0.0%
BITBIGSFRllhlhl      1      0       0      75        0.0%
BITBIGSFRlllhhh      1      0       0      79        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      43        0.0%
BITBIGSFRhhhhll      1      0       0      46        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRllllh       1      0       0      82        0.0%
BITBIGSFRhhhhhh      1      0       0      37        0.0%
BITBIGSFRhhhhll      1      0       0      52        0.0%
BITBIGSFRhhhhll      1      0       0      51        0.0%
BITBIGSFRhhhhll      1      0       0      56        0.0%
BITBIGSFRhhhhll      1      0       0      69        0.0%
BITBIGSFRhhl         1      0       0      71        0.0%
BITBIGSFRhl          1      0       0      72        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      84        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jan 24 21:55:13 2024

                             _CCP4_Initialize 42E4                        ??_CCP3_DefaultCallBack 0003  
                                          l72 4588                                            l75 4492  
                                          l69 3EE8                                  ___awdiv@sign 0065  
                           ??_TMR5_WriteTimer 000F                                           l312 3C18  
                                         l404 3E06                                           l308 3BD0  
                                         l309 3BEA                                           l318 45B0  
                                         l520 3F32                                           l441 433E  
                                         l362 45CE                                           l371 45BA  
                                         l188 36AA                                           l284 399C  
                                         l365 45E2                                           l359 45D8  
                                         l368 45C4                                           l712 4252  
                                         l449 460A                                           l482 4310  
                                         l723 4528                                           l555 45EC  
                                         l644 4398                                           l740 41E6  
                                         l709 4540                                           l581 4144  
                                         l726 421C                                           l479 4600  
                                         l751 4558                                           l737 4570  
                                         l754 41B0                                           l923 4510  
                                         l695 45F6                                           l795 4282  
                                         l893 43C4                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 4054                                           _pad 36AC  
                             _TMR2_Initialize 44F6                CCP4_SetCallBack@customCallBack 0020  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 45F8                                  ___flmul@aexp 0083  
                                ___flmul@bexp 0088                            _UART1_Transmit_ISR 4010  
                                ___flmul@sign 0082                                  ___flmul@temp 008D  
                                ___flmul@prod 0089                       __end_of_CCP4_CaptureISR 3EA0  
                                ___fltol@exp1 0021                                          l1042 3C74  
                                        l2011 278A                                          ?_abs 0070  
                                        l1301 27C6                                          l2022 2722  
                                        l1302 27DA                                          l1054 40E2  
                                        l1214 2EFA                                          l2015 26C6  
                                        l1303 2802                                          l2111 1F40  
                                        l2031 4444                                          l1215 2F5E  
                                        l2008 262E                                          l1312 292C  
                                        l1304 280E                                          l2104 25D2  
                                        l1057 410C                                          l1225 301A  
                                        l1234 3A36                                          l2123 408C  
                                        l1332 23CC                                          l1341 2EF8  
                                        l1237 4598                                          l2061 3736  
                                        l1261 21AE                                          l1245 219E  
                                        l1350 350E                                          l2126 4094  
                                        l2118 3BB4                                          l2063 3772  
                                        l2071 1A2E                                          l2119 3BBC  
                                        l1271 3B54                                          l3200 3660  
                                        l1432 3128                                          l2152 40D0  
                                        l3210 4572                                          l3202 3666  
                                        l1282 29E8                                          l2138 3ACE  
                                        l2146 3FC4                                          l2058 36F2  
                             _timer3ReloadVal 00F3                                          l3204 3668  
                                        l1277 295C                                          l2069 1A26  
                                        l3222 3C1A                                          l3206 366A  
                                        l2094 2406                                          l1623 3336  
                                        l1295 2ABE                                          l3160 3DD0  
                                        l3208 366C                                          l3240 4276  
                                        l1480 2DAE                                          l2096 240E  
                                        l2089 1C6A                                          l1801 35C0  
                                        l3170 3DF8                                          l3162 3DE6  
                                        l3154 3DBC                                          l3242 427A  
                                        l3234 4254                                          l3250 44F6  
                                        l1618 32F0                                          l1650 3230  
                                        l1299 27A2                                          l1467 2C48  
                                        l3180 3E02                                          l3172 3DFA  
                                        l3164 3DE8                                          l3156 3DBE  
                                        l3244 427C                                          l3236 4272  
                                        l3252 4502                                          l5100 3200  
                                        l3182 3E04                                          l3174 3DFC  
                                        l3166 3DF2                                          l3158 3DC6  
                                        l3190 3604                                          l3246 427E  
                                        l3238 4274                                          l3254 4508  
                                        l5102 3210                                          l3176 3DFE  
                                        l3168 3DF6                                          l3192 360C  
                                        l3184 4470                                          l3256 4542  
                                        l3248 4512                                          l1584 3838  
                                        l5104 3220                                          l6000 33EE  
                                        l1808 35E0                                          l3178 3E00  
                                        l3194 365A                                          l3186 35E2  
                                        l5210 390A                                          l6002 33F0  
                                        l6010 3538                                          l1907 144E  
                                        l3268 439A                                          l3196 365C  
                                        l3188 3602                                          l5220 392C  
                                        l5212 391A                                          l1908 143C  
                                        l6100 1C1C                                          l6004 3402  
                                        l6020 35BA                                          l6012 354C  
                                        l3198 365E                                          l3278 455A  
                                        l3294 452A                                          l5230 3940  
                                        l5222 3930                                          l5214 3920  
                                        l5206 38FA                                          l5070 3156  
                                        l6030 36EA                                          l6022 36AC  
                                        l6102 1C28                                          l6014 355A  
                                        l6006 3510                                          l6110 23CE  
                                        l1791 3408                                          l5160 4338  
                                        l5240 3954                                          l5232 3944  
                                        l5224 3934                                          l5216 3924  
                                        l5208 38FE                                          l5080 31A4  
                                        l5072 3180                                          l5064 312A  
                                        l6200 41B2                                          l6040 3758  
                                        l6032 36FE                                          l6024 36BA  
                                        l6104 1C30                                          l6016 3588  
                                        l6008 3530                                          l6120 243E  
                                        l6112 23DE                                          l1881 1264  
                                        l5162 433C                                          l5154 4312  
                                        l5170 4388                                          l4610 45DA  
                                        l4602 45BC                                          l5242 3958  
                                        l5234 3948                                          l5226 3938  
                                        l5218 3928                                          l5090 31D0  
                                        l5074 3182                                          l5066 3142  
                                        l6210 3040                                          l1890 1534  
                                        l1882 1252                                          l7010 2344  
                                        l6202 417C                                          l6034 3712  
                                        l6026 36CE                                          l6106 1C42  
                                        l6050 19A6                                          l6018 35A8  
                                        l6130 24D2                                          l6122 2448  
                                        l6114 23E0                                          l7002 2178  
                                        l5330 3AD0                                          l1971 1984  
                                        l1883 1218                                          l5156 4322  
                                        l5180 430A                                          l5172 4394  
                                        l5164 436E                                          l4604 45B2  
                                        l5244 3964                                          l5236 394C  
                                        l5228 393C                                          l5076 3192  
                                        l6220 3076                                          l6212 3044  
                                        l6204 301C                                          l7004 29C2  
                                        l6300 40D4                                          l6044 4054  
                                        l6036 3718                                          l6028 36DE  
                                        l6060 1A1A                                          l6052 19D0  
                                        l6140 259C                                          l6124 244E  
                                        l6132 2536                                          l6116 23FA  
                                        l5340 3B14                                          l5332 3AE8  
                                        l4622 4602                                          l5158 432E  
                                        l5182 430E                                          l5174 42E4  
                                        l5190 4140                                          l5166 4382  
                                        l4606 45D0                                          l5246 3970  
                                        l5238 3950                                          l1974 1816  
                                        l5086 31BC                                          l5078 3196  
                                        l6230 30B8                                          l6222 308C  
                                        l6214 3052                                          l6206 3022  
                                        l7006 2A88                                          l6302 40DA  
                                        l6046 4070                                          l6038 3744  
                                        l6070 1A64                                          l6062 1A36  
                                        l6054 19F0                                          l1798 3428  
                                        l6134 254A                                          l6142 25AA  
                                        l6126 24C6                                          l6118 2436  
                                        l6150 1CAC                                          l5342 3B2A  
                                        l5334 3AEE                                          ?_pad 0070  
                                        l1967 15FC                                          l4624 45F8  
                                        l5176 42F4                                          l5184 410E  
                                        l5168 4386                                          l4608 45C6  
                                        l5248 3998                                          l1984 1946  
                                        l1976 188E                                          l6400 1574  
                                        l5096 31E4                                          l5088 31C6  
                                        l6232 30D6                                          l6224 3094  
                                        l6240 30F8                                          l6216 3062  
                                        l6208 3030                                          l4800 11A2  
                                        l7008 2842                                          l6320 27E2  
                                        l6304 40DE                                          l6080 1B04  
                                        l6072 1A6E                                          l6064 1A48  
                                        l6056 19FE                                          l6048 1986  
                                        l6136 2568                                          l6128 24CC  
                                        l6160 1D7C                                          l6152 1CBE  
                                        l6312 441E                                          l5344 3B32  
                                        l5336 3B00                                          l1977 187C  
                                        l5178 4300                                          l5186 4122  
                                        l4642 45EE                                          l4626 45E4  
                                        l6250 377A                                          l6410 15A6  
                                        l6402 1584                                          l5098 31F0  
                                        l6242 3108                                          l6234 30E6  
                                        l6226 30A0                                          l6218 3066  
                                        l1898 137E                                          l4802 11A6  
                                        l4810 11B6                                          l6330 288E  
                                        l6322 281A                                          l6306 40E0  
                                        l6090 1BD6                                          l6074 1A74  
                                        l6082 1B68                                          l6066 1A56  
                                        l6058 1A00                                          l6138 2582  
                                        l6154 1CC2                                          l6146 1C6C  
                                        l6314 4428                                          l5346 3B36  
                                        l5338 3B04                                          l5188 4126  
                                        l6260 37AA                                          l6252 3788  
                                        l6500 1900                                          l6420 15E6  
                                        l6412 15B4                                          l6404 158A  
                                        l6244 3118                                          l6236 30E8  
                                        l6228 30AE                                          l4820 1226  
                                        l4812 11BA                                          l4804 11AA  
                                        l4740 10A2                                          l4732 1074  
                                        l6340 28E6                                          l6332 289A  
                                        l6308 40F0                                          l6084 1B84  
                                        l6092 1BE4                                          l6076 1AF8  
                                        l6068 1A5C                                          l6172 1E7A  
                                        l6164 1DB4                                          l6156 1CF0  
                                        l6148 1C9A                                          l5348 3B4C  
                                        l6270 37D8                                          l6262 37AE  
                                        l6254 3790                                          l6510 1968  
                                        l6502 1914                                          l6430 1630  
                                        l6422 15EC                                          l6414 15B6  
                                        l6406 159A                                          l6238 30F2  
                                        l4902 145E                                          l4910 14B4  
                                        l4830 1250                                          l4822 1232  
                                        l4814 11E4                                          l4806 11AE  
                                        l4750 10DC                                          l4742 10B2  
                                        l4734 1082                                          l6342 2902  
                                        l6334 28B6                                          l6326 282E  
                                        l6318 278C                                          l6094 1BF6  
                                        l6086 1BA2                                          l6078 1AFE  
                                        l6190 1F2A                                          l6174 1EA8  
                                        l6182 1EDC                                          l6166 1DE2  
                                        l6158 1D1E                                          l6280 380C  
                                        l6272 37E6                                          l6264 37B6  
                                        l6256 3794                                          l6248 3774  
                                        l6512 196A                                          l6504 192E  
                                        l6440 168C                                          l6432 1640  
                                        l6424 160C                                          l6416 15C6  
                                        l6408 15A0                                          l6520 25D8  
                                        l6360 39CE                                          l4920 1506  
                                        l4912 14C4                                          l4904 146A  
                                        l4840 12A6                                          l4832 1272  
                                        l4824 1236                                          l4816 1200  
                                        l4808 11B2                                          l4760 110A  
                                        l4752 10E2                                          l4744 10C2  
                                        l4736 1090                                          l6344 290A  
                                        l6336 28BE                                          l6328 2870  
                                        l6096 1C04                                          l6088 1BBC  
                                        l6184 1EEE                                          l6176 1EBA  
                                        l6168 1E42                                          l6600 2020  
                                        l6282 3812                                          l6274 37EC  
                                        l6266 37C8                                          l6258 37A2  
                                        l6506 194A                                          l6514 1970  
                                        l6450 16D2                                          l6442 1698  
                                        l6434 164A                                          l6426 161C  
                                        l6418 15D6                                          l6522 25EA  
                                        l6362 3A00                                          l6354 399E  
                                        l6370 3448                                          l4930 1524  
                                        l4922 150C                                          l4914 14D4  
                                        l4906 1478                                          l4850 12E0  
                                        l4842 12B4                                          l4834 1282  
                                        l4826 1244                                          l4818 1210  
                                        l4770 113E                                          l4762 110C  
                                        l4754 10F4                                          l4746 10C4  
                                        l4738 1092                                          l6346 291A  
                                        l6338 28DA                                          l6098 1C0A  
                                        l6178 1ECE                                          l6610 207C  
                                        l6602 203E                                          l6276 3802  
                                        l6268 37D0                                          l6284 3818  
                                        l6516 1974                                          l6508 195A  
                                        l6460 1740                                          l6452 16E2  
                                        l6444 16A4                                          l6436 1664  
                                        l6540 26B0                                          l6532 2668  
                                        l6524 25F8                                          l6364 3A2E  
                                        l6356 39A8                                          l6196 421E  
                                        l6380 34A4                                          l6372 3464  
                                        l4924 150E                                          l4916 14F4  
                                        l4908 14B2                                          l4860 134C  
                                        l4852 12E2                                          l4844 12C2  
                                        l4828 1246                                          l4780 117A  
                                        l4764 111C                                          l4772 1146  
                                        l4756 10F6                                          l4748 10CC  
                                        l6700 21B0                                          l5900 40C2  
                                        l6188 1EFA                                          l6292 3B56  
                                        l6620 20D2                                          l6612 2082  
                                        l6604 2050                                          l6286 3828  
                                        l6278 380A                                          l6470 17DE  
                                        l6462 1750                                          l6454 16F2  
                                        l6446 16B2                                          l6438 1670  
                                        l6390 1536                                          l6550 2730  
                                        l6542 26BC                                          l6534 2670  
                                        l6526 263E                                          l6358 39BE  
                                        l6198 41E8                                          l6382 34C0  
                                        l6374 346C                                          l4926 1514  
                                        l4918 14F8                                          l4870 13A4  
                                        l4862 134E                                          l4854 12EC  
                                        l4846 12CE                                          l4838 1296  
                                        l4790 118E                                          l4782 117E  
                                        l4774 1156                                          l4766 112C  
                                        l4758 10FC                                          l6710 21FA  
                                        l6702 21BE                                          l5910 2AF4  
                                        l6294 3B5E                                          l6622 20E8  
                                        l6614 2094                                          l6606 2062  
                                        l6800 32DE                                          l6288 3830  
                                        l6480 1834                                          l6472 17FC  
                                        l6464 1770                                          l6456 1710  
                                        l6448 16C2                                          l6392 1544  
                                        l6560 2778                                          l6552 2732  
                                        l6544 26F8                                          l6536 267C  
                                        l6528 2654                                          l6384 34C8  
                                        l6376 3478                                          l6368 342A  
                                        l4928 1522                                          l4880 13D2  
                                        l4864 135E                                          l4848 12D2  
                                        l4856 12F2                                          l4792 1192  
                                        l4784 1182                                          l4776 1168  
                                        l4768 113C                                          l6720 224A  
                                        l6712 2206                                          l6704 21D4  
                                        l5920 2B36                                          l5912 2AF8  
                                        l5904 2AC0                                          l6296 3B6C  
                                        l6632 2134                                          l6624 2100  
                                        l6616 20A6                                          l6608 206A  
                                        l6570 3F02                                          l6810 3EB0  
                                        l6802 332E                                          l6490 189E  
                                        l6482 1838                                          l6474 1806  
                                        l6466 179A                                          l6458 1720  
                                        l6394 1552                                          l6562 277A  
                                        l6554 2736                                          l6546 2704  
                                        l6538 26AE                                          l6386 34D4  
                                        l6378 3488                                          l4882 13E0  
                                        l4874 13B8                                          l4890 13FE  
                                        l4858 1318                                          l4866 136E  
                                        l4794 1196                                          l4786 1186  
                                        l4778 1176                                          l6730 2318  
                                        l6722 2260                                          l6714 2220  
                                        l6706 21D8                                          l6650 293C  
                                        l5930 2B90                                          l5922 2B54  
                                        l5914 2B06                                          l5906 2AC6  
                                        l6298 3B92                                          l6634 2146  
                                        l6626 2116                                          l6618 20C0  
                                        l6642 2160                                          l6572 3F1C  
                                        l6820 3EC8                                          l6812 3EB4  
                                        l6804 3334                                          l6492 18AA  
                                        l6484 1846                                          l6476 1814  
                                        l6468 17D0                                          l6396 1554  
                                        l6556 275A                                          l6548 2712  
                                        l6388 34F6                                          l4884 13E8  
                                        l4876 13C2                                          l4868 1394  
                                        l4892 140C                                          l4796 119A  
                                        l4788 118A                                          l6724 2264  
                                        l6716 2236                                          l6708 21F2  
                                        l6740 2330                                          l6652 295C  
                                        l6580 458A                                          l5932 2BBE  
                                        l5924 2B5C                                          l5940 2BF8  
                                        l5916 2B26                                          l5908 2AD4  
                                        l5860 3BFE                                          l5852 3BC0  
                                        l6636 214E                                          l6628 2122  
                                        l6574 3F20                                          l6566 3EEA  
                                        l6822 3ED0                                          l6814 3EBC  
                                        l6494 18B8                                          l6486 1874  
                                        l6478 1826                                          l6398 1564  
                                        l6558 276A                                          l4894 1410  
                                        l4886 13EC                                          l4878 13D0  
                                        l4798 119E                                          l6750 23C4  
                                        l6734 2324                                          l6726 227A  
                                        l6718 223E                                          l6742 237A  
                                        l6654 2978                                          l6662 29AC  
                                        l5942 2C08                                          l5934 2BDE  
                                        l5926 2B70                                          l5918 2B2A  
                                        l5950 2C4E                                          l5862 3C00  
                                        l5854 3BC0                                          l5870 45AA  
                                        l6590 1FAE                                          l6582 1F42  
                                        l6830 2EFA                                          l6576 3F22  
                                        l6568 3EFE                                          l6824 3ED4  
                                        l6816 3EC0                                          l6808 3EA0  
                                        l6496 18E2                                          l6760 2DCA  
                                        l4896 141E                                          l4888 13FC  
                                        l6744 2398                                          l6728 230C  
                                        l6680 2A60                                          l6672 2A28  
                                        l6664 29EC                                          l6656 2984  
                                        l6648 292E                                          l5944 2C28  
                                        l5936 2BE0                                          l5928 2B7E  
                                        l5960 2CB0                                          l5952 2C5E  
                                        l5864 3C10                                          l5856 3BE0  
                                        l5880 3A86                                          l5872 3A38  
                                        l6592 1FCC                                          l6584 1F46  
                                        l6840 2F84                                          l6832 2EFE  
                                        l6578 3F2E                                          l6826 3EDC  
                                        l6818 3EC4                                          l6498 18E6  
                                        l6770 2E84                                          l6762 2DD6  
                                        l4898 1434                                          l6746 23A0  
                                        l6674 2A3A                                          l6666 2A00  
                                        l6658 29A0                                          l5938 2BF2  
                                        l5970 2D26                                          l5962 2CCE  
                                        l5954 2C7E                                          l5866 3C14  
                                        l5858 3BEC                                          l5882 3ABC  
                                        l5874 3A4C                                          l5890 3F9E  
                                        l6586 1F8A                                          l6594 1FDE  
                                        l6850 2FEC                                          l6842 2F88  
                                        l6834 2F14                                          l6828 3EE0  
                                        l6780 2EDC                                          l6772 2E88  
                                        l6764 2E54                                          l6756 2DB0  
                                        l6748 23BC                                          l6668 2A14  
                                        l5980 2D8E                                          l5972 2D46  
                                        l5964 2CD6                                          l5956 2C82  
                                        l5948 2C4A                                          l5868 3C16  
                                        l5876 3A5E                                          l5892 3FA4  
                                        l6596 1FFC                                          l6588 1FA2  
                                        l6860 300E                                          l6844 2F98  
                                        l6852 3000                                          l6836 2F6E  
                                        l6790 3272                                          l6782 2EE4  
                                        l6774 2E98                                          l6766 2E68  
                                        l6758 2DCA                                          l6678 2A4E  
                                        l6686 2A74                                          l5974 2D58  
                                        l5966 2CEA                                          l5958 2C90  
                                        l5878 3A68                                          l5886 3F7E  
                                        l5894 4096                                          l5990 336C  
                                        l6598 2014                                          l6862 3012  
                                        l6854 3002                                          l6846 2F9C  
                                        l6838 2F72                                          l6870 44CC  
                                        l6792 32A0                                          l6784 2EF0  
                                        l6776 2EB4                                          l6768 2E70  
                                        l5968 2CF8                                          l5976 2D5E  
                                        l5888 3F8C                                          l5896 40A2  
                                        l5992 3380                                          l5984 3338  
                                        l6856 3006                                          l6848 2FE4  
                                        l6864 44B8                                          l6794 32B0  
                                        l6786 3232                                          l6778 2EC0  
                                        l5978 2D6E                                          l5898 40A6  
                                        l5994 338E                                          l5986 3344  
                                        l6858 300A                                          l6866 44BC  
                                        l6796 32BE                                          l6788 3262  
                                        l5996 33A0                                          l5988 3364  
                                        l6868 44BE                                          l6798 32D0  
                                        l5998 33CE                                          STR_1 1054  
                                        STR_2 1001                                          STR_3 1025  
                                        STR_4 1001                                          STR_5 1017  
                                        STR_6 1069                                          STR_7 103E  
                                        STR_8 1049                                          STR_9 1032  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          u3300 10B2  
                                        u3301 10AE                                          u3310 10F4  
                                        u3311 10F0                                          u3400 1226  
                                        u3320 110A                                          u5000 36DE  
                                        u3401 1222                                          u3321 1106  
                                        u5001 36DA                                          u3410 1244  
                                        u3330 111C                                          u5010 3736  
                                        _T2PR 003FAB                                          u3411 1240  
                                        u3331 1118                                          u5011 3732  
                                        u3500 1394                                          u3420 1264  
                                        u3340 112C                                          u5020 3744  
                                        u5100 1A56                                          u4140 3AE8  
                                        u3501 1390                                          u3421 1260  
                                        u3341 1128                                          u5021 3740  
                                        u5101 1A52                                          u4141 3AE4  
                                        u3510 13A4                                          u3430 1272  
                                        u3350 1168                                          u5030 4070  
                                        u5110 1B84                                          u4150 3B00  
                                        u3511 13A0                                          u3431 126E  
                                        u3351 1164                                          u5031 406C  
                                        u5111 1B80                                          u4151 3AFC  
                                        u3600 1478                                          u3520 13D0  
                                        u3440 1282                                          u3360 1176  
                                        u3280 1090                                          u6000 29A0  
                                        u5120 1BA2                                          u5040 19B8  
                                        u5200 23FA                                          u4160 3B14  
                                        u3601 1474                                          u3521 13CC  
                                        u3441 127E                                          u3361 1172  
                                        u3281 108C                                          u6001 299C  
                                        u5121 1B9E                                          u5041 19B2  
                                        u5201 23F6                                          u4161 3B10  
                                        u3610 14B2                                          u3530 13E0  
                                        u3450 12B4                                          u3370 11E4  
                                        u3290 10A2                                          u6010 2A3A  
                                        u5130 1BBC                                          u5050 19BA  
                                        u5210 254A                                          u4170 3B2A  
                                        _T4PR 003F9F                                          u1675 3DF0  
                                        u3611 14AE                                          u3531 13DC  
                                        u3451 12B0                                          u3371 11E0  
                                        u3291 109E                                          u6011 2A36  
                                        u5131 1BB8                                          u5211 2546  
                                        u4171 3B26                                          u1676 3DF2  
                                        u3620 14C4                                          u3540 13FC  
                                        u3460 12C2                                          u3380 11FC  
                                        u6100 23BC                                          u6020 2A60  
                                        u5140 1BD6                                          u5060 19D0  
                                        u5220 2568                                          u5300 1EA8  
                                        u4180 3B4C                                          u3621 14C0  
                                        u3541 13F8                                          u3461 12BE  
                                        u3381 11F6                                          u6101 23B8  
                                        u6021 2A5C                                          u5141 1BD2  
                                        u5061 19CC                                          u5221 2564  
                                        u5301 1EA4                                          u4181 3B48  
                                        u6110 2E68                                          u3630 14D4  
                                        u3550 140C                                          u3470 12E0  
                                        u3390 11FE                                          u6030 21D4  
                                        u5150 1BE4                                          u5070 19FE  
                                        u5230 2582                                          u6111 2E64  
                                        u3631 14D0                                          u3551 1408  
                                        u3471 12DC                                          u6031 21D0  
                                        u5151 1BE0                                          u5071 19FA  
                                        u5231 257E                                          u5400 3108  
                                        u6120 2E84                                          u3640 14F4  
                                        u3560 141E                                          u3480 1318  
                                        u6040 21F2                                          u5160 1BF6  
                                        u5080 1A1A                                          u5240 259C  
                                        u6200 2F5E                                          u5401 3104  
                                        u6121 2E80                                          u3641 14F0  
                                        u3561 141A                                          u3481 1314  
                                        u6041 21EE                                          u5161 1BF2  
                                        u5081 1A16                                          u5241 2598  
                                        u6201 2F5A                                          u5410 3788  
                                        u6130 2EB4                                          u3650 1506  
                                        u3570 1434                                          u3490 135E  
                                        u6050 2220                                          u5170 1C04  
                                        u5090 1A48                                          u5250 25AA  
                                        u6210 2F84                                          u5411 3784  
                                        u5315 4244                                          u6131 2EB0  
                                        u3651 1502                                          u3571 1430  
                                        u3491 135A                                          u6051 221C  
                                        u5171 1C00                                          u5091 1A44  
                                        u5251 25A6                                          u6211 2F80  
                                        u5420 37A2                                          u3900 31E0  
                                        u6140 2EDC                                          u3660 1522  
                                        u3580 144A                                          u6060 2236  
                                        u5500 28B6                                          u4700 3BD0  
                                        u5180 1C1C                                          u5260 1C9A  
                                        u6220 2F98                                          _PMD0 0039C0  
                                        u5421 379E                                          u3901 31DC  
                                        u5325 420E                                          u6141 2ED8  
                                        u3661 151E                                          u3581 1446  
                                        u6061 2232                                          u5501 28B2  
                                        u4701 3BCC                                          u5181 1C18  
                                        u5261 1C96                                          u6221 2F94  
                                        _PMD1 0039C1                                          u6150 3262  
                                        u5430 37C8                                          u3910 3200  
                                        u5350 3030                                          u3590 145E  
                                        u6070 2260                                          u5510 28DA  
                                        u4710 3BE0                                          u5190 23DE  
                                        u5270 1CF0                                          u6230 2FE4  
                                        _PMD2 0039C2                                          u6151 325E  
                                        u5431 37C4                                          u3911 31FC  
                                        u5351 302C                                          u3591 145A  
                                        u6071 225C                                          u5335 41D8  
                                        u5511 28D6                                          u4711 3BDC  
                                        u5191 23DA                                          u5271 1CEC  
                                        u6231 2FE0                                          _PMD3 0039C3  
                                        u6160 32A0                                          u5440 37E6  
                                        u5600 1564                                          u3920 3210  
                                        u5360 3052                                          u6080 227A  
                                        u5520 2902                                          u4800 2B06  
                                        u4720 3C10                                          u5280 1D1E  
                                        _PMD4 0039C4                                          u6161 329C  
                                        u5441 37E2                                          u5601 1560  
                                        u3921 320C                                          u5361 304E  
                                        u6081 2276                                          u5345 41A2  
                                        u5521 28FE                                          u4801 2B02  
                                        u4721 3C0C                                          u5281 1D1A  
                                        _PMD5 0039C5                                          u6170 32BE  
                                        u5450 3802                                          u5610 1574  
                                        u5370 308C                                          u5530 39BE  
                                        u6090 2398                                          u4730 3A4C  
                                        u5290 1DE2                                          _PMD6 0039C6  
                                        u6171 32BA                                          u5451 37FE  
                                        u5611 1570                                          u5371 3088  
                                        u5531 39BA                                          u6091 2394  
                                        u4811 2B30                                          u4731 3A48  
                                        u5291 1DDE                                          _PMD7 0039C7  
                                        u6180 32DE                                          u5460 3828  
                                        u5700 1846                                          u5620 15B4  
                                        u3860 3142                                          u5380 30AE  
                                        u5540 39CE                                          u4820 2B54  
                                        u4900 2D26                                          u4740 3A5E  
                                        u6181 32DA                                          u5461 3824  
                                        u5701 1842                                          u5621 15B0  
                                        u3861 313E                                          u5381 30AA  
                                        u5541 39CA                                          u4821 2B50  
                                        u4901 2D22                                          u4741 3A5A  
                                        u6190 332E                                          u5710 1874  
                                        u5630 15C6                                          u3870 3176  
                                        u5390 30D6                                          u5550 3448  
                                        u4830 2B7E                                          u4910 2D6E  
                                        u4750 3A86                                          u5470 3BB4  
                                        u6191 332A                                          u5711 1870  
                                        u5631 15C2                                          u5391 30D2  
                                        u5551 3444                                          u4831 2B7A  
                                        u4911 2D6A                                          u4751 3A82  
                                        u5471 3BB0                                          u5720 188A  
                                        u5640 15D6                                          u3880 31A4  
                                        u5800 2654                                          u5560 3464  
                                        u5480 40F0                                          u4840 2BBE  
                                        u4760 3ABC                                          u5721 1886  
                                        u5641 15D2                                          u3881 31A0  
                                        u5801 2650                                          u5561 3460  
                                        u5481 40EC                                          u4841 2BBA  
                                        u4761 3AB8                                          u4921 333E  
                                        u5730 189E                                          u5650 160C  
                                        u3890 31B8                                          u5810 26AA  
                                        u5570 34A4                                          u5490 288E  
                                        u4850 2C08                                          u4770 3FC4  
                                        u4930 3364                                          u5731 189A  
                                        u5651 1608                                          u3891 31B4  
                                        u3875 316C                                          u5811 26A6  
                                        u5571 34A0                                          u5491 288A  
                                        u4851 2C04                                          u4771 3FC0  
                                        u4931 3360                                          u5740 18B8  
                                        u5660 161C                                          u5820 26F4  
                                        u5580 34C0                                          u4860 2C5E  
                                        u4780 40C2                                          u4940 338E  
                                        u5900 1FFC                                          u5741 18B4  
                                        u5661 1618                                          u5821 26F0  
                                        u5581 34BC                                          u4861 2C5A  
                                        u4781 40BE                                          u4941 338A  
                                        u5901 1FF8                                          u5750 1900  
                                        u5670 17BA                                          u5590 1552  
                                        u5830 2712                                          u4790 2AD4  
                                        u4870 2C90                                          u4950 33CE  
                                        u5910 2014                                          u5751 18FC  
                                        u5591 154E                                          u5831 270E  
                                        u4791 2AD0                                          u4871 2C8C  
                                        u4951 33CA                                          u5911 2010  
                                        u5760 192E                                          u5680 1814  
                                        u5840 2722                                          u4880 2CCE  
                                        u4960 3530                                          u5920 2062  
                                        u5761 192A                                          u5681 1810  
                                        u5841 271E                                          u4881 2CCA  
                                        u4961 352C                                          u5921 205E  
                                        u5770 1968                                          u5690 1834  
                                        u5850 2730                                          u4890 2CF8  
                                        u4970 355A                                          u5930 2094  
                                        u5771 1964                                          u5691 1830  
                                        u5675 17B0                                          u5851 272C  
                                        u4891 2CF4                                          u4971 3556  
                                        u5931 2090                                          u5860 276A  
                                        u5780 25EA                                          u4980 3588  
                                        u5940 20A6                                          u5861 2766  
                                        u5781 25E6                                          u4981 3584  
                                        u5941 20A2                                          u5870 2778  
                                        u5790 25F8                                          u4990 36BA  
                                        u5950 20D2                                          u5871 2774  
                                        u5791 25F4                                          u4991 36B6  
                                        u5951 20CE                                          u5960 2100  
                                        u5880 1F8A                                          u5961 20FC  
                                        u5881 1F86                                          u5970 2116  
                                        u5890 1FA2                                          u5971 2112  
                                        u5891 1F9E                                          u5980 2146  
                                        u5981 2142                                          u5990 2978  
                                        u5991 2974                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0070  
                                        _dbuf 0100                                          _main 44B8  
                                        _dtoa 1986                                          _loop 2EFA  
                                        _prec 00D6                                          _nout 00D2  
                                        pad@i 0076                                          pad@p 0074  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 0078                                          fsr2l 003FD9  
                                        _utoa 23CE                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 003A                               _TMR3_Initialize 410E  
                             _PWM5_Initialize 455A                             ??_CLC3_Initialize 0020  
               ??_UART1_SetTxInterruptHandler 0022                    ??_TMR4_SetInterruptHandler 0022  
                           _UART1_rx_vect_isr 3D1C                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 41E8                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0072                                         ??_pad 0022  
                        ??_UART1_Transmit_ISR 0017                 __end_of_OSCILLATOR_Initialize 458A  
                               ___fltol@sign1 0020                               __end_of___aldiv 312A  
                             __end_of___aodiv 2C4A                                         _ADACT 003EFE  
                                       _ADCAP 003EF5                       __end_of_CCP3_Initialize 4340  
                             __end_of___fladd 1536                                         ?_main 0001  
                                       ?_dtoa 007A                                         _ADCLK 003EFF  
                             __end_of___aomod 2DB0                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 383A                                         ?_loop 0001  
                                       STR_10 105F                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0009                               __end_of___flmul 1986  
                    TMR5_ReadTimer@readValLow 0014                               __end_of___fltol 3232  
                                       ?_utoa 007A                               __end_of___lodiv 342A  
                             ___awdiv@divisor 0062                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _T3CLK 003FA9  
                                       _U1P2L 003DEE                                         _T2CON 003FAC  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 35E2                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 3D58                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 3D08  
                                       i1l333 404E                                         i1l350 461A  
                                       i1l343 38F8                                         i1l336 4052  
                                       i1l353 4618                                         _U1TXB 003DEA  
                                       i1l347 43F0                                         i1l356 4610  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 4620                                         i1l692 436C  
                                       i2l534 441C                                         i2l438 42B2  
                                       i2l446 3E46                                         i2l552 4002  
                                       i1l688 3DA8                                         i2l529 44B6  
                                       i2l537 45A6                                         i1l698 461C  
                                       i2l476 42E2                                         i2l558 44F4  
                                       i2l487 3E92                           ??_UART1_rx_vect_isr 001A  
                                       i2l863 3CCA                                         i2l856 3F7C  
                                       i2l868 446E                               ___awdiv@counter 0064  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00A0  
                                vfpfcnvrt@llu 0128                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 4620                               _TMR4_Initialize 436E  
                             _PWM6_Initialize 4542                             _UART1_tx_vect_isr 3CCC  
                            __end_of_TMR4_ISR 3DBC                       setSteering@steeringMode 006A  
                                       _delay 00E9                                         _flags 0023  
                                       _fputc 3A38                                         _fputs 3F7E  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0070  
                                       _width 00D4                                         _putch 45A8  
                                       dtoa@d 007C                                         dtoa@i 009C  
                                       dtoa@n 0094                                         dtoa@p 008E  
                                       dtoa@s 0092                                         dtoa@w 0090  
                            ?_SMT1_Initialize 0001                                         pclath 003FFA  
                                       pclatu 003FFB                                         tablat 003FF5  
                                 _BatteryVolt 00EF                                         utoa@d 007C  
                                       utoa@i 0098                                         utoa@n 0090  
                                       utoa@p 008C                                         utoa@w 008E  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 45C6  
                 _UART1_SetRxInterruptHandler 45BC                       __end_of_CCP4_Initialize 4312  
                            ___lodiv@dividend 0060           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 461C            ??_UART1_DefaultFramingErrorHandler 001A  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 461A  
                         ??_UART1_tx_vect_isr 0017                     __end_of_UART1_rx_vect_isr 3D6C  
                             _TMR5_Initialize 3EEA                               _PWM7_Initialize 452A  
                             __initialization 4146                         TMR5_ReadTimer@readVal 0011  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 44D8  
                                __end_of_dtoa 1C6C                                  __end_of_loop 301C  
                                __end_of_utoa 25D4                   ??_UART1_DefaultErrorHandler 001A  
                     __end_of_TMR2_Initialize 4512                                  ?_UART1_Write 0001  
                                      ??_main 0023                                        ??_dtoa 0084  
                                      ??_loop 0023                                        ??_utoa 0084  
                               __activetblptr 000003                                  _calcMotorPow 2DB0  
                   __end_of_UART1_tx_vect_isr 3D1C                              ___lodiv@quotient 0070  
                             _PWM8_Initialize 4512                              _UART1_Initialize 38FA  
                                _calcSteering 292E                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0060  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0069                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0060  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 41E8  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1228 4616                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 4572                       __end_of_TMR3_Initialize 4146  
                                      i1l5250 460C                                        i1l4620 43EE  
                                      i1l4612 43C6                                        i1l4614 43D8  
                                      i1l4616 43DA                                        i1l4618 43EA  
                                      i1l5560 4032                                        i1l5626 4340  
                                      i1l5570 384A                                        i1l5562 4034  
                                      i1l5628 4354                                        i1l5580 38A2  
                                      i1l5572 385A                                        i1l5564 4044  
                                      i1l5556 4010                                        i1l5582 38BA  
                                      i1l5574 386A                                        i1l5566 4048  
                                      i1l5558 4020                                        i1l5670 3CF0  
                                      i1l5488 4612                                        i1l5584 38D6  
                                      i1l5576 3882                                        i1l5568 383A  
                                      i1l5672 3D2E                                        i1l5586 38F4  
                                      i1l5578 3892                                        i1l5674 3D40  
                                      i1l5692 3D7E                                        i1l5668 3CDE  
                                      i1l5694 3D82                                        i1l5696 3D9C  
                                      i1l5698 3DA0                                        i2l5252 4494  
                                      i2l5260 459A                                        i2l5254 44A2  
                                      i2l4630 4400                                        i2l5256 44AE  
                                      i2l4640 4416                                        i2l4632 4402  
                                      i2l5600 42CE                                        _INLVLA 003A44  
                                      i2l4634 4406                                        i2l5610 44F0  
                                      i2l5602 42DC                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        i2l5700 3F34  
                                      i2l4636 440C                                        i2l4628 43F2  
                                      i2l5604 44D8                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l5710 3C78  
                                      i2l5702 3F38                                        i2l4638 4412  
                                      i2l5606 44E4                                        i2l5720 4448  
                                      i2l5712 3C7C                                        i2l5704 3F48  
                                      i2l5608 44EC                                        i2l5722 444C  
                                      i2l5714 3C96                                        i2l5706 3F58  
                                      i2l5716 3CA6                                        i2l5708 3F6A  
                                      i2l5718 3CB8                                        i2l5590 4292  
                                      i2l5680 3E60                                        i2l5592 429E  
                                      i2l5682 3E70                                        i2l5594 42AC  
                                      i2l5684 3FD4                                        i2l5596 42B4  
                                      i2l5588 4284                                        i2l5676 3E14  
                                      i2l5686 3FD8                                        i2l5598 42C2  
                                      i2l5678 3E24                                        i2l5688 3FEA  
                                ?_setSteering 0068                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 3A38                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 45DA                              __end_of___xxtofl 278C  
                         ?_PWM8_LoadDutyValue 0020                              __end_of_getCurve 21B0  
                    __end_of_CCP3_SetCallBack 460C                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00AE  
                                      ___flge 3232                                     ??___aldiv 0020  
                                   ??___aodiv 0020                                     ??___fladd 0097  
                                   ??___aomod 0020                                     ??___awdiv 0020  
                                   ??___flmul 007E                                     ??___fltol 00A3  
                                   ??___lodiv 0020                                     ??___lomod 0020  
                               _CCP3_CallBack 00F7                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 455A                       __end_of_TMR4_Initialize 439A  
                                      clear_0 414C                                        clear_1 4158  
                                      clear_2 4164                              ___awdiv@quotient 0066  
                                      _motPow 0025                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00F5  
                                      _smtWay 00CA                                        _printf 441E  
                                      pad@buf 0072                                        dtoa@fp 007A  
                            ?_CCP3_Initialize 0001                                        _strlen 4096  
                        ??_PWM8_LoadDutyValue 0060                              __end_of_setMotor 3510  
                             _ADCC_Initialize 3C1A          __end_of_TMR4_DefaultInterruptHandler 461E  
                _TMR4_DefaultInterruptHandler 461C                                        fputc@c 0060  
                              _PMD_Initialize 4470                                        fputs@c 006D  
                                      fputs@i 006E                                        fputs@s 0069  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 4010  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                              __end_of_vfprintf 3BBE  
                   ?_ADCC_GetSingleConversion 0020                                        utoa@fp 007A  
    TMR4_SetInterruptHandler@InterruptHandler 0020  TMR5_SetGateInterruptHandler@InterruptHandler 0020  
 UART1_SetTxInterruptHandler@InterruptHandler 0020   UART1_SetRxInterruptHandler@InterruptHandler 0020  
        __end_of_UART1_SetOverrunErrorHandler 45D0                  _UART1_SetOverrunErrorHandler 45C6  
                   _UART1_DefaultErrorHandler 460C                             getCurve@deltaLeft 0138  
                                  ___flge@ff1 0076                                    ___flge@ff2 007A  
                     __end_of_PWM7_Initialize 4542                       __end_of_TMR5_Initialize 3F34  
                                ___xxtofl@arg 0072                                  ___xxtofl@exp 0071  
                           _SYSTEM_Initialize 3EA0                                  ___xxtofl@val 0068  
                                  __accesstop 0060                       __end_of__initialization 4176  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0068  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                                  ___fltol@f1 009F                               _TMR5_WriteTimer 43F2  
                   calcMotorPow@setSpeedDelta 00A9                      __end_of_CCP4_SetCallBack 4602  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 436E  
                         ??_SYSTEM_Initialize 0022                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 3AD0  
                               __end_of_fputs 3FC6                               fp__TMR4_10msISR 0000  
                               __end_of_putch 45B2                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 452A                        __end_of_PMD_Initialize 4494  
                       CCP3_CaptureISR@module 0005                CCP3_SetCallBack@customCallBack 0020  
                   _UART1_FramingErrorHandler 00FD               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                                     ??_fputc 0064                     __end_of_SYSTEM_Initialize 3EEA  
                                     ??_fputs 0022                               _CLC3_Initialize 439A  
                                     ??_putch 0021                   PWM7_LoadDutyValue@dutyValue 0020  
                                  __pbssBANK0 00B2                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0020                        ?_UART1_SetErrorHandler 0020  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 0038                         _TMR4_InterruptHandler 00F1  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 0076  
                                  ??_TMR4_ISR 001D                       __end_of_ADCC_Initialize 3C76  
                  __end_of_PWM6_LoadDutyValue 41B2          __end_of_TMR5_SetGateInterruptHandler 45EE  
                _TMR5_SetGateInterruptHandler 45E4                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 0130  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 383A  
                                  _getReverse 3AD0                                       ?_strlen 0020  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0020  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0068  
                          _PWM5_LoadDutyValue 41B2                                    _distRightM 0029  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 23CE                                       _IVTLOCK 003FD4  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1TMR 003F12                                       _SMT1WIN 003F23  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                         ??_UART1_Receive_ISR 001A                              ___lomod@dividend 0060  
                     __end_of_TMR5_WriteTimer 441E                           ?_PWM5_LoadDutyValue 0020  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0020                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0062  
                                     __Lparam 0000                      __end_of_UART1_Initialize 399E  
                                     ___aldiv 301C                                       ___aodiv 2AC0  
                                     ___fladd 1074                                       ___aomod 2C4A  
                                     ___awdiv 3774                                       ___flmul 1536  
                                     ___fltol 312A                                       ___lodiv 3338  
                                     ___lomod 3510                     __end_of_UART1_Receive_ISR 38FA  
                                   ?_vfprintf 00A8                          ??_PWM5_LoadDutyValue 0060  
                                __psmallconst 1000                                       __pcinit 4146  
                   _TMR5_GateInterruptHandler 0038                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                 ?_TMR5_SetGateInterruptHandler 0020  
                                     __ptext0 44B8                                       __ptext1 2EFA  
                                     __ptext2 3AD0                                       __ptext3 1F42  
                                     __ptext4 441E                                       __ptext5 3B56  
                                     __ptext6 1C6C                                       __ptext7 23CE  
                                     __ptext8 3510                                       __ptext9 3338  
                              ??_TMR4_10msISR 001D                                    ??_actSpeed 0022  
                     __end_of_CLC3_Initialize 43C6                         _OSCILLATOR_Initialize 4572  
                                   _T2CONbits 003FAC                                    ??___xxtofl 006C  
                                   _T3CONbits 003FA6                              ___aldiv@dividend 0060  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0020  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0020                                     _IPR10bits 00398A  
                                     _smtDuty 00CE                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0136                                     _PIE10bits 00399A  
                        end_of_initialization 4176                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 001D                                     _PIR10bits 0039AA  
                                   _T4RSTbits 003FA3                                       fputc@fp 0062  
                           ??_SMT1_PR_ACQ_ISR 0017           __end_of_UART1_SetTxInterruptHandler 45BC  
                 _UART1_SetTxInterruptHandler 45B2                                       fputs@fp 006B  
              ??_UART1_SetOverrunErrorHandler 0022                                    ??_setMotor 0064  
                           __end_of_vfpfcnvrt 1F42                             ?_CCP3_SetCallBack 0020  
                            ___aldiv@quotient 006A                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0017                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0022  
                                  ??_vfprintf 0023              __end_of_ADCC_GetSingleConversion 410E  
                           UART1_Write@txData 0020                           _UART1_RxDataHandler 43C6  
                                     strlen@a 0060                                       strlen@s 0020  
                                 ?_getReverse 0001                                     _PORTDbits 003FCD  
                                 ___fladd@grs 009E                            getCurve@deltaRight 013A  
                               ___xxtofl@sign 0070                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 000D                          setSteering@steeringB 006F  
                        setSteering@steeringF 006D                       TMR5_WriteTimer@timerVal 000D  
                                 ___flmul@grs 0084             CCP4_DefaultCallBack@capturedValue 0007  
                           ?_CCP4_SetCallBack 0020                  __end_of_INTERRUPT_Initialize 3E08  
                              __end_of___flge 3338                            ??_CCP4_SetCallBack 0022  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00A2  
                                 vfpfcnvrt@fp 009E                                   vfpfcnvrt@ll 0120  
                      ?_OSCILLATOR_Initialize 0001                                __end_of_printf 4446  
                            ?_CLC3_Initialize 0001                                __end_of_strlen 40D2  
                              _TMR5_ReadTimer 4494                           start_initialization 4146  
                             ___lodiv@divisor 0068                               ___lodiv@counter 0078  
              ??_TMR5_SetGateInterruptHandler 0022                                   __end_of_abs 4096  
                                 __end_of_pad 3774                       ??_UART1_SetErrorHandler 0022  
                       ??_UART1_RxDataHandler 001A                                   putch@txData 0021  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 00BA  
                                 _actMotorPow 00D8                                 _uart1TxBuffer 00C2  
                        __end_of_TMR4_10msISR 4618                                   vfprintf@fmt 00AA  
                                    ??___flge 007E                              ??_PMD_Initialize 0020  
                                _oldDistRight 00E0                    __end_of_PWM7_LoadDutyValue 4254  
                           ??_SMT1_Initialize 0020                                      ??_printf 0023  
                                    ??_strlen 0022                        __end_of_TMR5_ReadTimer 44B8  
                       CCP4_CaptureISR@module 000B                                     ___fladd@a 0093  
                                   ___fladd@b 008F                           calcMotorPow@addMPow 00AD  
                    _ADCC_GetSingleConversion 40D2                   PWM5_LoadDutyValue@dutyValue 0020  
                       TMR4_ISR@CountCallBack 0027                                     ___flmul@a 007A  
                                   ___flmul@b 0076                                   __pbssCOMRAM 0023  
                          _UART1_ErrorHandler 00F9                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0120                              ___aodiv@dividend 0060  
                          _PWM6_LoadDutyValue 417C                      _UART1_RxInterruptHandler 003E  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 42B4  
                                   _calcSpeed 21B0                           ?_PWM6_LoadDutyValue 0020  
                 PWM8_LoadDutyValue@dutyValue 0020                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 00DC                  ?_UART1_SetRxInterruptHandler 0020  
                                   __pnvBANK0 00EF                            setMotor@motorPower 0062  
                      _PIN_MANAGER_Initialize 35E2                                     _dtoa$3455 008C  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 45DA  
                _UART1_SetFramingErrorHandler 45D0                                      ?___aldiv 0060  
             ADCC_GetSingleConversion@channel 0022                                      ?___aodiv 0060  
                                    ?___fladd 008F                                      ?___aomod 0060  
            __end_of_TMR4_SetInterruptHandler 45F8                                      ?___awdiv 0060  
                            ___aodiv@quotient 0072             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0009                                      ?___flmul 0076  
                                    ?___fltol 009F                                      ?___lodiv 0060  
                                    ?___lomod 0060                            ??_UART1_Initialize 0022  
                                   _distLeftM 002B                                     _distFront 00ED  
                            _uart1RxLastError 002E                                 ??_UART1_Write 0020  
                                   _distRight 00E4                          ??_PWM6_LoadDutyValue 0060  
                                   _cycle10ms 00EA                               ?_TMR5_ReadTimer 000D  
                               ?_calcMotorPow 0001                               ___lomod@divisor 0068  
                                 __smallconst 1000                               ___lomod@counter 0020  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00EC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 461A            ??_UART1_DefaultOverrunErrorHandler 001A  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 4618  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 3F34                                 ?_calcSteering 0001  
                               _TMR5_GATE_ISR 3FC8                                     _curveMode 00EB  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 3DBC                                 ??_setSteering 006B  
                             ___aldiv@divisor 0064                               _SMT1_PW_ACQ_ISR 3C78  
                             ___aldiv@counter 0068         UART1_SetErrorHandler@interruptHandler 0020  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 42E4  
                           ??_CCP3_Initialize 0022                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _PIE7bits 003997                                      _IPR9bits 003989  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u315_20 43EA  
                                    i1u315_21 43E6                                      i1u442_20 4020  
                                    i1u442_21 401C                                      i1u443_20 4044  
                                    i1u443_21 4040                 ??_UART1_SetRxInterruptHandler 0022  
                                    i1u444_20 385A                                      i1u444_21 3856  
                                    i1u453_20 4354                                      i1u461_20 3D40  
                                    i1u460_28 3CF6                                      i1u453_21 4350  
                                    i1u461_21 3D3C                                      i1u460_29 3D08  
                                    i1u446_20 3892                                      i1u445_28 3870  
                                    i1u446_21 388E                                      i1u445_29 3882  
                                    i1u454_28 435A                                      i1u462_28 3D46  
                                    i1u454_29 436C                                      i1u462_29 3D58  
                                    i1u448_20 38D6                                      i1u447_28 38A8  
                                    i1u448_21 38D2                                      i1u447_29 38BA  
                                    i1u449_28 38DC                                      i1u449_29 38F0  
                                    i1u467_20 3D9C                                      i1u459_20 3CF0  
                                    i1u467_21 3D98                                      i1u459_21 3CEC  
                                    i2u316_40 4400                                      i2u316_41 43FC  
                                    _PIR1bits 0039A1                                      i2u450_40 4292  
                                    i2u450_41 428E                                      i2u451_40 42C2  
                                    i2u451_41 42BE                                      _PIR4bits 0039A4  
                                    i2u463_48 3E32                                      i2u463_49 3E46  
                                    i2u465_40 3FEA                                      i2u464_48 3E7E  
                                    i2u465_41 3FE6                                      i2u464_49 3E92  
                                    i2u466_48 3FF0                                      i2u466_49 4002  
                                    _PIR6bits 0039A6                                      i2u468_40 3F58  
                                    i2u468_41 3F54                                      i2u469_40 3CA6  
                                    i2u469_41 3CA2                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 4448  
                                    _TMR4_ISR 3D6C                    __end_of_UART1_Transmit_ISR 4054  
                               _TMR4_CallBack 4340                                     _smtPeriod 0034  
               ?_UART1_SetFramingErrorHandler 0020                                 ??_TMR5_Reload 000F  
                                   _vfpfcnvrt 1C6C                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 458A                                  ??_getReverse 0020  
                              ??_calcMotorPow 00A7                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0022                                ??_calcSteering 0071  
                         ??_SMT1_Overflow_ISR 0017                     TMR5_ReadTimer@readValHigh 0013  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 3C1A  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 0023                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 0040                             ??_TMR2_Initialize 0020  
                                _uart1RxCount 002F                            __end_of_getReverse 3B56  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 4470                           __end_of_setSteering 292E  
                                  vfprintf@ap 00AC                                      __Lrparam 0000  
                                  vfprintf@fp 00A8                                   _oldDistLeft 00E2  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00AB  
                   __end_of_getBatteryVoltage 459A                       ??_OSCILLATOR_Initialize 0020  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 4284  
                     __end_of_SMT1_PR_ACQ_ISR 3F7E                                    ?_vfpfcnvrt 009E  
                             ___aodiv@divisor 0068                             ??_PWM5_Initialize 0020  
                           ??_TMR3_Initialize 0020                               ___aodiv@counter 0070  
                    _TMR4_SetInterruptHandler 45EE                                      _actSpeed 399E  
                                _TMR4_10msISR 4612                                      ___xxtofl 25D4  
                         __end_of_TMR5_Reload 45A8                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 3CCC                                      _getCurve 1F42  
                                    __ptext10 1986                                      __ptext11 36AC  
                                    __ptext20 458A                                      __ptext12 4096  
                                    __ptext21 40D2                                      __ptext13 3F7E  
                                    __ptext30 41E8                                      __ptext22 292E  
                                    __ptext14 3A38                                      __ptext31 421E  
                                    __ptext23 278C                                      __ptext15 45A8  
                                    __ptext40 38FA                                      __ptext32 399E  
                                    __ptext24 417C                                      __ptext16 3BBE  
                                    __ptext41 45B2                                      __ptext33 301C  
                                    __ptext25 41B2                                      __ptext17 4054  
                                    __ptext50 410E                                      __ptext42 45BC  
                                    __ptext34 25D4                                      __ptext26 21B0  
                                    __ptext18 2C4A                                      __ptext51 44F6  
                                    __ptext43 45C6                                      __ptext35 312A  
                                    __ptext27 1074                                      __ptext19 2AC0  
                                    __ptext60 3DBC                                      __ptext52 4254  
                                    __ptext44 45D0                                      __ptext36 1536  
                                    __ptext28 2DB0                                      __ptext61 439A  
                                    __ptext53 4512                                      __ptext45 45DA  
                                    __ptext37 3774                                      __ptext29 342A  
                                    __ptext70 383A                                      __ptext62 42E4  
                                    __ptext54 452A                                      __ptext46 3EEA  
                                    __ptext38 3232                                      __ptext71 4618  
                                    __ptext63 45F8                                      __ptext55 4542  
                                    __ptext47 45E4                                      __ptext39 3EA0  
                                    __ptext80 3E08                                      __ptext72 461A  
                                    __ptext64 4312                                      __ptext56 455A  
                                    __ptext48 436E                                      __ptext81 4284  
                                    __ptext73 460C                                      __ptext65 4602  
                                    __ptext57 4470                                      __ptext49 45EE  
                                    __ptext90 3C78                                      __ptext82 3E54  
                                    __ptext74 43C6                                      __ptext66 3C1A  
                                    __ptext58 35E2                                      __ptext91 4448  
                                    __ptext83 42B4                                      __ptext75 3D6C  
                                    __ptext67 3CCC                                      __ptext59 4572  
                                    __ptext92 0000                                      __ptext84 3FC8  
                                    __ptext76 4340                                      __ptext68 4010  
                                    __ptext85 44D8                                      __ptext77 4612  
                                    __ptext69 3D1C                                      __ptext86 459A  
                                    __ptext78 461C                                      __ptext87 43F2  
                                    __ptext79 4620                                      __ptext88 4494  
                                    __ptext89 3F34                                      _distLeft 00E6  
                                 ??_calcSpeed 00A7                 __end_of_UART1_SetErrorHandler 45E4  
                                  _T3GCONbits 003FA7                             ??_TMR4_Initialize 0022  
                           ??_PWM6_Initialize 0020                                      _oldSpeed 00DA  
                                  _T5GCONbits 003F9B                               _SMT1_Initialize 4254  
                                 _IVTLOCKbits 003FD4                                      _setMotor 342A  
                                    _setSpeed 00DE                     _UART1_OverrunErrorHandler 00FB  
UART1_SetOverrunErrorHandler@interruptHandler 0020                                      isa$xinst 000000  
                  ??_ADCC_GetSingleConversion 0060                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 3B56  
                                   printf@fmt 0130                    __end_of_PWM8_LoadDutyValue 421E  
                             _CCP3_CaptureISR 3E08                                   _UART1_Write 3BBE  
                       fp__UART1_Transmit_ISR 0000                             ??_PWM7_Initialize 0020  
                           ??_TMR5_Initialize 0060           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 44F6            ??_TMR5_DefaultGateInterruptHandler 0015  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 44D8  
                            ___aomod@dividend 0060                                _battCheckCount 00E8  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0022  
                                _reverseCount 002D                               ??_TMR5_GATE_ISR 0015  
                 __end_of_UART1_RxDataHandler 43F2                                   _uart1RxHead 0031  
                        _CCP4_DefaultCallBack 42B4                                   _uart1TxHead 0033  
                                 _uart1RxTail 0030                                   _uart1TxTail 0032  
                      ??_INTERRUPT_Initialize 0020                            _PWM7_LoadDutyValue 421E  
                                    intlevel1 0000                                      intlevel2 0000  
                                 _setSteering 278C                               _CCP4_CaptureISR 3E54  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0020  
                         ?_PWM7_LoadDutyValue 0020                          __end_of_calcMotorPow 2EFA  
                             ??_TMR4_CallBack 001D                          __end_of_calcSteering 2AC0  
                         _uart1RxStatusBuffer 00B2                                      printf@ap 00B0  
                            ??_TMR5_ReadTimer 000F  UART1_SetFramingErrorHandler@interruptHandler 0020  
           __end_of_UART1_DefaultErrorHandler 4612                               ___aomod@divisor 0068  
                                 ??_vfpfcnvrt 00A4                               ___aomod@counter 0020  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 459A  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0060                                 actSpeed@speed 006E  
                       ?_CCP4_DefaultCallBack 0007                     calcMotorPow@oldSpeedDelta 00AB  
                            _CCP3_SetCallBack 4602                                  ___aldiv@sign 0069  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 4312  
                 PWM6_LoadDutyValue@dutyValue 0020                             calcSteering@delta 0073  
                    _UART1_TxInterruptHandler 003C                                 ___fladd@signs 009B  
                         __end_of_Default_ISR 4622                       __end_of_SMT1_Initialize 4284  
                                ___aodiv@sign 0071                __end_of_PIN_MANAGER_Initialize 36AC  
                           ??_ADCC_Initialize 0020                                  ___fladd@aexp 009C  
                                ___fladd@bexp 009D                  ?_UART1_SetTxInterruptHandler 0020  
                                ___aomod@sign 0021                       __end_of_CCP3_CaptureISR 3E54  
