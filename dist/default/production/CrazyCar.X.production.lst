

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 30 11:46:20 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=4,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=4,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=4,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=4,class=CODE,delta=1
   111                           	psect	text96,global,reloc=4,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=4,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=4,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=4,class=CODE,delta=1
   121                           	psect	text106,global,reloc=4,class=CODE,delta=1
   122                           	psect	text107,global,reloc=4,class=CODE,delta=1
   123                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   124                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   125                           	psect	text108,global,reloc=4,class=CODE,delta=1
   126                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   127                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   128                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   129  0000                     
   130                           ; Version 2.20
   131                           ; Generated 05/05/2020 GMT
   132                           ; 
   133                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution.
   147                           ; 
   148                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   149                           ;        software without specific prior written permission.
   150                           ; 
   151                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   152                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   153                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   154                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   155                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   156                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   157                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC18F46K42 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164  0000                     
   165                           	psect	nvCOMRAM
   166  00004C                     __pnvCOMRAM:
   167                           	callstack 0
   168  00004C                     _uart1TxBufferRemaining:
   169                           	callstack 0
   170  00004C                     	ds	1
   171                           
   172                           	psect	nvBANK1
   173  000190                     __pnvBANK1:
   174                           	callstack 0
   175  000190                     _TMR4_InterruptHandler:
   176                           	callstack 0
   177  000190                     	ds	2
   178  000192                     _timer3ReloadVal:
   179                           	callstack 0
   180  000192                     	ds	2
   181  000194                     _TMR5_GateInterruptHandler:
   182                           	callstack 0
   183  000194                     	ds	2
   184  000196                     _timer5ReloadVal:
   185                           	callstack 0
   186  000196                     	ds	2
   187  000198                     _CCP4_CallBack:
   188                           	callstack 0
   189  000198                     	ds	2
   190  00019A                     _CCP3_CallBack:
   191                           	callstack 0
   192  00019A                     	ds	2
   193  00019C                     _UART1_ErrorHandler:
   194                           	callstack 0
   195  00019C                     	ds	2
   196  00019E                     _UART1_OverrunErrorHandler:
   197                           	callstack 0
   198  00019E                     	ds	2
   199  0001A0                     _UART1_FramingErrorHandler:
   200                           	callstack 0
   201  0001A0                     	ds	2
   202  0001A2                     _UART1_TxInterruptHandler:
   203                           	callstack 0
   204  0001A2                     	ds	2
   205  0001A4                     _UART1_RxInterruptHandler:
   206                           	callstack 0
   207  0001A4                     	ds	2
   208  0000                     _PIR4bits	set	14756
   209  0000                     _PIR1bits	set	14753
   210  0000                     _PIE1bits	set	14737
   211  0000                     _PIE7bits	set	14743
   212  0000                     _PIR7bits	set	14759
   213  0000                     _PIR6bits	set	14758
   214  0000                     _PIE8bits	set	14744
   215  0000                     _PIR8bits	set	14760
   216  0000                     _PIE10bits	set	14746
   217  0000                     _PIR10bits	set	14762
   218  0000                     _PIE9bits	set	14745
   219  0000                     _PIR9bits	set	14761
   220  0000                     _IPR9bits	set	14729
   221  0000                     _IPR7bits	set	14727
   222  0000                     _IPR8bits	set	14728
   223  0000                     _IPR10bits	set	14730
   224  0000                     _IPR1bits	set	14721
   225  0000                     _IPR3bits	set	14723
   226  0000                     _PIE3bits	set	14739
   227  0000                     _PMD7	set	14791
   228  0000                     _PMD6	set	14790
   229  0000                     _PMD5	set	14789
   230  0000                     _PMD4	set	14788
   231  0000                     _PMD3	set	14787
   232  0000                     _PMD2	set	14786
   233  0000                     _PMD1	set	14785
   234  0000                     _PMD0	set	14784
   235  0000                     _OSCTUNE	set	14814
   236  0000                     _OSCFRQ	set	14815
   237  0000                     _OSCEN	set	14813
   238  0000                     _OSCCON3	set	14811
   239  0000                     _OSCCON1	set	14809
   240  0000                     _CCP4PPS	set	15056
   241  0000                     _SMT1SIGPPS	set	15058
   242  0000                     _CLCIN2PPS	set	15067
   243  0000                     _RB3PPS	set	14859
   244  0000                     _RA3PPS	set	14851
   245  0000                     _SMT1WINPPS	set	15057
   246  0000                     _CLCIN0PPS	set	15065
   247  0000                     _RA4PPS	set	14852
   248  0000                     _T5GPPS	set	15049
   249  0000                     _RA0PPS	set	14848
   250  0000                     _U1RXPPS	set	15077
   251  0000                     _RA1PPS	set	14849
   252  0000                     _CLCIN3PPS	set	15068
   253  0000                     _CCP3PPS	set	15055
   254  0000                     _INLVLE	set	14980
   255  0000                     _INLVLD	set	14964
   256  0000                     _INLVLC	set	14948
   257  0000                     _INLVLB	set	14932
   258  0000                     _INLVLA	set	14916
   259  0000                     _SLRCONE	set	14979
   260  0000                     _SLRCOND	set	14963
   261  0000                     _SLRCONC	set	14947
   262  0000                     _SLRCONB	set	14931
   263  0000                     _SLRCONA	set	14915
   264  0000                     _ODCOND	set	14962
   265  0000                     _ODCONC	set	14946
   266  0000                     _ODCONB	set	14930
   267  0000                     _ODCONA	set	14914
   268  0000                     _ODCONE	set	14978
   269  0000                     _RD1I2C	set	14971
   270  0000                     _RD0I2C	set	14970
   271  0000                     _RC4I2C	set	14955
   272  0000                     _RC3I2C	set	14954
   273  0000                     _RB2I2C	set	14939
   274  0000                     _RB1I2C	set	14938
   275  0000                     _WPUC	set	14945
   276  0000                     _WPUA	set	14913
   277  0000                     _WPUB	set	14929
   278  0000                     _WPUE	set	14977
   279  0000                     _WPUD	set	14961
   280  0000                     _ANSELA	set	14912
   281  0000                     _ANSELE	set	14976
   282  0000                     _ANSELB	set	14928
   283  0000                     _ANSELC	set	14944
   284  0000                     _ANSELD	set	14960
   285  0000                     _CLC3CON	set	15456
   286  0000                     _CLC3GLS3	set	15465
   287  0000                     _CLC3GLS2	set	15464
   288  0000                     _CLC3GLS1	set	15463
   289  0000                     _CLC3GLS0	set	15462
   290  0000                     _CLC3SEL3	set	15461
   291  0000                     _CLC3SEL2	set	15460
   292  0000                     _CLC3SEL1	set	15459
   293  0000                     _CLC3SEL0	set	15458
   294  0000                     _CLC3POL	set	15457
   295  0000                     _CLC3CONbits	set	15456
   296  0000                     _U1RXB	set	15848
   297  0000                     _U1TXB	set	15850
   298  0000                     _U1ERRIRbits	set	15865
   299  0000                     _U1ERRIE	set	15866
   300  0000                     _U1ERRIR	set	15865
   301  0000                     _U1UIR	set	15864
   302  0000                     _U1FIFO	set	15863
   303  0000                     _U1BRGH	set	15862
   304  0000                     _U1BRGL	set	15861
   305  0000                     _U1CON2	set	15860
   306  0000                     _U1CON1	set	15859
   307  0000                     _U1CON0	set	15858
   308  0000                     _U1P3H	set	15857
   309  0000                     _U1P3L	set	15856
   310  0000                     _U1P2H	set	15855
   311  0000                     _U1P2L	set	15854
   312  0000                     _U1P1H	set	15853
   313  0000                     _U1P1L	set	15852
   314  0000                     _ADCON1bits	set	16121
   315  0000                     _ADERRL	set	16098
   316  0000                     _ADERRH	set	16099
   317  0000                     _ADPREVL	set	16109
   318  0000                     _ADPREVH	set	16110
   319  0000                     _ADFLTRL	set	16102
   320  0000                     _ADFLTRH	set	16103
   321  0000                     _ADSTATbits	set	16124
   322  0000                     _ADACCL	set	16104
   323  0000                     _ADACCH	set	16105
   324  0000                     _ADCON2bits	set	16122
   325  0000                     _ADCNT	set	16107
   326  0000                     _ADCON3bits	set	16123
   327  0000                     _ADRESL	set	16111
   328  0000                     _ADRESH	set	16112
   329  0000                     _ADCON0bits	set	16120
   330  0000                     _ADCON0	set	16120
   331  0000                     _ADCLK	set	16127
   332  0000                     _ADACT	set	16126
   333  0000                     _ADREF	set	16125
   334  0000                     _ADSTAT	set	16124
   335  0000                     _ADCON3	set	16123
   336  0000                     _ADCON2	set	16122
   337  0000                     _ADCON1	set	16121
   338  0000                     _ADPREH	set	16119
   339  0000                     _ADPREL	set	16118
   340  0000                     _ADCAP	set	16117
   341  0000                     _ADACQH	set	16116
   342  0000                     _ADACQL	set	16115
   343  0000                     _ADPCH	set	16113
   344  0000                     _ADRPT	set	16108
   345  0000                     _ADACCU	set	16106
   346  0000                     _ADSTPTH	set	16101
   347  0000                     _ADSTPTL	set	16100
   348  0000                     _ADUTHH	set	16097
   349  0000                     _ADUTHL	set	16096
   350  0000                     _ADLTHH	set	16095
   351  0000                     _ADLTHL	set	16094
   352  0000                     _SMT1TMR	set	16146
   353  0000                     _SMT1CPR	set	16149
   354  0000                     _SMT1CPW	set	16152
   355  0000                     _SMT1PR	set	16155
   356  0000                     _SMT1STATbits	set	16160
   357  0000                     _SMT1CON0bits	set	16158
   358  0000                     _SMT1CON1bits	set	16159
   359  0000                     _SMT1PRL	set	16155
   360  0000                     _SMT1PRH	set	16156
   361  0000                     _SMT1PRU	set	16157
   362  0000                     _SMT1SIG	set	16162
   363  0000                     _SMT1WIN	set	16163
   364  0000                     _SMT1CLK	set	16161
   365  0000                     _SMT1STAT	set	16160
   366  0000                     _SMT1CON1	set	16159
   367  0000                     _SMT1CON0	set	16158
   368  0000                     _CCPTMRS1bits	set	16223
   369  0000                     _CCPTMRS0bits	set	16222
   370  0000                     _PORTBbits	set	16331
   371  0000                     _PR2	set	16299
   372  0000                     _TMR2	set	16298
   373  0000                     _T2CONbits	set	16300
   374  0000                     _T2RSTbits	set	16303
   375  0000                     _T2HLTbits	set	16301
   376  0000                     _T2CON	set	16300
   377  0000                     _T2TMR	set	16298
   378  0000                     _T2PR	set	16299
   379  0000                     _T2RST	set	16303
   380  0000                     _T2HLT	set	16301
   381  0000                     _T2CLKCON	set	16302
   382  0000                     _PWM6DCL	set	16232
   383  0000                     _PWM6DCH	set	16233
   384  0000                     _PWM6CON	set	16234
   385  0000                     _PWM5DCL	set	16236
   386  0000                     _PWM5DCH	set	16237
   387  0000                     _PWM5CON	set	16238
   388  0000                     _PWM8DCL	set	16224
   389  0000                     _PWM8DCH	set	16225
   390  0000                     _PWM8CON	set	16226
   391  0000                     _PWM7DCL	set	16228
   392  0000                     _PWM7DCH	set	16229
   393  0000                     _PWM7CON	set	16230
   394  0000                     _PR4	set	16287
   395  0000                     _TMR4	set	16286
   396  0000                     _T4CONbits	set	16288
   397  0000                     _T4RSTbits	set	16291
   398  0000                     _T4HLTbits	set	16289
   399  0000                     _T4CON	set	16288
   400  0000                     _T4TMR	set	16286
   401  0000                     _T4PR	set	16287
   402  0000                     _T4RST	set	16291
   403  0000                     _T4HLT	set	16289
   404  0000                     _T4CLKCON	set	16290
   405  0000                     _T3GCONbits	set	16295
   406  0000                     _T3CONbits	set	16294
   407  0000                     _T3CON	set	16294
   408  0000                     _TMR3L	set	16292
   409  0000                     _TMR3H	set	16293
   410  0000                     _T3CLK	set	16297
   411  0000                     _T3GATE	set	16296
   412  0000                     _T3GCON	set	16295
   413  0000                     _T5GCONbits	set	16283
   414  0000                     _T5CONbits	set	16282
   415  0000                     _T5CON	set	16282
   416  0000                     _TMR5L	set	16280
   417  0000                     _TMR5H	set	16281
   418  0000                     _T5CLK	set	16285
   419  0000                     _T5GATE	set	16284
   420  0000                     _T5GCON	set	16283
   421  0000                     _CCPR4L	set	16240
   422  0000                     _CCPR4H	set	16241
   423  0000                     _CCP4CAP	set	16243
   424  0000                     _CCP4CON	set	16242
   425  0000                     _CCPR3L	set	16244
   426  0000                     _CCPR3H	set	16245
   427  0000                     _CCP3CAP	set	16247
   428  0000                     _CCP3CON	set	16246
   429  0000                     _PORTDbits	set	16333
   430  0000                     _IVTBASEL	set	16341
   431  0000                     _IVTBASEH	set	16342
   432  0000                     _IVTBASEU	set	16343
   433  0000                     _IVTLOCKbits	set	16340
   434  0000                     _IVTLOCK	set	16340
   435  0000                     _INTCON0bits	set	16338
   436  0000                     _TRISD	set	16325
   437  0000                     _TRISC	set	16324
   438  0000                     _TRISB	set	16323
   439  0000                     _TRISA	set	16322
   440  0000                     _TRISE	set	16326
   441  0000                     _LATC	set	16316
   442  0000                     _LATB	set	16315
   443  0000                     _LATA	set	16314
   444  0000                     _LATD	set	16317
   445  0000                     _LATE	set	16318
   446  0000                     _GIE	set	130711
   447                           
   448                           	psect	smallconst
   449  001000                     __psmallconst:
   450                           	callstack 0
   451  001000  00                 	db	0
   452  001001                     STR_3:
   453                           
   454                           ; BSR set to: 1
   455  001001  43                 	db	67	;'C'
   456  001002  75                 	db	117	;'u'
   457  001003  72                 	db	114	;'r'
   458  001004  76                 	db	118	;'v'
   459  001005  65                 	db	101	;'e'
   460  001006  4C                 	db	76	;'L'
   461  001007  65                 	db	101	;'e'
   462  001008  66                 	db	102	;'f'
   463  001009  74                 	db	116	;'t'
   464  00100A  43                 	db	67	;'C'
   465  00100B  6F                 	db	111	;'o'
   466  00100C  75                 	db	117	;'u'
   467  00100D  6E                 	db	110	;'n'
   468  00100E  74                 	db	116	;'t'
   469  00100F  3A                 	db	58	;':'
   470  001010  20                 	db	32
   471  001011  25                 	db	37
   472  001012  75                 	db	117	;'u'
   473  001013  20                 	db	32
   474  001014  20                 	db	32
   475  001015  20                 	db	32
   476  001016  7C                 	db	124
   477  001017  20                 	db	32
   478  001018  20                 	db	32
   479  001019  20                 	db	32
   480  00101A  00                 	db	0
   481  00101B                     STR_2:
   482                           
   483                           ; BSR set to: 1
   484  00101B  52                 	db	82	;'R'
   485  00101C  65                 	db	101	;'e'
   486  00101D  73                 	db	115	;'s'
   487  00101E  65                 	db	101	;'e'
   488  00101F  74                 	db	116	;'t'
   489  001020  20                 	db	32
   490  001021  43                 	db	67	;'C'
   491  001022  75                 	db	117	;'u'
   492  001023  72                 	db	114	;'r'
   493  001024  76                 	db	118	;'v'
   494  001025  65                 	db	101	;'e'
   495  001026  43                 	db	67	;'C'
   496  001027  6F                 	db	111	;'o'
   497  001028  75                 	db	117	;'u'
   498  001029  6E                 	db	110	;'n'
   499  00102A  74                 	db	116	;'t'
   500  00102B  21                 	db	33
   501  00102C  20                 	db	32
   502  00102D  20                 	db	32
   503  00102E  7C                 	db	124
   504  00102F  20                 	db	32
   505  001030  20                 	db	32
   506  001031  20                 	db	32
   507  001032  00                 	db	0
   508  001033                     STR_4:
   509                           
   510                           ; BSR set to: 1
   511  001033  43                 	db	67	;'C'
   512  001034  75                 	db	117	;'u'
   513  001035  72                 	db	114	;'r'
   514  001036  76                 	db	118	;'v'
   515  001037  65                 	db	101	;'e'
   516  001038  52                 	db	82	;'R'
   517  001039  69                 	db	105	;'i'
   518  00103A  67                 	db	103	;'g'
   519  00103B  68                 	db	104	;'h'
   520  00103C  74                 	db	116	;'t'
   521  00103D  43                 	db	67	;'C'
   522  00103E  6F                 	db	111	;'o'
   523  00103F  75                 	db	117	;'u'
   524  001040  6E                 	db	110	;'n'
   525  001041  74                 	db	116	;'t'
   526  001042  3A                 	db	58	;':'
   527  001043  20                 	db	32
   528  001044  25                 	db	37
   529  001045  75                 	db	117	;'u'
   530  001046  0A                 	db	10
   531  001047  00                 	db	0
   532  001048                     STR_1:
   533                           
   534                           ; BSR set to: 1
   535  001048  73                 	db	115	;'s'
   536  001049  74                 	db	116	;'t'
   537  00104A  61                 	db	97	;'a'
   538  00104B  72                 	db	114	;'r'
   539  00104C  41                 	db	65	;'A'
   540  00104D  63                 	db	99	;'c'
   541  00104E  63                 	db	99	;'c'
   542  00104F  65                 	db	101	;'e'
   543  001050  6C                 	db	108	;'l'
   544  001051  50                 	db	80	;'P'
   545  001052  6F                 	db	111	;'o'
   546  001053  77                 	db	119	;'w'
   547  001054  65                 	db	101	;'e'
   548  001055  72                 	db	114	;'r'
   549  001056  3A                 	db	58	;':'
   550  001057  20                 	db	32
   551  001058  25                 	db	37
   552  001059  64                 	db	100	;'d'
   553  00105A  0A                 	db	10
   554  00105B  00                 	db	0
   555  00105C                     STR_5:
   556                           
   557                           ; BSR set to: 1
   558  00105C  52                 	db	82	;'R'
   559  00105D  6F                 	db	111	;'o'
   560  00105E  75                 	db	117	;'u'
   561  00105F  6E                 	db	110	;'n'
   562  001060  64                 	db	100	;'d'
   563  001061  54                 	db	84	;'T'
   564  001062  69                 	db	105	;'i'
   565  001063  6D                 	db	109	;'m'
   566  001064  65                 	db	101	;'e'
   567  001065  3A                 	db	58	;':'
   568  001066  20                 	db	32
   569  001067  25                 	db	37
   570  001068  66                 	db	102	;'f'
   571  001069  0A                 	db	10
   572  00106A  0A                 	db	10
   573  00106B  00                 	db	0
   574  00106C                     STR_8:
   575                           
   576                           ; BSR set to: 1
   577  00106C  53                 	db	83	;'S'
   578  00106D  74                 	db	116	;'t'
   579  00106E  6F                 	db	111	;'o'
   580  00106F  70                 	db	112	;'p'
   581  001070  20                 	db	32
   582  001071  52                 	db	82	;'R'
   583  001072  65                 	db	101	;'e'
   584  001073  76                 	db	118	;'v'
   585  001074  65                 	db	101	;'e'
   586  001075  72                 	db	114	;'r'
   587  001076  73                 	db	115	;'s'
   588  001077  65                 	db	101	;'e'
   589  001078  0A                 	db	10
   590  001079  00                 	db	0
   591  00107A                     STR_6:
   592                           
   593                           ; BSR set to: 1
   594  00107A  52                 	db	82	;'R'
   595  00107B  65                 	db	101	;'e'
   596  00107C  76                 	db	118	;'v'
   597  00107D  65                 	db	101	;'e'
   598  00107E  72                 	db	114	;'r'
   599  00107F  73                 	db	115	;'s'
   600  001080  65                 	db	101	;'e'
   601  001081  52                 	db	82	;'R'
   602  001082  69                 	db	105	;'i'
   603  001083  67                 	db	103	;'g'
   604  001084  74                 	db	116	;'t'
   605  001085  68                 	db	104	;'h'
   606  001086  0A                 	db	10
   607  001087  00                 	db	0
   608  001088                     STR_7:
   609                           
   610                           ; BSR set to: 1
   611  001088  52                 	db	82	;'R'
   612  001089  65                 	db	101	;'e'
   613  00108A  76                 	db	118	;'v'
   614  00108B  65                 	db	101	;'e'
   615  00108C  72                 	db	114	;'r'
   616  00108D  73                 	db	115	;'s'
   617  00108E  65                 	db	101	;'e'
   618  00108F  4C                 	db	76	;'L'
   619  001090  65                 	db	101	;'e'
   620  001091  66                 	db	102	;'f'
   621  001092  74                 	db	116	;'t'
   622  001093  0A                 	db	10
   623  001094  00                 	db	0
   624  001095                     STR_9:
   625                           
   626                           ; BSR set to: 1
   627  001095  49                 	db	73	;'I'
   628  001096  4E                 	db	78	;'N'
   629  001097  46                 	db	70	;'F'
   630  001098  00                 	db	0
   631  001099                     STR_13:
   632                           
   633                           ; BSR set to: 1
   634  001099  4E                 	db	78	;'N'
   635  00109A  41                 	db	65	;'A'
   636  00109B  4E                 	db	78	;'N'
   637  00109C  00                 	db	0
   638  00109D                     STR_10:
   639                           
   640                           ; BSR set to: 1
   641  00109D  69                 	db	105	;'i'
   642  00109E  6E                 	db	110	;'n'
   643  00109F  66                 	db	102	;'f'
   644  0010A0  00                 	db	0
   645  0010A1                     STR_14:
   646                           
   647                           ; BSR set to: 1
   648  0010A1  6E                 	db	110	;'n'
   649  0010A2  61                 	db	97	;'a'
   650  0010A3  6E                 	db	110	;'n'
   651  0010A4  00                 	db	0
   652  0010A5                     STR_17:
   653                           
   654                           ; BSR set to: 1
   655  0010A5  6C                 	db	108	;'l'
   656  0010A6  66                 	db	102	;'f'
   657  0010A7  00                 	db	0
   658  0010A8  00                 	db	0	; dummy byte at the end
   659  0000                     
   660                           ; #config settings
   661                           
   662                           	psect	cinit
   663  005EA8                     __pcinit:
   664                           	callstack 0
   665  005EA8                     start_initialization:
   666                           	callstack 0
   667  005EA8                     __initialization:
   668                           	callstack 0
   669                           
   670                           ; Clear objects allocated to BANK1 (144 bytes)
   671  005EA8  EE00  F100         	lfsr	0,__pbssBANK1
   672  005EAC  0E90               	movlw	144
   673  005EAE                     clear_0:
   674  005EAE  6AEE               	clrf	postinc0,c
   675  005EB0  06E8               	decf	wreg,f,c
   676  005EB2  E1FD               	bnz	clear_0
   677                           
   678                           ; Clear objects allocated to BANK0 (20 bytes)
   679  005EB4  EE00  F0EB         	lfsr	0,__pbssBANK0
   680  005EB8  0E14               	movlw	20
   681  005EBA                     clear_1:
   682  005EBA  6AEE               	clrf	postinc0,c
   683  005EBC  06E8               	decf	wreg,f,c
   684  005EBE  E1FD               	bnz	clear_1
   685                           
   686                           ; Clear objects allocated to COMRAM (18 bytes)
   687  005EC0  EE00  F03A         	lfsr	0,__pbssCOMRAM
   688  005EC4  0E12               	movlw	18
   689  005EC6                     clear_2:
   690  005EC6  6AEE               	clrf	postinc0,c
   691  005EC8  06E8               	decf	wreg,f,c
   692  005ECA  E1FD               	bnz	clear_2
   693                           
   694                           ;
   695                           ; Setup IVTBASE
   696                           ;
   697  005ECC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   698  005ECE  6ED5               	movwf	213,c
   699  005ED0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   700  005ED2  6ED6               	movwf	214,c
   701  005ED4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   702  005ED6  6ED7               	movwf	215,c
   703  005ED8                     end_of_initialization:
   704                           	callstack 0
   705  005ED8                     __end_of__initialization:
   706                           	callstack 0
   707  005ED8  0100               	movlb	0
   708  005EDA  EF76  F031         	goto	_main	;jump to C main() function
   709                           
   710                           	psect	bssCOMRAM
   711  00003A                     __pbssCOMRAM:
   712                           	callstack 0
   713  00003A                     _width:
   714                           	callstack 0
   715  00003A                     	ds	2
   716  00003C                     _prec:
   717                           	callstack 0
   718  00003C                     	ds	2
   719  00003E                     _flags:
   720                           	callstack 0
   721  00003E                     	ds	2
   722  000040                     TMR4_ISR@CountCallBack:
   723                           	callstack 0
   724  000040                     	ds	2
   725  000042                     _uart1RxLastError:
   726                           	callstack 0
   727  000042                     	ds	1
   728  000043                     _uart1RxCount:
   729                           	callstack 0
   730  000043                     	ds	1
   731  000044                     _uart1RxTail:
   732                           	callstack 0
   733  000044                     	ds	1
   734  000045                     _uart1RxHead:
   735                           	callstack 0
   736  000045                     	ds	1
   737  000046                     _uart1TxTail:
   738                           	callstack 0
   739  000046                     	ds	1
   740  000047                     _uart1TxHead:
   741                           	callstack 0
   742  000047                     	ds	1
   743  000048                     _smtPeriod:
   744                           	callstack 0
   745  000048                     	ds	4
   746                           
   747                           	psect	bssBANK0
   748  0000EB                     __pbssBANK0:
   749                           	callstack 0
   750  0000EB                     _actMotorPow:
   751                           	callstack 0
   752  0000EB                     	ds	2
   753  0000ED                     _currentSpeed:
   754                           	callstack 0
   755  0000ED                     	ds	2
   756  0000EF                     _setSpeed:
   757                           	callstack 0
   758  0000EF                     	ds	2
   759  0000F1                     _roundTimeCount:
   760                           	callstack 0
   761  0000F1                     	ds	2
   762  0000F3                     _distRight:
   763                           	callstack 0
   764  0000F3                     	ds	2
   765  0000F5                     _distLeft:
   766                           	callstack 0
   767  0000F5                     	ds	2
   768  0000F7                     _delay:
   769                           	callstack 0
   770  0000F7                     	ds	1
   771  0000F8                     _curveRightCount:
   772                           	callstack 0
   773  0000F8                     	ds	1
   774  0000F9                     _curveLeftCount:
   775                           	callstack 0
   776  0000F9                     	ds	1
   777  0000FA                     _cycle10ms:
   778                           	callstack 0
   779  0000FA                     	ds	1
   780  0000FB                     _curveMode:
   781                           	callstack 0
   782  0000FB                     	ds	1
   783  0000FC                     _driveMode:
   784                           	callstack 0
   785  0000FC                     	ds	1
   786  0000FD                     _distFront:
   787                           	callstack 0
   788  0000FD                     	ds	2
   789                           
   790                           	psect	bssBANK1
   791  000100                     __pbssBANK1:
   792                           	callstack 0
   793  000100                     _uart1RxStatusBuffer:
   794                           	callstack 0
   795  000100                     	ds	8
   796  000108                     _uart1RxBuffer:
   797                           	callstack 0
   798  000108                     	ds	8
   799  000110                     _uart1TxBuffer:
   800                           	callstack 0
   801  000110                     	ds	8
   802  000118                     floorf@F527:
   803                           	callstack 0
   804  000118                     	ds	4
   805  00011C                     ___fpclassifyf@F465:
   806                           	callstack 0
   807  00011C                     	ds	4
   808  000120                     _smtWay:
   809                           	callstack 0
   810  000120                     	ds	4
   811  000124                     _smtDuty:
   812                           	callstack 0
   813  000124                     	ds	4
   814  000128                     _nout:
   815                           	callstack 0
   816  000128                     	ds	2
   817  00012A                     _BatteryVolt:
   818                           	callstack 0
   819  00012A                     	ds	2
   820  00012C                     _reverseTime:
   821                           	callstack 0
   822  00012C                     	ds	2
   823  00012E                     _oldSpeed:
   824                           	callstack 0
   825  00012E                     	ds	2
   826  000130                     _motPow:
   827                           	callstack 0
   828  000130                     	ds	2
   829  000132                     _followCount:
   830                           	callstack 0
   831  000132                     	ds	2
   832  000134                     _battCheckCount:
   833                           	callstack 0
   834  000134                     	ds	2
   835  000136                     _oldDistRight:
   836                           	callstack 0
   837  000136                     	ds	2
   838  000138                     _oldDistLeft:
   839                           	callstack 0
   840  000138                     	ds	2
   841  00013A                     _reverseCount:
   842                           	callstack 0
   843  00013A                     	ds	2
   844  00013C                     _distRightM:
   845                           	callstack 0
   846  00013C                     	ds	2
   847  00013E                     _distLeftM:
   848                           	callstack 0
   849  00013E                     	ds	2
   850  000140                     _dbuf:
   851                           	callstack 0
   852  000140                     	ds	80
   853                           
   854                           	psect	cstackBANK1
   855  0001A6                     __pcstackBANK1:
   856                           	callstack 0
   857  0001A6                     ?_vfprintf:
   858                           	callstack 0
   859  0001A6                     vfprintf@fp:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x0
   863  0001A6                     	ds	2
   864  0001A8                     vfprintf@fmt:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x2
   868  0001A8                     	ds	2
   869  0001AA                     vfprintf@ap:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x4
   873  0001AA                     	ds	2
   874  0001AC                     vfprintf@cfmt:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x6
   878  0001AC                     	ds	2
   879  0001AE                     ?_printf:
   880                           	callstack 0
   881  0001AE                     printf@fmt:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x8
   885  0001AE                     	ds	6
   886  0001B4                     printf@ap:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0xE
   890  0001B4                     	ds	2
   891  0001B6                     startAccell@i:
   892                           	callstack 0
   893  0001B6                     checkCurveCount@roundTime:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x10
   897  0001B6                     	ds	4
   898                           
   899                           	psect	cstackBANK0
   900  000060                     __pcstackBANK0:
   901                           	callstack 0
   902  000060                     ?_dtoa:
   903                           	callstack 0
   904  000060                     ?_utoa:
   905                           	callstack 0
   906  000060                     ___flmul@sign:
   907                           	callstack 0
   908  000060                     dtoa@fp:
   909                           	callstack 0
   910  000060                     utoa@fp:
   911                           	callstack 0
   912  000060                     ___fldiv@rem:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x0
   916  000060                     	ds	1
   917  000061                     ___flmul@aexp:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x1
   921  000061                     	ds	1
   922  000062                     ___flmul@grs:
   923                           	callstack 0
   924  000062                     dtoa@d:
   925                           	callstack 0
   926  000062                     utoa@d:
   927                           	callstack 0
   928                           
   929                           ; 8 bytes @ 0x2
   930  000062                     	ds	2
   931  000064                     ___fldiv@sign:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x4
   935  000064                     	ds	1
   936  000065                     ___fldiv@new_exp:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x5
   940  000065                     	ds	1
   941  000066                     ___flmul@bexp:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x6
   945  000066                     	ds	1
   946  000067                     ___fldiv@grs:
   947                           	callstack 0
   948  000067                     ___flmul@prod:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x7
   952  000067                     	ds	3
   953  00006A                     _dtoa$3543:
   954                           	callstack 0
   955  00006A                     utoa@p:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0xA
   959  00006A                     	ds	1
   960  00006B                     ___fldiv@bexp:
   961                           	callstack 0
   962  00006B                     ___flmul@temp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0xB
   966  00006B                     	ds	1
   967  00006C                     ___fldiv@aexp:
   968                           	callstack 0
   969  00006C                     dtoa@p:
   970                           	callstack 0
   971  00006C                     utoa@w:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0xC
   975  00006C                     	ds	1
   976  00006D                     ??_floorf:
   977  00006D                     ?___fladd:
   978                           	callstack 0
   979  00006D                     ___flge@ff1:
   980                           	callstack 0
   981  00006D                     ___fladd@b:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0xD
   985  00006D                     	ds	1
   986  00006E                     dtoa@w:
   987                           	callstack 0
   988  00006E                     utoa@n:
   989                           	callstack 0
   990                           
   991                           ; 8 bytes @ 0xE
   992  00006E                     	ds	2
   993  000070                     dtoa@s:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x10
   997  000070                     	ds	1
   998  000071                     ___flge@ff2:
   999                           	callstack 0
  1000  000071                     ___fladd@a:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x11
  1004  000071                     	ds	1
  1005  000072                     dtoa@n:
  1006                           	callstack 0
  1007                           
  1008                           ; 8 bytes @ 0x12
  1009  000072                     	ds	1
  1010  000073                     floorf@m:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x13
  1014  000073                     	ds	2
  1015  000075                     ??_getCurve:
  1016  000075                     ___fladd@signs:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x15
  1020  000075                     	ds	1
  1021  000076                     ___fladd@aexp:
  1022                           	callstack 0
  1023  000076                     utoa@i:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x16
  1027  000076                     	ds	1
  1028  000077                     ___fladd@bexp:
  1029                           	callstack 0
  1030  000077                     floorf@e:
  1031                           	callstack 0
  1032  000077                     getCurve@ratio:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x17
  1036  000077                     	ds	1
  1037  000078                     ___fladd@grs:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x18
  1041  000078                     	ds	1
  1042  000079                     ?___flsub:
  1043                           	callstack 0
  1044  000079                     ?___fltol:
  1045                           	callstack 0
  1046  000079                     ___fltol@f1:
  1047                           	callstack 0
  1048  000079                     ___flsub@b:
  1049                           	callstack 0
  1050  000079                     floorf@u:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x19
  1054  000079                     	ds	1
  1055  00007A                     dtoa@i:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x1A
  1059  00007A                     	ds	1
  1060  00007B                     getCurve@deltaLeft:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x1B
  1064  00007B                     	ds	2
  1065  00007D                     ??___fltol:
  1066  00007D                     getCurve@deltaRight:
  1067                           	callstack 0
  1068  00007D                     ___flsub@a:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x1D
  1072  00007D                     	ds	4
  1073  000081                     ___fltol@sign1:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x21
  1077  000081                     	ds	1
  1078  000082                     ___fltol@exp1:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x22
  1082  000082                     	ds	1
  1083  000083                     ??_calcSpeed:
  1084  000083                     ??_calcMotorPow:
  1085  000083                     ?_efgtoa:
  1086                           	callstack 0
  1087  000083                     setSteering@steering:
  1088                           	callstack 0
  1089  000083                     efgtoa@fp:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x23
  1093  000083                     	ds	2
  1094  000085                     setSteering@steeringMode:
  1095                           	callstack 0
  1096  000085                     calcMotorPow@setSpeedDelta:
  1097                           	callstack 0
  1098  000085                     efgtoa@f:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x25
  1102  000085                     	ds	1
  1103  000086                     ??_setSteering:
  1104                           
  1105                           ; 1 bytes @ 0x26
  1106  000086                     	ds	1
  1107  000087                     calcSpeed@speed:
  1108                           	callstack 0
  1109  000087                     calcMotorPow@oldSpeedDelta:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x27
  1113  000087                     	ds	1
  1114  000088                     setSteering@steeringF:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x28
  1118  000088                     	ds	1
  1119  000089                     calcMotorPow@addMPow:
  1120                           	callstack 0
  1121  000089                     efgtoa@c:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x29
  1125  000089                     	ds	1
  1126  00008A                     ??_efgtoa:
  1127  00008A                     setSteering@steeringB:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x2A
  1131  00008A                     	ds	2
  1132  00008C                     ??_calcSteering:
  1133                           
  1134                           ; 1 bytes @ 0x2C
  1135  00008C                     	ds	2
  1136  00008E                     calcSteering@delta:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x2E
  1140  00008E                     	ds	1
  1141  00008F                     _efgtoa$3567:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x2F
  1145  00008F                     	ds	2
  1146  000091                     _efgtoa$3568:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x31
  1150  000091                     	ds	2
  1151  000093                     _efgtoa$3572:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x33
  1155  000093                     	ds	2
  1156  000095                     _efgtoa$3576:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x35
  1160  000095                     	ds	2
  1161  000097                     _efgtoa$3577:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x37
  1165  000097                     	ds	2
  1166  000099                     _efgtoa$3578:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x39
  1170  000099                     	ds	2
  1171  00009B                     efgtoa@t:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x3B
  1175  00009B                     	ds	2
  1176  00009D                     efgtoa@pp:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x3D
  1180  00009D                     	ds	2
  1181  00009F                     efgtoa@ne:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x3F
  1185  00009F                     	ds	2
  1186  0000A1                     efgtoa@m:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x41
  1190  0000A1                     	ds	2
  1191  0000A3                     efgtoa@ou:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x43
  1195  0000A3                     	ds	4
  1196  0000A7                     efgtoa@d:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x47
  1200  0000A7                     	ds	2
  1201  0000A9                     efgtoa@sign:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x49
  1205  0000A9                     	ds	2
  1206  0000AB                     efgtoa@p:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x4B
  1210  0000AB                     	ds	2
  1211  0000AD                     efgtoa@w:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x4D
  1215  0000AD                     	ds	2
  1216  0000AF                     efgtoa@nmode:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x4F
  1220  0000AF                     	ds	1
  1221  0000B0                     efgtoa@mode:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x50
  1225  0000B0                     	ds	1
  1226  0000B1                     efgtoa@h:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x51
  1230  0000B1                     	ds	4
  1231  0000B5                     efgtoa@l:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x55
  1235  0000B5                     	ds	4
  1236  0000B9                     efgtoa@i:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x59
  1240  0000B9                     	ds	2
  1241  0000BB                     efgtoa@g:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x5B
  1245  0000BB                     	ds	4
  1246  0000BF                     efgtoa@e:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x5F
  1250  0000BF                     	ds	2
  1251  0000C1                     efgtoa@n:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x61
  1255  0000C1                     	ds	2
  1256  0000C3                     efgtoa@u:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x63
  1260  0000C3                     	ds	4
  1261  0000C7                     ?_vfpfcnvrt:
  1262                           	callstack 0
  1263  0000C7                     vfpfcnvrt@fp:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x67
  1267  0000C7                     	ds	2
  1268  0000C9                     vfpfcnvrt@fmt:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x69
  1272  0000C9                     	ds	2
  1273  0000CB                     vfpfcnvrt@ap:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x6B
  1277  0000CB                     	ds	2
  1278  0000CD                     ??_vfpfcnvrt:
  1279                           
  1280                           ; 1 bytes @ 0x6D
  1281  0000CD                     	ds	4
  1282  0000D1                     vfpfcnvrt@ll:
  1283                           	callstack 0
  1284                           
  1285                           ; 8 bytes @ 0x71
  1286  0000D1                     	ds	8
  1287  0000D9                     vfpfcnvrt@llu:
  1288                           	callstack 0
  1289                           
  1290                           ; 8 bytes @ 0x79
  1291  0000D9                     	ds	8
  1292  0000E1                     _vfpfcnvrt$3603:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x81
  1296  0000E1                     	ds	2
  1297  0000E3                     vfpfcnvrt@f:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x83
  1301  0000E3                     	ds	4
  1302  0000E7                     vfpfcnvrt@ct:
  1303                           	callstack 0
  1304                           
  1305                           ; 3 bytes @ 0x87
  1306  0000E7                     	ds	3
  1307  0000EA                     vfpfcnvrt@c:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x8A
  1311  0000EA                     	ds	1
  1312                           
  1313                           	psect	cstackCOMRAM
  1314  000001                     __pcstackCOMRAM:
  1315                           	callstack 0
  1316  000001                     CCP3_DefaultCallBack@capturedValue:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x0
  1320  000001                     	ds	2
  1321  000003                     CCP3_CaptureISR@module:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x2
  1325  000003                     	ds	2
  1326  000005                     CCP4_DefaultCallBack@capturedValue:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x4
  1330  000005                     	ds	2
  1331  000007                     CCP4_CaptureISR@module:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x6
  1335  000007                     	ds	2
  1336  000009                     ?_TMR5_ReadTimer:
  1337                           	callstack 0
  1338  000009                     TMR5_WriteTimer@timerVal:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x8
  1342  000009                     	ds	2
  1343  00000B                     ??_TMR5_ReadTimer:
  1344  00000B                     
  1345                           ; 1 bytes @ 0xA
  1346  00000B                     	ds	2
  1347  00000D                     TMR5_ReadTimer@readVal:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0xC
  1351  00000D                     	ds	2
  1352  00000F                     TMR5_ReadTimer@readValHigh:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0xE
  1356  00000F                     	ds	1
  1357  000010                     TMR5_ReadTimer@readValLow:
  1358                           	callstack 0
  1359                           
  1360                           ; 1 bytes @ 0xF
  1361  000010                     	ds	1
  1362  000011                     ??_UART1_tx_vect_isr:
  1363  000011                     
  1364                           ; 1 bytes @ 0x10
  1365  000011                     	ds	1
  1366  000012                     ??_UART1_rx_vect_isr:
  1367                           
  1368                           ; 1 bytes @ 0x11
  1369  000012                     	ds	1
  1370  000013                     ??_TMR4_ISR:
  1371                           
  1372                           ; 1 bytes @ 0x12
  1373  000013                     	ds	1
  1374  000014                     ??_TMR3_Initialize:
  1375  000014                     ?_strlen:
  1376                           	callstack 0
  1377  000014                     ?___fpclassifyf:
  1378                           	callstack 0
  1379  000014                     ?_isupper:
  1380                           	callstack 0
  1381  000014                     ?_strncmp:
  1382                           	callstack 0
  1383  000014                     ?_ADCC_GetSingleConversion:
  1384                           	callstack 0
  1385  000014                     ?___awdiv:
  1386                           	callstack 0
  1387  000014                     ?___awmod:
  1388                           	callstack 0
  1389  000014                     ?___lwdiv:
  1390                           	callstack 0
  1391  000014                     ?___aldiv:
  1392                           	callstack 0
  1393  000014                     ?___flneg:
  1394                           	callstack 0
  1395  000014                     ?___aodiv:
  1396                           	callstack 0
  1397  000014                     ?___aomod:
  1398                           	callstack 0
  1399  000014                     ?___lodiv:
  1400                           	callstack 0
  1401  000014                     ?___lomod:
  1402                           	callstack 0
  1403  000014                     UART1_Write@txData:
  1404                           	callstack 0
  1405  000014                     INTERRUPT_Initialize@state:
  1406                           	callstack 0
  1407  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1408                           	callstack 0
  1409  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1410                           	callstack 0
  1411  000014                     UART1_SetErrorHandler@interruptHandler:
  1412                           	callstack 0
  1413  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1414                           	callstack 0
  1415  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1416                           	callstack 0
  1417  000014                     CCP3_SetCallBack@customCallBack:
  1418                           	callstack 0
  1419  000014                     CCP4_SetCallBack@customCallBack:
  1420                           	callstack 0
  1421  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1422                           	callstack 0
  1423  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1424                           	callstack 0
  1425  000014                     PWM7_LoadDutyValue@dutyValue:
  1426                           	callstack 0
  1427  000014                     PWM8_LoadDutyValue@dutyValue:
  1428                           	callstack 0
  1429  000014                     PWM5_LoadDutyValue@dutyValue:
  1430                           	callstack 0
  1431  000014                     PWM6_LoadDutyValue@dutyValue:
  1432                           	callstack 0
  1433  000014                     ___awdiv@dividend:
  1434                           	callstack 0
  1435  000014                     ___awmod@dividend:
  1436                           	callstack 0
  1437  000014                     ___lwdiv@dividend:
  1438                           	callstack 0
  1439  000014                     isupper@c:
  1440                           	callstack 0
  1441  000014                     strcpy@dest:
  1442                           	callstack 0
  1443  000014                     strlen@s:
  1444                           	callstack 0
  1445  000014                     strncmp@_l:
  1446                           	callstack 0
  1447  000014                     ___aldiv@dividend:
  1448                           	callstack 0
  1449  000014                     ___fleq@ff1:
  1450                           	callstack 0
  1451  000014                     ___flneg@f1:
  1452                           	callstack 0
  1453  000014                     ___fpclassifyf@x:
  1454                           	callstack 0
  1455  000014                     ___aodiv@dividend:
  1456                           	callstack 0
  1457  000014                     ___aomod@dividend:
  1458                           	callstack 0
  1459  000014                     ___lodiv@dividend:
  1460                           	callstack 0
  1461  000014                     ___lomod@dividend:
  1462                           	callstack 0
  1463                           
  1464                           ; 8 bytes @ 0x13
  1465  000014                     	ds	1
  1466  000015                     putch@txData:
  1467                           	callstack 0
  1468                           
  1469                           ; 1 bytes @ 0x14
  1470  000015                     	ds	1
  1471  000016                     ??_TMR5_Initialize:
  1472  000016                     ??_isupper:
  1473  000016                     ??_PWM7_LoadDutyValue:
  1474  000016                     ??_PWM8_LoadDutyValue:
  1475  000016                     ??_PWM5_LoadDutyValue:
  1476  000016                     ??_PWM6_LoadDutyValue:
  1477  000016                     ??_ADCC_GetSingleConversion:
  1478  000016                     ___awdiv@divisor:
  1479                           	callstack 0
  1480  000016                     ___awmod@divisor:
  1481                           	callstack 0
  1482  000016                     ___lwdiv@divisor:
  1483                           	callstack 0
  1484  000016                     fputc@c:
  1485                           	callstack 0
  1486  000016                     strcpy@src:
  1487                           	callstack 0
  1488  000016                     strlen@a:
  1489                           	callstack 0
  1490  000016                     strncmp@_r:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x15
  1494  000016                     	ds	2
  1495  000018                     ??___fpclassifyf:
  1496  000018                     ??_strcpy:
  1497  000018                     ADCC_GetSingleConversion@channel:
  1498                           	callstack 0
  1499  000018                     ___awdiv@counter:
  1500                           	callstack 0
  1501  000018                     ___awmod@counter:
  1502                           	callstack 0
  1503  000018                     ___lwdiv@counter:
  1504                           	callstack 0
  1505  000018                     setMotor@motorPower:
  1506                           	callstack 0
  1507  000018                     fputc@fp:
  1508                           	callstack 0
  1509  000018                     strncmp@n:
  1510                           	callstack 0
  1511  000018                     ___aldiv@divisor:
  1512                           	callstack 0
  1513  000018                     ___fleq@ff2:
  1514                           	callstack 0
  1515                           
  1516                           ; 4 bytes @ 0x17
  1517  000018                     	ds	1
  1518  000019                     ___awdiv@sign:
  1519                           	callstack 0
  1520  000019                     ___awmod@sign:
  1521                           	callstack 0
  1522  000019                     ___lwdiv@quotient:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x18
  1526  000019                     	ds	1
  1527  00001A                     ??_setMotor:
  1528  00001A                     ??_fputc:
  1529  00001A                     ??_strncmp:
  1530  00001A                     ?_tolower:
  1531                           	callstack 0
  1532  00001A                     ___awdiv@quotient:
  1533                           	callstack 0
  1534  00001A                     strcpy@s:
  1535                           	callstack 0
  1536  00001A                     tolower@c:
  1537                           	callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x19
  1540  00001A                     	ds	1
  1541  00001B                     strncmp@l:
  1542                           	callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x1A
  1545  00001B                     	ds	1
  1546  00001C                     ??_tolower:
  1547  00001C                     ??___fleq:
  1548  00001C                     ?___xxtofl:
  1549                           	callstack 0
  1550  00001C                     ___aldiv@counter:
  1551                           	callstack 0
  1552  00001C                     ___fpclassifyf@e:
  1553                           	callstack 0
  1554  00001C                     strcpy@d:
  1555                           	callstack 0
  1556  00001C                     ___xxtofl@val:
  1557                           	callstack 0
  1558  00001C                     ___aodiv@divisor:
  1559                           	callstack 0
  1560  00001C                     ___aomod@divisor:
  1561                           	callstack 0
  1562  00001C                     ___lodiv@divisor:
  1563                           	callstack 0
  1564  00001C                     ___lomod@divisor:
  1565                           	callstack 0
  1566                           
  1567                           ; 8 bytes @ 0x1B
  1568  00001C                     	ds	1
  1569  00001D                     ___aldiv@sign:
  1570                           	callstack 0
  1571  00001D                     strncmp@r:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x1C
  1575  00001D                     	ds	1
  1576  00001E                     ___aldiv@quotient:
  1577                           	callstack 0
  1578  00001E                     ___fpclassifyf@u:
  1579                           	callstack 0
  1580                           
  1581                           ; 4 bytes @ 0x1D
  1582  00001E                     	ds	1
  1583  00001F                     fputs@s:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x1E
  1587  00001F                     	ds	1
  1588  000020                     ??___xxtofl:
  1589  000020                     _tolower$3697:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x1F
  1593  000020                     	ds	1
  1594  000021                     fputs@fp:
  1595                           	callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x20
  1598  000021                     	ds	1
  1599  000022                     ?_actSpeed:
  1600                           	callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x21
  1603  000022                     	ds	1
  1604  000023                     fputs@c:
  1605                           	callstack 0
  1606                           
  1607                           ; 1 bytes @ 0x22
  1608  000023                     	ds	1
  1609  000024                     ___aodiv@counter:
  1610                           	callstack 0
  1611  000024                     ___aomod@counter:
  1612                           	callstack 0
  1613  000024                     ___lomod@counter:
  1614                           	callstack 0
  1615  000024                     ___xxtofl@sign:
  1616                           	callstack 0
  1617  000024                     actSpeed@speed:
  1618                           	callstack 0
  1619  000024                     fputs@i:
  1620                           	callstack 0
  1621  000024                     ___lodiv@quotient:
  1622                           	callstack 0
  1623                           
  1624                           ; 8 bytes @ 0x23
  1625  000024                     	ds	1
  1626  000025                     ___aodiv@sign:
  1627                           	callstack 0
  1628  000025                     ___aomod@sign:
  1629                           	callstack 0
  1630  000025                     ___xxtofl@exp:
  1631                           	callstack 0
  1632                           
  1633                           ; 1 bytes @ 0x24
  1634  000025                     	ds	1
  1635  000026                     ?_abs:
  1636                           	callstack 0
  1637  000026                     ?_pad:
  1638                           	callstack 0
  1639  000026                     pad@fp:
  1640                           	callstack 0
  1641  000026                     abs@a:
  1642                           	callstack 0
  1643  000026                     ___xxtofl@arg:
  1644                           	callstack 0
  1645  000026                     ___aodiv@quotient:
  1646                           	callstack 0
  1647                           
  1648                           ; 8 bytes @ 0x25
  1649  000026                     	ds	2
  1650  000028                     ??_abs:
  1651  000028                     pad@buf:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x27
  1655  000028                     	ds	2
  1656  00002A                     ?___fldiv:
  1657                           	callstack 0
  1658  00002A                     ?___flmul:
  1659                           	callstack 0
  1660  00002A                     pad@p:
  1661                           	callstack 0
  1662  00002A                     ___fldiv@b:
  1663                           	callstack 0
  1664  00002A                     ___flmul@b:
  1665                           	callstack 0
  1666                           
  1667                           ; 4 bytes @ 0x29
  1668  00002A                     	ds	2
  1669  00002C                     ??_pad:
  1670  00002C                     ___lodiv@counter:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x2B
  1674  00002C                     	ds	1
  1675  00002D                     pad@i:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x2C
  1679  00002D                     	ds	1
  1680  00002E                     ___fldiv@a:
  1681                           	callstack 0
  1682  00002E                     ___flmul@a:
  1683                           	callstack 0
  1684                           
  1685                           ; 4 bytes @ 0x2D
  1686  00002E                     	ds	1
  1687  00002F                     pad@w:
  1688                           	callstack 0
  1689                           
  1690                           ; 2 bytes @ 0x2E
  1691  00002F                     	ds	2
  1692  000031                     ??_dtoa:
  1693  000031                     ??_utoa:
  1694                           
  1695                           ; 1 bytes @ 0x30
  1696  000031                     	ds	1
  1697  000032                     ??___fldiv:
  1698  000032                     ??___flmul:
  1699                           
  1700                           ; 1 bytes @ 0x31
  1701  000032                     	ds	4
  1702  000036                     ??___fladd:
  1703  000036                     ??___flge:
  1704  000036                     ?_floorf:
  1705                           	callstack 0
  1706  000036                     floorf@x:
  1707                           	callstack 0
  1708                           
  1709                           ; 4 bytes @ 0x35
  1710  000036                     	ds	4
  1711  00003A                     
  1712                           ; 1 bytes @ 0x39
  1713 ;;
  1714 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1715 ;;
  1716 ;; *************** function _main *****************
  1717 ;; Defined at:
  1718 ;;		line 8 in file "main.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels required when called: 19
  1738 ;; This function calls:
  1739 ;;		_SYSTEM_Initialize
  1740 ;;		_TMR4_SetInterruptHandler
  1741 ;;		_loop
  1742 ;; This function is called by:
  1743 ;;		Startup code after reset
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text0
  1748  0062EC                     __ptext0:
  1749                           	callstack 0
  1750  0062EC                     _main:
  1751                           	callstack 12
  1752  0062EC                     
  1753                           ;main.c: 9:     SYSTEM_Initialize();
  1754  0062EC  EC94  F02D         	call	_SYSTEM_Initialize	;wreg free
  1755  0062F0                     
  1756                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1757  0062F0  8ED2               	bsf	210,7,c	;volatile
  1758  0062F2                     
  1759                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1760  0062F2  8CD2               	bsf	210,6,c	;volatile
  1761                           
  1762                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1763  0062F4  0E40               	movlw	low _TMR4_10msISR
  1764  0062F6  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1765  0062F8  0E64               	movlw	high _TMR4_10msISR
  1766  0062FA  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1767  0062FC  EC11  F032         	call	_TMR4_SetInterruptHandler	;wreg free
  1768  006300                     l9619:
  1769                           
  1770                           ;main.c: 15:         loop();
  1771  006300  EC8B  F023         	call	_loop	;wreg free
  1772  006304  EF80  F031         	goto	l9619
  1773  006308  EF57  F000         	goto	start
  1774  00630C                     __end_of_main:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _loop *****************
  1778 ;; Defined at:
  1779 ;;		line 19 in file "main.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 18
  1800 ;; This function calls:
  1801 ;;		___flge
  1802 ;;		___xxtofl
  1803 ;;		_calcMotorPow
  1804 ;;		_calcSpeed
  1805 ;;		_calcSteering
  1806 ;;		_checkBatt
  1807 ;;		_checkCurveCount
  1808 ;;		_getBatteryVoltage
  1809 ;;		_getCurve
  1810 ;;		_getReverse
  1811 ;;		_setMotor
  1812 ;;		_setSteering
  1813 ;;		_startAccell
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text1
  1820  004716                     __ptext1:
  1821                           	callstack 0
  1822  004716                     _loop:
  1823                           	callstack 12
  1824  004716                     
  1825                           ;main.c: 20:     setMotor(0);
  1826  004716  0E00               	movlw	0
  1827  004718  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1828  00471A  0E00               	movlw	0
  1829  00471C  6E18               	movwf	setMotor@motorPower^0,c
  1830  00471E  EC1C  F027         	call	_setMotor	;wreg free
  1831                           
  1832                           ;main.c: 21:     setSteering(0, Front);
  1833  004722  0E00               	movlw	0
  1834  004724  0100               	movlb	0	; () banked
  1835  004726  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1836  004728  0E00               	movlw	0
  1837  00472A  6F83               	movwf	setSteering@steering& (0+255),b
  1838  00472C  0E03               	movlw	3
  1839  00472E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1840  004730  ECF3  F01E         	call	_setSteering	;wreg free
  1841  004734                     l1232:
  1842  004734  B8CB               	btfsc	203,4,c	;volatile
  1843  004736  EF9F  F023         	goto	u10951
  1844  00473A  EFA1  F023         	goto	u10950
  1845  00473E                     u10951:
  1846  00473E  EF9A  F023         	goto	l1232
  1847  004742                     u10950:
  1848  004742                     l9573:
  1849  004742  0100               	movlb	0	; () banked
  1850  004744  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1851  004746  B4D8               	btfsc	status,2,c
  1852  004748  EFA8  F023         	goto	u10961
  1853  00474C  EFAA  F023         	goto	u10960
  1854  004750                     u10961:
  1855  004750  EFA1  F023         	goto	l9573
  1856  004754                     u10960:
  1857  004754                     
  1858                           ; BSR set to: 0
  1859                           ;main.c: 26:         cycle10ms = 0;
  1860  004754  0E00               	movlw	0
  1861  004756  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1862  004758                     
  1863                           ; BSR set to: 0
  1864                           ;main.c: 28:         getBatteryVoltage();
  1865  004758  ECDF  F031         	call	_getBatteryVoltage	;wreg free
  1866  00475C                     
  1867                           ;main.c: 29:     } while (BatteryVolt < ((7.4) * 409.6));
  1868  00475C  C12A  F01C         	movff	_BatteryVolt,___xxtofl@val
  1869  004760  C12B  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1870  004764  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1871  004766  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1872  004768  0E00               	movlw	0
  1873  00476A  ECEE  F01F         	call	___xxtofl
  1874  00476E  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1875  004772  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1876  004776  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1877  00477A  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1878  00477E  0EA4               	movlw	164
  1879  004780  0100               	movlb	0	; () banked
  1880  004782  6F71               	movwf	___flge@ff2& (0+255),b
  1881  004784  0E70               	movlw	112
  1882  004786  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1883  004788  0E3D               	movlw	61
  1884  00478A  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1885  00478C  0E45               	movlw	69
  1886  00478E  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1887  004790  EC28  F025         	call	___flge	;wreg free
  1888  004794  0100               	movlb	0	; () banked
  1889  004796  A0D8               	btfss	status,0,c
  1890  004798  EFD0  F023         	goto	u10971
  1891  00479C  EFD2  F023         	goto	u10970
  1892  0047A0                     u10971:
  1893  0047A0  EFA1  F023         	goto	l9573
  1894  0047A4                     u10970:
  1895  0047A4                     
  1896                           ; BSR set to: 0
  1897                           ;main.c: 31:     startAccell();
  1898  0047A4  ECE2  F02A         	call	_startAccell	;wreg free
  1899  0047A8                     
  1900                           ;main.c: 33:     oldDistLeft = distLeft;
  1901  0047A8  C0F5  F138         	movff	_distLeft,_oldDistLeft	;volatile
  1902  0047AC  C0F6  F139         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1903  0047B0                     
  1904                           ;main.c: 34:     oldDistRight = distRight;
  1905  0047B0  C0F3  F136         	movff	_distRight,_oldDistRight	;volatile
  1906  0047B4  C0F4  F137         	movff	_distRight+1,_oldDistRight+1	;volatile
  1907  0047B8                     
  1908                           ;main.c: 35:     cycle10ms = 0;
  1909  0047B8  0E00               	movlw	0
  1910  0047BA  0100               	movlb	0	; () banked
  1911  0047BC  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1912  0047BE                     l9589:
  1913  0047BE  0100               	movlb	0	; () banked
  1914  0047C0  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1915  0047C2  B4D8               	btfsc	status,2,c
  1916  0047C4  EFE6  F023         	goto	u10981
  1917  0047C8  EFE8  F023         	goto	u10980
  1918  0047CC                     u10981:
  1919  0047CC  EFDF  F023         	goto	l9589
  1920  0047D0                     u10980:
  1921  0047D0                     
  1922                           ; BSR set to: 0
  1923                           ;main.c: 38:         cycle10ms = 0;
  1924  0047D0  0E00               	movlw	0
  1925  0047D2  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1926  0047D4                     
  1927                           ; BSR set to: 0
  1928                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1929  0047D4  BACB               	btfsc	203,5,c	;volatile
  1930  0047D6  EFEF  F023         	goto	u10991
  1931  0047DA  EFF1  F023         	goto	u10990
  1932  0047DE                     u10991:
  1933  0047DE  EF03  F024         	goto	l9599
  1934  0047E2                     u10990:
  1935  0047E2                     
  1936                           ; BSR set to: 0
  1937                           ;main.c: 41:             setSpeed = 0;
  1938  0047E2  0E00               	movlw	0
  1939  0047E4  6FF0               	movwf	(_setSpeed+1)& (0+255),b
  1940  0047E6  0E00               	movlw	0
  1941  0047E8  6FEF               	movwf	_setSpeed& (0+255),b
  1942                           
  1943                           ;main.c: 42:             actMotorPow = 0;
  1944  0047EA  0E00               	movlw	0
  1945  0047EC  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
  1946  0047EE  0E00               	movlw	0
  1947  0047F0  6FEB               	movwf	_actMotorPow& (0+255),b
  1948  0047F2                     
  1949                           ; BSR set to: 0
  1950                           ;main.c: 43:             setSteering(0, Front);
  1951  0047F2  0E00               	movlw	0
  1952  0047F4  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1953  0047F6  0E00               	movlw	0
  1954  0047F8  6F83               	movwf	setSteering@steering& (0+255),b
  1955  0047FA  0E03               	movlw	3
  1956  0047FC  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1957  0047FE  ECF3  F01E         	call	_setSteering	;wreg free
  1958                           
  1959                           ;main.c: 44:             break;
  1960  004802  EF1D  F024         	goto	l1248
  1961  004806                     l9599:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 53:         if (checkBatt()) {
  1965  004806  ECC7  F02B         	call	_checkBatt	;wreg free
  1966  00480A  0900               	iorlw	0
  1967  00480C  B4D8               	btfsc	status,2,c
  1968  00480E  EF0B  F024         	goto	u11001
  1969  004812  EF0D  F024         	goto	u11000
  1970  004816                     u11001:
  1971  004816  EF0F  F024         	goto	l9603
  1972  00481A                     u11000:
  1973  00481A  EF1D  F024         	goto	l1248
  1974  00481E                     l9603:
  1975                           
  1976                           ;main.c: 57:         getCurve();
  1977  00481E  EC6A  F019         	call	_getCurve	;wreg free
  1978  004822                     
  1979                           ;main.c: 58:         getReverse();
  1980  004822  EC3E  F022         	call	_getReverse	;wreg free
  1981  004826                     
  1982                           ;main.c: 60:         calcSteering();
  1983  004826  ECBC  F01A         	call	_calcSteering	;wreg free
  1984  00482A                     
  1985                           ;main.c: 61:         calcSpeed();
  1986  00482A  ECD7  F01B         	call	_calcSpeed	;wreg free
  1987  00482E                     
  1988                           ;main.c: 62:         calcMotorPow();
  1989  00482E  ECE5  F022         	call	_calcMotorPow	;wreg free
  1990                           
  1991                           ;main.c: 64:         checkCurveCount();
  1992  004832  ECF5  F027         	call	_checkCurveCount	;wreg free
  1993  004836  EFDF  F023         	goto	l9589
  1994  00483A                     l1248:
  1995  00483A  0012               	return		;funcret
  1996  00483C                     __end_of_loop:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _startAccell *****************
  2000 ;; Defined at:
  2001 ;;		line 105 in file "main.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  i               2   16[BANK1 ] short 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;Total ram usage:        2 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 17
  2022 ;; This function calls:
  2023 ;;		_printf
  2024 ;;		_setMotor
  2025 ;;		_setSteering
  2026 ;; This function is called by:
  2027 ;;		_loop
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text2
  2032  0055C4                     __ptext2:
  2033                           	callstack 0
  2034  0055C4                     _startAccell:
  2035                           	callstack 12
  2036  0055C4                     
  2037                           ;main.c: 106:     setSteering(0, Front);
  2038  0055C4  0E00               	movlw	0
  2039  0055C6  0100               	movlb	0	; () banked
  2040  0055C8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2041  0055CA  0E00               	movlw	0
  2042  0055CC  6F83               	movwf	setSteering@steering& (0+255),b
  2043  0055CE  0E03               	movlw	3
  2044  0055D0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2045  0055D2  ECF3  F01E         	call	_setSteering	;wreg free
  2046  0055D6                     
  2047                           ;main.c: 107:     actMotorPow = (100) - (int16_t) ((240) / (20));
  2048  0055D6  0E00               	movlw	0
  2049  0055D8  0100               	movlb	0	; () banked
  2050  0055DA  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
  2051  0055DC  0E58               	movlw	88
  2052  0055DE  6FEB               	movwf	_actMotorPow& (0+255),b
  2053  0055E0                     
  2054                           ; BSR set to: 0
  2055                           ;main.c: 108:     for (int16_t i = 0; i <= (int16_t) ((20) - ((100) / (int16_t) ((240) /
      +                           (20)))); ++i) {
  2056  0055E0  0E00               	movlw	0
  2057  0055E2  0101               	movlb	1	; () banked
  2058  0055E4  6FB7               	movwf	(startAccell@i+1)& (0+255),b
  2059  0055E6  0E00               	movlw	0
  2060  0055E8  6FB6               	movwf	startAccell@i& (0+255),b
  2061  0055EA                     l9247:
  2062                           
  2063                           ; BSR set to: 1
  2064                           ;main.c: 109:         actMotorPow += (int16_t) ((240) / (20));
  2065  0055EA  0E0C               	movlw	12
  2066  0055EC  0100               	movlb	0	; () banked
  2067  0055EE  27EB               	addwf	_actMotorPow& (0+255),f,b
  2068  0055F0  0E00               	movlw	0
  2069  0055F2  23EC               	addwfc	(_actMotorPow+1)& (0+255),f,b
  2070  0055F4                     
  2071                           ; BSR set to: 0
  2072                           ;main.c: 110:         setMotor(actMotorPow);
  2073  0055F4  C0EB  F018         	movff	_actMotorPow,setMotor@motorPower
  2074  0055F8  C0EC  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2075  0055FC  EC1C  F027         	call	_setMotor	;wreg free
  2076  005600                     
  2077                           ;main.c: 111:         cycle10ms = 0;
  2078  005600  0E00               	movlw	0
  2079  005602  0100               	movlb	0	; () banked
  2080  005604  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2081  005606                     l9253:
  2082                           
  2083                           ; BSR set to: 0
  2084  005606  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  2085  005608  B4D8               	btfsc	status,2,c
  2086  00560A  EF09  F02B         	goto	u10461
  2087  00560E  EF0B  F02B         	goto	u10460
  2088  005612                     u10461:
  2089  005612  EF03  F02B         	goto	l9253
  2090  005616                     u10460:
  2091  005616                     
  2092                           ; BSR set to: 0
  2093                           ;main.c: 113:     }
  2094  005616  0101               	movlb	1	; () banked
  2095  005618  4BB6               	infsnz	startAccell@i& (0+255),f,b
  2096  00561A  2BB7               	incf	(startAccell@i+1)& (0+255),f,b
  2097  00561C                     
  2098                           ; BSR set to: 1
  2099  00561C  BFB7               	btfsc	(startAccell@i+1)& (0+255),7,b
  2100  00561E  EF1A  F02B         	goto	u10471
  2101  005622  51B7               	movf	(startAccell@i+1)& (0+255),w,b
  2102  005624  E109               	bnz	u10470
  2103  005626  0E0D               	movlw	13
  2104  005628  5DB6               	subwf	startAccell@i& (0+255),w,b
  2105  00562A  A0D8               	btfss	status,0,c
  2106  00562C  EF1A  F02B         	goto	u10471
  2107  005630  EF1C  F02B         	goto	u10470
  2108  005634                     u10471:
  2109  005634  EFF5  F02A         	goto	l9247
  2110  005638                     u10470:
  2111  005638                     
  2112                           ; BSR set to: 1
  2113                           ;main.c: 114:     printf("starAccelPower: %d\n", actMotorPow);
  2114  005638  0E48               	movlw	low STR_1
  2115  00563A  6FAE               	movwf	printf@fmt& (0+255),b
  2116  00563C  0E10               	movlw	high STR_1
  2117  00563E  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2118  005640  C0EB  F1B0         	movff	_actMotorPow,?_printf+2
  2119  005644  C0EC  F1B1         	movff	_actMotorPow+1,?_printf+3
  2120  005648  EC2A  F031         	call	_printf	;wreg free
  2121  00564C                     
  2122                           ;main.c: 116:     cycle10ms = 0;
  2123  00564C  0E00               	movlw	0
  2124  00564E  0100               	movlb	0	; () banked
  2125  005650  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2126  005652                     l9263:
  2127                           
  2128                           ; BSR set to: 0
  2129  005652  0E12               	movlw	18
  2130  005654  65FA               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2131  005656  EF2F  F02B         	goto	u10481
  2132  00565A  EF31  F02B         	goto	u10480
  2133  00565E                     u10481:
  2134  00565E  EF29  F02B         	goto	l9263
  2135  005662                     u10480:
  2136  005662                     
  2137                           ; BSR set to: 0
  2138  005662  0012               	return		;funcret
  2139  005664                     __end_of_startAccell:
  2140                           	callstack 0
  2141                           
  2142 ;; *************** function _getReverse *****************
  2143 ;; Defined at:
  2144 ;;		line 208 in file "main.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 17
  2165 ;; This function calls:
  2166 ;;		_printf
  2167 ;; This function is called by:
  2168 ;;		_loop
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text3
  2173  00447C                     __ptext3:
  2174                           	callstack 0
  2175  00447C                     _getReverse:
  2176                           	callstack 12
  2177  00447C                     
  2178                           ;main.c: 209:     if (distFront < (15)) {
  2179  00447C  0100               	movlb	0	; () banked
  2180  00447E  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2181  004480  E107               	bnz	u10651
  2182  004482  0E0F               	movlw	15
  2183  004484  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2184  004486  B0D8               	btfsc	status,0,c
  2185  004488  EF48  F022         	goto	u10651
  2186  00448C  EF4A  F022         	goto	u10650
  2187  004490                     u10651:
  2188  004490  EF4F  F022         	goto	l9359
  2189  004494                     u10650:
  2190  004494                     
  2191                           ; BSR set to: 0
  2192                           ;main.c: 210:         ++reverseCount;
  2193  004494  0101               	movlb	1	; () banked
  2194  004496  4B3A               	infsnz	_reverseCount& (0+255),f,b
  2195  004498  2B3B               	incf	(_reverseCount+1)& (0+255),f,b
  2196                           
  2197                           ;main.c: 211:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2198  00449A  EF66  F022         	goto	l9365
  2199  00449E                     l9359:
  2200                           
  2201                           ; BSR set to: 0
  2202  00449E  0E02               	movlw	2
  2203  0044A0  19FC               	xorwf	_driveMode& (0+255),w,b
  2204  0044A2  B4D8               	btfsc	status,2,c
  2205  0044A4  EF56  F022         	goto	u10661
  2206  0044A8  EF58  F022         	goto	u10660
  2207  0044AC                     u10661:
  2208  0044AC  EF66  F022         	goto	l9365
  2209  0044B0                     u10660:
  2210  0044B0                     
  2211                           ; BSR set to: 0
  2212  0044B0  0E03               	movlw	3
  2213  0044B2  19FC               	xorwf	_driveMode& (0+255),w,b
  2214  0044B4  B4D8               	btfsc	status,2,c
  2215  0044B6  EF5F  F022         	goto	u10671
  2216  0044BA  EF61  F022         	goto	u10670
  2217  0044BE                     u10671:
  2218  0044BE  EF66  F022         	goto	l9365
  2219  0044C2                     u10670:
  2220  0044C2                     
  2221                           ; BSR set to: 0
  2222                           ;main.c: 212:         reverseCount = 0;
  2223  0044C2  0E00               	movlw	0
  2224  0044C4  0101               	movlb	1	; () banked
  2225  0044C6  6F3B               	movwf	(_reverseCount+1)& (0+255),b
  2226  0044C8  0E00               	movlw	0
  2227  0044CA  6F3A               	movwf	_reverseCount& (0+255),b
  2228  0044CC                     l9365:
  2229                           
  2230                           ;main.c: 215:     if (reverseCount > (50)) {
  2231  0044CC  0101               	movlb	1	; () banked
  2232  0044CE  513B               	movf	(_reverseCount+1)& (0+255),w,b
  2233  0044D0  E109               	bnz	u10680
  2234  0044D2  0E33               	movlw	51
  2235  0044D4  5D3A               	subwf	_reverseCount& (0+255),w,b
  2236  0044D6  A0D8               	btfss	status,0,c
  2237  0044D8  EF70  F022         	goto	u10681
  2238  0044DC  EF72  F022         	goto	u10680
  2239  0044E0                     u10681:
  2240  0044E0  EFE4  F022         	goto	l1319
  2241  0044E4                     u10680:
  2242  0044E4                     
  2243                           ; BSR set to: 1
  2244                           ;main.c: 216:         ++reverseTime;
  2245  0044E4  4B2C               	infsnz	_reverseTime& (0+255),f,b
  2246  0044E6  2B2D               	incf	(_reverseTime+1)& (0+255),f,b
  2247  0044E8                     
  2248                           ; BSR set to: 1
  2249                           ;main.c: 218:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2250  0044E8  0E02               	movlw	2
  2251  0044EA  0100               	movlb	0	; () banked
  2252  0044EC  19FC               	xorwf	_driveMode& (0+255),w,b
  2253  0044EE  B4D8               	btfsc	status,2,c
  2254  0044F0  EF7C  F022         	goto	u10691
  2255  0044F4  EF7E  F022         	goto	u10690
  2256  0044F8                     u10691:
  2257  0044F8  EFA8  F022         	goto	l9383
  2258  0044FC                     u10690:
  2259  0044FC                     
  2260                           ; BSR set to: 0
  2261  0044FC  0E03               	movlw	3
  2262  0044FE  19FC               	xorwf	_driveMode& (0+255),w,b
  2263  004500  B4D8               	btfsc	status,2,c
  2264  004502  EF85  F022         	goto	u10701
  2265  004506  EF87  F022         	goto	u10700
  2266  00450A                     u10701:
  2267  00450A  EFA8  F022         	goto	l9383
  2268  00450E                     u10700:
  2269  00450E                     
  2270                           ; BSR set to: 0
  2271                           ;main.c: 219:             if (distLeft > distRight) {
  2272  00450E  51F5               	movf	_distLeft& (0+255),w,b	;volatile
  2273  004510  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2274  004512  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2275  004514  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2276  004516  B0D8               	btfsc	status,0,c
  2277  004518  EF90  F022         	goto	u10711
  2278  00451C  EF92  F022         	goto	u10710
  2279  004520                     u10711:
  2280  004520  EF9E  F022         	goto	l9379
  2281  004524                     u10710:
  2282  004524                     
  2283                           ; BSR set to: 0
  2284                           ;main.c: 220:                 printf("ReverseRigth\n");
  2285  004524  0E7A               	movlw	low STR_6
  2286  004526  0101               	movlb	1	; () banked
  2287  004528  6FAE               	movwf	printf@fmt& (0+255),b
  2288  00452A  0E10               	movlw	high STR_6
  2289  00452C  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2290  00452E  EC2A  F031         	call	_printf	;wreg free
  2291  004532                     
  2292                           ;main.c: 221:                 driveMode = ReverseRight;
  2293  004532  0E02               	movlw	2
  2294  004534  0100               	movlb	0	; () banked
  2295  004536  6FFC               	movwf	_driveMode& (0+255),b
  2296                           
  2297                           ;main.c: 222:             } else {
  2298  004538  EFA8  F022         	goto	l9383
  2299  00453C                     l9379:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 223:                 printf("ReverseLeft\n");
  2303  00453C  0E88               	movlw	low STR_7
  2304  00453E  0101               	movlb	1	; () banked
  2305  004540  6FAE               	movwf	printf@fmt& (0+255),b
  2306  004542  0E10               	movlw	high STR_7
  2307  004544  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2308  004546  EC2A  F031         	call	_printf	;wreg free
  2309  00454A                     
  2310                           ;main.c: 224:                 driveMode = ReverseLeft;
  2311  00454A  0E03               	movlw	3
  2312  00454C  0100               	movlb	0	; () banked
  2313  00454E  6FFC               	movwf	_driveMode& (0+255),b
  2314  004550                     l9383:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;main.c: 228:         if (distFront > (35) || reverseTime > (300)) {
  2318  004550  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2319  004552  E107               	bnz	u10721
  2320  004554  0E24               	movlw	36
  2321  004556  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2322  004558  B0D8               	btfsc	status,0,c
  2323  00455A  EFB1  F022         	goto	u10721
  2324  00455E  EFB3  F022         	goto	u10720
  2325  004562                     u10721:
  2326  004562  EFC2  F022         	goto	l9387
  2327  004566                     u10720:
  2328  004566                     
  2329                           ; BSR set to: 0
  2330  004566  0101               	movlb	1	; () banked
  2331  004568  BF2D               	btfsc	(_reverseTime+1)& (0+255),7,b
  2332  00456A  EFC0  F022         	goto	u10731
  2333  00456E  0E2D               	movlw	45
  2334  004570  5D2C               	subwf	_reverseTime& (0+255),w,b
  2335  004572  0E01               	movlw	1
  2336  004574  592D               	subwfb	(_reverseTime+1)& (0+255),w,b
  2337  004576  A0D8               	btfss	status,0,c
  2338  004578  EFC0  F022         	goto	u10731
  2339  00457C  EFC2  F022         	goto	u10730
  2340  004580                     u10731:
  2341  004580  EFE4  F022         	goto	l1319
  2342  004584                     u10730:
  2343  004584                     l9387:
  2344                           
  2345                           ;main.c: 229:             printf("Stop Reverse\n");
  2346  004584  0E6C               	movlw	low STR_8
  2347  004586  0101               	movlb	1	; () banked
  2348  004588  6FAE               	movwf	printf@fmt& (0+255),b
  2349  00458A  0E10               	movlw	high STR_8
  2350  00458C  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2351  00458E  EC2A  F031         	call	_printf	;wreg free
  2352  004592                     
  2353                           ;main.c: 230:             if (distLeft > distRight) {
  2354  004592  0100               	movlb	0	; () banked
  2355  004594  51F5               	movf	_distLeft& (0+255),w,b	;volatile
  2356  004596  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2357  004598  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2358  00459A  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2359  00459C  B0D8               	btfsc	status,0,c
  2360  00459E  EFD3  F022         	goto	u10741
  2361  0045A2  EFD5  F022         	goto	u10740
  2362  0045A6                     u10741:
  2363  0045A6  EFD9  F022         	goto	l9393
  2364  0045AA                     u10740:
  2365  0045AA                     
  2366                           ; BSR set to: 0
  2367                           ;main.c: 231:                 driveMode = CurveLeft;
  2368  0045AA  0E04               	movlw	4
  2369  0045AC  6FFC               	movwf	_driveMode& (0+255),b
  2370                           
  2371                           ;main.c: 232:             } else {
  2372  0045AE  EFDB  F022         	goto	l1318
  2373  0045B2                     l9393:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;main.c: 233:                 driveMode = CurveRight;
  2377  0045B2  0E05               	movlw	5
  2378  0045B4  6FFC               	movwf	_driveMode& (0+255),b
  2379  0045B6                     l1318:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;main.c: 236:             reverseCount = 0;
  2383  0045B6  0E00               	movlw	0
  2384  0045B8  0101               	movlb	1	; () banked
  2385  0045BA  6F3B               	movwf	(_reverseCount+1)& (0+255),b
  2386  0045BC  0E00               	movlw	0
  2387  0045BE  6F3A               	movwf	_reverseCount& (0+255),b
  2388                           
  2389                           ;main.c: 237:             reverseTime = 0;
  2390  0045C0  0E00               	movlw	0
  2391  0045C2  6F2D               	movwf	(_reverseTime+1)& (0+255),b
  2392  0045C4  0E00               	movlw	0
  2393  0045C6  6F2C               	movwf	_reverseTime& (0+255),b
  2394  0045C8                     l1319:
  2395                           
  2396                           ; BSR set to: 1
  2397  0045C8  0012               	return		;funcret
  2398  0045CA                     __end_of_getReverse:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _getCurve *****************
  2402 ;; Defined at:
  2403 ;;		line 133 in file "main.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;		None
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  ratio           4   23[BANK0 ] float 
  2408 ;;  delta           2    0        short 
  2409 ;;  deltaRight      2   29[BANK0 ] short 
  2410 ;;  deltaLeft       2   27[BANK0 ] short 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:       10 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 9
  2427 ;; This function calls:
  2428 ;;		___flge
  2429 ;;		___lwdiv
  2430 ;;		___xxtofl
  2431 ;; This function is called by:
  2432 ;;		_loop
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text4
  2437  0032D4                     __ptext4:
  2438                           	callstack 0
  2439  0032D4                     _getCurve:
  2440                           	callstack 20
  2441  0032D4                     
  2442                           ;main.c: 134:     int16_t deltaLeft;;main.c: 135:     int16_t deltaRight;;main.c: 137:  
      +                             switch (curveMode) {
  2443  0032D4  EF95  F01A         	goto	l9347
  2444  0032D8                     l9289:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;main.c: 139:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2448  0032D8  0101               	movlb	1	; () banked
  2449  0032DA  5138               	movf	_oldDistLeft& (0+255),w,b
  2450  0032DC  0100               	movlb	0	; () banked
  2451  0032DE  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2452  0032E0  6F7B               	movwf	getCurve@deltaLeft& (0+255),b
  2453  0032E2  0101               	movlb	1	; () banked
  2454  0032E4  5139               	movf	(_oldDistLeft+1)& (0+255),w,b
  2455  0032E6  0100               	movlb	0	; () banked
  2456  0032E8  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2457  0032EA  6F7C               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2458                           
  2459                           ;main.c: 140:             deltaRight = (int16_t) (distRight - oldDistRight);
  2460  0032EC  0101               	movlb	1	; () banked
  2461  0032EE  5136               	movf	_oldDistRight& (0+255),w,b
  2462  0032F0  0100               	movlb	0	; () banked
  2463  0032F2  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2464  0032F4  6F7D               	movwf	getCurve@deltaRight& (0+255),b
  2465  0032F6  0101               	movlb	1	; () banked
  2466  0032F8  5137               	movf	(_oldDistRight+1)& (0+255),w,b
  2467  0032FA  0100               	movlb	0	; () banked
  2468  0032FC  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2469  0032FE  6F7E               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2470                           
  2471                           ;main.c: 143:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2472  003300  BF7C               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2473  003302  EF8C  F019         	goto	u10511
  2474  003306  517C               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2475  003308  E109               	bnz	u10510
  2476  00330A  0E1F               	movlw	31
  2477  00330C  5D7B               	subwf	getCurve@deltaLeft& (0+255),w,b
  2478  00330E  A0D8               	btfss	status,0,c
  2479  003310  EF8C  F019         	goto	u10511
  2480  003314  EF8E  F019         	goto	u10510
  2481  003318                     u10511:
  2482  003318  EFB2  F019         	goto	l9299
  2483  00331C                     u10510:
  2484  00331C                     
  2485                           ; BSR set to: 0
  2486  00331C  BF7C               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2487  00331E  EF9C  F019         	goto	u10520
  2488  003322  0E2C               	movlw	44
  2489  003324  5D7B               	subwf	getCurve@deltaLeft& (0+255),w,b
  2490  003326  0E01               	movlw	1
  2491  003328  597C               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2492  00332A  B0D8               	btfsc	status,0,c
  2493  00332C  EF9A  F019         	goto	u10521
  2494  003330  EF9C  F019         	goto	u10520
  2495  003334                     u10521:
  2496  003334  EFB2  F019         	goto	l9299
  2497  003338                     u10520:
  2498  003338                     
  2499                           ; BSR set to: 0
  2500  003338  0101               	movlb	1	; () banked
  2501  00333A  5139               	movf	(_oldDistLeft+1)& (0+255),w,b
  2502  00333C  E107               	bnz	u10531
  2503  00333E  0E7D               	movlw	125
  2504  003340  5D38               	subwf	_oldDistLeft& (0+255),w,b
  2505  003342  B0D8               	btfsc	status,0,c
  2506  003344  EFA6  F019         	goto	u10531
  2507  003348  EFA8  F019         	goto	u10530
  2508  00334C                     u10531:
  2509  00334C  EFB2  F019         	goto	l9299
  2510  003350                     u10530:
  2511  003350                     
  2512                           ; BSR set to: 1
  2513                           ;main.c: 144:                 delay = 0;
  2514  003350  0E00               	movlw	0
  2515  003352  0100               	movlb	0	; () banked
  2516  003354  6FF7               	movwf	_delay& (0+255),b
  2517                           
  2518                           ;main.c: 145:                 curveMode = BeforeCurve;
  2519  003356  0E01               	movlw	1
  2520  003358  6FFB               	movwf	_curveMode& (0+255),b
  2521                           
  2522                           ;main.c: 146:                 driveMode = CurveLeft;
  2523  00335A  0E04               	movlw	4
  2524  00335C  6FFC               	movwf	_driveMode& (0+255),b
  2525  00335E                     
  2526                           ; BSR set to: 0
  2527                           ;main.c: 147:                 ++curveLeftCount;
  2528  00335E  2BF9               	incf	_curveLeftCount& (0+255),f,b
  2529                           
  2530                           ;main.c: 150:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2531  003360  EFB3  F01A         	goto	l1288
  2532  003364                     l9299:
  2533  003364  0100               	movlb	0	; () banked
  2534  003366  BF7E               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2535  003368  EFBF  F019         	goto	u10541
  2536  00336C  517E               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2537  00336E  E109               	bnz	u10540
  2538  003370  0E1F               	movlw	31
  2539  003372  5D7D               	subwf	getCurve@deltaRight& (0+255),w,b
  2540  003374  A0D8               	btfss	status,0,c
  2541  003376  EFBF  F019         	goto	u10541
  2542  00337A  EFC1  F019         	goto	u10540
  2543  00337E                     u10541:
  2544  00337E  EFB3  F01A         	goto	l1288
  2545  003382                     u10540:
  2546  003382                     
  2547                           ; BSR set to: 0
  2548  003382  BF7E               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2549  003384  EFCF  F019         	goto	u10550
  2550  003388  0E2C               	movlw	44
  2551  00338A  5D7D               	subwf	getCurve@deltaRight& (0+255),w,b
  2552  00338C  0E01               	movlw	1
  2553  00338E  597E               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2554  003390  B0D8               	btfsc	status,0,c
  2555  003392  EFCD  F019         	goto	u10551
  2556  003396  EFCF  F019         	goto	u10550
  2557  00339A                     u10551:
  2558  00339A  EFB3  F01A         	goto	l1288
  2559  00339E                     u10550:
  2560  00339E                     
  2561                           ; BSR set to: 0
  2562  00339E  0101               	movlb	1	; () banked
  2563  0033A0  5137               	movf	(_oldDistRight+1)& (0+255),w,b
  2564  0033A2  E107               	bnz	u10561
  2565  0033A4  0E7D               	movlw	125
  2566  0033A6  5D36               	subwf	_oldDistRight& (0+255),w,b
  2567  0033A8  B0D8               	btfsc	status,0,c
  2568  0033AA  EFD9  F019         	goto	u10561
  2569  0033AE  EFDB  F019         	goto	u10560
  2570  0033B2                     u10561:
  2571  0033B2  EFB3  F01A         	goto	l1288
  2572  0033B6                     u10560:
  2573  0033B6                     
  2574                           ; BSR set to: 1
  2575                           ;main.c: 151:                 delay = 0;
  2576  0033B6  0E00               	movlw	0
  2577  0033B8  0100               	movlb	0	; () banked
  2578  0033BA  6FF7               	movwf	_delay& (0+255),b
  2579                           
  2580                           ;main.c: 152:                 curveMode = BeforeCurve;
  2581  0033BC  0E01               	movlw	1
  2582  0033BE  6FFB               	movwf	_curveMode& (0+255),b
  2583                           
  2584                           ;main.c: 153:                 driveMode = CurveRight;
  2585  0033C0  0E05               	movlw	5
  2586  0033C2  6FFC               	movwf	_driveMode& (0+255),b
  2587  0033C4                     
  2588                           ; BSR set to: 0
  2589                           ;main.c: 154:                 ++curveRightCount;
  2590  0033C4  2BF8               	incf	_curveRightCount& (0+255),f,b
  2591  0033C6  EFB3  F01A         	goto	l1288
  2592  0033CA                     l1286:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;main.c: 160:             break;
  2596  0033CA  EFB3  F01A         	goto	l1288
  2597  0033CE                     l9309:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;main.c: 162:             if (delay >= (15)) {
  2601  0033CE  0E0E               	movlw	14
  2602  0033D0  65F7               	cpfsgt	_delay& (0+255),b
  2603  0033D2  EFED  F019         	goto	u10571
  2604  0033D6  EFEF  F019         	goto	u10570
  2605  0033DA                     u10571:
  2606  0033DA  EFF5  F019         	goto	l9313
  2607  0033DE                     u10570:
  2608  0033DE                     
  2609                           ; BSR set to: 0
  2610                           ;main.c: 163:                 delay = 0;
  2611  0033DE  0E00               	movlw	0
  2612  0033E0  6FF7               	movwf	_delay& (0+255),b
  2613                           
  2614                           ;main.c: 164:                 curveMode = InCurve;
  2615  0033E2  0E02               	movlw	2
  2616  0033E4  6FFB               	movwf	_curveMode& (0+255),b
  2617                           
  2618                           ;main.c: 166:             } else {
  2619  0033E6  EFB3  F01A         	goto	l1288
  2620  0033EA                     l9313:
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;main.c: 167:                 ++delay;
  2624  0033EA  2BF7               	incf	_delay& (0+255),f,b
  2625  0033EC  EFB3  F01A         	goto	l1288
  2626  0033F0                     l9315:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;main.c: 171:             if (delay >= (20)) {
  2630  0033F0  0E13               	movlw	19
  2631  0033F2  65F7               	cpfsgt	_delay& (0+255),b
  2632  0033F4  EFFE  F019         	goto	u10581
  2633  0033F8  EF00  F01A         	goto	u10580
  2634  0033FC                     u10581:
  2635  0033FC  EFF5  F019         	goto	l9313
  2636  003400                     u10580:
  2637  003400                     
  2638                           ; BSR set to: 0
  2639                           ;main.c: 172:                 if (distLeft < (45) || distRight < (45) || distFront > (30
      +                          0)) {
  2640  003400  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2641  003402  E109               	bnz	u10590
  2642  003404  0E2D               	movlw	45
  2643  003406  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2644  003408  A0D8               	btfss	status,0,c
  2645  00340A  EF09  F01A         	goto	u10591
  2646  00340E  EF0B  F01A         	goto	u10590
  2647  003412                     u10591:
  2648  003412  EF21  F01A         	goto	l9323
  2649  003416                     u10590:
  2650  003416                     
  2651                           ; BSR set to: 0
  2652  003416  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2653  003418  E109               	bnz	u10600
  2654  00341A  0E2D               	movlw	45
  2655  00341C  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2656  00341E  A0D8               	btfss	status,0,c
  2657  003420  EF14  F01A         	goto	u10601
  2658  003424  EF16  F01A         	goto	u10600
  2659  003428                     u10601:
  2660  003428  EF21  F01A         	goto	l9323
  2661  00342C                     u10600:
  2662  00342C                     
  2663                           ; BSR set to: 0
  2664  00342C  0E2D               	movlw	45
  2665  00342E  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2666  003430  0E01               	movlw	1
  2667  003432  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2668  003434  A0D8               	btfss	status,0,c
  2669  003436  EF1F  F01A         	goto	u10611
  2670  00343A  EF21  F01A         	goto	u10610
  2671  00343E                     u10611:
  2672  00343E  EFB3  F01A         	goto	l1288
  2673  003442                     u10610:
  2674  003442                     l9323:
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;main.c: 173:                     delay = 0;
  2678  003442  0E00               	movlw	0
  2679  003444  6FF7               	movwf	_delay& (0+255),b
  2680                           
  2681                           ;main.c: 174:                     curveMode = AfterCurve;
  2682  003446  0E03               	movlw	3
  2683  003448  6FFB               	movwf	_curveMode& (0+255),b
  2684  00344A                     
  2685                           ; BSR set to: 0
  2686                           ;main.c: 177:                     float ratio = (distLeft / distRight);
  2687  00344A  C0F3  F016         	movff	_distRight,___lwdiv@divisor	;volatile
  2688  00344E  C0F4  F017         	movff	_distRight+1,___lwdiv@divisor+1	;volatile
  2689  003452  C0F5  F014         	movff	_distLeft,___lwdiv@dividend	;volatile
  2690  003456  C0F6  F015         	movff	_distLeft+1,___lwdiv@dividend+1	;volatile
  2691  00345A  EC10  F02C         	call	___lwdiv	;wreg free
  2692  00345E  C014  F01C         	movff	?___lwdiv,___xxtofl@val
  2693  003462  C015  F01D         	movff	?___lwdiv+1,___xxtofl@val+1
  2694  003466  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2695  003468  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2696  00346A  0E00               	movlw	0
  2697  00346C  ECEE  F01F         	call	___xxtofl
  2698  003470  C01C  F077         	movff	?___xxtofl,getCurve@ratio
  2699  003474  C01D  F078         	movff	?___xxtofl+1,getCurve@ratio+1
  2700  003478  C01E  F079         	movff	?___xxtofl+2,getCurve@ratio+2
  2701  00347C  C01F  F07A         	movff	?___xxtofl+3,getCurve@ratio+3
  2702  003480                     
  2703                           ;main.c: 179:                     if(ratio >= (2)){
  2704  003480  C077  F06D         	movff	getCurve@ratio,___flge@ff1
  2705  003484  C078  F06E         	movff	getCurve@ratio+1,___flge@ff1+1
  2706  003488  C079  F06F         	movff	getCurve@ratio+2,___flge@ff1+2
  2707  00348C  C07A  F070         	movff	getCurve@ratio+3,___flge@ff1+3
  2708  003490  0E00               	movlw	0
  2709  003492  0100               	movlb	0	; () banked
  2710  003494  6F71               	movwf	___flge@ff2& (0+255),b
  2711  003496  0E00               	movlw	0
  2712  003498  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2713  00349A  0E00               	movlw	0
  2714  00349C  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2715  00349E  0E40               	movlw	64
  2716  0034A0  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2717  0034A2  EC28  F025         	call	___flge	;wreg free
  2718  0034A6  0100               	movlb	0	; () banked
  2719  0034A8  A0D8               	btfss	status,0,c
  2720  0034AA  EF59  F01A         	goto	u10621
  2721  0034AE  EF5B  F01A         	goto	u10620
  2722  0034B2                     u10621:
  2723  0034B2  EF64  F01A         	goto	l9333
  2724  0034B6                     u10620:
  2725  0034B6                     
  2726                           ; BSR set to: 0
  2727                           ;main.c: 180:                         driveMode = FollowRight;
  2728  0034B6  0E07               	movlw	7
  2729  0034B8  6FFC               	movwf	_driveMode& (0+255),b
  2730                           
  2731                           ;main.c: 181:                         followCount = 0;
  2732  0034BA  0E00               	movlw	0
  2733  0034BC  0101               	movlb	1	; () banked
  2734  0034BE  6F33               	movwf	(_followCount+1)& (0+255),b
  2735  0034C0  0E00               	movlw	0
  2736  0034C2  6F32               	movwf	_followCount& (0+255),b
  2737                           
  2738                           ;main.c: 182:                     } else if(ratio <= (1 / (2))){
  2739  0034C4  EFB3  F01A         	goto	l1288
  2740  0034C8                     l9333:
  2741                           
  2742                           ; BSR set to: 0
  2743  0034C8  0E00               	movlw	0
  2744  0034CA  6F6D               	movwf	___flge@ff1& (0+255),b
  2745  0034CC  0E00               	movlw	0
  2746  0034CE  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  2747  0034D0  0E00               	movlw	0
  2748  0034D2  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  2749  0034D4  0E00               	movlw	0
  2750  0034D6  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  2751  0034D8  C077  F071         	movff	getCurve@ratio,___flge@ff2
  2752  0034DC  C078  F072         	movff	getCurve@ratio+1,___flge@ff2+1
  2753  0034E0  C079  F073         	movff	getCurve@ratio+2,___flge@ff2+2
  2754  0034E4  C07A  F074         	movff	getCurve@ratio+3,___flge@ff2+3
  2755  0034E8  EC28  F025         	call	___flge	;wreg free
  2756  0034EC  0100               	movlb	0	; () banked
  2757  0034EE  A0D8               	btfss	status,0,c
  2758  0034F0  EF7C  F01A         	goto	u10631
  2759  0034F4  EF7E  F01A         	goto	u10630
  2760  0034F8                     u10631:
  2761  0034F8  EFE5  F019         	goto	l1286
  2762  0034FC                     u10630:
  2763  0034FC                     
  2764                           ; BSR set to: 0
  2765                           ;main.c: 183:                         driveMode = FollowLeft;
  2766  0034FC  0E06               	movlw	6
  2767  0034FE  6FFC               	movwf	_driveMode& (0+255),b
  2768                           
  2769                           ;main.c: 184:                         followCount = 0;
  2770  003500  0E00               	movlw	0
  2771  003502  0101               	movlb	1	; () banked
  2772  003504  6F33               	movwf	(_followCount+1)& (0+255),b
  2773  003506  0E00               	movlw	0
  2774  003508  6F32               	movwf	_followCount& (0+255),b
  2775  00350A  EFB3  F01A         	goto	l1288
  2776  00350E                     l9339:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;main.c: 195:             if (delay >= (1)) {
  2780  00350E  51F7               	movf	_delay& (0+255),w,b
  2781  003510  B4D8               	btfsc	status,2,c
  2782  003512  EF8D  F01A         	goto	u10641
  2783  003516  EF8F  F01A         	goto	u10640
  2784  00351A                     u10641:
  2785  00351A  EFF5  F019         	goto	l9313
  2786  00351E                     u10640:
  2787  00351E                     
  2788                           ; BSR set to: 0
  2789                           ;main.c: 196:                 delay = 0;
  2790  00351E  0E00               	movlw	0
  2791  003520  6FF7               	movwf	_delay& (0+255),b
  2792                           
  2793                           ;main.c: 197:                 curveMode = OutCurve;
  2794  003522  0E00               	movlw	0
  2795  003524  6FFB               	movwf	_curveMode& (0+255),b
  2796                           
  2797                           ;main.c: 199:             } else {
  2798  003526  EFB3  F01A         	goto	l1288
  2799  00352A                     l9347:
  2800  00352A  0100               	movlb	0	; () banked
  2801  00352C  51FB               	movf	_curveMode& (0+255),w,b
  2802  00352E  6F75               	movwf	??_getCurve& (0+255),b
  2803  003530  6B76               	clrf	(??_getCurve+1)& (0+255),b
  2804                           
  2805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2806                           ; Switch size 1, requested type "simple"
  2807                           ; Number of cases is 1, Range of values is 0 to 0
  2808                           ; switch strategies available:
  2809                           ; Name         Instructions Cycles
  2810                           ; simple_byte            4     3 (average)
  2811                           ;	Chosen strategy is simple_byte
  2812  003532  5176               	movf	(??_getCurve+1)& (0+255),w,b
  2813  003534  0A00               	xorlw	0	; case 0
  2814  003536  B4D8               	btfsc	status,2,c
  2815  003538  EFA0  F01A         	goto	l9761
  2816  00353C  EFB3  F01A         	goto	l1288
  2817  003540                     l9761:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ; Switch size 1, requested type "simple"
  2821                           ; Number of cases is 4, Range of values is 0 to 3
  2822                           ; switch strategies available:
  2823                           ; Name         Instructions Cycles
  2824                           ; simple_byte           13     7 (average)
  2825                           ;	Chosen strategy is simple_byte
  2826  003540  5175               	movf	??_getCurve& (0+255),w,b
  2827  003542  0A00               	xorlw	0	; case 0
  2828  003544  B4D8               	btfsc	status,2,c
  2829  003546  EF6C  F019         	goto	l9289
  2830  00354A  0A01               	xorlw	1	; case 1
  2831  00354C  B4D8               	btfsc	status,2,c
  2832  00354E  EFE7  F019         	goto	l9309
  2833  003552  0A03               	xorlw	3	; case 2
  2834  003554  B4D8               	btfsc	status,2,c
  2835  003556  EFF8  F019         	goto	l9315
  2836  00355A  0A01               	xorlw	1	; case 3
  2837  00355C  B4D8               	btfsc	status,2,c
  2838  00355E  EF87  F01A         	goto	l9339
  2839  003562  EFB3  F01A         	goto	l1288
  2840  003566                     l1288:
  2841                           
  2842                           ;main.c: 204:     oldDistLeft = distLeft;
  2843  003566  C0F5  F138         	movff	_distLeft,_oldDistLeft	;volatile
  2844  00356A  C0F6  F139         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2845                           
  2846                           ;main.c: 205:     oldDistRight = distRight;
  2847  00356E  C0F3  F136         	movff	_distRight,_oldDistRight	;volatile
  2848  003572  C0F4  F137         	movff	_distRight+1,_oldDistRight+1	;volatile
  2849  003576  0012               	return		;funcret
  2850  003578                     __end_of_getCurve:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function _checkCurveCount *****************
  2854 ;; Defined at:
  2855 ;;		line 120 in file "main.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  roundTime       4   16[BANK1 ] float 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;Total ram usage:        4 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 17
  2876 ;; This function calls:
  2877 ;;		___lwdiv
  2878 ;;		___xxtofl
  2879 ;;		_printf
  2880 ;; This function is called by:
  2881 ;;		_loop
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text5
  2886  004FEA                     __ptext5:
  2887                           	callstack 0
  2888  004FEA                     _checkCurveCount:
  2889                           	callstack 12
  2890  004FEA                     
  2891                           ;main.c: 121:     if (distFront > 480 && roundTimeCount > 500 ) {
  2892  004FEA  0EE1               	movlw	225
  2893  004FEC  0100               	movlb	0	; () banked
  2894  004FEE  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2895  004FF0  0E01               	movlw	1
  2896  004FF2  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2897  004FF4  A0D8               	btfss	status,0,c
  2898  004FF6  EFFF  F027         	goto	u10931
  2899  004FFA  EF01  F028         	goto	u10930
  2900  004FFE                     u10931:
  2901  004FFE  EF5A  F028         	goto	l1280
  2902  005002                     u10930:
  2903  005002                     
  2904                           ; BSR set to: 0
  2905  005002  0EF5               	movlw	245
  2906  005004  5DF1               	subwf	_roundTimeCount& (0+255),w,b	;volatile
  2907  005006  0E01               	movlw	1
  2908  005008  59F2               	subwfb	(_roundTimeCount+1)& (0+255),w,b	;volatile
  2909  00500A  A0D8               	btfss	status,0,c
  2910  00500C  EF0A  F028         	goto	u10941
  2911  005010  EF0C  F028         	goto	u10940
  2912  005014                     u10941:
  2913  005014  EF5A  F028         	goto	l1280
  2914  005018                     u10940:
  2915  005018                     
  2916                           ; BSR set to: 0
  2917                           ;main.c: 122:         float roundTime = roundTimeCount / 100;
  2918  005018  0E00               	movlw	0
  2919  00501A  6E17               	movwf	(___lwdiv@divisor+1)^0,c
  2920  00501C  0E64               	movlw	100
  2921  00501E  6E16               	movwf	___lwdiv@divisor^0,c
  2922  005020  C0F1  F014         	movff	_roundTimeCount,___lwdiv@dividend	;volatile
  2923  005024  C0F2  F015         	movff	_roundTimeCount+1,___lwdiv@dividend+1	;volatile
  2924  005028  EC10  F02C         	call	___lwdiv	;wreg free
  2925  00502C  C014  F01C         	movff	?___lwdiv,___xxtofl@val
  2926  005030  C015  F01D         	movff	?___lwdiv+1,___xxtofl@val+1
  2927  005034  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2928  005036  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2929  005038  0E00               	movlw	0
  2930  00503A  ECEE  F01F         	call	___xxtofl
  2931  00503E  C01C  F1B6         	movff	?___xxtofl,checkCurveCount@roundTime
  2932  005042  C01D  F1B7         	movff	?___xxtofl+1,checkCurveCount@roundTime+1
  2933  005046  C01E  F1B8         	movff	?___xxtofl+2,checkCurveCount@roundTime+2
  2934  00504A  C01F  F1B9         	movff	?___xxtofl+3,checkCurveCount@roundTime+3
  2935  00504E                     
  2936                           ;main.c: 123:         printf("Reset CurveCount!  |   ");
  2937  00504E  0E1B               	movlw	low STR_2
  2938  005050  0101               	movlb	1	; () banked
  2939  005052  6FAE               	movwf	printf@fmt& (0+255),b
  2940  005054  0E10               	movlw	high STR_2
  2941  005056  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2942  005058  EC2A  F031         	call	_printf	;wreg free
  2943  00505C                     
  2944                           ;main.c: 124:         printf("CurveLeftCount: %u   |   ", curveLeftCount);
  2945  00505C  0E01               	movlw	low STR_3
  2946  00505E  0101               	movlb	1	; () banked
  2947  005060  6FAE               	movwf	printf@fmt& (0+255),b
  2948  005062  0E10               	movlw	high STR_3
  2949  005064  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2950  005066  C0F9  F1B0         	movff	_curveLeftCount,?_printf+2
  2951  00506A  6BB1               	clrf	(?_printf+3)& (0+255),b
  2952  00506C  EC2A  F031         	call	_printf	;wreg free
  2953  005070                     
  2954                           ;main.c: 125:         printf("CurveRightCount: %u\n", curveRightCount);
  2955  005070  0E33               	movlw	low STR_4
  2956  005072  0101               	movlb	1	; () banked
  2957  005074  6FAE               	movwf	printf@fmt& (0+255),b
  2958  005076  0E10               	movlw	high STR_4
  2959  005078  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2960  00507A  C0F8  F1B0         	movff	_curveRightCount,?_printf+2
  2961  00507E  6BB1               	clrf	(?_printf+3)& (0+255),b
  2962  005080  EC2A  F031         	call	_printf	;wreg free
  2963  005084                     
  2964                           ;main.c: 126:         printf("RoundTime: %f\n\n", roundTime);
  2965  005084  0E5C               	movlw	low STR_5
  2966  005086  0101               	movlb	1	; () banked
  2967  005088  6FAE               	movwf	printf@fmt& (0+255),b
  2968  00508A  0E10               	movlw	high STR_5
  2969  00508C  6FAF               	movwf	(printf@fmt+1)& (0+255),b
  2970  00508E  C1B6  F1B0         	movff	checkCurveCount@roundTime,?_printf+2
  2971  005092  C1B7  F1B1         	movff	checkCurveCount@roundTime+1,?_printf+3
  2972  005096  C1B8  F1B2         	movff	checkCurveCount@roundTime+2,?_printf+4
  2973  00509A  C1B9  F1B3         	movff	checkCurveCount@roundTime+3,?_printf+5
  2974  00509E  EC2A  F031         	call	_printf	;wreg free
  2975  0050A2                     
  2976                           ;main.c: 127:         roundTimeCount = 0;
  2977  0050A2  0E00               	movlw	0
  2978  0050A4  0100               	movlb	0	; () banked
  2979  0050A6  6FF2               	movwf	(_roundTimeCount+1)& (0+255),b	;volatile
  2980  0050A8  0E00               	movlw	0
  2981  0050AA  6FF1               	movwf	_roundTimeCount& (0+255),b	;volatile
  2982  0050AC                     
  2983                           ; BSR set to: 0
  2984                           ;main.c: 128:         curveRightCount = 0;
  2985  0050AC  0E00               	movlw	0
  2986  0050AE  6FF8               	movwf	_curveRightCount& (0+255),b
  2987  0050B0                     
  2988                           ; BSR set to: 0
  2989                           ;main.c: 129:         curveLeftCount = 0;
  2990  0050B0  0E00               	movlw	0
  2991  0050B2  6FF9               	movwf	_curveLeftCount& (0+255),b
  2992  0050B4                     l1280:
  2993                           
  2994                           ; BSR set to: 0
  2995  0050B4  0012               	return		;funcret
  2996  0050B6                     __end_of_checkCurveCount:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _printf *****************
  3000 ;; Defined at:
  3001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  3004 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  3005 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  ap              2   14[BANK1 ] PTR void [1]
  3008 ;;		 -> ?_printf(2), 
  3009 ;;  ret             2    0        int 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2    8[BANK1 ] int 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        8 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 16
  3026 ;; This function calls:
  3027 ;;		_vfprintf
  3028 ;; This function is called by:
  3029 ;;		_startAccell
  3030 ;;		_checkCurveCount
  3031 ;;		_getReverse
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text6
  3036  006254                     __ptext6:
  3037                           	callstack 0
  3038  006254                     _printf:
  3039                           	callstack 12
  3040  006254  0EB0               	movlw	low (?_printf+2)
  3041  006256  0101               	movlb	1	; () banked
  3042  006258  6FB4               	movwf	printf@ap& (0+255),b
  3043  00625A  0E01               	movlw	high (?_printf+2)
  3044  00625C  6FB5               	movwf	(printf@ap+1)& (0+255),b
  3045  00625E                     
  3046                           ; BSR set to: 1
  3047  00625E  0E00               	movlw	0
  3048  006260  6FA6               	movwf	vfprintf@fp& (0+255),b
  3049  006262  0E00               	movlw	0
  3050  006264  6FA7               	movwf	(vfprintf@fp+1)& (0+255),b
  3051  006266  C1AE  F1A8         	movff	printf@fmt,vfprintf@fmt
  3052  00626A  C1AF  F1A9         	movff	printf@fmt+1,vfprintf@fmt+1
  3053  00626E  0EB4               	movlw	low printf@ap
  3054  006270  6FAA               	movwf	vfprintf@ap& (0+255),b
  3055  006272  0E01               	movlw	high printf@ap
  3056  006274  6FAB               	movwf	(vfprintf@ap+1)& (0+255),b
  3057  006276  EC4A  F02C         	call	_vfprintf	;wreg free
  3058  00627A  0012               	return		;funcret
  3059  00627C                     __end_of_printf:
  3060                           	callstack 0
  3061                           
  3062 ;; *************** function _vfprintf *****************
  3063 ;; Defined at:
  3064 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3067 ;;		 -> NULL(0), 
  3068 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3069 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  3070 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  3071 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3072 ;;		 -> printf@ap(2), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  3075 ;;		 -> STR_8(14), STR_7(13), STR_6(14), STR_5(16), 
  3076 ;;		 -> STR_4(21), STR_3(26), STR_2(24), STR_1(20), 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  2    0[BANK1 ] int 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3086 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;Total ram usage:        8 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 15
  3093 ;; This function calls:
  3094 ;;		_vfpfcnvrt
  3095 ;; This function is called by:
  3096 ;;		_printf
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text7
  3101  005894                     __ptext7:
  3102                           	callstack 0
  3103  005894                     _vfprintf:
  3104                           	callstack 12
  3105  005894                     
  3106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3107  005894  C1A8  F1AC         	movff	vfprintf@fmt,vfprintf@cfmt
  3108  005898  C1A9  F1AD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3109  00589C                     
  3110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3111  00589C  0E00               	movlw	0
  3112  00589E  0101               	movlb	1	; () banked
  3113  0058A0  6F29               	movwf	(_nout+1)& (0+255),b
  3114  0058A2  0E00               	movlw	0
  3115  0058A4  6F28               	movwf	_nout& (0+255),b
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3118  0058A6  EF6C  F02C         	goto	l9143
  3119  0058AA                     l9141:
  3120                           
  3121                           ; BSR set to: 1
  3122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3123  0058AA  C1A6  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3124  0058AE  C1A7  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3125  0058B2  0EAC               	movlw	low vfprintf@cfmt
  3126  0058B4  0100               	movlb	0	; () banked
  3127  0058B6  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3128  0058B8  0E01               	movlw	high vfprintf@cfmt
  3129  0058BA  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3130  0058BC  C1AA  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3131  0058C0  C1AB  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3132  0058C4  ECAC  F00E         	call	_vfpfcnvrt	;wreg free
  3133  0058C8  0100               	movlb	0	; () banked
  3134  0058CA  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3135  0058CC  0101               	movlb	1	; () banked
  3136  0058CE  2728               	addwf	_nout& (0+255),f,b
  3137  0058D0  0100               	movlb	0	; () banked
  3138  0058D2  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3139  0058D4  0101               	movlb	1	; () banked
  3140  0058D6  2329               	addwfc	(_nout+1)& (0+255),f,b
  3141  0058D8                     l9143:
  3142                           
  3143                           ; BSR set to: 1
  3144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3145  0058D8  0060  F6B3  FFF6   	movff	vfprintf@cfmt,tblptrl
  3146  0058DE  0060  F6B7  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3147  0058E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3148  0058E4  6AF8               	clrf	tblptru,c
  3149  0058E6                     	endif
  3150  0058E6                     	if	0	;tblptru may be non-zero
  3151  0058E6                     	endif
  3152  0058E6  0008               	tblrd		*
  3153  0058E8  50F5               	movf	tablat,w,c
  3154  0058EA  0900               	iorlw	0
  3155  0058EC  A4D8               	btfss	status,2,c
  3156  0058EE  EF7B  F02C         	goto	u10341
  3157  0058F2  EF7D  F02C         	goto	u10340
  3158  0058F6                     u10341:
  3159  0058F6  EF55  F02C         	goto	l9141
  3160  0058FA                     u10340:
  3161  0058FA                     
  3162                           ; BSR set to: 1
  3163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3164  0058FA  C128  F1A6         	movff	_nout,?_vfprintf
  3165  0058FE  C129  F1A7         	movff	_nout+1,?_vfprintf+1
  3166  005902                     
  3167                           ; BSR set to: 1
  3168  005902  0012               	return		;funcret
  3169  005904                     __end_of_vfprintf:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _vfpfcnvrt *****************
  3173 ;; Defined at:
  3174 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3177 ;;		 -> NULL(0), 
  3178 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3179 ;;		 -> vfprintf@cfmt(2), 
  3180 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3181 ;;		 -> printf@ap(2), 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  llu             8  121[BANK0 ] unsigned long long 
  3184 ;;  ll              8  113[BANK0 ] long long 
  3185 ;;  f               4  131[BANK0 ] long long 
  3186 ;;  ct              3  135[BANK0 ] unsigned char [3]
  3187 ;;  vp              3    0        PTR void 
  3188 ;;  cp              3    0        PTR unsigned char 
  3189 ;;  i               2    0        int 
  3190 ;;  done            2    0        int 
  3191 ;;  c               1  138[BANK0 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  2  103[BANK0 ] int 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3201 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;Total ram usage:       36 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 14
  3208 ;; This function calls:
  3209 ;;		_dtoa
  3210 ;;		_efgtoa
  3211 ;;		_fputc
  3212 ;;		_isupper
  3213 ;;		_strncmp
  3214 ;;		_tolower
  3215 ;;		_utoa
  3216 ;; This function is called by:
  3217 ;;		_vfprintf
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text8
  3222  001D58                     __ptext8:
  3223                           	callstack 0
  3224  001D58                     _vfpfcnvrt:
  3225                           	callstack 12
  3226  001D58                     
  3227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3228  001D58  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3229  001D5E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  001D64  006F FF7B FFF6     	movff	postinc2,tblptrl
  3231  001D6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3232  001D70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3233  001D70  6AF8               	clrf	tblptru,c
  3234  001D72                     	endif
  3235  001D72                     	if	0	;tblptru may be non-zero
  3236  001D72                     	endif
  3237  001D72  0008               	tblrd		*
  3238  001D74  50F5               	movf	tablat,w,c
  3239  001D76  0A25               	xorlw	37
  3240  001D78  A4D8               	btfss	status,2,c
  3241  001D7A  EFC1  F00E         	goto	u10081
  3242  001D7E  EFC3  F00E         	goto	u10080
  3243  001D82                     u10081:
  3244  001D82  EF7D  F011         	goto	l9075
  3245  001D86                     u10080:
  3246  001D86                     
  3247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3248  001D86  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3249  001D8C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3250  001D92  2ADE               	incf	postinc2,f,c
  3251  001D94  0E00               	movlw	0
  3252  001D96  22DD               	addwfc	postdec2,f,c
  3253  001D98                     
  3254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3255  001D98  0E00               	movlw	0
  3256  001D9A  6E3B               	movwf	(_width+1)^0,c
  3257  001D9C  0E00               	movlw	0
  3258  001D9E  6E3A               	movwf	_width^0,c
  3259  001DA0  C03A  F03E         	movff	_width,_flags
  3260  001DA4  C03B  F03F         	movff	_width+1,_flags+1
  3261  001DA8                     
  3262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3263  001DA8  683C               	setf	_prec^0,c
  3264  001DAA  683D               	setf	(_prec+1)^0,c
  3265  001DAC                     
  3266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3267  001DAC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3268  001DB2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3269  001DB8  006F FF7B FFF6     	movff	postinc2,tblptrl
  3270  001DBE  006F FF77 FFF7     	movff	postdec2,tblptrh
  3271  001DC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3272  001DC4  6AF8               	clrf	tblptru,c
  3273  001DC6                     	endif
  3274  001DC6                     	if	0	;tblptru may be non-zero
  3275  001DC6                     	endif
  3276  001DC6  0008               	tblrd		*
  3277  001DC8  50F5               	movf	tablat,w,c
  3278  001DCA  6E1A               	movwf	tolower@c^0,c
  3279  001DCC  6A1B               	clrf	(tolower@c+1)^0,c
  3280  001DCE  ECB7  F02C         	call	_tolower	;wreg free
  3281  001DD2  501A               	movf	?_tolower^0,w,c
  3282  001DD4  0100               	movlb	0	; () banked
  3283  001DD6  6FE7               	movwf	vfpfcnvrt@ct& (0+255),b
  3284  001DD8                     
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3287  001DD8  51E7               	movf	vfpfcnvrt@ct& (0+255),w,b
  3288  001DDA  B4D8               	btfsc	status,2,c
  3289  001DDC  EFF2  F00E         	goto	u10091
  3290  001DE0  EFF4  F00E         	goto	u10090
  3291  001DE4                     u10091:
  3292  001DE4  EF3C  F00F         	goto	l9013
  3293  001DE8                     u10090:
  3294  001DE8                     
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3297  001DE8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3298  001DEE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3299  001DF4  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3300  001DFA  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3301  001E00  0E01               	movlw	1
  3302  001E02  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3303  001E04  0E00               	movlw	0
  3304  001E06  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3305  001E08  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3306  001E0E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3307  001E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3308  001E14  6AF8               	clrf	tblptru,c
  3309  001E16                     	endif
  3310  001E16                     	if	0	;tblptru may be non-zero
  3311  001E16                     	endif
  3312  001E16  0008               	tblrd		*
  3313  001E18  50F5               	movf	tablat,w,c
  3314  001E1A  6E1A               	movwf	tolower@c^0,c
  3315  001E1C  6A1B               	clrf	(tolower@c+1)^0,c
  3316  001E1E  ECB7  F02C         	call	_tolower	;wreg free
  3317  001E22  501A               	movf	?_tolower^0,w,c
  3318  001E24  0100               	movlb	0	; () banked
  3319  001E26  6FE8               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3320  001E28                     
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3323  001E28  51E8               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3324  001E2A  B4D8               	btfsc	status,2,c
  3325  001E2C  EF1A  F00F         	goto	u10101
  3326  001E30  EF1C  F00F         	goto	u10100
  3327  001E34                     u10101:
  3328  001E34  EF3C  F00F         	goto	l9013
  3329  001E38                     u10100:
  3330  001E38                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3333  001E38  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3334  001E3E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3335  001E44  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3336  001E4A  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3337  001E50  0E02               	movlw	2
  3338  001E52  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3339  001E54  0E00               	movlw	0
  3340  001E56  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3341  001E58  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3342  001E5E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3343  001E64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3344  001E64  6AF8               	clrf	tblptru,c
  3345  001E66                     	endif
  3346  001E66                     	if	0	;tblptru may be non-zero
  3347  001E66                     	endif
  3348  001E66  0008               	tblrd		*
  3349  001E68  50F5               	movf	tablat,w,c
  3350  001E6A  6E1A               	movwf	tolower@c^0,c
  3351  001E6C  6A1B               	clrf	(tolower@c+1)^0,c
  3352  001E6E  ECB7  F02C         	call	_tolower	;wreg free
  3353  001E72  501A               	movf	?_tolower^0,w,c
  3354  001E74  0100               	movlb	0	; () banked
  3355  001E76  6FE9               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3356  001E78                     l9013:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3360  001E78  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3361  001E7E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3362  001E84  006F FF7B FFF6     	movff	postinc2,tblptrl
  3363  001E8A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3364  001E90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3365  001E90  6AF8               	clrf	tblptru,c
  3366  001E92                     	endif
  3367  001E92                     	if	0	;tblptru may be non-zero
  3368  001E92                     	endif
  3369  001E92  0008               	tblrd		*
  3370  001E94  50F5               	movf	tablat,w,c
  3371  001E96  0A64               	xorlw	100
  3372  001E98  B4D8               	btfsc	status,2,c
  3373  001E9A  EF51  F00F         	goto	u10111
  3374  001E9E  EF53  F00F         	goto	u10110
  3375  001EA2                     u10111:
  3376  001EA2  EF6A  F00F         	goto	l9017
  3377  001EA6                     u10110:
  3378  001EA6                     
  3379                           ; BSR set to: 0
  3380  001EA6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3381  001EAC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3382  001EB2  006F FF7B FFF6     	movff	postinc2,tblptrl
  3383  001EB8  006F FF77 FFF7     	movff	postdec2,tblptrh
  3384  001EBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3385  001EBE  6AF8               	clrf	tblptru,c
  3386  001EC0                     	endif
  3387  001EC0                     	if	0	;tblptru may be non-zero
  3388  001EC0                     	endif
  3389  001EC0  0008               	tblrd		*
  3390  001EC2  50F5               	movf	tablat,w,c
  3391  001EC4  0A69               	xorlw	105
  3392  001EC6  A4D8               	btfss	status,2,c
  3393  001EC8  EF68  F00F         	goto	u10121
  3394  001ECC  EF6A  F00F         	goto	u10120
  3395  001ED0                     u10121:
  3396  001ED0  EFB4  F00F         	goto	l9023
  3397  001ED4                     u10120:
  3398  001ED4                     l9017:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3402  001ED4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3403  001EDA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3404  001EE0  2ADE               	incf	postinc2,f,c
  3405  001EE2  0E00               	movlw	0
  3406  001EE4  22DD               	addwfc	postdec2,f,c
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3409  001EE6  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3410  001EEC  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3411  001EF2  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3412  001EF8  0E02               	movlw	2
  3413  001EFA  26DE               	addwf	postinc2,f,c
  3414  001EFC  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3415  001F02  0E00               	movlw	0
  3416  001F04  22DD               	addwfc	postdec2,f,c
  3417  001F06  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3418  001F0C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3419  001F12  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3420  001F18  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3421  001F1E  0E00               	movlw	0
  3422  001F20  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3423  001F22  0EFF               	movlw	-1
  3424  001F24  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3425  001F26  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3426  001F28  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3427  001F2A  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3428  001F2C  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3429  001F2E  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3430  001F30                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3433  001F30  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3434  001F34  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3435  001F38  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3436  001F3C  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3437  001F40  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3438  001F44  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3439  001F48  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3440  001F4C  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3441  001F50  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3442  001F54  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3443  001F58  ECF7  F017         	call	_dtoa	;wreg free
  3444  001F5C  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3445  001F60  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3446  001F64  EF9F  F011         	goto	l2276
  3447  001F68                     l9023:
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3451  001F68  0E66               	movlw	102
  3452  001F6A  19E7               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3453  001F6C  A4D8               	btfss	status,2,c
  3454  001F6E  EFBB  F00F         	goto	u10131
  3455  001F72  EFBD  F00F         	goto	u10130
  3456  001F76                     u10131:
  3457  001F76  EF0F  F010         	goto	l9035
  3458  001F7A                     u10130:
  3459  001F7A                     
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3462  001F7A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3463  001F80  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3464  001F86  006F FF7B FFF6     	movff	postinc2,tblptrl
  3465  001F8C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3466  001F92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3467  001F92  6AF8               	clrf	tblptru,c
  3468  001F94                     	endif
  3469  001F94                     	if	0	;tblptru may be non-zero
  3470  001F94                     	endif
  3471  001F94  0008               	tblrd		*
  3472  001F96  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3473  001F9C                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3476  001F9C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3477  001FA2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3478  001FA8  2ADE               	incf	postinc2,f,c
  3479  001FAA  0E00               	movlw	0
  3480  001FAC  22DD               	addwfc	postdec2,f,c
  3481  001FAE                     
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3484  001FAE  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3485  001FB4  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3486  001FBA  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3487  001FC0  0E04               	movlw	4
  3488  001FC2  26DE               	addwf	postinc2,f,c
  3489  001FC4  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3490  001FCA  0E00               	movlw	0
  3491  001FCC  22DD               	addwfc	postdec2,f,c
  3492  001FCE  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3493  001FD4  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3494  001FDA  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3495  001FE0  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3496  001FE6  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3497  001FEC  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3498  001FF2                     
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3501  001FF2  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3502  001FF6  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3503  001FFA  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3504  001FFE  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3505  002002  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3506  002006  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3507  00200A  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3508  00200E  EC55  F008         	call	_efgtoa	;wreg free
  3509  002012  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3510  002016  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3511  00201A  EF9F  F011         	goto	l2276
  3512  00201E                     l9035:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3516  00201E  0EE7               	movlw	low vfpfcnvrt@ct
  3517  002020  6E14               	movwf	strncmp@_l^0,c
  3518  002022  0E00               	movlw	high vfpfcnvrt@ct
  3519  002024  6E15               	movwf	(strncmp@_l+1)^0,c
  3520  002026  0EA5               	movlw	low STR_17
  3521  002028  6E16               	movwf	strncmp@_r^0,c
  3522  00202A  0E10               	movlw	high STR_17
  3523  00202C  6E17               	movwf	(strncmp@_r+1)^0,c
  3524  00202E  0E00               	movlw	0
  3525  002030  6E19               	movwf	(strncmp@n+1)^0,c
  3526  002032  0E02               	movlw	2
  3527  002034  6E18               	movwf	strncmp@n^0,c
  3528  002036  EC2A  F026         	call	_strncmp	;wreg free
  3529  00203A  5014               	movf	?_strncmp^0,w,c
  3530  00203C  1015               	iorwf	(?_strncmp+1)^0,w,c
  3531  00203E  A4D8               	btfss	status,2,c
  3532  002040  EF24  F010         	goto	u10141
  3533  002044  EF26  F010         	goto	u10140
  3534  002048                     u10141:
  3535  002048  EFD9  F010         	goto	l9051
  3536  00204C                     u10140:
  3537  00204C                     
  3538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3539  00204C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3540  002052  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3541  002058  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3542  00205E  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3543  002064  0E01               	movlw	1
  3544  002066  0100               	movlb	0	; () banked
  3545  002068  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3546  00206A  0E00               	movlw	0
  3547  00206C  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3548  00206E  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3549  002074  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3550  00207A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3551  00207A  6AF8               	clrf	tblptru,c
  3552  00207C                     	endif
  3553  00207C                     	if	0	;tblptru may be non-zero
  3554  00207C                     	endif
  3555  00207C  0008               	tblrd		*
  3556  00207E  006F FFD4  F0EA    	movff	tablat,vfpfcnvrt@c
  3557  002084  0EBF               	movlw	191
  3558  002086  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3559  002088  0EFF               	movlw	255
  3560  00208A  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3561  00208C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3562  002092  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3563  002098  006F FF7B FFF6     	movff	postinc2,tblptrl
  3564  00209E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3565  0020A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3566  0020A4  6AF8               	clrf	tblptru,c
  3567  0020A6                     	endif
  3568  0020A6                     	if	0	;tblptru may be non-zero
  3569  0020A6                     	endif
  3570  0020A6  0008               	tblrd		*
  3571  0020A8  50F5               	movf	tablat,w,c
  3572  0020AA  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3573  0020AC  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3574  0020AE  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3575  0020B0  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3576  0020B2  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3577  0020B4  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3578  0020B6  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3579  0020B8  E10A               	bnz	u10150
  3580  0020BA  0E1A               	movlw	26
  3581  0020BC  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3582  0020BE  A0D8               	btfss	status,0,c
  3583  0020C0  EF64  F010         	goto	u10151
  3584  0020C4  EF67  F010         	goto	u10150
  3585  0020C8                     u10151:
  3586  0020C8  0E01               	movlw	1
  3587  0020CA  EF68  F010         	goto	u10160
  3588  0020CE                     u10150:
  3589  0020CE  0E00               	movlw	0
  3590  0020D0                     u10160:
  3591  0020D0  6FE1               	movwf	_vfpfcnvrt$3603& (0+255),b
  3592  0020D2  6BE2               	clrf	(_vfpfcnvrt$3603+1)& (0+255),b
  3593  0020D4                     
  3594                           ; BSR set to: 0
  3595  0020D4  51E1               	movf	_vfpfcnvrt$3603& (0+255),w,b
  3596  0020D6  11E2               	iorwf	(_vfpfcnvrt$3603+1)& (0+255),w,b
  3597  0020D8  B4D8               	btfsc	status,2,c
  3598  0020DA  EF71  F010         	goto	u10171
  3599  0020DE  EF73  F010         	goto	u10170
  3600  0020E2                     u10171:
  3601  0020E2  EF97  F010         	goto	l9045
  3602  0020E6                     u10170:
  3603  0020E6                     
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3606  0020E6  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3607  0020EC  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3608  0020F2  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3609  0020F8  0E04               	movlw	4
  3610  0020FA  26DE               	addwf	postinc2,f,c
  3611  0020FC  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3612  002102  0E00               	movlw	0
  3613  002104  22DD               	addwfc	postdec2,f,c
  3614  002106  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3615  00210C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3616  002112  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3617  002118  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3618  00211E  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3619  002124  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3620                           
  3621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3622  00212A  EFB9  F010         	goto	l2284
  3623  00212E                     l9045:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3627  00212E  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3628  002134  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3629  00213A  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3630  002140  0E04               	movlw	4
  3631  002142  26DE               	addwf	postinc2,f,c
  3632  002144  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3633  00214A  0E00               	movlw	0
  3634  00214C  22DD               	addwfc	postdec2,f,c
  3635  00214E  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3636  002154  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3637  00215A  006F FF78  F0E3    	movff	postinc2,vfpfcnvrt@f
  3638  002160  006F FF78  F0E4    	movff	postinc2,vfpfcnvrt@f+1
  3639  002166  006F FF78  F0E5    	movff	postinc2,vfpfcnvrt@f+2
  3640  00216C  006F FF78  F0E6    	movff	postinc2,vfpfcnvrt@f+3
  3641  002172                     l2284:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3645  002172  0E02               	movlw	2
  3646  002174  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3647  00217A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3648  002180  26DE               	addwf	postinc2,f,c
  3649  002182  0E00               	movlw	0
  3650  002184  22DD               	addwfc	postdec2,f,c
  3651  002186                     
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3654  002186  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3655  00218A  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3656  00218E  C0E3  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3657  002192  C0E4  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3658  002196  C0E5  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3659  00219A  C0E6  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3660  00219E  C0EA  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3661  0021A2  EC55  F008         	call	_efgtoa	;wreg free
  3662  0021A6  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3663  0021AA  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3664  0021AE  EF9F  F011         	goto	l2276
  3665  0021B2                     l9051:
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3668  0021B2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3669  0021B8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3670  0021BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  3671  0021C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  3672  0021CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3673  0021CA  6AF8               	clrf	tblptru,c
  3674  0021CC                     	endif
  3675  0021CC                     	if	0	;tblptru may be non-zero
  3676  0021CC                     	endif
  3677  0021CC  0008               	tblrd		*
  3678  0021CE  50F5               	movf	tablat,w,c
  3679  0021D0  0A75               	xorlw	117
  3680  0021D2  A4D8               	btfss	status,2,c
  3681  0021D4  EFEE  F010         	goto	u10181
  3682  0021D8  EFF0  F010         	goto	u10180
  3683  0021DC                     u10181:
  3684  0021DC  EF3C  F011         	goto	l9059
  3685  0021E0                     u10180:
  3686  0021E0                     
  3687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3688  0021E0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3689  0021E6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3690  0021EC  2ADE               	incf	postinc2,f,c
  3691  0021EE  0E00               	movlw	0
  3692  0021F0  22DD               	addwfc	postdec2,f,c
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3695  0021F2  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3696  0021F8  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3697  0021FE  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3698  002204  0E02               	movlw	2
  3699  002206  26DE               	addwf	postinc2,f,c
  3700  002208  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3701  00220E  0E00               	movlw	0
  3702  002210  22DD               	addwfc	postdec2,f,c
  3703  002212  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3704  002218  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3705  00221E  006F FF78  F0CF    	movff	postinc2,??_vfpfcnvrt+2
  3706  002224  006F FF74  F0D0    	movff	postdec2,??_vfpfcnvrt+3
  3707  00222A  C0CF  F0D9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3708  00222E  C0D0  F0DA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3709  002232  0100               	movlb	0	; () banked
  3710  002234  6BDB               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3711  002236  6BDC               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3712  002238  6BDD               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3713  00223A  6BDE               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3714  00223C  6BDF               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3715  00223E  6BE0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3716  002240                     
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3719  002240  C0C7  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3720  002244  C0C8  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3721  002248  C0D9  F062         	movff	vfpfcnvrt@llu,utoa@d
  3722  00224C  C0DA  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3723  002250  C0DB  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3724  002254  C0DC  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3725  002258  C0DD  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3726  00225C  C0DE  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3727  002260  C0DF  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3728  002264  C0E0  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3729  002268  ECEF  F01D         	call	_utoa	;wreg free
  3730  00226C  C060  F0C7         	movff	?_utoa,?_vfpfcnvrt
  3731  002270  C061  F0C8         	movff	?_utoa+1,?_vfpfcnvrt+1
  3732  002274  EF9F  F011         	goto	l2276
  3733  002278                     l9059:
  3734                           
  3735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3736  002278  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3737  00227E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3738  002284  006F FF7B FFF6     	movff	postinc2,tblptrl
  3739  00228A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3740  002290                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3741  002290  6AF8               	clrf	tblptru,c
  3742  002292                     	endif
  3743  002292                     	if	0	;tblptru may be non-zero
  3744  002292                     	endif
  3745  002292  0008               	tblrd		*
  3746  002294  50F5               	movf	tablat,w,c
  3747  002296  0A25               	xorlw	37
  3748  002298  A4D8               	btfss	status,2,c
  3749  00229A  EF51  F011         	goto	u10191
  3750  00229E  EF53  F011         	goto	u10190
  3751  0022A2                     u10191:
  3752  0022A2  EF6D  F011         	goto	l9069
  3753  0022A6                     u10190:
  3754  0022A6                     
  3755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3756  0022A6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3757  0022AC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3758  0022B2  2ADE               	incf	postinc2,f,c
  3759  0022B4  0E00               	movlw	0
  3760  0022B6  22DD               	addwfc	postdec2,f,c
  3761  0022B8                     
  3762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3763  0022B8  0E00               	movlw	0
  3764  0022BA  6E17               	movwf	(fputc@c+1)^0,c
  3765  0022BC  0E25               	movlw	37
  3766  0022BE  6E16               	movwf	fputc@c^0,c
  3767  0022C0  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3768  0022C4  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3769  0022C8  EC32  F02B         	call	_fputc	;wreg free
  3770  0022CC                     l9065:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3773  0022CC  0E00               	movlw	0
  3774  0022CE  0100               	movlb	0	; () banked
  3775  0022D0  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3776  0022D2  0E01               	movlw	1
  3777  0022D4  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3778  0022D6  EF9F  F011         	goto	l2276
  3779  0022DA                     l9069:
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3782  0022DA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3783  0022E0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3784  0022E6  2ADE               	incf	postinc2,f,c
  3785  0022E8  0E00               	movlw	0
  3786  0022EA  22DD               	addwfc	postdec2,f,c
  3787  0022EC                     
  3788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3789  0022EC  0E00               	movlw	0
  3790  0022EE  0100               	movlb	0	; () banked
  3791  0022F0  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3792  0022F2  0E00               	movlw	0
  3793  0022F4  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3794  0022F6  EF9F  F011         	goto	l2276
  3795  0022FA                     l9075:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3798  0022FA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3799  002300  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3800  002306  006F FF7B FFF6     	movff	postinc2,tblptrl
  3801  00230C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3802  002312                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3803  002312  6AF8               	clrf	tblptru,c
  3804  002314                     	endif
  3805  002314                     	if	0	;tblptru may be non-zero
  3806  002314                     	endif
  3807  002314  0008               	tblrd		*
  3808  002316  50F5               	movf	tablat,w,c
  3809  002318  6E16               	movwf	fputc@c^0,c
  3810  00231A  6A17               	clrf	(fputc@c+1)^0,c
  3811  00231C  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3812  002320  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3813  002324  EC32  F02B         	call	_fputc	;wreg free
  3814  002328                     
  3815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3816  002328  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3817  00232E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3818  002334  2ADE               	incf	postinc2,f,c
  3819  002336  0E00               	movlw	0
  3820  002338  22DD               	addwfc	postdec2,f,c
  3821  00233A  EF66  F011         	goto	l9065
  3822  00233E                     l2276:
  3823  00233E  0012               	return		;funcret
  3824  002340                     __end_of_vfpfcnvrt:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _utoa *****************
  3828 ;; Defined at:
  3829 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3832 ;;		 -> NULL(0), 
  3833 ;;  d               8    2[BANK0 ] unsigned long long 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  n               8   14[BANK0 ] unsigned long long 
  3836 ;;  i               2   22[BANK0 ] int 
  3837 ;;  w               2   12[BANK0 ] int 
  3838 ;;  p               2   10[BANK0 ] int 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2    0[BANK0 ] int 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3848 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;Total ram usage:       32 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 13
  3855 ;; This function calls:
  3856 ;;		___lodiv
  3857 ;;		___lomod
  3858 ;;		_pad
  3859 ;; This function is called by:
  3860 ;;		_vfpfcnvrt
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text9
  3865  003BDE                     __ptext9:
  3866                           	callstack 0
  3867  003BDE                     _utoa:
  3868                           	callstack 12
  3869  003BDE                     
  3870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  3871  003BDE  BE3D               	btfsc	(_prec+1)^0,7,c
  3872  003BE0  EFF4  F01D         	goto	u9961
  3873  003BE4  EFF6  F01D         	goto	u9960
  3874  003BE8                     u9961:
  3875  003BE8  EFF7  F01D         	goto	l8943
  3876  003BEC                     u9960:
  3877  003BEC                     
  3878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  3879  003BEC  923E               	bcf	_flags^0,1,c
  3880  003BEE                     l8943:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  3883  003BEE  BE3D               	btfsc	(_prec+1)^0,7,c
  3884  003BF0  EF04  F01E         	goto	u9970
  3885  003BF4  503D               	movf	(_prec+1)^0,w,c
  3886  003BF6  E106               	bnz	u9971
  3887  003BF8  043C               	decf	_prec^0,w,c
  3888  003BFA  B0D8               	btfsc	status,0,c
  3889  003BFC  EF02  F01E         	goto	u9971
  3890  003C00  EF04  F01E         	goto	u9970
  3891  003C04                     u9971:
  3892  003C04  EF0B  F01E         	goto	l2257
  3893  003C08                     u9970:
  3894  003C08  0E00               	movlw	0
  3895  003C0A  0100               	movlb	0	; () banked
  3896  003C0C  6F6B               	movwf	(utoa@p+1)& (0+255),b
  3897  003C0E  0E01               	movlw	1
  3898  003C10  6F6A               	movwf	utoa@p& (0+255),b
  3899  003C12  EF0F  F01E         	goto	l2259
  3900  003C16                     l2257:
  3901  003C16  C03C  F06A         	movff	_prec,utoa@p
  3902  003C1A  C03D  F06B         	movff	_prec+1,utoa@p+1
  3903  003C1E                     l2259:
  3904                           
  3905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  3906  003C1E  C03A  F06C         	movff	_width,utoa@w
  3907  003C22  C03B  F06D         	movff	_width+1,utoa@w+1
  3908                           
  3909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  3910  003C26  C062  F06E         	movff	utoa@d,utoa@n
  3911  003C2A  C063  F06F         	movff	utoa@d+1,utoa@n+1
  3912  003C2E  C064  F070         	movff	utoa@d+2,utoa@n+2
  3913  003C32  C065  F071         	movff	utoa@d+3,utoa@n+3
  3914  003C36  C066  F072         	movff	utoa@d+4,utoa@n+4
  3915  003C3A  C067  F073         	movff	utoa@d+5,utoa@n+5
  3916  003C3E  C068  F074         	movff	utoa@d+6,utoa@n+6
  3917  003C42  C069  F075         	movff	utoa@d+7,utoa@n+7
  3918  003C46                     
  3919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  3920  003C46  0E00               	movlw	0
  3921  003C48  0100               	movlb	0	; () banked
  3922  003C4A  6F77               	movwf	(utoa@i+1)& (0+255),b
  3923  003C4C  0E4F               	movlw	79
  3924  003C4E  6F76               	movwf	utoa@i& (0+255),b
  3925  003C50                     
  3926                           ; BSR set to: 0
  3927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  3928  003C50  0E00               	movlw	0
  3929  003C52  0101               	movlb	1	; () banked
  3930  003C54  6F8F               	movwf	(_dbuf+79)& (0+255),b
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3933  003C56  EFA4  F01E         	goto	l8961
  3934  003C5A                     l8951:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  3938  003C5A  0776               	decf	utoa@i& (0+255),f,b
  3939  003C5C  A0D8               	btfss	status,0,c
  3940  003C5E  0777               	decf	(utoa@i+1)& (0+255),f,b
  3941  003C60                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  3944  003C60  0E40               	movlw	low _dbuf
  3945  003C62  2576               	addwf	utoa@i& (0+255),w,b
  3946  003C64  6ED9               	movwf	fsr2l,c
  3947  003C66  0E01               	movlw	high _dbuf
  3948  003C68  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  3949  003C6A  6EDA               	movwf	fsr2h,c
  3950  003C6C  C06E  F014         	movff	utoa@n,___lomod@dividend
  3951  003C70  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
  3952  003C74  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
  3953  003C78  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
  3954  003C7C  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
  3955  003C80  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
  3956  003C84  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
  3957  003C88  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
  3958  003C8C  0E0A               	movlw	10
  3959  003C8E  6E1C               	movwf	___lomod@divisor^0,c
  3960  003C90  0E00               	movlw	0
  3961  003C92  6E1D               	movwf	(___lomod@divisor+1)^0,c
  3962  003C94  0E00               	movlw	0
  3963  003C96  6E1E               	movwf	(___lomod@divisor+2)^0,c
  3964  003C98  0E00               	movlw	0
  3965  003C9A  6E1F               	movwf	(___lomod@divisor+3)^0,c
  3966  003C9C  0E00               	movlw	0
  3967  003C9E  6E20               	movwf	(___lomod@divisor+4)^0,c
  3968  003CA0  0E00               	movlw	0
  3969  003CA2  6E21               	movwf	(___lomod@divisor+5)^0,c
  3970  003CA4  0E00               	movlw	0
  3971  003CA6  6E22               	movwf	(___lomod@divisor+6)^0,c
  3972  003CA8  0E00               	movlw	0
  3973  003CAA  6E23               	movwf	(___lomod@divisor+7)^0,c
  3974  003CAC  EC8D  F027         	call	___lomod	;wreg free
  3975  003CB0  C014  F031         	movff	?___lomod,??_utoa
  3976  003CB4  C015  F032         	movff	?___lomod+1,??_utoa+1
  3977  003CB8  C016  F033         	movff	?___lomod+2,??_utoa+2
  3978  003CBC  C017  F034         	movff	?___lomod+3,??_utoa+3
  3979  003CC0  C018  F035         	movff	?___lomod+4,??_utoa+4
  3980  003CC4  C019  F036         	movff	?___lomod+5,??_utoa+5
  3981  003CC8  C01A  F037         	movff	?___lomod+6,??_utoa+6
  3982  003CCC  C01B  F038         	movff	?___lomod+7,??_utoa+7
  3983  003CD0  5031               	movf	??_utoa^0,w,c
  3984  003CD2  0F30               	addlw	48
  3985  003CD4  6EDF               	movwf	indf2,c
  3986  003CD6                     
  3987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  3988  003CD6  0100               	movlb	0	; () banked
  3989  003CD8  076A               	decf	utoa@p& (0+255),f,b
  3990  003CDA  A0D8               	btfss	status,0,c
  3991  003CDC  076B               	decf	(utoa@p+1)& (0+255),f,b
  3992  003CDE                     
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  3995  003CDE  076C               	decf	utoa@w& (0+255),f,b
  3996  003CE0  A0D8               	btfss	status,0,c
  3997  003CE2  076D               	decf	(utoa@w+1)& (0+255),f,b
  3998  003CE4                     
  3999                           ; BSR set to: 0
  4000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4001  003CE4  C06E  F014         	movff	utoa@n,___lodiv@dividend
  4002  003CE8  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
  4003  003CEC  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
  4004  003CF0  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
  4005  003CF4  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
  4006  003CF8  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
  4007  003CFC  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
  4008  003D00  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
  4009  003D04  0E0A               	movlw	10
  4010  003D06  6E1C               	movwf	___lodiv@divisor^0,c
  4011  003D08  0E00               	movlw	0
  4012  003D0A  6E1D               	movwf	(___lodiv@divisor+1)^0,c
  4013  003D0C  0E00               	movlw	0
  4014  003D0E  6E1E               	movwf	(___lodiv@divisor+2)^0,c
  4015  003D10  0E00               	movlw	0
  4016  003D12  6E1F               	movwf	(___lodiv@divisor+3)^0,c
  4017  003D14  0E00               	movlw	0
  4018  003D16  6E20               	movwf	(___lodiv@divisor+4)^0,c
  4019  003D18  0E00               	movlw	0
  4020  003D1A  6E21               	movwf	(___lodiv@divisor+5)^0,c
  4021  003D1C  0E00               	movlw	0
  4022  003D1E  6E22               	movwf	(___lodiv@divisor+6)^0,c
  4023  003D20  0E00               	movlw	0
  4024  003D22  6E23               	movwf	(___lodiv@divisor+7)^0,c
  4025  003D24  ECA4  F026         	call	___lodiv	;wreg free
  4026  003D28  C014  F06E         	movff	?___lodiv,utoa@n
  4027  003D2C  C015  F06F         	movff	?___lodiv+1,utoa@n+1
  4028  003D30  C016  F070         	movff	?___lodiv+2,utoa@n+2
  4029  003D34  C017  F071         	movff	?___lodiv+3,utoa@n+3
  4030  003D38  C018  F072         	movff	?___lodiv+4,utoa@n+4
  4031  003D3C  C019  F073         	movff	?___lodiv+5,utoa@n+5
  4032  003D40  C01A  F074         	movff	?___lodiv+6,utoa@n+6
  4033  003D44  C01B  F075         	movff	?___lodiv+7,utoa@n+7
  4034  003D48                     l8961:
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4037  003D48  0100               	movlb	0	; () banked
  4038  003D4A  5176               	movf	utoa@i& (0+255),w,b
  4039  003D4C  1177               	iorwf	(utoa@i+1)& (0+255),w,b
  4040  003D4E  B4D8               	btfsc	status,2,c
  4041  003D50  EFAC  F01E         	goto	u9981
  4042  003D54  EFAE  F01E         	goto	u9980
  4043  003D58                     u9981:
  4044  003D58  EFDE  F01E         	goto	l8971
  4045  003D5C                     u9980:
  4046  003D5C                     
  4047                           ; BSR set to: 0
  4048  003D5C  516E               	movf	utoa@n& (0+255),w,b
  4049  003D5E  116F               	iorwf	(utoa@n+1)& (0+255),w,b
  4050  003D60  1170               	iorwf	(utoa@n+2)& (0+255),w,b
  4051  003D62  1171               	iorwf	(utoa@n+3)& (0+255),w,b
  4052  003D64  1172               	iorwf	(utoa@n+4)& (0+255),w,b
  4053  003D66  1173               	iorwf	(utoa@n+5)& (0+255),w,b
  4054  003D68  1174               	iorwf	(utoa@n+6)& (0+255),w,b
  4055  003D6A  1175               	iorwf	(utoa@n+7)& (0+255),w,b
  4056  003D6C  A4D8               	btfss	status,2,c
  4057  003D6E  EFBB  F01E         	goto	u9991
  4058  003D72  EFBD  F01E         	goto	u9990
  4059  003D76                     u9991:
  4060  003D76  EF2D  F01E         	goto	l8951
  4061  003D7A                     u9990:
  4062  003D7A                     
  4063                           ; BSR set to: 0
  4064  003D7A  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
  4065  003D7C  EFCA  F01E         	goto	u10000
  4066  003D80  516B               	movf	(utoa@p+1)& (0+255),w,b
  4067  003D82  E106               	bnz	u10001
  4068  003D84  056A               	decf	utoa@p& (0+255),w,b
  4069  003D86  B0D8               	btfsc	status,0,c
  4070  003D88  EFC8  F01E         	goto	u10001
  4071  003D8C  EFCA  F01E         	goto	u10000
  4072  003D90                     u10001:
  4073  003D90  EF2D  F01E         	goto	l8951
  4074  003D94                     u10000:
  4075  003D94                     
  4076                           ; BSR set to: 0
  4077  003D94  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
  4078  003D96  EFD5  F01E         	goto	u10011
  4079  003D9A  516D               	movf	(utoa@w+1)& (0+255),w,b
  4080  003D9C  E108               	bnz	u10010
  4081  003D9E  056C               	decf	utoa@w& (0+255),w,b
  4082  003DA0  A0D8               	btfss	status,0,c
  4083  003DA2  EFD5  F01E         	goto	u10011
  4084  003DA6  EFD7  F01E         	goto	u10010
  4085  003DAA                     u10011:
  4086  003DAA  EFDE  F01E         	goto	l8971
  4087  003DAE                     u10010:
  4088  003DAE                     
  4089                           ; BSR set to: 0
  4090  003DAE  B23E               	btfsc	_flags^0,1,c
  4091  003DB0  EFDC  F01E         	goto	u10021
  4092  003DB4  EFDE  F01E         	goto	u10020
  4093  003DB8                     u10021:
  4094  003DB8  EF2D  F01E         	goto	l8951
  4095  003DBC                     u10020:
  4096  003DBC                     l8971:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4100  003DBC  C060  F026         	movff	utoa@fp,pad@fp
  4101  003DC0  C061  F027         	movff	utoa@fp+1,pad@fp+1
  4102  003DC4  0E40               	movlw	low _dbuf
  4103  003DC6  2576               	addwf	utoa@i& (0+255),w,b
  4104  003DC8  6E28               	movwf	pad@buf^0,c
  4105  003DCA  0E01               	movlw	high _dbuf
  4106  003DCC  2177               	addwfc	(utoa@i+1)& (0+255),w,b
  4107  003DCE  6E29               	movwf	(pad@buf+1)^0,c
  4108  003DD0  C06C  F02A         	movff	utoa@w,pad@p
  4109  003DD4  C06D  F02B         	movff	utoa@w+1,pad@p+1
  4110  003DD8  EC22  F029         	call	_pad	;wreg free
  4111  003DDC  C026  F060         	movff	?_pad,?_utoa
  4112  003DE0  C027  F061         	movff	?_pad+1,?_utoa+1
  4113  003DE4  0012               	return		;funcret
  4114  003DE6                     __end_of_utoa:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function ___lomod *****************
  4118 ;; Defined at:
  4119 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  dividend        8   19[COMRAM] unsigned long long 
  4122 ;;  divisor         8   27[COMRAM] unsigned long long 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  counter         1   35[COMRAM] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  8   19[COMRAM] unsigned long long 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4134 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;Total ram usage:       17 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; Hardware stack levels required when called: 8
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_utoa
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text10
  4149  004F1A                     __ptext10:
  4150                           	callstack 0
  4151  004F1A                     ___lomod:
  4152                           	callstack 16
  4153  004F1A  501C               	movf	___lomod@divisor^0,w,c
  4154  004F1C  101D               	iorwf	(___lomod@divisor+1)^0,w,c
  4155  004F1E  101E               	iorwf	(___lomod@divisor+2)^0,w,c
  4156  004F20  101F               	iorwf	(___lomod@divisor+3)^0,w,c
  4157  004F22  1020               	iorwf	(___lomod@divisor+4)^0,w,c
  4158  004F24  1021               	iorwf	(___lomod@divisor+5)^0,w,c
  4159  004F26  1022               	iorwf	(___lomod@divisor+6)^0,w,c
  4160  004F28  1023               	iorwf	(___lomod@divisor+7)^0,w,c
  4161  004F2A  B4D8               	btfsc	status,2,c
  4162  004F2C  EF9A  F027         	goto	u8971
  4163  004F30  EF9C  F027         	goto	u8970
  4164  004F34                     u8971:
  4165  004F34  EFE4  F027         	goto	l1859
  4166  004F38                     u8970:
  4167  004F38  0E01               	movlw	1
  4168  004F3A  6E24               	movwf	___lomod@counter^0,c
  4169  004F3C  EFAA  F027         	goto	l8469
  4170  004F40                     l8467:
  4171  004F40  90D8               	bcf	status,0,c
  4172  004F42  361C               	rlcf	___lomod@divisor^0,f,c
  4173  004F44  361D               	rlcf	(___lomod@divisor+1)^0,f,c
  4174  004F46  361E               	rlcf	(___lomod@divisor+2)^0,f,c
  4175  004F48  361F               	rlcf	(___lomod@divisor+3)^0,f,c
  4176  004F4A  3620               	rlcf	(___lomod@divisor+4)^0,f,c
  4177  004F4C  3621               	rlcf	(___lomod@divisor+5)^0,f,c
  4178  004F4E  3622               	rlcf	(___lomod@divisor+6)^0,f,c
  4179  004F50  3623               	rlcf	(___lomod@divisor+7)^0,f,c
  4180  004F52  2A24               	incf	___lomod@counter^0,f,c
  4181  004F54                     l8469:
  4182  004F54  AE23               	btfss	(___lomod@divisor+7)^0,7,c
  4183  004F56  EFAF  F027         	goto	u8981
  4184  004F5A  EFB1  F027         	goto	u8980
  4185  004F5E                     u8981:
  4186  004F5E  EFA0  F027         	goto	l8467
  4187  004F62                     u8980:
  4188  004F62                     l8471:
  4189  004F62  501C               	movf	___lomod@divisor^0,w,c
  4190  004F64  5C14               	subwf	___lomod@dividend^0,w,c
  4191  004F66  501D               	movf	(___lomod@divisor+1)^0,w,c
  4192  004F68  5815               	subwfb	(___lomod@dividend+1)^0,w,c
  4193  004F6A  501E               	movf	(___lomod@divisor+2)^0,w,c
  4194  004F6C  5816               	subwfb	(___lomod@dividend+2)^0,w,c
  4195  004F6E  501F               	movf	(___lomod@divisor+3)^0,w,c
  4196  004F70  5817               	subwfb	(___lomod@dividend+3)^0,w,c
  4197  004F72  5020               	movf	(___lomod@divisor+4)^0,w,c
  4198  004F74  5818               	subwfb	(___lomod@dividend+4)^0,w,c
  4199  004F76  5021               	movf	(___lomod@divisor+5)^0,w,c
  4200  004F78  5819               	subwfb	(___lomod@dividend+5)^0,w,c
  4201  004F7A  5022               	movf	(___lomod@divisor+6)^0,w,c
  4202  004F7C  581A               	subwfb	(___lomod@dividend+6)^0,w,c
  4203  004F7E  5023               	movf	(___lomod@divisor+7)^0,w,c
  4204  004F80  581B               	subwfb	(___lomod@dividend+7)^0,w,c
  4205  004F82  A0D8               	btfss	status,0,c
  4206  004F84  EFC6  F027         	goto	u8991
  4207  004F88  EFC8  F027         	goto	u8990
  4208  004F8C                     u8991:
  4209  004F8C  EFD8  F027         	goto	l8475
  4210  004F90                     u8990:
  4211  004F90  501C               	movf	___lomod@divisor^0,w,c
  4212  004F92  5E14               	subwf	___lomod@dividend^0,f,c
  4213  004F94  501D               	movf	(___lomod@divisor+1)^0,w,c
  4214  004F96  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
  4215  004F98  501E               	movf	(___lomod@divisor+2)^0,w,c
  4216  004F9A  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
  4217  004F9C  501F               	movf	(___lomod@divisor+3)^0,w,c
  4218  004F9E  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
  4219  004FA0  5020               	movf	(___lomod@divisor+4)^0,w,c
  4220  004FA2  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
  4221  004FA4  5021               	movf	(___lomod@divisor+5)^0,w,c
  4222  004FA6  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
  4223  004FA8  5022               	movf	(___lomod@divisor+6)^0,w,c
  4224  004FAA  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
  4225  004FAC  5023               	movf	(___lomod@divisor+7)^0,w,c
  4226  004FAE  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
  4227  004FB0                     l8475:
  4228  004FB0  90D8               	bcf	status,0,c
  4229  004FB2  3223               	rrcf	(___lomod@divisor+7)^0,f,c
  4230  004FB4  3222               	rrcf	(___lomod@divisor+6)^0,f,c
  4231  004FB6  3221               	rrcf	(___lomod@divisor+5)^0,f,c
  4232  004FB8  3220               	rrcf	(___lomod@divisor+4)^0,f,c
  4233  004FBA  321F               	rrcf	(___lomod@divisor+3)^0,f,c
  4234  004FBC  321E               	rrcf	(___lomod@divisor+2)^0,f,c
  4235  004FBE  321D               	rrcf	(___lomod@divisor+1)^0,f,c
  4236  004FC0  321C               	rrcf	___lomod@divisor^0,f,c
  4237  004FC2  2E24               	decfsz	___lomod@counter^0,f,c
  4238  004FC4  EFB1  F027         	goto	l8471
  4239  004FC8                     l1859:
  4240  004FC8  C014  F014         	movff	___lomod@dividend,?___lomod
  4241  004FCC  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
  4242  004FD0  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
  4243  004FD4  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
  4244  004FD8  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
  4245  004FDC  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
  4246  004FE0  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
  4247  004FE4  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
  4248  004FE8  0012               	return		;funcret
  4249  004FEA                     __end_of___lomod:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function ___lodiv *****************
  4253 ;; Defined at:
  4254 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  dividend        8   19[COMRAM] unsigned long long 
  4257 ;;  divisor         8   27[COMRAM] unsigned long long 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  quotient        8   35[COMRAM] unsigned long long 
  4260 ;;  counter         1   43[COMRAM] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  8   19[COMRAM] unsigned long long 
  4263 ;; Registers used:
  4264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4270 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;Total ram usage:       25 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; Hardware stack levels required when called: 8
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_utoa
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text11
  4285  004D48                     __ptext11:
  4286                           	callstack 0
  4287  004D48                     ___lodiv:
  4288                           	callstack 16
  4289  004D48  EE20  F024         	lfsr	2,___lodiv@quotient
  4290  004D4C  0E07               	movlw	7
  4291  004D4E                     u8931:
  4292  004D4E  6ADE               	clrf	postinc2,c
  4293  004D50  06E8               	decf	wreg,f,c
  4294  004D52  E2FD               	bc	u8931
  4295  004D54  501C               	movf	___lodiv@divisor^0,w,c
  4296  004D56  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
  4297  004D58  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
  4298  004D5A  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
  4299  004D5C  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
  4300  004D5E  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
  4301  004D60  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
  4302  004D62  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
  4303  004D64  B4D8               	btfsc	status,2,c
  4304  004D66  EFB7  F026         	goto	u8941
  4305  004D6A  EFB9  F026         	goto	u8940
  4306  004D6E                     u8941:
  4307  004D6E  EF0B  F027         	goto	l1849
  4308  004D72                     u8940:
  4309  004D72  0E01               	movlw	1
  4310  004D74  6E2C               	movwf	___lodiv@counter^0,c
  4311  004D76  EFC7  F026         	goto	l8449
  4312  004D7A                     l8447:
  4313  004D7A  90D8               	bcf	status,0,c
  4314  004D7C  361C               	rlcf	___lodiv@divisor^0,f,c
  4315  004D7E  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
  4316  004D80  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
  4317  004D82  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
  4318  004D84  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
  4319  004D86  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
  4320  004D88  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
  4321  004D8A  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
  4322  004D8C  2A2C               	incf	___lodiv@counter^0,f,c
  4323  004D8E                     l8449:
  4324  004D8E  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
  4325  004D90  EFCC  F026         	goto	u8951
  4326  004D94  EFCE  F026         	goto	u8950
  4327  004D98                     u8951:
  4328  004D98  EFBD  F026         	goto	l8447
  4329  004D9C                     u8950:
  4330  004D9C                     l8451:
  4331  004D9C  90D8               	bcf	status,0,c
  4332  004D9E  3624               	rlcf	___lodiv@quotient^0,f,c
  4333  004DA0  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
  4334  004DA2  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
  4335  004DA4  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
  4336  004DA6  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
  4337  004DA8  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
  4338  004DAA  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
  4339  004DAC  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
  4340  004DAE  501C               	movf	___lodiv@divisor^0,w,c
  4341  004DB0  5C14               	subwf	___lodiv@dividend^0,w,c
  4342  004DB2  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4343  004DB4  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
  4344  004DB6  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4345  004DB8  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
  4346  004DBA  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4347  004DBC  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
  4348  004DBE  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4349  004DC0  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
  4350  004DC2  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4351  004DC4  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
  4352  004DC6  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4353  004DC8  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
  4354  004DCA  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4355  004DCC  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
  4356  004DCE  A0D8               	btfss	status,0,c
  4357  004DD0  EFEC  F026         	goto	u8961
  4358  004DD4  EFEE  F026         	goto	u8960
  4359  004DD8                     u8961:
  4360  004DD8  EFFF  F026         	goto	l8459
  4361  004DDC                     u8960:
  4362  004DDC  501C               	movf	___lodiv@divisor^0,w,c
  4363  004DDE  5E14               	subwf	___lodiv@dividend^0,f,c
  4364  004DE0  501D               	movf	(___lodiv@divisor+1)^0,w,c
  4365  004DE2  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
  4366  004DE4  501E               	movf	(___lodiv@divisor+2)^0,w,c
  4367  004DE6  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
  4368  004DE8  501F               	movf	(___lodiv@divisor+3)^0,w,c
  4369  004DEA  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
  4370  004DEC  5020               	movf	(___lodiv@divisor+4)^0,w,c
  4371  004DEE  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
  4372  004DF0  5021               	movf	(___lodiv@divisor+5)^0,w,c
  4373  004DF2  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
  4374  004DF4  5022               	movf	(___lodiv@divisor+6)^0,w,c
  4375  004DF6  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
  4376  004DF8  5023               	movf	(___lodiv@divisor+7)^0,w,c
  4377  004DFA  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
  4378  004DFC  8024               	bsf	___lodiv@quotient^0,0,c
  4379  004DFE                     l8459:
  4380  004DFE  90D8               	bcf	status,0,c
  4381  004E00  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
  4382  004E02  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
  4383  004E04  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
  4384  004E06  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
  4385  004E08  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
  4386  004E0A  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
  4387  004E0C  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
  4388  004E0E  321C               	rrcf	___lodiv@divisor^0,f,c
  4389  004E10  2E2C               	decfsz	___lodiv@counter^0,f,c
  4390  004E12  EFCE  F026         	goto	l8451
  4391  004E16                     l1849:
  4392  004E16  C024  F014         	movff	___lodiv@quotient,?___lodiv
  4393  004E1A  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
  4394  004E1E  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
  4395  004E22  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
  4396  004E26  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
  4397  004E2A  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
  4398  004E2E  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
  4399  004E32  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
  4400  004E36  0012               	return		;funcret
  4401  004E38                     __end_of___lodiv:
  4402                           	callstack 0
  4403                           
  4404 ;; *************** function _strncmp *****************
  4405 ;; Defined at:
  4406 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  4409 ;;		 -> vfpfcnvrt@ct(3), 
  4410 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4411 ;;		 -> STR_19(3), 
  4412 ;;  n               2   23[COMRAM] unsigned int 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4415 ;;		 -> STR_19(3), 
  4416 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4417 ;;		 -> vfpfcnvrt@ct(3), 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  2   19[COMRAM] int 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4427 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;Total ram usage:       11 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 8
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_vfpfcnvrt
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text12
  4442  004C54                     __ptext12:
  4443                           	callstack 0
  4444  004C54                     _strncmp:
  4445                           	callstack 17
  4446  004C54  C014  F01B         	movff	strncmp@_l,strncmp@l
  4447  004C58  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4448  004C5C  C016  F01D         	movff	strncmp@_r,strncmp@r
  4449  004C60  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4450  004C64  0618               	decf	strncmp@n^0,f,c
  4451  004C66  A0D8               	btfss	status,0,c
  4452  004C68  0619               	decf	(strncmp@n+1)^0,f,c
  4453  004C6A  2818               	incf	strncmp@n^0,w,c
  4454  004C6C  E106               	bnz	u10031
  4455  004C6E  2819               	incf	(strncmp@n+1)^0,w,c
  4456  004C70  A4D8               	btfss	status,2,c
  4457  004C72  EF3D  F026         	goto	u10031
  4458  004C76  EF3F  F026         	goto	u10030
  4459  004C7A                     u10031:
  4460  004C7A  EF4C  F026         	goto	l8983
  4461  004C7E                     u10030:
  4462  004C7E  0E00               	movlw	0
  4463  004C80  6E15               	movwf	(?_strncmp+1)^0,c
  4464  004C82  0E00               	movlw	0
  4465  004C84  6E14               	movwf	?_strncmp^0,c
  4466  004C86  EFA3  F026         	goto	l2365
  4467  004C8A                     l8981:
  4468  004C8A  4A1B               	infsnz	strncmp@l^0,f,c
  4469  004C8C  2A1C               	incf	(strncmp@l+1)^0,f,c
  4470  004C8E  4A1D               	infsnz	strncmp@r^0,f,c
  4471  004C90  2A1E               	incf	(strncmp@r+1)^0,f,c
  4472  004C92  0618               	decf	strncmp@n^0,f,c
  4473  004C94  A0D8               	btfss	status,0,c
  4474  004C96  0619               	decf	(strncmp@n+1)^0,f,c
  4475  004C98                     l8983:
  4476  004C98  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4477  004C9E  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4478  004CA4  50DF               	movf	indf2,w,c
  4479  004CA6  B4D8               	btfsc	status,2,c
  4480  004CA8  EF58  F026         	goto	u10041
  4481  004CAC  EF5A  F026         	goto	u10040
  4482  004CB0                     u10041:
  4483  004CB0  EF8D  F026         	goto	l8991
  4484  004CB4                     u10040:
  4485  004CB4  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4486  004CBA  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4487  004CC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4488  004CC0  6AF8               	clrf	tblptru,c
  4489  004CC2                     	endif
  4490  004CC2                     	if	0	;tblptru may be non-zero
  4491  004CC2                     	endif
  4492  004CC2  0008               	tblrd		*
  4493  004CC4  50F5               	movf	tablat,w,c
  4494  004CC6  0900               	iorlw	0
  4495  004CC8  B4D8               	btfsc	status,2,c
  4496  004CCA  EF69  F026         	goto	u10051
  4497  004CCE  EF6B  F026         	goto	u10050
  4498  004CD2                     u10051:
  4499  004CD2  EF8D  F026         	goto	l8991
  4500  004CD6                     u10050:
  4501  004CD6  5018               	movf	strncmp@n^0,w,c
  4502  004CD8  1019               	iorwf	(strncmp@n+1)^0,w,c
  4503  004CDA  B4D8               	btfsc	status,2,c
  4504  004CDC  EF72  F026         	goto	u10061
  4505  004CE0  EF74  F026         	goto	u10060
  4506  004CE4                     u10061:
  4507  004CE4  EF8D  F026         	goto	l8991
  4508  004CE8                     u10060:
  4509  004CE8  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4510  004CEE  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4511  004CF4  50DF               	movf	indf2,w,c
  4512  004CF6  6E1A               	movwf	??_strncmp^0,c
  4513  004CF8  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4514  004CFE  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4515  004D04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4516  004D04  6AF8               	clrf	tblptru,c
  4517  004D06                     	endif
  4518  004D06                     	if	0	;tblptru may be non-zero
  4519  004D06                     	endif
  4520  004D06  0008               	tblrd		*
  4521  004D08  50F5               	movf	tablat,w,c
  4522  004D0A  181A               	xorwf	??_strncmp^0,w,c
  4523  004D0C  B4D8               	btfsc	status,2,c
  4524  004D0E  EF8B  F026         	goto	u10071
  4525  004D12  EF8D  F026         	goto	u10070
  4526  004D16                     u10071:
  4527  004D16  EF45  F026         	goto	l8981
  4528  004D1A                     u10070:
  4529  004D1A                     l8991:
  4530  004D1A  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4531  004D20  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4532  004D26  50DF               	movf	indf2,w,c
  4533  004D28  6E1A               	movwf	??_strncmp^0,c
  4534  004D2A  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4535  004D30  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4536  004D36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4537  004D36  6AF8               	clrf	tblptru,c
  4538  004D38                     	endif
  4539  004D38                     	if	0	;tblptru may be non-zero
  4540  004D38                     	endif
  4541  004D38  0008               	tblrd		*
  4542  004D3A  50F5               	movf	tablat,w,c
  4543  004D3C  5C1A               	subwf	??_strncmp^0,w,c
  4544  004D3E  6E14               	movwf	?_strncmp^0,c
  4545  004D40  6A15               	clrf	(?_strncmp+1)^0,c
  4546  004D42  A0D8               	btfss	status,0,c
  4547  004D44  0615               	decf	(?_strncmp+1)^0,f,c
  4548  004D46                     l2365:
  4549  004D46  0012               	return		;funcret
  4550  004D48                     __end_of_strncmp:
  4551                           	callstack 0
  4552                           
  4553 ;; *************** function _efgtoa *****************
  4554 ;; Defined at:
  4555 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4558 ;;		 -> NULL(0), 
  4559 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4560 ;;  c               1   41[BANK0 ] unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  u               4   99[BANK0 ] unsigned char 
  4563 ;;  g               4   91[BANK0 ] unsigned char 
  4564 ;;  l               4   85[BANK0 ] unsigned char 
  4565 ;;  h               4   81[BANK0 ] unsigned char 
  4566 ;;  ou              4   67[BANK0 ] unsigned char 
  4567 ;;  n               2   97[BANK0 ] int 
  4568 ;;  e               2   95[BANK0 ] int 
  4569 ;;  i               2   89[BANK0 ] int 
  4570 ;;  w               2   77[BANK0 ] int 
  4571 ;;  p               2   75[BANK0 ] int 
  4572 ;;  sign            2   73[BANK0 ] int 
  4573 ;;  d               2   71[BANK0 ] int 
  4574 ;;  m               2   65[BANK0 ] int 
  4575 ;;  ne              2   63[BANK0 ] int 
  4576 ;;  pp              2   61[BANK0 ] int 
  4577 ;;  t               2   59[BANK0 ] int 
  4578 ;;  mode            1   80[BANK0 ] unsigned char 
  4579 ;;  nmode           1   79[BANK0 ] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  2   35[BANK0 ] int 
  4582 ;; Registers used:
  4583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4589 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;Total ram usage:       68 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; Hardware stack levels required when called: 13
  4596 ;; This function calls:
  4597 ;;		___awdiv
  4598 ;;		___awmod
  4599 ;;		___fladd
  4600 ;;		___fldiv
  4601 ;;		___fleq
  4602 ;;		___flge
  4603 ;;		___flmul
  4604 ;;		___flneg
  4605 ;;		___flsub
  4606 ;;		___fltol
  4607 ;;		___fpclassifyf
  4608 ;;		_floorf
  4609 ;;		_isupper
  4610 ;;		_pad
  4611 ;;		_strcpy
  4612 ;;		_tolower
  4613 ;; This function is called by:
  4614 ;;		_vfpfcnvrt
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text13
  4619  0010AA                     __ptext13:
  4620                           	callstack 0
  4621  0010AA                     _efgtoa:
  4622                           	callstack 12
  4623  0010AA                     
  4624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4625  0010AA  0E00               	movlw	0
  4626  0010AC  0100               	movlb	0	; () banked
  4627  0010AE  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4628  0010B0  0E00               	movlw	0
  4629  0010B2  6FA9               	movwf	efgtoa@sign& (0+255),b
  4630  0010B4                     
  4631                           ; BSR set to: 0
  4632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4633  0010B4  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4634  0010B8  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4635  0010BC  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4636  0010C0  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4637  0010C4                     
  4638                           ; BSR set to: 0
  4639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4640  0010C4  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4641  0010C6  EF69  F008         	goto	u9420
  4642  0010CA  EF67  F008         	goto	u9421
  4643  0010CE                     u9421:
  4644  0010CE  EF7F  F008         	goto	l8641
  4645  0010D2                     u9420:
  4646  0010D2                     
  4647                           ; BSR set to: 0
  4648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4649  0010D2  0E00               	movlw	0
  4650  0010D4  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4651  0010D6  0E01               	movlw	1
  4652  0010D8  6FA9               	movwf	efgtoa@sign& (0+255),b
  4653  0010DA                     
  4654                           ; BSR set to: 0
  4655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4656  0010DA  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4657  0010DE  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4658  0010E2  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4659  0010E6  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4660  0010EA  ECFF  F02E         	call	___flneg	;wreg free
  4661  0010EE  C014  F0BB         	movff	?___flneg,efgtoa@g
  4662  0010F2  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4663  0010F6  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4664  0010FA  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4665  0010FE                     l8641:
  4666                           
  4667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4668  0010FE  0E00               	movlw	0
  4669  001100  0100               	movlb	0	; () banked
  4670  001102  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4671  001104  0E00               	movlw	0
  4672  001106  6FC1               	movwf	efgtoa@n& (0+255),b
  4673  001108                     
  4674                           ; BSR set to: 0
  4675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4676  001108  C03A  F0AD         	movff	_width,efgtoa@w
  4677  00110C  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4678  001110                     
  4679                           ; BSR set to: 0
  4680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4681  001110  51A9               	movf	efgtoa@sign& (0+255),w,b
  4682  001112  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4683  001114  A4D8               	btfss	status,2,c
  4684  001116  EF8F  F008         	goto	u9431
  4685  00111A  EF91  F008         	goto	u9430
  4686  00111E                     u9431:
  4687  00111E  EF98  F008         	goto	l8649
  4688  001122                     u9430:
  4689  001122                     
  4690                           ; BSR set to: 0
  4691  001122  A43E               	btfss	_flags^0,2,c
  4692  001124  EF96  F008         	goto	u9441
  4693  001128  EF98  F008         	goto	u9440
  4694  00112C                     u9441:
  4695  00112C  EFB2  F008         	goto	l8661
  4696  001130                     u9440:
  4697  001130                     l8649:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4701  001130  51A9               	movf	efgtoa@sign& (0+255),w,b
  4702  001132  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4703  001134  A4D8               	btfss	status,2,c
  4704  001136  EF9F  F008         	goto	u9451
  4705  00113A  EFA1  F008         	goto	u9450
  4706  00113E                     u9451:
  4707  00113E  EFA7  F008         	goto	l8653
  4708  001142                     u9450:
  4709  001142                     
  4710                           ; BSR set to: 0
  4711  001142  0E00               	movlw	0
  4712  001144  6F90               	movwf	(_efgtoa$3567+1)& (0+255),b
  4713  001146  0E2B               	movlw	43
  4714  001148  6F8F               	movwf	_efgtoa$3567& (0+255),b
  4715  00114A  EFAB  F008         	goto	l8655
  4716  00114E                     l8653:
  4717                           
  4718                           ; BSR set to: 0
  4719  00114E  0E00               	movlw	0
  4720  001150  6F90               	movwf	(_efgtoa$3567+1)& (0+255),b
  4721  001152  0E2D               	movlw	45
  4722  001154  6F8F               	movwf	_efgtoa$3567& (0+255),b
  4723  001156                     l8655:
  4724                           
  4725                           ; BSR set to: 0
  4726  001156  C08F  F140         	movff	_efgtoa$3567,_dbuf
  4727  00115A                     
  4728                           ; BSR set to: 0
  4729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4730  00115A  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4731  00115C  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4732  00115E                     
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4735  00115E  07AD               	decf	efgtoa@w& (0+255),f,b
  4736  001160  A0D8               	btfss	status,0,c
  4737  001162  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4738  001164                     l8661:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4742  001164  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4743  001168  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4744  00116C  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4745  001170  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4746  001174  ECAB  F025         	call	___fpclassifyf	;wreg free
  4747  001178  0414               	decf	?___fpclassifyf^0,w,c
  4748  00117A  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4749  00117C  A4D8               	btfss	status,2,c
  4750  00117E  EFC3  F008         	goto	u9461
  4751  001182  EFC5  F008         	goto	u9460
  4752  001186                     u9461:
  4753  001186  EF1C  F009         	goto	l8679
  4754  00118A                     u9460:
  4755  00118A  0EBF               	movlw	191
  4756  00118C  0100               	movlb	0	; () banked
  4757  00118E  6F8A               	movwf	??_efgtoa& (0+255),b
  4758  001190  0EFF               	movlw	255
  4759  001192  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4760  001194  5189               	movf	efgtoa@c& (0+255),w,b
  4761  001196  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4762  001198  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4763  00119A  518A               	movf	??_efgtoa& (0+255),w,b
  4764  00119C  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4765  00119E  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4766  0011A0  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4767  0011A2  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4768  0011A4  E10A               	bnz	u9470
  4769  0011A6  0E1A               	movlw	26
  4770  0011A8  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4771  0011AA  A0D8               	btfss	status,0,c
  4772  0011AC  EFDA  F008         	goto	u9471
  4773  0011B0  EFDD  F008         	goto	u9470
  4774  0011B4                     u9471:
  4775  0011B4  0E01               	movlw	1
  4776  0011B6  EFDE  F008         	goto	u9480
  4777  0011BA                     u9470:
  4778  0011BA  0E00               	movlw	0
  4779  0011BC                     u9480:
  4780  0011BC  6F91               	movwf	_efgtoa$3568& (0+255),b
  4781  0011BE  6B92               	clrf	(_efgtoa$3568+1)& (0+255),b
  4782  0011C0                     
  4783                           ; BSR set to: 0
  4784  0011C0  5191               	movf	_efgtoa$3568& (0+255),w,b
  4785  0011C2  1192               	iorwf	(_efgtoa$3568+1)& (0+255),w,b
  4786  0011C4  B4D8               	btfsc	status,2,c
  4787  0011C6  EFE7  F008         	goto	u9491
  4788  0011CA  EFE9  F008         	goto	u9490
  4789  0011CE                     u9491:
  4790  0011CE  EFF7  F008         	goto	l8671
  4791  0011D2                     u9490:
  4792  0011D2                     
  4793                           ; BSR set to: 0
  4794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4795  0011D2  0E40               	movlw	low _dbuf
  4796  0011D4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4797  0011D6  6E14               	movwf	strcpy@dest^0,c
  4798  0011D8  0E01               	movlw	high _dbuf
  4799  0011DA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4800  0011DC  6E15               	movwf	(strcpy@dest+1)^0,c
  4801  0011DE  0E95               	movlw	low STR_9
  4802  0011E0  6E16               	movwf	strcpy@src^0,c
  4803  0011E2  0E10               	movlw	high STR_9
  4804  0011E4  6E17               	movwf	(strcpy@src+1)^0,c
  4805  0011E6  EC82  F02C         	call	_strcpy	;wreg free
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4808  0011EA  EF03  F009         	goto	l8673
  4809  0011EE                     l8671:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4813  0011EE  0E40               	movlw	low _dbuf
  4814  0011F0  25C1               	addwf	efgtoa@n& (0+255),w,b
  4815  0011F2  6E14               	movwf	strcpy@dest^0,c
  4816  0011F4  0E01               	movlw	high _dbuf
  4817  0011F6  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4818  0011F8  6E15               	movwf	(strcpy@dest+1)^0,c
  4819  0011FA  0E9D               	movlw	low STR_10
  4820  0011FC  6E16               	movwf	strcpy@src^0,c
  4821  0011FE  0E10               	movlw	high STR_10
  4822  001200  6E17               	movwf	(strcpy@src+1)^0,c
  4823  001202  EC82  F02C         	call	_strcpy	;wreg free
  4824  001206                     l8673:
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4827  001206  0100               	movlb	0	; () banked
  4828  001208  0EFD               	movlw	253
  4829  00120A  27AD               	addwf	efgtoa@w& (0+255),f,b
  4830  00120C  0EFF               	movlw	255
  4831  00120E  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4832  001210                     
  4833                           ; BSR set to: 0
  4834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4835  001210  C083  F026         	movff	efgtoa@fp,pad@fp
  4836  001214  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4837  001218  0E40               	movlw	low _dbuf
  4838  00121A  6E28               	movwf	pad@buf^0,c
  4839  00121C  0E01               	movlw	high _dbuf
  4840  00121E  6E29               	movwf	(pad@buf+1)^0,c
  4841  001220  C0AD  F02A         	movff	efgtoa@w,pad@p
  4842  001224  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4843  001228  EC22  F029         	call	_pad	;wreg free
  4844  00122C  C026  F083         	movff	?_pad,?_efgtoa
  4845  001230  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4846  001234  EFAB  F00E         	goto	l2177
  4847  001238                     l8679:
  4848                           
  4849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4850  001238  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4851  00123C  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4852  001240  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4853  001244  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4854  001248  ECAB  F025         	call	___fpclassifyf	;wreg free
  4855  00124C  5014               	movf	?___fpclassifyf^0,w,c
  4856  00124E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4857  001250  A4D8               	btfss	status,2,c
  4858  001252  EF2D  F009         	goto	u9501
  4859  001256  EF2F  F009         	goto	u9500
  4860  00125A                     u9501:
  4861  00125A  EF86  F009         	goto	l8697
  4862  00125E                     u9500:
  4863  00125E  0EBF               	movlw	191
  4864  001260  0100               	movlb	0	; () banked
  4865  001262  6F8A               	movwf	??_efgtoa& (0+255),b
  4866  001264  0EFF               	movlw	255
  4867  001266  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4868  001268  5189               	movf	efgtoa@c& (0+255),w,b
  4869  00126A  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4870  00126C  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4871  00126E  518A               	movf	??_efgtoa& (0+255),w,b
  4872  001270  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4873  001272  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4874  001274  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4875  001276  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4876  001278  E10A               	bnz	u9510
  4877  00127A  0E1A               	movlw	26
  4878  00127C  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4879  00127E  A0D8               	btfss	status,0,c
  4880  001280  EF44  F009         	goto	u9511
  4881  001284  EF47  F009         	goto	u9510
  4882  001288                     u9511:
  4883  001288  0E01               	movlw	1
  4884  00128A  EF48  F009         	goto	u9520
  4885  00128E                     u9510:
  4886  00128E  0E00               	movlw	0
  4887  001290                     u9520:
  4888  001290  6F93               	movwf	_efgtoa$3572& (0+255),b
  4889  001292  6B94               	clrf	(_efgtoa$3572+1)& (0+255),b
  4890  001294                     
  4891                           ; BSR set to: 0
  4892  001294  5193               	movf	_efgtoa$3572& (0+255),w,b
  4893  001296  1194               	iorwf	(_efgtoa$3572+1)& (0+255),w,b
  4894  001298  B4D8               	btfsc	status,2,c
  4895  00129A  EF51  F009         	goto	u9531
  4896  00129E  EF53  F009         	goto	u9530
  4897  0012A2                     u9531:
  4898  0012A2  EF61  F009         	goto	l8689
  4899  0012A6                     u9530:
  4900  0012A6                     
  4901                           ; BSR set to: 0
  4902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4903  0012A6  0E40               	movlw	low _dbuf
  4904  0012A8  25C1               	addwf	efgtoa@n& (0+255),w,b
  4905  0012AA  6E14               	movwf	strcpy@dest^0,c
  4906  0012AC  0E01               	movlw	high _dbuf
  4907  0012AE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4908  0012B0  6E15               	movwf	(strcpy@dest+1)^0,c
  4909  0012B2  0E99               	movlw	low STR_13
  4910  0012B4  6E16               	movwf	strcpy@src^0,c
  4911  0012B6  0E10               	movlw	high STR_13
  4912  0012B8  6E17               	movwf	(strcpy@src+1)^0,c
  4913  0012BA  EC82  F02C         	call	_strcpy	;wreg free
  4914                           
  4915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4916  0012BE  EF6D  F009         	goto	l8691
  4917  0012C2                     l8689:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4921  0012C2  0E40               	movlw	low _dbuf
  4922  0012C4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4923  0012C6  6E14               	movwf	strcpy@dest^0,c
  4924  0012C8  0E01               	movlw	high _dbuf
  4925  0012CA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4926  0012CC  6E15               	movwf	(strcpy@dest+1)^0,c
  4927  0012CE  0EA1               	movlw	low STR_14
  4928  0012D0  6E16               	movwf	strcpy@src^0,c
  4929  0012D2  0E10               	movlw	high STR_14
  4930  0012D4  6E17               	movwf	(strcpy@src+1)^0,c
  4931  0012D6  EC82  F02C         	call	_strcpy	;wreg free
  4932  0012DA                     l8691:
  4933                           
  4934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4935  0012DA  0100               	movlb	0	; () banked
  4936  0012DC  0EFD               	movlw	253
  4937  0012DE  27AD               	addwf	efgtoa@w& (0+255),f,b
  4938  0012E0  0EFF               	movlw	255
  4939  0012E2  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4940  0012E4                     
  4941                           ; BSR set to: 0
  4942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4943  0012E4  C083  F026         	movff	efgtoa@fp,pad@fp
  4944  0012E8  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4945  0012EC  0E40               	movlw	low _dbuf
  4946  0012EE  6E28               	movwf	pad@buf^0,c
  4947  0012F0  0E01               	movlw	high _dbuf
  4948  0012F2  6E29               	movwf	(pad@buf+1)^0,c
  4949  0012F4  C0AD  F02A         	movff	efgtoa@w,pad@p
  4950  0012F8  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4951  0012FC  EC22  F029         	call	_pad	;wreg free
  4952  001300  C026  F083         	movff	?_pad,?_efgtoa
  4953  001304  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4954  001308  EFAB  F00E         	goto	l2177
  4955  00130C                     l8697:
  4956                           
  4957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4958  00130C  0E00               	movlw	0
  4959  00130E  0100               	movlb	0	; () banked
  4960  001310  6FC3               	movwf	efgtoa@u& (0+255),b
  4961  001312  0E00               	movlw	0
  4962  001314  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4963  001316  0E80               	movlw	128
  4964  001318  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4965  00131A  0E3F               	movlw	63
  4966  00131C  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4967                           
  4968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4969  00131E  0E00               	movlw	0
  4970  001320  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4971  001322  0E00               	movlw	0
  4972  001324  6FBF               	movwf	efgtoa@e& (0+255),b
  4973  001326                     
  4974                           ; BSR set to: 0
  4975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4976  001326  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4977  00132A  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4978  00132E  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4979  001332  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4980  001336  0E00               	movlw	0
  4981  001338  6E18               	movwf	___fleq@ff2^0,c
  4982  00133A  0E00               	movlw	0
  4983  00133C  6E19               	movwf	(___fleq@ff2+1)^0,c
  4984  00133E  0E00               	movlw	0
  4985  001340  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4986  001342  0E00               	movlw	0
  4987  001344  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4988  001346  EC3B  F02A         	call	___fleq	;wreg free
  4989  00134A  B0D8               	btfsc	status,0,c
  4990  00134C  EFAA  F009         	goto	u9541
  4991  001350  EFAC  F009         	goto	u9540
  4992  001354                     u9541:
  4993  001354  EF31  F00A         	goto	l8715
  4994  001358                     u9540:
  4995  001358  EFCB  F009         	goto	l8707
  4996  00135C                     l8703:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5000  00135C  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5001  001360  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5002  001364  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5003  001368  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5004  00136C  0E00               	movlw	0
  5005  00136E  6E2E               	movwf	___flmul@a^0,c
  5006  001370  0E00               	movlw	0
  5007  001372  6E2F               	movwf	(___flmul@a+1)^0,c
  5008  001374  0E20               	movlw	32
  5009  001376  6E30               	movwf	(___flmul@a+2)^0,c
  5010  001378  0E41               	movlw	65
  5011  00137A  6E31               	movwf	(___flmul@a+3)^0,c
  5012  00137C  EC01  F014         	call	___flmul	;wreg free
  5013  001380  C02A  F0C3         	movff	?___flmul,efgtoa@u
  5014  001384  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  5015  001388  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  5016  00138C  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  5017  001390                     
  5018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5019  001390  0100               	movlb	0	; () banked
  5020  001392  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5021  001394  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5022  001396                     l8707:
  5023                           
  5024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5025  001396  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5026  00139A  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5027  00139E  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5028  0013A2  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5029  0013A6  0E00               	movlw	0
  5030  0013A8  6E2E               	movwf	___flmul@a^0,c
  5031  0013AA  0E00               	movlw	0
  5032  0013AC  6E2F               	movwf	(___flmul@a+1)^0,c
  5033  0013AE  0E20               	movlw	32
  5034  0013B0  6E30               	movwf	(___flmul@a+2)^0,c
  5035  0013B2  0E41               	movlw	65
  5036  0013B4  6E31               	movwf	(___flmul@a+3)^0,c
  5037  0013B6  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5038  0013BA  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5039  0013BE  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5040  0013C2  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5041  0013C6  EC01  F014         	call	___flmul	;wreg free
  5042  0013CA  C02A  F071         	movff	?___flmul,___flge@ff2
  5043  0013CE  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5044  0013D2  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5045  0013D6  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5046  0013DA  EC28  F025         	call	___flge	;wreg free
  5047  0013DE  0100               	movlb	0	; () banked
  5048  0013E0  B0D8               	btfsc	status,0,c
  5049  0013E2  EFF5  F009         	goto	u9551
  5050  0013E6  EFF7  F009         	goto	u9550
  5051  0013EA                     u9551:
  5052  0013EA  EFAE  F009         	goto	l8703
  5053  0013EE                     u9550:
  5054  0013EE  EF17  F00A         	goto	l8713
  5055  0013F2                     l8709:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5059  0013F2  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5060  0013F6  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5061  0013FA  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5062  0013FE  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5063  001402  0E00               	movlw	0
  5064  001404  6E2E               	movwf	___fldiv@a^0,c
  5065  001406  0E00               	movlw	0
  5066  001408  6E2F               	movwf	(___fldiv@a+1)^0,c
  5067  00140A  0E20               	movlw	32
  5068  00140C  6E30               	movwf	(___fldiv@a+2)^0,c
  5069  00140E  0E41               	movlw	65
  5070  001410  6E31               	movwf	(___fldiv@a+3)^0,c
  5071  001412  EC29  F016         	call	___fldiv	;wreg free
  5072  001416  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5073  00141A  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5074  00141E  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5075  001422  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5076  001426                     
  5077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5078  001426  0100               	movlb	0	; () banked
  5079  001428  07BF               	decf	efgtoa@e& (0+255),f,b
  5080  00142A  A0D8               	btfss	status,0,c
  5081  00142C  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  5082  00142E                     l8713:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5086  00142E  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5087  001432  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5088  001436  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5089  00143A  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5090  00143E  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  5091  001442  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  5092  001446  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  5093  00144A  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  5094  00144E  EC28  F025         	call	___flge	;wreg free
  5095  001452  0100               	movlb	0	; () banked
  5096  001454  A0D8               	btfss	status,0,c
  5097  001456  EF2F  F00A         	goto	u9561
  5098  00145A  EF31  F00A         	goto	u9560
  5099  00145E                     u9561:
  5100  00145E  EFF9  F009         	goto	l8709
  5101  001462                     u9560:
  5102  001462                     l8715:
  5103                           
  5104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5105  001462  C089  F01A         	movff	efgtoa@c,tolower@c
  5106  001466  6A1B               	clrf	(tolower@c+1)^0,c
  5107  001468  ECB7  F02C         	call	_tolower	;wreg free
  5108  00146C  501A               	movf	?_tolower^0,w,c
  5109  00146E  0100               	movlb	0	; () banked
  5110  001470  6FB0               	movwf	efgtoa@mode& (0+255),b
  5111  001472                     
  5112                           ; BSR set to: 0
  5113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5114  001472  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  5115  001476                     
  5116                           ; BSR set to: 0
  5117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5118  001476  0E67               	movlw	103
  5119  001478  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5120  00147A  A4D8               	btfss	status,2,c
  5121  00147C  EF42  F00A         	goto	u9571
  5122  001480  EF44  F00A         	goto	u9570
  5123  001484                     u9571:
  5124  001484  EF6A  F00A         	goto	l8729
  5125  001488                     u9570:
  5126  001488                     
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5129  001488  503C               	movf	_prec^0,w,c
  5130  00148A  103D               	iorwf	(_prec+1)^0,w,c
  5131  00148C  A4D8               	btfss	status,2,c
  5132  00148E  EF4B  F00A         	goto	u9581
  5133  001492  EF4D  F00A         	goto	u9580
  5134  001496                     u9581:
  5135  001496  EF51  F00A         	goto	l8725
  5136  00149A                     u9580:
  5137  00149A                     
  5138                           ; BSR set to: 0
  5139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5140  00149A  0E00               	movlw	0
  5141  00149C  6E3D               	movwf	(_prec+1)^0,c
  5142  00149E  0E01               	movlw	1
  5143  0014A0  6E3C               	movwf	_prec^0,c
  5144  0014A2                     l8725:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5148  0014A2  BE3D               	btfsc	(_prec+1)^0,7,c
  5149  0014A4  EF5E  F00A         	goto	u9590
  5150  0014A8  503D               	movf	(_prec+1)^0,w,c
  5151  0014AA  E106               	bnz	u9591
  5152  0014AC  043C               	decf	_prec^0,w,c
  5153  0014AE  B0D8               	btfsc	status,0,c
  5154  0014B0  EF5C  F00A         	goto	u9591
  5155  0014B4  EF5E  F00A         	goto	u9590
  5156  0014B8                     u9591:
  5157  0014B8  EF64  F00A         	goto	l2195
  5158  0014BC                     u9590:
  5159  0014BC                     l8727:
  5160                           
  5161                           ; BSR set to: 0
  5162  0014BC  0E00               	movlw	0
  5163  0014BE  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5164  0014C0  0E06               	movlw	6
  5165  0014C2  6FAB               	movwf	efgtoa@p& (0+255),b
  5166  0014C4  EF73  F00A         	goto	l8735
  5167  0014C8                     l2195:
  5168                           
  5169                           ; BSR set to: 0
  5170  0014C8  C03C  F0AB         	movff	_prec,efgtoa@p
  5171  0014CC  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  5172  0014D0  EF73  F00A         	goto	l8735
  5173  0014D4                     l8729:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5177  0014D4  BE3D               	btfsc	(_prec+1)^0,7,c
  5178  0014D6  EF6F  F00A         	goto	u9601
  5179  0014DA  EF71  F00A         	goto	u9600
  5180  0014DE                     u9601:
  5181  0014DE  EF5E  F00A         	goto	l8727
  5182  0014E2                     u9600:
  5183  0014E2  EF64  F00A         	goto	l2195
  5184  0014E6                     l8735:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5188  0014E6  0E67               	movlw	103
  5189  0014E8  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5190  0014EA  A4D8               	btfss	status,2,c
  5191  0014EC  EF7A  F00A         	goto	u9611
  5192  0014F0  EF7C  F00A         	goto	u9610
  5193  0014F4                     u9611:
  5194  0014F4  EFAB  F00A         	goto	l8745
  5195  0014F8                     u9610:
  5196  0014F8                     
  5197                           ; BSR set to: 0
  5198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5199  0014F8  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  5200  0014FA  EF8A  F00A         	goto	u9620
  5201  0014FE  0EFC               	movlw	252
  5202  001500  5DBF               	subwf	efgtoa@e& (0+255),w,b
  5203  001502  0EFF               	movlw	255
  5204  001504  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5205  001506  A0D8               	btfss	status,0,c
  5206  001508  EF88  F00A         	goto	u9621
  5207  00150C  EF8A  F00A         	goto	u9620
  5208  001510                     u9621:
  5209  001510  EFA9  F00A         	goto	l8743
  5210  001514                     u9620:
  5211  001514                     
  5212                           ; BSR set to: 0
  5213  001514  0EFF               	movlw	255
  5214  001516  6F8A               	movwf	??_efgtoa& (0+255),b
  5215  001518  0EFF               	movlw	255
  5216  00151A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5217  00151C  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  5218  001520  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  5219  001524  518A               	movf	??_efgtoa& (0+255),w,b
  5220  001526  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5221  001528  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5222  00152A  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5223  00152C  51BF               	movf	efgtoa@e& (0+255),w,b
  5224  00152E  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5225  001530  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5226  001532  0A80               	xorlw	128
  5227  001534  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  5228  001536  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5229  001538  0A80               	xorlw	128
  5230  00153A  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5231  00153C  A0D8               	btfss	status,0,c
  5232  00153E  EFA3  F00A         	goto	u9631
  5233  001542  EFA5  F00A         	goto	u9630
  5234  001546                     u9631:
  5235  001546  EFA9  F00A         	goto	l8743
  5236  00154A                     u9630:
  5237  00154A                     
  5238                           ; BSR set to: 0
  5239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5240  00154A  0E66               	movlw	102
  5241  00154C  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5242                           
  5243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5244  00154E  EFAB  F00A         	goto	l8745
  5245  001552                     l8743:
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5249  001552  0E65               	movlw	101
  5250  001554  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5251  001556                     l8745:
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5255  001556  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  5256  00155A  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  5257  00155E                     
  5258                           ; BSR set to: 0
  5259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5260  00155E  0E67               	movlw	103
  5261  001560  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5262  001562  A4D8               	btfss	status,2,c
  5263  001564  EFB6  F00A         	goto	u9641
  5264  001568  EFB8  F00A         	goto	u9640
  5265  00156C                     u9641:
  5266  00156C  EFC8  F00A         	goto	l8753
  5267  001570                     u9640:
  5268  001570                     
  5269                           ; BSR set to: 0
  5270  001570  0E66               	movlw	102
  5271  001572  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5272  001574  A4D8               	btfss	status,2,c
  5273  001576  EFBF  F00A         	goto	u9651
  5274  00157A  EFC1  F00A         	goto	u9650
  5275  00157E                     u9651:
  5276  00157E  EFCA  F00A         	goto	l8755
  5277  001582                     u9650:
  5278  001582                     
  5279                           ; BSR set to: 0
  5280  001582  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5281  001584  EFC8  F00A         	goto	u9660
  5282  001588  EFC6  F00A         	goto	u9661
  5283  00158C                     u9661:
  5284  00158C  EFCA  F00A         	goto	l8755
  5285  001590                     u9660:
  5286  001590                     l8753:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5290  001590  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5291  001592  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5292  001594                     l8755:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5296  001594  0E66               	movlw	102
  5297  001596  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5298  001598  A4D8               	btfss	status,2,c
  5299  00159A  EFD1  F00A         	goto	u9671
  5300  00159E  EFD3  F00A         	goto	u9670
  5301  0015A2                     u9671:
  5302  0015A2  EFF3  F00A         	goto	l8765
  5303  0015A6                     u9670:
  5304  0015A6                     
  5305                           ; BSR set to: 0
  5306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5307  0015A6  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5308  0015A8  EFDA  F00A         	goto	u9680
  5309  0015AC  EFD8  F00A         	goto	u9681
  5310  0015B0                     u9681:
  5311  0015B0  EFE6  F00A         	goto	l8761
  5312  0015B4                     u9680:
  5313  0015B4                     
  5314                           ; BSR set to: 0
  5315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5316  0015B4  0E00               	movlw	0
  5317  0015B6  6FC3               	movwf	efgtoa@u& (0+255),b
  5318  0015B8  0E00               	movlw	0
  5319  0015BA  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5320  0015BC  0E80               	movlw	128
  5321  0015BE  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5322  0015C0  0E3F               	movlw	63
  5323  0015C2  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5324                           
  5325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5326  0015C4  0E00               	movlw	0
  5327  0015C6  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5328  0015C8  0E00               	movlw	0
  5329  0015CA  6FBF               	movwf	efgtoa@e& (0+255),b
  5330  0015CC                     l8761:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5334  0015CC  0E67               	movlw	103
  5335  0015CE  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5336  0015D0  B4D8               	btfsc	status,2,c
  5337  0015D2  EFED  F00A         	goto	u9691
  5338  0015D6  EFEF  F00A         	goto	u9690
  5339  0015DA                     u9691:
  5340  0015DA  EFF3  F00A         	goto	l8765
  5341  0015DE                     u9690:
  5342  0015DE                     
  5343                           ; BSR set to: 0
  5344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5345  0015DE  51BF               	movf	efgtoa@e& (0+255),w,b
  5346  0015E0  27A1               	addwf	efgtoa@m& (0+255),f,b
  5347  0015E2  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5348  0015E4  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5349  0015E6                     l8765:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5353  0015E6  0E00               	movlw	0
  5354  0015E8  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5355  0015EA  0E00               	movlw	0
  5356  0015EC  6FB9               	movwf	efgtoa@i& (0+255),b
  5357  0015EE                     
  5358                           ; BSR set to: 0
  5359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5360  0015EE  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  5361  0015F2  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  5362  0015F6  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  5363  0015FA  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  5364  0015FE                     
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5367  0015FE  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  5368  001602  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  5369  001606  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  5370  00160A  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  5371                           
  5372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5373  00160E  EF84  F00B         	goto	l8779
  5374  001612                     l8771:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5378  001612  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5379  001616  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5380  00161A  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5381  00161E  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5382  001622  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5383  001626  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5384  00162A  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5385  00162E  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5386  001632  EC29  F016         	call	___fldiv	;wreg free
  5387  001636  C02A  F036         	movff	?___fldiv,floorf@x
  5388  00163A  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5389  00163E  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5390  001642  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5391  001646  ECE4  F01C         	call	_floorf	;wreg free
  5392  00164A  C036  F0B5         	movff	?_floorf,efgtoa@l
  5393  00164E  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5394  001652  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5395  001656  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5396                           
  5397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5398  00165A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5399  00165E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5400  001662  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5401  001666  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5402  00166A  ECA4  F024         	call	___fltol	;wreg free
  5403  00166E  C079  F0A7         	movff	?___fltol,efgtoa@d
  5404  001672  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5405  001676                     
  5406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5407  001676  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5408  00167A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5409  00167E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5410  001682  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5411  001686  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5412  00168A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5413  00168E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5414  001692  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5415  001696  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5416  00169A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5417  00169E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5418  0016A2  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5419  0016A6  EC01  F014         	call	___flmul	;wreg free
  5420  0016AA  C02A  F07D         	movff	?___flmul,___flsub@a
  5421  0016AE  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5422  0016B2  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5423  0016B6  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5424  0016BA  EC03  F02E         	call	___flsub	;wreg free
  5425  0016BE  C079  F0B1         	movff	?___flsub,efgtoa@h
  5426  0016C2  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5427  0016C6  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5428  0016CA  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5429  0016CE                     
  5430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5431  0016CE  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5432  0016D2  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5433  0016D6  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5434  0016DA  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5435  0016DE  0E00               	movlw	0
  5436  0016E0  6E2E               	movwf	___fldiv@a^0,c
  5437  0016E2  0E00               	movlw	0
  5438  0016E4  6E2F               	movwf	(___fldiv@a+1)^0,c
  5439  0016E6  0E20               	movlw	32
  5440  0016E8  6E30               	movwf	(___fldiv@a+2)^0,c
  5441  0016EA  0E41               	movlw	65
  5442  0016EC  6E31               	movwf	(___fldiv@a+3)^0,c
  5443  0016EE  EC29  F016         	call	___fldiv	;wreg free
  5444  0016F2  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5445  0016F6  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5446  0016FA  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5447  0016FE  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5448  001702                     
  5449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5450  001702  0100               	movlb	0	; () banked
  5451  001704  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5452  001706  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5453  001708                     l8779:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5457  001708  51A1               	movf	efgtoa@m& (0+255),w,b
  5458  00170A  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5459  00170C  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5460  00170E  0A80               	xorlw	128
  5461  001710  6F8A               	movwf	??_efgtoa& (0+255),b
  5462  001712  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5463  001714  0A80               	xorlw	128
  5464  001716  598A               	subwfb	??_efgtoa& (0+255),w,b
  5465  001718  A0D8               	btfss	status,0,c
  5466  00171A  EF91  F00B         	goto	u9701
  5467  00171E  EF93  F00B         	goto	u9700
  5468  001722                     u9701:
  5469  001722  EF09  F00B         	goto	l8771
  5470  001726                     u9700:
  5471  001726                     
  5472                           ; BSR set to: 0
  5473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5474  001726  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5475  00172A  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5476  00172E  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5477  001732  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5478  001736  0E00               	movlw	0
  5479  001738  6E2E               	movwf	___flmul@a^0,c
  5480  00173A  0E00               	movlw	0
  5481  00173C  6E2F               	movwf	(___flmul@a+1)^0,c
  5482  00173E  0EA0               	movlw	160
  5483  001740  6E30               	movwf	(___flmul@a+2)^0,c
  5484  001742  0E40               	movlw	64
  5485  001744  6E31               	movwf	(___flmul@a+3)^0,c
  5486  001746  EC01  F014         	call	___flmul	;wreg free
  5487  00174A  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5488  00174E  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5489  001752  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5490  001756  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5491  00175A                     
  5492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5493  00175A  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5494  00175E  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5495  001762  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5496  001766  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5497  00176A  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5498  00176E  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5499  001772  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5500  001776  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5501  00177A  EC28  F025         	call	___flge	;wreg free
  5502  00177E  0100               	movlb	0	; () banked
  5503  001780  B0D8               	btfsc	status,0,c
  5504  001782  EFC5  F00B         	goto	u9711
  5505  001786  EFC7  F00B         	goto	u9710
  5506  00178A                     u9711:
  5507  00178A  EFD1  F00B         	goto	l8787
  5508  00178E                     u9710:
  5509  00178E                     
  5510                           ; BSR set to: 0
  5511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5512  00178E  0E00               	movlw	0
  5513  001790  6FB5               	movwf	efgtoa@l& (0+255),b
  5514  001792  0E00               	movlw	0
  5515  001794  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5516  001796  0E00               	movlw	0
  5517  001798  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5518  00179A  0E00               	movlw	0
  5519  00179C  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5520                           
  5521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5522  00179E  EFFA  F00B         	goto	l8793
  5523  0017A2                     l8787:
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5527  0017A2  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5528  0017A6  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5529  0017AA  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5530  0017AE  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5531  0017B2  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5532  0017B6  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5533  0017BA  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5534  0017BE  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5535  0017C2  EC3B  F02A         	call	___fleq	;wreg free
  5536  0017C6  A0D8               	btfss	status,0,c
  5537  0017C8  EFE8  F00B         	goto	u9721
  5538  0017CC  EFEA  F00B         	goto	u9720
  5539  0017D0                     u9721:
  5540  0017D0  EFFA  F00B         	goto	l8793
  5541  0017D4                     u9720:
  5542  0017D4  0100               	movlb	0	; () banked
  5543  0017D6  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5544  0017D8  EFF0  F00B         	goto	u9731
  5545  0017DC  EFF2  F00B         	goto	u9730
  5546  0017E0                     u9731:
  5547  0017E0  EFFA  F00B         	goto	l8793
  5548  0017E4                     u9730:
  5549  0017E4                     
  5550                           ; BSR set to: 0
  5551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5552  0017E4  0E00               	movlw	0
  5553  0017E6  6FB5               	movwf	efgtoa@l& (0+255),b
  5554  0017E8  0E00               	movlw	0
  5555  0017EA  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5556  0017EC  0E00               	movlw	0
  5557  0017EE  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5558  0017F0  0E00               	movlw	0
  5559  0017F2  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5560  0017F4                     l8793:
  5561                           
  5562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5563  0017F4  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5564  0017F8  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5565  0017FC  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5566  001800  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5567  001804  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5568  001808  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5569  00180C  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5570  001810  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5571  001814  ECA0  F011         	call	___fladd	;wreg free
  5572  001818  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5573  00181C  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5574  001820  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5575  001824  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5576  001828                     
  5577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5578  001828  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5579  00182C  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5580  001830  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5581  001834  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5582  001838  0E00               	movlw	0
  5583  00183A  6E2E               	movwf	___flmul@a^0,c
  5584  00183C  0E00               	movlw	0
  5585  00183E  6E2F               	movwf	(___flmul@a+1)^0,c
  5586  001840  0E20               	movlw	32
  5587  001842  6E30               	movwf	(___flmul@a+2)^0,c
  5588  001844  0E41               	movlw	65
  5589  001846  6E31               	movwf	(___flmul@a+3)^0,c
  5590  001848  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5591  00184C  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5592  001850  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5593  001854  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5594  001858  EC01  F014         	call	___flmul	;wreg free
  5595  00185C  C02A  F071         	movff	?___flmul,___flge@ff2
  5596  001860  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5597  001864  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5598  001868  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5599  00186C  EC28  F025         	call	___flge	;wreg free
  5600  001870  0100               	movlb	0	; () banked
  5601  001872  A0D8               	btfss	status,0,c
  5602  001874  EF3E  F00C         	goto	u9741
  5603  001878  EF40  F00C         	goto	u9740
  5604  00187C                     u9741:
  5605  00187C  EF68  F00C         	goto	l8805
  5606  001880                     u9740:
  5607  001880                     
  5608                           ; BSR set to: 0
  5609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5610  001880  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5611  001882  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5612  001884                     
  5613                           ; BSR set to: 0
  5614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5615  001884  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5616  001888  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5617  00188C  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5618  001890  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5619  001894  0E00               	movlw	0
  5620  001896  6E2E               	movwf	___flmul@a^0,c
  5621  001898  0E00               	movlw	0
  5622  00189A  6E2F               	movwf	(___flmul@a+1)^0,c
  5623  00189C  0E20               	movlw	32
  5624  00189E  6E30               	movwf	(___flmul@a+2)^0,c
  5625  0018A0  0E41               	movlw	65
  5626  0018A2  6E31               	movwf	(___flmul@a+3)^0,c
  5627  0018A4  EC01  F014         	call	___flmul	;wreg free
  5628  0018A8  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5629  0018AC  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5630  0018B0  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5631  0018B4  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5632  0018B8                     
  5633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5634  0018B8  0E66               	movlw	102
  5635  0018BA  0100               	movlb	0	; () banked
  5636  0018BC  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5637  0018BE  A4D8               	btfss	status,2,c
  5638  0018C0  EF64  F00C         	goto	u9751
  5639  0018C4  EF66  F00C         	goto	u9750
  5640  0018C8                     u9751:
  5641  0018C8  EF68  F00C         	goto	l8805
  5642  0018CC                     u9750:
  5643  0018CC                     
  5644                           ; BSR set to: 0
  5645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5646  0018CC  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5647  0018CE  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5648  0018D0                     l8805:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5652  0018D0  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5653  0018D4  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5654  0018D8  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5655  0018DC  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5656  0018E0                     
  5657                           ; BSR set to: 0
  5658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5659  0018E0  0E65               	movlw	101
  5660  0018E2  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5661  0018E4  B4D8               	btfsc	status,2,c
  5662  0018E6  EF77  F00C         	goto	u9761
  5663  0018EA  EF79  F00C         	goto	u9760
  5664  0018EE                     u9761:
  5665  0018EE  EF7F  F00C         	goto	l8811
  5666  0018F2                     u9760:
  5667  0018F2                     
  5668                           ; BSR set to: 0
  5669  0018F2  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5670  0018F6  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5671  0018FA  EF83  F00C         	goto	l2223
  5672  0018FE                     l8811:
  5673                           
  5674                           ; BSR set to: 0
  5675  0018FE  0E00               	movlw	0
  5676  001900  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5677  001902  0E00               	movlw	0
  5678  001904  6F9F               	movwf	efgtoa@ne& (0+255),b
  5679  001906                     l2223:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5683  001906  0E00               	movlw	0
  5684  001908  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5685  00190A  0E00               	movlw	0
  5686  00190C  6F9D               	movwf	efgtoa@pp& (0+255),b
  5687                           
  5688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5689  00190E  0E00               	movlw	0
  5690  001910  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5691  001912  0E00               	movlw	0
  5692  001914  6F9B               	movwf	efgtoa@t& (0+255),b
  5693                           
  5694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5695  001916  0E00               	movlw	0
  5696  001918  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5697  00191A  0E00               	movlw	0
  5698  00191C  6FB9               	movwf	efgtoa@i& (0+255),b
  5699                           
  5700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5701  00191E  EF7F  F00D         	goto	l8861
  5702  001922                     l8813:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5706  001922  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5707  001926  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5708  00192A  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5709  00192E  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5710  001932  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5711  001936  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5712  00193A  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5713  00193E  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5714  001942  EC29  F016         	call	___fldiv	;wreg free
  5715  001946  C02A  F036         	movff	?___fldiv,floorf@x
  5716  00194A  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5717  00194E  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5718  001952  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5719  001956  ECE4  F01C         	call	_floorf	;wreg free
  5720  00195A  C036  F0B5         	movff	?_floorf,efgtoa@l
  5721  00195E  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5722  001962  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5723  001966  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5724                           
  5725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5726  00196A  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5727  00196E  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5728  001972  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5729  001976  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5730  00197A  ECA4  F024         	call	___fltol	;wreg free
  5731  00197E  C079  F0A7         	movff	?___fltol,efgtoa@d
  5732  001982  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5733  001986                     
  5734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5735  001986  B83E               	btfsc	_flags^0,4,c
  5736  001988  EFC8  F00C         	goto	u9771
  5737  00198C  EFCA  F00C         	goto	u9770
  5738  001990                     u9771:
  5739  001990  EFE8  F00C         	goto	l8825
  5740  001994                     u9770:
  5741  001994  0100               	movlb	0	; () banked
  5742  001996  51A7               	movf	efgtoa@d& (0+255),w,b
  5743  001998  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5744  00199A  A4D8               	btfss	status,2,c
  5745  00199C  EFD2  F00C         	goto	u9781
  5746  0019A0  EFD4  F00C         	goto	u9780
  5747  0019A4                     u9781:
  5748  0019A4  EFE8  F00C         	goto	l8825
  5749  0019A8                     u9780:
  5750  0019A8                     
  5751                           ; BSR set to: 0
  5752  0019A8  0E67               	movlw	103
  5753  0019AA  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5754  0019AC  A4D8               	btfss	status,2,c
  5755  0019AE  EFDB  F00C         	goto	u9791
  5756  0019B2  EFDD  F00C         	goto	u9790
  5757  0019B6                     u9791:
  5758  0019B6  EFE8  F00C         	goto	l8825
  5759  0019BA                     u9790:
  5760  0019BA                     
  5761                           ; BSR set to: 0
  5762  0019BA  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5763  0019BC  EFE4  F00C         	goto	u9800
  5764  0019C0  EFE2  F00C         	goto	u9801
  5765  0019C4                     u9801:
  5766  0019C4  EFE8  F00C         	goto	l8825
  5767  0019C8                     u9800:
  5768  0019C8                     
  5769                           ; BSR set to: 0
  5770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5771  0019C8  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5772  0019CA  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5773                           
  5774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5775  0019CC  EF33  F00D         	goto	l8853
  5776  0019D0                     l8825:
  5777                           
  5778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5779  0019D0  0100               	movlb	0	; () banked
  5780  0019D2  519D               	movf	efgtoa@pp& (0+255),w,b
  5781  0019D4  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5782  0019D6  A4D8               	btfss	status,2,c
  5783  0019D8  EFF0  F00C         	goto	u9811
  5784  0019DC  EFF2  F00C         	goto	u9810
  5785  0019E0                     u9811:
  5786  0019E0  EF1C  F00D         	goto	l8845
  5787  0019E4                     u9810:
  5788  0019E4                     
  5789                           ; BSR set to: 0
  5790  0019E4  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5791  0019E6  EFF9  F00C         	goto	u9820
  5792  0019EA  EFF7  F00C         	goto	u9821
  5793  0019EE                     u9821:
  5794  0019EE  EF1C  F00D         	goto	l8845
  5795  0019F2                     u9820:
  5796  0019F2                     
  5797                           ; BSR set to: 0
  5798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5799  0019F2  0E40               	movlw	low _dbuf
  5800  0019F4  25C1               	addwf	efgtoa@n& (0+255),w,b
  5801  0019F6  6ED9               	movwf	fsr2l,c
  5802  0019F8  0E01               	movlw	high _dbuf
  5803  0019FA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5804  0019FC  6EDA               	movwf	fsr2h,c
  5805  0019FE  0E2E               	movlw	46
  5806  001A00  6EDF               	movwf	indf2,c
  5807  001A02                     
  5808                           ; BSR set to: 0
  5809  001A02  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5810  001A04  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5811  001A06                     
  5812                           ; BSR set to: 0
  5813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5814  001A06  07AD               	decf	efgtoa@w& (0+255),f,b
  5815  001A08  A0D8               	btfss	status,0,c
  5816  001A0A  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5817  001A0C                     
  5818                           ; BSR set to: 0
  5819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5820  001A0C  0E00               	movlw	0
  5821  001A0E  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5822  001A10  0E01               	movlw	1
  5823  001A12  6F9D               	movwf	efgtoa@pp& (0+255),b
  5824  001A14  EF1C  F00D         	goto	l8845
  5825  001A18                     l8837:
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5829  001A18  0E40               	movlw	low _dbuf
  5830  001A1A  25C1               	addwf	efgtoa@n& (0+255),w,b
  5831  001A1C  6ED9               	movwf	fsr2l,c
  5832  001A1E  0E01               	movlw	high _dbuf
  5833  001A20  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5834  001A22  6EDA               	movwf	fsr2h,c
  5835  001A24  0E30               	movlw	48
  5836  001A26  6EDF               	movwf	indf2,c
  5837  001A28                     
  5838                           ; BSR set to: 0
  5839  001A28  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5840  001A2A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5841  001A2C                     
  5842                           ; BSR set to: 0
  5843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5844  001A2C  07AD               	decf	efgtoa@w& (0+255),f,b
  5845  001A2E  A0D8               	btfss	status,0,c
  5846  001A30  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5847  001A32                     
  5848                           ; BSR set to: 0
  5849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5850  001A32  079B               	decf	efgtoa@t& (0+255),f,b
  5851  001A34  A0D8               	btfss	status,0,c
  5852  001A36  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5853  001A38                     l8845:
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5857  001A38  519B               	movf	efgtoa@t& (0+255),w,b
  5858  001A3A  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5859  001A3C  A4D8               	btfss	status,2,c
  5860  001A3E  EF23  F00D         	goto	u9831
  5861  001A42  EF25  F00D         	goto	u9830
  5862  001A46                     u9831:
  5863  001A46  EF0C  F00D         	goto	l8837
  5864  001A4A                     u9830:
  5865  001A4A                     
  5866                           ; BSR set to: 0
  5867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5868  001A4A  0E40               	movlw	low _dbuf
  5869  001A4C  25C1               	addwf	efgtoa@n& (0+255),w,b
  5870  001A4E  6ED9               	movwf	fsr2l,c
  5871  001A50  0E01               	movlw	high _dbuf
  5872  001A52  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5873  001A54  6EDA               	movwf	fsr2h,c
  5874  001A56  51A7               	movf	efgtoa@d& (0+255),w,b
  5875  001A58  0F30               	addlw	48
  5876  001A5A  6EDF               	movwf	indf2,c
  5877  001A5C                     
  5878                           ; BSR set to: 0
  5879  001A5C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5880  001A5E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5881  001A60                     
  5882                           ; BSR set to: 0
  5883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5884  001A60  07AD               	decf	efgtoa@w& (0+255),f,b
  5885  001A62  A0D8               	btfss	status,0,c
  5886  001A64  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5887  001A66                     l8853:
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5891  001A66  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5892  001A6A  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5893  001A6E  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5894  001A72  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5895  001A76  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5896  001A7A  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5897  001A7E  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5898  001A82  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5899  001A86  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5900  001A8A  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5901  001A8E  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5902  001A92  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5903  001A96  EC01  F014         	call	___flmul	;wreg free
  5904  001A9A  C02A  F07D         	movff	?___flmul,___flsub@a
  5905  001A9E  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5906  001AA2  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5907  001AA6  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5908  001AAA  EC03  F02E         	call	___flsub	;wreg free
  5909  001AAE  C079  F0B1         	movff	?___flsub,efgtoa@h
  5910  001AB2  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5911  001AB6  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5912  001ABA  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5913  001ABE                     
  5914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5915  001ABE  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5916  001AC2  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5917  001AC6  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5918  001ACA  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5919  001ACE  0E00               	movlw	0
  5920  001AD0  6E2E               	movwf	___fldiv@a^0,c
  5921  001AD2  0E00               	movlw	0
  5922  001AD4  6E2F               	movwf	(___fldiv@a+1)^0,c
  5923  001AD6  0E20               	movlw	32
  5924  001AD8  6E30               	movwf	(___fldiv@a+2)^0,c
  5925  001ADA  0E41               	movlw	65
  5926  001ADC  6E31               	movwf	(___fldiv@a+3)^0,c
  5927  001ADE  EC29  F016         	call	___fldiv	;wreg free
  5928  001AE2  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5929  001AE6  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5930  001AEA  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5931  001AEE  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5932  001AF2                     
  5933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5934  001AF2  0100               	movlb	0	; () banked
  5935  001AF4  079F               	decf	efgtoa@ne& (0+255),f,b
  5936  001AF6  A0D8               	btfss	status,0,c
  5937  001AF8  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5938  001AFA                     
  5939                           ; BSR set to: 0
  5940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5941  001AFA  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5942  001AFC  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5943  001AFE                     l8861:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5947  001AFE  51A1               	movf	efgtoa@m& (0+255),w,b
  5948  001B00  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5949  001B02  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5950  001B04  0A80               	xorlw	128
  5951  001B06  6F8A               	movwf	??_efgtoa& (0+255),b
  5952  001B08  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5953  001B0A  0A80               	xorlw	128
  5954  001B0C  598A               	subwfb	??_efgtoa& (0+255),w,b
  5955  001B0E  B0D8               	btfsc	status,0,c
  5956  001B10  EF8C  F00D         	goto	u9841
  5957  001B14  EF8E  F00D         	goto	u9840
  5958  001B18                     u9841:
  5959  001B18  EF9C  F00D         	goto	l8865
  5960  001B1C                     u9840:
  5961  001B1C                     
  5962                           ; BSR set to: 0
  5963  001B1C  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5964  001B1E  EF9A  F00D         	goto	u9851
  5965  001B22  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5966  001B24  E109               	bnz	u9850
  5967  001B26  0E4B               	movlw	75
  5968  001B28  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5969  001B2A  A0D8               	btfss	status,0,c
  5970  001B2C  EF9A  F00D         	goto	u9851
  5971  001B30  EF9C  F00D         	goto	u9850
  5972  001B34                     u9851:
  5973  001B34  EF91  F00C         	goto	l8813
  5974  001B38                     u9850:
  5975  001B38                     l8865:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5979  001B38  519D               	movf	efgtoa@pp& (0+255),w,b
  5980  001B3A  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5981  001B3C  A4D8               	btfss	status,2,c
  5982  001B3E  EFA3  F00D         	goto	u9861
  5983  001B42  EFA5  F00D         	goto	u9860
  5984  001B46                     u9861:
  5985  001B46  EFB6  F00D         	goto	l8873
  5986  001B4A                     u9860:
  5987  001B4A                     
  5988                           ; BSR set to: 0
  5989  001B4A  A83E               	btfss	_flags^0,4,c
  5990  001B4C  EFAA  F00D         	goto	u9871
  5991  001B50  EFAC  F00D         	goto	u9870
  5992  001B54                     u9871:
  5993  001B54  EFB6  F00D         	goto	l8873
  5994  001B58                     u9870:
  5995  001B58                     
  5996                           ; BSR set to: 0
  5997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5998  001B58  0E40               	movlw	low _dbuf
  5999  001B5A  25C1               	addwf	efgtoa@n& (0+255),w,b
  6000  001B5C  6ED9               	movwf	fsr2l,c
  6001  001B5E  0E01               	movlw	high _dbuf
  6002  001B60  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6003  001B62  6EDA               	movwf	fsr2h,c
  6004  001B64  0E2E               	movlw	46
  6005  001B66  6EDF               	movwf	indf2,c
  6006  001B68                     
  6007                           ; BSR set to: 0
  6008  001B68  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6009  001B6A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6010  001B6C                     l8873:
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6014  001B6C  0E40               	movlw	low _dbuf
  6015  001B6E  25C1               	addwf	efgtoa@n& (0+255),w,b
  6016  001B70  6ED9               	movwf	fsr2l,c
  6017  001B72  0E01               	movlw	high _dbuf
  6018  001B74  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6019  001B76  6EDA               	movwf	fsr2h,c
  6020  001B78  0E00               	movlw	0
  6021  001B7A  6EDF               	movwf	indf2,c
  6022  001B7C                     
  6023                           ; BSR set to: 0
  6024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6025  001B7C  0E65               	movlw	101
  6026  001B7E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6027  001B80  A4D8               	btfss	status,2,c
  6028  001B82  EFC5  F00D         	goto	u9881
  6029  001B86  EFC7  F00D         	goto	u9880
  6030  001B8A                     u9881:
  6031  001B8A  EF99  F00E         	goto	l8935
  6032  001B8E                     u9880:
  6033  001B8E                     
  6034                           ; BSR set to: 0
  6035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6036  001B8E  0E00               	movlw	0
  6037  001B90  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  6038  001B92  0E4F               	movlw	79
  6039  001B94  6FB9               	movwf	efgtoa@i& (0+255),b
  6040  001B96                     
  6041                           ; BSR set to: 0
  6042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6043  001B96  0E40               	movlw	low _dbuf
  6044  001B98  25B9               	addwf	efgtoa@i& (0+255),w,b
  6045  001B9A  6ED9               	movwf	fsr2l,c
  6046  001B9C  0E01               	movlw	high _dbuf
  6047  001B9E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6048  001BA0  6EDA               	movwf	fsr2h,c
  6049  001BA2  0E00               	movlw	0
  6050  001BA4  6EDF               	movwf	indf2,c
  6051  001BA6                     
  6052                           ; BSR set to: 0
  6053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6054  001BA6  0E00               	movlw	0
  6055  001BA8  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6056  001BAA  0E00               	movlw	0
  6057  001BAC  6FA9               	movwf	efgtoa@sign& (0+255),b
  6058  001BAE                     
  6059                           ; BSR set to: 0
  6060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6061  001BAE  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6062  001BB0  EFDE  F00D         	goto	u9890
  6063  001BB4  EFDC  F00D         	goto	u9891
  6064  001BB8                     u9891:
  6065  001BB8  EFE6  F00D         	goto	l8889
  6066  001BBC                     u9890:
  6067  001BBC                     
  6068                           ; BSR set to: 0
  6069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6070  001BBC  0E00               	movlw	0
  6071  001BBE  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6072  001BC0  0E01               	movlw	1
  6073  001BC2  6FA9               	movwf	efgtoa@sign& (0+255),b
  6074  001BC4                     
  6075                           ; BSR set to: 0
  6076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6077  001BC4  6DBF               	negf	efgtoa@e& (0+255),b
  6078  001BC6  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  6079  001BC8  B0D8               	btfsc	status,0,c
  6080  001BCA  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  6081  001BCC                     l8889:
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6085  001BCC  0E00               	movlw	0
  6086  001BCE  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  6087  001BD0  0E02               	movlw	2
  6088  001BD2  6FAB               	movwf	efgtoa@p& (0+255),b
  6089                           
  6090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6091  001BD4  EF17  F00E         	goto	l8901
  6092  001BD8                     l8891:
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6096  001BD8  07B9               	decf	efgtoa@i& (0+255),f,b
  6097  001BDA  A0D8               	btfss	status,0,c
  6098  001BDC  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6099  001BDE                     
  6100                           ; BSR set to: 0
  6101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6102  001BDE  0E40               	movlw	low _dbuf
  6103  001BE0  25B9               	addwf	efgtoa@i& (0+255),w,b
  6104  001BE2  6ED9               	movwf	fsr2l,c
  6105  001BE4  0E01               	movlw	high _dbuf
  6106  001BE6  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6107  001BE8  6EDA               	movwf	fsr2h,c
  6108  001BEA  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  6109  001BEE  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  6110  001BF2  0E00               	movlw	0
  6111  001BF4  6E17               	movwf	(___awmod@divisor+1)^0,c
  6112  001BF6  0E0A               	movlw	10
  6113  001BF8  6E16               	movwf	___awmod@divisor^0,c
  6114  001BFA  ECE3  F029         	call	___awmod	;wreg free
  6115  001BFE  5014               	movf	?___awmod^0,w,c
  6116  001C00  0F30               	addlw	48
  6117  001C02  6EDF               	movwf	indf2,c
  6118  001C04                     
  6119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6120  001C04  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  6121  001C08  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  6122  001C0C  0E00               	movlw	0
  6123  001C0E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  6124  001C10  0E0A               	movlw	10
  6125  001C12  6E16               	movwf	___awdiv@divisor^0,c
  6126  001C14  ECC0  F028         	call	___awdiv	;wreg free
  6127  001C18  C014  F0BF         	movff	?___awdiv,efgtoa@e
  6128  001C1C  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  6129  001C20                     
  6130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6131  001C20  0100               	movlb	0	; () banked
  6132  001C22  07AB               	decf	efgtoa@p& (0+255),f,b
  6133  001C24  A0D8               	btfss	status,0,c
  6134  001C26  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  6135  001C28                     
  6136                           ; BSR set to: 0
  6137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6138  001C28  07AD               	decf	efgtoa@w& (0+255),f,b
  6139  001C2A  A0D8               	btfss	status,0,c
  6140  001C2C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6141  001C2E                     l8901:
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6145  001C2E  51BF               	movf	efgtoa@e& (0+255),w,b
  6146  001C30  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6147  001C32  A4D8               	btfss	status,2,c
  6148  001C34  EF1E  F00E         	goto	u9901
  6149  001C38  EF20  F00E         	goto	u9900
  6150  001C3C                     u9901:
  6151  001C3C  EFEC  F00D         	goto	l8891
  6152  001C40                     u9900:
  6153  001C40                     
  6154                           ; BSR set to: 0
  6155  001C40  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6156  001C42  EF2D  F00E         	goto	u9910
  6157  001C46  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  6158  001C48  E106               	bnz	u9911
  6159  001C4A  05AB               	decf	efgtoa@p& (0+255),w,b
  6160  001C4C  B0D8               	btfsc	status,0,c
  6161  001C4E  EF2B  F00E         	goto	u9911
  6162  001C52  EF2D  F00E         	goto	u9910
  6163  001C56                     u9911:
  6164  001C56  EFEC  F00D         	goto	l8891
  6165  001C5A                     u9910:
  6166  001C5A                     
  6167                           ; BSR set to: 0
  6168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6169  001C5A  07B9               	decf	efgtoa@i& (0+255),f,b
  6170  001C5C  A0D8               	btfss	status,0,c
  6171  001C5E  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6172  001C60                     
  6173                           ; BSR set to: 0
  6174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6175  001C60  51A9               	movf	efgtoa@sign& (0+255),w,b
  6176  001C62  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6177  001C64  A4D8               	btfss	status,2,c
  6178  001C66  EF37  F00E         	goto	u9921
  6179  001C6A  EF39  F00E         	goto	u9920
  6180  001C6E                     u9921:
  6181  001C6E  EF3F  F00E         	goto	l8911
  6182  001C72                     u9920:
  6183  001C72                     
  6184                           ; BSR set to: 0
  6185  001C72  0E00               	movlw	0
  6186  001C74  6F96               	movwf	(_efgtoa$3576+1)& (0+255),b
  6187  001C76  0E2B               	movlw	43
  6188  001C78  6F95               	movwf	_efgtoa$3576& (0+255),b
  6189  001C7A  EF43  F00E         	goto	l8913
  6190  001C7E                     l8911:
  6191                           
  6192                           ; BSR set to: 0
  6193  001C7E  0E00               	movlw	0
  6194  001C80  6F96               	movwf	(_efgtoa$3576+1)& (0+255),b
  6195  001C82  0E2D               	movlw	45
  6196  001C84  6F95               	movwf	_efgtoa$3576& (0+255),b
  6197  001C86                     l8913:
  6198                           
  6199                           ; BSR set to: 0
  6200  001C86  0E40               	movlw	low _dbuf
  6201  001C88  25B9               	addwf	efgtoa@i& (0+255),w,b
  6202  001C8A  6ED9               	movwf	fsr2l,c
  6203  001C8C  0E01               	movlw	high _dbuf
  6204  001C8E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6205  001C90  6EDA               	movwf	fsr2h,c
  6206  001C92  0060  F257  FFDF   	movff	_efgtoa$3576,indf2
  6207  001C98                     
  6208                           ; BSR set to: 0
  6209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6210  001C98  07AD               	decf	efgtoa@w& (0+255),f,b
  6211  001C9A  A0D8               	btfss	status,0,c
  6212  001C9C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6213  001C9E                     
  6214                           ; BSR set to: 0
  6215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6216  001C9E  07B9               	decf	efgtoa@i& (0+255),f,b
  6217  001CA0  A0D8               	btfss	status,0,c
  6218  001CA2  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6219  001CA4                     
  6220                           ; BSR set to: 0
  6221  001CA4  0EBF               	movlw	191
  6222  001CA6  6F8A               	movwf	??_efgtoa& (0+255),b
  6223  001CA8  0EFF               	movlw	255
  6224  001CAA  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6225  001CAC  5189               	movf	efgtoa@c& (0+255),w,b
  6226  001CAE  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  6227  001CB0  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  6228  001CB2  518A               	movf	??_efgtoa& (0+255),w,b
  6229  001CB4  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6230  001CB6  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6231  001CB8  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6232  001CBA  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6233  001CBC  E10A               	bnz	u9930
  6234  001CBE  0E1A               	movlw	26
  6235  001CC0  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6236  001CC2  A0D8               	btfss	status,0,c
  6237  001CC4  EF66  F00E         	goto	u9931
  6238  001CC8  EF69  F00E         	goto	u9930
  6239  001CCC                     u9931:
  6240  001CCC  0E01               	movlw	1
  6241  001CCE  EF6A  F00E         	goto	u9940
  6242  001CD2                     u9930:
  6243  001CD2  0E00               	movlw	0
  6244  001CD4                     u9940:
  6245  001CD4  6F99               	movwf	_efgtoa$3578& (0+255),b
  6246  001CD6  6B9A               	clrf	(_efgtoa$3578+1)& (0+255),b
  6247  001CD8                     
  6248                           ; BSR set to: 0
  6249  001CD8  5199               	movf	_efgtoa$3578& (0+255),w,b
  6250  001CDA  119A               	iorwf	(_efgtoa$3578+1)& (0+255),w,b
  6251  001CDC  A4D8               	btfss	status,2,c
  6252  001CDE  EF73  F00E         	goto	u9951
  6253  001CE2  EF75  F00E         	goto	u9950
  6254  001CE6                     u9951:
  6255  001CE6  EF7B  F00E         	goto	l8927
  6256  001CEA                     u9950:
  6257  001CEA                     
  6258                           ; BSR set to: 0
  6259  001CEA  0E00               	movlw	0
  6260  001CEC  6F98               	movwf	(_efgtoa$3577+1)& (0+255),b
  6261  001CEE  0E65               	movlw	101
  6262  001CF0  6F97               	movwf	_efgtoa$3577& (0+255),b
  6263  001CF2  EF7F  F00E         	goto	l8929
  6264  001CF6                     l8927:
  6265                           
  6266                           ; BSR set to: 0
  6267  001CF6  0E00               	movlw	0
  6268  001CF8  6F98               	movwf	(_efgtoa$3577+1)& (0+255),b
  6269  001CFA  0E45               	movlw	69
  6270  001CFC  6F97               	movwf	_efgtoa$3577& (0+255),b
  6271  001CFE                     l8929:
  6272                           
  6273                           ; BSR set to: 0
  6274  001CFE  0E40               	movlw	low _dbuf
  6275  001D00  25B9               	addwf	efgtoa@i& (0+255),w,b
  6276  001D02  6ED9               	movwf	fsr2l,c
  6277  001D04  0E01               	movlw	high _dbuf
  6278  001D06  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6279  001D08  6EDA               	movwf	fsr2h,c
  6280  001D0A  0060  F25F  FFDF   	movff	_efgtoa$3577,indf2
  6281  001D10                     
  6282                           ; BSR set to: 0
  6283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6284  001D10  07AD               	decf	efgtoa@w& (0+255),f,b
  6285  001D12  A0D8               	btfss	status,0,c
  6286  001D14  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6287  001D16                     
  6288                           ; BSR set to: 0
  6289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6290  001D16  0E40               	movlw	low _dbuf
  6291  001D18  25C1               	addwf	efgtoa@n& (0+255),w,b
  6292  001D1A  6E14               	movwf	strcpy@dest^0,c
  6293  001D1C  0E01               	movlw	high _dbuf
  6294  001D1E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6295  001D20  6E15               	movwf	(strcpy@dest+1)^0,c
  6296  001D22  0E40               	movlw	low _dbuf
  6297  001D24  25B9               	addwf	efgtoa@i& (0+255),w,b
  6298  001D26  6E16               	movwf	strcpy@src^0,c
  6299  001D28  0E01               	movlw	high _dbuf
  6300  001D2A  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6301  001D2C  6E17               	movwf	(strcpy@src+1)^0,c
  6302  001D2E  EC82  F02C         	call	_strcpy	;wreg free
  6303  001D32                     l8935:
  6304                           
  6305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6306  001D32  C083  F026         	movff	efgtoa@fp,pad@fp
  6307  001D36  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6308  001D3A  0E40               	movlw	low _dbuf
  6309  001D3C  6E28               	movwf	pad@buf^0,c
  6310  001D3E  0E01               	movlw	high _dbuf
  6311  001D40  6E29               	movwf	(pad@buf+1)^0,c
  6312  001D42  C0AD  F02A         	movff	efgtoa@w,pad@p
  6313  001D46  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6314  001D4A  EC22  F029         	call	_pad	;wreg free
  6315  001D4E  C026  F083         	movff	?_pad,?_efgtoa
  6316  001D52  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6317  001D56                     l2177:
  6318  001D56  0012               	return		;funcret
  6319  001D58                     __end_of_efgtoa:
  6320                           	callstack 0
  6321                           
  6322 ;; *************** function _tolower *****************
  6323 ;; Defined at:
  6324 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  c               2   25[COMRAM] int 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  2   25[COMRAM] int 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2, status,0
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;Total ram usage:        8 bytes
  6343 ;; Hardware stack levels used: 1
  6344 ;; Hardware stack levels required when called: 9
  6345 ;; This function calls:
  6346 ;;		_isupper
  6347 ;; This function is called by:
  6348 ;;		_efgtoa
  6349 ;;		_vfpfcnvrt
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text14
  6354  00596E                     __ptext14:
  6355                           	callstack 0
  6356  00596E                     _tolower:
  6357                           	callstack 16
  6358  00596E  0EBF               	movlw	191
  6359  005970  6E1C               	movwf	??_tolower^0,c
  6360  005972  0EFF               	movlw	255
  6361  005974  6E1D               	movwf	(??_tolower+1)^0,c
  6362  005976  C01A  F01E         	movff	tolower@c,??_tolower+2
  6363  00597A  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  6364  00597E  501C               	movf	??_tolower^0,w,c
  6365  005980  261E               	addwf	(??_tolower+2)^0,f,c
  6366  005982  501D               	movf	(??_tolower+1)^0,w,c
  6367  005984  221F               	addwfc	(??_tolower+3)^0,f,c
  6368  005986  501F               	movf	(??_tolower+3)^0,w,c
  6369  005988  E10A               	bnz	u9140
  6370  00598A  0E1A               	movlw	26
  6371  00598C  5C1E               	subwf	(??_tolower+2)^0,w,c
  6372  00598E  A0D8               	btfss	status,0,c
  6373  005990  EFCC  F02C         	goto	u9141
  6374  005994  EFCF  F02C         	goto	u9140
  6375  005998                     u9141:
  6376  005998  0E01               	movlw	1
  6377  00599A  EFD0  F02C         	goto	u9150
  6378  00599E                     u9140:
  6379  00599E  0E00               	movlw	0
  6380  0059A0                     u9150:
  6381  0059A0  6E20               	movwf	_tolower$3697^0,c
  6382  0059A2  6A21               	clrf	(_tolower$3697+1)^0,c
  6383  0059A4  5020               	movf	_tolower$3697^0,w,c
  6384  0059A6  1021               	iorwf	(_tolower$3697+1)^0,w,c
  6385  0059A8  B4D8               	btfsc	status,2,c
  6386  0059AA  EFD9  F02C         	goto	u9161
  6387  0059AE  EFDB  F02C         	goto	u9160
  6388  0059B2                     u9161:
  6389  0059B2  EFE2  F02C         	goto	l2375
  6390  0059B6                     u9160:
  6391  0059B6  0E20               	movlw	32
  6392  0059B8  101A               	iorwf	tolower@c^0,w,c
  6393  0059BA  6E1A               	movwf	?_tolower^0,c
  6394  0059BC  501B               	movf	(tolower@c+1)^0,w,c
  6395  0059BE  6E1B               	movwf	(?_tolower+1)^0,c
  6396  0059C0  EFE6  F02C         	goto	l2380
  6397  0059C4                     l2375:
  6398  0059C4  C01A  F01A         	movff	tolower@c,?_tolower
  6399  0059C8  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  6400  0059CC                     l2380:
  6401  0059CC  0012               	return		;funcret
  6402  0059CE                     __end_of_tolower:
  6403                           	callstack 0
  6404                           
  6405 ;; *************** function _isupper *****************
  6406 ;; Defined at:
  6407 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  c               2   19[COMRAM] int 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  2   19[COMRAM] int 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;Total ram usage:        6 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; Hardware stack levels required when called: 8
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_efgtoa
  6432 ;;		_vfpfcnvrt
  6433 ;;		_tolower
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text15
  6438  005DC6                     __ptext15:
  6439                           	callstack 0
  6440  005DC6                     _isupper:
  6441                           	callstack 16
  6442  005DC6  0EBF               	movlw	191
  6443  005DC8  6E16               	movwf	??_isupper^0,c
  6444  005DCA  0EFF               	movlw	255
  6445  005DCC  6E17               	movwf	(??_isupper+1)^0,c
  6446  005DCE  C014  F018         	movff	isupper@c,??_isupper+2
  6447  005DD2  C015  F019         	movff	isupper@c+1,??_isupper+3
  6448  005DD6  5016               	movf	??_isupper^0,w,c
  6449  005DD8  2618               	addwf	(??_isupper+2)^0,f,c
  6450  005DDA  5017               	movf	(??_isupper+1)^0,w,c
  6451  005DDC  2219               	addwfc	(??_isupper+3)^0,f,c
  6452  005DDE  5019               	movf	(??_isupper+3)^0,w,c
  6453  005DE0  E10A               	bnz	u8080
  6454  005DE2  0E1A               	movlw	26
  6455  005DE4  5C18               	subwf	(??_isupper+2)^0,w,c
  6456  005DE6  A0D8               	btfss	status,0,c
  6457  005DE8  EFF8  F02E         	goto	u8081
  6458  005DEC  EFFB  F02E         	goto	u8080
  6459  005DF0                     u8081:
  6460  005DF0  0E01               	movlw	1
  6461  005DF2  EFFC  F02E         	goto	u8090
  6462  005DF6                     u8080:
  6463  005DF6  0E00               	movlw	0
  6464  005DF8                     u8090:
  6465  005DF8  6E14               	movwf	?_isupper^0,c
  6466  005DFA  6A15               	clrf	(?_isupper+1)^0,c
  6467  005DFC  0012               	return		;funcret
  6468  005DFE                     __end_of_isupper:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _strcpy *****************
  6472 ;; Defined at:
  6473 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6476 ;;		 -> dbuf(80), 
  6477 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6478 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  6479 ;;		 -> dbuf(80), 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  d               2   27[COMRAM] PTR unsigned char 
  6482 ;;		 -> dbuf(80), 
  6483 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6484 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  6485 ;;		 -> dbuf(80), 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  2   19[COMRAM] PTR unsigned char 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6498 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;Total ram usage:       10 bytes
  6500 ;; Hardware stack levels used: 1
  6501 ;; Hardware stack levels required when called: 8
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_efgtoa
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text16
  6510  005904                     __ptext16:
  6511                           	callstack 0
  6512  005904                     _strcpy:
  6513                           	callstack 16
  6514  005904  C016  F01A         	movff	strcpy@src,strcpy@s
  6515  005908  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6516  00590C  C014  F01C         	movff	strcpy@dest,strcpy@d
  6517  005910  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6518  005914                     l8529:
  6519  005914  501A               	movf	strcpy@s^0,w,c
  6520  005916  6E18               	movwf	??_strcpy^0,c
  6521  005918  501B               	movf	(strcpy@s+1)^0,w,c
  6522  00591A  6E19               	movwf	(??_strcpy+1)^0,c
  6523  00591C  4A1A               	infsnz	strcpy@s^0,f,c
  6524  00591E  2A1B               	incf	(strcpy@s+1)^0,f,c
  6525  005920  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6526  005926  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6527  00592C  0E00               	movlw	low (__smallconst shr (0+16))
  6528  00592E  6EF8               	movwf	tblptru,c
  6529  005930  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6530  005936  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6531  00593C  4A1C               	infsnz	strcpy@d^0,f,c
  6532  00593E  2A1D               	incf	(strcpy@d+1)^0,f,c
  6533  005940  0E0F               	movlw	(high __ramtop+-1)
  6534  005942  64F7               	cpfsgt	tblptrh,c
  6535  005944  D003               	bra	u9127
  6536  005946  0008               	tblrd		*
  6537  005948  50F5               	movf	tablat,w,c
  6538  00594A  D007               	bra	u9120
  6539  00594C                     u9127:
  6540  00594C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6541  005952  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6542  005958  50E7               	movf	indf1,w,c
  6543  00595A                     u9120:
  6544  00595A  6EDF               	movwf	indf2,c
  6545  00595C  50DF               	movf	indf2,w,c
  6546  00595E  A4D8               	btfss	status,2,c
  6547  005960  EFB4  F02C         	goto	u9131
  6548  005964  EFB6  F02C         	goto	u9130
  6549  005968                     u9131:
  6550  005968  EF8A  F02C         	goto	l8529
  6551  00596C                     u9130:
  6552  00596C  0012               	return		;funcret
  6553  00596E                     __end_of_strcpy:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function _floorf *****************
  6557 ;; Defined at:
  6558 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  x               4   53[COMRAM] float 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  u               4   25[BANK0 ] struct .
  6563 ;;  m               4   19[BANK0 ] unsigned long 
  6564 ;;  e               2   23[BANK0 ] int 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  4   53[COMRAM] float 
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;Total ram usage:       20 bytes
  6579 ;; Hardware stack levels used: 1
  6580 ;; Hardware stack levels required when called: 8
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_efgtoa
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text17
  6589  0039C8                     __ptext17:
  6590                           	callstack 0
  6591  0039C8                     _floorf:
  6592                           	callstack 16
  6593  0039C8  C118  F079         	movff	floorf@F527,floorf@u
  6594  0039CC  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  6595  0039D0  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  6596  0039D4  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  6597  0039D8  C036  F079         	movff	floorf@x,floorf@u
  6598  0039DC  C037  F07A         	movff	floorf@x+1,floorf@u+1
  6599  0039E0  C038  F07B         	movff	floorf@x+2,floorf@u+2
  6600  0039E4  C039  F07C         	movff	floorf@x+3,floorf@u+3
  6601  0039E8  0E81               	movlw	129
  6602  0039EA  0100               	movlb	0	; () banked
  6603  0039EC  6F6D               	movwf	??_floorf& (0+255),b
  6604  0039EE  0EFF               	movlw	255
  6605  0039F0  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6606  0039F2  C079  F06F         	movff	floorf@u,??_floorf+2
  6607  0039F6  C07A  F070         	movff	floorf@u+1,??_floorf+3
  6608  0039FA  C07B  F071         	movff	floorf@u+2,??_floorf+4
  6609  0039FE  C07C  F072         	movff	floorf@u+3,??_floorf+5
  6610  003A02  0E18               	movlw	24
  6611  003A04  EF09  F01D         	goto	u9170
  6612  003A08                     u9175:
  6613  003A08  90D8               	bcf	status,0,c
  6614  003A0A  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  6615  003A0C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6616  003A0E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6617  003A10  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6618  003A12                     u9170:
  6619  003A12  2EE8               	decfsz	wreg,f,c
  6620  003A14  EF04  F01D         	goto	u9175
  6621  003A18  516F               	movf	(??_floorf+2)& (0+255),w,b
  6622  003A1A  256D               	addwf	??_floorf& (0+255),w,b
  6623  003A1C  6F77               	movwf	floorf@e& (0+255),b
  6624  003A1E  0E00               	movlw	0
  6625  003A20  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  6626  003A22  6F78               	movwf	(floorf@e+1)& (0+255),b
  6627  003A24  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6628  003A26  EF1E  F01D         	goto	u9181
  6629  003A2A  5178               	movf	(floorf@e+1)& (0+255),w,b
  6630  003A2C  E109               	bnz	u9180
  6631  003A2E  0E17               	movlw	23
  6632  003A30  5D77               	subwf	floorf@e& (0+255),w,b
  6633  003A32  A0D8               	btfss	status,0,c
  6634  003A34  EF1E  F01D         	goto	u9181
  6635  003A38  EF20  F01D         	goto	u9180
  6636  003A3C                     u9181:
  6637  003A3C  EF2A  F01D         	goto	l8547
  6638  003A40                     u9180:
  6639  003A40                     l8545:
  6640                           
  6641                           ; BSR set to: 0
  6642  003A40  C036  F036         	movff	floorf@x,?_floorf
  6643  003A44  C037  F037         	movff	floorf@x+1,?_floorf+1
  6644  003A48  C038  F038         	movff	floorf@x+2,?_floorf+2
  6645  003A4C  C039  F039         	movff	floorf@x+3,?_floorf+3
  6646  003A50  EFEE  F01D         	goto	l2316
  6647  003A54                     l8547:
  6648                           
  6649                           ; BSR set to: 0
  6650  003A54  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6651  003A56  EF2F  F01D         	goto	u9191
  6652  003A5A  EF31  F01D         	goto	u9190
  6653  003A5E                     u9191:
  6654  003A5E  EFA2  F01D         	goto	l8557
  6655  003A62                     u9190:
  6656  003A62                     
  6657                           ; BSR set to: 0
  6658  003A62  C077  F06D         	movff	floorf@e,??_floorf
  6659  003A66  0EFF               	movlw	255
  6660  003A68  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6661  003A6A  0EFF               	movlw	255
  6662  003A6C  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6663  003A6E  0E7F               	movlw	127
  6664  003A70  6F70               	movwf	(??_floorf+3)& (0+255),b
  6665  003A72  0E00               	movlw	0
  6666  003A74  6F71               	movwf	(??_floorf+4)& (0+255),b
  6667  003A76                     u9205:
  6668  003A76  676D               	tstfsz	??_floorf& (0+255),b
  6669  003A78  EF40  F01D         	goto	u9206
  6670  003A7C  EF48  F01D         	goto	u9207
  6671  003A80                     u9206:
  6672  003A80  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  6673  003A82  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6674  003A84  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6675  003A86  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6676  003A88  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6677  003A8A  2F6D               	decfsz	??_floorf& (0+255),f,b
  6678  003A8C  EF3B  F01D         	goto	u9205
  6679  003A90                     u9207:
  6680  003A90  C06E  F073         	movff	??_floorf+1,floorf@m
  6681  003A94  C06F  F074         	movff	??_floorf+2,floorf@m+1
  6682  003A98  C070  F075         	movff	??_floorf+3,floorf@m+2
  6683  003A9C  C071  F076         	movff	??_floorf+4,floorf@m+3
  6684  003AA0  0100               	movlb	0	; () banked
  6685  003AA2  5173               	movf	floorf@m& (0+255),w,b
  6686  003AA4  1579               	andwf	floorf@u& (0+255),w,b
  6687  003AA6  6F6D               	movwf	??_floorf& (0+255),b
  6688  003AA8  5174               	movf	(floorf@m+1)& (0+255),w,b
  6689  003AAA  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6690  003AAC  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6691  003AAE  5175               	movf	(floorf@m+2)& (0+255),w,b
  6692  003AB0  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6693  003AB2  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6694  003AB4  5176               	movf	(floorf@m+3)& (0+255),w,b
  6695  003AB6  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6696  003AB8  6F70               	movwf	(??_floorf+3)& (0+255),b
  6697  003ABA  516D               	movf	??_floorf& (0+255),w,b
  6698  003ABC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6699  003ABE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6700  003AC0  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6701  003AC2  A4D8               	btfss	status,2,c
  6702  003AC4  EF66  F01D         	goto	u9211
  6703  003AC8  EF68  F01D         	goto	u9210
  6704  003ACC                     u9211:
  6705  003ACC  EF6A  F01D         	goto	l8553
  6706  003AD0                     u9210:
  6707  003AD0  EF20  F01D         	goto	l8545
  6708  003AD4                     l8553:
  6709                           
  6710                           ; BSR set to: 0
  6711  003AD4  C079  F06D         	movff	floorf@u,??_floorf
  6712  003AD8  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6713  003ADC  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6714  003AE0  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6715  003AE4  0E20               	movlw	32
  6716  003AE6  EF7A  F01D         	goto	u9220
  6717  003AEA                     u9225:
  6718  003AEA  90D8               	bcf	status,0,c
  6719  003AEC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6720  003AEE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6721  003AF0  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6722  003AF2  336D               	rrcf	??_floorf& (0+255),f,b
  6723  003AF4                     u9220:
  6724  003AF4  2EE8               	decfsz	wreg,f,c
  6725  003AF6  EF75  F01D         	goto	u9225
  6726  003AFA  516D               	movf	??_floorf& (0+255),w,b
  6727  003AFC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6728  003AFE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6729  003B00  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6730  003B02  B4D8               	btfsc	status,2,c
  6731  003B04  EF86  F01D         	goto	u9231
  6732  003B08  EF88  F01D         	goto	u9230
  6733  003B0C                     u9231:
  6734  003B0C  EF90  F01D         	goto	l2319
  6735  003B10                     u9230:
  6736  003B10                     
  6737                           ; BSR set to: 0
  6738  003B10  5173               	movf	floorf@m& (0+255),w,b
  6739  003B12  2779               	addwf	floorf@u& (0+255),f,b
  6740  003B14  5174               	movf	(floorf@m+1)& (0+255),w,b
  6741  003B16  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6742  003B18  5175               	movf	(floorf@m+2)& (0+255),w,b
  6743  003B1A  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6744  003B1C  5176               	movf	(floorf@m+3)& (0+255),w,b
  6745  003B1E  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6746  003B20                     l2319:
  6747                           
  6748                           ; BSR set to: 0
  6749  003B20  1D73               	comf	floorf@m& (0+255),w,b
  6750  003B22  6F6D               	movwf	??_floorf& (0+255),b
  6751  003B24  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6752  003B26  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6753  003B28  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6754  003B2A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6755  003B2C  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6756  003B2E  6F70               	movwf	(??_floorf+3)& (0+255),b
  6757  003B30  516D               	movf	??_floorf& (0+255),w,b
  6758  003B32  1779               	andwf	floorf@u& (0+255),f,b
  6759  003B34  516E               	movf	(??_floorf+1)& (0+255),w,b
  6760  003B36  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6761  003B38  516F               	movf	(??_floorf+2)& (0+255),w,b
  6762  003B3A  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6763  003B3C  5170               	movf	(??_floorf+3)& (0+255),w,b
  6764  003B3E  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6765  003B40  EFE6  F01D         	goto	l8565
  6766  003B44                     l8557:
  6767                           
  6768                           ; BSR set to: 0
  6769  003B44  C079  F06D         	movff	floorf@u,??_floorf
  6770  003B48  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6771  003B4C  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6772  003B50  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6773  003B54  0E20               	movlw	32
  6774  003B56  EFB2  F01D         	goto	u9240
  6775  003B5A                     u9245:
  6776  003B5A  90D8               	bcf	status,0,c
  6777  003B5C  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6778  003B5E  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6779  003B60  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6780  003B62  336D               	rrcf	??_floorf& (0+255),f,b
  6781  003B64                     u9240:
  6782  003B64  2EE8               	decfsz	wreg,f,c
  6783  003B66  EFAD  F01D         	goto	u9245
  6784  003B6A  516D               	movf	??_floorf& (0+255),w,b
  6785  003B6C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6786  003B6E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6787  003B70  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6788  003B72  A4D8               	btfss	status,2,c
  6789  003B74  EFBE  F01D         	goto	u9251
  6790  003B78  EFC0  F01D         	goto	u9250
  6791  003B7C                     u9251:
  6792  003B7C  EFCA  F01D         	goto	l8561
  6793  003B80                     u9250:
  6794  003B80                     
  6795                           ; BSR set to: 0
  6796  003B80  0E00               	movlw	0
  6797  003B82  6F79               	movwf	floorf@u& (0+255),b
  6798  003B84  0E00               	movlw	0
  6799  003B86  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6800  003B88  0E00               	movlw	0
  6801  003B8A  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6802  003B8C  0E00               	movlw	0
  6803  003B8E  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6804  003B90  EFE6  F01D         	goto	l8565
  6805  003B94                     l8561:
  6806                           
  6807                           ; BSR set to: 0
  6808  003B94  90D8               	bcf	status,0,c
  6809  003B96  3579               	rlcf	floorf@u& (0+255),w,b
  6810  003B98  6F6D               	movwf	??_floorf& (0+255),b
  6811  003B9A  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6812  003B9C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6813  003B9E  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6814  003BA0  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6815  003BA2  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6816  003BA4  6F70               	movwf	(??_floorf+3)& (0+255),b
  6817  003BA6  516D               	movf	??_floorf& (0+255),w,b
  6818  003BA8  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6819  003BAA  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6820  003BAC  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6821  003BAE  B4D8               	btfsc	status,2,c
  6822  003BB0  EFDC  F01D         	goto	u9261
  6823  003BB4  EFDE  F01D         	goto	u9260
  6824  003BB8                     u9261:
  6825  003BB8  EFE6  F01D         	goto	l8565
  6826  003BBC                     u9260:
  6827  003BBC                     
  6828                           ; BSR set to: 0
  6829  003BBC  0E00               	movlw	0
  6830  003BBE  6F79               	movwf	floorf@u& (0+255),b
  6831  003BC0  0E00               	movlw	0
  6832  003BC2  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6833  003BC4  0E80               	movlw	128
  6834  003BC6  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6835  003BC8  0EBF               	movlw	191
  6836  003BCA  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6837  003BCC                     l8565:
  6838                           
  6839                           ; BSR set to: 0
  6840  003BCC  C079  F036         	movff	floorf@u,?_floorf
  6841  003BD0  C07A  F037         	movff	floorf@u+1,?_floorf+1
  6842  003BD4  C07B  F038         	movff	floorf@u+2,?_floorf+2
  6843  003BD8  C07C  F039         	movff	floorf@u+3,?_floorf+3
  6844  003BDC                     l2316:
  6845                           
  6846                           ; BSR set to: 0
  6847  003BDC  0012               	return		;funcret
  6848  003BDE                     __end_of_floorf:
  6849                           	callstack 0
  6850                           
  6851 ;; *************** function ___fpclassifyf *****************
  6852 ;; Defined at:
  6853 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  x               4   19[COMRAM] float 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  u               4   29[COMRAM] struct .
  6858 ;;  e               2   27[COMRAM] int 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  2   19[COMRAM] int 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;Total ram usage:       14 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 8
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_efgtoa
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text18
  6883  004B56                     __ptext18:
  6884                           	callstack 0
  6885  004B56                     ___fpclassifyf:
  6886                           	callstack 16
  6887  004B56  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6888  004B5A  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6889  004B5E  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6890  004B62  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6891  004B66  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6892  004B6A  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6893  004B6E  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6894  004B72  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6895  004B76  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6896  004B7A  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6897  004B7E  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6898  004B82  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6899  004B86  0E18               	movlw	24
  6900  004B88  EFCB  F025         	goto	u9050
  6901  004B8C                     u9055:
  6902  004B8C  90D8               	bcf	status,0,c
  6903  004B8E  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6904  004B90  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6905  004B92  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6906  004B94  3218               	rrcf	??___fpclassifyf^0,f,c
  6907  004B96                     u9050:
  6908  004B96  2EE8               	decfsz	wreg,f,c
  6909  004B98  EFC6  F025         	goto	u9055
  6910  004B9C  5018               	movf	??___fpclassifyf^0,w,c
  6911  004B9E  6E1C               	movwf	___fpclassifyf@e^0,c
  6912  004BA0  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6913  004BA2  501C               	movf	___fpclassifyf@e^0,w,c
  6914  004BA4  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6915  004BA6  A4D8               	btfss	status,2,c
  6916  004BA8  EFD8  F025         	goto	u9061
  6917  004BAC  EFDA  F025         	goto	u9060
  6918  004BB0                     u9061:
  6919  004BB0  EFFA  F025         	goto	l8517
  6920  004BB4                     u9060:
  6921  004BB4  90D8               	bcf	status,0,c
  6922  004BB6  341E               	rlcf	___fpclassifyf@u^0,w,c
  6923  004BB8  6E18               	movwf	??___fpclassifyf^0,c
  6924  004BBA  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6925  004BBC  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6926  004BBE  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6927  004BC0  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6928  004BC2  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6929  004BC4  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6930  004BC6  5018               	movf	??___fpclassifyf^0,w,c
  6931  004BC8  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6932  004BCA  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6933  004BCC  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6934  004BCE  A4D8               	btfss	status,2,c
  6935  004BD0  EFEC  F025         	goto	u9071
  6936  004BD4  EFEE  F025         	goto	u9070
  6937  004BD8                     u9071:
  6938  004BD8  EFF4  F025         	goto	l8513
  6939  004BDC                     u9070:
  6940  004BDC  0E00               	movlw	0
  6941  004BDE  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6942  004BE0  0E02               	movlw	2
  6943  004BE2  6E14               	movwf	?___fpclassifyf^0,c
  6944  004BE4  EF29  F026         	goto	l2302
  6945  004BE8                     l8513:
  6946  004BE8  0E00               	movlw	0
  6947  004BEA  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6948  004BEC  0E03               	movlw	3
  6949  004BEE  6E14               	movwf	?___fpclassifyf^0,c
  6950  004BF0  EF29  F026         	goto	l2302
  6951  004BF4                     l8517:
  6952  004BF4  281C               	incf	___fpclassifyf@e^0,w,c
  6953  004BF6  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6954  004BF8  A4D8               	btfss	status,2,c
  6955  004BFA  EF01  F026         	goto	u9081
  6956  004BFE  EF03  F026         	goto	u9080
  6957  004C02                     u9081:
  6958  004C02  EF25  F026         	goto	l8523
  6959  004C06                     u9080:
  6960  004C06  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6961  004C0A  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6962  004C0E  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6963  004C12  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6964  004C16  0E09               	movlw	9
  6965  004C18                     u9095:
  6966  004C18  90D8               	bcf	status,0,c
  6967  004C1A  3618               	rlcf	??___fpclassifyf^0,f,c
  6968  004C1C  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6969  004C1E  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6970  004C20  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6971  004C22  2EE8               	decfsz	wreg,f,c
  6972  004C24  EF0C  F026         	goto	u9095
  6973  004C28  5018               	movf	??___fpclassifyf^0,w,c
  6974  004C2A  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6975  004C2C  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6976  004C2E  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6977  004C30  B4D8               	btfsc	status,2,c
  6978  004C32  EF1D  F026         	goto	u9101
  6979  004C36  EF20  F026         	goto	u9100
  6980  004C3A                     u9101:
  6981  004C3A  0E01               	movlw	1
  6982  004C3C  EF21  F026         	goto	u9110
  6983  004C40                     u9100:
  6984  004C40  0E00               	movlw	0
  6985  004C42                     u9110:
  6986  004C42  6E14               	movwf	?___fpclassifyf^0,c
  6987  004C44  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6988  004C46  EF29  F026         	goto	l2302
  6989  004C4A                     l8523:
  6990  004C4A  0E00               	movlw	0
  6991  004C4C  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6992  004C4E  0E04               	movlw	4
  6993  004C50  6E14               	movwf	?___fpclassifyf^0,c
  6994  004C52                     l2302:
  6995  004C52  0012               	return		;funcret
  6996  004C54                     __end_of___fpclassifyf:
  6997                           	callstack 0
  6998                           
  6999 ;; *************** function ___flsub *****************
  7000 ;; Defined at:
  7001 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  b               4   25[BANK0 ] int 
  7004 ;;  a               4   29[BANK0 ] int 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  4   25[BANK0 ] int 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0, cstack
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7016 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;Total ram usage:        8 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; Hardware stack levels required when called: 9
  7023 ;; This function calls:
  7024 ;;		___fladd
  7025 ;; This function is called by:
  7026 ;;		_efgtoa
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text19
  7031  005C06                     __ptext19:
  7032                           	callstack 0
  7033  005C06                     ___flsub:
  7034                           	callstack 15
  7035  005C06  0E00               	movlw	0
  7036  005C08  0100               	movlb	0	; () banked
  7037  005C0A  1B7D               	xorwf	___flsub@a& (0+255),f,b
  7038  005C0C  0E00               	movlw	0
  7039  005C0E  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  7040  005C10  0E00               	movlw	0
  7041  005C12  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  7042  005C14  0E80               	movlw	128
  7043  005C16  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  7044  005C18                     
  7045                           ; BSR set to: 0
  7046  005C18  C079  F06D         	movff	___flsub@b,___fladd@b
  7047  005C1C  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  7048  005C20  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  7049  005C24  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  7050  005C28  C07D  F071         	movff	___flsub@a,___fladd@a
  7051  005C2C  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  7052  005C30  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  7053  005C34  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  7054  005C38  ECA0  F011         	call	___fladd	;wreg free
  7055  005C3C  C06D  F079         	movff	?___fladd,?___flsub
  7056  005C40  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  7057  005C44  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  7058  005C48  C070  F07C         	movff	?___fladd+3,?___flsub+3
  7059  005C4C  0012               	return		;funcret
  7060  005C4E                     __end_of___flsub:
  7061                           	callstack 0
  7062                           
  7063 ;; *************** function ___flneg *****************
  7064 ;; Defined at:
  7065 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  f1              4   19[COMRAM] int 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  4   19[COMRAM] int 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;Total ram usage:        4 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 8
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_efgtoa
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text20
  7094  005DFE                     __ptext20:
  7095                           	callstack 0
  7096  005DFE                     ___flneg:
  7097                           	callstack 16
  7098  005DFE  5014               	movf	___flneg@f1^0,w,c
  7099  005E00  1015               	iorwf	(___flneg@f1+1)^0,w,c
  7100  005E02  1016               	iorwf	(___flneg@f1+2)^0,w,c
  7101  005E04  1017               	iorwf	(___flneg@f1+3)^0,w,c
  7102  005E06  B4D8               	btfsc	status,2,c
  7103  005E08  EF08  F02F         	goto	u8851
  7104  005E0C  EF0A  F02F         	goto	u8850
  7105  005E10                     u8851:
  7106  005E10  EF12  F02F         	goto	l8393
  7107  005E14                     u8850:
  7108  005E14  0E00               	movlw	0
  7109  005E16  1A14               	xorwf	___flneg@f1^0,f,c
  7110  005E18  0E00               	movlw	0
  7111  005E1A  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  7112  005E1C  0E00               	movlw	0
  7113  005E1E  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  7114  005E20  0E80               	movlw	128
  7115  005E22  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  7116  005E24                     l8393:
  7117  005E24  C014  F014         	movff	___flneg@f1,?___flneg
  7118  005E28  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  7119  005E2C  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  7120  005E30  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  7121  005E34  0012               	return		;funcret
  7122  005E36                     __end_of___flneg:
  7123                           	callstack 0
  7124                           
  7125 ;; *************** function ___fleq *****************
  7126 ;; Defined at:
  7127 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  ff1             4   19[COMRAM] int 
  7130 ;;  ff2             4   23[COMRAM] int 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;		None               void
  7135 ;; Registers used:
  7136 ;;		wreg, status,2, status,0
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7142 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;Total ram usage:       12 bytes
  7147 ;; Hardware stack levels used: 1
  7148 ;; Hardware stack levels required when called: 8
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_efgtoa
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text21
  7157  005476                     __ptext21:
  7158                           	callstack 0
  7159  005476                     ___fleq:
  7160                           	callstack 16
  7161  005476  0E00               	movlw	0
  7162  005478  1414               	andwf	___fleq@ff1^0,w,c
  7163  00547A  6E1C               	movwf	??___fleq^0,c
  7164  00547C  0E00               	movlw	0
  7165  00547E  1415               	andwf	(___fleq@ff1+1)^0,w,c
  7166  005480  6E1D               	movwf	(??___fleq+1)^0,c
  7167  005482  0E80               	movlw	128
  7168  005484  1416               	andwf	(___fleq@ff1+2)^0,w,c
  7169  005486  6E1E               	movwf	(??___fleq+2)^0,c
  7170  005488  0E7F               	movlw	127
  7171  00548A  1417               	andwf	(___fleq@ff1+3)^0,w,c
  7172  00548C  6E1F               	movwf	(??___fleq+3)^0,c
  7173  00548E  501C               	movf	??___fleq^0,w,c
  7174  005490  101D               	iorwf	(??___fleq+1)^0,w,c
  7175  005492  101E               	iorwf	(??___fleq+2)^0,w,c
  7176  005494  101F               	iorwf	(??___fleq+3)^0,w,c
  7177  005496  A4D8               	btfss	status,2,c
  7178  005498  EF50  F02A         	goto	u8771
  7179  00549C  EF52  F02A         	goto	u8770
  7180  0054A0                     u8771:
  7181  0054A0  EF5A  F02A         	goto	l8355
  7182  0054A4                     u8770:
  7183  0054A4  0E00               	movlw	0
  7184  0054A6  6E14               	movwf	___fleq@ff1^0,c
  7185  0054A8  0E00               	movlw	0
  7186  0054AA  6E15               	movwf	(___fleq@ff1+1)^0,c
  7187  0054AC  0E00               	movlw	0
  7188  0054AE  6E16               	movwf	(___fleq@ff1+2)^0,c
  7189  0054B0  0E00               	movlw	0
  7190  0054B2  6E17               	movwf	(___fleq@ff1+3)^0,c
  7191  0054B4                     l8355:
  7192  0054B4  0E00               	movlw	0
  7193  0054B6  1418               	andwf	___fleq@ff2^0,w,c
  7194  0054B8  6E1C               	movwf	??___fleq^0,c
  7195  0054BA  0E00               	movlw	0
  7196  0054BC  1419               	andwf	(___fleq@ff2+1)^0,w,c
  7197  0054BE  6E1D               	movwf	(??___fleq+1)^0,c
  7198  0054C0  0E80               	movlw	128
  7199  0054C2  141A               	andwf	(___fleq@ff2+2)^0,w,c
  7200  0054C4  6E1E               	movwf	(??___fleq+2)^0,c
  7201  0054C6  0E7F               	movlw	127
  7202  0054C8  141B               	andwf	(___fleq@ff2+3)^0,w,c
  7203  0054CA  6E1F               	movwf	(??___fleq+3)^0,c
  7204  0054CC  501C               	movf	??___fleq^0,w,c
  7205  0054CE  101D               	iorwf	(??___fleq+1)^0,w,c
  7206  0054D0  101E               	iorwf	(??___fleq+2)^0,w,c
  7207  0054D2  101F               	iorwf	(??___fleq+3)^0,w,c
  7208  0054D4  A4D8               	btfss	status,2,c
  7209  0054D6  EF6F  F02A         	goto	u8781
  7210  0054DA  EF71  F02A         	goto	u8780
  7211  0054DE                     u8781:
  7212  0054DE  EF79  F02A         	goto	l8359
  7213  0054E2                     u8780:
  7214  0054E2  0E00               	movlw	0
  7215  0054E4  6E18               	movwf	___fleq@ff2^0,c
  7216  0054E6  0E00               	movlw	0
  7217  0054E8  6E19               	movwf	(___fleq@ff2+1)^0,c
  7218  0054EA  0E00               	movlw	0
  7219  0054EC  6E1A               	movwf	(___fleq@ff2+2)^0,c
  7220  0054EE  0E00               	movlw	0
  7221  0054F0  6E1B               	movwf	(___fleq@ff2+3)^0,c
  7222  0054F2                     l8359:
  7223  0054F2  5018               	movf	___fleq@ff2^0,w,c
  7224  0054F4  1814               	xorwf	___fleq@ff1^0,w,c
  7225  0054F6  E10F               	bnz	u8790
  7226  0054F8  5019               	movf	(___fleq@ff2+1)^0,w,c
  7227  0054FA  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  7228  0054FC  E10C               	bnz	u8790
  7229  0054FE  501A               	movf	(___fleq@ff2+2)^0,w,c
  7230  005500  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  7231  005502  E109               	bnz	u8790
  7232  005504  501B               	movf	(___fleq@ff2+3)^0,w,c
  7233  005506  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  7234  005508  B4D8               	btfsc	status,2,c
  7235  00550A  EF89  F02A         	goto	u8791
  7236  00550E  EF8B  F02A         	goto	u8790
  7237  005512                     u8791:
  7238  005512  EF8E  F02A         	goto	l8363
  7239  005516                     u8790:
  7240  005516  90D8               	bcf	status,0,c
  7241  005518  EF8F  F02A         	goto	l1670
  7242  00551C                     l8363:
  7243  00551C  80D8               	bsf	status,0,c
  7244  00551E                     l1670:
  7245  00551E  0012               	return		;funcret
  7246  005520                     __end_of___fleq:
  7247                           	callstack 0
  7248                           
  7249 ;; *************** function ___awmod *****************
  7250 ;; Defined at:
  7251 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  dividend        2   19[COMRAM] int 
  7254 ;;  divisor         2   21[COMRAM] int 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;  sign            1   24[COMRAM] unsigned char 
  7257 ;;  counter         1   23[COMRAM] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2   19[COMRAM] int 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:        6 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 8
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_efgtoa
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text22
  7282  0053C6                     __ptext22:
  7283                           	callstack 0
  7284  0053C6                     ___awmod:
  7285                           	callstack 16
  7286  0053C6  0E00               	movlw	0
  7287  0053C8  6E19               	movwf	___awmod@sign^0,c
  7288  0053CA  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7289  0053CC  EFEC  F029         	goto	u8710
  7290  0053D0  EFEA  F029         	goto	u8711
  7291  0053D4                     u8711:
  7292  0053D4  EFF2  F029         	goto	l8323
  7293  0053D8                     u8710:
  7294  0053D8  6C14               	negf	___awmod@dividend^0,c
  7295  0053DA  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7296  0053DC  B0D8               	btfsc	status,0,c
  7297  0053DE  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7298  0053E0  0E01               	movlw	1
  7299  0053E2  6E19               	movwf	___awmod@sign^0,c
  7300  0053E4                     l8323:
  7301  0053E4  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7302  0053E6  EFF9  F029         	goto	u8720
  7303  0053EA  EFF7  F029         	goto	u8721
  7304  0053EE                     u8721:
  7305  0053EE  EFFD  F029         	goto	l8327
  7306  0053F2                     u8720:
  7307  0053F2  6C16               	negf	___awmod@divisor^0,c
  7308  0053F4  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7309  0053F6  B0D8               	btfsc	status,0,c
  7310  0053F8  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7311  0053FA                     l8327:
  7312  0053FA  5016               	movf	___awmod@divisor^0,w,c
  7313  0053FC  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7314  0053FE  B4D8               	btfsc	status,2,c
  7315  005400  EF04  F02A         	goto	u8731
  7316  005404  EF06  F02A         	goto	u8730
  7317  005408                     u8731:
  7318  005408  EF2A  F02A         	goto	l8343
  7319  00540C                     u8730:
  7320  00540C  0E01               	movlw	1
  7321  00540E  6E18               	movwf	___awmod@counter^0,c
  7322  005410  EF0E  F02A         	goto	l8333
  7323  005414                     l8331:
  7324  005414  90D8               	bcf	status,0,c
  7325  005416  3616               	rlcf	___awmod@divisor^0,f,c
  7326  005418  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7327  00541A  2A18               	incf	___awmod@counter^0,f,c
  7328  00541C                     l8333:
  7329  00541C  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7330  00541E  EF13  F02A         	goto	u8741
  7331  005422  EF15  F02A         	goto	u8740
  7332  005426                     u8741:
  7333  005426  EF0A  F02A         	goto	l8331
  7334  00542A                     u8740:
  7335  00542A                     l8335:
  7336  00542A  5016               	movf	___awmod@divisor^0,w,c
  7337  00542C  5C14               	subwf	___awmod@dividend^0,w,c
  7338  00542E  5017               	movf	(___awmod@divisor+1)^0,w,c
  7339  005430  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7340  005432  A0D8               	btfss	status,0,c
  7341  005434  EF1E  F02A         	goto	u8751
  7342  005438  EF20  F02A         	goto	u8750
  7343  00543C                     u8751:
  7344  00543C  EF24  F02A         	goto	l8339
  7345  005440                     u8750:
  7346  005440  5016               	movf	___awmod@divisor^0,w,c
  7347  005442  5E14               	subwf	___awmod@dividend^0,f,c
  7348  005444  5017               	movf	(___awmod@divisor+1)^0,w,c
  7349  005446  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7350  005448                     l8339:
  7351  005448  90D8               	bcf	status,0,c
  7352  00544A  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7353  00544C  3216               	rrcf	___awmod@divisor^0,f,c
  7354  00544E  2E18               	decfsz	___awmod@counter^0,f,c
  7355  005450  EF15  F02A         	goto	l8335
  7356  005454                     l8343:
  7357  005454  5019               	movf	___awmod@sign^0,w,c
  7358  005456  B4D8               	btfsc	status,2,c
  7359  005458  EF30  F02A         	goto	u8761
  7360  00545C  EF32  F02A         	goto	u8760
  7361  005460                     u8761:
  7362  005460  EF36  F02A         	goto	l8347
  7363  005464                     u8760:
  7364  005464  6C14               	negf	___awmod@dividend^0,c
  7365  005466  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7366  005468  B0D8               	btfsc	status,0,c
  7367  00546A  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7368  00546C                     l8347:
  7369  00546C  C014  F014         	movff	___awmod@dividend,?___awmod
  7370  005470  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7371  005474  0012               	return		;funcret
  7372  005476                     __end_of___awmod:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _dtoa *****************
  7376 ;; Defined at:
  7377 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7380 ;;		 -> NULL(0), 
  7381 ;;  d               8    2[BANK0 ] long long 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  n               8   18[BANK0 ] long long 
  7384 ;;  i               2   26[BANK0 ] int 
  7385 ;;  s               2   16[BANK0 ] int 
  7386 ;;  w               2   14[BANK0 ] int 
  7387 ;;  p               2   12[BANK0 ] int 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  2    0[BANK0 ] int 
  7390 ;; Registers used:
  7391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7397 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;Total ram usage:       36 bytes
  7402 ;; Hardware stack levels used: 1
  7403 ;; Hardware stack levels required when called: 13
  7404 ;; This function calls:
  7405 ;;		___aodiv
  7406 ;;		___aomod
  7407 ;;		_abs
  7408 ;;		_pad
  7409 ;; This function is called by:
  7410 ;;		_vfpfcnvrt
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text23
  7415  002FEE                     __ptext23:
  7416                           	callstack 0
  7417  002FEE                     _dtoa:
  7418                           	callstack 12
  7419  002FEE                     
  7420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7421  002FEE  C062  F072         	movff	dtoa@d,dtoa@n
  7422  002FF2  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7423  002FF6  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7424  002FFA  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7425  002FFE  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7426  003002  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7427  003006  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7428  00300A  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7429  00300E                     
  7430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7431  00300E  0100               	movlb	0	; () banked
  7432  003010  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7433  003012  EF0D  F018         	goto	u9271
  7434  003016  EF10  F018         	goto	u9270
  7435  00301A                     u9271:
  7436  00301A  0E01               	movlw	1
  7437  00301C  EF11  F018         	goto	u9280
  7438  003020                     u9270:
  7439  003020  0E00               	movlw	0
  7440  003022                     u9280:
  7441  003022  6F70               	movwf	dtoa@s& (0+255),b
  7442  003024  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7443                           
  7444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7445  003026  5170               	movf	dtoa@s& (0+255),w,b
  7446  003028  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7447  00302A  B4D8               	btfsc	status,2,c
  7448  00302C  EF1A  F018         	goto	u9291
  7449  003030  EF1C  F018         	goto	u9290
  7450  003034                     u9291:
  7451  003034  EF2C  F018         	goto	l8575
  7452  003038                     u9290:
  7453  003038                     
  7454                           ; BSR set to: 0
  7455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7456  003038  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7457  00303A  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7458  00303C  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7459  00303E  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7460  003040  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7461  003042  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7462  003044  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7463  003046  6D72               	negf	dtoa@n& (0+255),b
  7464  003048  0E00               	movlw	0
  7465  00304A  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7466  00304C  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7467  00304E  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7468  003050  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7469  003052  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7470  003054  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7471  003056  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7472  003058                     l8575:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7476  003058  BE3D               	btfsc	(_prec+1)^0,7,c
  7477  00305A  EF31  F018         	goto	u9301
  7478  00305E  EF33  F018         	goto	u9300
  7479  003062                     u9301:
  7480  003062  EF34  F018         	goto	l8579
  7481  003066                     u9300:
  7482  003066                     
  7483                           ; BSR set to: 0
  7484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7485  003066  923E               	bcf	_flags^0,1,c
  7486  003068                     l8579:
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7490  003068  BE3D               	btfsc	(_prec+1)^0,7,c
  7491  00306A  EF41  F018         	goto	u9310
  7492  00306E  503D               	movf	(_prec+1)^0,w,c
  7493  003070  E106               	bnz	u9311
  7494  003072  043C               	decf	_prec^0,w,c
  7495  003074  B0D8               	btfsc	status,0,c
  7496  003076  EF3F  F018         	goto	u9311
  7497  00307A  EF41  F018         	goto	u9310
  7498  00307E                     u9311:
  7499  00307E  EF47  F018         	goto	l2139
  7500  003082                     u9310:
  7501  003082                     
  7502                           ; BSR set to: 0
  7503  003082  0E00               	movlw	0
  7504  003084  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7505  003086  0E01               	movlw	1
  7506  003088  6F6C               	movwf	dtoa@p& (0+255),b
  7507  00308A  EF4B  F018         	goto	l2141
  7508  00308E                     l2139:
  7509                           
  7510                           ; BSR set to: 0
  7511  00308E  C03C  F06C         	movff	_prec,dtoa@p
  7512  003092  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7513  003096                     l2141:
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7517  003096  C03A  F06E         	movff	_width,dtoa@w
  7518  00309A  C03B  F06F         	movff	_width+1,dtoa@w+1
  7519  00309E                     
  7520                           ; BSR set to: 0
  7521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7522  00309E  5170               	movf	dtoa@s& (0+255),w,b
  7523  0030A0  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7524  0030A2  A4D8               	btfss	status,2,c
  7525  0030A4  EF56  F018         	goto	u9321
  7526  0030A8  EF58  F018         	goto	u9320
  7527  0030AC                     u9321:
  7528  0030AC  EF5F  F018         	goto	l8587
  7529  0030B0                     u9320:
  7530  0030B0                     
  7531                           ; BSR set to: 0
  7532  0030B0  A43E               	btfss	_flags^0,2,c
  7533  0030B2  EF5D  F018         	goto	u9331
  7534  0030B6  EF5F  F018         	goto	u9330
  7535  0030BA                     u9331:
  7536  0030BA  EF62  F018         	goto	l8589
  7537  0030BE                     u9330:
  7538  0030BE                     l8587:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7542  0030BE  076E               	decf	dtoa@w& (0+255),f,b
  7543  0030C0  A0D8               	btfss	status,0,c
  7544  0030C2  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7545  0030C4                     l8589:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7549  0030C4  0E00               	movlw	0
  7550  0030C6  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7551  0030C8  0E4F               	movlw	79
  7552  0030CA  6F7A               	movwf	dtoa@i& (0+255),b
  7553  0030CC                     
  7554                           ; BSR set to: 0
  7555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7556  0030CC  0E00               	movlw	0
  7557  0030CE  0101               	movlb	1	; () banked
  7558  0030D0  6F8F               	movwf	(_dbuf+79)& (0+255),b
  7559                           
  7560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7561  0030D2  EFE8  F018         	goto	l8603
  7562  0030D6                     l8593:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7566  0030D6  077A               	decf	dtoa@i& (0+255),f,b
  7567  0030D8  A0D8               	btfss	status,0,c
  7568  0030DA  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7569  0030DC                     
  7570                           ; BSR set to: 0
  7571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7572  0030DC  0E40               	movlw	low _dbuf
  7573  0030DE  257A               	addwf	dtoa@i& (0+255),w,b
  7574  0030E0  6ED9               	movwf	fsr2l,c
  7575  0030E2  0E01               	movlw	high _dbuf
  7576  0030E4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7577  0030E6  6EDA               	movwf	fsr2h,c
  7578  0030E8  C072  F014         	movff	dtoa@n,___aomod@dividend
  7579  0030EC  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7580  0030F0  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7581  0030F4  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7582  0030F8  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7583  0030FC  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7584  003100  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7585  003104  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7586  003108  0E0A               	movlw	10
  7587  00310A  6E1C               	movwf	___aomod@divisor^0,c
  7588  00310C  0E00               	movlw	0
  7589  00310E  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7590  003110  0E00               	movlw	0
  7591  003112  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7592  003114  0E00               	movlw	0
  7593  003116  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7594  003118  0E00               	movlw	0
  7595  00311A  6E20               	movwf	(___aomod@divisor+4)^0,c
  7596  00311C  0E00               	movlw	0
  7597  00311E  6E21               	movwf	(___aomod@divisor+5)^0,c
  7598  003120  0E00               	movlw	0
  7599  003122  6E22               	movwf	(___aomod@divisor+6)^0,c
  7600  003124  0E00               	movlw	0
  7601  003126  6E23               	movwf	(___aomod@divisor+7)^0,c
  7602  003128  EC8C  F021         	call	___aomod	;wreg free
  7603  00312C  C014  F031         	movff	?___aomod,??_dtoa
  7604  003130  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7605  003134  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7606  003138  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7607  00313C  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7608  003140  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7609  003144  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7610  003148  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7611  00314C  C031  F026         	movff	??_dtoa,abs@a
  7612  003150  C033  F027         	movff	??_dtoa+2,abs@a+1
  7613  003154  EC6B  F02E         	call	_abs	;wreg free
  7614  003158  5026               	movf	?_abs^0,w,c
  7615  00315A  0F30               	addlw	48
  7616  00315C  6EDF               	movwf	indf2,c
  7617  00315E                     
  7618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7619  00315E  0100               	movlb	0	; () banked
  7620  003160  076C               	decf	dtoa@p& (0+255),f,b
  7621  003162  A0D8               	btfss	status,0,c
  7622  003164  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7623  003166                     
  7624                           ; BSR set to: 0
  7625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7626  003166  076E               	decf	dtoa@w& (0+255),f,b
  7627  003168  A0D8               	btfss	status,0,c
  7628  00316A  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7629  00316C                     
  7630                           ; BSR set to: 0
  7631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7632  00316C  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7633  003170  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7634  003174  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7635  003178  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7636  00317C  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7637  003180  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7638  003184  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7639  003188  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7640  00318C  0E0A               	movlw	10
  7641  00318E  6E1C               	movwf	___aodiv@divisor^0,c
  7642  003190  0E00               	movlw	0
  7643  003192  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7644  003194  0E00               	movlw	0
  7645  003196  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7646  003198  0E00               	movlw	0
  7647  00319A  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7648  00319C  0E00               	movlw	0
  7649  00319E  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7650  0031A0  0E00               	movlw	0
  7651  0031A2  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7652  0031A4  0E00               	movlw	0
  7653  0031A6  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7654  0031A8  0E00               	movlw	0
  7655  0031AA  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7656  0031AC  ECC8  F020         	call	___aodiv	;wreg free
  7657  0031B0  C014  F072         	movff	?___aodiv,dtoa@n
  7658  0031B4  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7659  0031B8  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7660  0031BC  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7661  0031C0  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7662  0031C4  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7663  0031C8  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7664  0031CC  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7665  0031D0                     l8603:
  7666                           
  7667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7668  0031D0  0100               	movlb	0	; () banked
  7669  0031D2  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7670  0031D4  EFF4  F018         	goto	u9341
  7671  0031D8  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7672  0031DA  E108               	bnz	u9340
  7673  0031DC  057A               	decf	dtoa@i& (0+255),w,b
  7674  0031DE  A0D8               	btfss	status,0,c
  7675  0031E0  EFF4  F018         	goto	u9341
  7676  0031E4  EFF6  F018         	goto	u9340
  7677  0031E8                     u9341:
  7678  0031E8  EF26  F019         	goto	l8613
  7679  0031EC                     u9340:
  7680  0031EC                     
  7681                           ; BSR set to: 0
  7682  0031EC  5172               	movf	dtoa@n& (0+255),w,b
  7683  0031EE  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7684  0031F0  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7685  0031F2  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7686  0031F4  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7687  0031F6  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7688  0031F8  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7689  0031FA  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7690  0031FC  A4D8               	btfss	status,2,c
  7691  0031FE  EF03  F019         	goto	u9351
  7692  003202  EF05  F019         	goto	u9350
  7693  003206                     u9351:
  7694  003206  EF6B  F018         	goto	l8593
  7695  00320A                     u9350:
  7696  00320A                     
  7697                           ; BSR set to: 0
  7698  00320A  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7699  00320C  EF12  F019         	goto	u9360
  7700  003210  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7701  003212  E106               	bnz	u9361
  7702  003214  056C               	decf	dtoa@p& (0+255),w,b
  7703  003216  B0D8               	btfsc	status,0,c
  7704  003218  EF10  F019         	goto	u9361
  7705  00321C  EF12  F019         	goto	u9360
  7706  003220                     u9361:
  7707  003220  EF6B  F018         	goto	l8593
  7708  003224                     u9360:
  7709  003224                     
  7710                           ; BSR set to: 0
  7711  003224  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7712  003226  EF1D  F019         	goto	u9371
  7713  00322A  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7714  00322C  E108               	bnz	u9370
  7715  00322E  056E               	decf	dtoa@w& (0+255),w,b
  7716  003230  A0D8               	btfss	status,0,c
  7717  003232  EF1D  F019         	goto	u9371
  7718  003236  EF1F  F019         	goto	u9370
  7719  00323A                     u9371:
  7720  00323A  EF26  F019         	goto	l8613
  7721  00323E                     u9370:
  7722  00323E                     
  7723                           ; BSR set to: 0
  7724  00323E  B23E               	btfsc	_flags^0,1,c
  7725  003240  EF24  F019         	goto	u9381
  7726  003244  EF26  F019         	goto	u9380
  7727  003248                     u9381:
  7728  003248  EF6B  F018         	goto	l8593
  7729  00324C                     u9380:
  7730  00324C                     l8613:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7734  00324C  5170               	movf	dtoa@s& (0+255),w,b
  7735  00324E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7736  003250  A4D8               	btfss	status,2,c
  7737  003252  EF2D  F019         	goto	u9391
  7738  003256  EF2F  F019         	goto	u9390
  7739  00325A                     u9391:
  7740  00325A  EF36  F019         	goto	l8617
  7741  00325E                     u9390:
  7742  00325E                     
  7743                           ; BSR set to: 0
  7744  00325E  A43E               	btfss	_flags^0,2,c
  7745  003260  EF34  F019         	goto	u9401
  7746  003264  EF36  F019         	goto	u9400
  7747  003268                     u9401:
  7748  003268  EF55  F019         	goto	l8627
  7749  00326C                     u9400:
  7750  00326C                     l8617:
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7754  00326C  077A               	decf	dtoa@i& (0+255),f,b
  7755  00326E  A0D8               	btfss	status,0,c
  7756  003270  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7757  003272                     
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7760  003272  5170               	movf	dtoa@s& (0+255),w,b
  7761  003274  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7762  003276  A4D8               	btfss	status,2,c
  7763  003278  EF40  F019         	goto	u9411
  7764  00327C  EF42  F019         	goto	u9410
  7765  003280                     u9411:
  7766  003280  EF48  F019         	goto	l8623
  7767  003284                     u9410:
  7768  003284                     
  7769                           ; BSR set to: 0
  7770  003284  0E00               	movlw	0
  7771  003286  6F6B               	movwf	(_dtoa$3543+1)& (0+255),b
  7772  003288  0E2B               	movlw	43
  7773  00328A  6F6A               	movwf	_dtoa$3543& (0+255),b
  7774  00328C  EF4C  F019         	goto	l8625
  7775  003290                     l8623:
  7776                           
  7777                           ; BSR set to: 0
  7778  003290  0E00               	movlw	0
  7779  003292  6F6B               	movwf	(_dtoa$3543+1)& (0+255),b
  7780  003294  0E2D               	movlw	45
  7781  003296  6F6A               	movwf	_dtoa$3543& (0+255),b
  7782  003298                     l8625:
  7783                           
  7784                           ; BSR set to: 0
  7785  003298  0E40               	movlw	low _dbuf
  7786  00329A  257A               	addwf	dtoa@i& (0+255),w,b
  7787  00329C  6ED9               	movwf	fsr2l,c
  7788  00329E  0E01               	movlw	high _dbuf
  7789  0032A0  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7790  0032A2  6EDA               	movwf	fsr2h,c
  7791  0032A4  0060  F1AB  FFDF   	movff	_dtoa$3543,indf2
  7792  0032AA                     l8627:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7796  0032AA  C060  F026         	movff	dtoa@fp,pad@fp
  7797  0032AE  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7798  0032B2  0E40               	movlw	low _dbuf
  7799  0032B4  257A               	addwf	dtoa@i& (0+255),w,b
  7800  0032B6  6E28               	movwf	pad@buf^0,c
  7801  0032B8  0E01               	movlw	high _dbuf
  7802  0032BA  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7803  0032BC  6E29               	movwf	(pad@buf+1)^0,c
  7804  0032BE  C06E  F02A         	movff	dtoa@w,pad@p
  7805  0032C2  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7806  0032C6  EC22  F029         	call	_pad	;wreg free
  7807  0032CA  C026  F060         	movff	?_pad,?_dtoa
  7808  0032CE  C027  F061         	movff	?_pad+1,?_dtoa+1
  7809  0032D2  0012               	return		;funcret
  7810  0032D4                     __end_of_dtoa:
  7811                           	callstack 0
  7812                           
  7813 ;; *************** function _pad *****************
  7814 ;; Defined at:
  7815 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7818 ;;		 -> NULL(0), 
  7819 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7820 ;;		 -> dbuf(80), 
  7821 ;;  p               2   41[COMRAM] int 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  w               2   46[COMRAM] int 
  7824 ;;  i               2   44[COMRAM] int 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  2   37[COMRAM] int 
  7827 ;; Registers used:
  7828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7834 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;Total ram usage:       11 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; Hardware stack levels required when called: 12
  7841 ;; This function calls:
  7842 ;;		_fputc
  7843 ;;		_fputs
  7844 ;;		_strlen
  7845 ;; This function is called by:
  7846 ;;		_dtoa
  7847 ;;		_efgtoa
  7848 ;;		_utoa
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text24
  7853  005244                     __ptext24:
  7854                           	callstack 0
  7855  005244                     _pad:
  7856                           	callstack 12
  7857  005244                     
  7858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7859  005244  A03E               	btfss	_flags^0,0,c
  7860  005246  EF27  F029         	goto	u9001
  7861  00524A  EF29  F029         	goto	u9000
  7862  00524E                     u9001:
  7863  00524E  EF33  F029         	goto	l8483
  7864  005252                     u9000:
  7865  005252                     
  7866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7867  005252  C028  F01F         	movff	pad@buf,fputs@s
  7868  005256  C029  F020         	movff	pad@buf+1,fputs@s+1
  7869  00525A  C026  F021         	movff	pad@fp,fputs@fp
  7870  00525E  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7871  005262  EC27  F02E         	call	_fputs	;wreg free
  7872  005266                     l8483:
  7873                           
  7874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7875  005266  BE2B               	btfsc	(pad@p+1)^0,7,c
  7876  005268  EF38  F029         	goto	u9011
  7877  00526C  EF3A  F029         	goto	u9010
  7878  005270                     u9011:
  7879  005270  EF40  F029         	goto	l8487
  7880  005274                     u9010:
  7881  005274  C02A  F02F         	movff	pad@p,pad@w
  7882  005278  C02B  F030         	movff	pad@p+1,pad@w+1
  7883  00527C  EF44  F029         	goto	l2128
  7884  005280                     l8487:
  7885  005280  0E00               	movlw	0
  7886  005282  6E30               	movwf	(pad@w+1)^0,c
  7887  005284  0E00               	movlw	0
  7888  005286  6E2F               	movwf	pad@w^0,c
  7889  005288                     l2128:
  7890                           
  7891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7892  005288  0E00               	movlw	0
  7893  00528A  6E2E               	movwf	(pad@i+1)^0,c
  7894  00528C  0E00               	movlw	0
  7895  00528E  6E2D               	movwf	pad@i^0,c
  7896                           
  7897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7898  005290  EF56  F029         	goto	l8493
  7899  005294                     l8489:
  7900                           
  7901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7902  005294  0E00               	movlw	0
  7903  005296  6E17               	movwf	(fputc@c+1)^0,c
  7904  005298  0E20               	movlw	32
  7905  00529A  6E16               	movwf	fputc@c^0,c
  7906  00529C  C026  F018         	movff	pad@fp,fputc@fp
  7907  0052A0  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7908  0052A4  EC32  F02B         	call	_fputc	;wreg free
  7909  0052A8                     
  7910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7911  0052A8  4A2D               	infsnz	pad@i^0,f,c
  7912  0052AA  2A2E               	incf	(pad@i+1)^0,f,c
  7913  0052AC                     l8493:
  7914                           
  7915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7916  0052AC  502F               	movf	pad@w^0,w,c
  7917  0052AE  5C2D               	subwf	pad@i^0,w,c
  7918  0052B0  502E               	movf	(pad@i+1)^0,w,c
  7919  0052B2  0A80               	xorlw	128
  7920  0052B4  6E2C               	movwf	??_pad^0,c
  7921  0052B6  5030               	movf	(pad@w+1)^0,w,c
  7922  0052B8  0A80               	xorlw	128
  7923  0052BA  582C               	subwfb	??_pad^0,w,c
  7924  0052BC  A0D8               	btfss	status,0,c
  7925  0052BE  EF63  F029         	goto	u9021
  7926  0052C2  EF65  F029         	goto	u9020
  7927  0052C6                     u9021:
  7928  0052C6  EF4A  F029         	goto	l8489
  7929  0052CA                     u9020:
  7930  0052CA                     
  7931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7932  0052CA  B03E               	btfsc	_flags^0,0,c
  7933  0052CC  EF6A  F029         	goto	u9031
  7934  0052D0  EF6C  F029         	goto	u9030
  7935  0052D4                     u9031:
  7936  0052D4  EF76  F029         	goto	l8497
  7937  0052D8                     u9030:
  7938  0052D8                     
  7939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7940  0052D8  C028  F01F         	movff	pad@buf,fputs@s
  7941  0052DC  C029  F020         	movff	pad@buf+1,fputs@s+1
  7942  0052E0  C026  F021         	movff	pad@fp,fputs@fp
  7943  0052E4  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7944  0052E8  EC27  F02E         	call	_fputs	;wreg free
  7945  0052EC                     l8497:
  7946                           
  7947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7948  0052EC  C028  F014         	movff	pad@buf,strlen@s
  7949  0052F0  C029  F015         	movff	pad@buf+1,strlen@s+1
  7950  0052F4  EC8B  F02E         	call	_strlen	;wreg free
  7951  0052F8  502F               	movf	pad@w^0,w,c
  7952  0052FA  2414               	addwf	?_strlen^0,w,c
  7953  0052FC  6E26               	movwf	?_pad^0,c
  7954  0052FE  5030               	movf	(pad@w+1)^0,w,c
  7955  005300  2015               	addwfc	(?_strlen+1)^0,w,c
  7956  005302  6E27               	movwf	(?_pad+1)^0,c
  7957  005304  0012               	return		;funcret
  7958  005306                     __end_of_pad:
  7959                           	callstack 0
  7960                           
  7961 ;; *************** function _strlen *****************
  7962 ;; Defined at:
  7963 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7966 ;;		 -> dbuf(80), 
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;  a               2   21[COMRAM] PTR const unsigned char 
  7969 ;;		 -> dbuf(80), 
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  2   19[COMRAM] unsigned int 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;Total ram usage:        4 bytes
  7984 ;; Hardware stack levels used: 1
  7985 ;; Hardware stack levels required when called: 8
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_pad
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text25
  7994  005D16                     __ptext25:
  7995                           	callstack 0
  7996  005D16                     _strlen:
  7997                           	callstack 15
  7998  005D16  C014  F016         	movff	strlen@s,strlen@a
  7999  005D1A  C015  F017         	movff	strlen@s+1,strlen@a+1
  8000  005D1E  EF93  F02E         	goto	l7907
  8001  005D22                     l7905:
  8002  005D22  4A14               	infsnz	strlen@s^0,f,c
  8003  005D24  2A15               	incf	(strlen@s+1)^0,f,c
  8004  005D26                     l7907:
  8005  005D26  0060  F053  FFD9   	movff	strlen@s,fsr2l
  8006  005D2C  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  8007  005D32  50DF               	movf	indf2,w,c
  8008  005D34  A4D8               	btfss	status,2,c
  8009  005D36  EF9F  F02E         	goto	u8071
  8010  005D3A  EFA1  F02E         	goto	u8070
  8011  005D3E                     u8071:
  8012  005D3E  EF91  F02E         	goto	l7905
  8013  005D42                     u8070:
  8014  005D42  5016               	movf	strlen@a^0,w,c
  8015  005D44  5C14               	subwf	strlen@s^0,w,c
  8016  005D46  6E14               	movwf	?_strlen^0,c
  8017  005D48  5017               	movf	(strlen@a+1)^0,w,c
  8018  005D4A  5815               	subwfb	(strlen@s+1)^0,w,c
  8019  005D4C  6E15               	movwf	(?_strlen+1)^0,c
  8020  005D4E  0012               	return		;funcret
  8021  005D50                     __end_of_strlen:
  8022                           	callstack 0
  8023                           
  8024 ;; *************** function _fputs *****************
  8025 ;; Defined at:
  8026 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8029 ;;		 -> dbuf(80), 
  8030 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8031 ;;		 -> NULL(0), 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  i               2   35[COMRAM] int 
  8034 ;;  c               1   34[COMRAM] unsigned char 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  2   30[COMRAM] int 
  8037 ;; Registers used:
  8038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;Total ram usage:        7 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; Hardware stack levels required when called: 11
  8051 ;; This function calls:
  8052 ;;		_fputc
  8053 ;; This function is called by:
  8054 ;;		_pad
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text26
  8059  005C4E                     __ptext26:
  8060                           	callstack 0
  8061  005C4E                     _fputs:
  8062                           	callstack 12
  8063  005C4E  0E00               	movlw	0
  8064  005C50  6E25               	movwf	(fputs@i+1)^0,c
  8065  005C52  0E00               	movlw	0
  8066  005C54  6E24               	movwf	fputs@i^0,c
  8067  005C56  EF38  F02E         	goto	l7901
  8068  005C5A                     l7897:
  8069  005C5A  C023  F016         	movff	fputs@c,fputc@c
  8070  005C5E  6A17               	clrf	(fputc@c+1)^0,c
  8071  005C60  C021  F018         	movff	fputs@fp,fputc@fp
  8072  005C64  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8073  005C68  EC32  F02B         	call	_fputc	;wreg free
  8074  005C6C  4A24               	infsnz	fputs@i^0,f,c
  8075  005C6E  2A25               	incf	(fputs@i+1)^0,f,c
  8076  005C70                     l7901:
  8077  005C70  5024               	movf	fputs@i^0,w,c
  8078  005C72  241F               	addwf	fputs@s^0,w,c
  8079  005C74  6ED9               	movwf	fsr2l,c
  8080  005C76  5025               	movf	(fputs@i+1)^0,w,c
  8081  005C78  2020               	addwfc	(fputs@s+1)^0,w,c
  8082  005C7A  6EDA               	movwf	fsr2h,c
  8083  005C7C  50DF               	movf	indf2,w,c
  8084  005C7E  6E23               	movwf	fputs@c^0,c
  8085  005C80  5023               	movf	fputs@c^0,w,c
  8086  005C82  A4D8               	btfss	status,2,c
  8087  005C84  EF46  F02E         	goto	u8061
  8088  005C88  EF48  F02E         	goto	u8060
  8089  005C8C                     u8061:
  8090  005C8C  EF2D  F02E         	goto	l7897
  8091  005C90                     u8060:
  8092  005C90  0012               	return		;funcret
  8093  005C92                     __end_of_fputs:
  8094                           	callstack 0
  8095                           
  8096 ;; *************** function _fputc *****************
  8097 ;; Defined at:
  8098 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  c               2   21[COMRAM] int 
  8101 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8102 ;;		 -> NULL(0), 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  2   21[COMRAM] int 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;Total ram usage:        9 bytes
  8119 ;; Hardware stack levels used: 1
  8120 ;; Hardware stack levels required when called: 10
  8121 ;; This function calls:
  8122 ;;		_putch
  8123 ;; This function is called by:
  8124 ;;		_pad
  8125 ;;		_vfpfcnvrt
  8126 ;;		_fputs
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           	psect	text27
  8131  005664                     __ptext27:
  8132                           	callstack 0
  8133  005664                     _fputc:
  8134                           	callstack 12
  8135  005664  5018               	movf	fputc@fp^0,w,c
  8136  005666  1019               	iorwf	(fputc@fp+1)^0,w,c
  8137  005668  B4D8               	btfsc	status,2,c
  8138  00566A  EF39  F02B         	goto	u7631
  8139  00566E  EF3B  F02B         	goto	u7630
  8140  005672                     u7631:
  8141  005672  EF44  F02B         	goto	l7683
  8142  005676                     u7630:
  8143  005676  5018               	movf	fputc@fp^0,w,c
  8144  005678  1019               	iorwf	(fputc@fp+1)^0,w,c
  8145  00567A  A4D8               	btfss	status,2,c
  8146  00567C  EF42  F02B         	goto	u7641
  8147  005680  EF44  F02B         	goto	u7640
  8148  005684                     u7641:
  8149  005684  EF49  F02B         	goto	l7685
  8150  005688                     u7640:
  8151  005688                     l7683:
  8152  005688  5016               	movf	fputc@c^0,w,c
  8153  00568A  ECEE  F031         	call	_putch
  8154  00568E  EF7C  F02B         	goto	l2341
  8155  005692                     l7685:
  8156  005692  EE20 F004          	lfsr	2,4
  8157  005696  5018               	movf	fputc@fp^0,w,c
  8158  005698  26D9               	addwf	fsr2l,f,c
  8159  00569A  5019               	movf	(fputc@fp+1)^0,w,c
  8160  00569C  22DA               	addwfc	fsr2h,f,c
  8161  00569E  50DE               	movf	postinc2,w,c
  8162  0056A0  10DE               	iorwf	postinc2,w,c
  8163  0056A2  B4D8               	btfsc	status,2,c
  8164  0056A4  EF56  F02B         	goto	u7651
  8165  0056A8  EF58  F02B         	goto	u7650
  8166  0056AC                     u7651:
  8167  0056AC  EF73  F02B         	goto	l7689
  8168  0056B0                     u7650:
  8169  0056B0  EE20 F004          	lfsr	2,4
  8170  0056B4  5018               	movf	fputc@fp^0,w,c
  8171  0056B6  26D9               	addwf	fsr2l,f,c
  8172  0056B8  5019               	movf	(fputc@fp+1)^0,w,c
  8173  0056BA  22DA               	addwfc	fsr2h,f,c
  8174  0056BC  EE10 F002          	lfsr	1,2
  8175  0056C0  5018               	movf	fputc@fp^0,w,c
  8176  0056C2  26E1               	addwf	fsr1l,f,c
  8177  0056C4  5019               	movf	(fputc@fp+1)^0,w,c
  8178  0056C6  22E2               	addwfc	fsr1h,f,c
  8179  0056C8  50DE               	movf	postinc2,w,c
  8180  0056CA  5CE6               	subwf	postinc1,w,c
  8181  0056CC  50E6               	movf	postinc1,w,c
  8182  0056CE  0A80               	xorlw	128
  8183  0056D0  6E1E               	movwf	(??_fputc+4)^0,c
  8184  0056D2  50DE               	movf	postinc2,w,c
  8185  0056D4  0A80               	xorlw	128
  8186  0056D6  581E               	subwfb	(??_fputc+4)^0,w,c
  8187  0056D8  B0D8               	btfsc	status,0,c
  8188  0056DA  EF71  F02B         	goto	u7661
  8189  0056DE  EF73  F02B         	goto	u7660
  8190  0056E2                     u7661:
  8191  0056E2  EF7C  F02B         	goto	l2341
  8192  0056E6                     u7660:
  8193  0056E6                     l7689:
  8194  0056E6  EE20 F002          	lfsr	2,2
  8195  0056EA  5018               	movf	fputc@fp^0,w,c
  8196  0056EC  26D9               	addwf	fsr2l,f,c
  8197  0056EE  5019               	movf	(fputc@fp+1)^0,w,c
  8198  0056F0  22DA               	addwfc	fsr2h,f,c
  8199  0056F2  2ADE               	incf	postinc2,f,c
  8200  0056F4  0E00               	movlw	0
  8201  0056F6  22DD               	addwfc	postdec2,f,c
  8202  0056F8                     l2341:
  8203  0056F8  0012               	return		;funcret
  8204  0056FA                     __end_of_fputc:
  8205                           	callstack 0
  8206                           
  8207 ;; *************** function _putch *****************
  8208 ;; Defined at:
  8209 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;  txData          1    wreg     unsigned char 
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;  txData          1   20[COMRAM] unsigned char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;Total ram usage:        1 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 9
  8230 ;; This function calls:
  8231 ;;		_UART1_Write
  8232 ;; This function is called by:
  8233 ;;		_fputc
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text28
  8238  0063DC                     __ptext28:
  8239                           	callstack 0
  8240  0063DC                     _putch:
  8241                           	callstack 12
  8242                           
  8243                           ;incstack = 0
  8244                           ;putch@txData stored from wreg
  8245  0063DC  6E15               	movwf	putch@txData^0,c
  8246  0063DE                     
  8247                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8248  0063DE  5015               	movf	putch@txData^0,w,c
  8249  0063E0  ECE7  F02C         	call	_UART1_Write
  8250  0063E4  0012               	return		;funcret
  8251  0063E6                     __end_of_putch:
  8252                           	callstack 0
  8253                           
  8254 ;; *************** function _UART1_Write *****************
  8255 ;; Defined at:
  8256 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  txData          1    wreg     unsigned char 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  txData          1   19[COMRAM] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;Total ram usage:        1 bytes
  8275 ;; Hardware stack levels used: 1
  8276 ;; Hardware stack levels required when called: 8
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_putch
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text29
  8285  0059CE                     __ptext29:
  8286                           	callstack 0
  8287  0059CE                     _UART1_Write:
  8288                           	callstack 12
  8289                           
  8290                           ;incstack = 0
  8291                           ;UART1_Write@txData stored from wreg
  8292  0059CE  6E14               	movwf	UART1_Write@txData^0,c
  8293  0059D0                     l7661:
  8294                           
  8295                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8296  0059D0  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8297  0059D2  B4D8               	btfsc	status,2,c
  8298  0059D4  EFEE  F02C         	goto	u7601
  8299  0059D8  EFF0  F02C         	goto	u7600
  8300  0059DC                     u7601:
  8301  0059DC  EFE8  F02C         	goto	l7661
  8302  0059E0                     u7600:
  8303  0059E0                     
  8304                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8305  0059E0  0139               	movlb	57	; () banked
  8306  0059E2  B993               	btfsc	147,4,b	;volatile
  8307  0059E4  EFF6  F02C         	goto	u7611
  8308  0059E8  EFF8  F02C         	goto	u7610
  8309  0059EC                     u7611:
  8310  0059EC  EFFD  F02C         	goto	l309
  8311  0059F0                     u7610:
  8312  0059F0                     
  8313                           ; BSR set to: 57
  8314                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8315  0059F0  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8316                           
  8317                           ;mcc_generated_files/uart1.c: 211:     }
  8318  0059F6  EF13  F02D         	goto	l7675
  8319  0059FA                     l309:
  8320                           
  8321                           ; BSR set to: 57
  8322                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8323  0059FA  9993               	bcf	147,4,b	;volatile
  8324  0059FC                     
  8325                           ; BSR set to: 57
  8326                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8327  0059FC  0E10               	movlw	low _uart1TxBuffer
  8328  0059FE  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8329  005A00  6ED9               	movwf	fsr2l,c
  8330  005A02  6ADA               	clrf	fsr2h,c
  8331  005A04  0E01               	movlw	high _uart1TxBuffer
  8332  005A06  22DA               	addwfc	fsr2h,f,c
  8333  005A08  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8334  005A0E                     
  8335                           ; BSR set to: 57
  8336  005A0E  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8337  005A10                     
  8338                           ; BSR set to: 57
  8339                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8340  005A10  0E07               	movlw	7
  8341  005A12  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8342  005A14  EF0E  F02D         	goto	u7621
  8343  005A18  EF10  F02D         	goto	u7620
  8344  005A1C                     u7621:
  8345  005A1C  EF12  F02D         	goto	l7673
  8346  005A20                     u7620:
  8347  005A20                     
  8348                           ; BSR set to: 57
  8349                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8350  005A20  0E00               	movlw	0
  8351  005A22  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8352  005A24                     l7673:
  8353                           
  8354                           ; BSR set to: 57
  8355                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8356  005A24  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8357  005A26                     l7675:
  8358                           
  8359                           ; BSR set to: 57
  8360                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8361  005A26  8993               	bsf	147,4,b	;volatile
  8362  005A28                     
  8363                           ; BSR set to: 57
  8364  005A28  0012               	return		;funcret
  8365  005A2A                     __end_of_UART1_Write:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _abs *****************
  8369 ;; Defined at:
  8370 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  a               2   37[COMRAM] int 
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2   37[COMRAM] int 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;Total ram usage:        4 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; Hardware stack levels required when called: 8
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_dtoa
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text30
  8399  005CD6                     __ptext30:
  8400                           	callstack 0
  8401  005CD6                     _abs:
  8402                           	callstack 16
  8403  005CD6  BE27               	btfsc	(abs@a+1)^0,7,c
  8404  005CD8  EF78  F02E         	goto	u9040
  8405  005CDC  5027               	movf	(abs@a+1)^0,w,c
  8406  005CDE  E106               	bnz	u9041
  8407  005CE0  0426               	decf	abs@a^0,w,c
  8408  005CE2  B0D8               	btfsc	status,0,c
  8409  005CE4  EF76  F02E         	goto	u9041
  8410  005CE8  EF78  F02E         	goto	u9040
  8411  005CEC                     u9041:
  8412  005CEC  EF86  F02E         	goto	l2307
  8413  005CF0                     u9040:
  8414  005CF0  C026  F028         	movff	abs@a,??_abs
  8415  005CF4  C027  F029         	movff	abs@a+1,??_abs+1
  8416  005CF8  1E28               	comf	??_abs^0,f,c
  8417  005CFA  1E29               	comf	(??_abs+1)^0,f,c
  8418  005CFC  4A28               	infsnz	??_abs^0,f,c
  8419  005CFE  2A29               	incf	(??_abs+1)^0,f,c
  8420  005D00  C028  F026         	movff	??_abs,?_abs
  8421  005D04  C029  F027         	movff	??_abs+1,?_abs+1
  8422  005D08  EF8A  F02E         	goto	l2310
  8423  005D0C                     l2307:
  8424  005D0C  C026  F026         	movff	abs@a,?_abs
  8425  005D10  C027  F027         	movff	abs@a+1,?_abs+1
  8426  005D14                     l2310:
  8427  005D14  0012               	return		;funcret
  8428  005D16                     __end_of_abs:
  8429                           	callstack 0
  8430                           
  8431 ;; *************** function ___aomod *****************
  8432 ;; Defined at:
  8433 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  dividend        8   19[COMRAM] long long 
  8436 ;;  divisor         8   27[COMRAM] long long 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  sign            1   36[COMRAM] unsigned char 
  8439 ;;  counter         1   35[COMRAM] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  8   19[COMRAM] long long 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8449 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8453 ;;Total ram usage:       18 bytes
  8454 ;; Hardware stack levels used: 1
  8455 ;; Hardware stack levels required when called: 8
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_dtoa
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text31
  8464  004318                     __ptext31:
  8465                           	callstack 0
  8466  004318                     ___aomod:
  8467                           	callstack 16
  8468  004318  0E00               	movlw	0
  8469  00431A  6E25               	movwf	___aomod@sign^0,c
  8470  00431C  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8471  00431E  EF95  F021         	goto	u8170
  8472  004322  EF93  F021         	goto	u8171
  8473  004326                     u8171:
  8474  004326  EFA7  F021         	goto	l7969
  8475  00432A                     u8170:
  8476  00432A  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8477  00432C  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8478  00432E  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8479  004330  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8480  004332  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8481  004334  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8482  004336  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8483  004338  6C14               	negf	___aomod@dividend^0,c
  8484  00433A  0E00               	movlw	0
  8485  00433C  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8486  00433E  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8487  004340  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8488  004342  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8489  004344  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8490  004346  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8491  004348  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8492  00434A  0E01               	movlw	1
  8493  00434C  6E25               	movwf	___aomod@sign^0,c
  8494  00434E                     l7969:
  8495  00434E  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8496  004350  EFAE  F021         	goto	u8180
  8497  004354  EFAC  F021         	goto	u8181
  8498  004358                     u8181:
  8499  004358  EFBE  F021         	goto	l7973
  8500  00435C                     u8180:
  8501  00435C  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8502  00435E  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8503  004360  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8504  004362  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8505  004364  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8506  004366  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8507  004368  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8508  00436A  6C1C               	negf	___aomod@divisor^0,c
  8509  00436C  0E00               	movlw	0
  8510  00436E  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8511  004370  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8512  004372  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8513  004374  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8514  004376  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8515  004378  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8516  00437A  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8517  00437C                     l7973:
  8518  00437C  501C               	movf	___aomod@divisor^0,w,c
  8519  00437E  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8520  004380  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8521  004382  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8522  004384  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8523  004386  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8524  004388  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8525  00438A  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8526  00438C  B4D8               	btfsc	status,2,c
  8527  00438E  EFCB  F021         	goto	u8191
  8528  004392  EFCD  F021         	goto	u8190
  8529  004396                     u8191:
  8530  004396  EF15  F022         	goto	l7989
  8531  00439A                     u8190:
  8532  00439A  0E01               	movlw	1
  8533  00439C  6E24               	movwf	___aomod@counter^0,c
  8534  00439E  EFDB  F021         	goto	l7979
  8535  0043A2                     l7977:
  8536  0043A2  90D8               	bcf	status,0,c
  8537  0043A4  361C               	rlcf	___aomod@divisor^0,f,c
  8538  0043A6  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8539  0043A8  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8540  0043AA  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8541  0043AC  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8542  0043AE  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8543  0043B0  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8544  0043B2  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8545  0043B4  2A24               	incf	___aomod@counter^0,f,c
  8546  0043B6                     l7979:
  8547  0043B6  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8548  0043B8  EFE0  F021         	goto	u8201
  8549  0043BC  EFE2  F021         	goto	u8200
  8550  0043C0                     u8201:
  8551  0043C0  EFD1  F021         	goto	l7977
  8552  0043C4                     u8200:
  8553  0043C4                     l7981:
  8554  0043C4  501C               	movf	___aomod@divisor^0,w,c
  8555  0043C6  5C14               	subwf	___aomod@dividend^0,w,c
  8556  0043C8  501D               	movf	(___aomod@divisor+1)^0,w,c
  8557  0043CA  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8558  0043CC  501E               	movf	(___aomod@divisor+2)^0,w,c
  8559  0043CE  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8560  0043D0  501F               	movf	(___aomod@divisor+3)^0,w,c
  8561  0043D2  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8562  0043D4  5020               	movf	(___aomod@divisor+4)^0,w,c
  8563  0043D6  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8564  0043D8  5021               	movf	(___aomod@divisor+5)^0,w,c
  8565  0043DA  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8566  0043DC  5022               	movf	(___aomod@divisor+6)^0,w,c
  8567  0043DE  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8568  0043E0  5023               	movf	(___aomod@divisor+7)^0,w,c
  8569  0043E2  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8570  0043E4  A0D8               	btfss	status,0,c
  8571  0043E6  EFF7  F021         	goto	u8211
  8572  0043EA  EFF9  F021         	goto	u8210
  8573  0043EE                     u8211:
  8574  0043EE  EF09  F022         	goto	l7985
  8575  0043F2                     u8210:
  8576  0043F2  501C               	movf	___aomod@divisor^0,w,c
  8577  0043F4  5E14               	subwf	___aomod@dividend^0,f,c
  8578  0043F6  501D               	movf	(___aomod@divisor+1)^0,w,c
  8579  0043F8  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8580  0043FA  501E               	movf	(___aomod@divisor+2)^0,w,c
  8581  0043FC  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8582  0043FE  501F               	movf	(___aomod@divisor+3)^0,w,c
  8583  004400  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8584  004402  5020               	movf	(___aomod@divisor+4)^0,w,c
  8585  004404  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8586  004406  5021               	movf	(___aomod@divisor+5)^0,w,c
  8587  004408  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8588  00440A  5022               	movf	(___aomod@divisor+6)^0,w,c
  8589  00440C  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8590  00440E  5023               	movf	(___aomod@divisor+7)^0,w,c
  8591  004410  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8592  004412                     l7985:
  8593  004412  90D8               	bcf	status,0,c
  8594  004414  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8595  004416  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8596  004418  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8597  00441A  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8598  00441C  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8599  00441E  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8600  004420  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8601  004422  321C               	rrcf	___aomod@divisor^0,f,c
  8602  004424  2E24               	decfsz	___aomod@counter^0,f,c
  8603  004426  EFE2  F021         	goto	l7981
  8604  00442A                     l7989:
  8605  00442A  5025               	movf	___aomod@sign^0,w,c
  8606  00442C  B4D8               	btfsc	status,2,c
  8607  00442E  EF1B  F022         	goto	u8221
  8608  004432  EF1D  F022         	goto	u8220
  8609  004436                     u8221:
  8610  004436  EF2D  F022         	goto	l7993
  8611  00443A                     u8220:
  8612  00443A  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8613  00443C  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8614  00443E  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8615  004440  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8616  004442  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8617  004444  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8618  004446  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8619  004448  6C14               	negf	___aomod@dividend^0,c
  8620  00444A  0E00               	movlw	0
  8621  00444C  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8622  00444E  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8623  004450  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8624  004452  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8625  004454  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8626  004456  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8627  004458  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8628  00445A                     l7993:
  8629  00445A  C014  F014         	movff	___aomod@dividend,?___aomod
  8630  00445E  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8631  004462  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8632  004466  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8633  00446A  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8634  00446E  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8635  004472  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8636  004476  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8637  00447A  0012               	return		;funcret
  8638  00447C                     __end_of___aomod:
  8639                           	callstack 0
  8640                           
  8641 ;; *************** function ___aodiv *****************
  8642 ;; Defined at:
  8643 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  dividend        8   19[COMRAM] long long 
  8646 ;;  divisor         8   27[COMRAM] long long 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  quotient        8   37[COMRAM] long long 
  8649 ;;  sign            1   36[COMRAM] unsigned char 
  8650 ;;  counter         1   35[COMRAM] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  8   19[COMRAM] long long 
  8653 ;; Registers used:
  8654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8660 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;Total ram usage:       26 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 8
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_dtoa
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text32
  8675  004190                     __ptext32:
  8676                           	callstack 0
  8677  004190                     ___aodiv:
  8678                           	callstack 16
  8679  004190  0E00               	movlw	0
  8680  004192  6E25               	movwf	___aodiv@sign^0,c
  8681  004194  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8682  004196  EFD1  F020         	goto	u8100
  8683  00419A  EFCF  F020         	goto	u8101
  8684  00419E                     u8101:
  8685  00419E  EFE3  F020         	goto	l7925
  8686  0041A2                     u8100:
  8687  0041A2  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8688  0041A4  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8689  0041A6  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8690  0041A8  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8691  0041AA  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8692  0041AC  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8693  0041AE  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8694  0041B0  6C1C               	negf	___aodiv@divisor^0,c
  8695  0041B2  0E00               	movlw	0
  8696  0041B4  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8697  0041B6  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8698  0041B8  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8699  0041BA  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8700  0041BC  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8701  0041BE  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8702  0041C0  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8703  0041C2  0E01               	movlw	1
  8704  0041C4  6E25               	movwf	___aodiv@sign^0,c
  8705  0041C6                     l7925:
  8706  0041C6  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8707  0041C8  EFEA  F020         	goto	u8110
  8708  0041CC  EFE8  F020         	goto	u8111
  8709  0041D0                     u8111:
  8710  0041D0  EFFC  F020         	goto	l7931
  8711  0041D4                     u8110:
  8712  0041D4  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8713  0041D6  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8714  0041D8  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8715  0041DA  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8716  0041DC  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8717  0041DE  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8718  0041E0  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8719  0041E2  6C14               	negf	___aodiv@dividend^0,c
  8720  0041E4  0E00               	movlw	0
  8721  0041E6  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8722  0041E8  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8723  0041EA  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8724  0041EC  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8725  0041EE  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8726  0041F0  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8727  0041F2  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8728  0041F4  0E01               	movlw	1
  8729  0041F6  1A25               	xorwf	___aodiv@sign^0,f,c
  8730  0041F8                     l7931:
  8731  0041F8  EE20  F026         	lfsr	2,___aodiv@quotient
  8732  0041FC  0E07               	movlw	7
  8733  0041FE                     u8121:
  8734  0041FE  6ADE               	clrf	postinc2,c
  8735  004200  06E8               	decf	wreg,f,c
  8736  004202  E2FD               	bc	u8121
  8737  004204  501C               	movf	___aodiv@divisor^0,w,c
  8738  004206  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8739  004208  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8740  00420A  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8741  00420C  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8742  00420E  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8743  004210  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8744  004212  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8745  004214  B4D8               	btfsc	status,2,c
  8746  004216  EF0F  F021         	goto	u8131
  8747  00421A  EF11  F021         	goto	u8130
  8748  00421E                     u8131:
  8749  00421E  EF63  F021         	goto	l7953
  8750  004222                     u8130:
  8751  004222  0E01               	movlw	1
  8752  004224  6E24               	movwf	___aodiv@counter^0,c
  8753  004226  EF1F  F021         	goto	l7939
  8754  00422A                     l7937:
  8755  00422A  90D8               	bcf	status,0,c
  8756  00422C  361C               	rlcf	___aodiv@divisor^0,f,c
  8757  00422E  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8758  004230  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8759  004232  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8760  004234  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8761  004236  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8762  004238  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8763  00423A  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8764  00423C  2A24               	incf	___aodiv@counter^0,f,c
  8765  00423E                     l7939:
  8766  00423E  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8767  004240  EF24  F021         	goto	u8141
  8768  004244  EF26  F021         	goto	u8140
  8769  004248                     u8141:
  8770  004248  EF15  F021         	goto	l7937
  8771  00424C                     u8140:
  8772  00424C                     l7941:
  8773  00424C  90D8               	bcf	status,0,c
  8774  00424E  3626               	rlcf	___aodiv@quotient^0,f,c
  8775  004250  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8776  004252  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8777  004254  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8778  004256  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8779  004258  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8780  00425A  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8781  00425C  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8782  00425E  501C               	movf	___aodiv@divisor^0,w,c
  8783  004260  5C14               	subwf	___aodiv@dividend^0,w,c
  8784  004262  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8785  004264  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8786  004266  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8787  004268  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8788  00426A  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8789  00426C  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8790  00426E  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8791  004270  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8792  004272  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8793  004274  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8794  004276  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8795  004278  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8796  00427A  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8797  00427C  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8798  00427E  A0D8               	btfss	status,0,c
  8799  004280  EF44  F021         	goto	u8151
  8800  004284  EF46  F021         	goto	u8150
  8801  004288                     u8151:
  8802  004288  EF57  F021         	goto	l7949
  8803  00428C                     u8150:
  8804  00428C  501C               	movf	___aodiv@divisor^0,w,c
  8805  00428E  5E14               	subwf	___aodiv@dividend^0,f,c
  8806  004290  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8807  004292  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8808  004294  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8809  004296  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8810  004298  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8811  00429A  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8812  00429C  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8813  00429E  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8814  0042A0  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8815  0042A2  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8816  0042A4  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8817  0042A6  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8818  0042A8  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8819  0042AA  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8820  0042AC  8026               	bsf	___aodiv@quotient^0,0,c
  8821  0042AE                     l7949:
  8822  0042AE  90D8               	bcf	status,0,c
  8823  0042B0  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8824  0042B2  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8825  0042B4  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8826  0042B6  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8827  0042B8  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8828  0042BA  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8829  0042BC  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8830  0042BE  321C               	rrcf	___aodiv@divisor^0,f,c
  8831  0042C0  2E24               	decfsz	___aodiv@counter^0,f,c
  8832  0042C2  EF26  F021         	goto	l7941
  8833  0042C6                     l7953:
  8834  0042C6  5025               	movf	___aodiv@sign^0,w,c
  8835  0042C8  B4D8               	btfsc	status,2,c
  8836  0042CA  EF69  F021         	goto	u8161
  8837  0042CE  EF6B  F021         	goto	u8160
  8838  0042D2                     u8161:
  8839  0042D2  EF7B  F021         	goto	l7957
  8840  0042D6                     u8160:
  8841  0042D6  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8842  0042D8  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8843  0042DA  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8844  0042DC  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8845  0042DE  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8846  0042E0  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8847  0042E2  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8848  0042E4  6C26               	negf	___aodiv@quotient^0,c
  8849  0042E6  0E00               	movlw	0
  8850  0042E8  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8851  0042EA  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8852  0042EC  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8853  0042EE  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8854  0042F0  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8855  0042F2  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8856  0042F4  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8857  0042F6                     l7957:
  8858  0042F6  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8859  0042FA  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8860  0042FE  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8861  004302  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8862  004306  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8863  00430A  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8864  00430E  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8865  004312  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8866  004316  0012               	return		;funcret
  8867  004318                     __end_of___aodiv:
  8868                           	callstack 0
  8869                           
  8870 ;; *************** function ___lwdiv *****************
  8871 ;; Defined at:
  8872 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;  dividend        2   19[COMRAM] unsigned int 
  8875 ;;  divisor         2   21[COMRAM] unsigned int 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  quotient        2   24[COMRAM] unsigned int 
  8878 ;;  counter         1   23[COMRAM] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  2   19[COMRAM] unsigned int 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;Total ram usage:        7 bytes
  8893 ;; Hardware stack levels used: 1
  8894 ;; Hardware stack levels required when called: 8
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_checkCurveCount
  8899 ;;		_getCurve
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text33
  8904  005820                     __ptext33:
  8905                           	callstack 0
  8906  005820                     ___lwdiv:
  8907                           	callstack 20
  8908  005820  0E00               	movlw	0
  8909  005822  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
  8910  005824  0E00               	movlw	0
  8911  005826  6E19               	movwf	___lwdiv@quotient^0,c
  8912  005828  5016               	movf	___lwdiv@divisor^0,w,c
  8913  00582A  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8914  00582C  B4D8               	btfsc	status,2,c
  8915  00582E  EF1B  F02C         	goto	u10431
  8916  005832  EF1D  F02C         	goto	u10430
  8917  005836                     u10431:
  8918  005836  EF45  F02C         	goto	l1902
  8919  00583A                     u10430:
  8920  00583A  0E01               	movlw	1
  8921  00583C  6E18               	movwf	___lwdiv@counter^0,c
  8922  00583E  EF25  F02C         	goto	l9223
  8923  005842                     l9221:
  8924  005842  90D8               	bcf	status,0,c
  8925  005844  3616               	rlcf	___lwdiv@divisor^0,f,c
  8926  005846  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8927  005848  2A18               	incf	___lwdiv@counter^0,f,c
  8928  00584A                     l9223:
  8929  00584A  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
  8930  00584C  EF2A  F02C         	goto	u10441
  8931  005850  EF2C  F02C         	goto	u10440
  8932  005854                     u10441:
  8933  005854  EF21  F02C         	goto	l9221
  8934  005858                     u10440:
  8935  005858                     l9225:
  8936  005858  90D8               	bcf	status,0,c
  8937  00585A  3619               	rlcf	___lwdiv@quotient^0,f,c
  8938  00585C  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8939  00585E  5016               	movf	___lwdiv@divisor^0,w,c
  8940  005860  5C14               	subwf	___lwdiv@dividend^0,w,c
  8941  005862  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  8942  005864  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8943  005866  A0D8               	btfss	status,0,c
  8944  005868  EF38  F02C         	goto	u10451
  8945  00586C  EF3A  F02C         	goto	u10450
  8946  005870                     u10451:
  8947  005870  EF3F  F02C         	goto	l9233
  8948  005874                     u10450:
  8949  005874  5016               	movf	___lwdiv@divisor^0,w,c
  8950  005876  5E14               	subwf	___lwdiv@dividend^0,f,c
  8951  005878  5017               	movf	(___lwdiv@divisor+1)^0,w,c
  8952  00587A  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8953  00587C  8019               	bsf	___lwdiv@quotient^0,0,c
  8954  00587E                     l9233:
  8955  00587E  90D8               	bcf	status,0,c
  8956  005880  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8957  005882  3216               	rrcf	___lwdiv@divisor^0,f,c
  8958  005884  2E18               	decfsz	___lwdiv@counter^0,f,c
  8959  005886  EF2C  F02C         	goto	l9225
  8960  00588A                     l1902:
  8961  00588A  C019  F014         	movff	___lwdiv@quotient,?___lwdiv
  8962  00588E  C01A  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8963  005892  0012               	return		;funcret
  8964  005894                     __end_of___lwdiv:
  8965                           	callstack 0
  8966                           
  8967 ;; *************** function _checkBatt *****************
  8968 ;; Defined at:
  8969 ;;		line 90 in file "main.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;		None
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1    wreg      _Bool 
  8976 ;; Registers used:
  8977 ;;		wreg, status,2, status,0, cstack
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;Total ram usage:        0 bytes
  8988 ;; Hardware stack levels used: 1
  8989 ;; Hardware stack levels required when called: 10
  8990 ;; This function calls:
  8991 ;;		___flge
  8992 ;;		___xxtofl
  8993 ;;		_getBatteryVoltage
  8994 ;;		_setSteering
  8995 ;; This function is called by:
  8996 ;;		_loop
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text34
  9001  00578E                     __ptext34:
  9002                           	callstack 0
  9003  00578E                     _checkBatt:
  9004                           	callstack 19
  9005  00578E                     
  9006                           ;main.c: 91:     ++battCheckCount;
  9007  00578E  0101               	movlb	1	; () banked
  9008  005790  4B34               	infsnz	_battCheckCount& (0+255),f,b
  9009  005792  2B35               	incf	(_battCheckCount+1)& (0+255),f,b
  9010  005794                     
  9011                           ; BSR set to: 1
  9012                           ;main.c: 92:     if (battCheckCount > (500)) {
  9013  005794  0EF5               	movlw	245
  9014  005796  5D34               	subwf	_battCheckCount& (0+255),w,b
  9015  005798  0E01               	movlw	1
  9016  00579A  5935               	subwfb	(_battCheckCount+1)& (0+255),w,b
  9017  00579C  A0D8               	btfss	status,0,c
  9018  00579E  EFD3  F02B         	goto	u10491
  9019  0057A2  EFD5  F02B         	goto	u10490
  9020  0057A6                     u10491:
  9021  0057A6  EF0E  F02C         	goto	l9283
  9022  0057AA                     u10490:
  9023  0057AA                     
  9024                           ; BSR set to: 1
  9025                           ;main.c: 93:         battCheckCount = 0;
  9026  0057AA  0E00               	movlw	0
  9027  0057AC  6F35               	movwf	(_battCheckCount+1)& (0+255),b
  9028  0057AE  0E00               	movlw	0
  9029  0057B0  6F34               	movwf	_battCheckCount& (0+255),b
  9030  0057B2                     
  9031                           ; BSR set to: 1
  9032                           ;main.c: 94:         getBatteryVoltage();
  9033  0057B2  ECDF  F031         	call	_getBatteryVoltage	;wreg free
  9034  0057B6                     
  9035                           ;main.c: 96:         if (BatteryVolt < (7.4) * 409.6) {
  9036  0057B6  C12A  F01C         	movff	_BatteryVolt,___xxtofl@val
  9037  0057BA  C12B  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  9038  0057BE  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9039  0057C0  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9040  0057C2  0E00               	movlw	0
  9041  0057C4  ECEE  F01F         	call	___xxtofl
  9042  0057C8  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  9043  0057CC  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  9044  0057D0  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  9045  0057D4  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  9046  0057D8  0EA4               	movlw	164
  9047  0057DA  0100               	movlb	0	; () banked
  9048  0057DC  6F71               	movwf	___flge@ff2& (0+255),b
  9049  0057DE  0E70               	movlw	112
  9050  0057E0  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9051  0057E2  0E3D               	movlw	61
  9052  0057E4  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9053  0057E6  0E45               	movlw	69
  9054  0057E8  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9055  0057EA  EC28  F025         	call	___flge	;wreg free
  9056  0057EE  0100               	movlb	0	; () banked
  9057  0057F0  B0D8               	btfsc	status,0,c
  9058  0057F2  EFFD  F02B         	goto	u10501
  9059  0057F6  EFFF  F02B         	goto	u10500
  9060  0057FA                     u10501:
  9061  0057FA  EF0E  F02C         	goto	l9283
  9062  0057FE                     u10500:
  9063  0057FE                     
  9064                           ; BSR set to: 0
  9065                           ;main.c: 97:             setSpeed = 0;
  9066  0057FE  0E00               	movlw	0
  9067  005800  6FF0               	movwf	(_setSpeed+1)& (0+255),b
  9068  005802  0E00               	movlw	0
  9069  005804  6FEF               	movwf	_setSpeed& (0+255),b
  9070  005806                     
  9071                           ; BSR set to: 0
  9072                           ;main.c: 98:             setSteering(0, Front);
  9073  005806  0E00               	movlw	0
  9074  005808  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9075  00580A  0E00               	movlw	0
  9076  00580C  6F83               	movwf	setSteering@steering& (0+255),b
  9077  00580E  0E03               	movlw	3
  9078  005810  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9079  005812  ECF3  F01E         	call	_setSteering	;wreg free
  9080  005816                     
  9081                           ;main.c: 99:             return 1;
  9082  005816  0E01               	movlw	1
  9083  005818  EF0F  F02C         	goto	l1265
  9084  00581C                     l9283:
  9085                           
  9086                           ;main.c: 102:     return 0;
  9087  00581C  0E00               	movlw	0
  9088  00581E                     l1265:
  9089  00581E  0012               	return		;funcret
  9090  005820                     __end_of_checkBatt:
  9091                           	callstack 0
  9092                           
  9093 ;; *************** function _getBatteryVoltage *****************
  9094 ;; Defined at:
  9095 ;;		line 85 in file "main.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;		None
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;		None
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		wreg, status,2, status,0, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;Total ram usage:        0 bytes
  9114 ;; Hardware stack levels used: 1
  9115 ;; Hardware stack levels required when called: 9
  9116 ;; This function calls:
  9117 ;;		_ADCC_GetSingleConversion
  9118 ;; This function is called by:
  9119 ;;		_loop
  9120 ;;		_checkBatt
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text35
  9125  0063BE                     __ptext35:
  9126                           	callstack 0
  9127  0063BE                     _getBatteryVoltage:
  9128                           	callstack 20
  9129  0063BE                     
  9130                           ;main.c: 86:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9131  0063BE  0E22               	movlw	34
  9132  0063C0  EC42  F030         	call	_ADCC_GetSingleConversion
  9133  0063C4  C014  F12A         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9134  0063C8  C015  F12B         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9135  0063CC  0012               	return		;funcret
  9136  0063CE                     __end_of_getBatteryVoltage:
  9137                           	callstack 0
  9138                           
  9139 ;; *************** function _ADCC_GetSingleConversion *****************
  9140 ;; Defined at:
  9141 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  channel         1    wreg     enum E16058
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  channel         1   23[COMRAM] enum E16058
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  2   19[COMRAM] unsigned short 
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;Total ram usage:        5 bytes
  9160 ;; Hardware stack levels used: 1
  9161 ;; Hardware stack levels required when called: 8
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_getBatteryVoltage
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text36
  9170  006084                     __ptext36:
  9171                           	callstack 0
  9172  006084                     _ADCC_GetSingleConversion:
  9173                           	callstack 20
  9174                           
  9175                           ;incstack = 0
  9176                           ;ADCC_GetSingleConversion@channel stored from wreg
  9177  006084  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9178  006086                     
  9179                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9180  006086  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9181  00608C                     
  9182                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9183  00608C  013E               	movlb	62	; () banked
  9184  00608E  8FF8               	bsf	248,7,b	;volatile
  9185  006090                     
  9186                           ; BSR set to: 62
  9187                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9188  006090  9DF8               	bcf	248,6,b	;volatile
  9189  006092                     
  9190                           ; BSR set to: 62
  9191                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9192  006092  81F8               	bsf	248,0,b	;volatile
  9193  006094                     l1054:
  9194                           
  9195                           ; BSR set to: 62
  9196                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9197  006094  B1F8               	btfsc	248,0,b	;volatile
  9198  006096  EF4F  F030         	goto	u6461
  9199  00609A  EF51  F030         	goto	u6460
  9200  00609E                     u6461:
  9201  00609E  EF4A  F030         	goto	l1054
  9202  0060A2                     u6460:
  9203  0060A2                     
  9204                           ; BSR set to: 62
  9205                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9206  0060A2  51F0               	movf	240,w,b	;volatile
  9207  0060A4  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9208  0060A6  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9209  0060A8  51EF               	movf	239,w,b	;volatile
  9210  0060AA  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9211  0060AC  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9212  0060AE  0E00               	movlw	0
  9213  0060B0  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9214  0060B2  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9215  0060B4                     
  9216                           ; BSR set to: 62
  9217  0060B4  0012               	return		;funcret
  9218  0060B6                     __end_of_ADCC_GetSingleConversion:
  9219                           	callstack 0
  9220                           
  9221 ;; *************** function ___flge *****************
  9222 ;; Defined at:
  9223 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  ff1             4   13[BANK0 ] unsigned short 
  9226 ;;  ff2             4   17[BANK0 ] unsigned short 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;		None
  9229 ;; Return value:  Size  Location     Type
  9230 ;;		None               void
  9231 ;; Registers used:
  9232 ;;		wreg, status,2, status,0
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9238 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;Total ram usage:       12 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; Hardware stack levels required when called: 8
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_loop
  9249 ;;		_checkBatt
  9250 ;;		_getCurve
  9251 ;;		_efgtoa
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text37
  9256  004A50                     __ptext37:
  9257                           	callstack 0
  9258  004A50                     ___flge:
  9259                           	callstack 16
  9260  004A50  0E00               	movlw	0
  9261  004A52  0100               	movlb	0	; () banked
  9262  004A54  156D               	andwf	___flge@ff1& (0+255),w,b
  9263  004A56  6E36               	movwf	??___flge^0,c
  9264  004A58  0E00               	movlw	0
  9265  004A5A  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9266  004A5C  6E37               	movwf	(??___flge+1)^0,c
  9267  004A5E  0E80               	movlw	128
  9268  004A60  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9269  004A62  6E38               	movwf	(??___flge+2)^0,c
  9270  004A64  0E7F               	movlw	127
  9271  004A66  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9272  004A68  6E39               	movwf	(??___flge+3)^0,c
  9273  004A6A  5036               	movf	??___flge^0,w,c
  9274  004A6C  1037               	iorwf	(??___flge+1)^0,w,c
  9275  004A6E  1038               	iorwf	(??___flge+2)^0,w,c
  9276  004A70  1039               	iorwf	(??___flge+3)^0,w,c
  9277  004A72  A4D8               	btfss	status,2,c
  9278  004A74  EF3E  F025         	goto	u8801
  9279  004A78  EF40  F025         	goto	u8800
  9280  004A7C                     u8801:
  9281  004A7C  EF48  F025         	goto	l8371
  9282  004A80                     u8800:
  9283  004A80                     
  9284                           ; BSR set to: 0
  9285  004A80  0E00               	movlw	0
  9286  004A82  6F6D               	movwf	___flge@ff1& (0+255),b
  9287  004A84  0E00               	movlw	0
  9288  004A86  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9289  004A88  0E00               	movlw	0
  9290  004A8A  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9291  004A8C  0E00               	movlw	0
  9292  004A8E  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9293  004A90                     l8371:
  9294                           
  9295                           ; BSR set to: 0
  9296  004A90  0E00               	movlw	0
  9297  004A92  1571               	andwf	___flge@ff2& (0+255),w,b
  9298  004A94  6E36               	movwf	??___flge^0,c
  9299  004A96  0E00               	movlw	0
  9300  004A98  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9301  004A9A  6E37               	movwf	(??___flge+1)^0,c
  9302  004A9C  0E80               	movlw	128
  9303  004A9E  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9304  004AA0  6E38               	movwf	(??___flge+2)^0,c
  9305  004AA2  0E7F               	movlw	127
  9306  004AA4  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9307  004AA6  6E39               	movwf	(??___flge+3)^0,c
  9308  004AA8  5036               	movf	??___flge^0,w,c
  9309  004AAA  1037               	iorwf	(??___flge+1)^0,w,c
  9310  004AAC  1038               	iorwf	(??___flge+2)^0,w,c
  9311  004AAE  1039               	iorwf	(??___flge+3)^0,w,c
  9312  004AB0  A4D8               	btfss	status,2,c
  9313  004AB2  EF5D  F025         	goto	u8811
  9314  004AB6  EF5F  F025         	goto	u8810
  9315  004ABA                     u8811:
  9316  004ABA  EF67  F025         	goto	l8375
  9317  004ABE                     u8810:
  9318  004ABE                     
  9319                           ; BSR set to: 0
  9320  004ABE  0E00               	movlw	0
  9321  004AC0  6F71               	movwf	___flge@ff2& (0+255),b
  9322  004AC2  0E00               	movlw	0
  9323  004AC4  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9324  004AC6  0E00               	movlw	0
  9325  004AC8  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9326  004ACA  0E00               	movlw	0
  9327  004ACC  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9328  004ACE                     l8375:
  9329                           
  9330                           ; BSR set to: 0
  9331  004ACE  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9332  004AD0  EF6C  F025         	goto	u8821
  9333  004AD4  EF6E  F025         	goto	u8820
  9334  004AD8                     u8821:
  9335  004AD8  EF77  F025         	goto	l8379
  9336  004ADC                     u8820:
  9337  004ADC                     
  9338                           ; BSR set to: 0
  9339  004ADC  6D6D               	negf	___flge@ff1& (0+255),b
  9340  004ADE  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9341  004AE0  B0D8               	btfsc	status,0,c
  9342  004AE2  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9343  004AE4  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9344  004AE6  B0D8               	btfsc	status,0,c
  9345  004AE8  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9346  004AEA  0E80               	movlw	128
  9347  004AEC  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9348  004AEE                     l8379:
  9349                           
  9350                           ; BSR set to: 0
  9351  004AEE  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9352  004AF0  EF7C  F025         	goto	u8831
  9353  004AF4  EF7E  F025         	goto	u8830
  9354  004AF8                     u8831:
  9355  004AF8  EF87  F025         	goto	l1676
  9356  004AFC                     u8830:
  9357  004AFC                     
  9358                           ; BSR set to: 0
  9359  004AFC  6D71               	negf	___flge@ff2& (0+255),b
  9360  004AFE  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9361  004B00  B0D8               	btfsc	status,0,c
  9362  004B02  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9363  004B04  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9364  004B06  B0D8               	btfsc	status,0,c
  9365  004B08  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9366  004B0A  0E80               	movlw	128
  9367  004B0C  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9368  004B0E                     l1676:
  9369                           
  9370                           ; BSR set to: 0
  9371  004B0E  0E00               	movlw	0
  9372  004B10  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9373  004B12  0E00               	movlw	0
  9374  004B14  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9375  004B16  0E00               	movlw	0
  9376  004B18  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9377  004B1A  0E80               	movlw	128
  9378  004B1C  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9379  004B1E  0E00               	movlw	0
  9380  004B20  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9381  004B22  0E00               	movlw	0
  9382  004B24  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9383  004B26  0E00               	movlw	0
  9384  004B28  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9385  004B2A  0E80               	movlw	128
  9386  004B2C  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9387  004B2E  5171               	movf	___flge@ff2& (0+255),w,b
  9388  004B30  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9389  004B32  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9390  004B34  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9391  004B36  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9392  004B38  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9393  004B3A  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9394  004B3C  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9395  004B3E  B0D8               	btfsc	status,0,c
  9396  004B40  EFA4  F025         	goto	u8841
  9397  004B44  EFA6  F025         	goto	u8840
  9398  004B48                     u8841:
  9399  004B48  EFA9  F025         	goto	l8385
  9400  004B4C                     u8840:
  9401  004B4C                     
  9402                           ; BSR set to: 0
  9403  004B4C  90D8               	bcf	status,0,c
  9404  004B4E  EFAA  F025         	goto	l1681
  9405  004B52                     l8385:
  9406                           
  9407                           ; BSR set to: 0
  9408  004B52  80D8               	bsf	status,0,c
  9409  004B54                     l1681:
  9410                           
  9411                           ; BSR set to: 0
  9412  004B54  0012               	return		;funcret
  9413  004B56                     __end_of___flge:
  9414                           	callstack 0
  9415                           
  9416 ;; *************** function _calcSteering *****************
  9417 ;; Defined at:
  9418 ;;		line 242 in file "main.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;		None
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;  delta           2   46[BANK0 ] short 
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      void 
  9425 ;; Registers used:
  9426 ;;		wreg, status,2, status,0, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9434 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;Total ram usage:        4 bytes
  9437 ;; Hardware stack levels used: 1
  9438 ;; Hardware stack levels required when called: 10
  9439 ;; This function calls:
  9440 ;;		_setSteering
  9441 ;; This function is called by:
  9442 ;;		_loop
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text38
  9447  003578                     __ptext38:
  9448                           	callstack 0
  9449  003578                     _calcSteering:
  9450                           	callstack 19
  9451  003578                     
  9452                           ;main.c: 243:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  9453  003578  0100               	movlb	0	; () banked
  9454  00357A  51F3               	movf	_distRight& (0+255),w,b	;volatile
  9455  00357C  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  9456  00357E  6F8E               	movwf	calcSteering@delta& (0+255),b
  9457  003580  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  9458  003582  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  9459  003584  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9460                           
  9461                           ;main.c: 247:     switch (driveMode) {
  9462  003586  EFED  F01A         	goto	l9407
  9463  00358A                     l1325:
  9464  00358A                     l9397:
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;main.c: 252:             if (delta > (40)) {
  9468  00358A  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  9469  00358C  EFD1  F01A         	goto	u10751
  9470  003590  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  9471  003592  E109               	bnz	u10750
  9472  003594  0E29               	movlw	41
  9473  003596  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9474  003598  A0D8               	btfss	status,0,c
  9475  00359A  EFD1  F01A         	goto	u10751
  9476  00359E  EFD3  F01A         	goto	u10750
  9477  0035A2                     u10751:
  9478  0035A2  EFD9  F01A         	goto	l9401
  9479  0035A6                     u10750:
  9480  0035A6                     
  9481                           ; BSR set to: 0
  9482                           ;main.c: 253:                 delta = (40);
  9483  0035A6  0E00               	movlw	0
  9484  0035A8  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9485  0035AA  0E28               	movlw	40
  9486  0035AC  6F8E               	movwf	calcSteering@delta& (0+255),b
  9487                           
  9488                           ;main.c: 254:             } else if (delta < -(40)) {
  9489  0035AE  EF7E  F01B         	goto	l9439
  9490  0035B2                     l9401:
  9491                           
  9492                           ; BSR set to: 0
  9493  0035B2  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  9494  0035B4  EFE5  F01A         	goto	u10761
  9495  0035B8  0ED8               	movlw	216
  9496  0035BA  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  9497  0035BC  0EFF               	movlw	255
  9498  0035BE  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  9499  0035C0  B0D8               	btfsc	status,0,c
  9500  0035C2  EFE5  F01A         	goto	u10761
  9501  0035C6  EFE7  F01A         	goto	u10760
  9502  0035CA                     u10761:
  9503  0035CA  EF0A  F01B         	goto	l1330
  9504  0035CE                     u10760:
  9505  0035CE                     
  9506                           ; BSR set to: 0
  9507                           ;main.c: 255:                 delta = -(40);
  9508  0035CE  0EFF               	movlw	255
  9509  0035D0  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9510  0035D2  0ED8               	movlw	216
  9511  0035D4  6F8E               	movwf	calcSteering@delta& (0+255),b
  9512  0035D6  EF7E  F01B         	goto	l9439
  9513  0035DA                     l9407:
  9514                           
  9515                           ; BSR set to: 0
  9516  0035DA  51FC               	movf	_driveMode& (0+255),w,b
  9517  0035DC  6F8C               	movwf	??_calcSteering& (0+255),b
  9518  0035DE  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9519                           
  9520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9521                           ; Switch size 1, requested type "simple"
  9522                           ; Number of cases is 1, Range of values is 0 to 0
  9523                           ; switch strategies available:
  9524                           ; Name         Instructions Cycles
  9525                           ; simple_byte            4     3 (average)
  9526                           ;	Chosen strategy is simple_byte
  9527  0035E0  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9528  0035E2  0A00               	xorlw	0	; case 0
  9529  0035E4  B4D8               	btfsc	status,2,c
  9530  0035E6  EFF7  F01A         	goto	l9763
  9531  0035EA  EF7E  F01B         	goto	l9439
  9532  0035EE                     l9763:
  9533                           
  9534                           ; BSR set to: 0
  9535                           ; Switch size 1, requested type "simple"
  9536                           ; Number of cases is 4, Range of values is 0 to 5
  9537                           ; switch strategies available:
  9538                           ; Name         Instructions Cycles
  9539                           ; simple_byte           13     7 (average)
  9540                           ;	Chosen strategy is simple_byte
  9541  0035EE  518C               	movf	??_calcSteering& (0+255),w,b
  9542  0035F0  0A00               	xorlw	0	; case 0
  9543  0035F2  B4D8               	btfsc	status,2,c
  9544  0035F4  EFC5  F01A         	goto	l9397
  9545  0035F8  0A01               	xorlw	1	; case 1
  9546  0035FA  B4D8               	btfsc	status,2,c
  9547  0035FC  EFC5  F01A         	goto	l1325
  9548  003600  0A05               	xorlw	5	; case 4
  9549  003602  B4D8               	btfsc	status,2,c
  9550  003604  EFC5  F01A         	goto	l9397
  9551  003608  0A01               	xorlw	1	; case 5
  9552  00360A  B4D8               	btfsc	status,2,c
  9553  00360C  EFC5  F01A         	goto	l9397
  9554  003610  EF7E  F01B         	goto	l9439
  9555  003614                     l1330:
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;main.c: 262:     switch (driveMode) {
  9559  003614  EF7E  F01B         	goto	l9439
  9560  003618                     l9409:
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;main.c: 264:             setSteering(delta, Ratio);
  9564  003618  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9565  00361C  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9566  003620  0E02               	movlw	2
  9567  003622  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9568  003624  ECF3  F01E         	call	_setSteering	;wreg free
  9569                           
  9570                           ;main.c: 265:             break;
  9571  003628  EFAB  F01B         	goto	l9441
  9572  00362C                     l9411:
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;main.c: 267:             setSteering(delta, Front);
  9576  00362C  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  9577  003630  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  9578  003634  0E03               	movlw	3
  9579  003636  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9580  003638  ECF3  F01E         	call	_setSteering	;wreg free
  9581                           
  9582                           ;main.c: 268:             break;
  9583  00363C  EFAB  F01B         	goto	l9441
  9584  003640                     l9413:
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;main.c: 270:             setSteering(-(50), Inverted);
  9588  003640  0EFF               	movlw	255
  9589  003642  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9590  003644  0ECE               	movlw	206
  9591  003646  6F83               	movwf	setSteering@steering& (0+255),b
  9592  003648  0E00               	movlw	0
  9593  00364A  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9594  00364C  ECF3  F01E         	call	_setSteering	;wreg free
  9595                           
  9596                           ;main.c: 271:             break;
  9597  003650  EFAB  F01B         	goto	l9441
  9598  003654                     l9415:
  9599                           
  9600                           ; BSR set to: 0
  9601                           ;main.c: 273:             setSteering((50), Inverted);
  9602  003654  0E00               	movlw	0
  9603  003656  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9604  003658  0E32               	movlw	50
  9605  00365A  6F83               	movwf	setSteering@steering& (0+255),b
  9606  00365C  0E00               	movlw	0
  9607  00365E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9608  003660  ECF3  F01E         	call	_setSteering	;wreg free
  9609                           
  9610                           ;main.c: 274:             break;
  9611  003664  EFAB  F01B         	goto	l9441
  9612  003668                     l9417:
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;main.c: 276:             if (curveMode == InCurve) {
  9616  003668  0E02               	movlw	2
  9617  00366A  19FB               	xorwf	_curveMode& (0+255),w,b
  9618  00366C  A4D8               	btfss	status,2,c
  9619  00366E  EF3B  F01B         	goto	u10771
  9620  003672  EF3D  F01B         	goto	u10770
  9621  003676                     u10771:
  9622  003676  EF16  F01B         	goto	l9411
  9623  00367A                     u10770:
  9624  00367A                     
  9625                           ; BSR set to: 0
  9626                           ;main.c: 277:                 setSteering((50), Ratio);
  9627  00367A  0E00               	movlw	0
  9628  00367C  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9629  00367E  0E32               	movlw	50
  9630  003680  6F83               	movwf	setSteering@steering& (0+255),b
  9631  003682  0E02               	movlw	2
  9632  003684  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9633  003686  ECF3  F01E         	call	_setSteering	;wreg free
  9634                           
  9635                           ;main.c: 278:             } else {
  9636  00368A  EFAB  F01B         	goto	l9441
  9637  00368E                     l9423:
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;main.c: 283:             if (curveMode == InCurve) {
  9641  00368E  0E02               	movlw	2
  9642  003690  19FB               	xorwf	_curveMode& (0+255),w,b
  9643  003692  A4D8               	btfss	status,2,c
  9644  003694  EF4E  F01B         	goto	u10781
  9645  003698  EF50  F01B         	goto	u10780
  9646  00369C                     u10781:
  9647  00369C  EF16  F01B         	goto	l9411
  9648  0036A0                     u10780:
  9649  0036A0                     
  9650                           ; BSR set to: 0
  9651                           ;main.c: 284:                 setSteering(-(50), Ratio);
  9652  0036A0  0EFF               	movlw	255
  9653  0036A2  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  9654  0036A4  0ECE               	movlw	206
  9655  0036A6  6F83               	movwf	setSteering@steering& (0+255),b
  9656  0036A8  0E02               	movlw	2
  9657  0036AA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9658  0036AC  ECF3  F01E         	call	_setSteering	;wreg free
  9659                           
  9660                           ;main.c: 285:             } else {
  9661  0036B0  EFAB  F01B         	goto	l9441
  9662  0036B4                     l9429:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;main.c: 290:             delta = (50) - distLeft;
  9666  0036B4  51F5               	movf	_distLeft& (0+255),w,b	;volatile
  9667  0036B6  0832               	sublw	50
  9668  0036B8  6F8E               	movwf	calcSteering@delta& (0+255),b
  9669  0036BA  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  9670  0036BC  A0D8               	btfss	status,0,c
  9671  0036BE  2AE8               	incf	wreg,f,c
  9672  0036C0  0800               	sublw	0
  9673  0036C2  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9674  0036C4  EF16  F01B         	goto	l9411
  9675  0036C8                     l9433:
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;main.c: 294:             delta = (50) - distRight;
  9679  0036C8  51F3               	movf	_distRight& (0+255),w,b	;volatile
  9680  0036CA  0832               	sublw	50
  9681  0036CC  6F8E               	movwf	calcSteering@delta& (0+255),b
  9682  0036CE  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  9683  0036D0  A0D8               	btfss	status,0,c
  9684  0036D2  2AE8               	incf	wreg,f,c
  9685  0036D4  0800               	sublw	0
  9686  0036D6  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  9687  0036D8                     
  9688                           ; BSR set to: 0
  9689                           ;main.c: 295:             setSteering(-delta, Front);
  9690  0036D8  C08E  F08C         	movff	calcSteering@delta,??_calcSteering
  9691  0036DC  C08F  F08D         	movff	calcSteering@delta+1,??_calcSteering+1
  9692  0036E0  1F8C               	comf	??_calcSteering& (0+255),f,b
  9693  0036E2  1F8D               	comf	(??_calcSteering+1)& (0+255),f,b
  9694  0036E4  4B8C               	infsnz	??_calcSteering& (0+255),f,b
  9695  0036E6  2B8D               	incf	(??_calcSteering+1)& (0+255),f,b
  9696  0036E8  C08C  F083         	movff	??_calcSteering,setSteering@steering
  9697  0036EC  C08D  F084         	movff	??_calcSteering+1,setSteering@steering+1
  9698  0036F0  0E03               	movlw	3
  9699  0036F2  6F85               	movwf	setSteering@steeringMode& (0+255),b
  9700  0036F4  ECF3  F01E         	call	_setSteering	;wreg free
  9701                           
  9702                           ;main.c: 296:             break;
  9703  0036F8  EFAB  F01B         	goto	l9441
  9704  0036FC                     l9439:
  9705                           
  9706                           ; BSR set to: 0
  9707  0036FC  51FC               	movf	_driveMode& (0+255),w,b
  9708  0036FE  6F8C               	movwf	??_calcSteering& (0+255),b
  9709  003700  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  9710                           
  9711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9712                           ; Switch size 1, requested type "simple"
  9713                           ; Number of cases is 1, Range of values is 0 to 0
  9714                           ; switch strategies available:
  9715                           ; Name         Instructions Cycles
  9716                           ; simple_byte            4     3 (average)
  9717                           ;	Chosen strategy is simple_byte
  9718  003702  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  9719  003704  0A00               	xorlw	0	; case 0
  9720  003706  B4D8               	btfsc	status,2,c
  9721  003708  EF88  F01B         	goto	l9765
  9722  00370C  EFAB  F01B         	goto	l9441
  9723  003710                     l9765:
  9724                           
  9725                           ; BSR set to: 0
  9726                           ; Switch size 1, requested type "simple"
  9727                           ; Number of cases is 8, Range of values is 0 to 7
  9728                           ; switch strategies available:
  9729                           ; Name         Instructions Cycles
  9730                           ; simple_byte           25    13 (average)
  9731                           ;	Chosen strategy is simple_byte
  9732  003710  518C               	movf	??_calcSteering& (0+255),w,b
  9733  003712  0A00               	xorlw	0	; case 0
  9734  003714  B4D8               	btfsc	status,2,c
  9735  003716  EF16  F01B         	goto	l9411
  9736  00371A  0A01               	xorlw	1	; case 1
  9737  00371C  B4D8               	btfsc	status,2,c
  9738  00371E  EF0C  F01B         	goto	l9409
  9739  003722  0A03               	xorlw	3	; case 2
  9740  003724  B4D8               	btfsc	status,2,c
  9741  003726  EF20  F01B         	goto	l9413
  9742  00372A  0A01               	xorlw	1	; case 3
  9743  00372C  B4D8               	btfsc	status,2,c
  9744  00372E  EF2A  F01B         	goto	l9415
  9745  003732  0A07               	xorlw	7	; case 4
  9746  003734  B4D8               	btfsc	status,2,c
  9747  003736  EF34  F01B         	goto	l9417
  9748  00373A  0A01               	xorlw	1	; case 5
  9749  00373C  B4D8               	btfsc	status,2,c
  9750  00373E  EF47  F01B         	goto	l9423
  9751  003742  0A03               	xorlw	3	; case 6
  9752  003744  B4D8               	btfsc	status,2,c
  9753  003746  EF5A  F01B         	goto	l9429
  9754  00374A  0A01               	xorlw	1	; case 7
  9755  00374C  B4D8               	btfsc	status,2,c
  9756  00374E  EF64  F01B         	goto	l9433
  9757  003752  EFAB  F01B         	goto	l9441
  9758  003756                     l9441:
  9759                           
  9760                           ;main.c: 299:     if(driveMode == FollowLeft || driveMode == FollowRight){
  9761  003756  0E06               	movlw	6
  9762  003758  0100               	movlb	0	; () banked
  9763  00375A  19FC               	xorwf	_driveMode& (0+255),w,b
  9764  00375C  B4D8               	btfsc	status,2,c
  9765  00375E  EFB3  F01B         	goto	u10791
  9766  003762  EFB5  F01B         	goto	u10790
  9767  003766                     u10791:
  9768  003766  EFBE  F01B         	goto	l9445
  9769  00376A                     u10790:
  9770  00376A                     
  9771                           ; BSR set to: 0
  9772  00376A  0E07               	movlw	7
  9773  00376C  19FC               	xorwf	_driveMode& (0+255),w,b
  9774  00376E  A4D8               	btfss	status,2,c
  9775  003770  EFBC  F01B         	goto	u10801
  9776  003774  EFBE  F01B         	goto	u10800
  9777  003778                     u10801:
  9778  003778  EFD6  F01B         	goto	l1351
  9779  00377C                     u10800:
  9780  00377C                     l9445:
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;main.c: 300:         if(followCount >= (100)){
  9784  00377C  0101               	movlb	1	; () banked
  9785  00377E  5133               	movf	(_followCount+1)& (0+255),w,b
  9786  003780  E109               	bnz	u10810
  9787  003782  0E64               	movlw	100
  9788  003784  5D32               	subwf	_followCount& (0+255),w,b
  9789  003786  A0D8               	btfss	status,0,c
  9790  003788  EFC8  F01B         	goto	u10811
  9791  00378C  EFCA  F01B         	goto	u10810
  9792  003790                     u10811:
  9793  003790  EFD4  F01B         	goto	l9449
  9794  003794                     u10810:
  9795  003794                     
  9796                           ; BSR set to: 1
  9797                           ;main.c: 301:             driveMode = Straight;
  9798  003794  0E00               	movlw	0
  9799  003796  0100               	movlb	0	; () banked
  9800  003798  6FFC               	movwf	_driveMode& (0+255),b
  9801                           
  9802                           ;main.c: 302:             followCount = 0;
  9803  00379A  0E00               	movlw	0
  9804  00379C  0101               	movlb	1	; () banked
  9805  00379E  6F33               	movwf	(_followCount+1)& (0+255),b
  9806  0037A0  0E00               	movlw	0
  9807  0037A2  6F32               	movwf	_followCount& (0+255),b
  9808                           
  9809                           ;main.c: 303:         } else {
  9810  0037A4  EFD6  F01B         	goto	l1351
  9811  0037A8                     l9449:
  9812                           
  9813                           ; BSR set to: 1
  9814                           ;main.c: 304:             followCount++;
  9815  0037A8  4B32               	infsnz	_followCount& (0+255),f,b
  9816  0037AA  2B33               	incf	(_followCount+1)& (0+255),f,b
  9817  0037AC                     l1351:
  9818  0037AC  0012               	return		;funcret
  9819  0037AE                     __end_of_calcSteering:
  9820                           	callstack 0
  9821                           
  9822 ;; *************** function _setSteering *****************
  9823 ;; Defined at:
  9824 ;;		line 420 in file "main.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;  steering        2   35[BANK0 ] short 
  9827 ;;  steeringMode    1   37[BANK0 ] enum E17305
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;  steeringB       2   42[BANK0 ] short 
  9830 ;;  steeringF       2   40[BANK0 ] short 
  9831 ;; Return value:  Size  Location     Type
  9832 ;;                  1    wreg      void 
  9833 ;; Registers used:
  9834 ;;		wreg, status,2, status,0, cstack
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9840 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;Total ram usage:        9 bytes
  9845 ;; Hardware stack levels used: 1
  9846 ;; Hardware stack levels required when called: 9
  9847 ;; This function calls:
  9848 ;;		_PWM5_LoadDutyValue
  9849 ;;		_PWM6_LoadDutyValue
  9850 ;;		___fldiv
  9851 ;;		___fltol
  9852 ;;		___xxtofl
  9853 ;; This function is called by:
  9854 ;;		_loop
  9855 ;;		_checkBatt
  9856 ;;		_startAccell
  9857 ;;		_calcSteering
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text39
  9862  003DE6                     __ptext39:
  9863                           	callstack 0
  9864  003DE6                     _setSteering:
  9865                           	callstack 19
  9866  003DE6  0E00               	movlw	0
  9867  003DE8  0100               	movlb	0	; () banked
  9868  003DEA  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9869  003DEC  0E00               	movlw	0
  9870  003DEE  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9871                           
  9872                           ;main.c: 422:     switch (steeringMode) {
  9873  003DF0  EF6E  F01F         	goto	l9181
  9874  003DF4                     l1395:
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;main.c: 424:             steeringF = (+steering);
  9878  003DF4  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9879  003DF8  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9880                           
  9881                           ;main.c: 425:             steeringB = -steering;
  9882  003DFC  C083  F086         	movff	setSteering@steering,??_setSteering
  9883  003E00  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9884  003E04  1F86               	comf	??_setSteering& (0+255),f,b
  9885  003E06  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9886  003E08  4B86               	infsnz	??_setSteering& (0+255),f,b
  9887  003E0A  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9888  003E0C  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  9889  003E10  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  9890                           
  9891                           ;main.c: 426:             break;
  9892  003E14  EF8F  F01F         	goto	l9183
  9893  003E18                     l1397:
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;main.c: 428:             steeringF = (+steering);
  9897  003E18  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9898  003E1C  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9899                           
  9900                           ;main.c: 429:             steeringB = (+steering);
  9901  003E20  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9902  003E24  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9903                           
  9904                           ;main.c: 430:             break;
  9905  003E28  EF8F  F01F         	goto	l9183
  9906  003E2C                     l1398:
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;main.c: 432:             steeringF = (+steering);
  9910  003E2C  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9911  003E30  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9912  003E34                     
  9913                           ; BSR set to: 0
  9914                           ;main.c: 433:             steeringB = (-steering / (1.25));
  9915  003E34  0E00               	movlw	0
  9916  003E36  6E2E               	movwf	___fldiv@a^0,c
  9917  003E38  0E00               	movlw	0
  9918  003E3A  6E2F               	movwf	(___fldiv@a+1)^0,c
  9919  003E3C  0EA0               	movlw	160
  9920  003E3E  6E30               	movwf	(___fldiv@a+2)^0,c
  9921  003E40  0E3F               	movlw	63
  9922  003E42  6E31               	movwf	(___fldiv@a+3)^0,c
  9923  003E44  C083  F086         	movff	setSteering@steering,??_setSteering
  9924  003E48  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  9925  003E4C  1F86               	comf	??_setSteering& (0+255),f,b
  9926  003E4E  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  9927  003E50  4B86               	infsnz	??_setSteering& (0+255),f,b
  9928  003E52  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  9929  003E54  C086  F01C         	movff	??_setSteering,___xxtofl@val
  9930  003E58  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  9931  003E5C  0E00               	movlw	0
  9932  003E5E  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  9933  003E60  0EFF               	movlw	-1
  9934  003E62  6E1E               	movwf	(___xxtofl@val+2)^0,c
  9935  003E64  6E1F               	movwf	(___xxtofl@val+3)^0,c
  9936  003E66  0E01               	movlw	1
  9937  003E68  ECEE  F01F         	call	___xxtofl
  9938  003E6C  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  9939  003E70  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  9940  003E74  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  9941  003E78  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  9942  003E7C  EC29  F016         	call	___fldiv	;wreg free
  9943  003E80  C02A  F079         	movff	?___fldiv,___fltol@f1
  9944  003E84  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  9945  003E88  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  9946  003E8C  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  9947  003E90  ECA4  F024         	call	___fltol	;wreg free
  9948  003E94  C079  F08A         	movff	?___fltol,setSteering@steeringB
  9949  003E98  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  9950                           
  9951                           ;main.c: 434:             break;
  9952  003E9C  EF8F  F01F         	goto	l9183
  9953  003EA0                     l1399:
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;main.c: 436:             steeringF = (+steering);
  9957  003EA0  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  9958  003EA4  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  9959  003EA8                     
  9960                           ; BSR set to: 0
  9961                           ;main.c: 437:             steeringB = 0;
  9962  003EA8  0E00               	movlw	0
  9963  003EAA  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9964  003EAC  0E00               	movlw	0
  9965  003EAE  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9966                           
  9967                           ;main.c: 438:             break;
  9968  003EB0  EF8F  F01F         	goto	l9183
  9969  003EB4                     l9173:
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;main.c: 440:             steeringF = 0;
  9973  003EB4  0E00               	movlw	0
  9974  003EB6  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9975  003EB8  0E00               	movlw	0
  9976  003EBA  6F88               	movwf	setSteering@steeringF& (0+255),b
  9977  003EBC                     
  9978                           ; BSR set to: 0
  9979                           ;main.c: 441:             steeringB = (+steering);
  9980  003EBC  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  9981  003EC0  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  9982                           
  9983                           ;main.c: 442:             break;
  9984  003EC4  EF8F  F01F         	goto	l9183
  9985  003EC8                     l9177:
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;main.c: 444:             steeringF = 0;
  9989  003EC8  0E00               	movlw	0
  9990  003ECA  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9991  003ECC  0E00               	movlw	0
  9992  003ECE  6F88               	movwf	setSteering@steeringF& (0+255),b
  9993                           
  9994                           ;main.c: 445:             steeringB = 0;
  9995  003ED0  0E00               	movlw	0
  9996  003ED2  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9997  003ED4  0E00               	movlw	0
  9998  003ED6  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9999                           
 10000                           ;main.c: 446:             break;
 10001  003ED8  EF8F  F01F         	goto	l9183
 10002  003EDC                     l9181:
 10003                           
 10004                           ; BSR set to: 0
 10005  003EDC  5185               	movf	setSteering@steeringMode& (0+255),w,b
 10006  003EDE  6F86               	movwf	??_setSteering& (0+255),b
 10007  003EE0  6B87               	clrf	(??_setSteering+1)& (0+255),b
 10008                           
 10009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10010                           ; Switch size 1, requested type "simple"
 10011                           ; Number of cases is 1, Range of values is 0 to 0
 10012                           ; switch strategies available:
 10013                           ; Name         Instructions Cycles
 10014                           ; simple_byte            4     3 (average)
 10015                           ;	Chosen strategy is simple_byte
 10016  003EE2  5187               	movf	(??_setSteering+1)& (0+255),w,b
 10017  003EE4  0A00               	xorlw	0	; case 0
 10018  003EE6  B4D8               	btfsc	status,2,c
 10019  003EE8  EF78  F01F         	goto	l9767
 10020  003EEC  EF64  F01F         	goto	l9177
 10021  003EF0                     l9767:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ; Switch size 1, requested type "simple"
 10025                           ; Number of cases is 5, Range of values is 0 to 4
 10026                           ; switch strategies available:
 10027                           ; Name         Instructions Cycles
 10028                           ; simple_byte           16     9 (average)
 10029                           ;	Chosen strategy is simple_byte
 10030  003EF0  5186               	movf	??_setSteering& (0+255),w,b
 10031  003EF2  0A00               	xorlw	0	; case 0
 10032  003EF4  B4D8               	btfsc	status,2,c
 10033  003EF6  EFFA  F01E         	goto	l1395
 10034  003EFA  0A01               	xorlw	1	; case 1
 10035  003EFC  B4D8               	btfsc	status,2,c
 10036  003EFE  EF0C  F01F         	goto	l1397
 10037  003F02  0A03               	xorlw	3	; case 2
 10038  003F04  B4D8               	btfsc	status,2,c
 10039  003F06  EF16  F01F         	goto	l1398
 10040  003F0A  0A01               	xorlw	1	; case 3
 10041  003F0C  B4D8               	btfsc	status,2,c
 10042  003F0E  EF50  F01F         	goto	l1399
 10043  003F12  0A07               	xorlw	7	; case 4
 10044  003F14  B4D8               	btfsc	status,2,c
 10045  003F16  EF5A  F01F         	goto	l9173
 10046  003F1A  EF64  F01F         	goto	l9177
 10047  003F1E                     l9183:
 10048                           
 10049                           ;main.c: 449:     if (steeringF > ((65))) {
 10050  003F1E  0100               	movlb	0	; () banked
 10051  003F20  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
 10052  003F22  EF9C  F01F         	goto	u10391
 10053  003F26  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
 10054  003F28  E109               	bnz	u10390
 10055  003F2A  0E42               	movlw	66
 10056  003F2C  5D88               	subwf	setSteering@steeringF& (0+255),w,b
 10057  003F2E  A0D8               	btfss	status,0,c
 10058  003F30  EF9C  F01F         	goto	u10391
 10059  003F34  EF9E  F01F         	goto	u10390
 10060  003F38                     u10391:
 10061  003F38  EFA4  F01F         	goto	l9187
 10062  003F3C                     u10390:
 10063  003F3C                     
 10064                           ; BSR set to: 0
 10065                           ;main.c: 450:         steeringF = ((65));
 10066  003F3C  0E00               	movlw	0
 10067  003F3E  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
 10068  003F40  0E41               	movlw	65
 10069  003F42  6F88               	movwf	setSteering@steeringF& (0+255),b
 10070                           
 10071                           ;main.c: 451:     } else if (steeringF < (-(65))) {
 10072  003F44  EFB6  F01F         	goto	l9191
 10073  003F48                     l9187:
 10074                           
 10075                           ; BSR set to: 0
 10076  003F48  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
 10077  003F4A  EFB0  F01F         	goto	u10401
 10078  003F4E  0EBF               	movlw	191
 10079  003F50  5D88               	subwf	setSteering@steeringF& (0+255),w,b
 10080  003F52  0EFF               	movlw	255
 10081  003F54  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
 10082  003F56  B0D8               	btfsc	status,0,c
 10083  003F58  EFB0  F01F         	goto	u10401
 10084  003F5C  EFB2  F01F         	goto	u10400
 10085  003F60                     u10401:
 10086  003F60  EFB6  F01F         	goto	l9191
 10087  003F64                     u10400:
 10088  003F64                     
 10089                           ; BSR set to: 0
 10090                           ;main.c: 452:         steeringF = (-(65));
 10091  003F64  0EFF               	movlw	255
 10092  003F66  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
 10093  003F68  0EBF               	movlw	191
 10094  003F6A  6F88               	movwf	setSteering@steeringF& (0+255),b
 10095  003F6C                     l9191:
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;main.c: 455:     if (steeringB > ((40))) {
 10099  003F6C  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
 10100  003F6E  EFC2  F01F         	goto	u10411
 10101  003F72  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
 10102  003F74  E109               	bnz	u10410
 10103  003F76  0E29               	movlw	41
 10104  003F78  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
 10105  003F7A  A0D8               	btfss	status,0,c
 10106  003F7C  EFC2  F01F         	goto	u10411
 10107  003F80  EFC4  F01F         	goto	u10410
 10108  003F84                     u10411:
 10109  003F84  EFCA  F01F         	goto	l9195
 10110  003F88                     u10410:
 10111  003F88                     
 10112                           ; BSR set to: 0
 10113                           ;main.c: 456:         steeringB = ((40));
 10114  003F88  0E00               	movlw	0
 10115  003F8A  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
 10116  003F8C  0E28               	movlw	40
 10117  003F8E  6F8A               	movwf	setSteering@steeringB& (0+255),b
 10118                           
 10119                           ;main.c: 457:     } else if (steeringB < (-(40))) {
 10120  003F90  EFDC  F01F         	goto	l9199
 10121  003F94                     l9195:
 10122                           
 10123                           ; BSR set to: 0
 10124  003F94  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
 10125  003F96  EFD6  F01F         	goto	u10421
 10126  003F9A  0ED8               	movlw	216
 10127  003F9C  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
 10128  003F9E  0EFF               	movlw	255
 10129  003FA0  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
 10130  003FA2  B0D8               	btfsc	status,0,c
 10131  003FA4  EFD6  F01F         	goto	u10421
 10132  003FA8  EFD8  F01F         	goto	u10420
 10133  003FAC                     u10421:
 10134  003FAC  EFDC  F01F         	goto	l9199
 10135  003FB0                     u10420:
 10136  003FB0                     
 10137                           ; BSR set to: 0
 10138                           ;main.c: 458:         steeringB = (-(40));
 10139  003FB0  0EFF               	movlw	255
 10140  003FB2  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
 10141  003FB4  0ED8               	movlw	216
 10142  003FB6  6F8A               	movwf	setSteering@steeringB& (0+255),b
 10143  003FB8                     l9199:
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;main.c: 462:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
 10147  003FB8  0E60               	movlw	96
 10148  003FBA  2588               	addwf	setSteering@steeringF& (0+255),w,b
 10149  003FBC  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
 10150  003FBE  0E01               	movlw	1
 10151  003FC0  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
 10152  003FC2  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
 10153  003FC4  ECA5  F02F         	call	_PWM6_LoadDutyValue	;wreg free
 10154  003FC8                     
 10155                           ;main.c: 463:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
 10156  003FC8  0E65               	movlw	101
 10157  003FCA  0100               	movlb	0	; () banked
 10158  003FCC  258A               	addwf	setSteering@steeringB& (0+255),w,b
 10159  003FCE  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
 10160  003FD0  0E01               	movlw	1
 10161  003FD2  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
 10162  003FD4  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
 10163  003FD6  ECBF  F02F         	call	_PWM5_LoadDutyValue	;wreg free
 10164  003FDA  0012               	return		;funcret
 10165  003FDC                     __end_of_setSteering:
 10166                           	callstack 0
 10167                           
 10168 ;; *************** function ___fldiv *****************
 10169 ;; Defined at:
 10170 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  b               4   41[COMRAM] void 
 10173 ;;  a               4   45[COMRAM] void 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;  grs             4    7[BANK0 ] unsigned long 
 10176 ;;  rem             4    0[BANK0 ] unsigned long 
 10177 ;;  new_exp         2    5[BANK0 ] short 
 10178 ;;  aexp            1   12[BANK0 ] unsigned char 
 10179 ;;  bexp            1   11[BANK0 ] unsigned char 
 10180 ;;  sign            1    4[BANK0 ] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  4   41[COMRAM] unsigned char 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10190 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10193 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10194 ;;Total ram usage:       25 bytes
 10195 ;; Hardware stack levels used: 1
 10196 ;; Hardware stack levels required when called: 8
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_setSteering
 10201 ;;		_efgtoa
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text40
 10206  002C52                     __ptext40:
 10207                           	callstack 0
 10208  002C52                     ___fldiv:
 10209                           	callstack 19
 10210  002C52  502D               	movf	(___fldiv@b+3)^0,w,c
 10211  002C54  0B80               	andlw	128
 10212  002C56  0100               	movlb	0	; () banked
 10213  002C58  6F64               	movwf	___fldiv@sign& (0+255),b
 10214  002C5A  502D               	movf	(___fldiv@b+3)^0,w,c
 10215  002C5C  242D               	addwf	(___fldiv@b+3)^0,w,c
 10216  002C5E  6F6B               	movwf	___fldiv@bexp& (0+255),b
 10217  002C60                     
 10218                           ; BSR set to: 0
 10219  002C60  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10220  002C62  EF35  F016         	goto	u8231
 10221  002C66  EF37  F016         	goto	u8230
 10222  002C6A                     u8231:
 10223  002C6A  EF38  F016         	goto	l8003
 10224  002C6E                     u8230:
 10225  002C6E                     
 10226                           ; BSR set to: 0
 10227  002C6E  816B               	bsf	___fldiv@bexp& (0+255),0,b
 10228  002C70                     l8003:
 10229                           
 10230                           ; BSR set to: 0
 10231  002C70  516B               	movf	___fldiv@bexp& (0+255),w,b
 10232  002C72  B4D8               	btfsc	status,2,c
 10233  002C74  EF3E  F016         	goto	u8241
 10234  002C78  EF40  F016         	goto	u8240
 10235  002C7C                     u8241:
 10236  002C7C  EF55  F016         	goto	l8013
 10237  002C80                     u8240:
 10238  002C80                     
 10239                           ; BSR set to: 0
 10240  002C80  296B               	incf	___fldiv@bexp& (0+255),w,b
 10241  002C82  A4D8               	btfss	status,2,c
 10242  002C84  EF46  F016         	goto	u8251
 10243  002C88  EF48  F016         	goto	u8250
 10244  002C8C                     u8251:
 10245  002C8C  EF50  F016         	goto	l8009
 10246  002C90                     u8250:
 10247  002C90                     
 10248                           ; BSR set to: 0
 10249  002C90  0E00               	movlw	0
 10250  002C92  6E2A               	movwf	___fldiv@b^0,c
 10251  002C94  0E00               	movlw	0
 10252  002C96  6E2B               	movwf	(___fldiv@b+1)^0,c
 10253  002C98  0E00               	movlw	0
 10254  002C9A  6E2C               	movwf	(___fldiv@b+2)^0,c
 10255  002C9C  0E00               	movlw	0
 10256  002C9E  6E2D               	movwf	(___fldiv@b+3)^0,c
 10257  002CA0                     l8009:
 10258                           
 10259                           ; BSR set to: 0
 10260  002CA0  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10261  002CA2                     
 10262                           ; BSR set to: 0
 10263  002CA2  0E00               	movlw	0
 10264  002CA4  6E2D               	movwf	(___fldiv@b+3)^0,c
 10265  002CA6  EF5D  F016         	goto	l8015
 10266  002CAA                     l8013:
 10267                           
 10268                           ; BSR set to: 0
 10269  002CAA  0E00               	movlw	0
 10270  002CAC  6E2A               	movwf	___fldiv@b^0,c
 10271  002CAE  0E00               	movlw	0
 10272  002CB0  6E2B               	movwf	(___fldiv@b+1)^0,c
 10273  002CB2  0E00               	movlw	0
 10274  002CB4  6E2C               	movwf	(___fldiv@b+2)^0,c
 10275  002CB6  0E00               	movlw	0
 10276  002CB8  6E2D               	movwf	(___fldiv@b+3)^0,c
 10277  002CBA                     l8015:
 10278                           
 10279                           ; BSR set to: 0
 10280  002CBA  5031               	movf	(___fldiv@a+3)^0,w,c
 10281  002CBC  0B80               	andlw	128
 10282  002CBE  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 10283  002CC0                     
 10284                           ; BSR set to: 0
 10285  002CC0  5031               	movf	(___fldiv@a+3)^0,w,c
 10286  002CC2  2431               	addwf	(___fldiv@a+3)^0,w,c
 10287  002CC4  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10288  002CC6                     
 10289                           ; BSR set to: 0
 10290  002CC6  AE30               	btfss	(___fldiv@a+2)^0,7,c
 10291  002CC8  EF68  F016         	goto	u8261
 10292  002CCC  EF6A  F016         	goto	u8260
 10293  002CD0                     u8261:
 10294  002CD0  EF6B  F016         	goto	l8023
 10295  002CD4                     u8260:
 10296  002CD4                     
 10297                           ; BSR set to: 0
 10298  002CD4  816C               	bsf	___fldiv@aexp& (0+255),0,b
 10299  002CD6                     l8023:
 10300                           
 10301                           ; BSR set to: 0
 10302  002CD6  516C               	movf	___fldiv@aexp& (0+255),w,b
 10303  002CD8  B4D8               	btfsc	status,2,c
 10304  002CDA  EF71  F016         	goto	u8271
 10305  002CDE  EF73  F016         	goto	u8270
 10306  002CE2                     u8271:
 10307  002CE2  EF88  F016         	goto	l8033
 10308  002CE6                     u8270:
 10309  002CE6                     
 10310                           ; BSR set to: 0
 10311  002CE6  296C               	incf	___fldiv@aexp& (0+255),w,b
 10312  002CE8  A4D8               	btfss	status,2,c
 10313  002CEA  EF79  F016         	goto	u8281
 10314  002CEE  EF7B  F016         	goto	u8280
 10315  002CF2                     u8281:
 10316  002CF2  EF83  F016         	goto	l8029
 10317  002CF6                     u8280:
 10318  002CF6                     
 10319                           ; BSR set to: 0
 10320  002CF6  0E00               	movlw	0
 10321  002CF8  6E2E               	movwf	___fldiv@a^0,c
 10322  002CFA  0E00               	movlw	0
 10323  002CFC  6E2F               	movwf	(___fldiv@a+1)^0,c
 10324  002CFE  0E00               	movlw	0
 10325  002D00  6E30               	movwf	(___fldiv@a+2)^0,c
 10326  002D02  0E00               	movlw	0
 10327  002D04  6E31               	movwf	(___fldiv@a+3)^0,c
 10328  002D06                     l8029:
 10329                           
 10330                           ; BSR set to: 0
 10331  002D06  8E30               	bsf	(___fldiv@a+2)^0,7,c
 10332  002D08                     
 10333                           ; BSR set to: 0
 10334  002D08  0E00               	movlw	0
 10335  002D0A  6E31               	movwf	(___fldiv@a+3)^0,c
 10336  002D0C  EF90  F016         	goto	l8035
 10337  002D10                     l8033:
 10338                           
 10339                           ; BSR set to: 0
 10340  002D10  0E00               	movlw	0
 10341  002D12  6E2E               	movwf	___fldiv@a^0,c
 10342  002D14  0E00               	movlw	0
 10343  002D16  6E2F               	movwf	(___fldiv@a+1)^0,c
 10344  002D18  0E00               	movlw	0
 10345  002D1A  6E30               	movwf	(___fldiv@a+2)^0,c
 10346  002D1C  0E00               	movlw	0
 10347  002D1E  6E31               	movwf	(___fldiv@a+3)^0,c
 10348  002D20                     l8035:
 10349                           
 10350                           ; BSR set to: 0
 10351  002D20  502E               	movf	___fldiv@a^0,w,c
 10352  002D22  102F               	iorwf	(___fldiv@a+1)^0,w,c
 10353  002D24  1030               	iorwf	(___fldiv@a+2)^0,w,c
 10354  002D26  1031               	iorwf	(___fldiv@a+3)^0,w,c
 10355  002D28  A4D8               	btfss	status,2,c
 10356  002D2A  EF99  F016         	goto	u8291
 10357  002D2E  EF9B  F016         	goto	u8290
 10358  002D32                     u8291:
 10359  002D32  EFB3  F016         	goto	l8047
 10360  002D36                     u8290:
 10361  002D36                     
 10362                           ; BSR set to: 0
 10363  002D36  0E00               	movlw	0
 10364  002D38  6E2A               	movwf	___fldiv@b^0,c
 10365  002D3A  0E00               	movlw	0
 10366  002D3C  6E2B               	movwf	(___fldiv@b+1)^0,c
 10367  002D3E  0E00               	movlw	0
 10368  002D40  6E2C               	movwf	(___fldiv@b+2)^0,c
 10369  002D42  0E00               	movlw	0
 10370  002D44  6E2D               	movwf	(___fldiv@b+3)^0,c
 10371  002D46                     
 10372                           ; BSR set to: 0
 10373  002D46  0E80               	movlw	128
 10374  002D48  122C               	iorwf	(___fldiv@b+2)^0,f,c
 10375  002D4A  0E7F               	movlw	127
 10376  002D4C  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10377  002D4E                     l8041:
 10378                           
 10379                           ; BSR set to: 0
 10380  002D4E  5164               	movf	___fldiv@sign& (0+255),w,b
 10381  002D50  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10382  002D52                     
 10383                           ; BSR set to: 0
 10384  002D52  C02A  F02A         	movff	___fldiv@b,?___fldiv
 10385  002D56  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
 10386  002D5A  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
 10387  002D5E  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
 10388  002D62  EFF6  F017         	goto	l1993
 10389  002D66                     l8047:
 10390                           
 10391                           ; BSR set to: 0
 10392  002D66  516B               	movf	___fldiv@bexp& (0+255),w,b
 10393  002D68  A4D8               	btfss	status,2,c
 10394  002D6A  EFB9  F016         	goto	u8301
 10395  002D6E  EFBB  F016         	goto	u8300
 10396  002D72                     u8301:
 10397  002D72  EFC5  F016         	goto	l8055
 10398  002D76                     u8300:
 10399  002D76                     
 10400                           ; BSR set to: 0
 10401  002D76  0E00               	movlw	0
 10402  002D78  6E2A               	movwf	?___fldiv^0,c
 10403  002D7A  0E00               	movlw	0
 10404  002D7C  6E2B               	movwf	(?___fldiv+1)^0,c
 10405  002D7E  0E00               	movlw	0
 10406  002D80  6E2C               	movwf	(?___fldiv+2)^0,c
 10407  002D82  0E00               	movlw	0
 10408  002D84  6E2D               	movwf	(?___fldiv+3)^0,c
 10409  002D86  EFF6  F017         	goto	l1993
 10410  002D8A                     l8055:
 10411                           
 10412                           ; BSR set to: 0
 10413  002D8A  516C               	movf	___fldiv@aexp& (0+255),w,b
 10414  002D8C  C06B  F032         	movff	___fldiv@bexp,??___fldiv
 10415  002D90  6A33               	clrf	(??___fldiv+1)^0,c
 10416  002D92  5E32               	subwf	??___fldiv^0,f,c
 10417  002D94  0E00               	movlw	0
 10418  002D96  5A33               	subwfb	(??___fldiv+1)^0,f,c
 10419  002D98  0E7F               	movlw	127
 10420  002D9A  2432               	addwf	??___fldiv^0,w,c
 10421  002D9C  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10422  002D9E  0E00               	movlw	0
 10423  002DA0  2033               	addwfc	(??___fldiv+1)^0,w,c
 10424  002DA2  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10425  002DA4                     
 10426                           ; BSR set to: 0
 10427  002DA4  C02A  F060         	movff	___fldiv@b,___fldiv@rem
 10428  002DA8  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 10429  002DAC  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 10430  002DB0  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 10431  002DB4                     
 10432                           ; BSR set to: 0
 10433  002DB4  0E00               	movlw	0
 10434  002DB6  6E2A               	movwf	___fldiv@b^0,c
 10435  002DB8  0E00               	movlw	0
 10436  002DBA  6E2B               	movwf	(___fldiv@b+1)^0,c
 10437  002DBC  0E00               	movlw	0
 10438  002DBE  6E2C               	movwf	(___fldiv@b+2)^0,c
 10439  002DC0  0E00               	movlw	0
 10440  002DC2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10441  002DC4                     
 10442                           ; BSR set to: 0
 10443  002DC4  0E00               	movlw	0
 10444  002DC6  6F67               	movwf	___fldiv@grs& (0+255),b
 10445  002DC8  0E00               	movlw	0
 10446  002DCA  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 10447  002DCC  0E00               	movlw	0
 10448  002DCE  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 10449  002DD0  0E00               	movlw	0
 10450  002DD2  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 10451  002DD4                     
 10452                           ; BSR set to: 0
 10453  002DD4  0E00               	movlw	0
 10454  002DD6  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10455  002DD8  EF26  F017         	goto	l1995
 10456  002DDC                     l8065:
 10457                           
 10458                           ; BSR set to: 0
 10459  002DDC  516C               	movf	___fldiv@aexp& (0+255),w,b
 10460  002DDE  B4D8               	btfsc	status,2,c
 10461  002DE0  EFF4  F016         	goto	u8311
 10462  002DE4  EFF6  F016         	goto	u8310
 10463  002DE8                     u8311:
 10464  002DE8  EF0D  F017         	goto	l8073
 10465  002DEC                     u8310:
 10466  002DEC                     
 10467                           ; BSR set to: 0
 10468  002DEC  90D8               	bcf	status,0,c
 10469  002DEE  3760               	rlcf	___fldiv@rem& (0+255),f,b
 10470  002DF0  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10471  002DF2  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10472  002DF4  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10473  002DF6  90D8               	bcf	status,0,c
 10474  002DF8  362A               	rlcf	___fldiv@b^0,f,c
 10475  002DFA  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10476  002DFC  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10477  002DFE  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10478  002E00                     
 10479                           ; BSR set to: 0
 10480  002E00  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10481  002E02  EF05  F017         	goto	u8321
 10482  002E06  EF07  F017         	goto	u8320
 10483  002E0A                     u8321:
 10484  002E0A  EF08  F017         	goto	l1998
 10485  002E0E                     u8320:
 10486  002E0E                     
 10487                           ; BSR set to: 0
 10488  002E0E  802A               	bsf	___fldiv@b^0,0,c
 10489  002E10                     l1998:
 10490                           
 10491                           ; BSR set to: 0
 10492  002E10  90D8               	bcf	status,0,c
 10493  002E12  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10494  002E14  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10495  002E16  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10496  002E18  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10497  002E1A                     l8073:
 10498                           
 10499                           ; BSR set to: 0
 10500  002E1A  502E               	movf	___fldiv@a^0,w,c
 10501  002E1C  5D60               	subwf	___fldiv@rem& (0+255),w,b
 10502  002E1E  502F               	movf	(___fldiv@a+1)^0,w,c
 10503  002E20  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10504  002E22  5030               	movf	(___fldiv@a+2)^0,w,c
 10505  002E24  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10506  002E26  5031               	movf	(___fldiv@a+3)^0,w,c
 10507  002E28  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10508  002E2A  A0D8               	btfss	status,0,c
 10509  002E2C  EF1A  F017         	goto	u8331
 10510  002E30  EF1C  F017         	goto	u8330
 10511  002E34                     u8331:
 10512  002E34  EF25  F017         	goto	l8079
 10513  002E38                     u8330:
 10514  002E38                     
 10515                           ; BSR set to: 0
 10516  002E38  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10517  002E3A                     
 10518                           ; BSR set to: 0
 10519  002E3A  502E               	movf	___fldiv@a^0,w,c
 10520  002E3C  5F60               	subwf	___fldiv@rem& (0+255),f,b
 10521  002E3E  502F               	movf	(___fldiv@a+1)^0,w,c
 10522  002E40  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10523  002E42  5030               	movf	(___fldiv@a+2)^0,w,c
 10524  002E44  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10525  002E46  5031               	movf	(___fldiv@a+3)^0,w,c
 10526  002E48  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10527  002E4A                     l8079:
 10528                           
 10529                           ; BSR set to: 0
 10530  002E4A  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 10531  002E4C                     l1995:
 10532                           
 10533                           ; BSR set to: 0
 10534  002E4C  0E19               	movlw	25
 10535  002E4E  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 10536  002E50  EF2C  F017         	goto	u8341
 10537  002E54  EF2E  F017         	goto	u8340
 10538  002E58                     u8341:
 10539  002E58  EFEE  F016         	goto	l8065
 10540  002E5C                     u8340:
 10541  002E5C                     
 10542                           ; BSR set to: 0
 10543  002E5C  5160               	movf	___fldiv@rem& (0+255),w,b
 10544  002E5E  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10545  002E60  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10546  002E62  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10547  002E64  B4D8               	btfsc	status,2,c
 10548  002E66  EF37  F017         	goto	u8351
 10549  002E6A  EF39  F017         	goto	u8350
 10550  002E6E                     u8351:
 10551  002E6E  EF51  F017         	goto	l8091
 10552  002E72                     u8350:
 10553  002E72                     
 10554                           ; BSR set to: 0
 10555  002E72  8167               	bsf	___fldiv@grs& (0+255),0,b
 10556  002E74  EF51  F017         	goto	l8091
 10557  002E78                     l8085:
 10558                           
 10559                           ; BSR set to: 0
 10560  002E78  90D8               	bcf	status,0,c
 10561  002E7A  362A               	rlcf	___fldiv@b^0,f,c
 10562  002E7C  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10563  002E7E  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10564  002E80  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10565  002E82                     
 10566                           ; BSR set to: 0
 10567  002E82  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10568  002E84  EF46  F017         	goto	u8361
 10569  002E88  EF48  F017         	goto	u8360
 10570  002E8C                     u8361:
 10571  002E8C  EF49  F017         	goto	l2004
 10572  002E90                     u8360:
 10573  002E90                     
 10574                           ; BSR set to: 0
 10575  002E90  802A               	bsf	___fldiv@b^0,0,c
 10576  002E92                     l2004:
 10577                           
 10578                           ; BSR set to: 0
 10579  002E92  90D8               	bcf	status,0,c
 10580  002E94  3767               	rlcf	___fldiv@grs& (0+255),f,b
 10581  002E96  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10582  002E98  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10583  002E9A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10584  002E9C  0765               	decf	___fldiv@new_exp& (0+255),f,b
 10585  002E9E  A0D8               	btfss	status,0,c
 10586  002EA0  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10587  002EA2                     l8091:
 10588                           
 10589                           ; BSR set to: 0
 10590  002EA2  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10591  002EA4  EF56  F017         	goto	u8371
 10592  002EA8  EF58  F017         	goto	u8370
 10593  002EAC                     u8371:
 10594  002EAC  EF3C  F017         	goto	l8085
 10595  002EB0                     u8370:
 10596  002EB0                     
 10597                           ; BSR set to: 0
 10598  002EB0  0E00               	movlw	0
 10599  002EB2  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10600  002EB4                     
 10601                           ; BSR set to: 0
 10602  002EB4  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10603  002EB6  EF5F  F017         	goto	u8381
 10604  002EBA  EF61  F017         	goto	u8380
 10605  002EBE                     u8381:
 10606  002EBE  EF85  F017         	goto	l2006
 10607  002EC2                     u8380:
 10608  002EC2                     
 10609                           ; BSR set to: 0
 10610  002EC2  0EFF               	movlw	255
 10611  002EC4  1567               	andwf	___fldiv@grs& (0+255),w,b
 10612  002EC6  6E32               	movwf	??___fldiv^0,c
 10613  002EC8  0EFF               	movlw	255
 10614  002ECA  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10615  002ECC  6E33               	movwf	(??___fldiv+1)^0,c
 10616  002ECE  0EFF               	movlw	255
 10617  002ED0  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10618  002ED2  6E34               	movwf	(??___fldiv+2)^0,c
 10619  002ED4  0E7F               	movlw	127
 10620  002ED6  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10621  002ED8  6E35               	movwf	(??___fldiv+3)^0,c
 10622  002EDA  5032               	movf	??___fldiv^0,w,c
 10623  002EDC  1033               	iorwf	(??___fldiv+1)^0,w,c
 10624  002EDE  1034               	iorwf	(??___fldiv+2)^0,w,c
 10625  002EE0  1035               	iorwf	(??___fldiv+3)^0,w,c
 10626  002EE2  B4D8               	btfsc	status,2,c
 10627  002EE4  EF76  F017         	goto	u8391
 10628  002EE8  EF78  F017         	goto	u8390
 10629  002EEC                     u8391:
 10630  002EEC  EF7C  F017         	goto	l2007
 10631  002EF0                     u8390:
 10632  002EF0                     l8099:
 10633                           
 10634                           ; BSR set to: 0
 10635  002EF0  0E01               	movlw	1
 10636  002EF2  6F6C               	movwf	___fldiv@aexp& (0+255),b
 10637  002EF4  EF85  F017         	goto	l2006
 10638  002EF8                     l2007:
 10639                           
 10640                           ; BSR set to: 0
 10641  002EF8  A02A               	btfss	___fldiv@b^0,0,c
 10642  002EFA  EF81  F017         	goto	u8401
 10643  002EFE  EF83  F017         	goto	u8400
 10644  002F02                     u8401:
 10645  002F02  EF85  F017         	goto	l2006
 10646  002F06                     u8400:
 10647  002F06  EF78  F017         	goto	l8099
 10648  002F0A                     l2006:
 10649                           
 10650                           ; BSR set to: 0
 10651  002F0A  516C               	movf	___fldiv@aexp& (0+255),w,b
 10652  002F0C  B4D8               	btfsc	status,2,c
 10653  002F0E  EF8B  F017         	goto	u8411
 10654  002F12  EF8D  F017         	goto	u8410
 10655  002F16                     u8411:
 10656  002F16  EFB1  F017         	goto	l8111
 10657  002F1A                     u8410:
 10658  002F1A                     
 10659                           ; BSR set to: 0
 10660  002F1A  0E01               	movlw	1
 10661  002F1C  262A               	addwf	___fldiv@b^0,f,c
 10662  002F1E  0E00               	movlw	0
 10663  002F20  222B               	addwfc	(___fldiv@b+1)^0,f,c
 10664  002F22  222C               	addwfc	(___fldiv@b+2)^0,f,c
 10665  002F24  222D               	addwfc	(___fldiv@b+3)^0,f,c
 10666  002F26                     
 10667                           ; BSR set to: 0
 10668  002F26  A02D               	btfss	(___fldiv@b+3)^0,0,c
 10669  002F28  EF98  F017         	goto	u8421
 10670  002F2C  EF9A  F017         	goto	u8420
 10671  002F30                     u8421:
 10672  002F30  EFB1  F017         	goto	l8111
 10673  002F34                     u8420:
 10674  002F34                     
 10675                           ; BSR set to: 0
 10676  002F34  C02A  F032         	movff	___fldiv@b,??___fldiv
 10677  002F38  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
 10678  002F3C  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
 10679  002F40  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
 10680  002F44  3435               	rlcf	(??___fldiv+3)^0,w,c
 10681  002F46  3235               	rrcf	(??___fldiv+3)^0,f,c
 10682  002F48  3234               	rrcf	(??___fldiv+2)^0,f,c
 10683  002F4A  3233               	rrcf	(??___fldiv+1)^0,f,c
 10684  002F4C  3232               	rrcf	??___fldiv^0,f,c
 10685  002F4E  C032  F02A         	movff	??___fldiv,___fldiv@b
 10686  002F52  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
 10687  002F56  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
 10688  002F5A  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
 10689  002F5E                     
 10690                           ; BSR set to: 0
 10691  002F5E  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 10692  002F60  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10693  002F62                     l8111:
 10694                           
 10695                           ; BSR set to: 0
 10696  002F62  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10697  002F64  EFBC  F017         	goto	u8431
 10698  002F68  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10699  002F6A  E108               	bnz	u8430
 10700  002F6C  2965               	incf	___fldiv@new_exp& (0+255),w,b
 10701  002F6E  A0D8               	btfss	status,0,c
 10702  002F70  EFBC  F017         	goto	u8431
 10703  002F74  EFBE  F017         	goto	u8430
 10704  002F78                     u8431:
 10705  002F78  EFC9  F017         	goto	l8115
 10706  002F7C                     u8430:
 10707  002F7C                     
 10708                           ; BSR set to: 0
 10709  002F7C  0E00               	movlw	0
 10710  002F7E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10711  002F80  6965               	setf	___fldiv@new_exp& (0+255),b
 10712  002F82  0E00               	movlw	0
 10713  002F84  6E2A               	movwf	___fldiv@b^0,c
 10714  002F86  0E00               	movlw	0
 10715  002F88  6E2B               	movwf	(___fldiv@b+1)^0,c
 10716  002F8A  0E00               	movlw	0
 10717  002F8C  6E2C               	movwf	(___fldiv@b+2)^0,c
 10718  002F8E  0E00               	movlw	0
 10719  002F90  6E2D               	movwf	(___fldiv@b+3)^0,c
 10720  002F92                     l8115:
 10721                           
 10722                           ; BSR set to: 0
 10723  002F92  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10724  002F94  EFD6  F017         	goto	u8440
 10725  002F98  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10726  002F9A  E106               	bnz	u8441
 10727  002F9C  0565               	decf	___fldiv@new_exp& (0+255),w,b
 10728  002F9E  B0D8               	btfsc	status,0,c
 10729  002FA0  EFD4  F017         	goto	u8441
 10730  002FA4  EFD6  F017         	goto	u8440
 10731  002FA8                     u8441:
 10732  002FA8  EFE4  F017         	goto	l8119
 10733  002FAC                     u8440:
 10734  002FAC                     
 10735                           ; BSR set to: 0
 10736  002FAC  0E00               	movlw	0
 10737  002FAE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10738  002FB0  0E00               	movlw	0
 10739  002FB2  6F65               	movwf	___fldiv@new_exp& (0+255),b
 10740  002FB4  0E00               	movlw	0
 10741  002FB6  6E2A               	movwf	___fldiv@b^0,c
 10742  002FB8  0E00               	movlw	0
 10743  002FBA  6E2B               	movwf	(___fldiv@b+1)^0,c
 10744  002FBC  0E00               	movlw	0
 10745  002FBE  6E2C               	movwf	(___fldiv@b+2)^0,c
 10746  002FC0  0E00               	movlw	0
 10747  002FC2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10748  002FC4  0E00               	movlw	0
 10749  002FC6  6F64               	movwf	___fldiv@sign& (0+255),b
 10750  002FC8                     l8119:
 10751                           
 10752                           ; BSR set to: 0
 10753  002FC8  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 10754  002FCC                     
 10755                           ; BSR set to: 0
 10756  002FCC  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 10757  002FCE  EFEB  F017         	goto	u8451
 10758  002FD2  EFED  F017         	goto	u8450
 10759  002FD6                     u8451:
 10760  002FD6  EFF0  F017         	goto	l8125
 10761  002FDA                     u8450:
 10762  002FDA                     
 10763                           ; BSR set to: 0
 10764  002FDA  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10765  002FDC  EFF1  F017         	goto	l8127
 10766  002FE0                     l8125:
 10767                           
 10768                           ; BSR set to: 0
 10769  002FE0  9E2C               	bcf	(___fldiv@b+2)^0,7,c
 10770  002FE2                     l8127:
 10771                           
 10772                           ; BSR set to: 0
 10773  002FE2  90D8               	bcf	status,0,c
 10774  002FE4  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 10775  002FE6  6E2D               	movwf	(___fldiv@b+3)^0,c
 10776  002FE8  EFA7  F016         	goto	l8041
 10777  002FEC                     l1993:
 10778                           
 10779                           ; BSR set to: 0
 10780  002FEC  0012               	return		;funcret
 10781  002FEE                     __end_of___fldiv:
 10782                           	callstack 0
 10783                           
 10784 ;; *************** function _PWM6_LoadDutyValue *****************
 10785 ;; Defined at:
 10786 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      void 
 10793 ;; Registers used:
 10794 ;;		wreg, status,2, status,0
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10803 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10804 ;;Total ram usage:        4 bytes
 10805 ;; Hardware stack levels used: 1
 10806 ;; Hardware stack levels required when called: 8
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_setSteering
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           	psect	text41
 10815  005F4A                     __ptext41:
 10816                           	callstack 0
 10817  005F4A                     _PWM6_LoadDutyValue:
 10818                           	callstack 19
 10819  005F4A                     
 10820                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10821  005F4A  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10822  005F4E  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 10823  005F52  90D8               	bcf	status,0,c
 10824  005F54  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10825  005F56  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10826  005F58  90D8               	bcf	status,0,c
 10827  005F5A  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 10828  005F5C  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 10829  005F5E  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10830  005F60  6E69               	movwf	105,c	;volatile
 10831                           
 10832                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 10833  005F62  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 10834  005F66  0E03               	movlw	3
 10835  005F68  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
 10836  005F6A  0E06               	movlw	6
 10837  005F6C  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
 10838  005F6E                     u10235:
 10839  005F6E  90D8               	bcf	status,0,c
 10840  005F70  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
 10841  005F72  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
 10842  005F74  EFB7  F02F         	goto	u10235
 10843  005F78  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
 10844  005F7A  6E68               	movwf	104,c	;volatile
 10845  005F7C  0012               	return		;funcret
 10846  005F7E                     __end_of_PWM6_LoadDutyValue:
 10847                           	callstack 0
 10848                           
 10849 ;; *************** function _PWM5_LoadDutyValue *****************
 10850 ;; Defined at:
 10851 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  dutyValue       2   19[COMRAM] unsigned short 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;		None
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, status,2, status,0
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10868 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;Total ram usage:        4 bytes
 10870 ;; Hardware stack levels used: 1
 10871 ;; Hardware stack levels required when called: 8
 10872 ;; This function calls:
 10873 ;;		Nothing
 10874 ;; This function is called by:
 10875 ;;		_setSteering
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           	psect	text42
 10880  005F7E                     __ptext42:
 10881                           	callstack 0
 10882  005F7E                     _PWM5_LoadDutyValue:
 10883                           	callstack 19
 10884  005F7E                     
 10885                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 10886  005F7E  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10887  005F82  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 10888  005F86  90D8               	bcf	status,0,c
 10889  005F88  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10890  005F8A  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10891  005F8C  90D8               	bcf	status,0,c
 10892  005F8E  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 10893  005F90  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 10894  005F92  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10895  005F94  6E6D               	movwf	109,c	;volatile
 10896                           
 10897                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 10898  005F96  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 10899  005F9A  0E03               	movlw	3
 10900  005F9C  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
 10901  005F9E  0E06               	movlw	6
 10902  005FA0  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
 10903  005FA2                     u10225:
 10904  005FA2  90D8               	bcf	status,0,c
 10905  005FA4  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
 10906  005FA6  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
 10907  005FA8  EFD1  F02F         	goto	u10225
 10908  005FAC  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
 10909  005FAE  6E6C               	movwf	108,c	;volatile
 10910  005FB0  0012               	return		;funcret
 10911  005FB2                     __end_of_PWM5_LoadDutyValue:
 10912                           	callstack 0
 10913                           
 10914 ;; *************** function _calcSpeed *****************
 10915 ;; Defined at:
 10916 ;;		line 309 in file "main.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;		None
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;  speed           2   39[BANK0 ] short 
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      void 
 10923 ;; Registers used:
 10924 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10932 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10933 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;Total ram usage:        6 bytes
 10935 ;; Hardware stack levels used: 1
 10936 ;; Hardware stack levels required when called: 9
 10937 ;; This function calls:
 10938 ;;		___fladd
 10939 ;;		___flmul
 10940 ;;		___fltol
 10941 ;;		___xxtofl
 10942 ;; This function is called by:
 10943 ;;		_loop
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text43
 10948  0037AE                     __ptext43:
 10949                           	callstack 0
 10950  0037AE                     _calcSpeed:
 10951                           	callstack 20
 10952  0037AE                     
 10953                           ;main.c: 310:     int16_t speed = 0;
 10954  0037AE  0E00               	movlw	0
 10955  0037B0  0100               	movlb	0	; () banked
 10956  0037B2  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10957  0037B4  0E00               	movlw	0
 10958  0037B6  6F87               	movwf	calcSpeed@speed& (0+255),b
 10959                           
 10960                           ;main.c: 312:     switch (driveMode) {
 10961  0037B8  EF8D  F01C         	goto	l9503
 10962  0037BC                     l9465:
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;main.c: 314:             if (distFront > (30)) {
 10966  0037BC  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10967  0037BE  E109               	bnz	u10820
 10968  0037C0  0E1F               	movlw	31
 10969  0037C2  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10970  0037C4  A0D8               	btfss	status,0,c
 10971  0037C6  EFE7  F01B         	goto	u10821
 10972  0037CA  EFE9  F01B         	goto	u10820
 10973  0037CE                     u10821:
 10974  0037CE  EFEB  F01B         	goto	l9469
 10975  0037D2                     u10820:
 10976  0037D2                     
 10977                           ; BSR set to: 0
 10978                           ;main.c: 315:                 driveMode = Straight;
 10979  0037D2  0E00               	movlw	0
 10980  0037D4  6FFC               	movwf	_driveMode& (0+255),b
 10981  0037D6                     l9469:
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;main.c: 317:             if (setSpeed > (115)) {
 10985  0037D6  BFF0               	btfsc	(_setSpeed+1)& (0+255),7,b
 10986  0037D8  EFF7  F01B         	goto	u10831
 10987  0037DC  51F0               	movf	(_setSpeed+1)& (0+255),w,b
 10988  0037DE  E109               	bnz	u10830
 10989  0037E0  0E74               	movlw	116
 10990  0037E2  5DEF               	subwf	_setSpeed& (0+255),w,b
 10991  0037E4  A0D8               	btfss	status,0,c
 10992  0037E6  EFF7  F01B         	goto	u10831
 10993  0037EA  EFF9  F01B         	goto	u10830
 10994  0037EE                     u10831:
 10995  0037EE  EFBA  F01C         	goto	l9505
 10996  0037F2                     u10830:
 10997  0037F2                     
 10998                           ; BSR set to: 0
 10999                           ;main.c: 318:                     speed = setSpeed;
 11000  0037F2  C0EF  F087         	movff	_setSpeed,calcSpeed@speed
 11001  0037F6  C0F0  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 11002  0037FA                     
 11003                           ; BSR set to: 0
 11004                           ;main.c: 319:                 if (distFront < (15)) {
 11005  0037FA  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 11006  0037FC  E107               	bnz	u10841
 11007  0037FE  0E0F               	movlw	15
 11008  003800  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 11009  003802  B0D8               	btfsc	status,0,c
 11010  003804  EF06  F01C         	goto	u10841
 11011  003808  EF08  F01C         	goto	u10840
 11012  00380C                     u10841:
 11013  00380C  EF0E  F01C         	goto	l9477
 11014  003810                     u10840:
 11015  003810                     
 11016                           ; BSR set to: 0
 11017                           ;main.c: 320:                     speed -= 4;
 11018  003810  0EFC               	movlw	252
 11019  003812  2787               	addwf	calcSpeed@speed& (0+255),f,b
 11020  003814  0EFF               	movlw	255
 11021  003816  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 11022                           
 11023                           ;main.c: 321:                 } else {
 11024  003818  EFBA  F01C         	goto	l9505
 11025  00381C                     l9477:
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;main.c: 322:                     speed -= 2;
 11029  00381C  0EFE               	movlw	254
 11030  00381E  2787               	addwf	calcSpeed@speed& (0+255),f,b
 11031  003820  0EFF               	movlw	255
 11032  003822  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 11033  003824  EFBA  F01C         	goto	l9505
 11034  003828                     l9479:
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;main.c: 327:             if (distFront < (30)) {
 11038  003828  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 11039  00382A  E107               	bnz	u10851
 11040  00382C  0E1E               	movlw	30
 11041  00382E  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 11042  003830  B0D8               	btfsc	status,0,c
 11043  003832  EF1D  F01C         	goto	u10851
 11044  003836  EF1F  F01C         	goto	u10850
 11045  00383A                     u10851:
 11046  00383A  EF21  F01C         	goto	l9483
 11047  00383E                     u10850:
 11048  00383E                     
 11049                           ; BSR set to: 0
 11050                           ;main.c: 328:                 driveMode = Brake;
 11051  00383E  0E01               	movlw	1
 11052  003840  6FFC               	movwf	_driveMode& (0+255),b
 11053  003842                     l9483:
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;main.c: 331:             if (distFront >= (150)) {
 11057  003842  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 11058  003844  E109               	bnz	u10860
 11059  003846  0E96               	movlw	150
 11060  003848  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 11061  00384A  A0D8               	btfss	status,0,c
 11062  00384C  EF2A  F01C         	goto	u10861
 11063  003850  EF2C  F01C         	goto	u10860
 11064  003854                     u10861:
 11065  003854  EF75  F01C         	goto	l9487
 11066  003858                     u10860:
 11067  003858                     
 11068                           ; BSR set to: 0
 11069                           ;main.c: 332:                 speed = (int16_t) ((0.85) * (distFront - (150)) + (275));
 11070  003858  0E00               	movlw	0
 11071  00385A  6F71               	movwf	___fladd@a& (0+255),b
 11072  00385C  0E80               	movlw	128
 11073  00385E  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11074  003860  0E89               	movlw	137
 11075  003862  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11076  003864  0E43               	movlw	67
 11077  003866  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11078  003868  0E9A               	movlw	154
 11079  00386A  6E2E               	movwf	___flmul@a^0,c
 11080  00386C  0E99               	movlw	153
 11081  00386E  6E2F               	movwf	(___flmul@a+1)^0,c
 11082  003870  0E59               	movlw	89
 11083  003872  6E30               	movwf	(___flmul@a+2)^0,c
 11084  003874  0E3F               	movlw	63
 11085  003876  6E31               	movwf	(___flmul@a+3)^0,c
 11086  003878  0E6A               	movlw	106
 11087  00387A  6F83               	movwf	??_calcSpeed& (0+255),b
 11088  00387C  0EFF               	movlw	255
 11089  00387E  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 11090  003880  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 11091  003884  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 11092  003888  5183               	movf	??_calcSpeed& (0+255),w,b
 11093  00388A  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 11094  00388C  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 11095  00388E  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 11096  003890  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 11097  003894  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 11098  003898  6A1E               	clrf	(___xxtofl@val+2)^0,c
 11099  00389A  6A1F               	clrf	(___xxtofl@val+3)^0,c
 11100  00389C  0E00               	movlw	0
 11101  00389E  ECEE  F01F         	call	___xxtofl
 11102  0038A2  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11103  0038A6  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11104  0038AA  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11105  0038AE  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11106  0038B2  EC01  F014         	call	___flmul	;wreg free
 11107  0038B6  C02A  F06D         	movff	?___flmul,___fladd@b
 11108  0038BA  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 11109  0038BE  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 11110  0038C2  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 11111  0038C6  ECA0  F011         	call	___fladd	;wreg free
 11112  0038CA  C06D  F079         	movff	?___fladd,___fltol@f1
 11113  0038CE  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 11114  0038D2  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 11115  0038D6  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 11116  0038DA  ECA4  F024         	call	___fltol	;wreg free
 11117  0038DE  C079  F087         	movff	?___fltol,calcSpeed@speed
 11118  0038E2  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 11119                           
 11120                           ;main.c: 333:             } else {
 11121  0038E6  EFBA  F01C         	goto	l9505
 11122  0038EA                     l9487:
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;main.c: 334:                 speed = (275);
 11126  0038EA  0E01               	movlw	1
 11127  0038EC  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11128  0038EE  0E13               	movlw	19
 11129  0038F0  6F87               	movwf	calcSpeed@speed& (0+255),b
 11130  0038F2  EFBA  F01C         	goto	l9505
 11131  0038F6                     l9489:
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;main.c: 339:             speed = (-125);
 11135  0038F6  0EFF               	movlw	255
 11136  0038F8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11137  0038FA  0E83               	movlw	131
 11138  0038FC  6F87               	movwf	calcSpeed@speed& (0+255),b
 11139                           
 11140                           ;main.c: 340:             break;
 11141  0038FE  EFBA  F01C         	goto	l9505
 11142  003902                     l9493:
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;main.c: 345:             speed = (200);
 11146  003902  0E00               	movlw	0
 11147  003904  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11148  003906  0EC8               	movlw	200
 11149  003908  6F87               	movwf	calcSpeed@speed& (0+255),b
 11150                           
 11151                           ;main.c: 346:             break;
 11152  00390A  EFBA  F01C         	goto	l9505
 11153  00390E                     l9497:
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;main.c: 351:             speed = (250);
 11157  00390E  0E00               	movlw	0
 11158  003910  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11159  003912  0EFA               	movlw	250
 11160  003914  6F87               	movwf	calcSpeed@speed& (0+255),b
 11161                           
 11162                           ;main.c: 352:             break;
 11163  003916  EFBA  F01C         	goto	l9505
 11164  00391A                     l9503:
 11165                           
 11166                           ; BSR set to: 0
 11167  00391A  51FC               	movf	_driveMode& (0+255),w,b
 11168  00391C  6F83               	movwf	??_calcSpeed& (0+255),b
 11169  00391E  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 11170                           
 11171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11172                           ; Switch size 1, requested type "simple"
 11173                           ; Number of cases is 1, Range of values is 0 to 0
 11174                           ; switch strategies available:
 11175                           ; Name         Instructions Cycles
 11176                           ; simple_byte            4     3 (average)
 11177                           ;	Chosen strategy is simple_byte
 11178  003920  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 11179  003922  0A00               	xorlw	0	; case 0
 11180  003924  B4D8               	btfsc	status,2,c
 11181  003926  EF97  F01C         	goto	l9769
 11182  00392A  EFBA  F01C         	goto	l9505
 11183  00392E                     l9769:
 11184                           
 11185                           ; BSR set to: 0
 11186                           ; Switch size 1, requested type "simple"
 11187                           ; Number of cases is 8, Range of values is 0 to 7
 11188                           ; switch strategies available:
 11189                           ; Name         Instructions Cycles
 11190                           ; simple_byte           25    13 (average)
 11191                           ;	Chosen strategy is simple_byte
 11192  00392E  5183               	movf	??_calcSpeed& (0+255),w,b
 11193  003930  0A00               	xorlw	0	; case 0
 11194  003932  B4D8               	btfsc	status,2,c
 11195  003934  EF14  F01C         	goto	l9479
 11196  003938  0A01               	xorlw	1	; case 1
 11197  00393A  B4D8               	btfsc	status,2,c
 11198  00393C  EFDE  F01B         	goto	l9465
 11199  003940  0A03               	xorlw	3	; case 2
 11200  003942  B4D8               	btfsc	status,2,c
 11201  003944  EF7B  F01C         	goto	l9489
 11202  003948  0A01               	xorlw	1	; case 3
 11203  00394A  B4D8               	btfsc	status,2,c
 11204  00394C  EF7B  F01C         	goto	l9489
 11205  003950  0A07               	xorlw	7	; case 4
 11206  003952  B4D8               	btfsc	status,2,c
 11207  003954  EF81  F01C         	goto	l9493
 11208  003958  0A01               	xorlw	1	; case 5
 11209  00395A  B4D8               	btfsc	status,2,c
 11210  00395C  EF81  F01C         	goto	l9493
 11211  003960  0A03               	xorlw	3	; case 6
 11212  003962  B4D8               	btfsc	status,2,c
 11213  003964  EF87  F01C         	goto	l9497
 11214  003968  0A01               	xorlw	1	; case 7
 11215  00396A  B4D8               	btfsc	status,2,c
 11216  00396C  EF87  F01C         	goto	l9497
 11217  003970  EFBA  F01C         	goto	l9505
 11218  003974                     l9505:
 11219                           
 11220                           ;main.c: 358:     if (speed > (400)) {
 11221  003974  0100               	movlb	0	; () banked
 11222  003976  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 11223  003978  EFC7  F01C         	goto	u10871
 11224  00397C  0E91               	movlw	145
 11225  00397E  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11226  003980  0E01               	movlw	1
 11227  003982  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11228  003984  A0D8               	btfss	status,0,c
 11229  003986  EFC7  F01C         	goto	u10871
 11230  00398A  EFC9  F01C         	goto	u10870
 11231  00398E                     u10871:
 11232  00398E  EFCD  F01C         	goto	l9509
 11233  003992                     u10870:
 11234  003992                     
 11235                           ; BSR set to: 0
 11236                           ;main.c: 359:         speed = (400);
 11237  003992  0E01               	movlw	1
 11238  003994  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11239  003996  0E90               	movlw	144
 11240  003998  6F87               	movwf	calcSpeed@speed& (0+255),b
 11241  00399A                     l9509:
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;main.c: 361:     if (speed < (-250)) {
 11245  00399A  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 11246  00399C  EFD9  F01C         	goto	u10881
 11247  0039A0  0E06               	movlw	6
 11248  0039A2  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 11249  0039A4  0EFF               	movlw	255
 11250  0039A6  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 11251  0039A8  B0D8               	btfsc	status,0,c
 11252  0039AA  EFD9  F01C         	goto	u10881
 11253  0039AE  EFDB  F01C         	goto	u10880
 11254  0039B2                     u10881:
 11255  0039B2  EFDF  F01C         	goto	l9513
 11256  0039B6                     u10880:
 11257  0039B6                     
 11258                           ; BSR set to: 0
 11259                           ;main.c: 362:         speed = (-250);
 11260  0039B6  0EFF               	movlw	255
 11261  0039B8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 11262  0039BA  0E06               	movlw	6
 11263  0039BC  6F87               	movwf	calcSpeed@speed& (0+255),b
 11264  0039BE                     l9513:
 11265                           
 11266                           ; BSR set to: 0
 11267                           ;main.c: 364:     setSpeed = speed;
 11268  0039BE  C087  F0EF         	movff	calcSpeed@speed,_setSpeed
 11269  0039C2  C088  F0F0         	movff	calcSpeed@speed+1,_setSpeed+1
 11270  0039C6                     
 11271                           ; BSR set to: 0
 11272  0039C6  0012               	return		;funcret
 11273  0039C8                     __end_of_calcSpeed:
 11274                           	callstack 0
 11275                           
 11276 ;; *************** function ___fladd *****************
 11277 ;; Defined at:
 11278 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 11279 ;; Parameters:    Size  Location     Type
 11280 ;;  b               4   13[BANK0 ] void 
 11281 ;;  a               4   17[BANK0 ] void 
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;  grs             1   24[BANK0 ] unsigned char 
 11284 ;;  bexp            1   23[BANK0 ] unsigned char 
 11285 ;;  aexp            1   22[BANK0 ] unsigned char 
 11286 ;;  signs           1   21[BANK0 ] unsigned char 
 11287 ;; Return value:  Size  Location     Type
 11288 ;;                  4   13[BANK0 ] unsigned char 
 11289 ;; Registers used:
 11290 ;;		wreg, status,2, status,0
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11296 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11297 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11299 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11300 ;;Total ram usage:       16 bytes
 11301 ;; Hardware stack levels used: 1
 11302 ;; Hardware stack levels required when called: 8
 11303 ;; This function calls:
 11304 ;;		Nothing
 11305 ;; This function is called by:
 11306 ;;		_calcSpeed
 11307 ;;		___flsub
 11308 ;;		_efgtoa
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text44
 11313  002340                     __ptext44:
 11314                           	callstack 0
 11315  002340                     ___fladd:
 11316                           	callstack 15
 11317  002340  0100               	movlb	0	; () banked
 11318  002342  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11319  002344  0B80               	andlw	128
 11320  002346  6F75               	movwf	___fladd@signs& (0+255),b
 11321  002348  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11322  00234A  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 11323  00234C  6F77               	movwf	___fladd@bexp& (0+255),b
 11324  00234E                     
 11325                           ; BSR set to: 0
 11326  00234E  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11327  002350  EFAC  F011         	goto	u7671
 11328  002354  EFAE  F011         	goto	u7670
 11329  002358                     u7671:
 11330  002358  EFAF  F011         	goto	l7699
 11331  00235C                     u7670:
 11332  00235C                     
 11333                           ; BSR set to: 0
 11334  00235C  8177               	bsf	___fladd@bexp& (0+255),0,b
 11335  00235E                     l7699:
 11336                           
 11337                           ; BSR set to: 0
 11338  00235E  5177               	movf	___fladd@bexp& (0+255),w,b
 11339  002360  B4D8               	btfsc	status,2,c
 11340  002362  EFB5  F011         	goto	u7681
 11341  002366  EFB7  F011         	goto	u7680
 11342  00236A                     u7681:
 11343  00236A  EFCC  F011         	goto	l7709
 11344  00236E                     u7680:
 11345  00236E                     
 11346                           ; BSR set to: 0
 11347  00236E  2977               	incf	___fladd@bexp& (0+255),w,b
 11348  002370  A4D8               	btfss	status,2,c
 11349  002372  EFBD  F011         	goto	u7691
 11350  002376  EFBF  F011         	goto	u7690
 11351  00237A                     u7691:
 11352  00237A  EFC7  F011         	goto	l7705
 11353  00237E                     u7690:
 11354  00237E                     
 11355                           ; BSR set to: 0
 11356  00237E  0E00               	movlw	0
 11357  002380  6F6D               	movwf	___fladd@b& (0+255),b
 11358  002382  0E00               	movlw	0
 11359  002384  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11360  002386  0E00               	movlw	0
 11361  002388  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11362  00238A  0E00               	movlw	0
 11363  00238C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11364  00238E                     l7705:
 11365                           
 11366                           ; BSR set to: 0
 11367  00238E  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11368  002390                     
 11369                           ; BSR set to: 0
 11370  002390  0E00               	movlw	0
 11371  002392  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11372  002394  EFD4  F011         	goto	l7711
 11373  002398                     l7709:
 11374                           
 11375                           ; BSR set to: 0
 11376  002398  0E00               	movlw	0
 11377  00239A  6F6D               	movwf	___fladd@b& (0+255),b
 11378  00239C  0E00               	movlw	0
 11379  00239E  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11380  0023A0  0E00               	movlw	0
 11381  0023A2  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11382  0023A4  0E00               	movlw	0
 11383  0023A6  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11384  0023A8                     l7711:
 11385                           
 11386                           ; BSR set to: 0
 11387  0023A8  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11388  0023AA  0B80               	andlw	128
 11389  0023AC  6F76               	movwf	___fladd@aexp& (0+255),b
 11390  0023AE                     
 11391                           ; BSR set to: 0
 11392  0023AE  5175               	movf	___fladd@signs& (0+255),w,b
 11393  0023B0  1976               	xorwf	___fladd@aexp& (0+255),w,b
 11394  0023B2  B4D8               	btfsc	status,2,c
 11395  0023B4  EFDE  F011         	goto	u7701
 11396  0023B8  EFE0  F011         	goto	u7700
 11397  0023BC                     u7701:
 11398  0023BC  EFE1  F011         	goto	l7717
 11399  0023C0                     u7700:
 11400  0023C0                     
 11401                           ; BSR set to: 0
 11402  0023C0  8D75               	bsf	___fladd@signs& (0+255),6,b
 11403  0023C2                     l7717:
 11404                           
 11405                           ; BSR set to: 0
 11406  0023C2  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11407  0023C4  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 11408  0023C6  6F76               	movwf	___fladd@aexp& (0+255),b
 11409  0023C8                     
 11410                           ; BSR set to: 0
 11411  0023C8  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 11412  0023CA  EFE9  F011         	goto	u7711
 11413  0023CE  EFEB  F011         	goto	u7710
 11414  0023D2                     u7711:
 11415  0023D2  EFEC  F011         	goto	l7723
 11416  0023D6                     u7710:
 11417  0023D6                     
 11418                           ; BSR set to: 0
 11419  0023D6  8176               	bsf	___fladd@aexp& (0+255),0,b
 11420  0023D8                     l7723:
 11421                           
 11422                           ; BSR set to: 0
 11423  0023D8  5176               	movf	___fladd@aexp& (0+255),w,b
 11424  0023DA  B4D8               	btfsc	status,2,c
 11425  0023DC  EFF2  F011         	goto	u7721
 11426  0023E0  EFF4  F011         	goto	u7720
 11427  0023E4                     u7721:
 11428  0023E4  EF09  F012         	goto	l7733
 11429  0023E8                     u7720:
 11430  0023E8                     
 11431                           ; BSR set to: 0
 11432  0023E8  2976               	incf	___fladd@aexp& (0+255),w,b
 11433  0023EA  A4D8               	btfss	status,2,c
 11434  0023EC  EFFA  F011         	goto	u7731
 11435  0023F0  EFFC  F011         	goto	u7730
 11436  0023F4                     u7731:
 11437  0023F4  EF04  F012         	goto	l7729
 11438  0023F8                     u7730:
 11439  0023F8                     
 11440                           ; BSR set to: 0
 11441  0023F8  0E00               	movlw	0
 11442  0023FA  6F71               	movwf	___fladd@a& (0+255),b
 11443  0023FC  0E00               	movlw	0
 11444  0023FE  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11445  002400  0E00               	movlw	0
 11446  002402  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11447  002404  0E00               	movlw	0
 11448  002406  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11449  002408                     l7729:
 11450                           
 11451                           ; BSR set to: 0
 11452  002408  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 11453  00240A                     
 11454                           ; BSR set to: 0
 11455  00240A  0E00               	movlw	0
 11456  00240C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11457  00240E  EF11  F012         	goto	l7735
 11458  002412                     l7733:
 11459                           
 11460                           ; BSR set to: 0
 11461  002412  0E00               	movlw	0
 11462  002414  6F71               	movwf	___fladd@a& (0+255),b
 11463  002416  0E00               	movlw	0
 11464  002418  6F72               	movwf	(___fladd@a+1)& (0+255),b
 11465  00241A  0E00               	movlw	0
 11466  00241C  6F73               	movwf	(___fladd@a+2)& (0+255),b
 11467  00241E  0E00               	movlw	0
 11468  002420  6F74               	movwf	(___fladd@a+3)& (0+255),b
 11469  002422                     l7735:
 11470                           
 11471                           ; BSR set to: 0
 11472  002422  5177               	movf	___fladd@bexp& (0+255),w,b
 11473  002424  5D76               	subwf	___fladd@aexp& (0+255),w,b
 11474  002426  B0D8               	btfsc	status,0,c
 11475  002428  EF18  F012         	goto	u7741
 11476  00242C  EF1A  F012         	goto	u7740
 11477  002430                     u7741:
 11478  002430  EF41  F012         	goto	l7771
 11479  002434                     u7740:
 11480  002434                     
 11481                           ; BSR set to: 0
 11482  002434  AD75               	btfss	___fladd@signs& (0+255),6,b
 11483  002436  EF1F  F012         	goto	u7751
 11484  00243A  EF21  F012         	goto	u7750
 11485  00243E                     u7751:
 11486  00243E  EF23  F012         	goto	l7741
 11487  002442                     u7750:
 11488  002442                     
 11489                           ; BSR set to: 0
 11490  002442  0E80               	movlw	128
 11491  002444  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11492  002446                     l7741:
 11493                           
 11494                           ; BSR set to: 0
 11495  002446  C077  F078         	movff	___fladd@bexp,___fladd@grs
 11496  00244A                     
 11497                           ; BSR set to: 0
 11498  00244A  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11499  00244E                     
 11500                           ; BSR set to: 0
 11501  00244E  C078  F076         	movff	___fladd@grs,___fladd@aexp
 11502  002452                     
 11503                           ; BSR set to: 0
 11504  002452  C06D  F078         	movff	___fladd@b,___fladd@grs
 11505  002456                     
 11506                           ; BSR set to: 0
 11507  002456  C071  F06D         	movff	___fladd@a,___fladd@b
 11508  00245A                     
 11509                           ; BSR set to: 0
 11510  00245A  C078  F071         	movff	___fladd@grs,___fladd@a
 11511  00245E                     
 11512                           ; BSR set to: 0
 11513  00245E  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 11514  002462                     
 11515                           ; BSR set to: 0
 11516  002462  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 11517  002466                     
 11518                           ; BSR set to: 0
 11519  002466  C078  F072         	movff	___fladd@grs,___fladd@a+1
 11520  00246A                     
 11521                           ; BSR set to: 0
 11522  00246A  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 11523  00246E                     
 11524                           ; BSR set to: 0
 11525  00246E  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 11526  002472                     
 11527                           ; BSR set to: 0
 11528  002472  C078  F073         	movff	___fladd@grs,___fladd@a+2
 11529  002476                     
 11530                           ; BSR set to: 0
 11531  002476  C070  F078         	movff	___fladd@b+3,___fladd@grs
 11532  00247A                     
 11533                           ; BSR set to: 0
 11534  00247A  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 11535  00247E                     
 11536                           ; BSR set to: 0
 11537  00247E  C078  F074         	movff	___fladd@grs,___fladd@a+3
 11538  002482                     l7771:
 11539                           
 11540                           ; BSR set to: 0
 11541  002482  0E00               	movlw	0
 11542  002484  6F78               	movwf	___fladd@grs& (0+255),b
 11543  002486                     
 11544                           ; BSR set to: 0
 11545  002486  5177               	movf	___fladd@bexp& (0+255),w,b
 11546  002488  C076  F036         	movff	___fladd@aexp,??___fladd
 11547  00248C  6A37               	clrf	(??___fladd+1)^0,c
 11548  00248E  5E36               	subwf	??___fladd^0,f,c
 11549  002490  0E00               	movlw	0
 11550  002492  5A37               	subwfb	(??___fladd+1)^0,f,c
 11551  002494  BE37               	btfsc	(??___fladd+1)^0,7,c
 11552  002496  EF56  F012         	goto	u7761
 11553  00249A  5037               	movf	(??___fladd+1)^0,w,c
 11554  00249C  E109               	bnz	u7760
 11555  00249E  0E1A               	movlw	26
 11556  0024A0  5C36               	subwf	??___fladd^0,w,c
 11557  0024A2  A0D8               	btfss	status,0,c
 11558  0024A4  EF56  F012         	goto	u7761
 11559  0024A8  EF58  F012         	goto	u7760
 11560  0024AC                     u7761:
 11561  0024AC  EF8F  F012         	goto	l1940
 11562  0024B0                     u7760:
 11563  0024B0                     
 11564                           ; BSR set to: 0
 11565  0024B0  516D               	movf	___fladd@b& (0+255),w,b
 11566  0024B2  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11567  0024B4  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11568  0024B6  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11569  0024B8  A4D8               	btfss	status,2,c
 11570  0024BA  EF61  F012         	goto	u7771
 11571  0024BE  EF64  F012         	goto	u7770
 11572  0024C2                     u7771:
 11573  0024C2  0E01               	movlw	1
 11574  0024C4  EF65  F012         	goto	u7780
 11575  0024C8                     u7770:
 11576  0024C8  0E00               	movlw	0
 11577  0024CA                     u7780:
 11578  0024CA  6F78               	movwf	___fladd@grs& (0+255),b
 11579  0024CC                     
 11580                           ; BSR set to: 0
 11581  0024CC  0E00               	movlw	0
 11582  0024CE  6F6D               	movwf	___fladd@b& (0+255),b
 11583  0024D0  0E00               	movlw	0
 11584  0024D2  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11585  0024D4  0E00               	movlw	0
 11586  0024D6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11587  0024D8  0E00               	movlw	0
 11588  0024DA  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11589  0024DC                     
 11590                           ; BSR set to: 0
 11591  0024DC  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 11592  0024E0  EF98  F012         	goto	l1939
 11593  0024E4                     l1941:
 11594                           
 11595                           ; BSR set to: 0
 11596  0024E4  A178               	btfss	___fladd@grs& (0+255),0,b
 11597  0024E6  EF77  F012         	goto	u7791
 11598  0024EA  EF79  F012         	goto	u7790
 11599  0024EE                     u7791:
 11600  0024EE  EF7F  F012         	goto	l7783
 11601  0024F2                     u7790:
 11602  0024F2                     
 11603                           ; BSR set to: 0
 11604  0024F2  90D8               	bcf	status,0,c
 11605  0024F4  3178               	rrcf	___fladd@grs& (0+255),w,b
 11606  0024F6  0901               	iorlw	1
 11607  0024F8  6F78               	movwf	___fladd@grs& (0+255),b
 11608  0024FA  EF81  F012         	goto	l7785
 11609  0024FE                     l7783:
 11610                           
 11611                           ; BSR set to: 0
 11612  0024FE  90D8               	bcf	status,0,c
 11613  002500  3378               	rrcf	___fladd@grs& (0+255),f,b
 11614  002502                     l7785:
 11615                           
 11616                           ; BSR set to: 0
 11617  002502  A16D               	btfss	___fladd@b& (0+255),0,b
 11618  002504  EF86  F012         	goto	u7801
 11619  002508  EF88  F012         	goto	u7800
 11620  00250C                     u7801:
 11621  00250C  EF89  F012         	goto	l7789
 11622  002510                     u7800:
 11623  002510                     
 11624                           ; BSR set to: 0
 11625  002510  8F78               	bsf	___fladd@grs& (0+255),7,b
 11626  002512                     l7789:
 11627                           
 11628                           ; BSR set to: 0
 11629  002512  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11630  002514  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11631  002516  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11632  002518  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11633  00251A  336D               	rrcf	___fladd@b& (0+255),f,b
 11634  00251C                     
 11635                           ; BSR set to: 0
 11636  00251C  2B77               	incf	___fladd@bexp& (0+255),f,b
 11637  00251E                     l1940:
 11638                           
 11639                           ; BSR set to: 0
 11640  00251E  5176               	movf	___fladd@aexp& (0+255),w,b
 11641  002520  5D77               	subwf	___fladd@bexp& (0+255),w,b
 11642  002522  A0D8               	btfss	status,0,c
 11643  002524  EF96  F012         	goto	u7811
 11644  002528  EF98  F012         	goto	u7810
 11645  00252C                     u7811:
 11646  00252C  EF72  F012         	goto	l1941
 11647  002530                     u7810:
 11648  002530                     l1939:
 11649                           
 11650                           ; BSR set to: 0
 11651  002530  BD75               	btfsc	___fladd@signs& (0+255),6,b
 11652  002532  EF9D  F012         	goto	u7821
 11653  002536  EF9F  F012         	goto	u7820
 11654  00253A                     u7821:
 11655  00253A  EFDF  F012         	goto	l7817
 11656  00253E                     u7820:
 11657  00253E                     
 11658                           ; BSR set to: 0
 11659  00253E  5177               	movf	___fladd@bexp& (0+255),w,b
 11660  002540  A4D8               	btfss	status,2,c
 11661  002542  EFA5  F012         	goto	u7831
 11662  002546  EFA7  F012         	goto	u7830
 11663  00254A                     u7831:
 11664  00254A  EFB1  F012         	goto	l7799
 11665  00254E                     u7830:
 11666  00254E                     
 11667                           ; BSR set to: 0
 11668  00254E  0E00               	movlw	0
 11669  002550  6F6D               	movwf	?___fladd& (0+255),b
 11670  002552  0E00               	movlw	0
 11671  002554  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11672  002556  0E00               	movlw	0
 11673  002558  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11674  00255A  0E00               	movlw	0
 11675  00255C  6F70               	movwf	(?___fladd+3)& (0+255),b
 11676  00255E  EF00  F014         	goto	l1948
 11677  002562                     l7799:
 11678                           
 11679                           ; BSR set to: 0
 11680  002562  5171               	movf	___fladd@a& (0+255),w,b
 11681  002564  276D               	addwf	___fladd@b& (0+255),f,b
 11682  002566  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11683  002568  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11684  00256A  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11685  00256C  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11686  00256E  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11687  002570  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11688  002572                     
 11689                           ; BSR set to: 0
 11690  002572  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11691  002574  EFBE  F012         	goto	u7841
 11692  002578  EFC0  F012         	goto	u7840
 11693  00257C                     u7841:
 11694  00257C  EF6C  F013         	goto	l7853
 11695  002580                     u7840:
 11696  002580                     
 11697                           ; BSR set to: 0
 11698  002580  A178               	btfss	___fladd@grs& (0+255),0,b
 11699  002582  EFC5  F012         	goto	u7851
 11700  002586  EFC7  F012         	goto	u7850
 11701  00258A                     u7851:
 11702  00258A  EFCD  F012         	goto	l7807
 11703  00258E                     u7850:
 11704  00258E                     
 11705                           ; BSR set to: 0
 11706  00258E  90D8               	bcf	status,0,c
 11707  002590  3178               	rrcf	___fladd@grs& (0+255),w,b
 11708  002592  0901               	iorlw	1
 11709  002594  6F78               	movwf	___fladd@grs& (0+255),b
 11710  002596  EFCF  F012         	goto	l7809
 11711  00259A                     l7807:
 11712                           
 11713                           ; BSR set to: 0
 11714  00259A  90D8               	bcf	status,0,c
 11715  00259C  3378               	rrcf	___fladd@grs& (0+255),f,b
 11716  00259E                     l7809:
 11717                           
 11718                           ; BSR set to: 0
 11719  00259E  A16D               	btfss	___fladd@b& (0+255),0,b
 11720  0025A0  EFD4  F012         	goto	u7861
 11721  0025A4  EFD6  F012         	goto	u7860
 11722  0025A8                     u7861:
 11723  0025A8  EFD7  F012         	goto	l7813
 11724  0025AC                     u7860:
 11725  0025AC                     
 11726                           ; BSR set to: 0
 11727  0025AC  8F78               	bsf	___fladd@grs& (0+255),7,b
 11728  0025AE                     l7813:
 11729                           
 11730                           ; BSR set to: 0
 11731  0025AE  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 11732  0025B0  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 11733  0025B2  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 11734  0025B4  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 11735  0025B6  336D               	rrcf	___fladd@b& (0+255),f,b
 11736  0025B8                     
 11737                           ; BSR set to: 0
 11738  0025B8  2B77               	incf	___fladd@bexp& (0+255),f,b
 11739  0025BA  EF6C  F013         	goto	l7853
 11740  0025BE                     l7817:
 11741                           
 11742                           ; BSR set to: 0
 11743  0025BE  5171               	movf	___fladd@a& (0+255),w,b
 11744  0025C0  5D6D               	subwf	___fladd@b& (0+255),w,b
 11745  0025C2  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11746  0025C4  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 11747  0025C6  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11748  0025C8  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 11749  0025CA  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11750  0025CC  0A80               	xorlw	128
 11751  0025CE  6E36               	movwf	??___fladd^0,c
 11752  0025D0  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11753  0025D2  0A80               	xorlw	128
 11754  0025D4  5836               	subwfb	??___fladd^0,w,c
 11755  0025D6  B0D8               	btfsc	status,0,c
 11756  0025D8  EFF0  F012         	goto	u7871
 11757  0025DC  EFF2  F012         	goto	u7870
 11758  0025E0                     u7871:
 11759  0025E0  EF1D  F013         	goto	l7827
 11760  0025E4                     u7870:
 11761  0025E4                     
 11762                           ; BSR set to: 0
 11763  0025E4  516D               	movf	___fladd@b& (0+255),w,b
 11764  0025E6  5D71               	subwf	___fladd@a& (0+255),w,b
 11765  0025E8  6E36               	movwf	??___fladd^0,c
 11766  0025EA  516E               	movf	(___fladd@b+1)& (0+255),w,b
 11767  0025EC  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 11768  0025EE  6E37               	movwf	(??___fladd+1)^0,c
 11769  0025F0  516F               	movf	(___fladd@b+2)& (0+255),w,b
 11770  0025F2  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 11771  0025F4  6E38               	movwf	(??___fladd+2)^0,c
 11772  0025F6  5170               	movf	(___fladd@b+3)& (0+255),w,b
 11773  0025F8  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 11774  0025FA  6E39               	movwf	(??___fladd+3)^0,c
 11775  0025FC  0EFF               	movlw	255
 11776  0025FE  2436               	addwf	??___fladd^0,w,c
 11777  002600  6F6D               	movwf	___fladd@b& (0+255),b
 11778  002602  0EFF               	movlw	255
 11779  002604  2037               	addwfc	(??___fladd+1)^0,w,c
 11780  002606  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11781  002608  0EFF               	movlw	255
 11782  00260A  2038               	addwfc	(??___fladd+2)^0,w,c
 11783  00260C  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11784  00260E  0EFF               	movlw	255
 11785  002610  2039               	addwfc	(??___fladd+3)^0,w,c
 11786  002612  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11787  002614  0E80               	movlw	128
 11788  002616  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11789  002618                     
 11790                           ; BSR set to: 0
 11791  002618  6D78               	negf	___fladd@grs& (0+255),b
 11792  00261A                     
 11793                           ; BSR set to: 0
 11794  00261A  5178               	movf	___fladd@grs& (0+255),w,b
 11795  00261C  A4D8               	btfss	status,2,c
 11796  00261E  EF13  F013         	goto	u7881
 11797  002622  EF15  F013         	goto	u7880
 11798  002626                     u7881:
 11799  002626  EF25  F013         	goto	l1956
 11800  00262A                     u7880:
 11801  00262A                     
 11802                           ; BSR set to: 0
 11803  00262A  0E01               	movlw	1
 11804  00262C  276D               	addwf	___fladd@b& (0+255),f,b
 11805  00262E  0E00               	movlw	0
 11806  002630  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11807  002632  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11808  002634  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11809  002636  EF25  F013         	goto	l1956
 11810  00263A                     l7827:
 11811                           
 11812                           ; BSR set to: 0
 11813  00263A  5171               	movf	___fladd@a& (0+255),w,b
 11814  00263C  5F6D               	subwf	___fladd@b& (0+255),f,b
 11815  00263E  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11816  002640  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 11817  002642  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11818  002644  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 11819  002646  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11820  002648  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 11821  00264A                     l1956:
 11822                           
 11823                           ; BSR set to: 0
 11824  00264A  516D               	movf	___fladd@b& (0+255),w,b
 11825  00264C  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11826  00264E  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11827  002650  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11828  002652  A4D8               	btfss	status,2,c
 11829  002654  EF2E  F013         	goto	u7891
 11830  002658  EF30  F013         	goto	u7890
 11831  00265C                     u7891:
 11832  00265C  EF65  F013         	goto	l7851
 11833  002660                     u7890:
 11834  002660                     
 11835                           ; BSR set to: 0
 11836  002660  5178               	movf	___fladd@grs& (0+255),w,b
 11837  002662  A4D8               	btfss	status,2,c
 11838  002664  EF36  F013         	goto	u7901
 11839  002668  EF38  F013         	goto	u7900
 11840  00266C                     u7901:
 11841  00266C  EF65  F013         	goto	l7851
 11842  002670                     u7900:
 11843  002670                     
 11844                           ; BSR set to: 0
 11845  002670  0E00               	movlw	0
 11846  002672  6F6D               	movwf	?___fladd& (0+255),b
 11847  002674  0E00               	movlw	0
 11848  002676  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11849  002678  0E00               	movlw	0
 11850  00267A  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11851  00267C  0E00               	movlw	0
 11852  00267E  6F70               	movwf	(?___fladd+3)& (0+255),b
 11853  002680  EF00  F014         	goto	l1948
 11854  002684                     l7835:
 11855                           
 11856                           ; BSR set to: 0
 11857  002684  90D8               	bcf	status,0,c
 11858  002686  376D               	rlcf	___fladd@b& (0+255),f,b
 11859  002688  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 11860  00268A  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 11861  00268C  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 11862  00268E                     
 11863                           ; BSR set to: 0
 11864  00268E  AF78               	btfss	___fladd@grs& (0+255),7,b
 11865  002690  EF4C  F013         	goto	u7911
 11866  002694  EF4E  F013         	goto	u7910
 11867  002698                     u7911:
 11868  002698  EF4F  F013         	goto	l7841
 11869  00269C                     u7910:
 11870  00269C                     
 11871                           ; BSR set to: 0
 11872  00269C  816D               	bsf	___fladd@b& (0+255),0,b
 11873  00269E                     l7841:
 11874                           
 11875                           ; BSR set to: 0
 11876  00269E  A178               	btfss	___fladd@grs& (0+255),0,b
 11877  0026A0  EF54  F013         	goto	u7921
 11878  0026A4  EF56  F013         	goto	u7920
 11879  0026A8                     u7921:
 11880  0026A8  EF5A  F013         	goto	l7845
 11881  0026AC                     u7920:
 11882  0026AC                     
 11883                           ; BSR set to: 0
 11884  0026AC  80D8               	bsf	status,0,c
 11885  0026AE  3778               	rlcf	___fladd@grs& (0+255),f,b
 11886  0026B0  EF5C  F013         	goto	l7847
 11887  0026B4                     l7845:
 11888                           
 11889                           ; BSR set to: 0
 11890  0026B4  90D8               	bcf	status,0,c
 11891  0026B6  3778               	rlcf	___fladd@grs& (0+255),f,b
 11892  0026B8                     l7847:
 11893                           
 11894                           ; BSR set to: 0
 11895  0026B8  5177               	movf	___fladd@bexp& (0+255),w,b
 11896  0026BA  B4D8               	btfsc	status,2,c
 11897  0026BC  EF62  F013         	goto	u7931
 11898  0026C0  EF64  F013         	goto	u7930
 11899  0026C4                     u7931:
 11900  0026C4  EF65  F013         	goto	l7851
 11901  0026C8                     u7930:
 11902  0026C8                     
 11903                           ; BSR set to: 0
 11904  0026C8  0777               	decf	___fladd@bexp& (0+255),f,b
 11905  0026CA                     l7851:
 11906                           
 11907                           ; BSR set to: 0
 11908  0026CA  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11909  0026CC  EF6A  F013         	goto	u7941
 11910  0026D0  EF6C  F013         	goto	u7940
 11911  0026D4                     u7941:
 11912  0026D4  EF42  F013         	goto	l7835
 11913  0026D8                     u7940:
 11914  0026D8                     l7853:
 11915                           
 11916                           ; BSR set to: 0
 11917  0026D8  0E00               	movlw	0
 11918  0026DA  6F76               	movwf	___fladd@aexp& (0+255),b
 11919  0026DC                     
 11920                           ; BSR set to: 0
 11921  0026DC  AF78               	btfss	___fladd@grs& (0+255),7,b
 11922  0026DE  EF73  F013         	goto	u7951
 11923  0026E2  EF75  F013         	goto	u7950
 11924  0026E6                     u7951:
 11925  0026E6  EF8D  F013         	goto	l1965
 11926  0026EA                     u7950:
 11927  0026EA                     
 11928                           ; BSR set to: 0
 11929  0026EA  C078  F036         	movff	___fladd@grs,??___fladd
 11930  0026EE  0E7F               	movlw	127
 11931  0026F0  1636               	andwf	??___fladd^0,f,c
 11932  0026F2  B4D8               	btfsc	status,2,c
 11933  0026F4  EF7E  F013         	goto	u7961
 11934  0026F8  EF80  F013         	goto	u7960
 11935  0026FC                     u7961:
 11936  0026FC  EF84  F013         	goto	l1966
 11937  002700                     u7960:
 11938  002700                     l7859:
 11939                           
 11940                           ; BSR set to: 0
 11941  002700  0E01               	movlw	1
 11942  002702  6F76               	movwf	___fladd@aexp& (0+255),b
 11943  002704  EF8D  F013         	goto	l1965
 11944  002708                     l1966:
 11945                           
 11946                           ; BSR set to: 0
 11947  002708  A16D               	btfss	___fladd@b& (0+255),0,b
 11948  00270A  EF89  F013         	goto	u7971
 11949  00270E  EF8B  F013         	goto	u7970
 11950  002712                     u7971:
 11951  002712  EF8D  F013         	goto	l1965
 11952  002716                     u7970:
 11953  002716  EF80  F013         	goto	l7859
 11954  00271A                     l1965:
 11955                           
 11956                           ; BSR set to: 0
 11957  00271A  5176               	movf	___fladd@aexp& (0+255),w,b
 11958  00271C  B4D8               	btfsc	status,2,c
 11959  00271E  EF93  F013         	goto	u7981
 11960  002722  EF95  F013         	goto	u7980
 11961  002726                     u7981:
 11962  002726  EFC0  F013         	goto	l7871
 11963  00272A                     u7980:
 11964  00272A                     
 11965                           ; BSR set to: 0
 11966  00272A  0E01               	movlw	1
 11967  00272C  276D               	addwf	___fladd@b& (0+255),f,b
 11968  00272E  0E00               	movlw	0
 11969  002730  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11970  002732  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11971  002734  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11972  002736                     
 11973                           ; BSR set to: 0
 11974  002736  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11975  002738  EFA0  F013         	goto	u7991
 11976  00273C  EFA2  F013         	goto	u7990
 11977  002740                     u7991:
 11978  002740  EFC0  F013         	goto	l7871
 11979  002744                     u7990:
 11980  002744                     
 11981                           ; BSR set to: 0
 11982  002744  C06D  F036         	movff	___fladd@b,??___fladd
 11983  002748  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 11984  00274C  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 11985  002750  C070  F039         	movff	___fladd@b+3,??___fladd+3
 11986  002754  3439               	rlcf	(??___fladd+3)^0,w,c
 11987  002756  3239               	rrcf	(??___fladd+3)^0,f,c
 11988  002758  3238               	rrcf	(??___fladd+2)^0,f,c
 11989  00275A  3237               	rrcf	(??___fladd+1)^0,f,c
 11990  00275C  3236               	rrcf	??___fladd^0,f,c
 11991  00275E  C036  F06D         	movff	??___fladd,___fladd@b
 11992  002762  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 11993  002766  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 11994  00276A  C039  F070         	movff	??___fladd+3,___fladd@b+3
 11995  00276E  2977               	incf	___fladd@bexp& (0+255),w,b
 11996  002770  B4D8               	btfsc	status,2,c
 11997  002772  EFBD  F013         	goto	u8001
 11998  002776  EFBF  F013         	goto	u8000
 11999  00277A                     u8001:
 12000  00277A  EFC0  F013         	goto	l7871
 12001  00277E                     u8000:
 12002  00277E                     
 12003                           ; BSR set to: 0
 12004  00277E  2B77               	incf	___fladd@bexp& (0+255),f,b
 12005  002780                     l7871:
 12006                           
 12007                           ; BSR set to: 0
 12008  002780  2977               	incf	___fladd@bexp& (0+255),w,b
 12009  002782  B4D8               	btfsc	status,2,c
 12010  002784  EFC6  F013         	goto	u8011
 12011  002788  EFC8  F013         	goto	u8010
 12012  00278C                     u8011:
 12013  00278C  EFD0  F013         	goto	l7875
 12014  002790                     u8010:
 12015  002790                     
 12016                           ; BSR set to: 0
 12017  002790  5177               	movf	___fladd@bexp& (0+255),w,b
 12018  002792  A4D8               	btfss	status,2,c
 12019  002794  EFCE  F013         	goto	u8021
 12020  002798  EFD0  F013         	goto	u8020
 12021  00279C                     u8021:
 12022  00279C  EFE2  F013         	goto	l7879
 12023  0027A0                     u8020:
 12024  0027A0                     l7875:
 12025                           
 12026                           ; BSR set to: 0
 12027  0027A0  0E00               	movlw	0
 12028  0027A2  6F6D               	movwf	___fladd@b& (0+255),b
 12029  0027A4  0E00               	movlw	0
 12030  0027A6  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 12031  0027A8  0E00               	movlw	0
 12032  0027AA  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 12033  0027AC  0E00               	movlw	0
 12034  0027AE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 12035  0027B0  5177               	movf	___fladd@bexp& (0+255),w,b
 12036  0027B2  A4D8               	btfss	status,2,c
 12037  0027B4  EFDE  F013         	goto	u8031
 12038  0027B8  EFE0  F013         	goto	u8030
 12039  0027BC                     u8031:
 12040  0027BC  EFE2  F013         	goto	l7879
 12041  0027C0                     u8030:
 12042  0027C0                     
 12043                           ; BSR set to: 0
 12044  0027C0  0E00               	movlw	0
 12045  0027C2  6F75               	movwf	___fladd@signs& (0+255),b
 12046  0027C4                     l7879:
 12047                           
 12048                           ; BSR set to: 0
 12049  0027C4  A177               	btfss	___fladd@bexp& (0+255),0,b
 12050  0027C6  EFE7  F013         	goto	u8041
 12051  0027CA  EFE9  F013         	goto	u8040
 12052  0027CE                     u8041:
 12053  0027CE  EFEC  F013         	goto	l7883
 12054  0027D2                     u8040:
 12055  0027D2                     
 12056                           ; BSR set to: 0
 12057  0027D2  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 12058  0027D4  EFED  F013         	goto	l7885
 12059  0027D8                     l7883:
 12060                           
 12061                           ; BSR set to: 0
 12062  0027D8  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 12063  0027DA                     l7885:
 12064                           
 12065                           ; BSR set to: 0
 12066  0027DA  90D8               	bcf	status,0,c
 12067  0027DC  3177               	rrcf	___fladd@bexp& (0+255),w,b
 12068  0027DE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 12069  0027E0                     
 12070                           ; BSR set to: 0
 12071  0027E0  AF75               	btfss	___fladd@signs& (0+255),7,b
 12072  0027E2  EFF5  F013         	goto	u8051
 12073  0027E6  EFF7  F013         	goto	u8050
 12074  0027EA                     u8051:
 12075  0027EA  EFF8  F013         	goto	l7891
 12076  0027EE                     u8050:
 12077  0027EE                     
 12078                           ; BSR set to: 0
 12079  0027EE  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 12080  0027F0                     l7891:
 12081                           
 12082                           ; BSR set to: 0
 12083  0027F0  C06D  F06D         	movff	___fladd@b,?___fladd
 12084  0027F4  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 12085  0027F8  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 12086  0027FC  C070  F070         	movff	___fladd@b+3,?___fladd+3
 12087  002800                     l1948:
 12088                           
 12089                           ; BSR set to: 0
 12090  002800  0012               	return		;funcret
 12091  002802                     __end_of___fladd:
 12092                           	callstack 0
 12093                           
 12094 ;; *************** function _calcMotorPow *****************
 12095 ;; Defined at:
 12096 ;;		line 367 in file "main.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;		None
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 12101 ;;  setSpeedDelt    2   37[BANK0 ] short 
 12102 ;;  addMPow         1   41[BANK0 ] char 
 12103 ;; Return value:  Size  Location     Type
 12104 ;;                  1    wreg      void 
 12105 ;; Registers used:
 12106 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12107 ;; Tracked objects:
 12108 ;;		On entry : 0/0
 12109 ;;		On exit  : 0/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12113 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;Total ram usage:        7 bytes
 12117 ;; Hardware stack levels used: 1
 12118 ;; Hardware stack levels required when called: 10
 12119 ;; This function calls:
 12120 ;;		___awdiv
 12121 ;;		___flmul
 12122 ;;		___fltol
 12123 ;;		___xxtofl
 12124 ;;		_actSpeed
 12125 ;;		_setMotor
 12126 ;; This function is called by:
 12127 ;;		_loop
 12128 ;; This function uses a non-reentrant model
 12129 ;;
 12130                           
 12131                           	psect	text45
 12132  0045CA                     __ptext45:
 12133                           	callstack 0
 12134  0045CA                     _calcMotorPow:
 12135                           	callstack 19
 12136  0045CA                     
 12137                           ;main.c: 368:     currentSpeed = actSpeed();
 12138  0045CA  EC7D  F02B         	call	_actSpeed	;wreg free
 12139  0045CE  C022  F0ED         	movff	?_actSpeed,_currentSpeed
 12140  0045D2  C023  F0EE         	movff	?_actSpeed+1,_currentSpeed+1
 12141  0045D6                     
 12142                           ;main.c: 370:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 12143  0045D6  0100               	movlb	0	; () banked
 12144  0045D8  51ED               	movf	_currentSpeed& (0+255),w,b
 12145  0045DA  5DEF               	subwf	_setSpeed& (0+255),w,b
 12146  0045DC  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 12147  0045DE  51EE               	movf	(_currentSpeed+1)& (0+255),w,b
 12148  0045E0  59F0               	subwfb	(_setSpeed+1)& (0+255),w,b
 12149  0045E2  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 12150  0045E4                     
 12151                           ; BSR set to: 0
 12152                           ;main.c: 371:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 12153  0045E4  0101               	movlb	1	; () banked
 12154  0045E6  512E               	movf	_oldSpeed& (0+255),w,b
 12155  0045E8  0100               	movlb	0	; () banked
 12156  0045EA  5DED               	subwf	_currentSpeed& (0+255),w,b
 12157  0045EC  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 12158  0045EE  0101               	movlb	1	; () banked
 12159  0045F0  512F               	movf	(_oldSpeed+1)& (0+255),w,b
 12160  0045F2  0100               	movlb	0	; () banked
 12161  0045F4  59EE               	subwfb	(_currentSpeed+1)& (0+255),w,b
 12162  0045F6  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 12163  0045F8                     
 12164                           ; BSR set to: 0
 12165                           ;main.c: 377:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 12166  0045F8  0E0A               	movlw	10
 12167  0045FA  6E2E               	movwf	___flmul@a^0,c
 12168  0045FC  0ED7               	movlw	215
 12169  0045FE  6E2F               	movwf	(___flmul@a+1)^0,c
 12170  004600  0EA3               	movlw	163
 12171  004602  6E30               	movwf	(___flmul@a+2)^0,c
 12172  004604  0E3C               	movlw	60
 12173  004606  6E31               	movwf	(___flmul@a+3)^0,c
 12174  004608  0E00               	movlw	0
 12175  00460A  6E17               	movwf	(___awdiv@divisor+1)^0,c
 12176  00460C  0E02               	movlw	2
 12177  00460E  6E16               	movwf	___awdiv@divisor^0,c
 12178  004610  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 12179  004614  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 12180  004618  ECC0  F028         	call	___awdiv	;wreg free
 12181  00461C  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 12182  004620  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 12183  004624  5014               	movf	?___awdiv^0,w,c
 12184  004626  0100               	movlb	0	; () banked
 12185  004628  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 12186  00462A  5015               	movf	(?___awdiv+1)^0,w,c
 12187  00462C  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 12188  00462E  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 12189  004632  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 12190  004636  0E00               	movlw	0
 12191  004638  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 12192  00463A  0EFF               	movlw	-1
 12193  00463C  6E1E               	movwf	(___xxtofl@val+2)^0,c
 12194  00463E  6E1F               	movwf	(___xxtofl@val+3)^0,c
 12195  004640  0E01               	movlw	1
 12196  004642  ECEE  F01F         	call	___xxtofl
 12197  004646  C01C  F02A         	movff	?___xxtofl,___flmul@b
 12198  00464A  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 12199  00464E  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 12200  004652  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 12201  004656  EC01  F014         	call	___flmul	;wreg free
 12202  00465A  C02A  F079         	movff	?___flmul,___fltol@f1
 12203  00465E  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 12204  004662  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 12205  004666  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 12206  00466A  ECA4  F024         	call	___fltol	;wreg free
 12207  00466E  0100               	movlb	0	; () banked
 12208  004670  5179               	movf	?___fltol& (0+255),w,b
 12209  004672  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12210  004674                     
 12211                           ; BSR set to: 0
 12212                           ;main.c: 379:     if (addMPow > (3)) {
 12213  004674  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12214  004676  0A80               	xorlw	128
 12215  004678  0F7C               	addlw	-132
 12216  00467A  A0D8               	btfss	status,0,c
 12217  00467C  EF42  F023         	goto	u10891
 12218  004680  EF44  F023         	goto	u10890
 12219  004684                     u10891:
 12220  004684  EF48  F023         	goto	l9533
 12221  004688                     u10890:
 12222  004688                     
 12223                           ; BSR set to: 0
 12224                           ;main.c: 380:         addMPow = (3);
 12225  004688  0E03               	movlw	3
 12226  00468A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12227                           
 12228                           ;main.c: 381:     } else if (addMPow < -(3)) {
 12229  00468C  EF54  F023         	goto	l9537
 12230  004690                     l9533:
 12231                           
 12232                           ; BSR set to: 0
 12233  004690  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12234  004692  0A80               	xorlw	128
 12235  004694  0F83               	addlw	131
 12236  004696  B0D8               	btfsc	status,0,c
 12237  004698  EF50  F023         	goto	u10901
 12238  00469C  EF52  F023         	goto	u10900
 12239  0046A0                     u10901:
 12240  0046A0  EF54  F023         	goto	l9537
 12241  0046A4                     u10900:
 12242  0046A4                     
 12243                           ; BSR set to: 0
 12244                           ;main.c: 382:         addMPow = -(3);
 12245  0046A4  0EFD               	movlw	253
 12246  0046A6  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 12247  0046A8                     l9537:
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;main.c: 385:     actMotorPow += addMPow;
 12251  0046A8  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 12252  0046AA  27EB               	addwf	_actMotorPow& (0+255),f,b
 12253  0046AC  0E00               	movlw	0
 12254  0046AE  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 12255  0046B0  0EFF               	movlw	255
 12256  0046B2  23EC               	addwfc	(_actMotorPow+1)& (0+255),f,b
 12257  0046B4                     
 12258                           ; BSR set to: 0
 12259                           ;main.c: 387:     if (actMotorPow > (700)) {
 12260  0046B4  BFEC               	btfsc	(_actMotorPow+1)& (0+255),7,b
 12261  0046B6  EF66  F023         	goto	u10911
 12262  0046BA  0EBD               	movlw	189
 12263  0046BC  5DEB               	subwf	_actMotorPow& (0+255),w,b
 12264  0046BE  0E02               	movlw	2
 12265  0046C0  59EC               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12266  0046C2  A0D8               	btfss	status,0,c
 12267  0046C4  EF66  F023         	goto	u10911
 12268  0046C8  EF68  F023         	goto	u10910
 12269  0046CC                     u10911:
 12270  0046CC  EF6E  F023         	goto	l9543
 12271  0046D0                     u10910:
 12272  0046D0                     
 12273                           ; BSR set to: 0
 12274                           ;main.c: 388:         actMotorPow = (700);
 12275  0046D0  0E02               	movlw	2
 12276  0046D2  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
 12277  0046D4  0EBC               	movlw	188
 12278  0046D6  6FEB               	movwf	_actMotorPow& (0+255),b
 12279                           
 12280                           ;main.c: 389:     } else if (actMotorPow < (-400)) {
 12281  0046D8  EF80  F023         	goto	l9547
 12282  0046DC                     l9543:
 12283                           
 12284                           ; BSR set to: 0
 12285  0046DC  AFEC               	btfss	(_actMotorPow+1)& (0+255),7,b
 12286  0046DE  EF7A  F023         	goto	u10921
 12287  0046E2  0E70               	movlw	112
 12288  0046E4  5DEB               	subwf	_actMotorPow& (0+255),w,b
 12289  0046E6  0EFE               	movlw	254
 12290  0046E8  59EC               	subwfb	(_actMotorPow+1)& (0+255),w,b
 12291  0046EA  B0D8               	btfsc	status,0,c
 12292  0046EC  EF7A  F023         	goto	u10921
 12293  0046F0  EF7C  F023         	goto	u10920
 12294  0046F4                     u10921:
 12295  0046F4  EF80  F023         	goto	l9547
 12296  0046F8                     u10920:
 12297  0046F8                     
 12298                           ; BSR set to: 0
 12299                           ;main.c: 390:         actMotorPow = (-400);
 12300  0046F8  0EFE               	movlw	254
 12301  0046FA  6FEC               	movwf	(_actMotorPow+1)& (0+255),b
 12302  0046FC  0E70               	movlw	112
 12303  0046FE  6FEB               	movwf	_actMotorPow& (0+255),b
 12304  004700                     l9547:
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;main.c: 393:     setMotor(actMotorPow);
 12308  004700  C0EB  F018         	movff	_actMotorPow,setMotor@motorPower
 12309  004704  C0EC  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 12310  004708  EC1C  F027         	call	_setMotor	;wreg free
 12311  00470C                     
 12312                           ;main.c: 395:     oldSpeed = currentSpeed;
 12313  00470C  C0ED  F12E         	movff	_currentSpeed,_oldSpeed
 12314  004710  C0EE  F12F         	movff	_currentSpeed+1,_oldSpeed+1
 12315  004714  0012               	return		;funcret
 12316  004716                     __end_of_calcMotorPow:
 12317                           	callstack 0
 12318                           
 12319 ;; *************** function _setMotor *****************
 12320 ;; Defined at:
 12321 ;;		line 398 in file "main.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;  motorPower      2   23[COMRAM] short 
 12324 ;; Auto vars:     Size  Location     Type
 12325 ;;		None
 12326 ;; Return value:  Size  Location     Type
 12327 ;;                  1    wreg      void 
 12328 ;; Registers used:
 12329 ;;		wreg, status,2, status,0, cstack
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 0/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;Total ram usage:        4 bytes
 12340 ;; Hardware stack levels used: 1
 12341 ;; Hardware stack levels required when called: 9
 12342 ;; This function calls:
 12343 ;;		_PWM7_LoadDutyValue
 12344 ;;		_PWM8_LoadDutyValue
 12345 ;; This function is called by:
 12346 ;;		_loop
 12347 ;;		_startAccell
 12348 ;;		_calcMotorPow
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text46
 12353  004E38                     __ptext46:
 12354                           	callstack 0
 12355  004E38                     _setMotor:
 12356                           	callstack 19
 12357  004E38                     
 12358                           ;main.c: 399:     if (motorPower >= (100)) {
 12359  004E38  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12360  004E3A  EF28  F027         	goto	u10351
 12361  004E3E  5019               	movf	(setMotor@motorPower+1)^0,w,c
 12362  004E40  E109               	bnz	u10350
 12363  004E42  0E64               	movlw	100
 12364  004E44  5C18               	subwf	setMotor@motorPower^0,w,c
 12365  004E46  A0D8               	btfss	status,0,c
 12366  004E48  EF28  F027         	goto	u10351
 12367  004E4C  EF2A  F027         	goto	u10350
 12368  004E50                     u10351:
 12369  004E50  EF4A  F027         	goto	l9155
 12370  004E54                     u10350:
 12371  004E54                     
 12372                           ;main.c: 400:         if (motorPower > (700)) {
 12373  004E54  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 12374  004E56  EF36  F027         	goto	u10361
 12375  004E5A  0EBD               	movlw	189
 12376  004E5C  5C18               	subwf	setMotor@motorPower^0,w,c
 12377  004E5E  0E02               	movlw	2
 12378  004E60  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12379  004E62  A0D8               	btfss	status,0,c
 12380  004E64  EF36  F027         	goto	u10361
 12381  004E68  EF38  F027         	goto	u10360
 12382  004E6C                     u10361:
 12383  004E6C  EF3C  F027         	goto	l9151
 12384  004E70                     u10360:
 12385  004E70                     
 12386                           ;main.c: 401:             motorPower = (700);
 12387  004E70  0E02               	movlw	2
 12388  004E72  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12389  004E74  0EBC               	movlw	188
 12390  004E76  6E18               	movwf	setMotor@motorPower^0,c
 12391  004E78                     l9151:
 12392                           
 12393                           ;main.c: 403:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 12394  004E78  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 12395  004E7C  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 12396  004E80  ECF3  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12397  004E84                     
 12398                           ;main.c: 404:         PWM8_LoadDutyValue(0);
 12399  004E84  0E00               	movlw	0
 12400  004E86  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12401  004E88  0E00               	movlw	0
 12402  004E8A  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12403  004E8C  ECD9  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12404                           
 12405                           ;main.c: 405:     } else if (motorPower <= -(100)) {
 12406  004E90  EF8C  F027         	goto	l1391
 12407  004E94                     l9155:
 12408  004E94  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12409  004E96  EF56  F027         	goto	u10371
 12410  004E9A  0E9D               	movlw	157
 12411  004E9C  5C18               	subwf	setMotor@motorPower^0,w,c
 12412  004E9E  0EFF               	movlw	255
 12413  004EA0  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12414  004EA2  B0D8               	btfsc	status,0,c
 12415  004EA4  EF56  F027         	goto	u10371
 12416  004EA8  EF58  F027         	goto	u10370
 12417  004EAC                     u10371:
 12418  004EAC  EF80  F027         	goto	l9165
 12419  004EB0                     u10370:
 12420  004EB0                     
 12421                           ;main.c: 406:         if (motorPower < (-400)) {
 12422  004EB0  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 12423  004EB2  EF64  F027         	goto	u10381
 12424  004EB6  0E70               	movlw	112
 12425  004EB8  5C18               	subwf	setMotor@motorPower^0,w,c
 12426  004EBA  0EFE               	movlw	254
 12427  004EBC  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 12428  004EBE  B0D8               	btfsc	status,0,c
 12429  004EC0  EF64  F027         	goto	u10381
 12430  004EC4  EF66  F027         	goto	u10380
 12431  004EC8                     u10381:
 12432  004EC8  EF6A  F027         	goto	l9161
 12433  004ECC                     u10380:
 12434  004ECC                     
 12435                           ;main.c: 407:             motorPower = (-400);
 12436  004ECC  0EFE               	movlw	254
 12437  004ECE  6E19               	movwf	(setMotor@motorPower+1)^0,c
 12438  004ED0  0E70               	movlw	112
 12439  004ED2  6E18               	movwf	setMotor@motorPower^0,c
 12440  004ED4                     l9161:
 12441                           
 12442                           ;main.c: 409:         PWM7_LoadDutyValue(0);
 12443  004ED4  0E00               	movlw	0
 12444  004ED6  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12445  004ED8  0E00               	movlw	0
 12446  004EDA  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12447  004EDC  ECF3  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12448  004EE0                     
 12449                           ;main.c: 410:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 12450  004EE0  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 12451  004EE4  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 12452  004EE8  1E1A               	comf	??_setMotor^0,f,c
 12453  004EEA  1E1B               	comf	(??_setMotor+1)^0,f,c
 12454  004EEC  4A1A               	infsnz	??_setMotor^0,f,c
 12455  004EEE  2A1B               	incf	(??_setMotor+1)^0,f,c
 12456  004EF0  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 12457  004EF4  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 12458  004EF8  ECD9  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12459                           
 12460                           ;main.c: 411:     } else {
 12461  004EFC  EF8C  F027         	goto	l1391
 12462  004F00                     l9165:
 12463                           
 12464                           ;main.c: 412:         PWM7_LoadDutyValue(0);
 12465  004F00  0E00               	movlw	0
 12466  004F02  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 12467  004F04  0E00               	movlw	0
 12468  004F06  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 12469  004F08  ECF3  F02F         	call	_PWM7_LoadDutyValue	;wreg free
 12470                           
 12471                           ;main.c: 413:         PWM8_LoadDutyValue(0);
 12472  004F0C  0E00               	movlw	0
 12473  004F0E  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 12474  004F10  0E00               	movlw	0
 12475  004F12  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 12476  004F14  ECD9  F02F         	call	_PWM8_LoadDutyValue	;wreg free
 12477  004F18                     l1391:
 12478  004F18  0012               	return		;funcret
 12479  004F1A                     __end_of_setMotor:
 12480                           	callstack 0
 12481                           
 12482 ;; *************** function _PWM8_LoadDutyValue *****************
 12483 ;; Defined at:
 12484 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  1    wreg      void 
 12491 ;; Registers used:
 12492 ;;		wreg, status,2, status,0
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12502 ;;Total ram usage:        4 bytes
 12503 ;; Hardware stack levels used: 1
 12504 ;; Hardware stack levels required when called: 8
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		_setMotor
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512                           	psect	text47
 12513  005FB2                     __ptext47:
 12514                           	callstack 0
 12515  005FB2                     _PWM8_LoadDutyValue:
 12516                           	callstack 19
 12517  005FB2                     
 12518                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12519  005FB2  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12520  005FB6  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 12521  005FBA  90D8               	bcf	status,0,c
 12522  005FBC  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12523  005FBE  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12524  005FC0  90D8               	bcf	status,0,c
 12525  005FC2  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 12526  005FC4  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 12527  005FC6  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12528  005FC8  6E61               	movwf	97,c	;volatile
 12529                           
 12530                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 12531  005FCA  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 12532  005FCE  0E03               	movlw	3
 12533  005FD0  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 12534  005FD2  0E06               	movlw	6
 12535  005FD4  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 12536  005FD6                     u10215:
 12537  005FD6  90D8               	bcf	status,0,c
 12538  005FD8  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 12539  005FDA  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 12540  005FDC  EFEB  F02F         	goto	u10215
 12541  005FE0  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 12542  005FE2  6E60               	movwf	96,c	;volatile
 12543  005FE4  0012               	return		;funcret
 12544  005FE6                     __end_of_PWM8_LoadDutyValue:
 12545                           	callstack 0
 12546                           
 12547 ;; *************** function _PWM7_LoadDutyValue *****************
 12548 ;; Defined at:
 12549 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  dutyValue       2   19[COMRAM] unsigned short 
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;		None
 12554 ;; Return value:  Size  Location     Type
 12555 ;;                  1    wreg      void 
 12556 ;; Registers used:
 12557 ;;		wreg, status,2, status,0
 12558 ;; Tracked objects:
 12559 ;;		On entry : 0/0
 12560 ;;		On exit  : 0/0
 12561 ;;		Unchanged: 0/0
 12562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;Total ram usage:        4 bytes
 12568 ;; Hardware stack levels used: 1
 12569 ;; Hardware stack levels required when called: 8
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		_setMotor
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text48
 12578  005FE6                     __ptext48:
 12579                           	callstack 0
 12580  005FE6                     _PWM7_LoadDutyValue:
 12581                           	callstack 19
 12582  005FE6                     
 12583                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12584  005FE6  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12585  005FEA  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 12586  005FEE  90D8               	bcf	status,0,c
 12587  005FF0  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12588  005FF2  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12589  005FF4  90D8               	bcf	status,0,c
 12590  005FF6  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 12591  005FF8  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 12592  005FFA  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12593  005FFC  6E65               	movwf	101,c	;volatile
 12594                           
 12595                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 12596  005FFE  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 12597  006002  0E03               	movlw	3
 12598  006004  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 12599  006006  0E06               	movlw	6
 12600  006008  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 12601  00600A                     u10205:
 12602  00600A  90D8               	bcf	status,0,c
 12603  00600C  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 12604  00600E  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 12605  006010  EF05  F030         	goto	u10205
 12606  006014  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 12607  006016  6E64               	movwf	100,c	;volatile
 12608  006018  0012               	return		;funcret
 12609  00601A                     __end_of_PWM7_LoadDutyValue:
 12610                           	callstack 0
 12611                           
 12612 ;; *************** function _actSpeed *****************
 12613 ;; Defined at:
 12614 ;;		line 73 in file "main.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;		None
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;  speed           2   35[COMRAM] short 
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  2   33[COMRAM] short 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2, status,0, cstack
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12631 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12632 ;;Total ram usage:        4 bytes
 12633 ;; Hardware stack levels used: 1
 12634 ;; Hardware stack levels required when called: 9
 12635 ;; This function calls:
 12636 ;;		___aldiv
 12637 ;; This function is called by:
 12638 ;;		_calcMotorPow
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text49
 12643  0056FA                     __ptext49:
 12644                           	callstack 0
 12645  0056FA                     _actSpeed:
 12646                           	callstack 19
 12647  0056FA                     
 12648                           ;main.c: 74:     int16_t speed = 0;
 12649  0056FA  0E00               	movlw	0
 12650  0056FC  6E25               	movwf	(actSpeed@speed+1)^0,c
 12651  0056FE  0E00               	movlw	0
 12652  005700  6E24               	movwf	actSpeed@speed^0,c
 12653  005702                     
 12654                           ;main.c: 75:     if (smtPeriod) {
 12655  005702  5048               	movf	_smtPeriod^0,w,c	;volatile
 12656  005704  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 12657  005706  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 12658  005708  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 12659  00570A  B4D8               	btfsc	status,2,c
 12660  00570C  EF8A  F02B         	goto	u6741
 12661  005710  EF8C  F02B         	goto	u6740
 12662  005714                     u6741:
 12663  005714  EFC2  F02B         	goto	l6827
 12664  005718                     u6740:
 12665  005718                     
 12666                           ;main.c: 76:         if (CLC3CONbits.LC3OUT) {
 12667  005718  013C               	movlb	60	; () banked
 12668  00571A  AB60               	btfss	96,5,b	;volatile
 12669  00571C  EF92  F02B         	goto	u6751
 12670  005720  EF94  F02B         	goto	u6750
 12671  005724                     u6751:
 12672  005724  EFAC  F02B         	goto	l6825
 12673  005728                     u6750:
 12674  005728                     
 12675                           ; BSR set to: 60
 12676                           ;main.c: 77:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 12677  005728  0E20               	movlw	32
 12678  00572A  6E14               	movwf	___aldiv@dividend^0,c
 12679  00572C  0EA1               	movlw	161
 12680  00572E  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12681  005730  0E07               	movlw	7
 12682  005732  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12683  005734  0E00               	movlw	0
 12684  005736  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12685  005738  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12686  00573C  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12687  005740  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12688  005744  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12689  005748  EC1E  F024         	call	___aldiv	;wreg free
 12690  00574C  C014  F024         	movff	?___aldiv,actSpeed@speed
 12691  005750  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12692                           
 12693                           ;main.c: 78:         } else {
 12694  005754  EFC2  F02B         	goto	l6827
 12695  005758                     l6825:
 12696                           
 12697                           ; BSR set to: 60
 12698                           ;main.c: 79:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 12699  005758  0EE0               	movlw	224
 12700  00575A  6E14               	movwf	___aldiv@dividend^0,c
 12701  00575C  0E5E               	movlw	94
 12702  00575E  6E15               	movwf	(___aldiv@dividend+1)^0,c
 12703  005760  0EF8               	movlw	248
 12704  005762  6E16               	movwf	(___aldiv@dividend+2)^0,c
 12705  005764  0EFF               	movlw	255
 12706  005766  6E17               	movwf	(___aldiv@dividend+3)^0,c
 12707  005768  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 12708  00576C  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 12709  005770  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 12710  005774  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 12711  005778  EC1E  F024         	call	___aldiv	;wreg free
 12712  00577C  C014  F024         	movff	?___aldiv,actSpeed@speed
 12713  005780  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 12714  005784                     l6827:
 12715                           
 12716                           ;main.c: 82:     return speed;
 12717  005784  C024  F022         	movff	actSpeed@speed,?_actSpeed
 12718  005788  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 12719  00578C  0012               	return		;funcret
 12720  00578E                     __end_of_actSpeed:
 12721                           	callstack 0
 12722                           
 12723 ;; *************** function ___aldiv *****************
 12724 ;; Defined at:
 12725 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;  dividend        4   19[COMRAM] long 
 12728 ;;  divisor         4   23[COMRAM] long 
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;  quotient        4   29[COMRAM] long 
 12731 ;;  sign            1   28[COMRAM] unsigned char 
 12732 ;;  counter         1   27[COMRAM] unsigned char 
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  4   19[COMRAM] long 
 12735 ;; Registers used:
 12736 ;;		wreg, status,2, status,0
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12742 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12743 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12745 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12746 ;;Total ram usage:       14 bytes
 12747 ;; Hardware stack levels used: 1
 12748 ;; Hardware stack levels required when called: 8
 12749 ;; This function calls:
 12750 ;;		Nothing
 12751 ;; This function is called by:
 12752 ;;		_actSpeed
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text50
 12757  00483C                     __ptext50:
 12758                           	callstack 0
 12759  00483C                     ___aldiv:
 12760                           	callstack 19
 12761  00483C  0E00               	movlw	0
 12762  00483E  6E1D               	movwf	___aldiv@sign^0,c
 12763  004840  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 12764  004842  EF27  F024         	goto	u6470
 12765  004846  EF25  F024         	goto	u6471
 12766  00484A                     u6471:
 12767  00484A  EF31  F024         	goto	l6619
 12768  00484E                     u6470:
 12769  00484E  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 12770  004850  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 12771  004852  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 12772  004854  6C18               	negf	___aldiv@divisor^0,c
 12773  004856  0E00               	movlw	0
 12774  004858  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 12775  00485A  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 12776  00485C  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 12777  00485E  0E01               	movlw	1
 12778  004860  6E1D               	movwf	___aldiv@sign^0,c
 12779  004862                     l6619:
 12780  004862  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 12781  004864  EF38  F024         	goto	u6480
 12782  004868  EF36  F024         	goto	u6481
 12783  00486C                     u6481:
 12784  00486C  EF42  F024         	goto	l6625
 12785  004870                     u6480:
 12786  004870  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 12787  004872  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 12788  004874  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 12789  004876  6C14               	negf	___aldiv@dividend^0,c
 12790  004878  0E00               	movlw	0
 12791  00487A  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 12792  00487C  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 12793  00487E  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 12794  004880  0E01               	movlw	1
 12795  004882  1A1D               	xorwf	___aldiv@sign^0,f,c
 12796  004884                     l6625:
 12797  004884  0E00               	movlw	0
 12798  004886  6E1E               	movwf	___aldiv@quotient^0,c
 12799  004888  0E00               	movlw	0
 12800  00488A  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 12801  00488C  0E00               	movlw	0
 12802  00488E  6E20               	movwf	(___aldiv@quotient+2)^0,c
 12803  004890  0E00               	movlw	0
 12804  004892  6E21               	movwf	(___aldiv@quotient+3)^0,c
 12805  004894  5018               	movf	___aldiv@divisor^0,w,c
 12806  004896  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 12807  004898  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 12808  00489A  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 12809  00489C  B4D8               	btfsc	status,2,c
 12810  00489E  EF53  F024         	goto	u6491
 12811  0048A2  EF55  F024         	goto	u6490
 12812  0048A6                     u6491:
 12813  0048A6  EF8B  F024         	goto	l6647
 12814  0048AA                     u6490:
 12815  0048AA  0E01               	movlw	1
 12816  0048AC  6E1C               	movwf	___aldiv@counter^0,c
 12817  0048AE  EF5F  F024         	goto	l6633
 12818  0048B2                     l6631:
 12819  0048B2  90D8               	bcf	status,0,c
 12820  0048B4  3618               	rlcf	___aldiv@divisor^0,f,c
 12821  0048B6  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 12822  0048B8  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 12823  0048BA  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 12824  0048BC  2A1C               	incf	___aldiv@counter^0,f,c
 12825  0048BE                     l6633:
 12826  0048BE  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 12827  0048C0  EF64  F024         	goto	u6501
 12828  0048C4  EF66  F024         	goto	u6500
 12829  0048C8                     u6501:
 12830  0048C8  EF59  F024         	goto	l6631
 12831  0048CC                     u6500:
 12832  0048CC                     l6635:
 12833  0048CC  90D8               	bcf	status,0,c
 12834  0048CE  361E               	rlcf	___aldiv@quotient^0,f,c
 12835  0048D0  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 12836  0048D2  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 12837  0048D4  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 12838  0048D6  5018               	movf	___aldiv@divisor^0,w,c
 12839  0048D8  5C14               	subwf	___aldiv@dividend^0,w,c
 12840  0048DA  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12841  0048DC  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 12842  0048DE  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12843  0048E0  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 12844  0048E2  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12845  0048E4  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 12846  0048E6  A0D8               	btfss	status,0,c
 12847  0048E8  EF78  F024         	goto	u6511
 12848  0048EC  EF7A  F024         	goto	u6510
 12849  0048F0                     u6511:
 12850  0048F0  EF83  F024         	goto	l6643
 12851  0048F4                     u6510:
 12852  0048F4  5018               	movf	___aldiv@divisor^0,w,c
 12853  0048F6  5E14               	subwf	___aldiv@dividend^0,f,c
 12854  0048F8  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12855  0048FA  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 12856  0048FC  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12857  0048FE  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 12858  004900  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12859  004902  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 12860  004904  801E               	bsf	___aldiv@quotient^0,0,c
 12861  004906                     l6643:
 12862  004906  90D8               	bcf	status,0,c
 12863  004908  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12864  00490A  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12865  00490C  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 12866  00490E  3218               	rrcf	___aldiv@divisor^0,f,c
 12867  004910  2E1C               	decfsz	___aldiv@counter^0,f,c
 12868  004912  EF66  F024         	goto	l6635
 12869  004916                     l6647:
 12870  004916  501D               	movf	___aldiv@sign^0,w,c
 12871  004918  B4D8               	btfsc	status,2,c
 12872  00491A  EF91  F024         	goto	u6521
 12873  00491E  EF93  F024         	goto	u6520
 12874  004922                     u6521:
 12875  004922  EF9B  F024         	goto	l6651
 12876  004926                     u6520:
 12877  004926  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 12878  004928  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 12879  00492A  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 12880  00492C  6C1E               	negf	___aldiv@quotient^0,c
 12881  00492E  0E00               	movlw	0
 12882  004930  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12883  004932  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 12884  004934  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 12885  004936                     l6651:
 12886  004936  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 12887  00493A  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 12888  00493E  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 12889  004942  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 12890  004946  0012               	return		;funcret
 12891  004948                     __end_of___aldiv:
 12892                           	callstack 0
 12893                           
 12894 ;; *************** function ___xxtofl *****************
 12895 ;; Defined at:
 12896 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;  sign            1    wreg     unsigned char 
 12899 ;;  val             4   27[COMRAM] long 
 12900 ;; Auto vars:     Size  Location     Type
 12901 ;;  sign            1   35[COMRAM] unsigned char 
 12902 ;;  arg             4   37[COMRAM] unsigned long 
 12903 ;;  exp             1   36[COMRAM] unsigned char 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  4   27[COMRAM] unsigned char 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2, status,0
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12914 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;Total ram usage:       14 bytes
 12918 ;; Hardware stack levels used: 1
 12919 ;; Hardware stack levels required when called: 8
 12920 ;; This function calls:
 12921 ;;		Nothing
 12922 ;; This function is called by:
 12923 ;;		_loop
 12924 ;;		_checkBatt
 12925 ;;		_checkCurveCount
 12926 ;;		_getCurve
 12927 ;;		_calcSpeed
 12928 ;;		_calcMotorPow
 12929 ;;		_setSteering
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           	psect	text51
 12934  003FDC                     __ptext51:
 12935                           	callstack 0
 12936  003FDC                     ___xxtofl:
 12937                           	callstack 19
 12938                           
 12939                           ;incstack = 0
 12940                           ;___xxtofl@sign stored from wreg
 12941  003FDC  6E24               	movwf	___xxtofl@sign^0,c
 12942  003FDE  5024               	movf	___xxtofl@sign^0,w,c
 12943  003FE0  B4D8               	btfsc	status,2,c
 12944  003FE2  EFF5  F01F         	goto	u10241
 12945  003FE6  EFF7  F01F         	goto	u10240
 12946  003FEA                     u10241:
 12947  003FEA  EF19  F020         	goto	l2066
 12948  003FEE                     u10240:
 12949  003FEE  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12950  003FF0  EFFE  F01F         	goto	u10250
 12951  003FF4  EFFC  F01F         	goto	u10251
 12952  003FF8                     u10251:
 12953  003FF8  EF19  F020         	goto	l2066
 12954  003FFC                     u10250:
 12955  003FFC  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 12956  004000  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 12957  004004  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 12958  004008  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 12959  00400C  1E20               	comf	??___xxtofl^0,f,c
 12960  00400E  1E21               	comf	(??___xxtofl+1)^0,f,c
 12961  004010  1E22               	comf	(??___xxtofl+2)^0,f,c
 12962  004012  1E23               	comf	(??___xxtofl+3)^0,f,c
 12963  004014  2A20               	incf	??___xxtofl^0,f,c
 12964  004016  0E00               	movlw	0
 12965  004018  2221               	addwfc	(??___xxtofl+1)^0,f,c
 12966  00401A  2222               	addwfc	(??___xxtofl+2)^0,f,c
 12967  00401C  2223               	addwfc	(??___xxtofl+3)^0,f,c
 12968  00401E  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 12969  004022  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 12970  004026  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 12971  00402A  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 12972  00402E  EF21  F020         	goto	l9097
 12973  004032                     l2066:
 12974  004032  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 12975  004036  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12976  00403A  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12977  00403E  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12978  004042                     l9097:
 12979  004042  501C               	movf	___xxtofl@val^0,w,c
 12980  004044  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 12981  004046  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 12982  004048  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 12983  00404A  A4D8               	btfss	status,2,c
 12984  00404C  EF2A  F020         	goto	u10261
 12985  004050  EF2C  F020         	goto	u10260
 12986  004054                     u10261:
 12987  004054  EF36  F020         	goto	l9103
 12988  004058                     u10260:
 12989  004058  0E00               	movlw	0
 12990  00405A  6E1C               	movwf	?___xxtofl^0,c
 12991  00405C  0E00               	movlw	0
 12992  00405E  6E1D               	movwf	(?___xxtofl+1)^0,c
 12993  004060  0E00               	movlw	0
 12994  004062  6E1E               	movwf	(?___xxtofl+2)^0,c
 12995  004064  0E00               	movlw	0
 12996  004066  6E1F               	movwf	(?___xxtofl+3)^0,c
 12997  004068  EFC7  F020         	goto	l2069
 12998  00406C                     l9103:
 12999  00406C  0E96               	movlw	150
 13000  00406E  6E25               	movwf	___xxtofl@exp^0,c
 13001  004070  EF40  F020         	goto	l9107
 13002  004074                     l9105:
 13003  004074  2A25               	incf	___xxtofl@exp^0,f,c
 13004  004076  90D8               	bcf	status,0,c
 13005  004078  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 13006  00407A  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 13007  00407C  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 13008  00407E  3226               	rrcf	___xxtofl@arg^0,f,c
 13009  004080                     l9107:
 13010  004080  0E00               	movlw	0
 13011  004082  1426               	andwf	___xxtofl@arg^0,w,c
 13012  004084  6E20               	movwf	??___xxtofl^0,c
 13013  004086  0E00               	movlw	0
 13014  004088  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 13015  00408A  6E21               	movwf	(??___xxtofl+1)^0,c
 13016  00408C  0E00               	movlw	0
 13017  00408E  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 13018  004090  6E22               	movwf	(??___xxtofl+2)^0,c
 13019  004092  0EFE               	movlw	254
 13020  004094  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 13021  004096  6E23               	movwf	(??___xxtofl+3)^0,c
 13022  004098  5020               	movf	??___xxtofl^0,w,c
 13023  00409A  1021               	iorwf	(??___xxtofl+1)^0,w,c
 13024  00409C  1022               	iorwf	(??___xxtofl+2)^0,w,c
 13025  00409E  1023               	iorwf	(??___xxtofl+3)^0,w,c
 13026  0040A0  A4D8               	btfss	status,2,c
 13027  0040A2  EF55  F020         	goto	u10271
 13028  0040A6  EF57  F020         	goto	u10270
 13029  0040AA                     u10271:
 13030  0040AA  EF3A  F020         	goto	l9105
 13031  0040AE                     u10270:
 13032  0040AE  EF65  F020         	goto	l2073
 13033  0040B2                     l9109:
 13034  0040B2  2A25               	incf	___xxtofl@exp^0,f,c
 13035  0040B4  0E01               	movlw	1
 13036  0040B6  2626               	addwf	___xxtofl@arg^0,f,c
 13037  0040B8  0E00               	movlw	0
 13038  0040BA  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 13039  0040BC  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 13040  0040BE  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 13041  0040C0  90D8               	bcf	status,0,c
 13042  0040C2  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 13043  0040C4  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 13044  0040C6  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 13045  0040C8  3226               	rrcf	___xxtofl@arg^0,f,c
 13046  0040CA                     l2073:
 13047  0040CA  0E00               	movlw	0
 13048  0040CC  1426               	andwf	___xxtofl@arg^0,w,c
 13049  0040CE  6E20               	movwf	??___xxtofl^0,c
 13050  0040D0  0E00               	movlw	0
 13051  0040D2  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 13052  0040D4  6E21               	movwf	(??___xxtofl+1)^0,c
 13053  0040D6  0E00               	movlw	0
 13054  0040D8  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 13055  0040DA  6E22               	movwf	(??___xxtofl+2)^0,c
 13056  0040DC  0EFF               	movlw	255
 13057  0040DE  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 13058  0040E0  6E23               	movwf	(??___xxtofl+3)^0,c
 13059  0040E2  5020               	movf	??___xxtofl^0,w,c
 13060  0040E4  1021               	iorwf	(??___xxtofl+1)^0,w,c
 13061  0040E6  1022               	iorwf	(??___xxtofl+2)^0,w,c
 13062  0040E8  1023               	iorwf	(??___xxtofl+3)^0,w,c
 13063  0040EA  A4D8               	btfss	status,2,c
 13064  0040EC  EF7A  F020         	goto	u10281
 13065  0040F0  EF7C  F020         	goto	u10280
 13066  0040F4                     u10281:
 13067  0040F4  EF59  F020         	goto	l9109
 13068  0040F8                     u10280:
 13069  0040F8  EF84  F020         	goto	l9117
 13070  0040FC                     l9115:
 13071  0040FC  0625               	decf	___xxtofl@exp^0,f,c
 13072  0040FE  90D8               	bcf	status,0,c
 13073  004100  3626               	rlcf	___xxtofl@arg^0,f,c
 13074  004102  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 13075  004104  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 13076  004106  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 13077  004108                     l9117:
 13078  004108  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 13079  00410A  EF89  F020         	goto	u10291
 13080  00410E  EF8B  F020         	goto	u10290
 13081  004112                     u10291:
 13082  004112  EF93  F020         	goto	l2080
 13083  004116                     u10290:
 13084  004116  0E02               	movlw	2
 13085  004118  6025               	cpfslt	___xxtofl@exp^0,c
 13086  00411A  EF91  F020         	goto	u10301
 13087  00411E  EF93  F020         	goto	u10300
 13088  004122                     u10301:
 13089  004122  EF7E  F020         	goto	l9115
 13090  004126                     u10300:
 13091  004126                     l2080:
 13092  004126  B025               	btfsc	___xxtofl@exp^0,0,c
 13093  004128  EF98  F020         	goto	u10311
 13094  00412C  EF9A  F020         	goto	u10310
 13095  004130                     u10311:
 13096  004130  EF9B  F020         	goto	l9123
 13097  004134                     u10310:
 13098  004134  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 13099  004136                     l9123:
 13100  004136  90D8               	bcf	status,0,c
 13101  004138  3225               	rrcf	___xxtofl@exp^0,f,c
 13102  00413A  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 13103  00413E  6A21               	clrf	(??___xxtofl+1)^0,c
 13104  004140  6A22               	clrf	(??___xxtofl+2)^0,c
 13105  004142  6A23               	clrf	(??___xxtofl+3)^0,c
 13106  004144  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 13107  004148  6A22               	clrf	(??___xxtofl+2)^0,c
 13108  00414A  6A21               	clrf	(??___xxtofl+1)^0,c
 13109  00414C  6A20               	clrf	??___xxtofl^0,c
 13110  00414E  5020               	movf	??___xxtofl^0,w,c
 13111  004150  1226               	iorwf	___xxtofl@arg^0,f,c
 13112  004152  5021               	movf	(??___xxtofl+1)^0,w,c
 13113  004154  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 13114  004156  5022               	movf	(??___xxtofl+2)^0,w,c
 13115  004158  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 13116  00415A  5023               	movf	(??___xxtofl+3)^0,w,c
 13117  00415C  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 13118  00415E  5024               	movf	___xxtofl@sign^0,w,c
 13119  004160  B4D8               	btfsc	status,2,c
 13120  004162  EFB5  F020         	goto	u10321
 13121  004166  EFB7  F020         	goto	u10320
 13122  00416A                     u10321:
 13123  00416A  EFBF  F020         	goto	l9133
 13124  00416E                     u10320:
 13125  00416E  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 13126  004170  EFBE  F020         	goto	u10330
 13127  004174  EFBC  F020         	goto	u10331
 13128  004178                     u10331:
 13129  004178  EFBF  F020         	goto	l9133
 13130  00417C                     u10330:
 13131  00417C  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 13132  00417E                     l9133:
 13133  00417E  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 13134  004182  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 13135  004186  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 13136  00418A  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 13137  00418E                     l2069:
 13138  00418E  0012               	return		;funcret
 13139  004190                     __end_of___xxtofl:
 13140                           	callstack 0
 13141                           
 13142 ;; *************** function ___fltol *****************
 13143 ;; Defined at:
 13144 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;  f1              4   25[BANK0 ] unsigned char 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  exp1            1   34[BANK0 ] unsigned char 
 13149 ;;  sign1           1   33[BANK0 ] unsigned char 
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  4   25[BANK0 ] long 
 13152 ;; Registers used:
 13153 ;;		wreg, status,2, status,0
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13162 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13163 ;;Total ram usage:       10 bytes
 13164 ;; Hardware stack levels used: 1
 13165 ;; Hardware stack levels required when called: 8
 13166 ;; This function calls:
 13167 ;;		Nothing
 13168 ;; This function is called by:
 13169 ;;		_calcSpeed
 13170 ;;		_calcMotorPow
 13171 ;;		_setSteering
 13172 ;;		_efgtoa
 13173 ;; This function uses a non-reentrant model
 13174 ;;
 13175                           
 13176                           	psect	text52
 13177  004948                     __ptext52:
 13178                           	callstack 0
 13179  004948                     ___fltol:
 13180                           	callstack 19
 13181  004948  0100               	movlb	0	; () banked
 13182  00494A  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13183  00494C  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13184  00494E  6F82               	movwf	___fltol@exp1& (0+255),b
 13185  004950  5182               	movf	___fltol@exp1& (0+255),w,b
 13186  004952  A4D8               	btfss	status,2,c
 13187  004954  EFAE  F024         	goto	u8861
 13188  004958  EFB0  F024         	goto	u8860
 13189  00495C                     u8861:
 13190  00495C  EFBA  F024         	goto	l8403
 13191  004960                     u8860:
 13192  004960                     l8399:
 13193                           
 13194                           ; BSR set to: 0
 13195  004960  0E00               	movlw	0
 13196  004962  6F79               	movwf	?___fltol& (0+255),b
 13197  004964  0E00               	movlw	0
 13198  004966  6F7A               	movwf	(?___fltol+1)& (0+255),b
 13199  004968  0E00               	movlw	0
 13200  00496A  6F7B               	movwf	(?___fltol+2)& (0+255),b
 13201  00496C  0E00               	movlw	0
 13202  00496E  6F7C               	movwf	(?___fltol+3)& (0+255),b
 13203  004970  EF27  F025         	goto	l1708
 13204  004974                     l8403:
 13205                           
 13206                           ; BSR set to: 0
 13207  004974  C079  F07D         	movff	___fltol@f1,??___fltol
 13208  004978  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 13209  00497C  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 13210  004980  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 13211  004984  0E20               	movlw	32
 13212  004986  EFCA  F024         	goto	u8870
 13213  00498A                     u8875:
 13214  00498A  90D8               	bcf	status,0,c
 13215  00498C  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 13216  00498E  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 13217  004990  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 13218  004992  337D               	rrcf	??___fltol& (0+255),f,b
 13219  004994                     u8870:
 13220  004994  2EE8               	decfsz	wreg,f,c
 13221  004996  EFC5  F024         	goto	u8875
 13222  00499A  517D               	movf	??___fltol& (0+255),w,b
 13223  00499C  6F81               	movwf	___fltol@sign1& (0+255),b
 13224  00499E                     
 13225                           ; BSR set to: 0
 13226  00499E  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 13227  0049A0                     
 13228                           ; BSR set to: 0
 13229  0049A0  0EFF               	movlw	255
 13230  0049A2  1779               	andwf	___fltol@f1& (0+255),f,b
 13231  0049A4  0EFF               	movlw	255
 13232  0049A6  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 13233  0049A8  0EFF               	movlw	255
 13234  0049AA  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 13235  0049AC  0E00               	movlw	0
 13236  0049AE  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 13237  0049B0                     
 13238                           ; BSR set to: 0
 13239  0049B0  0E96               	movlw	150
 13240  0049B2  5F82               	subwf	___fltol@exp1& (0+255),f,b
 13241  0049B4                     
 13242                           ; BSR set to: 0
 13243  0049B4  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 13244  0049B6  EFE1  F024         	goto	u8880
 13245  0049BA  EFDF  F024         	goto	u8881
 13246  0049BE                     u8881:
 13247  0049BE  EFF7  F024         	goto	l8423
 13248  0049C2                     u8880:
 13249  0049C2                     
 13250                           ; BSR set to: 0
 13251  0049C2  5182               	movf	___fltol@exp1& (0+255),w,b
 13252  0049C4  0A80               	xorlw	128
 13253  0049C6  0F97               	addlw	151
 13254  0049C8  B0D8               	btfsc	status,0,c
 13255  0049CA  EFE9  F024         	goto	u8891
 13256  0049CE  EFEB  F024         	goto	u8890
 13257  0049D2                     u8891:
 13258  0049D2  EFED  F024         	goto	l8419
 13259  0049D6                     u8890:
 13260  0049D6  EFB0  F024         	goto	l8399
 13261  0049DA                     l8419:
 13262                           
 13263                           ; BSR set to: 0
 13264  0049DA  90D8               	bcf	status,0,c
 13265  0049DC  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13266  0049DE  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13267  0049E0  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13268  0049E2  3379               	rrcf	___fltol@f1& (0+255),f,b
 13269  0049E4                     
 13270                           ; BSR set to: 0
 13271  0049E4  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 13272  0049E6  EFED  F024         	goto	l8419
 13273  0049EA  EF0F  F025         	goto	l8433
 13274  0049EE                     l8423:
 13275                           
 13276                           ; BSR set to: 0
 13277  0049EE  0E1F               	movlw	31
 13278  0049F0  6582               	cpfsgt	___fltol@exp1& (0+255),b
 13279  0049F2  EFFD  F024         	goto	u8901
 13280  0049F6  EFFF  F024         	goto	u8900
 13281  0049FA                     u8901:
 13282  0049FA  EF07  F025         	goto	l8431
 13283  0049FE                     u8900:
 13284  0049FE  EFB0  F024         	goto	l8399
 13285  004A02                     l8429:
 13286                           
 13287                           ; BSR set to: 0
 13288  004A02  90D8               	bcf	status,0,c
 13289  004A04  3779               	rlcf	___fltol@f1& (0+255),f,b
 13290  004A06  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13291  004A08  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13292  004A0A  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13293  004A0C  0782               	decf	___fltol@exp1& (0+255),f,b
 13294  004A0E                     l8431:
 13295                           
 13296                           ; BSR set to: 0
 13297  004A0E  5182               	movf	___fltol@exp1& (0+255),w,b
 13298  004A10  A4D8               	btfss	status,2,c
 13299  004A12  EF0D  F025         	goto	u8911
 13300  004A16  EF0F  F025         	goto	u8910
 13301  004A1A                     u8911:
 13302  004A1A  EF01  F025         	goto	l8429
 13303  004A1E                     u8910:
 13304  004A1E                     l8433:
 13305                           
 13306                           ; BSR set to: 0
 13307  004A1E  5181               	movf	___fltol@sign1& (0+255),w,b
 13308  004A20  B4D8               	btfsc	status,2,c
 13309  004A22  EF15  F025         	goto	u8921
 13310  004A26  EF17  F025         	goto	u8920
 13311  004A2A                     u8921:
 13312  004A2A  EF1F  F025         	goto	l8437
 13313  004A2E                     u8920:
 13314  004A2E                     
 13315                           ; BSR set to: 0
 13316  004A2E  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 13317  004A30  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 13318  004A32  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 13319  004A34  6D79               	negf	___fltol@f1& (0+255),b
 13320  004A36  0E00               	movlw	0
 13321  004A38  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13322  004A3A  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13323  004A3C  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13324  004A3E                     l8437:
 13325                           
 13326                           ; BSR set to: 0
 13327  004A3E  C079  F079         	movff	___fltol@f1,?___fltol
 13328  004A42  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 13329  004A46  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 13330  004A4A  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 13331  004A4E                     l1708:
 13332                           
 13333                           ; BSR set to: 0
 13334  004A4E  0012               	return		;funcret
 13335  004A50                     __end_of___fltol:
 13336                           	callstack 0
 13337                           
 13338 ;; *************** function ___flmul *****************
 13339 ;; Defined at:
 13340 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;  b               4   41[COMRAM] long 
 13343 ;;  a               4   45[COMRAM] long 
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;  prod            4    7[BANK0 ] struct .
 13346 ;;  grs             4    2[BANK0 ] unsigned long 
 13347 ;;  temp            2   11[BANK0 ] struct .
 13348 ;;  bexp            1    6[BANK0 ] unsigned char 
 13349 ;;  aexp            1    1[BANK0 ] unsigned char 
 13350 ;;  sign            1    0[BANK0 ] unsigned char 
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  4   41[COMRAM] unsigned char 
 13353 ;; Registers used:
 13354 ;;		wreg, status,2, status,0, prodl, prodh
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/0
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13361 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;Total ram usage:       25 bytes
 13365 ;; Hardware stack levels used: 1
 13366 ;; Hardware stack levels required when called: 8
 13367 ;; This function calls:
 13368 ;;		Nothing
 13369 ;; This function is called by:
 13370 ;;		_calcSpeed
 13371 ;;		_calcMotorPow
 13372 ;;		_efgtoa
 13373 ;; This function uses a non-reentrant model
 13374 ;;
 13375                           
 13376                           	psect	text53
 13377  002802                     __ptext53:
 13378                           	callstack 0
 13379  002802                     ___flmul:
 13380                           	callstack 16
 13381  002802  502D               	movf	(___flmul@b+3)^0,w,c
 13382  002804  0B80               	andlw	128
 13383  002806  0100               	movlb	0	; () banked
 13384  002808  6F60               	movwf	___flmul@sign& (0+255),b
 13385  00280A  502D               	movf	(___flmul@b+3)^0,w,c
 13386  00280C  242D               	addwf	(___flmul@b+3)^0,w,c
 13387  00280E  6F66               	movwf	___flmul@bexp& (0+255),b
 13388  002810                     
 13389                           ; BSR set to: 0
 13390  002810  AE2C               	btfss	(___flmul@b+2)^0,7,c
 13391  002812  EF0D  F014         	goto	u8461
 13392  002816  EF0F  F014         	goto	u8460
 13393  00281A                     u8461:
 13394  00281A  EF10  F014         	goto	l8141
 13395  00281E                     u8460:
 13396  00281E                     
 13397                           ; BSR set to: 0
 13398  00281E  8166               	bsf	___flmul@bexp& (0+255),0,b
 13399  002820                     l8141:
 13400                           
 13401                           ; BSR set to: 0
 13402  002820  5166               	movf	___flmul@bexp& (0+255),w,b
 13403  002822  B4D8               	btfsc	status,2,c
 13404  002824  EF16  F014         	goto	u8471
 13405  002828  EF18  F014         	goto	u8470
 13406  00282C                     u8471:
 13407  00282C  EF2B  F014         	goto	l8149
 13408  002830                     u8470:
 13409  002830                     
 13410                           ; BSR set to: 0
 13411  002830  2966               	incf	___flmul@bexp& (0+255),w,b
 13412  002832  A4D8               	btfss	status,2,c
 13413  002834  EF1E  F014         	goto	u8481
 13414  002838  EF20  F014         	goto	u8480
 13415  00283C                     u8481:
 13416  00283C  EF28  F014         	goto	l8147
 13417  002840                     u8480:
 13418  002840                     
 13419                           ; BSR set to: 0
 13420  002840  0E00               	movlw	0
 13421  002842  6E2A               	movwf	___flmul@b^0,c
 13422  002844  0E00               	movlw	0
 13423  002846  6E2B               	movwf	(___flmul@b+1)^0,c
 13424  002848  0E00               	movlw	0
 13425  00284A  6E2C               	movwf	(___flmul@b+2)^0,c
 13426  00284C  0E00               	movlw	0
 13427  00284E  6E2D               	movwf	(___flmul@b+3)^0,c
 13428  002850                     l8147:
 13429                           
 13430                           ; BSR set to: 0
 13431  002850  8E2C               	bsf	(___flmul@b+2)^0,7,c
 13432  002852  EF33  F014         	goto	l8151
 13433  002856                     l8149:
 13434                           
 13435                           ; BSR set to: 0
 13436  002856  0E00               	movlw	0
 13437  002858  6E2A               	movwf	___flmul@b^0,c
 13438  00285A  0E00               	movlw	0
 13439  00285C  6E2B               	movwf	(___flmul@b+1)^0,c
 13440  00285E  0E00               	movlw	0
 13441  002860  6E2C               	movwf	(___flmul@b+2)^0,c
 13442  002862  0E00               	movlw	0
 13443  002864  6E2D               	movwf	(___flmul@b+3)^0,c
 13444  002866                     l8151:
 13445                           
 13446                           ; BSR set to: 0
 13447  002866  5031               	movf	(___flmul@a+3)^0,w,c
 13448  002868  0B80               	andlw	128
 13449  00286A  1B60               	xorwf	___flmul@sign& (0+255),f,b
 13450  00286C                     
 13451                           ; BSR set to: 0
 13452  00286C  5031               	movf	(___flmul@a+3)^0,w,c
 13453  00286E  2431               	addwf	(___flmul@a+3)^0,w,c
 13454  002870  6F61               	movwf	___flmul@aexp& (0+255),b
 13455  002872                     
 13456                           ; BSR set to: 0
 13457  002872  AE30               	btfss	(___flmul@a+2)^0,7,c
 13458  002874  EF3E  F014         	goto	u8491
 13459  002878  EF40  F014         	goto	u8490
 13460  00287C                     u8491:
 13461  00287C  EF41  F014         	goto	l8159
 13462  002880                     u8490:
 13463  002880                     
 13464                           ; BSR set to: 0
 13465  002880  8161               	bsf	___flmul@aexp& (0+255),0,b
 13466  002882                     l8159:
 13467                           
 13468                           ; BSR set to: 0
 13469  002882  5161               	movf	___flmul@aexp& (0+255),w,b
 13470  002884  B4D8               	btfsc	status,2,c
 13471  002886  EF47  F014         	goto	u8501
 13472  00288A  EF49  F014         	goto	u8500
 13473  00288E                     u8501:
 13474  00288E  EF5C  F014         	goto	l8167
 13475  002892                     u8500:
 13476  002892                     
 13477                           ; BSR set to: 0
 13478  002892  2961               	incf	___flmul@aexp& (0+255),w,b
 13479  002894  A4D8               	btfss	status,2,c
 13480  002896  EF4F  F014         	goto	u8511
 13481  00289A  EF51  F014         	goto	u8510
 13482  00289E                     u8511:
 13483  00289E  EF59  F014         	goto	l8165
 13484  0028A2                     u8510:
 13485  0028A2                     
 13486                           ; BSR set to: 0
 13487  0028A2  0E00               	movlw	0
 13488  0028A4  6E2E               	movwf	___flmul@a^0,c
 13489  0028A6  0E00               	movlw	0
 13490  0028A8  6E2F               	movwf	(___flmul@a+1)^0,c
 13491  0028AA  0E00               	movlw	0
 13492  0028AC  6E30               	movwf	(___flmul@a+2)^0,c
 13493  0028AE  0E00               	movlw	0
 13494  0028B0  6E31               	movwf	(___flmul@a+3)^0,c
 13495  0028B2                     l8165:
 13496                           
 13497                           ; BSR set to: 0
 13498  0028B2  8E30               	bsf	(___flmul@a+2)^0,7,c
 13499  0028B4  EF64  F014         	goto	l2025
 13500  0028B8                     l8167:
 13501                           
 13502                           ; BSR set to: 0
 13503  0028B8  0E00               	movlw	0
 13504  0028BA  6E2E               	movwf	___flmul@a^0,c
 13505  0028BC  0E00               	movlw	0
 13506  0028BE  6E2F               	movwf	(___flmul@a+1)^0,c
 13507  0028C0  0E00               	movlw	0
 13508  0028C2  6E30               	movwf	(___flmul@a+2)^0,c
 13509  0028C4  0E00               	movlw	0
 13510  0028C6  6E31               	movwf	(___flmul@a+3)^0,c
 13511  0028C8                     l2025:
 13512                           
 13513                           ; BSR set to: 0
 13514  0028C8  5161               	movf	___flmul@aexp& (0+255),w,b
 13515  0028CA  B4D8               	btfsc	status,2,c
 13516  0028CC  EF6A  F014         	goto	u8521
 13517  0028D0  EF6C  F014         	goto	u8520
 13518  0028D4                     u8521:
 13519  0028D4  EF74  F014         	goto	l8171
 13520  0028D8                     u8520:
 13521  0028D8                     
 13522                           ; BSR set to: 0
 13523  0028D8  5166               	movf	___flmul@bexp& (0+255),w,b
 13524  0028DA  A4D8               	btfss	status,2,c
 13525  0028DC  EF72  F014         	goto	u8531
 13526  0028E0  EF74  F014         	goto	u8530
 13527  0028E4                     u8531:
 13528  0028E4  EF7E  F014         	goto	l8175
 13529  0028E8                     u8530:
 13530  0028E8                     l8171:
 13531                           
 13532                           ; BSR set to: 0
 13533  0028E8  0E00               	movlw	0
 13534  0028EA  6E2A               	movwf	?___flmul^0,c
 13535  0028EC  0E00               	movlw	0
 13536  0028EE  6E2B               	movwf	(?___flmul+1)^0,c
 13537  0028F0  0E00               	movlw	0
 13538  0028F2  6E2C               	movwf	(?___flmul+2)^0,c
 13539  0028F4  0E00               	movlw	0
 13540  0028F6  6E2D               	movwf	(?___flmul+3)^0,c
 13541  0028F8  EF28  F016         	goto	l2029
 13542  0028FC                     l8175:
 13543                           
 13544                           ; BSR set to: 0
 13545  0028FC  5030               	movf	(___flmul@a+2)^0,w,c
 13546  0028FE  022A               	mulwf	___flmul@b^0,c
 13547  002900  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13548  002906  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13549  00290C                     
 13550                           ; BSR set to: 0
 13551  00290C  516B               	movf	___flmul@temp& (0+255),w,b
 13552  00290E  6F62               	movwf	___flmul@grs& (0+255),b
 13553  002910  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 13554  002912  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 13555  002914  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 13556  002916                     
 13557                           ; BSR set to: 0
 13558  002916  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13559  002918  6F67               	movwf	___flmul@prod& (0+255),b
 13560  00291A  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 13561  00291C  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 13562  00291E  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 13563  002920  502F               	movf	(___flmul@a+1)^0,w,c
 13564  002922  022B               	mulwf	(___flmul@b+1)^0,c
 13565  002924  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13566  00292A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13567  002930                     
 13568                           ; BSR set to: 0
 13569  002930  516B               	movf	___flmul@temp& (0+255),w,b
 13570  002932  2762               	addwf	___flmul@grs& (0+255),f,b
 13571  002934  0E00               	movlw	0
 13572  002936  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13573  002938  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13574  00293A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13575  00293C                     
 13576                           ; BSR set to: 0
 13577  00293C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13578  00293E  2767               	addwf	___flmul@prod& (0+255),f,b
 13579  002940  0E00               	movlw	0
 13580  002942  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13581  002944  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13582  002946  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13583  002948  502E               	movf	___flmul@a^0,w,c
 13584  00294A  022C               	mulwf	(___flmul@b+2)^0,c
 13585  00294C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13586  002952  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13587  002958                     
 13588                           ; BSR set to: 0
 13589  002958  516B               	movf	___flmul@temp& (0+255),w,b
 13590  00295A  2762               	addwf	___flmul@grs& (0+255),f,b
 13591  00295C  0E00               	movlw	0
 13592  00295E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13593  002960  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13594  002962  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13595  002964                     
 13596                           ; BSR set to: 0
 13597  002964  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13598  002966  2767               	addwf	___flmul@prod& (0+255),f,b
 13599  002968  0E00               	movlw	0
 13600  00296A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13601  00296C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13602  00296E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13603  002970                     
 13604                           ; BSR set to: 0
 13605  002970  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13606  002974  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13607  002978  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13608  00297C  6B62               	clrf	___flmul@grs& (0+255),b
 13609  00297E                     
 13610                           ; BSR set to: 0
 13611  00297E  502E               	movf	___flmul@a^0,w,c
 13612  002980  022B               	mulwf	(___flmul@b+1)^0,c
 13613  002982  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13614  002988  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13615  00298E                     
 13616                           ; BSR set to: 0
 13617  00298E  516B               	movf	___flmul@temp& (0+255),w,b
 13618  002990  2762               	addwf	___flmul@grs& (0+255),f,b
 13619  002992  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13620  002994  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13621  002996  0E00               	movlw	0
 13622  002998  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13623  00299A  0E00               	movlw	0
 13624  00299C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13625  00299E                     
 13626                           ; BSR set to: 0
 13627  00299E  502F               	movf	(___flmul@a+1)^0,w,c
 13628  0029A0  022A               	mulwf	___flmul@b^0,c
 13629  0029A2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13630  0029A8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13631  0029AE                     
 13632                           ; BSR set to: 0
 13633  0029AE  516B               	movf	___flmul@temp& (0+255),w,b
 13634  0029B0  2762               	addwf	___flmul@grs& (0+255),f,b
 13635  0029B2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13636  0029B4  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13637  0029B6  0E00               	movlw	0
 13638  0029B8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13639  0029BA  0E00               	movlw	0
 13640  0029BC  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13641  0029BE                     
 13642                           ; BSR set to: 0
 13643  0029BE  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13644  0029C2  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13645  0029C6  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13646  0029CA  6B62               	clrf	___flmul@grs& (0+255),b
 13647  0029CC  502E               	movf	___flmul@a^0,w,c
 13648  0029CE  022A               	mulwf	___flmul@b^0,c
 13649  0029D0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13650  0029D6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13651  0029DC                     
 13652                           ; BSR set to: 0
 13653  0029DC  516B               	movf	___flmul@temp& (0+255),w,b
 13654  0029DE  2762               	addwf	___flmul@grs& (0+255),f,b
 13655  0029E0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13656  0029E2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 13657  0029E4  0E00               	movlw	0
 13658  0029E6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 13659  0029E8  0E00               	movlw	0
 13660  0029EA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 13661  0029EC                     
 13662                           ; BSR set to: 0
 13663  0029EC  5030               	movf	(___flmul@a+2)^0,w,c
 13664  0029EE  022B               	mulwf	(___flmul@b+1)^0,c
 13665  0029F0  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13666  0029F6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13667  0029FC  516B               	movf	___flmul@temp& (0+255),w,b
 13668  0029FE  2767               	addwf	___flmul@prod& (0+255),f,b
 13669  002A00  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13670  002A02  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13671  002A04  0E00               	movlw	0
 13672  002A06  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13673  002A08  0E00               	movlw	0
 13674  002A0A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13675  002A0C                     
 13676                           ; BSR set to: 0
 13677  002A0C  502F               	movf	(___flmul@a+1)^0,w,c
 13678  002A0E  022C               	mulwf	(___flmul@b+2)^0,c
 13679  002A10  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13680  002A16  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13681  002A1C                     
 13682                           ; BSR set to: 0
 13683  002A1C  516B               	movf	___flmul@temp& (0+255),w,b
 13684  002A1E  2767               	addwf	___flmul@prod& (0+255),f,b
 13685  002A20  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13686  002A22  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13687  002A24  0E00               	movlw	0
 13688  002A26  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13689  002A28  0E00               	movlw	0
 13690  002A2A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13691  002A2C  5030               	movf	(___flmul@a+2)^0,w,c
 13692  002A2E  022C               	mulwf	(___flmul@b+2)^0,c
 13693  002A30  006F FFCC  F06B    	movff	prodl,___flmul@temp
 13694  002A36  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 13695  002A3C                     
 13696                           ; BSR set to: 0
 13697  002A3C  516B               	movf	___flmul@temp& (0+255),w,b
 13698  002A3E  6E32               	movwf	??___flmul^0,c
 13699  002A40  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13700  002A42  6E33               	movwf	(??___flmul+1)^0,c
 13701  002A44  6A34               	clrf	(??___flmul+2)^0,c
 13702  002A46  6A35               	clrf	(??___flmul+3)^0,c
 13703  002A48  C034  F035         	movff	??___flmul+2,??___flmul+3
 13704  002A4C  C033  F034         	movff	??___flmul+1,??___flmul+2
 13705  002A50  C032  F033         	movff	??___flmul,??___flmul+1
 13706  002A54  6A32               	clrf	??___flmul^0,c
 13707  002A56  5032               	movf	??___flmul^0,w,c
 13708  002A58  2767               	addwf	___flmul@prod& (0+255),f,b
 13709  002A5A  5033               	movf	(??___flmul+1)^0,w,c
 13710  002A5C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13711  002A5E  5034               	movf	(??___flmul+2)^0,w,c
 13712  002A60  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13713  002A62  5035               	movf	(??___flmul+3)^0,w,c
 13714  002A64  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13715  002A66                     
 13716                           ; BSR set to: 0
 13717  002A66  C062  F032         	movff	___flmul@grs,??___flmul
 13718  002A6A  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 13719  002A6E  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 13720  002A72  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 13721  002A76  0E19               	movlw	25
 13722  002A78  EF43  F015         	goto	u8540
 13723  002A7C                     u8545:
 13724  002A7C  90D8               	bcf	status,0,c
 13725  002A7E  3235               	rrcf	(??___flmul+3)^0,f,c
 13726  002A80  3234               	rrcf	(??___flmul+2)^0,f,c
 13727  002A82  3233               	rrcf	(??___flmul+1)^0,f,c
 13728  002A84  3232               	rrcf	??___flmul^0,f,c
 13729  002A86                     u8540:
 13730  002A86  2EE8               	decfsz	wreg,f,c
 13731  002A88  EF3E  F015         	goto	u8545
 13732  002A8C  5032               	movf	??___flmul^0,w,c
 13733  002A8E  2767               	addwf	___flmul@prod& (0+255),f,b
 13734  002A90  5033               	movf	(??___flmul+1)^0,w,c
 13735  002A92  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13736  002A94  5034               	movf	(??___flmul+2)^0,w,c
 13737  002A96  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13738  002A98  5035               	movf	(??___flmul+3)^0,w,c
 13739  002A9A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13740  002A9C                     
 13741                           ; BSR set to: 0
 13742  002A9C  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 13743  002AA0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 13744  002AA4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 13745  002AA8  6B62               	clrf	___flmul@grs& (0+255),b
 13746  002AAA                     
 13747                           ; BSR set to: 0
 13748  002AAA  5161               	movf	___flmul@aexp& (0+255),w,b
 13749  002AAC  C066  F032         	movff	___flmul@bexp,??___flmul
 13750  002AB0  6A33               	clrf	(??___flmul+1)^0,c
 13751  002AB2  2632               	addwf	??___flmul^0,f,c
 13752  002AB4  0E00               	movlw	0
 13753  002AB6  2233               	addwfc	(??___flmul+1)^0,f,c
 13754  002AB8  0E82               	movlw	130
 13755  002ABA  2432               	addwf	??___flmul^0,w,c
 13756  002ABC  6F6B               	movwf	___flmul@temp& (0+255),b
 13757  002ABE  0EFF               	movlw	255
 13758  002AC0  2033               	addwfc	(??___flmul+1)^0,w,c
 13759  002AC2  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 13760  002AC4  EF79  F015         	goto	l8223
 13761  002AC8                     l8217:
 13762                           
 13763                           ; BSR set to: 0
 13764  002AC8  90D8               	bcf	status,0,c
 13765  002ACA  3767               	rlcf	___flmul@prod& (0+255),f,b
 13766  002ACC  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 13767  002ACE  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 13768  002AD0  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 13769  002AD2                     
 13770                           ; BSR set to: 0
 13771  002AD2  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13772  002AD4  EF6E  F015         	goto	u8551
 13773  002AD8  EF70  F015         	goto	u8550
 13774  002ADC                     u8551:
 13775  002ADC  EF71  F015         	goto	l2032
 13776  002AE0                     u8550:
 13777  002AE0                     
 13778                           ; BSR set to: 0
 13779  002AE0  8167               	bsf	___flmul@prod& (0+255),0,b
 13780  002AE2                     l2032:
 13781                           
 13782                           ; BSR set to: 0
 13783  002AE2  90D8               	bcf	status,0,c
 13784  002AE4  3762               	rlcf	___flmul@grs& (0+255),f,b
 13785  002AE6  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 13786  002AE8  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 13787  002AEA  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 13788  002AEC  076B               	decf	___flmul@temp& (0+255),f,b
 13789  002AEE  A0D8               	btfss	status,0,c
 13790  002AF0  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 13791  002AF2                     l8223:
 13792                           
 13793                           ; BSR set to: 0
 13794  002AF2  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 13795  002AF4  EF7E  F015         	goto	u8561
 13796  002AF8  EF80  F015         	goto	u8560
 13797  002AFC                     u8561:
 13798  002AFC  EF64  F015         	goto	l8217
 13799  002B00                     u8560:
 13800  002B00                     
 13801                           ; BSR set to: 0
 13802  002B00  0E00               	movlw	0
 13803  002B02  6F61               	movwf	___flmul@aexp& (0+255),b
 13804  002B04                     
 13805                           ; BSR set to: 0
 13806  002B04  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13807  002B06  EF87  F015         	goto	u8571
 13808  002B0A  EF89  F015         	goto	u8570
 13809  002B0E                     u8571:
 13810  002B0E  EFAD  F015         	goto	l2034
 13811  002B12                     u8570:
 13812  002B12                     
 13813                           ; BSR set to: 0
 13814  002B12  0EFF               	movlw	255
 13815  002B14  1562               	andwf	___flmul@grs& (0+255),w,b
 13816  002B16  6E32               	movwf	??___flmul^0,c
 13817  002B18  0EFF               	movlw	255
 13818  002B1A  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 13819  002B1C  6E33               	movwf	(??___flmul+1)^0,c
 13820  002B1E  0EFF               	movlw	255
 13821  002B20  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 13822  002B22  6E34               	movwf	(??___flmul+2)^0,c
 13823  002B24  0E7F               	movlw	127
 13824  002B26  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 13825  002B28  6E35               	movwf	(??___flmul+3)^0,c
 13826  002B2A  5032               	movf	??___flmul^0,w,c
 13827  002B2C  1033               	iorwf	(??___flmul+1)^0,w,c
 13828  002B2E  1034               	iorwf	(??___flmul+2)^0,w,c
 13829  002B30  1035               	iorwf	(??___flmul+3)^0,w,c
 13830  002B32  B4D8               	btfsc	status,2,c
 13831  002B34  EF9E  F015         	goto	u8581
 13832  002B38  EFA0  F015         	goto	u8580
 13833  002B3C                     u8581:
 13834  002B3C  EFA4  F015         	goto	l2035
 13835  002B40                     u8580:
 13836  002B40                     l8231:
 13837                           
 13838                           ; BSR set to: 0
 13839  002B40  0E01               	movlw	1
 13840  002B42  6F61               	movwf	___flmul@aexp& (0+255),b
 13841  002B44  EFAD  F015         	goto	l2034
 13842  002B48                     l2035:
 13843                           
 13844                           ; BSR set to: 0
 13845  002B48  A167               	btfss	___flmul@prod& (0+255),0,b
 13846  002B4A  EFA9  F015         	goto	u8591
 13847  002B4E  EFAB  F015         	goto	u8590
 13848  002B52                     u8591:
 13849  002B52  EFAD  F015         	goto	l2034
 13850  002B56                     u8590:
 13851  002B56  EFA0  F015         	goto	l8231
 13852  002B5A                     l2034:
 13853                           
 13854                           ; BSR set to: 0
 13855  002B5A  5161               	movf	___flmul@aexp& (0+255),w,b
 13856  002B5C  B4D8               	btfsc	status,2,c
 13857  002B5E  EFB3  F015         	goto	u8601
 13858  002B62  EFB5  F015         	goto	u8600
 13859  002B66                     u8601:
 13860  002B66  EFD9  F015         	goto	l8243
 13861  002B6A                     u8600:
 13862  002B6A                     
 13863                           ; BSR set to: 0
 13864  002B6A  0E01               	movlw	1
 13865  002B6C  2767               	addwf	___flmul@prod& (0+255),f,b
 13866  002B6E  0E00               	movlw	0
 13867  002B70  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13868  002B72  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13869  002B74  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13870  002B76                     
 13871                           ; BSR set to: 0
 13872  002B76  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 13873  002B78  EFC0  F015         	goto	u8611
 13874  002B7C  EFC2  F015         	goto	u8610
 13875  002B80                     u8611:
 13876  002B80  EFD9  F015         	goto	l8243
 13877  002B84                     u8610:
 13878  002B84                     
 13879                           ; BSR set to: 0
 13880  002B84  C067  F032         	movff	___flmul@prod,??___flmul
 13881  002B88  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 13882  002B8C  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 13883  002B90  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 13884  002B94  3435               	rlcf	(??___flmul+3)^0,w,c
 13885  002B96  3235               	rrcf	(??___flmul+3)^0,f,c
 13886  002B98  3234               	rrcf	(??___flmul+2)^0,f,c
 13887  002B9A  3233               	rrcf	(??___flmul+1)^0,f,c
 13888  002B9C  3232               	rrcf	??___flmul^0,f,c
 13889  002B9E  C032  F067         	movff	??___flmul,___flmul@prod
 13890  002BA2  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 13891  002BA6  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 13892  002BAA  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 13893  002BAE                     
 13894                           ; BSR set to: 0
 13895  002BAE  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 13896  002BB0  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 13897  002BB2                     l8243:
 13898                           
 13899                           ; BSR set to: 0
 13900  002BB2  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13901  002BB4  EFE4  F015         	goto	u8621
 13902  002BB8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13903  002BBA  E108               	bnz	u8620
 13904  002BBC  296B               	incf	___flmul@temp& (0+255),w,b
 13905  002BBE  A0D8               	btfss	status,0,c
 13906  002BC0  EFE4  F015         	goto	u8621
 13907  002BC4  EFE6  F015         	goto	u8620
 13908  002BC8                     u8621:
 13909  002BC8  EFF0  F015         	goto	l8247
 13910  002BCC                     u8620:
 13911  002BCC                     
 13912                           ; BSR set to: 0
 13913  002BCC  0E00               	movlw	0
 13914  002BCE  6F67               	movwf	___flmul@prod& (0+255),b
 13915  002BD0  0E00               	movlw	0
 13916  002BD2  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13917  002BD4  0E80               	movlw	128
 13918  002BD6  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13919  002BD8  0E7F               	movlw	127
 13920  002BDA  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13921  002BDC  EF1E  F016         	goto	l8259
 13922  002BE0                     l8247:
 13923                           
 13924                           ; BSR set to: 0
 13925  002BE0  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13926  002BE2  EFFD  F015         	goto	u8630
 13927  002BE6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13928  002BE8  E106               	bnz	u8631
 13929  002BEA  056B               	decf	___flmul@temp& (0+255),w,b
 13930  002BEC  B0D8               	btfsc	status,0,c
 13931  002BEE  EFFB  F015         	goto	u8631
 13932  002BF2  EFFD  F015         	goto	u8630
 13933  002BF6                     u8631:
 13934  002BF6  EF09  F016         	goto	l2042
 13935  002BFA                     u8630:
 13936  002BFA                     
 13937                           ; BSR set to: 0
 13938  002BFA  0E00               	movlw	0
 13939  002BFC  6F67               	movwf	___flmul@prod& (0+255),b
 13940  002BFE  0E00               	movlw	0
 13941  002C00  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13942  002C02  0E00               	movlw	0
 13943  002C04  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13944  002C06  0E00               	movlw	0
 13945  002C08  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13946  002C0A  0E00               	movlw	0
 13947  002C0C  6F60               	movwf	___flmul@sign& (0+255),b
 13948  002C0E  EF1E  F016         	goto	l8259
 13949  002C12                     l2042:
 13950                           
 13951                           ; BSR set to: 0
 13952  002C12  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 13953  002C16                     
 13954                           ; BSR set to: 0
 13955  002C16  0EFF               	movlw	255
 13956  002C18  1767               	andwf	___flmul@prod& (0+255),f,b
 13957  002C1A  0EFF               	movlw	255
 13958  002C1C  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 13959  002C1E  0E7F               	movlw	127
 13960  002C20  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 13961  002C22  0E00               	movlw	0
 13962  002C24  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 13963  002C26                     
 13964                           ; BSR set to: 0
 13965  002C26  A166               	btfss	___flmul@bexp& (0+255),0,b
 13966  002C28  EF18  F016         	goto	u8641
 13967  002C2C  EF1A  F016         	goto	u8640
 13968  002C30                     u8641:
 13969  002C30  EF1B  F016         	goto	l8257
 13970  002C34                     u8640:
 13971  002C34                     
 13972                           ; BSR set to: 0
 13973  002C34  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 13974  002C36                     l8257:
 13975                           
 13976                           ; BSR set to: 0
 13977  002C36  90D8               	bcf	status,0,c
 13978  002C38  3166               	rrcf	___flmul@bexp& (0+255),w,b
 13979  002C3A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13980  002C3C                     l8259:
 13981                           
 13982                           ; BSR set to: 0
 13983  002C3C  5160               	movf	___flmul@sign& (0+255),w,b
 13984  002C3E  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13985  002C40                     
 13986                           ; BSR set to: 0
 13987  002C40  C067  F02A         	movff	___flmul@prod,?___flmul
 13988  002C44  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 13989  002C48  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 13990  002C4C  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 13991  002C50                     l2029:
 13992                           
 13993                           ; BSR set to: 0
 13994  002C50  0012               	return		;funcret
 13995  002C52                     __end_of___flmul:
 13996                           	callstack 0
 13997                           
 13998 ;; *************** function ___awdiv *****************
 13999 ;; Defined at:
 14000 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;  dividend        2   19[COMRAM] int 
 14003 ;;  divisor         2   21[COMRAM] int 
 14004 ;; Auto vars:     Size  Location     Type
 14005 ;;  quotient        2   25[COMRAM] int 
 14006 ;;  sign            1   24[COMRAM] unsigned char 
 14007 ;;  counter         1   23[COMRAM] unsigned char 
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  2   19[COMRAM] int 
 14010 ;; Registers used:
 14011 ;;		wreg, status,2, status,0
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14020 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;Total ram usage:        8 bytes
 14022 ;; Hardware stack levels used: 1
 14023 ;; Hardware stack levels required when called: 8
 14024 ;; This function calls:
 14025 ;;		Nothing
 14026 ;; This function is called by:
 14027 ;;		_calcMotorPow
 14028 ;;		_efgtoa
 14029 ;; This function uses a non-reentrant model
 14030 ;;
 14031                           
 14032                           	psect	text54
 14033  005180                     __ptext54:
 14034                           	callstack 0
 14035  005180                     ___awdiv:
 14036                           	callstack 16
 14037  005180  0E00               	movlw	0
 14038  005182  6E19               	movwf	___awdiv@sign^0,c
 14039  005184  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 14040  005186  EFC9  F028         	goto	u8650
 14041  00518A  EFC7  F028         	goto	u8651
 14042  00518E                     u8651:
 14043  00518E  EFCF  F028         	goto	l8279
 14044  005192                     u8650:
 14045  005192  6C16               	negf	___awdiv@divisor^0,c
 14046  005194  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 14047  005196  B0D8               	btfsc	status,0,c
 14048  005198  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 14049  00519A  0E01               	movlw	1
 14050  00519C  6E19               	movwf	___awdiv@sign^0,c
 14051  00519E                     l8279:
 14052  00519E  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 14053  0051A0  EFD6  F028         	goto	u8660
 14054  0051A4  EFD4  F028         	goto	u8661
 14055  0051A8                     u8661:
 14056  0051A8  EFDC  F028         	goto	l8285
 14057  0051AC                     u8660:
 14058  0051AC  6C14               	negf	___awdiv@dividend^0,c
 14059  0051AE  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 14060  0051B0  B0D8               	btfsc	status,0,c
 14061  0051B2  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 14062  0051B4  0E01               	movlw	1
 14063  0051B6  1A19               	xorwf	___awdiv@sign^0,f,c
 14064  0051B8                     l8285:
 14065  0051B8  0E00               	movlw	0
 14066  0051BA  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 14067  0051BC  0E00               	movlw	0
 14068  0051BE  6E1A               	movwf	___awdiv@quotient^0,c
 14069  0051C0  5016               	movf	___awdiv@divisor^0,w,c
 14070  0051C2  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 14071  0051C4  B4D8               	btfsc	status,2,c
 14072  0051C6  EFE7  F028         	goto	u8671
 14073  0051CA  EFE9  F028         	goto	u8670
 14074  0051CE                     u8671:
 14075  0051CE  EF11  F029         	goto	l8307
 14076  0051D2                     u8670:
 14077  0051D2  0E01               	movlw	1
 14078  0051D4  6E18               	movwf	___awdiv@counter^0,c
 14079  0051D6  EFF1  F028         	goto	l8293
 14080  0051DA                     l8291:
 14081  0051DA  90D8               	bcf	status,0,c
 14082  0051DC  3616               	rlcf	___awdiv@divisor^0,f,c
 14083  0051DE  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 14084  0051E0  2A18               	incf	___awdiv@counter^0,f,c
 14085  0051E2                     l8293:
 14086  0051E2  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 14087  0051E4  EFF6  F028         	goto	u8681
 14088  0051E8  EFF8  F028         	goto	u8680
 14089  0051EC                     u8681:
 14090  0051EC  EFED  F028         	goto	l8291
 14091  0051F0                     u8680:
 14092  0051F0                     l8295:
 14093  0051F0  90D8               	bcf	status,0,c
 14094  0051F2  361A               	rlcf	___awdiv@quotient^0,f,c
 14095  0051F4  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 14096  0051F6  5016               	movf	___awdiv@divisor^0,w,c
 14097  0051F8  5C14               	subwf	___awdiv@dividend^0,w,c
 14098  0051FA  5017               	movf	(___awdiv@divisor+1)^0,w,c
 14099  0051FC  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 14100  0051FE  A0D8               	btfss	status,0,c
 14101  005200  EF04  F029         	goto	u8691
 14102  005204  EF06  F029         	goto	u8690
 14103  005208                     u8691:
 14104  005208  EF0B  F029         	goto	l8303
 14105  00520C                     u8690:
 14106  00520C  5016               	movf	___awdiv@divisor^0,w,c
 14107  00520E  5E14               	subwf	___awdiv@dividend^0,f,c
 14108  005210  5017               	movf	(___awdiv@divisor+1)^0,w,c
 14109  005212  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 14110  005214  801A               	bsf	___awdiv@quotient^0,0,c
 14111  005216                     l8303:
 14112  005216  90D8               	bcf	status,0,c
 14113  005218  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 14114  00521A  3216               	rrcf	___awdiv@divisor^0,f,c
 14115  00521C  2E18               	decfsz	___awdiv@counter^0,f,c
 14116  00521E  EFF8  F028         	goto	l8295
 14117  005222                     l8307:
 14118  005222  5019               	movf	___awdiv@sign^0,w,c
 14119  005224  B4D8               	btfsc	status,2,c
 14120  005226  EF17  F029         	goto	u8701
 14121  00522A  EF19  F029         	goto	u8700
 14122  00522E                     u8701:
 14123  00522E  EF1D  F029         	goto	l8311
 14124  005232                     u8700:
 14125  005232  6C1A               	negf	___awdiv@quotient^0,c
 14126  005234  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 14127  005236  B0D8               	btfsc	status,0,c
 14128  005238  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 14129  00523A                     l8311:
 14130  00523A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 14131  00523E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 14132  005242  0012               	return		;funcret
 14133  005244                     __end_of___awdiv:
 14134                           	callstack 0
 14135                           
 14136 ;; *************** function _SYSTEM_Initialize *****************
 14137 ;; Defined at:
 14138 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;		None
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;		None
 14143 ;; Return value:  Size  Location     Type
 14144 ;;                  1    wreg      void 
 14145 ;; Registers used:
 14146 ;;		wreg, status,2, status,0, cstack
 14147 ;; Tracked objects:
 14148 ;;		On entry : 0/0
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14156 ;;Total ram usage:        0 bytes
 14157 ;; Hardware stack levels used: 1
 14158 ;; Hardware stack levels required when called: 10
 14159 ;; This function calls:
 14160 ;;		_ADCC_Initialize
 14161 ;;		_CCP3_Initialize
 14162 ;;		_CCP4_Initialize
 14163 ;;		_CLC3_Initialize
 14164 ;;		_INTERRUPT_Initialize
 14165 ;;		_OSCILLATOR_Initialize
 14166 ;;		_PIN_MANAGER_Initialize
 14167 ;;		_PMD_Initialize
 14168 ;;		_PWM5_Initialize
 14169 ;;		_PWM6_Initialize
 14170 ;;		_PWM7_Initialize
 14171 ;;		_PWM8_Initialize
 14172 ;;		_SMT1_Initialize
 14173 ;;		_TMR2_Initialize
 14174 ;;		_TMR3_Initialize
 14175 ;;		_TMR4_Initialize
 14176 ;;		_TMR5_Initialize
 14177 ;;		_UART1_Initialize
 14178 ;; This function is called by:
 14179 ;;		_main
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           	psect	text55
 14184  005B28                     __ptext55:
 14185                           	callstack 0
 14186  005B28                     _SYSTEM_Initialize:
 14187                           	callstack 20
 14188  005B28                     
 14189                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14190  005B28  EC6E  F02D         	call	_INTERRUPT_Initialize	;wreg free
 14191                           
 14192                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14193  005B2C  EC52  F031         	call	_PMD_Initialize	;wreg free
 14194                           
 14195                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14196  005B30  EC5B  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 14197                           
 14198                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14199  005B34  ECD3  F031         	call	_OSCILLATOR_Initialize	;wreg free
 14200  005B38                     
 14201                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 14202  005B38  ECA4  F030         	call	_CCP3_Initialize	;wreg free
 14203  005B3C                     
 14204                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 14205  005B3C  EC15  F02D         	call	_ADCC_Initialize	;wreg free
 14206                           
 14207                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 14208  005B40  ECD2  F030         	call	_TMR4_Initialize	;wreg free
 14209  005B44                     
 14210                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 14211  005B44  EC75  F030         	call	_SMT1_Initialize	;wreg free
 14212  005B48                     
 14213                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 14214  005B48  ECA3  F031         	call	_PWM8_Initialize	;wreg free
 14215  005B4C                     
 14216                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 14217  005B4C  EC95  F031         	call	_TMR2_Initialize	;wreg free
 14218  005B50                     
 14219                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 14220  005B50  ECBB  F031         	call	_PWM6_Initialize	;wreg free
 14221                           
 14222                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 14223  005B54  EC8D  F030         	call	_CCP4_Initialize	;wreg free
 14224  005B58                     
 14225                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 14226  005B58  ECE8  F030         	call	_CLC3_Initialize	;wreg free
 14227  005B5C                     
 14228                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 14229  005B5C  EC1B  F02F         	call	_TMR3_Initialize	;wreg free
 14230                           
 14231                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 14232  005B60  ECC7  F031         	call	_PWM5_Initialize	;wreg free
 14233  005B64                     
 14234                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 14235  005B64  ECB9  F02D         	call	_TMR5_Initialize	;wreg free
 14236  005B68                     
 14237                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 14238  005B68  ECAF  F031         	call	_PWM7_Initialize	;wreg free
 14239                           
 14240                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 14241  005B6C  EC90  F02A         	call	_UART1_Initialize	;wreg free
 14242  005B70  0012               	return		;funcret
 14243  005B72                     __end_of_SYSTEM_Initialize:
 14244                           	callstack 0
 14245                           
 14246 ;; *************** function _UART1_Initialize *****************
 14247 ;; Defined at:
 14248 ;;		line 87 in file "mcc_generated_files/uart1.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;		None
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;		None
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  1    wreg      void 
 14255 ;; Registers used:
 14256 ;;		wreg, status,2, status,0, cstack
 14257 ;; Tracked objects:
 14258 ;;		On entry : 0/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14266 ;;Total ram usage:        0 bytes
 14267 ;; Hardware stack levels used: 1
 14268 ;; Hardware stack levels required when called: 9
 14269 ;; This function calls:
 14270 ;;		_UART1_SetErrorHandler
 14271 ;;		_UART1_SetFramingErrorHandler
 14272 ;;		_UART1_SetOverrunErrorHandler
 14273 ;;		_UART1_SetRxInterruptHandler
 14274 ;;		_UART1_SetTxInterruptHandler
 14275 ;; This function is called by:
 14276 ;;		_SYSTEM_Initialize
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           	psect	text56
 14281  005520                     __ptext56:
 14282                           	callstack 0
 14283  005520                     _UART1_Initialize:
 14284                           	callstack 20
 14285  005520                     
 14286                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 14287  005520  0139               	movlb	57	; () banked
 14288  005522  9793               	bcf	147,3,b	;volatile
 14289  005524                     
 14290                           ; BSR set to: 57
 14291                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 14292  005524  0E06               	movlw	low _UART1_Receive_ISR
 14293  005526  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 14294  005528  0E53               	movlw	high _UART1_Receive_ISR
 14295  00552A  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 14296  00552C  ECF8  F031         	call	_UART1_SetRxInterruptHandler	;wreg free
 14297  005530                     
 14298                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 14299  005530  0139               	movlb	57	; () banked
 14300  005532  9993               	bcf	147,4,b	;volatile
 14301                           
 14302                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 14303  005534  0E92               	movlw	low _UART1_Transmit_ISR
 14304  005536  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 14305  005538  0E5C               	movlw	high _UART1_Transmit_ISR
 14306  00553A  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 14307  00553C  ECF3  F031         	call	_UART1_SetTxInterruptHandler	;wreg free
 14308  005540                     
 14309                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 14310  005540  0E00               	movlw	0
 14311  005542  013D               	movlb	61	; () banked
 14312  005544  6FEC               	movwf	236,b	;volatile
 14313  005546                     
 14314                           ; BSR set to: 61
 14315                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 14316  005546  0E00               	movlw	0
 14317  005548  6FED               	movwf	237,b	;volatile
 14318  00554A                     
 14319                           ; BSR set to: 61
 14320                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 14321  00554A  0E00               	movlw	0
 14322  00554C  6FEE               	movwf	238,b	;volatile
 14323  00554E                     
 14324                           ; BSR set to: 61
 14325                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 14326  00554E  0E00               	movlw	0
 14327  005550  6FEF               	movwf	239,b	;volatile
 14328  005552                     
 14329                           ; BSR set to: 61
 14330                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 14331  005552  0E00               	movlw	0
 14332  005554  6FF0               	movwf	240,b	;volatile
 14333  005556                     
 14334                           ; BSR set to: 61
 14335                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 14336  005556  0E00               	movlw	0
 14337  005558  6FF1               	movwf	241,b	;volatile
 14338  00555A                     
 14339                           ; BSR set to: 61
 14340                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 14341  00555A  0EB0               	movlw	176
 14342  00555C  6FF2               	movwf	242,b	;volatile
 14343  00555E                     
 14344                           ; BSR set to: 61
 14345                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 14346  00555E  0E80               	movlw	128
 14347  005560  6FF3               	movwf	243,b	;volatile
 14348  005562                     
 14349                           ; BSR set to: 61
 14350                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 14351  005562  0E00               	movlw	0
 14352  005564  6FF4               	movwf	244,b	;volatile
 14353  005566                     
 14354                           ; BSR set to: 61
 14355                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 14356  005566  0E8A               	movlw	138
 14357  005568  6FF5               	movwf	245,b	;volatile
 14358  00556A                     
 14359                           ; BSR set to: 61
 14360                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 14361  00556A  0E00               	movlw	0
 14362  00556C  6FF6               	movwf	246,b	;volatile
 14363  00556E                     
 14364                           ; BSR set to: 61
 14365                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 14366  00556E  0E00               	movlw	0
 14367  005570  6FF7               	movwf	247,b	;volatile
 14368  005572                     
 14369                           ; BSR set to: 61
 14370                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 14371  005572  0E00               	movlw	0
 14372  005574  6FF8               	movwf	248,b	;volatile
 14373  005576                     
 14374                           ; BSR set to: 61
 14375                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 14376  005576  0E00               	movlw	0
 14377  005578  6FF9               	movwf	249,b	;volatile
 14378  00557A                     
 14379                           ; BSR set to: 61
 14380                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 14381  00557A  0E00               	movlw	0
 14382  00557C  6FFA               	movwf	250,b	;volatile
 14383  00557E                     
 14384                           ; BSR set to: 61
 14385                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 14386  00557E  0E52               	movlw	low _UART1_DefaultFramingErrorHandler
 14387  005580  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 14388  005582  0E64               	movlw	high _UART1_DefaultFramingErrorHandler
 14389  005584  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 14390  005586  EC02  F032         	call	_UART1_SetFramingErrorHandler	;wreg free
 14391  00558A                     
 14392                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 14393  00558A  0E50               	movlw	low _UART1_DefaultOverrunErrorHandler
 14394  00558C  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 14395  00558E  0E64               	movlw	high _UART1_DefaultOverrunErrorHandler
 14396  005590  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 14397  005592  ECFD  F031         	call	_UART1_SetOverrunErrorHandler	;wreg free
 14398  005596                     
 14399                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 14400  005596  0E4A               	movlw	low _UART1_DefaultErrorHandler
 14401  005598  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 14402  00559A  0E64               	movlw	high _UART1_DefaultErrorHandler
 14403  00559C  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 14404  00559E  EC07  F032         	call	_UART1_SetErrorHandler	;wreg free
 14405                           
 14406                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 14407  0055A2  0E00               	movlw	0
 14408  0055A4  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 14409                           
 14410                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 14411  0055A6  0E00               	movlw	0
 14412  0055A8  6E47               	movwf	_uart1TxHead^0,c	;volatile
 14413                           
 14414                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 14415  0055AA  0E00               	movlw	0
 14416  0055AC  6E46               	movwf	_uart1TxTail^0,c	;volatile
 14417                           
 14418                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 14419  0055AE  0E08               	movlw	8
 14420  0055B0  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 14421                           
 14422                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 14423  0055B2  0E00               	movlw	0
 14424  0055B4  6E45               	movwf	_uart1RxHead^0,c	;volatile
 14425                           
 14426                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 14427  0055B6  0E00               	movlw	0
 14428  0055B8  6E44               	movwf	_uart1RxTail^0,c	;volatile
 14429                           
 14430                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 14431  0055BA  0E00               	movlw	0
 14432  0055BC  6E43               	movwf	_uart1RxCount^0,c	;volatile
 14433  0055BE                     
 14434                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 14435  0055BE  0139               	movlb	57	; () banked
 14436  0055C0  8793               	bsf	147,3,b	;volatile
 14437  0055C2                     
 14438                           ; BSR set to: 57
 14439  0055C2  0012               	return		;funcret
 14440  0055C4                     __end_of_UART1_Initialize:
 14441                           	callstack 0
 14442                           
 14443 ;; *************** function _UART1_SetTxInterruptHandler *****************
 14444 ;; Defined at:
 14445 ;;		line 333 in file "mcc_generated_files/uart1.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14448 ;;		 -> UART1_Transmit_ISR(1), 
 14449 ;; Auto vars:     Size  Location     Type
 14450 ;;		None
 14451 ;; Return value:  Size  Location     Type
 14452 ;;                  1    wreg      void 
 14453 ;; Registers used:
 14454 ;;		wreg, status,2, status,0
 14455 ;; Tracked objects:
 14456 ;;		On entry : 0/0
 14457 ;;		On exit  : 0/0
 14458 ;;		Unchanged: 0/0
 14459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14464 ;;Total ram usage:        2 bytes
 14465 ;; Hardware stack levels used: 1
 14466 ;; Hardware stack levels required when called: 8
 14467 ;; This function calls:
 14468 ;;		Nothing
 14469 ;; This function is called by:
 14470 ;;		_UART1_Initialize
 14471 ;; This function uses a non-reentrant model
 14472 ;;
 14473                           
 14474                           	psect	text57
 14475  0063E6                     __ptext57:
 14476                           	callstack 0
 14477  0063E6                     _UART1_SetTxInterruptHandler:
 14478                           	callstack 20
 14479  0063E6                     
 14480                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 14481  0063E6  C014  F1A2         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 14482  0063EA  C015  F1A3         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 14483  0063EE  0012               	return		;funcret
 14484  0063F0                     __end_of_UART1_SetTxInterruptHandler:
 14485                           	callstack 0
 14486                           
 14487 ;; *************** function _UART1_SetRxInterruptHandler *****************
 14488 ;; Defined at:
 14489 ;;		line 329 in file "mcc_generated_files/uart1.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14492 ;;		 -> UART1_Receive_ISR(1), 
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;		None
 14495 ;; Return value:  Size  Location     Type
 14496 ;;                  1    wreg      void 
 14497 ;; Registers used:
 14498 ;;		wreg, status,2, status,0
 14499 ;; Tracked objects:
 14500 ;;		On entry : 0/0
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14508 ;;Total ram usage:        2 bytes
 14509 ;; Hardware stack levels used: 1
 14510 ;; Hardware stack levels required when called: 8
 14511 ;; This function calls:
 14512 ;;		Nothing
 14513 ;; This function is called by:
 14514 ;;		_UART1_Initialize
 14515 ;; This function uses a non-reentrant model
 14516 ;;
 14517                           
 14518                           	psect	text58
 14519  0063F0                     __ptext58:
 14520                           	callstack 0
 14521  0063F0                     _UART1_SetRxInterruptHandler:
 14522                           	callstack 20
 14523  0063F0                     
 14524                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 14525  0063F0  C014  F1A4         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 14526  0063F4  C015  F1A5         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 14527  0063F8  0012               	return		;funcret
 14528  0063FA                     __end_of_UART1_SetRxInterruptHandler:
 14529                           	callstack 0
 14530                           
 14531 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 14532 ;; Defined at:
 14533 ;;		line 319 in file "mcc_generated_files/uart1.c"
 14534 ;; Parameters:    Size  Location     Type
 14535 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14536 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;		None
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  1    wreg      void 
 14541 ;; Registers used:
 14542 ;;		wreg, status,2, status,0
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14552 ;;Total ram usage:        2 bytes
 14553 ;; Hardware stack levels used: 1
 14554 ;; Hardware stack levels required when called: 8
 14555 ;; This function calls:
 14556 ;;		Nothing
 14557 ;; This function is called by:
 14558 ;;		_UART1_Initialize
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           	psect	text59
 14563  0063FA                     __ptext59:
 14564                           	callstack 0
 14565  0063FA                     _UART1_SetOverrunErrorHandler:
 14566                           	callstack 20
 14567  0063FA                     
 14568                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 14569  0063FA  C014  F19E         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 14570  0063FE  C015  F19F         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 14571  006402  0012               	return		;funcret
 14572  006404                     __end_of_UART1_SetOverrunErrorHandler:
 14573                           	callstack 0
 14574                           
 14575 ;; *************** function _UART1_SetFramingErrorHandler *****************
 14576 ;; Defined at:
 14577 ;;		line 315 in file "mcc_generated_files/uart1.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14580 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 14581 ;; Auto vars:     Size  Location     Type
 14582 ;;		None
 14583 ;; Return value:  Size  Location     Type
 14584 ;;                  1    wreg      void 
 14585 ;; Registers used:
 14586 ;;		wreg, status,2, status,0
 14587 ;; Tracked objects:
 14588 ;;		On entry : 0/0
 14589 ;;		On exit  : 0/0
 14590 ;;		Unchanged: 0/0
 14591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14596 ;;Total ram usage:        2 bytes
 14597 ;; Hardware stack levels used: 1
 14598 ;; Hardware stack levels required when called: 8
 14599 ;; This function calls:
 14600 ;;		Nothing
 14601 ;; This function is called by:
 14602 ;;		_UART1_Initialize
 14603 ;; This function uses a non-reentrant model
 14604 ;;
 14605                           
 14606                           	psect	text60
 14607  006404                     __ptext60:
 14608                           	callstack 0
 14609  006404                     _UART1_SetFramingErrorHandler:
 14610                           	callstack 20
 14611  006404                     
 14612                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 14613  006404  C014  F1A0         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 14614  006408  C015  F1A1         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 14615  00640C  0012               	return		;funcret
 14616  00640E                     __end_of_UART1_SetFramingErrorHandler:
 14617                           	callstack 0
 14618                           
 14619 ;; *************** function _UART1_SetErrorHandler *****************
 14620 ;; Defined at:
 14621 ;;		line 323 in file "mcc_generated_files/uart1.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 14624 ;;		 -> UART1_DefaultErrorHandler(1), 
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;		None
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  1    wreg      void 
 14629 ;; Registers used:
 14630 ;;		wreg, status,2, status,0
 14631 ;; Tracked objects:
 14632 ;;		On entry : 0/0
 14633 ;;		On exit  : 0/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14640 ;;Total ram usage:        2 bytes
 14641 ;; Hardware stack levels used: 1
 14642 ;; Hardware stack levels required when called: 8
 14643 ;; This function calls:
 14644 ;;		Nothing
 14645 ;; This function is called by:
 14646 ;;		_UART1_Initialize
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           	psect	text61
 14651  00640E                     __ptext61:
 14652                           	callstack 0
 14653  00640E                     _UART1_SetErrorHandler:
 14654                           	callstack 20
 14655  00640E                     
 14656                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 14657  00640E  C014  F19C         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 14658  006412  C015  F19D         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 14659  006416  0012               	return		;funcret
 14660  006418                     __end_of_UART1_SetErrorHandler:
 14661                           	callstack 0
 14662                           
 14663 ;; *************** function _TMR5_Initialize *****************
 14664 ;; Defined at:
 14665 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14666 ;; Parameters:    Size  Location     Type
 14667 ;;		None
 14668 ;; Auto vars:     Size  Location     Type
 14669 ;;		None
 14670 ;; Return value:  Size  Location     Type
 14671 ;;                  1    wreg      void 
 14672 ;; Registers used:
 14673 ;;		wreg, status,2, status,0, cstack
 14674 ;; Tracked objects:
 14675 ;;		On entry : 0/0
 14676 ;;		On exit  : 0/0
 14677 ;;		Unchanged: 0/0
 14678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14683 ;;Total ram usage:        2 bytes
 14684 ;; Hardware stack levels used: 1
 14685 ;; Hardware stack levels required when called: 9
 14686 ;; This function calls:
 14687 ;;		_TMR5_SetGateInterruptHandler
 14688 ;; This function is called by:
 14689 ;;		_SYSTEM_Initialize
 14690 ;; This function uses a non-reentrant model
 14691 ;;
 14692                           
 14693                           	psect	text62
 14694  005B72                     __ptext62:
 14695                           	callstack 0
 14696  005B72                     _TMR5_Initialize:
 14697                           	callstack 20
 14698  005B72                     
 14699                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 14700  005B72  0EC0               	movlw	192
 14701  005B74  6E9B               	movwf	155,c	;volatile
 14702                           
 14703                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 14704  005B76  0E00               	movlw	0
 14705  005B78  6E9C               	movwf	156,c	;volatile
 14706                           
 14707                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 14708  005B7A  0E05               	movlw	5
 14709  005B7C  6E9D               	movwf	157,c	;volatile
 14710                           
 14711                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 14712  005B7E  0E00               	movlw	0
 14713  005B80  6E99               	movwf	153,c	;volatile
 14714                           
 14715                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 14716  005B82  0E00               	movlw	0
 14717  005B84  6E98               	movwf	152,c	;volatile
 14718  005B86                     
 14719                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 14720  005B86  0139               	movlb	57	; () banked
 14721  005B88  9DA8               	bcf	168,6,b	;volatile
 14722  005B8A                     
 14723                           ; BSR set to: 57
 14724                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 14725  005B8A  5098               	movf	152,w,c	;volatile
 14726  005B8C  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 14727  005B92  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 14728  005B94  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 14729  005B98  6A16               	clrf	??_TMR5_Initialize^0,c
 14730  005B9A  1016               	iorwf	??_TMR5_Initialize^0,w,c
 14731  005B9C  0101               	movlb	1	; () banked
 14732  005B9E  6F96               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 14733  005BA0  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 14734  005BA2  6F97               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 14735  005BA4                     
 14736                           ; BSR set to: 1
 14737                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 14738  005BA4  0139               	movlb	57	; () banked
 14739  005BA6  9FA8               	bcf	168,7,b	;volatile
 14740  005BA8                     
 14741                           ; BSR set to: 57
 14742                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 14743  005BA8  8F98               	bsf	152,7,b	;volatile
 14744  005BAA                     
 14745                           ; BSR set to: 57
 14746                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 14747  005BAA  0E0C               	movlw	low _TMR5_DefaultGateInterruptHandler
 14748  005BAC  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 14749  005BAE  0E63               	movlw	high _TMR5_DefaultGateInterruptHandler
 14750  005BB0  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 14751  005BB2  EC0C  F032         	call	_TMR5_SetGateInterruptHandler	;wreg free
 14752  005BB6                     
 14753                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 14754  005BB6  0E03               	movlw	3
 14755  005BB8  6E9A               	movwf	154,c	;volatile
 14756  005BBA  0012               	return		;funcret
 14757  005BBC                     __end_of_TMR5_Initialize:
 14758                           	callstack 0
 14759                           
 14760 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 14761 ;; Defined at:
 14762 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 14763 ;; Parameters:    Size  Location     Type
 14764 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14765 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 14766 ;; Auto vars:     Size  Location     Type
 14767 ;;		None
 14768 ;; Return value:  Size  Location     Type
 14769 ;;                  1    wreg      void 
 14770 ;; Registers used:
 14771 ;;		wreg, status,2, status,0
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/0
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14781 ;;Total ram usage:        2 bytes
 14782 ;; Hardware stack levels used: 1
 14783 ;; Hardware stack levels required when called: 8
 14784 ;; This function calls:
 14785 ;;		Nothing
 14786 ;; This function is called by:
 14787 ;;		_TMR5_Initialize
 14788 ;; This function uses a non-reentrant model
 14789 ;;
 14790                           
 14791                           	psect	text63
 14792  006418                     __ptext63:
 14793                           	callstack 0
 14794  006418                     _TMR5_SetGateInterruptHandler:
 14795                           	callstack 20
 14796  006418                     
 14797                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 14798  006418  C014  F194         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 14799  00641C  C015  F195         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 14800  006420  0012               	return		;funcret
 14801  006422                     __end_of_TMR5_SetGateInterruptHandler:
 14802                           	callstack 0
 14803                           
 14804 ;; *************** function _TMR4_Initialize *****************
 14805 ;; Defined at:
 14806 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 14807 ;; Parameters:    Size  Location     Type
 14808 ;;		None
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;		None
 14811 ;; Return value:  Size  Location     Type
 14812 ;;                  1    wreg      void 
 14813 ;; Registers used:
 14814 ;;		wreg, status,2, status,0, cstack
 14815 ;; Tracked objects:
 14816 ;;		On entry : 0/0
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14824 ;;Total ram usage:        0 bytes
 14825 ;; Hardware stack levels used: 1
 14826 ;; Hardware stack levels required when called: 9
 14827 ;; This function calls:
 14828 ;;		_TMR4_SetInterruptHandler
 14829 ;; This function is called by:
 14830 ;;		_SYSTEM_Initialize
 14831 ;; This function uses a non-reentrant model
 14832 ;;
 14833                           
 14834                           	psect	text64
 14835  0061A4                     __ptext64:
 14836                           	callstack 0
 14837  0061A4                     _TMR4_Initialize:
 14838                           	callstack 20
 14839  0061A4                     
 14840                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 14841  0061A4  0E01               	movlw	1
 14842  0061A6  6EA2               	movwf	162,c	;volatile
 14843                           
 14844                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 14845  0061A8  0E00               	movlw	0
 14846  0061AA  6EA1               	movwf	161,c	;volatile
 14847                           
 14848                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 14849  0061AC  0E00               	movlw	0
 14850  0061AE  6EA3               	movwf	163,c	;volatile
 14851                           
 14852                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 14853  0061B0  0EF9               	movlw	249
 14854  0061B2  6E9F               	movwf	159,c	;volatile
 14855                           
 14856                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 14857  0061B4  0E00               	movlw	0
 14858  0061B6  6E9E               	movwf	158,c	;volatile
 14859  0061B8                     
 14860                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 14861  0061B8  0139               	movlb	57	; () banked
 14862  0061BA  91A7               	bcf	167,0,b	;volatile
 14863  0061BC                     
 14864                           ; BSR set to: 57
 14865                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 14866  0061BC  8197               	bsf	151,0,b	;volatile
 14867  0061BE                     
 14868                           ; BSR set to: 57
 14869                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 14870  0061BE  0E54               	movlw	low _TMR4_DefaultInterruptHandler
 14871  0061C0  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 14872  0061C2  0E64               	movlw	high _TMR4_DefaultInterruptHandler
 14873  0061C4  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 14874  0061C6  EC11  F032         	call	_TMR4_SetInterruptHandler	;wreg free
 14875  0061CA                     
 14876                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 14877  0061CA  0EE0               	movlw	224
 14878  0061CC  6EA0               	movwf	160,c	;volatile
 14879  0061CE  0012               	return		;funcret
 14880  0061D0                     __end_of_TMR4_Initialize:
 14881                           	callstack 0
 14882                           
 14883 ;; *************** function _TMR4_SetInterruptHandler *****************
 14884 ;; Defined at:
 14885 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14888 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;                  1    wreg      void 
 14893 ;; Registers used:
 14894 ;;		wreg, status,2, status,0
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14904 ;;Total ram usage:        2 bytes
 14905 ;; Hardware stack levels used: 1
 14906 ;; Hardware stack levels required when called: 8
 14907 ;; This function calls:
 14908 ;;		Nothing
 14909 ;; This function is called by:
 14910 ;;		_TMR4_Initialize
 14911 ;;		_main
 14912 ;; This function uses a non-reentrant model
 14913 ;;
 14914                           
 14915                           	psect	text65
 14916  006422                     __ptext65:
 14917                           	callstack 0
 14918  006422                     _TMR4_SetInterruptHandler:
 14919                           	callstack 22
 14920  006422                     
 14921                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 14922  006422  C014  F190         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 14923  006426  C015  F191         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 14924  00642A  0012               	return		;funcret
 14925  00642C                     __end_of_TMR4_SetInterruptHandler:
 14926                           	callstack 0
 14927                           
 14928 ;; *************** function _TMR3_Initialize *****************
 14929 ;; Defined at:
 14930 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 14931 ;; Parameters:    Size  Location     Type
 14932 ;;		None
 14933 ;; Auto vars:     Size  Location     Type
 14934 ;;		None
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  1    wreg      void 
 14937 ;; Registers used:
 14938 ;;		wreg, status,2, status,0
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;Total ram usage:        2 bytes
 14949 ;; Hardware stack levels used: 1
 14950 ;; Hardware stack levels required when called: 8
 14951 ;; This function calls:
 14952 ;;		Nothing
 14953 ;; This function is called by:
 14954 ;;		_SYSTEM_Initialize
 14955 ;; This function uses a non-reentrant model
 14956 ;;
 14957                           
 14958                           	psect	text66
 14959  005E36                     __ptext66:
 14960                           	callstack 0
 14961  005E36                     _TMR3_Initialize:
 14962                           	callstack 21
 14963  005E36                     
 14964                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 14965  005E36  0E00               	movlw	0
 14966  005E38  6EA7               	movwf	167,c	;volatile
 14967                           
 14968                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 14969  005E3A  0E00               	movlw	0
 14970  005E3C  6EA8               	movwf	168,c	;volatile
 14971                           
 14972                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 14973  005E3E  0E05               	movlw	5
 14974  005E40  6EA9               	movwf	169,c	;volatile
 14975                           
 14976                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 14977  005E42  0E00               	movlw	0
 14978  005E44  6EA5               	movwf	165,c	;volatile
 14979                           
 14980                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 14981  005E46  0E00               	movlw	0
 14982  005E48  6EA4               	movwf	164,c	;volatile
 14983  005E4A                     
 14984                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 14985  005E4A  0139               	movlb	57	; () banked
 14986  005E4C  9DA6               	bcf	166,6,b	;volatile
 14987  005E4E                     
 14988                           ; BSR set to: 57
 14989                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14990  005E4E  50A4               	movf	164,w,c	;volatile
 14991  005E50  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 14992  005E56  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 14993  005E58  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 14994  005E5C  6A14               	clrf	??_TMR3_Initialize^0,c
 14995  005E5E  1014               	iorwf	??_TMR3_Initialize^0,w,c
 14996  005E60  0101               	movlb	1	; () banked
 14997  005E62  6F92               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 14998  005E64  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 14999  005E66  6F93               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 15000  005E68                     
 15001                           ; BSR set to: 1
 15002                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 15003  005E68  0E01               	movlw	1
 15004  005E6A  6EA6               	movwf	166,c	;volatile
 15005  005E6C                     
 15006                           ; BSR set to: 1
 15007  005E6C  0012               	return		;funcret
 15008  005E6E                     __end_of_TMR3_Initialize:
 15009                           	callstack 0
 15010                           
 15011 ;; *************** function _TMR2_Initialize *****************
 15012 ;; Defined at:
 15013 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;		None
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  1    wreg      void 
 15020 ;; Registers used:
 15021 ;;		wreg, status,2
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15031 ;;Total ram usage:        0 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; Hardware stack levels required when called: 8
 15034 ;; This function calls:
 15035 ;;		Nothing
 15036 ;; This function is called by:
 15037 ;;		_SYSTEM_Initialize
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041                           	psect	text67
 15042  00632A                     __ptext67:
 15043                           	callstack 0
 15044  00632A                     _TMR2_Initialize:
 15045                           	callstack 21
 15046  00632A                     
 15047                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 15048  00632A  0E05               	movlw	5
 15049  00632C  6EAE               	movwf	174,c	;volatile
 15050                           
 15051                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15052  00632E  0E00               	movlw	0
 15053  006330  6EAD               	movwf	173,c	;volatile
 15054                           
 15055                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 15056  006332  0E00               	movlw	0
 15057  006334  6EAF               	movwf	175,c	;volatile
 15058  006336                     
 15059                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 15060  006336  68AB               	setf	171,c	;volatile
 15061                           
 15062                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15063  006338  0E00               	movlw	0
 15064  00633A  6EAA               	movwf	170,c	;volatile
 15065  00633C                     
 15066                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15067  00633C  0139               	movlb	57	; () banked
 15068  00633E  95A4               	bcf	164,2,b	;volatile
 15069                           
 15070                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 15071  006340  0EB0               	movlw	176
 15072  006342  6EAC               	movwf	172,c	;volatile
 15073  006344                     
 15074                           ; BSR set to: 57
 15075  006344  0012               	return		;funcret
 15076  006346                     __end_of_TMR2_Initialize:
 15077                           	callstack 0
 15078                           
 15079 ;; *************** function _SMT1_Initialize *****************
 15080 ;; Defined at:
 15081 ;;		line 60 in file "mcc_generated_files/smt1.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;		None
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;		None
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      void 
 15088 ;; Registers used:
 15089 ;;		wreg, status,2
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15099 ;;Total ram usage:        0 bytes
 15100 ;; Hardware stack levels used: 1
 15101 ;; Hardware stack levels required when called: 8
 15102 ;; This function calls:
 15103 ;;		Nothing
 15104 ;; This function is called by:
 15105 ;;		_SYSTEM_Initialize
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           	psect	text68
 15110  0060EA                     __ptext68:
 15111                           	callstack 0
 15112  0060EA                     _SMT1_Initialize:
 15113                           	callstack 21
 15114  0060EA                     
 15115                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 15116  0060EA  0E80               	movlw	128
 15117  0060EC  013F               	movlb	63	; () banked
 15118  0060EE  6F1E               	movwf	30,b	;volatile
 15119                           
 15120                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 15121  0060F0  0E42               	movlw	66
 15122  0060F2  6F1F               	movwf	31,b	;volatile
 15123                           
 15124                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 15125  0060F4  0E00               	movlw	0
 15126  0060F6  6F20               	movwf	32,b	;volatile
 15127                           
 15128                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 15129  0060F8  0E04               	movlw	4
 15130  0060FA  6F21               	movwf	33,b	;volatile
 15131                           
 15132                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 15133  0060FC  0E00               	movlw	0
 15134  0060FE  6F23               	movwf	35,b	;volatile
 15135                           
 15136                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 15137  006100  0E00               	movlw	0
 15138  006102  6F22               	movwf	34,b	;volatile
 15139                           
 15140                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 15141  006104  0E01               	movlw	1
 15142  006106  6F1D               	movwf	29,b	;volatile
 15143  006108                     
 15144                           ; BSR set to: 63
 15145                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 15146  006108  691C               	setf	28,b	;volatile
 15147  00610A                     
 15148                           ; BSR set to: 63
 15149                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 15150  00610A  691B               	setf	27,b	;volatile
 15151  00610C                     
 15152                           ; BSR set to: 63
 15153                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 15154  00610C  0139               	movlb	57	; () banked
 15155  00610E  8B91               	bsf	145,5,b	;volatile
 15156  006110                     
 15157                           ; BSR set to: 57
 15158                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 15159  006110  8F91               	bsf	145,7,b	;volatile
 15160  006112                     
 15161                           ; BSR set to: 57
 15162                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 15163  006112  8D91               	bsf	145,6,b	;volatile
 15164  006114                     
 15165                           ; BSR set to: 57
 15166                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 15167  006114  013F               	movlb	63	; () banked
 15168  006116  8F1F               	bsf	31,7,b	;volatile
 15169  006118                     
 15170                           ; BSR set to: 63
 15171  006118  0012               	return		;funcret
 15172  00611A                     __end_of_SMT1_Initialize:
 15173                           	callstack 0
 15174                           
 15175 ;; *************** function _PWM8_Initialize *****************
 15176 ;; Defined at:
 15177 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;		None
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;		None
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  1    wreg      void 
 15184 ;; Registers used:
 15185 ;;		wreg, status,2
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15195 ;;Total ram usage:        0 bytes
 15196 ;; Hardware stack levels used: 1
 15197 ;; Hardware stack levels required when called: 8
 15198 ;; This function calls:
 15199 ;;		Nothing
 15200 ;; This function is called by:
 15201 ;;		_SYSTEM_Initialize
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205                           	psect	text69
 15206  006346                     __ptext69:
 15207                           	callstack 0
 15208  006346                     _PWM8_Initialize:
 15209                           	callstack 21
 15210  006346                     
 15211                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 15212  006346  0E80               	movlw	128
 15213  006348  6E62               	movwf	98,c	;volatile
 15214                           
 15215                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 15216  00634A  0E00               	movlw	0
 15217  00634C  6E61               	movwf	97,c	;volatile
 15218                           
 15219                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 15220  00634E  0E00               	movlw	0
 15221  006350  6E60               	movwf	96,c	;volatile
 15222                           
 15223                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 15224  006352  013F               	movlb	63	; () banked
 15225  006354  515F               	movf	95,w,b	;volatile
 15226  006356  0B3F               	andlw	-193
 15227  006358  0980               	iorlw	128
 15228  00635A  6F5F               	movwf	95,b	;volatile
 15229  00635C                     
 15230                           ; BSR set to: 63
 15231  00635C  0012               	return		;funcret
 15232  00635E                     __end_of_PWM8_Initialize:
 15233                           	callstack 0
 15234                           
 15235 ;; *************** function _PWM7_Initialize *****************
 15236 ;; Defined at:
 15237 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;		None
 15240 ;; Auto vars:     Size  Location     Type
 15241 ;;		None
 15242 ;; Return value:  Size  Location     Type
 15243 ;;                  1    wreg      void 
 15244 ;; Registers used:
 15245 ;;		wreg, status,2
 15246 ;; Tracked objects:
 15247 ;;		On entry : 0/0
 15248 ;;		On exit  : 0/0
 15249 ;;		Unchanged: 0/0
 15250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;Total ram usage:        0 bytes
 15256 ;; Hardware stack levels used: 1
 15257 ;; Hardware stack levels required when called: 8
 15258 ;; This function calls:
 15259 ;;		Nothing
 15260 ;; This function is called by:
 15261 ;;		_SYSTEM_Initialize
 15262 ;; This function uses a non-reentrant model
 15263 ;;
 15264                           
 15265                           	psect	text70
 15266  00635E                     __ptext70:
 15267                           	callstack 0
 15268  00635E                     _PWM7_Initialize:
 15269                           	callstack 21
 15270  00635E                     
 15271                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 15272  00635E  0E80               	movlw	128
 15273  006360  6E66               	movwf	102,c	;volatile
 15274                           
 15275                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 15276  006362  0E00               	movlw	0
 15277  006364  6E65               	movwf	101,c	;volatile
 15278                           
 15279                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 15280  006366  0E00               	movlw	0
 15281  006368  6E64               	movwf	100,c	;volatile
 15282                           
 15283                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 15284  00636A  013F               	movlb	63	; () banked
 15285  00636C  515F               	movf	95,w,b	;volatile
 15286  00636E  0BCF               	andlw	-49
 15287  006370  0920               	iorlw	32
 15288  006372  6F5F               	movwf	95,b	;volatile
 15289  006374                     
 15290                           ; BSR set to: 63
 15291  006374  0012               	return		;funcret
 15292  006376                     __end_of_PWM7_Initialize:
 15293                           	callstack 0
 15294                           
 15295 ;; *************** function _PWM6_Initialize *****************
 15296 ;; Defined at:
 15297 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;		None
 15300 ;; Auto vars:     Size  Location     Type
 15301 ;;		None
 15302 ;; Return value:  Size  Location     Type
 15303 ;;                  1    wreg      void 
 15304 ;; Registers used:
 15305 ;;		wreg, status,2
 15306 ;; Tracked objects:
 15307 ;;		On entry : 0/0
 15308 ;;		On exit  : 0/0
 15309 ;;		Unchanged: 0/0
 15310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15315 ;;Total ram usage:        0 bytes
 15316 ;; Hardware stack levels used: 1
 15317 ;; Hardware stack levels required when called: 8
 15318 ;; This function calls:
 15319 ;;		Nothing
 15320 ;; This function is called by:
 15321 ;;		_SYSTEM_Initialize
 15322 ;; This function uses a non-reentrant model
 15323 ;;
 15324                           
 15325                           	psect	text71
 15326  006376                     __ptext71:
 15327                           	callstack 0
 15328  006376                     _PWM6_Initialize:
 15329                           	callstack 21
 15330  006376                     
 15331                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 15332  006376  0E80               	movlw	128
 15333  006378  6E6A               	movwf	106,c	;volatile
 15334                           
 15335                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 15336  00637A  0E59               	movlw	89
 15337  00637C  6E69               	movwf	105,c	;volatile
 15338                           
 15339                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 15340  00637E  0E40               	movlw	64
 15341  006380  6E68               	movwf	104,c	;volatile
 15342                           
 15343                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 15344  006382  013F               	movlb	63	; () banked
 15345  006384  515F               	movf	95,w,b	;volatile
 15346  006386  0BF3               	andlw	-13
 15347  006388  0904               	iorlw	4
 15348  00638A  6F5F               	movwf	95,b	;volatile
 15349  00638C                     
 15350                           ; BSR set to: 63
 15351  00638C  0012               	return		;funcret
 15352  00638E                     __end_of_PWM6_Initialize:
 15353                           	callstack 0
 15354                           
 15355 ;; *************** function _PWM5_Initialize *****************
 15356 ;; Defined at:
 15357 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 15358 ;; Parameters:    Size  Location     Type
 15359 ;;		None
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;		None
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  1    wreg      void 
 15364 ;; Registers used:
 15365 ;;		wreg, status,2
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15375 ;;Total ram usage:        0 bytes
 15376 ;; Hardware stack levels used: 1
 15377 ;; Hardware stack levels required when called: 8
 15378 ;; This function calls:
 15379 ;;		Nothing
 15380 ;; This function is called by:
 15381 ;;		_SYSTEM_Initialize
 15382 ;; This function uses a non-reentrant model
 15383 ;;
 15384                           
 15385                           	psect	text72
 15386  00638E                     __ptext72:
 15387                           	callstack 0
 15388  00638E                     _PWM5_Initialize:
 15389                           	callstack 21
 15390  00638E                     
 15391                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 15392  00638E  0E80               	movlw	128
 15393  006390  6E6E               	movwf	110,c	;volatile
 15394                           
 15395                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 15396  006392  0E59               	movlw	89
 15397  006394  6E6D               	movwf	109,c	;volatile
 15398                           
 15399                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 15400  006396  0E40               	movlw	64
 15401  006398  6E6C               	movwf	108,c	;volatile
 15402                           
 15403                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 15404  00639A  013F               	movlb	63	; () banked
 15405  00639C  515F               	movf	95,w,b	;volatile
 15406  00639E  0BFC               	andlw	-4
 15407  0063A0  0901               	iorlw	1
 15408  0063A2  6F5F               	movwf	95,b	;volatile
 15409  0063A4                     
 15410                           ; BSR set to: 63
 15411  0063A4  0012               	return		;funcret
 15412  0063A6                     __end_of_PWM5_Initialize:
 15413                           	callstack 0
 15414                           
 15415 ;; *************** function _PMD_Initialize *****************
 15416 ;; Defined at:
 15417 ;;		line 86 in file "mcc_generated_files/mcc.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;		None
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;		None
 15422 ;; Return value:  Size  Location     Type
 15423 ;;                  1    wreg      void 
 15424 ;; Registers used:
 15425 ;;		wreg, status,2
 15426 ;; Tracked objects:
 15427 ;;		On entry : 0/0
 15428 ;;		On exit  : 0/0
 15429 ;;		Unchanged: 0/0
 15430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15435 ;;Total ram usage:        0 bytes
 15436 ;; Hardware stack levels used: 1
 15437 ;; Hardware stack levels required when called: 8
 15438 ;; This function calls:
 15439 ;;		Nothing
 15440 ;; This function is called by:
 15441 ;;		_SYSTEM_Initialize
 15442 ;; This function uses a non-reentrant model
 15443 ;;
 15444                           
 15445                           	psect	text73
 15446  0062A4                     __ptext73:
 15447                           	callstack 0
 15448  0062A4                     _PMD_Initialize:
 15449                           	callstack 21
 15450  0062A4                     
 15451                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 15452  0062A4  0E00               	movlw	0
 15453  0062A6  0139               	movlb	57	; () banked
 15454  0062A8  6FC0               	movwf	192,b	;volatile
 15455                           
 15456                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 15457  0062AA  0E00               	movlw	0
 15458  0062AC  6FC1               	movwf	193,b	;volatile
 15459                           
 15460                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 15461  0062AE  0E00               	movlw	0
 15462  0062B0  6FC2               	movwf	194,b	;volatile
 15463                           
 15464                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 15465  0062B2  0E00               	movlw	0
 15466  0062B4  6FC3               	movwf	195,b	;volatile
 15467                           
 15468                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 15469  0062B6  0E00               	movlw	0
 15470  0062B8  6FC4               	movwf	196,b	;volatile
 15471                           
 15472                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 15473  0062BA  0E00               	movlw	0
 15474  0062BC  6FC5               	movwf	197,b	;volatile
 15475                           
 15476                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 15477  0062BE  0E00               	movlw	0
 15478  0062C0  6FC6               	movwf	198,b	;volatile
 15479                           
 15480                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 15481  0062C2  0E00               	movlw	0
 15482  0062C4  6FC7               	movwf	199,b	;volatile
 15483  0062C6                     
 15484                           ; BSR set to: 57
 15485  0062C6  0012               	return		;funcret
 15486  0062C8                     __end_of_PMD_Initialize:
 15487                           	callstack 0
 15488                           
 15489 ;; *************** function _PIN_MANAGER_Initialize *****************
 15490 ;; Defined at:
 15491 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15492 ;; Parameters:    Size  Location     Type
 15493 ;;		None
 15494 ;; Auto vars:     Size  Location     Type
 15495 ;;		None
 15496 ;; Return value:  Size  Location     Type
 15497 ;;                  1    wreg      void 
 15498 ;; Registers used:
 15499 ;;		wreg, status,2
 15500 ;; Tracked objects:
 15501 ;;		On entry : 0/0
 15502 ;;		On exit  : 0/0
 15503 ;;		Unchanged: 0/0
 15504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15509 ;;Total ram usage:        0 bytes
 15510 ;; Hardware stack levels used: 1
 15511 ;; Hardware stack levels required when called: 8
 15512 ;; This function calls:
 15513 ;;		Nothing
 15514 ;; This function is called by:
 15515 ;;		_SYSTEM_Initialize
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           	psect	text74
 15520  0050B6                     __ptext74:
 15521                           	callstack 0
 15522  0050B6                     _PIN_MANAGER_Initialize:
 15523                           	callstack 21
 15524  0050B6                     
 15525                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 15526  0050B6  0E00               	movlw	0
 15527  0050B8  6EBE               	movwf	190,c	;volatile
 15528                           
 15529                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 15530  0050BA  0E00               	movlw	0
 15531  0050BC  6EBD               	movwf	189,c	;volatile
 15532                           
 15533                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 15534  0050BE  0E24               	movlw	36
 15535  0050C0  6EBA               	movwf	186,c	;volatile
 15536                           
 15537                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 15538  0050C2  0E00               	movlw	0
 15539  0050C4  6EBB               	movwf	187,c	;volatile
 15540                           
 15541                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 15542  0050C6  0E00               	movlw	0
 15543  0050C8  6EBC               	movwf	188,c	;volatile
 15544                           
 15545                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 15546  0050CA  0E07               	movlw	7
 15547  0050CC  6EC6               	movwf	198,c	;volatile
 15548                           
 15549                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 15550  0050CE  0EC0               	movlw	192
 15551  0050D0  6EC2               	movwf	194,c	;volatile
 15552                           
 15553                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 15554  0050D2  0EF7               	movlw	247
 15555  0050D4  6EC3               	movwf	195,c	;volatile
 15556  0050D6                     
 15557                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 15558  0050D6  68C4               	setf	196,c	;volatile
 15559  0050D8                     
 15560                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 15561  0050D8  68C5               	setf	197,c	;volatile
 15562                           
 15563                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 15564  0050DA  0E1F               	movlw	31
 15565  0050DC  013A               	movlb	58	; () banked
 15566  0050DE  6F70               	movwf	112,b	;volatile
 15567  0050E0                     
 15568                           ; BSR set to: 58
 15569                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 15570  0050E0  6960               	setf	96,b	;volatile
 15571                           
 15572                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 15573  0050E2  0EC0               	movlw	192
 15574  0050E4  6F50               	movwf	80,b	;volatile
 15575                           
 15576                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 15577  0050E6  0E07               	movlw	7
 15578  0050E8  6F80               	movwf	128,b	;volatile
 15579                           
 15580                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 15581  0050EA  0E7F               	movlw	127
 15582  0050EC  6F40               	movwf	64,b	;volatile
 15583                           
 15584                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 15585  0050EE  0E00               	movlw	0
 15586  0050F0  6F71               	movwf	113,b	;volatile
 15587                           
 15588                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 15589  0050F2  0E00               	movlw	0
 15590  0050F4  6F81               	movwf	129,b	;volatile
 15591                           
 15592                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 15593  0050F6  0E00               	movlw	0
 15594  0050F8  6F51               	movwf	81,b	;volatile
 15595                           
 15596                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 15597  0050FA  0E00               	movlw	0
 15598  0050FC  6F41               	movwf	65,b	;volatile
 15599                           
 15600                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 15601  0050FE  0E00               	movlw	0
 15602  005100  6F61               	movwf	97,b	;volatile
 15603                           
 15604                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 15605  005102  0E00               	movlw	0
 15606  005104  6F5A               	movwf	90,b	;volatile
 15607                           
 15608                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 15609  005106  0E00               	movlw	0
 15610  005108  6F5B               	movwf	91,b	;volatile
 15611                           
 15612                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 15613  00510A  0E00               	movlw	0
 15614  00510C  6F6A               	movwf	106,b	;volatile
 15615                           
 15616                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 15617  00510E  0E00               	movlw	0
 15618  005110  6F6B               	movwf	107,b	;volatile
 15619                           
 15620                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 15621  005112  0E00               	movlw	0
 15622  005114  6F7A               	movwf	122,b	;volatile
 15623                           
 15624                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 15625  005116  0E00               	movlw	0
 15626  005118  6F7B               	movwf	123,b	;volatile
 15627                           
 15628                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 15629  00511A  0E00               	movlw	0
 15630  00511C  6F82               	movwf	130,b	;volatile
 15631                           
 15632                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 15633  00511E  0E00               	movlw	0
 15634  005120  6F42               	movwf	66,b	;volatile
 15635                           
 15636                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 15637  005122  0E00               	movlw	0
 15638  005124  6F52               	movwf	82,b	;volatile
 15639                           
 15640                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 15641  005126  0E00               	movlw	0
 15642  005128  6F62               	movwf	98,b	;volatile
 15643                           
 15644                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 15645  00512A  0E00               	movlw	0
 15646  00512C  6F72               	movwf	114,b	;volatile
 15647  00512E                     
 15648                           ; BSR set to: 58
 15649                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 15650  00512E  6943               	setf	67,b	;volatile
 15651  005130                     
 15652                           ; BSR set to: 58
 15653                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 15654  005130  6953               	setf	83,b	;volatile
 15655  005132                     
 15656                           ; BSR set to: 58
 15657                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 15658  005132  6963               	setf	99,b	;volatile
 15659  005134                     
 15660                           ; BSR set to: 58
 15661                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 15662  005134  6973               	setf	115,b	;volatile
 15663                           
 15664                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 15665  005136  0E07               	movlw	7
 15666  005138  6F83               	movwf	131,b	;volatile
 15667  00513A                     
 15668                           ; BSR set to: 58
 15669                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 15670  00513A  6944               	setf	68,b	;volatile
 15671  00513C                     
 15672                           ; BSR set to: 58
 15673                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 15674  00513C  6954               	setf	84,b	;volatile
 15675  00513E                     
 15676                           ; BSR set to: 58
 15677                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 15678  00513E  6964               	setf	100,b	;volatile
 15679  005140                     
 15680                           ; BSR set to: 58
 15681                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 15682  005140  6974               	setf	116,b	;volatile
 15683                           
 15684                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 15685  005142  0E0F               	movlw	15
 15686  005144  6F84               	movwf	132,b	;volatile
 15687                           
 15688                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 15689  005146  0E1F               	movlw	31
 15690  005148  6FCF               	movwf	207,b	;volatile
 15691                           
 15692                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 15693  00514A  0E09               	movlw	9
 15694  00514C  6FDC               	movwf	220,b	;volatile
 15695                           
 15696                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 15697  00514E  0E0E               	movlw	14
 15698  005150  6F01               	movwf	1,b	;volatile
 15699                           
 15700                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 15701  005152  0E0A               	movlw	10
 15702  005154  6FE5               	movwf	229,b	;volatile
 15703                           
 15704                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 15705  005156  0E0D               	movlw	13
 15706  005158  6F00               	movwf	0,b	;volatile
 15707                           
 15708                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 15709  00515A  0E1D               	movlw	29
 15710  00515C  6FC9               	movwf	201,b	;volatile
 15711                           
 15712                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 15713  00515E  0E10               	movlw	16
 15714  005160  6F04               	movwf	4,b	;volatile
 15715                           
 15716                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 15717  005162  0E07               	movlw	7
 15718  005164  6FD9               	movwf	217,b	;volatile
 15719                           
 15720                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 15721  005166  0E09               	movlw	9
 15722  005168  6FD1               	movwf	209,b	;volatile
 15723                           
 15724                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 15725  00516A  0E0F               	movlw	15
 15726  00516C  6F03               	movwf	3,b	;volatile
 15727                           
 15728                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 15729  00516E  0E13               	movlw	19
 15730  005170  6F0B               	movwf	11,b	;volatile
 15731                           
 15732                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 15733  005172  0E08               	movlw	8
 15734  005174  6FDB               	movwf	219,b	;volatile
 15735                           
 15736                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 15737  005176  0E08               	movlw	8
 15738  005178  6FD2               	movwf	210,b	;volatile
 15739                           
 15740                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 15741  00517A  0E1E               	movlw	30
 15742  00517C  6FD0               	movwf	208,b	;volatile
 15743  00517E                     
 15744                           ; BSR set to: 58
 15745  00517E  0012               	return		;funcret
 15746  005180                     __end_of_PIN_MANAGER_Initialize:
 15747                           	callstack 0
 15748                           
 15749 ;; *************** function _OSCILLATOR_Initialize *****************
 15750 ;; Defined at:
 15751 ;;		line 72 in file "mcc_generated_files/mcc.c"
 15752 ;; Parameters:    Size  Location     Type
 15753 ;;		None
 15754 ;; Auto vars:     Size  Location     Type
 15755 ;;		None
 15756 ;; Return value:  Size  Location     Type
 15757 ;;                  1    wreg      void 
 15758 ;; Registers used:
 15759 ;;		wreg, status,2
 15760 ;; Tracked objects:
 15761 ;;		On entry : 0/0
 15762 ;;		On exit  : 0/0
 15763 ;;		Unchanged: 0/0
 15764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15769 ;;Total ram usage:        0 bytes
 15770 ;; Hardware stack levels used: 1
 15771 ;; Hardware stack levels required when called: 8
 15772 ;; This function calls:
 15773 ;;		Nothing
 15774 ;; This function is called by:
 15775 ;;		_SYSTEM_Initialize
 15776 ;; This function uses a non-reentrant model
 15777 ;;
 15778                           
 15779                           	psect	text75
 15780  0063A6                     __ptext75:
 15781                           	callstack 0
 15782  0063A6                     _OSCILLATOR_Initialize:
 15783                           	callstack 21
 15784  0063A6                     
 15785                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 15786  0063A6  0E60               	movlw	96
 15787  0063A8  0139               	movlb	57	; () banked
 15788  0063AA  6FD9               	movwf	217,b	;volatile
 15789                           
 15790                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 15791  0063AC  0E00               	movlw	0
 15792  0063AE  6FDB               	movwf	219,b	;volatile
 15793                           
 15794                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 15795  0063B0  0E00               	movlw	0
 15796  0063B2  6FDD               	movwf	221,b	;volatile
 15797                           
 15798                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 15799  0063B4  0E08               	movlw	8
 15800  0063B6  6FDF               	movwf	223,b	;volatile
 15801                           
 15802                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 15803  0063B8  0E00               	movlw	0
 15804  0063BA  6FDE               	movwf	222,b	;volatile
 15805  0063BC                     
 15806                           ; BSR set to: 57
 15807  0063BC  0012               	return		;funcret
 15808  0063BE                     __end_of_OSCILLATOR_Initialize:
 15809                           	callstack 0
 15810                           
 15811 ;; *************** function _INTERRUPT_Initialize *****************
 15812 ;; Defined at:
 15813 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;		None
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;  state           1   19[COMRAM] _Bool 
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1    wreg      void 
 15820 ;; Registers used:
 15821 ;;		wreg, status,2
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15831 ;;Total ram usage:        1 bytes
 15832 ;; Hardware stack levels used: 1
 15833 ;; Hardware stack levels required when called: 8
 15834 ;; This function calls:
 15835 ;;		Nothing
 15836 ;; This function is called by:
 15837 ;;		_SYSTEM_Initialize
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841                           	psect	text76
 15842  005ADC                     __ptext76:
 15843                           	callstack 0
 15844  005ADC                     _INTERRUPT_Initialize:
 15845                           	callstack 21
 15846  005ADC                     
 15847                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15848  005ADC  8AD2               	bsf	210,5,c	;volatile
 15849  005ADE                     
 15850                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15851  005ADE  0E00               	movlw	0
 15852  005AE0  BED2               	btfsc	16338,7,c	;volatile
 15853  005AE2  0E01               	movlw	1
 15854  005AE4  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 15855  005AE6                     
 15856                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15857  005AE6  9ED2               	bcf	16338,7,c	;volatile
 15858                           
 15859                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15860  005AE8  0E55               	movlw	85
 15861  005AEA  6ED4               	movwf	212,c	;volatile
 15862                           
 15863                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15864  005AEC  0EAA               	movlw	170
 15865  005AEE  6ED4               	movwf	212,c	;volatile
 15866  005AF0                     
 15867                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15868  005AF0  90D4               	bcf	212,0,c	;volatile
 15869                           
 15870                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 15871  005AF2  0E00               	movlw	0
 15872  005AF4  6ED7               	movwf	215,c	;volatile
 15873                           
 15874                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 15875  005AF6  0E00               	movlw	0
 15876  005AF8  6ED6               	movwf	214,c	;volatile
 15877                           
 15878                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 15879  005AFA  0E08               	movlw	8
 15880  005AFC  6ED5               	movwf	213,c	;volatile
 15881                           
 15882                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15883  005AFE  0E55               	movlw	85
 15884  005B00  6ED4               	movwf	212,c	;volatile
 15885                           
 15886                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15887  005B02  0EAA               	movlw	170
 15888  005B04  6ED4               	movwf	212,c	;volatile
 15889  005B06                     
 15890                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15891  005B06  80D4               	bsf	212,0,c	;volatile
 15892  005B08                     
 15893                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15894  005B08  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 15895  005B0A  D002               	bra	u2985
 15896  005B0C  9ED2               	bcf	16338,7,c	;volatile
 15897  005B0E  D001               	bra	u2986
 15898  005B10                     u2985:
 15899  005B10  8ED2               	bsf	16338,7,c	;volatile
 15900  005B12                     u2986:
 15901  005B12                     
 15902                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 15903  005B12  0139               	movlb	57	; () banked
 15904  005B14  9983               	bcf	131,4,b	;volatile
 15905  005B16                     
 15906                           ; BSR set to: 57
 15907                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 15908  005B16  9783               	bcf	131,3,b	;volatile
 15909  005B18                     
 15910                           ; BSR set to: 57
 15911                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 15912  005B18  8F81               	bsf	129,7,b	;volatile
 15913  005B1A                     
 15914                           ; BSR set to: 57
 15915                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 15916  005B1A  8B81               	bsf	129,5,b	;volatile
 15917  005B1C                     
 15918                           ; BSR set to: 57
 15919                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 15920  005B1C  8D81               	bsf	129,6,b	;volatile
 15921  005B1E                     
 15922                           ; BSR set to: 57
 15923                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 15924  005B1E  818A               	bsf	138,0,b	;volatile
 15925  005B20                     
 15926                           ; BSR set to: 57
 15927                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 15928  005B20  8F88               	bsf	136,7,b	;volatile
 15929  005B22                     
 15930                           ; BSR set to: 57
 15931                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 15932  005B22  9187               	bcf	135,0,b	;volatile
 15933  005B24                     
 15934                           ; BSR set to: 57
 15935                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 15936  005B24  8389               	bsf	137,1,b	;volatile
 15937  005B26                     
 15938                           ; BSR set to: 57
 15939  005B26  0012               	return		;funcret
 15940  005B28                     __end_of_INTERRUPT_Initialize:
 15941                           	callstack 0
 15942                           
 15943 ;; *************** function _CLC3_Initialize *****************
 15944 ;; Defined at:
 15945 ;;		line 58 in file "mcc_generated_files/clc3.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;		None
 15948 ;; Auto vars:     Size  Location     Type
 15949 ;;		None
 15950 ;; Return value:  Size  Location     Type
 15951 ;;                  1    wreg      void 
 15952 ;; Registers used:
 15953 ;;		wreg, status,2
 15954 ;; Tracked objects:
 15955 ;;		On entry : 0/0
 15956 ;;		On exit  : 0/0
 15957 ;;		Unchanged: 0/0
 15958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15963 ;;Total ram usage:        0 bytes
 15964 ;; Hardware stack levels used: 1
 15965 ;; Hardware stack levels required when called: 8
 15966 ;; This function calls:
 15967 ;;		Nothing
 15968 ;; This function is called by:
 15969 ;;		_SYSTEM_Initialize
 15970 ;; This function uses a non-reentrant model
 15971 ;;
 15972                           
 15973                           	psect	text77
 15974  0061D0                     __ptext77:
 15975                           	callstack 0
 15976  0061D0                     _CLC3_Initialize:
 15977                           	callstack 21
 15978  0061D0                     
 15979                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 15980  0061D0  0E00               	movlw	0
 15981  0061D2  013C               	movlb	60	; () banked
 15982  0061D4  6F61               	movwf	97,b	;volatile
 15983                           
 15984                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 15985  0061D6  0E03               	movlw	3
 15986  0061D8  6F62               	movwf	98,b	;volatile
 15987                           
 15988                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 15989  0061DA  0E02               	movlw	2
 15990  0061DC  6F63               	movwf	99,b	;volatile
 15991                           
 15992                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 15993  0061DE  0E00               	movlw	0
 15994  0061E0  6F64               	movwf	100,b	;volatile
 15995                           
 15996                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 15997  0061E2  0E00               	movlw	0
 15998  0061E4  6F65               	movwf	101,b	;volatile
 15999                           
 16000                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 16001  0061E6  0E02               	movlw	2
 16002  0061E8  6F66               	movwf	102,b	;volatile
 16003                           
 16004                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 16005  0061EA  0E08               	movlw	8
 16006  0061EC  6F67               	movwf	103,b	;volatile
 16007                           
 16008                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 16009  0061EE  0E00               	movlw	0
 16010  0061F0  6F68               	movwf	104,b	;volatile
 16011                           
 16012                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 16013  0061F2  0E00               	movlw	0
 16014  0061F4  6F69               	movwf	105,b	;volatile
 16015                           
 16016                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 16017  0061F6  0E85               	movlw	133
 16018  0061F8  6F60               	movwf	96,b	;volatile
 16019  0061FA                     
 16020                           ; BSR set to: 60
 16021  0061FA  0012               	return		;funcret
 16022  0061FC                     __end_of_CLC3_Initialize:
 16023                           	callstack 0
 16024                           
 16025 ;; *************** function _CCP4_Initialize *****************
 16026 ;; Defined at:
 16027 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;		None
 16030 ;; Auto vars:     Size  Location     Type
 16031 ;;		None
 16032 ;; Return value:  Size  Location     Type
 16033 ;;                  1    wreg      void 
 16034 ;; Registers used:
 16035 ;;		wreg, status,2, status,0, cstack
 16036 ;; Tracked objects:
 16037 ;;		On entry : 0/0
 16038 ;;		On exit  : 0/0
 16039 ;;		Unchanged: 0/0
 16040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16045 ;;Total ram usage:        0 bytes
 16046 ;; Hardware stack levels used: 1
 16047 ;; Hardware stack levels required when called: 9
 16048 ;; This function calls:
 16049 ;;		_CCP4_SetCallBack
 16050 ;; This function is called by:
 16051 ;;		_SYSTEM_Initialize
 16052 ;; This function uses a non-reentrant model
 16053 ;;
 16054                           
 16055                           	psect	text78
 16056  00611A                     __ptext78:
 16057                           	callstack 0
 16058  00611A                     _CCP4_Initialize:
 16059                           	callstack 20
 16060  00611A                     
 16061                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 16062  00611A  0E83               	movlw	131
 16063  00611C  6E72               	movwf	114,c	;volatile
 16064                           
 16065                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 16066  00611E  0E00               	movlw	0
 16067  006120  6E73               	movwf	115,c	;volatile
 16068                           
 16069                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 16070  006122  0E00               	movlw	0
 16071  006124  6E71               	movwf	113,c	;volatile
 16072                           
 16073                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 16074  006126  0E00               	movlw	0
 16075  006128  6E70               	movwf	112,c	;volatile
 16076  00612A                     
 16077                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 16078  00612A  0E14               	movlw	low _CCP4_DefaultCallBack
 16079  00612C  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 16080  00612E  0E5F               	movlw	high _CCP4_DefaultCallBack
 16081  006130  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 16082  006132  EC16  F032         	call	_CCP4_SetCallBack	;wreg free
 16083  006136                     
 16084                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 16085  006136  013F               	movlb	63	; () banked
 16086  006138  515E               	movf	94,w,b	;volatile
 16087  00613A  0B3F               	andlw	-193
 16088  00613C  0980               	iorlw	128
 16089  00613E  6F5E               	movwf	94,b	;volatile
 16090  006140                     
 16091                           ; BSR set to: 63
 16092                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 16093  006140  0139               	movlb	57	; () banked
 16094  006142  91AA               	bcf	170,0,b	;volatile
 16095  006144                     
 16096                           ; BSR set to: 57
 16097                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 16098  006144  819A               	bsf	154,0,b	;volatile
 16099  006146                     
 16100                           ; BSR set to: 57
 16101  006146  0012               	return		;funcret
 16102  006148                     __end_of_CCP4_Initialize:
 16103                           	callstack 0
 16104                           
 16105 ;; *************** function _CCP4_SetCallBack *****************
 16106 ;; Defined at:
 16107 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 16110 ;;		 -> CCP4_DefaultCallBack(1), 
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;		None
 16113 ;; Return value:  Size  Location     Type
 16114 ;;                  1    wreg      void 
 16115 ;; Registers used:
 16116 ;;		wreg, status,2, status,0
 16117 ;; Tracked objects:
 16118 ;;		On entry : 0/0
 16119 ;;		On exit  : 0/0
 16120 ;;		Unchanged: 0/0
 16121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;Total ram usage:        2 bytes
 16127 ;; Hardware stack levels used: 1
 16128 ;; Hardware stack levels required when called: 8
 16129 ;; This function calls:
 16130 ;;		Nothing
 16131 ;; This function is called by:
 16132 ;;		_CCP4_Initialize
 16133 ;; This function uses a non-reentrant model
 16134 ;;
 16135                           
 16136                           	psect	text79
 16137  00642C                     __ptext79:
 16138                           	callstack 0
 16139  00642C                     _CCP4_SetCallBack:
 16140                           	callstack 20
 16141  00642C                     
 16142                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 16143  00642C  C014  F198         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 16144  006430  C015  F199         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 16145  006434  0012               	return		;funcret
 16146  006436                     __end_of_CCP4_SetCallBack:
 16147                           	callstack 0
 16148                           
 16149 ;; *************** function _CCP3_Initialize *****************
 16150 ;; Defined at:
 16151 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 16152 ;; Parameters:    Size  Location     Type
 16153 ;;		None
 16154 ;; Auto vars:     Size  Location     Type
 16155 ;;		None
 16156 ;; Return value:  Size  Location     Type
 16157 ;;                  1    wreg      void 
 16158 ;; Registers used:
 16159 ;;		wreg, status,2, status,0, cstack
 16160 ;; Tracked objects:
 16161 ;;		On entry : 0/0
 16162 ;;		On exit  : 0/0
 16163 ;;		Unchanged: 0/0
 16164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;Total ram usage:        0 bytes
 16170 ;; Hardware stack levels used: 1
 16171 ;; Hardware stack levels required when called: 9
 16172 ;; This function calls:
 16173 ;;		_CCP3_SetCallBack
 16174 ;; This function is called by:
 16175 ;;		_SYSTEM_Initialize
 16176 ;; This function uses a non-reentrant model
 16177 ;;
 16178                           
 16179                           	psect	text80
 16180  006148                     __ptext80:
 16181                           	callstack 0
 16182  006148                     _CCP3_Initialize:
 16183                           	callstack 20
 16184  006148                     
 16185                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 16186  006148  0E83               	movlw	131
 16187  00614A  6E76               	movwf	118,c	;volatile
 16188                           
 16189                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 16190  00614C  0E00               	movlw	0
 16191  00614E  6E77               	movwf	119,c	;volatile
 16192                           
 16193                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 16194  006150  0E00               	movlw	0
 16195  006152  6E75               	movwf	117,c	;volatile
 16196                           
 16197                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 16198  006154  0E00               	movlw	0
 16199  006156  6E74               	movwf	116,c	;volatile
 16200  006158                     
 16201                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 16202  006158  0EDE               	movlw	low _CCP3_DefaultCallBack
 16203  00615A  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 16204  00615C  0E5E               	movlw	high _CCP3_DefaultCallBack
 16205  00615E  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 16206  006160  EC1B  F032         	call	_CCP3_SetCallBack	;wreg free
 16207  006164                     
 16208                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 16209  006164  013F               	movlb	63	; () banked
 16210  006166  515E               	movf	94,w,b	;volatile
 16211  006168  0BCF               	andlw	-49
 16212  00616A  0920               	iorlw	32
 16213  00616C  6F5E               	movwf	94,b	;volatile
 16214  00616E                     
 16215                           ; BSR set to: 63
 16216                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 16217  00616E  0139               	movlb	57	; () banked
 16218  006170  93A9               	bcf	169,1,b	;volatile
 16219  006172                     
 16220                           ; BSR set to: 57
 16221                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 16222  006172  8399               	bsf	153,1,b	;volatile
 16223  006174                     
 16224                           ; BSR set to: 57
 16225  006174  0012               	return		;funcret
 16226  006176                     __end_of_CCP3_Initialize:
 16227                           	callstack 0
 16228                           
 16229 ;; *************** function _CCP3_SetCallBack *****************
 16230 ;; Defined at:
 16231 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 16232 ;; Parameters:    Size  Location     Type
 16233 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 16234 ;;		 -> CCP3_DefaultCallBack(1), 
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;		None
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  1    wreg      void 
 16239 ;; Registers used:
 16240 ;;		wreg, status,2, status,0
 16241 ;; Tracked objects:
 16242 ;;		On entry : 0/0
 16243 ;;		On exit  : 0/0
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;Total ram usage:        2 bytes
 16251 ;; Hardware stack levels used: 1
 16252 ;; Hardware stack levels required when called: 8
 16253 ;; This function calls:
 16254 ;;		Nothing
 16255 ;; This function is called by:
 16256 ;;		_CCP3_Initialize
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           
 16260                           	psect	text81
 16261  006436                     __ptext81:
 16262                           	callstack 0
 16263  006436                     _CCP3_SetCallBack:
 16264                           	callstack 20
 16265  006436                     
 16266                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 16267  006436  C014  F19A         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 16268  00643A  C015  F19B         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 16269  00643E  0012               	return		;funcret
 16270  006440                     __end_of_CCP3_SetCallBack:
 16271                           	callstack 0
 16272                           
 16273 ;; *************** function _ADCC_Initialize *****************
 16274 ;; Defined at:
 16275 ;;		line 62 in file "mcc_generated_files/adcc.c"
 16276 ;; Parameters:    Size  Location     Type
 16277 ;;		None
 16278 ;; Auto vars:     Size  Location     Type
 16279 ;;		None
 16280 ;; Return value:  Size  Location     Type
 16281 ;;                  1    wreg      void 
 16282 ;; Registers used:
 16283 ;;		wreg, status,2
 16284 ;; Tracked objects:
 16285 ;;		On entry : 0/0
 16286 ;;		On exit  : 0/0
 16287 ;;		Unchanged: 0/0
 16288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16293 ;;Total ram usage:        0 bytes
 16294 ;; Hardware stack levels used: 1
 16295 ;; Hardware stack levels required when called: 8
 16296 ;; This function calls:
 16297 ;;		Nothing
 16298 ;; This function is called by:
 16299 ;;		_SYSTEM_Initialize
 16300 ;; This function uses a non-reentrant model
 16301 ;;
 16302                           
 16303                           	psect	text82
 16304  005A2A                     __ptext82:
 16305                           	callstack 0
 16306  005A2A                     _ADCC_Initialize:
 16307                           	callstack 21
 16308  005A2A                     
 16309                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 16310  005A2A  0E00               	movlw	0
 16311  005A2C  013E               	movlb	62	; () banked
 16312  005A2E  6FDE               	movwf	222,b	;volatile
 16313                           
 16314                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 16315  005A30  0E00               	movlw	0
 16316  005A32  6FDF               	movwf	223,b	;volatile
 16317                           
 16318                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 16319  005A34  0E00               	movlw	0
 16320  005A36  6FE0               	movwf	224,b	;volatile
 16321                           
 16322                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 16323  005A38  0E00               	movlw	0
 16324  005A3A  6FE1               	movwf	225,b	;volatile
 16325                           
 16326                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 16327  005A3C  0E00               	movlw	0
 16328  005A3E  6FE4               	movwf	228,b	;volatile
 16329                           
 16330                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 16331  005A40  0E00               	movlw	0
 16332  005A42  6FE5               	movwf	229,b	;volatile
 16333                           
 16334                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 16335  005A44  0E00               	movlw	0
 16336  005A46  6FEA               	movwf	234,b	;volatile
 16337                           
 16338                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 16339  005A48  0E00               	movlw	0
 16340  005A4A  6FEC               	movwf	236,b	;volatile
 16341                           
 16342                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 16343  005A4C  0E00               	movlw	0
 16344  005A4E  6FF1               	movwf	241,b	;volatile
 16345                           
 16346                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 16347  005A50  0E58               	movlw	88
 16348  005A52  6FF3               	movwf	243,b	;volatile
 16349                           
 16350                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 16351  005A54  0E02               	movlw	2
 16352  005A56  6FF4               	movwf	244,b	;volatile
 16353                           
 16354                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 16355  005A58  0E00               	movlw	0
 16356  005A5A  6FF5               	movwf	245,b	;volatile
 16357                           
 16358                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 16359  005A5C  0E00               	movlw	0
 16360  005A5E  6FF6               	movwf	246,b	;volatile
 16361                           
 16362                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 16363  005A60  0E00               	movlw	0
 16364  005A62  6FF7               	movwf	247,b	;volatile
 16365                           
 16366                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 16367  005A64  0E00               	movlw	0
 16368  005A66  6FF9               	movwf	249,b	;volatile
 16369                           
 16370                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 16371  005A68  0E00               	movlw	0
 16372  005A6A  6FFA               	movwf	250,b	;volatile
 16373                           
 16374                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 16375  005A6C  0E00               	movlw	0
 16376  005A6E  6FFB               	movwf	251,b	;volatile
 16377                           
 16378                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 16379  005A70  0E00               	movlw	0
 16380  005A72  6FFC               	movwf	252,b	;volatile
 16381                           
 16382                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 16383  005A74  0E00               	movlw	0
 16384  005A76  6FFD               	movwf	253,b	;volatile
 16385                           
 16386                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 16387  005A78  0E00               	movlw	0
 16388  005A7A  6FFE               	movwf	254,b	;volatile
 16389                           
 16390                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 16391  005A7C  0E1F               	movlw	31
 16392  005A7E  6FFF               	movwf	255,b	;volatile
 16393                           
 16394                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 16395  005A80  0E84               	movlw	132
 16396  005A82  6FF8               	movwf	248,b	;volatile
 16397  005A84                     
 16398                           ; BSR set to: 62
 16399  005A84  0012               	return		;funcret
 16400  005A86                     __end_of_ADCC_Initialize:
 16401                           	callstack 0
 16402                           
 16403 ;; *************** function _UART1_tx_vect_isr *****************
 16404 ;; Defined at:
 16405 ;;		line 235 in file "mcc_generated_files/uart1.c"
 16406 ;; Parameters:    Size  Location     Type
 16407 ;;		None
 16408 ;; Auto vars:     Size  Location     Type
 16409 ;;		None
 16410 ;; Return value:  Size  Location     Type
 16411 ;;                  1    wreg      void 
 16412 ;; Registers used:
 16413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16414 ;; Tracked objects:
 16415 ;;		On entry : 0/0
 16416 ;;		On exit  : 0/0
 16417 ;;		Unchanged: 0/0
 16418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16423 ;;Total ram usage:        1 bytes
 16424 ;; Hardware stack levels used: 1
 16425 ;; Hardware stack levels required when called: 5
 16426 ;; This function calls:
 16427 ;;		Absolute function
 16428 ;;		_UART1_Transmit_ISR
 16429 ;; This function is called by:
 16430 ;;		Interrupt level 1
 16431 ;; This function uses a non-reentrant model
 16432 ;;
 16433                           
 16434                           	psect	text83
 16435  005D50                     __ptext83:
 16436                           	callstack 0
 16437  005D50                     _UART1_tx_vect_isr:
 16438                           	callstack 14
 16439                           
 16440                           ; BSR set to: 62
 16441                           ;incstack = 0
 16442  005D50  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 16443  005D56                     
 16444                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 16445  005D56  0101               	movlb	1	; () banked
 16446  005D58  51A2               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16447  005D5A  11A3               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16448  005D5C  B4D8               	btfsc	status,2,c
 16449  005D5E  EFB3  F02E         	goto	i1u749_21
 16450  005D62  EFB5  F02E         	goto	i1u749_20
 16451  005D66                     i1u749_21:
 16452  005D66  EFC1  F02E         	goto	i1l324
 16453  005D6A                     i1u749_20:
 16454  005D6A                     
 16455                           ; BSR set to: 1
 16456                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 16457  005D6A  D802               	call	i1u750_28
 16458  005D6C  EFC1  F02E         	goto	i1u750_29
 16459  005D70                     i1u750_28:
 16460  005D70  0005               	push	
 16461  005D72  6EFA               	movwf	pclath,c
 16462  005D74  51A2               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 16463  005D76  6EFD               	movwf	tosl,c
 16464  005D78  51A3               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 16465  005D7A  6EFE               	movwf	tosh,c
 16466  005D7C  6AFF               	clrf	tosu,c
 16467  005D7E  50FA               	movf	pclath,w,c
 16468  005D80  0012               	return		;indir
 16469  005D82                     i1u750_29:
 16470  005D82                     i1l324:
 16471  005D82  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 16472  005D88  0011               	retfie		f
 16473  005D8A                     __end_of_UART1_tx_vect_isr:
 16474                           	callstack 0
 16475                           
 16476 ;; *************** function _UART1_Transmit_ISR *****************
 16477 ;; Defined at:
 16478 ;;		line 253 in file "mcc_generated_files/uart1.c"
 16479 ;; Parameters:    Size  Location     Type
 16480 ;;		None
 16481 ;; Auto vars:     Size  Location     Type
 16482 ;;		None
 16483 ;; Return value:  Size  Location     Type
 16484 ;;                  1    wreg      void 
 16485 ;; Registers used:
 16486 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16487 ;; Tracked objects:
 16488 ;;		On entry : 0/0
 16489 ;;		On exit  : 0/0
 16490 ;;		Unchanged: 0/0
 16491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16496 ;;Total ram usage:        0 bytes
 16497 ;; Hardware stack levels used: 1
 16498 ;; Hardware stack levels required when called: 4
 16499 ;; This function calls:
 16500 ;;		Nothing
 16501 ;; This function is called by:
 16502 ;;		_UART1_Initialize
 16503 ;;		_UART1_tx_vect_isr
 16504 ;; This function uses a non-reentrant model
 16505 ;;
 16506                           
 16507                           	psect	text84
 16508  005C92                     __ptext84:
 16509                           	callstack 0
 16510  005C92                     _UART1_Transmit_ISR:
 16511                           	callstack 14
 16512  005C92                     
 16513                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 16514  005C92  0E08               	movlw	8
 16515  005C94  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 16516  005C96  EF4F  F02E         	goto	i1u730_21
 16517  005C9A  EF51  F02E         	goto	i1u730_20
 16518  005C9E                     i1u730_21:
 16519  005C9E  EF68  F02E         	goto	i1l333
 16520  005CA2                     i1u730_20:
 16521  005CA2                     
 16522                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 16523  005CA2  0E10               	movlw	low _uart1TxBuffer
 16524  005CA4  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 16525  005CA6  6ED9               	movwf	fsr2l,c
 16526  005CA8  6ADA               	clrf	fsr2h,c
 16527  005CAA  0E01               	movlw	high _uart1TxBuffer
 16528  005CAC  22DA               	addwfc	fsr2h,f,c
 16529  005CAE  50DF               	movf	indf2,w,c
 16530  005CB0  013D               	movlb	61	; () banked
 16531  005CB2  6FEA               	movwf	234,b	;volatile
 16532  005CB4                     
 16533                           ; BSR set to: 61
 16534  005CB4  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 16535  005CB6                     
 16536                           ; BSR set to: 61
 16537                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 16538  005CB6  0E07               	movlw	7
 16539  005CB8  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 16540  005CBA  EF61  F02E         	goto	i1u731_21
 16541  005CBE  EF63  F02E         	goto	i1u731_20
 16542  005CC2                     i1u731_21:
 16543  005CC2  EF65  F02E         	goto	i1l7355
 16544  005CC6                     i1u731_20:
 16545  005CC6                     
 16546                           ; BSR set to: 61
 16547                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 16548  005CC6  0E00               	movlw	0
 16549  005CC8  6E46               	movwf	_uart1TxTail^0,c	;volatile
 16550  005CCA                     i1l7355:
 16551                           
 16552                           ; BSR set to: 61
 16553                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 16554  005CCA  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 16555                           
 16556                           ;mcc_generated_files/uart1.c: 264:     }
 16557  005CCC  EF6A  F02E         	goto	i1l336
 16558  005CD0                     i1l333:
 16559                           
 16560                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 16561  005CD0  0139               	movlb	57	; () banked
 16562  005CD2  9993               	bcf	147,4,b	;volatile
 16563  005CD4                     i1l336:
 16564  005CD4  0012               	return		;funcret
 16565  005CD6                     __end_of_UART1_Transmit_ISR:
 16566                           	callstack 0
 16567                           
 16568 ;; *************** function _UART1_rx_vect_isr *****************
 16569 ;; Defined at:
 16570 ;;		line 243 in file "mcc_generated_files/uart1.c"
 16571 ;; Parameters:    Size  Location     Type
 16572 ;;		None
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;		None
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  1    wreg      void 
 16577 ;; Registers used:
 16578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/0
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;Total ram usage:        1 bytes
 16589 ;; Hardware stack levels used: 1
 16590 ;; Hardware stack levels required when called: 7
 16591 ;; This function calls:
 16592 ;;		Absolute function
 16593 ;;		_UART1_Receive_ISR
 16594 ;; This function is called by:
 16595 ;;		Interrupt level 1
 16596 ;; This function uses a non-reentrant model
 16597 ;;
 16598                           
 16599                           	psect	text85
 16600  005D8C                     __ptext85:
 16601                           	callstack 0
 16602  005D8C                     _UART1_rx_vect_isr:
 16603                           	callstack 12
 16604                           
 16605                           ;incstack = 0
 16606  005D8C  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 16607  005D92                     
 16608                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 16609  005D92  0101               	movlb	1	; () banked
 16610  005D94  51A4               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16611  005D96  11A5               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16612  005D98  B4D8               	btfsc	status,2,c
 16613  005D9A  EFD1  F02E         	goto	i1u751_21
 16614  005D9E  EFD3  F02E         	goto	i1u751_20
 16615  005DA2                     i1u751_21:
 16616  005DA2  EFDF  F02E         	goto	i1l330
 16617  005DA6                     i1u751_20:
 16618  005DA6                     
 16619                           ; BSR set to: 1
 16620                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 16621  005DA6  D802               	call	i1u752_28
 16622  005DA8  EFDF  F02E         	goto	i1u752_29
 16623  005DAC                     i1u752_28:
 16624  005DAC  0005               	push	
 16625  005DAE  6EFA               	movwf	pclath,c
 16626  005DB0  51A4               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 16627  005DB2  6EFD               	movwf	tosl,c
 16628  005DB4  51A5               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 16629  005DB6  6EFE               	movwf	tosh,c
 16630  005DB8  6AFF               	clrf	tosu,c
 16631  005DBA  50FA               	movf	pclath,w,c
 16632  005DBC  0012               	return		;indir
 16633  005DBE                     i1u752_29:
 16634  005DBE                     i1l330:
 16635  005DBE  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 16636  005DC4  0011               	retfie		f
 16637  005DC6                     __end_of_UART1_rx_vect_isr:
 16638                           	callstack 0
 16639                           
 16640 ;; *************** function _UART1_Receive_ISR *****************
 16641 ;; Defined at:
 16642 ;;		line 273 in file "mcc_generated_files/uart1.c"
 16643 ;; Parameters:    Size  Location     Type
 16644 ;;		None
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;		None
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  1    wreg      void 
 16649 ;; Registers used:
 16650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16660 ;;Total ram usage:        0 bytes
 16661 ;; Hardware stack levels used: 1
 16662 ;; Hardware stack levels required when called: 6
 16663 ;; This function calls:
 16664 ;;		Absolute function
 16665 ;;		_UART1_DefaultErrorHandler
 16666 ;;		_UART1_DefaultFramingErrorHandler
 16667 ;;		_UART1_DefaultOverrunErrorHandler
 16668 ;;		_UART1_RxDataHandler
 16669 ;; This function is called by:
 16670 ;;		_UART1_Initialize
 16671 ;;		_UART1_rx_vect_isr
 16672 ;; This function uses a non-reentrant model
 16673 ;;
 16674                           
 16675                           	psect	text86
 16676  005306                     __ptext86:
 16677                           	callstack 0
 16678  005306                     _UART1_Receive_ISR:
 16679                           	callstack 12
 16680  005306                     
 16681                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 16682  005306  0E00               	movlw	low _uart1RxStatusBuffer
 16683  005308  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16684  00530A  6ED9               	movwf	fsr2l,c
 16685  00530C  6ADA               	clrf	fsr2h,c
 16686  00530E  0E01               	movlw	high _uart1RxStatusBuffer
 16687  005310  22DA               	addwfc	fsr2h,f,c
 16688  005312  0E00               	movlw	0
 16689  005314  6EDF               	movwf	indf2,c
 16690  005316                     
 16691                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 16692  005316  013D               	movlb	61	; () banked
 16693  005318  A7F9               	btfss	249,3,b	;volatile
 16694  00531A  EF91  F029         	goto	i1u732_21
 16695  00531E  EF93  F029         	goto	i1u732_20
 16696  005322                     i1u732_21:
 16697  005322  EFA7  F029         	goto	i1l7365
 16698  005326                     i1u732_20:
 16699  005326                     
 16700                           ; BSR set to: 61
 16701                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 16702  005326  0E00               	movlw	low _uart1RxStatusBuffer
 16703  005328  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16704  00532A  6ED9               	movwf	fsr2l,c
 16705  00532C  6ADA               	clrf	fsr2h,c
 16706  00532E  0E01               	movlw	high _uart1RxStatusBuffer
 16707  005330  22DA               	addwfc	fsr2h,f,c
 16708  005332  0101               	movlb	1	; () banked
 16709  005334  82DF               	bsf	indf2,1,c
 16710  005336                     
 16711                           ; BSR set to: 1
 16712                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 16713  005336  D802               	call	i1u733_28
 16714  005338  EFA7  F029         	goto	i1u733_29
 16715  00533C                     i1u733_28:
 16716  00533C  0005               	push	
 16717  00533E  6EFA               	movwf	pclath,c
 16718  005340  51A0               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 16719  005342  6EFD               	movwf	tosl,c
 16720  005344  51A1               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 16721  005346  6EFE               	movwf	tosh,c
 16722  005348  6AFF               	clrf	tosu,c
 16723  00534A  50FA               	movf	pclath,w,c
 16724  00534C  0012               	return		;indir
 16725  00534E                     i1u733_29:
 16726  00534E                     i1l7365:
 16727                           
 16728                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 16729  00534E  013D               	movlb	61	; () banked
 16730  005350  A3F9               	btfss	249,1,b	;volatile
 16731  005352  EFAD  F029         	goto	i1u734_21
 16732  005356  EFAF  F029         	goto	i1u734_20
 16733  00535A                     i1u734_21:
 16734  00535A  EFC3  F029         	goto	i1l7371
 16735  00535E                     i1u734_20:
 16736  00535E                     
 16737                           ; BSR set to: 61
 16738                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 16739  00535E  0E00               	movlw	low _uart1RxStatusBuffer
 16740  005360  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16741  005362  6ED9               	movwf	fsr2l,c
 16742  005364  6ADA               	clrf	fsr2h,c
 16743  005366  0E01               	movlw	high _uart1RxStatusBuffer
 16744  005368  22DA               	addwfc	fsr2h,f,c
 16745  00536A  0101               	movlb	1	; () banked
 16746  00536C  84DF               	bsf	indf2,2,c
 16747  00536E                     
 16748                           ; BSR set to: 1
 16749                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 16750  00536E  D802               	call	i1u735_28
 16751  005370  EFC3  F029         	goto	i1u735_29
 16752  005374                     i1u735_28:
 16753  005374  0005               	push	
 16754  005376  6EFA               	movwf	pclath,c
 16755  005378  519E               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 16756  00537A  6EFD               	movwf	tosl,c
 16757  00537C  519F               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 16758  00537E  6EFE               	movwf	tosh,c
 16759  005380  6AFF               	clrf	tosu,c
 16760  005382  50FA               	movf	pclath,w,c
 16761  005384  0012               	return		;indir
 16762  005386                     i1u735_29:
 16763  005386                     i1l7371:
 16764                           
 16765                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 16766  005386  0E00               	movlw	low _uart1RxStatusBuffer
 16767  005388  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16768  00538A  6ED9               	movwf	fsr2l,c
 16769  00538C  6ADA               	clrf	fsr2h,c
 16770  00538E  0E01               	movlw	high _uart1RxStatusBuffer
 16771  005390  22DA               	addwfc	fsr2h,f,c
 16772  005392  50DF               	movf	indf2,w,c
 16773  005394  B4D8               	btfsc	status,2,c
 16774  005396  EFCF  F029         	goto	i1u736_21
 16775  00539A  EFD1  F029         	goto	i1u736_20
 16776  00539E                     i1u736_21:
 16777  00539E  EFE0  F029         	goto	i1l7375
 16778  0053A2                     i1u736_20:
 16779  0053A2                     
 16780                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 16781  0053A2  D802               	call	i1u737_28
 16782  0053A4  EFDE  F029         	goto	i1u737_29
 16783  0053A8                     i1u737_28:
 16784  0053A8  0005               	push	
 16785  0053AA  6EFA               	movwf	pclath,c
 16786  0053AC  0101               	movlb	1	; () banked
 16787  0053AE  519C               	movf	_UART1_ErrorHandler& (0+255),w,b
 16788  0053B0  6EFD               	movwf	tosl,c
 16789  0053B2  519D               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 16790  0053B4  6EFE               	movwf	tosh,c
 16791  0053B6  6AFF               	clrf	tosu,c
 16792  0053B8  50FA               	movf	pclath,w,c
 16793  0053BA  0012               	return		;indir
 16794  0053BC                     i1u737_29:
 16795                           
 16796                           ;mcc_generated_files/uart1.c: 290:     } else {
 16797  0053BC  EFE2  F029         	goto	i1l343
 16798  0053C0                     i1l7375:
 16799                           
 16800                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 16801  0053C0  ECFE  F030         	call	_UART1_RxDataHandler	;wreg free
 16802  0053C4                     i1l343:
 16803  0053C4  0012               	return		;funcret
 16804  0053C6                     __end_of_UART1_Receive_ISR:
 16805                           	callstack 0
 16806                           
 16807 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 16808 ;; Defined at:
 16809 ;;		line 309 in file "mcc_generated_files/uart1.c"
 16810 ;; Parameters:    Size  Location     Type
 16811 ;;		None
 16812 ;; Auto vars:     Size  Location     Type
 16813 ;;		None
 16814 ;; Return value:  Size  Location     Type
 16815 ;;                  1    wreg      void 
 16816 ;; Registers used:
 16817 ;;		None
 16818 ;; Tracked objects:
 16819 ;;		On entry : 0/0
 16820 ;;		On exit  : 0/0
 16821 ;;		Unchanged: 0/0
 16822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16827 ;;Total ram usage:        0 bytes
 16828 ;; Hardware stack levels used: 1
 16829 ;; Hardware stack levels required when called: 4
 16830 ;; This function calls:
 16831 ;;		Nothing
 16832 ;; This function is called by:
 16833 ;;		_UART1_Initialize
 16834 ;;		_UART1_Receive_ISR
 16835 ;; This function uses a non-reentrant model
 16836 ;;
 16837                           
 16838                           	psect	text87
 16839  006450                     __ptext87:
 16840                           	callstack 0
 16841  006450                     _UART1_DefaultOverrunErrorHandler:
 16842                           	callstack 13
 16843  006450  0012               	return		;funcret
 16844  006452                     __end_of_UART1_DefaultOverrunErrorHandler:
 16845                           	callstack 0
 16846                           
 16847 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 16848 ;; Defined at:
 16849 ;;		line 307 in file "mcc_generated_files/uart1.c"
 16850 ;; Parameters:    Size  Location     Type
 16851 ;;		None
 16852 ;; Auto vars:     Size  Location     Type
 16853 ;;		None
 16854 ;; Return value:  Size  Location     Type
 16855 ;;                  1    wreg      void 
 16856 ;; Registers used:
 16857 ;;		None
 16858 ;; Tracked objects:
 16859 ;;		On entry : 0/0
 16860 ;;		On exit  : 0/0
 16861 ;;		Unchanged: 0/0
 16862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16867 ;;Total ram usage:        0 bytes
 16868 ;; Hardware stack levels used: 1
 16869 ;; Hardware stack levels required when called: 4
 16870 ;; This function calls:
 16871 ;;		Nothing
 16872 ;; This function is called by:
 16873 ;;		_UART1_Initialize
 16874 ;;		_UART1_Receive_ISR
 16875 ;; This function uses a non-reentrant model
 16876 ;;
 16877                           
 16878                           	psect	text88
 16879  006452                     __ptext88:
 16880                           	callstack 0
 16881  006452                     _UART1_DefaultFramingErrorHandler:
 16882                           	callstack 13
 16883  006452  0012               	return		;funcret
 16884  006454                     __end_of_UART1_DefaultFramingErrorHandler:
 16885                           	callstack 0
 16886                           
 16887 ;; *************** function _UART1_DefaultErrorHandler *****************
 16888 ;; Defined at:
 16889 ;;		line 311 in file "mcc_generated_files/uart1.c"
 16890 ;; Parameters:    Size  Location     Type
 16891 ;;		None
 16892 ;; Auto vars:     Size  Location     Type
 16893 ;;		None
 16894 ;; Return value:  Size  Location     Type
 16895 ;;                  1    wreg      void 
 16896 ;; Registers used:
 16897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16898 ;; Tracked objects:
 16899 ;;		On entry : 0/0
 16900 ;;		On exit  : 0/0
 16901 ;;		Unchanged: 0/0
 16902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16907 ;;Total ram usage:        0 bytes
 16908 ;; Hardware stack levels used: 1
 16909 ;; Hardware stack levels required when called: 5
 16910 ;; This function calls:
 16911 ;;		_UART1_RxDataHandler
 16912 ;; This function is called by:
 16913 ;;		_UART1_Initialize
 16914 ;;		_UART1_Receive_ISR
 16915 ;; This function uses a non-reentrant model
 16916 ;;
 16917                           
 16918                           	psect	text89
 16919  00644A                     __ptext89:
 16920                           	callstack 0
 16921  00644A                     _UART1_DefaultErrorHandler:
 16922                           	callstack 12
 16923  00644A                     
 16924                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 16925  00644A  ECFE  F030         	call	_UART1_RxDataHandler	;wreg free
 16926  00644E  0012               	return		;funcret
 16927  006450                     __end_of_UART1_DefaultErrorHandler:
 16928                           	callstack 0
 16929                           
 16930 ;; *************** function _UART1_RxDataHandler *****************
 16931 ;; Defined at:
 16932 ;;		line 297 in file "mcc_generated_files/uart1.c"
 16933 ;; Parameters:    Size  Location     Type
 16934 ;;		None
 16935 ;; Auto vars:     Size  Location     Type
 16936 ;;		None
 16937 ;; Return value:  Size  Location     Type
 16938 ;;                  1    wreg      void 
 16939 ;; Registers used:
 16940 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16941 ;; Tracked objects:
 16942 ;;		On entry : 0/0
 16943 ;;		On exit  : 0/0
 16944 ;;		Unchanged: 0/0
 16945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16950 ;;Total ram usage:        0 bytes
 16951 ;; Hardware stack levels used: 1
 16952 ;; Hardware stack levels required when called: 4
 16953 ;; This function calls:
 16954 ;;		Nothing
 16955 ;; This function is called by:
 16956 ;;		_UART1_Receive_ISR
 16957 ;;		_UART1_DefaultErrorHandler
 16958 ;; This function uses a non-reentrant model
 16959 ;;
 16960                           
 16961                           	psect	text90
 16962  0061FC                     __ptext90:
 16963                           	callstack 0
 16964  0061FC                     _UART1_RxDataHandler:
 16965                           	callstack 13
 16966  0061FC                     
 16967                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 16968  0061FC  0E08               	movlw	low _uart1RxBuffer
 16969  0061FE  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16970  006200  6ED9               	movwf	fsr2l,c
 16971  006202  6ADA               	clrf	fsr2h,c
 16972  006204  0E01               	movlw	high _uart1RxBuffer
 16973  006206  22DA               	addwfc	fsr2h,f,c
 16974  006208  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16975  00620E  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 16976  006210                     
 16977                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 16978  006210  0E07               	movlw	7
 16979  006212  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 16980  006214  EF0E  F031         	goto	i1u664_21
 16981  006218  EF10  F031         	goto	i1u664_20
 16982  00621C                     i1u664_21:
 16983  00621C  EF12  F031         	goto	i1l6727
 16984  006220                     i1u664_20:
 16985  006220                     
 16986                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 16987  006220  0E00               	movlw	0
 16988  006222  6E45               	movwf	_uart1RxHead^0,c	;volatile
 16989  006224                     i1l6727:
 16990                           
 16991                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 16992  006224  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 16993  006226  0012               	return		;funcret
 16994  006228                     __end_of_UART1_RxDataHandler:
 16995                           	callstack 0
 16996                           
 16997 ;; *************** function _TMR4_ISR *****************
 16998 ;; Defined at:
 16999 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 17000 ;; Parameters:    Size  Location     Type
 17001 ;;		None
 17002 ;; Auto vars:     Size  Location     Type
 17003 ;;		None
 17004 ;; Return value:  Size  Location     Type
 17005 ;;                  1    wreg      void 
 17006 ;; Registers used:
 17007 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17008 ;; Tracked objects:
 17009 ;;		On entry : 0/0
 17010 ;;		On exit  : 0/0
 17011 ;;		Unchanged: 0/0
 17012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17017 ;;Total ram usage:        1 bytes
 17018 ;; Hardware stack levels used: 1
 17019 ;; Hardware stack levels required when called: 6
 17020 ;; This function calls:
 17021 ;;		_TMR4_CallBack
 17022 ;; This function is called by:
 17023 ;;		Interrupt level 1
 17024 ;; This function uses a non-reentrant model
 17025 ;;
 17026                           
 17027                           	psect	text91
 17028  005E70                     __ptext91:
 17029                           	callstack 0
 17030  005E70                     _TMR4_ISR:
 17031                           	callstack 13
 17032                           
 17033                           ;incstack = 0
 17034  005E70  006F FF60  F013    	movff	status,??_TMR4_ISR
 17035  005E76                     
 17036                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 17037  005E76  0139               	movlb	57	; () banked
 17038  005E78  91A7               	bcf	167,0,b	;volatile
 17039  005E7A                     
 17040                           ; BSR set to: 57
 17041                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 17042  005E7A  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 17043  005E7C  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 17044  005E7E  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 17045  005E80  E109               	bnz	i1u757_20
 17046  005E82  0E0A               	movlw	10
 17047  005E84  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 17048  005E86  A0D8               	btfss	status,0,c
 17049  005E88  EF48  F02F         	goto	i1u757_21
 17050  005E8C  EF4A  F02F         	goto	i1u757_20
 17051  005E90                     i1u757_21:
 17052  005E90  EF50  F02F         	goto	i1l688
 17053  005E94                     i1u757_20:
 17054  005E94                     
 17055                           ; BSR set to: 57
 17056                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 17057  005E94  ECBB  F030         	call	_TMR4_CallBack	;wreg free
 17058  005E98                     
 17059                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 17060  005E98  0E00               	movlw	0
 17061  005E9A  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 17062  005E9C  0E00               	movlw	0
 17063  005E9E  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 17064  005EA0                     i1l688:
 17065  005EA0  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 17066  005EA6  0011               	retfie		f
 17067  005EA8                     __end_of_TMR4_ISR:
 17068                           	callstack 0
 17069                           
 17070 ;; *************** function _TMR4_CallBack *****************
 17071 ;; Defined at:
 17072 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;		None
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;		None
 17077 ;; Return value:  Size  Location     Type
 17078 ;;                  1    wreg      void 
 17079 ;; Registers used:
 17080 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17081 ;; Tracked objects:
 17082 ;;		On entry : 0/0
 17083 ;;		On exit  : 0/0
 17084 ;;		Unchanged: 0/0
 17085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17090 ;;Total ram usage:        0 bytes
 17091 ;; Hardware stack levels used: 1
 17092 ;; Hardware stack levels required when called: 5
 17093 ;; This function calls:
 17094 ;;		Absolute function
 17095 ;;		_TMR4_10msISR
 17096 ;;		_TMR4_DefaultInterruptHandler
 17097 ;; This function is called by:
 17098 ;;		_TMR4_ISR
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           	psect	text92
 17103  006176                     __ptext92:
 17104                           	callstack 0
 17105  006176                     _TMR4_CallBack:
 17106                           	callstack 13
 17107  006176                     
 17108                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 17109  006176  0101               	movlb	1	; () banked
 17110  006178  5190               	movf	_TMR4_InterruptHandler& (0+255),w,b
 17111  00617A  1191               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 17112  00617C  B4D8               	btfsc	status,2,c
 17113  00617E  EFC3  F030         	goto	i1u741_21
 17114  006182  EFC5  F030         	goto	i1u741_20
 17115  006186                     i1u741_21:
 17116  006186  EFD1  F030         	goto	i1l692
 17117  00618A                     i1u741_20:
 17118  00618A                     
 17119                           ; BSR set to: 1
 17120                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 17121  00618A  D802               	call	i1u742_28
 17122  00618C  EFD1  F030         	goto	i1u742_29
 17123  006190                     i1u742_28:
 17124  006190  0005               	push	
 17125  006192  6EFA               	movwf	pclath,c
 17126  006194  5190               	movf	_TMR4_InterruptHandler& (0+255),w,b
 17127  006196  6EFD               	movwf	tosl,c
 17128  006198  5191               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 17129  00619A  6EFE               	movwf	tosh,c
 17130  00619C  6AFF               	clrf	tosu,c
 17131  00619E  50FA               	movf	pclath,w,c
 17132  0061A0  0012               	return		;indir
 17133  0061A2                     i1u742_29:
 17134  0061A2                     i1l692:
 17135  0061A2  0012               	return		;funcret
 17136  0061A4                     __end_of_TMR4_CallBack:
 17137                           	callstack 0
 17138                           
 17139 ;; *************** function _TMR4_10msISR *****************
 17140 ;; Defined at:
 17141 ;;		line 68 in file "main.c"
 17142 ;; Parameters:    Size  Location     Type
 17143 ;;		None
 17144 ;; Auto vars:     Size  Location     Type
 17145 ;;		None
 17146 ;; Return value:  Size  Location     Type
 17147 ;;                  1    wreg      void 
 17148 ;; Registers used:
 17149 ;;		status,2, status,0
 17150 ;; Tracked objects:
 17151 ;;		On entry : 0/0
 17152 ;;		On exit  : 0/0
 17153 ;;		Unchanged: 0/0
 17154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17159 ;;Total ram usage:        0 bytes
 17160 ;; Hardware stack levels used: 1
 17161 ;; Hardware stack levels required when called: 4
 17162 ;; This function calls:
 17163 ;;		Nothing
 17164 ;; This function is called by:
 17165 ;;		_main
 17166 ;;		_TMR4_CallBack
 17167 ;; This function uses a non-reentrant model
 17168 ;;
 17169                           
 17170                           	psect	text93
 17171  006440                     __ptext93:
 17172                           	callstack 0
 17173  006440                     _TMR4_10msISR:
 17174                           	callstack 13
 17175  006440                     
 17176                           ;main.c: 69:     ++cycle10ms;
 17177  006440  0100               	movlb	0	; () banked
 17178  006442  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 17179                           
 17180                           ;main.c: 70:     ++roundTimeCount;
 17181  006444  4BF1               	infsnz	_roundTimeCount& (0+255),f,b	;volatile
 17182  006446  2BF2               	incf	(_roundTimeCount+1)& (0+255),f,b	;volatile
 17183  006448                     
 17184                           ; BSR set to: 0
 17185  006448  0012               	return		;funcret
 17186  00644A                     __end_of_TMR4_10msISR:
 17187                           	callstack 0
 17188                           
 17189 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 17190 ;; Defined at:
 17191 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;		None
 17194 ;; Auto vars:     Size  Location     Type
 17195 ;;		None
 17196 ;; Return value:  Size  Location     Type
 17197 ;;                  1    wreg      void 
 17198 ;; Registers used:
 17199 ;;		None
 17200 ;; Tracked objects:
 17201 ;;		On entry : 0/0
 17202 ;;		On exit  : 0/0
 17203 ;;		Unchanged: 0/0
 17204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17209 ;;Total ram usage:        0 bytes
 17210 ;; Hardware stack levels used: 1
 17211 ;; Hardware stack levels required when called: 4
 17212 ;; This function calls:
 17213 ;;		Nothing
 17214 ;; This function is called by:
 17215 ;;		_TMR4_Initialize
 17216 ;;		_TMR4_CallBack
 17217 ;; This function uses a non-reentrant model
 17218 ;;
 17219                           
 17220                           	psect	text94
 17221  006454                     __ptext94:
 17222                           	callstack 0
 17223  006454                     _TMR4_DefaultInterruptHandler:
 17224                           	callstack 13
 17225  006454  0012               	return		;funcret
 17226  006456                     __end_of_TMR4_DefaultInterruptHandler:
 17227                           	callstack 0
 17228                           
 17229 ;; *************** function _Default_ISR *****************
 17230 ;; Defined at:
 17231 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 17232 ;; Parameters:    Size  Location     Type
 17233 ;;		None
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;		None
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  1    wreg      void 
 17238 ;; Registers used:
 17239 ;;		None
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17249 ;;Total ram usage:        0 bytes
 17250 ;; Hardware stack levels used: 1
 17251 ;; This function calls:
 17252 ;;		Nothing
 17253 ;; This function is called by:
 17254 ;;		Interrupt level 2
 17255 ;; This function uses a non-reentrant model
 17256 ;;
 17257                           
 17258                           	psect	text95
 17259  006458                     __ptext95:
 17260                           	callstack 0
 17261  006458                     _Default_ISR:
 17262                           	callstack 15
 17263  006458  0011               	retfie		f
 17264  00645A                     __end_of_Default_ISR:
 17265                           	callstack 0
 17266                           
 17267 ;; *************** function _CCP3_CaptureISR *****************
 17268 ;; Defined at:
 17269 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 17270 ;; Parameters:    Size  Location     Type
 17271 ;;		None
 17272 ;; Auto vars:     Size  Location     Type
 17273 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 17274 ;; Return value:  Size  Location     Type
 17275 ;;                  1    wreg      void 
 17276 ;; Registers used:
 17277 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17278 ;; Tracked objects:
 17279 ;;		On entry : 0/0
 17280 ;;		On exit  : 0/0
 17281 ;;		Unchanged: 0/0
 17282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17287 ;;Total ram usage:        2 bytes
 17288 ;; Hardware stack levels used: 1
 17289 ;; Hardware stack levels required when called: 1
 17290 ;; This function calls:
 17291 ;;		Absolute function
 17292 ;;		_CCP3_DefaultCallBack
 17293 ;; This function is called by:
 17294 ;;		Interrupt level 2
 17295 ;; This function uses a non-reentrant model
 17296 ;;
 17297                           
 17298                           	psect	text96
 17299  00601C                     __ptext96:
 17300                           	callstack 0
 17301  00601C                     _CCP3_CaptureISR:
 17302                           	callstack 14
 17303  00601C                     
 17304                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 17305  00601C  0139               	movlb	57	; () banked
 17306  00601E  93A9               	bcf	169,1,b	;volatile
 17307                           
 17308                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 17309  006020  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 17310                           
 17311                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 17312  006026  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 17313  00602C                     
 17314                           ; BSR set to: 57
 17315                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 17316  00602C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 17317  006030  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 17318  006034  D802               	call	i2u753_48
 17319  006036  EF27  F030         	goto	i2u753_49
 17320  00603A                     i2u753_48:
 17321  00603A  0005               	push	
 17322  00603C  6EFA               	movwf	pclath,c
 17323  00603E  0101               	movlb	1	; () banked
 17324  006040  519A               	movf	_CCP3_CallBack& (0+255),w,b
 17325  006042  6EFD               	movwf	tosl,c
 17326  006044  519B               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 17327  006046  6EFE               	movwf	tosh,c
 17328  006048  6AFF               	clrf	tosu,c
 17329  00604A  50FA               	movf	pclath,w,c
 17330  00604C  0012               	return		;indir
 17331  00604E                     i2u753_49:
 17332  00604E  0011               	retfie		f
 17333  006050                     __end_of_CCP3_CaptureISR:
 17334                           	callstack 0
 17335                           
 17336 ;; *************** function _CCP3_DefaultCallBack *****************
 17337 ;; Defined at:
 17338 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 17339 ;; Parameters:    Size  Location     Type
 17340 ;;  capturedValu    2    0[COMRAM] unsigned short 
 17341 ;; Auto vars:     Size  Location     Type
 17342 ;;		None
 17343 ;; Return value:  Size  Location     Type
 17344 ;;                  1    wreg      void 
 17345 ;; Registers used:
 17346 ;;		wreg, status,2, status,0
 17347 ;; Tracked objects:
 17348 ;;		On entry : 0/0
 17349 ;;		On exit  : 0/0
 17350 ;;		Unchanged: 0/0
 17351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17356 ;;Total ram usage:        2 bytes
 17357 ;; Hardware stack levels used: 1
 17358 ;; This function calls:
 17359 ;;		Nothing
 17360 ;; This function is called by:
 17361 ;;		_CCP3_Initialize
 17362 ;;		_CCP3_CaptureISR
 17363 ;; This function uses a non-reentrant model
 17364 ;;
 17365                           
 17366                           	psect	text97
 17367  005EDE                     __ptext97:
 17368                           	callstack 0
 17369  005EDE                     _CCP3_DefaultCallBack:
 17370                           	callstack 14
 17371  005EDE                     
 17372                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 17373  005EDE  AECD               	btfss	205,7,c	;volatile
 17374  005EE0  EF74  F02F         	goto	i2u738_41
 17375  005EE4  EF76  F02F         	goto	i2u738_40
 17376  005EE8                     i2u738_41:
 17377  005EE8  EF7C  F02F         	goto	i2l7381
 17378  005EEC                     i2u738_40:
 17379  005EEC                     
 17380                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 17381  005EEC  C001  F13E         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 17382  005EF0  C002  F13F         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 17383                           
 17384                           ;mcc_generated_files/ccp3.c: 69:     } else {
 17385  005EF4  EF89  F02F         	goto	i2l438
 17386  005EF8                     i2l7381:
 17387                           
 17388                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 17389  005EF8  0101               	movlb	1	; () banked
 17390  005EFA  513E               	movf	_distLeftM& (0+255),w,b
 17391  005EFC  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 17392  005EFE  0100               	movlb	0	; () banked
 17393  005F00  6FF5               	movwf	_distLeft& (0+255),b	;volatile
 17394  005F02  0101               	movlb	1	; () banked
 17395  005F04  513F               	movf	(_distLeftM+1)& (0+255),w,b
 17396  005F06  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 17397  005F08  0100               	movlb	0	; () banked
 17398  005F0A  6FF6               	movwf	(_distLeft+1)& (0+255),b	;volatile
 17399  005F0C                     
 17400                           ; BSR set to: 0
 17401                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 17402  005F0C  90D8               	bcf	status,0,c
 17403  005F0E  33F6               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 17404  005F10  33F5               	rrcf	_distLeft& (0+255),f,b	;volatile
 17405  005F12                     i2l438:
 17406  005F12  0012               	return		;funcret
 17407  005F14                     __end_of_CCP3_DefaultCallBack:
 17408                           	callstack 0
 17409                           
 17410 ;; *************** function _CCP4_CaptureISR *****************
 17411 ;; Defined at:
 17412 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 17413 ;; Parameters:    Size  Location     Type
 17414 ;;		None
 17415 ;; Auto vars:     Size  Location     Type
 17416 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 17417 ;; Return value:  Size  Location     Type
 17418 ;;                  1    wreg      void 
 17419 ;; Registers used:
 17420 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17421 ;; Tracked objects:
 17422 ;;		On entry : 0/0
 17423 ;;		On exit  : 0/0
 17424 ;;		Unchanged: 0/0
 17425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17430 ;;Total ram usage:        2 bytes
 17431 ;; Hardware stack levels used: 1
 17432 ;; Hardware stack levels required when called: 1
 17433 ;; This function calls:
 17434 ;;		Absolute function
 17435 ;;		_CCP4_DefaultCallBack
 17436 ;; This function is called by:
 17437 ;;		Interrupt level 2
 17438 ;; This function uses a non-reentrant model
 17439 ;;
 17440                           
 17441                           	psect	text98
 17442  006050                     __ptext98:
 17443                           	callstack 0
 17444  006050                     _CCP4_CaptureISR:
 17445                           	callstack 14
 17446  006050                     
 17447                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 17448  006050  0139               	movlb	57	; () banked
 17449  006052  91AA               	bcf	170,0,b	;volatile
 17450                           
 17451                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 17452  006054  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 17453                           
 17454                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 17455  00605A  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 17456  006060                     
 17457                           ; BSR set to: 57
 17458                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 17459  006060  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 17460  006064  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 17461  006068  D802               	call	i2u754_48
 17462  00606A  EF41  F030         	goto	i2u754_49
 17463  00606E                     i2u754_48:
 17464  00606E  0005               	push	
 17465  006070  6EFA               	movwf	pclath,c
 17466  006072  0101               	movlb	1	; () banked
 17467  006074  5198               	movf	_CCP4_CallBack& (0+255),w,b
 17468  006076  6EFD               	movwf	tosl,c
 17469  006078  5199               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 17470  00607A  6EFE               	movwf	tosh,c
 17471  00607C  6AFF               	clrf	tosu,c
 17472  00607E  50FA               	movf	pclath,w,c
 17473  006080  0012               	return		;indir
 17474  006082                     i2u754_49:
 17475  006082  0011               	retfie		f
 17476  006084                     __end_of_CCP4_CaptureISR:
 17477                           	callstack 0
 17478                           
 17479 ;; *************** function _CCP4_DefaultCallBack *****************
 17480 ;; Defined at:
 17481 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 17482 ;; Parameters:    Size  Location     Type
 17483 ;;  capturedValu    2    4[COMRAM] unsigned short 
 17484 ;; Auto vars:     Size  Location     Type
 17485 ;;		None
 17486 ;; Return value:  Size  Location     Type
 17487 ;;                  1    wreg      void 
 17488 ;; Registers used:
 17489 ;;		wreg, status,2, status,0
 17490 ;; Tracked objects:
 17491 ;;		On entry : 0/0
 17492 ;;		On exit  : 0/0
 17493 ;;		Unchanged: 0/0
 17494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17499 ;;Total ram usage:        2 bytes
 17500 ;; Hardware stack levels used: 1
 17501 ;; This function calls:
 17502 ;;		Nothing
 17503 ;; This function is called by:
 17504 ;;		_CCP4_Initialize
 17505 ;;		_CCP4_CaptureISR
 17506 ;; This function uses a non-reentrant model
 17507 ;;
 17508                           
 17509                           	psect	text99
 17510  005F14                     __ptext99:
 17511                           	callstack 0
 17512  005F14                     _CCP4_DefaultCallBack:
 17513                           	callstack 14
 17514  005F14                     
 17515                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 17516  005F14  ACCD               	btfss	205,6,c	;volatile
 17517  005F16  EF8F  F02F         	goto	i2u739_41
 17518  005F1A  EF91  F02F         	goto	i2u739_40
 17519  005F1E                     i2u739_41:
 17520  005F1E  EF97  F02F         	goto	i2l7389
 17521  005F22                     i2u739_40:
 17522  005F22                     
 17523                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 17524  005F22  C005  F13C         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 17525  005F26  C006  F13D         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 17526                           
 17527                           ;mcc_generated_files/ccp4.c: 70:     } else {
 17528  005F2A  EFA4  F02F         	goto	i2l476
 17529  005F2E                     i2l7389:
 17530                           
 17531                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 17532  005F2E  0101               	movlb	1	; () banked
 17533  005F30  513C               	movf	_distRightM& (0+255),w,b
 17534  005F32  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 17535  005F34  0100               	movlb	0	; () banked
 17536  005F36  6FF3               	movwf	_distRight& (0+255),b	;volatile
 17537  005F38  0101               	movlb	1	; () banked
 17538  005F3A  513D               	movf	(_distRightM+1)& (0+255),w,b
 17539  005F3C  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 17540  005F3E  0100               	movlb	0	; () banked
 17541  005F40  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 17542  005F42                     
 17543                           ; BSR set to: 0
 17544                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 17545  005F42  90D8               	bcf	status,0,c
 17546  005F44  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 17547  005F46  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 17548  005F48                     i2l476:
 17549  005F48  0012               	return		;funcret
 17550  005F4A                     __end_of_CCP4_DefaultCallBack:
 17551                           	callstack 0
 17552                           
 17553 ;; *************** function _TMR5_GATE_ISR *****************
 17554 ;; Defined at:
 17555 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 17556 ;; Parameters:    Size  Location     Type
 17557 ;;		None
 17558 ;; Auto vars:     Size  Location     Type
 17559 ;;		None
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  1    wreg      void 
 17562 ;; Registers used:
 17563 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17564 ;; Tracked objects:
 17565 ;;		On entry : 0/0
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17573 ;;Total ram usage:        0 bytes
 17574 ;; Hardware stack levels used: 1
 17575 ;; Hardware stack levels required when called: 3
 17576 ;; This function calls:
 17577 ;;		Absolute function
 17578 ;;		_TMR5_DefaultGateInterruptHandler
 17579 ;; This function is called by:
 17580 ;;		Interrupt level 2
 17581 ;; This function uses a non-reentrant model
 17582 ;;
 17583                           
 17584                           	psect	text100
 17585  0060B8                     __ptext100:
 17586                           	callstack 0
 17587  0060B8                     _TMR5_GATE_ISR:
 17588                           	callstack 12
 17589  0060B8                     
 17590                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 17591  0060B8  0139               	movlb	57	; () banked
 17592  0060BA  9FA8               	bcf	168,7,b	;volatile
 17593  0060BC                     
 17594                           ; BSR set to: 57
 17595                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 17596  0060BC  0101               	movlb	1	; () banked
 17597  0060BE  5194               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17598  0060C0  1195               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17599  0060C2  B4D8               	btfsc	status,2,c
 17600  0060C4  EF66  F030         	goto	i2u755_41
 17601  0060C8  EF68  F030         	goto	i2u755_40
 17602  0060CC                     i2u755_41:
 17603  0060CC  EF74  F030         	goto	i2l552
 17604  0060D0                     i2u755_40:
 17605  0060D0                     
 17606                           ; BSR set to: 1
 17607                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 17608  0060D0  D802               	call	i2u756_48
 17609  0060D2  EF74  F030         	goto	i2u756_49
 17610  0060D6                     i2u756_48:
 17611  0060D6  0005               	push	
 17612  0060D8  6EFA               	movwf	pclath,c
 17613  0060DA  5194               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 17614  0060DC  6EFD               	movwf	tosl,c
 17615  0060DE  5195               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 17616  0060E0  6EFE               	movwf	tosh,c
 17617  0060E2  6AFF               	clrf	tosu,c
 17618  0060E4  50FA               	movf	pclath,w,c
 17619  0060E6  0012               	return		;indir
 17620  0060E8                     i2u756_49:
 17621  0060E8                     i2l552:
 17622  0060E8  0011               	retfie		f
 17623  0060EA                     __end_of_TMR5_GATE_ISR:
 17624                           	callstack 0
 17625                           
 17626 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 17627 ;; Defined at:
 17628 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 17629 ;; Parameters:    Size  Location     Type
 17630 ;;		None
 17631 ;; Auto vars:     Size  Location     Type
 17632 ;;		None
 17633 ;; Return value:  Size  Location     Type
 17634 ;;                  1    wreg      void 
 17635 ;; Registers used:
 17636 ;;		wreg, status,2, status,0, cstack
 17637 ;; Tracked objects:
 17638 ;;		On entry : 0/0
 17639 ;;		On exit  : 0/0
 17640 ;;		Unchanged: 0/0
 17641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17646 ;;Total ram usage:        0 bytes
 17647 ;; Hardware stack levels used: 1
 17648 ;; Hardware stack levels required when called: 2
 17649 ;; This function calls:
 17650 ;;		_TMR5_ReadTimer
 17651 ;;		_TMR5_Reload
 17652 ;; This function is called by:
 17653 ;;		_TMR5_Initialize
 17654 ;;		_TMR5_GATE_ISR
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658                           	psect	text101
 17659  00630C                     __ptext101:
 17660                           	callstack 0
 17661  00630C                     _TMR5_DefaultGateInterruptHandler:
 17662                           	callstack 12
 17663  00630C                     
 17664                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 17665  00630C  EC64  F031         	call	_TMR5_ReadTimer	;wreg free
 17666  006310  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 17667  006314  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 17668  006318                     
 17669                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 17670  006318  0100               	movlb	0	; () banked
 17671  00631A  90D8               	bcf	status,0,c
 17672  00631C  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 17673  00631E  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 17674  006320                     
 17675                           ; BSR set to: 0
 17676                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 17677  006320  ECE7  F031         	call	_TMR5_Reload	;wreg free
 17678  006324                     
 17679                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 17680  006324  0139               	movlb	57	; () banked
 17681  006326  9FA8               	bcf	168,7,b	;volatile
 17682  006328                     
 17683                           ; BSR set to: 57
 17684  006328  0012               	return		;funcret
 17685  00632A                     __end_of_TMR5_DefaultGateInterruptHandler:
 17686                           	callstack 0
 17687                           
 17688 ;; *************** function _TMR5_Reload *****************
 17689 ;; Defined at:
 17690 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;		None
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;		None
 17695 ;; Return value:  Size  Location     Type
 17696 ;;                  1    wreg      void 
 17697 ;; Registers used:
 17698 ;;		wreg, status,2, cstack
 17699 ;; Tracked objects:
 17700 ;;		On entry : 0/0
 17701 ;;		On exit  : 0/0
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17708 ;;Total ram usage:        0 bytes
 17709 ;; Hardware stack levels used: 1
 17710 ;; Hardware stack levels required when called: 1
 17711 ;; This function calls:
 17712 ;;		_TMR5_WriteTimer
 17713 ;; This function is called by:
 17714 ;;		_TMR5_DefaultGateInterruptHandler
 17715 ;; This function uses a non-reentrant model
 17716 ;;
 17717                           
 17718                           	psect	text102
 17719  0063CE                     __ptext102:
 17720                           	callstack 0
 17721  0063CE                     _TMR5_Reload:
 17722                           	callstack 12
 17723  0063CE                     
 17724                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 17725  0063CE  C196  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17726  0063D2  C197  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17727  0063D6  EC14  F031         	call	_TMR5_WriteTimer	;wreg free
 17728  0063DA  0012               	return		;funcret
 17729  0063DC                     __end_of_TMR5_Reload:
 17730                           	callstack 0
 17731                           
 17732 ;; *************** function _TMR5_WriteTimer *****************
 17733 ;; Defined at:
 17734 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 17735 ;; Parameters:    Size  Location     Type
 17736 ;;  timerVal        2    8[COMRAM] unsigned short 
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;		None
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  1    wreg      void 
 17741 ;; Registers used:
 17742 ;;		wreg, status,2
 17743 ;; Tracked objects:
 17744 ;;		On entry : 0/0
 17745 ;;		On exit  : 0/0
 17746 ;;		Unchanged: 0/0
 17747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17752 ;;Total ram usage:        2 bytes
 17753 ;; Hardware stack levels used: 1
 17754 ;; This function calls:
 17755 ;;		Nothing
 17756 ;; This function is called by:
 17757 ;;		_TMR5_Reload
 17758 ;; This function uses a non-reentrant model
 17759 ;;
 17760                           
 17761                           	psect	text103
 17762  006228                     __ptext103:
 17763                           	callstack 0
 17764  006228                     _TMR5_WriteTimer:
 17765                           	callstack 12
 17766  006228                     
 17767                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 17768  006228  A49A               	btfss	154,2,c	;volatile
 17769  00622A  EF19  F031         	goto	i2u665_41
 17770  00622E  EF1B  F031         	goto	i2u665_40
 17771  006232                     i2u665_41:
 17772  006232  EF24  F031         	goto	i2l6745
 17773  006236                     i2u665_40:
 17774  006236                     
 17775                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 17776  006236  909A               	bcf	154,0,c	;volatile
 17777  006238                     
 17778                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 17779  006238  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17780  00623A  6E99               	movwf	153,c	;volatile
 17781  00623C                     
 17782                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 17783  00623C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17784  006242                     
 17785                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 17786  006242  809A               	bsf	154,0,c	;volatile
 17787                           
 17788                           ;mcc_generated_files/tmr5.c: 146:     }
 17789  006244  EF29  F031         	goto	i2l534
 17790  006248                     i2l6745:
 17791                           
 17792                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 17793  006248  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17794  00624A  6E99               	movwf	153,c	;volatile
 17795  00624C                     
 17796                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 17797  00624C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17798  006252                     i2l534:
 17799  006252  0012               	return		;funcret
 17800  006254                     __end_of_TMR5_WriteTimer:
 17801                           	callstack 0
 17802                           
 17803 ;; *************** function _TMR5_ReadTimer *****************
 17804 ;; Defined at:
 17805 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 17806 ;; Parameters:    Size  Location     Type
 17807 ;;		None
 17808 ;; Auto vars:     Size  Location     Type
 17809 ;;  readVal         2   12[COMRAM] unsigned short 
 17810 ;;  readValLow      1   15[COMRAM] unsigned char 
 17811 ;;  readValHigh     1   14[COMRAM] unsigned char 
 17812 ;; Return value:  Size  Location     Type
 17813 ;;                  2    8[COMRAM] unsigned short 
 17814 ;; Registers used:
 17815 ;;		wreg, status,2
 17816 ;; Tracked objects:
 17817 ;;		On entry : 0/0
 17818 ;;		On exit  : 0/0
 17819 ;;		Unchanged: 0/0
 17820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17822 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17824 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17825 ;;Total ram usage:        8 bytes
 17826 ;; Hardware stack levels used: 1
 17827 ;; This function calls:
 17828 ;;		Nothing
 17829 ;; This function is called by:
 17830 ;;		_TMR5_DefaultGateInterruptHandler
 17831 ;; This function uses a non-reentrant model
 17832 ;;
 17833                           
 17834                           	psect	text104
 17835  0062C8                     __ptext104:
 17836                           	callstack 0
 17837  0062C8                     _TMR5_ReadTimer:
 17838                           	callstack 13
 17839  0062C8                     
 17840                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 17841  0062C8  829A               	bsf	154,1,c	;volatile
 17842                           
 17843                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 17844  0062CA  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 17845                           
 17846                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 17847  0062D0  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 17848  0062D6                     
 17849                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 17850  0062D6  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 17851  0062D8  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 17852  0062DA  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 17853  0062DC  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 17854  0062DE  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 17855  0062E2                     
 17856                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 17857  0062E2  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 17858  0062E6  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 17859  0062EA  0012               	return		;funcret
 17860  0062EC                     __end_of_TMR5_ReadTimer:
 17861                           	callstack 0
 17862                           
 17863 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 17864 ;; Defined at:
 17865 ;;		line 192 in file "mcc_generated_files/smt1.c"
 17866 ;; Parameters:    Size  Location     Type
 17867 ;;		None
 17868 ;; Auto vars:     Size  Location     Type
 17869 ;;		None
 17870 ;; Return value:  Size  Location     Type
 17871 ;;                  1    wreg      void 
 17872 ;; Registers used:
 17873 ;;		wreg, status,2, status,0
 17874 ;; Tracked objects:
 17875 ;;		On entry : 0/0
 17876 ;;		On exit  : 0/0
 17877 ;;		Unchanged: 0/0
 17878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17883 ;;Total ram usage:        0 bytes
 17884 ;; Hardware stack levels used: 1
 17885 ;; This function calls:
 17886 ;;		Nothing
 17887 ;; This function is called by:
 17888 ;;		Interrupt level 2
 17889 ;; This function uses a non-reentrant model
 17890 ;;
 17891                           
 17892                           	psect	text105
 17893  005BBC                     __ptext105:
 17894                           	callstack 0
 17895  005BBC                     _SMT1_PR_ACQ_ISR:
 17896                           	callstack 15
 17897  005BBC                     
 17898                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 17899  005BBC  0139               	movlb	57	; () banked
 17900  005BBE  9DA1               	bcf	161,6,b	;volatile
 17901  005BC0                     
 17902                           ; BSR set to: 57
 17903                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 17904  005BC0  013F               	movlb	63	; () banked
 17905  005BC2  5115               	movf	21,w,b	;volatile
 17906  005BC4  6E48               	movwf	_smtPeriod^0,c	;volatile
 17907  005BC6  5116               	movf	22,w,b	;volatile
 17908  005BC8  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17909  005BCA  5117               	movf	23,w,b	;volatile
 17910  005BCC  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17911  005BCE  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 17912  005BD0                     
 17913                           ; BSR set to: 63
 17914                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 17915  005BD0  013C               	movlb	60	; () banked
 17916  005BD2  AB60               	btfss	96,5,b	;volatile
 17917  005BD4  EFEE  F02D         	goto	i2u758_41
 17918  005BD8  EFF0  F02D         	goto	i2u758_40
 17919  005BDC                     i2u758_41:
 17920  005BDC  EFF9  F02D         	goto	i2l7505
 17921  005BE0                     i2u758_40:
 17922  005BE0                     
 17923                           ; BSR set to: 60
 17924  005BE0  0E01               	movlw	1
 17925  005BE2  0101               	movlb	1	; () banked
 17926  005BE4  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17927  005BE6  0E00               	movlw	0
 17928  005BE8  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17929  005BEA  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17930  005BEC  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17931  005BEE  EF02  F02E         	goto	i2l856
 17932  005BF2                     i2l7505:
 17933                           
 17934                           ; BSR set to: 60
 17935  005BF2  0EFF               	movlw	255
 17936  005BF4  0101               	movlb	1	; () banked
 17937  005BF6  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17938  005BF8  0EFF               	movlw	255
 17939  005BFA  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17940  005BFC  0EFF               	movlw	255
 17941  005BFE  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17942  005C00  0EFF               	movlw	255
 17943  005C02  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17944  005C04                     i2l856:
 17945                           
 17946                           ; BSR set to: 1
 17947  005C04  0011               	retfie		f
 17948  005C06                     __end_of_SMT1_PR_ACQ_ISR:
 17949                           	callstack 0
 17950                           
 17951 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 17952 ;; Defined at:
 17953 ;;		line 203 in file "mcc_generated_files/smt1.c"
 17954 ;; Parameters:    Size  Location     Type
 17955 ;;		None
 17956 ;; Auto vars:     Size  Location     Type
 17957 ;;		None
 17958 ;; Return value:  Size  Location     Type
 17959 ;;                  1    wreg      void 
 17960 ;; Registers used:
 17961 ;;		wreg, status,2, status,0
 17962 ;; Tracked objects:
 17963 ;;		On entry : 0/0
 17964 ;;		On exit  : 0/0
 17965 ;;		Unchanged: 0/0
 17966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17971 ;;Total ram usage:        0 bytes
 17972 ;; Hardware stack levels used: 1
 17973 ;; This function calls:
 17974 ;;		Nothing
 17975 ;; This function is called by:
 17976 ;;		Interrupt level 2
 17977 ;; This function uses a non-reentrant model
 17978 ;;
 17979                           
 17980                           	psect	text106
 17981  005A88                     __ptext106:
 17982                           	callstack 0
 17983  005A88                     _SMT1_PW_ACQ_ISR:
 17984                           	callstack 15
 17985  005A88                     
 17986                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 17987  005A88  0139               	movlb	57	; () banked
 17988  005A8A  9FA1               	bcf	161,7,b	;volatile
 17989  005A8C                     
 17990                           ; BSR set to: 57
 17991                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 17992  005A8C  013F               	movlb	63	; () banked
 17993  005A8E  5118               	movf	24,w,b	;volatile
 17994  005A90  0101               	movlb	1	; () banked
 17995  005A92  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17996  005A94  013F               	movlb	63	; () banked
 17997  005A96  5119               	movf	25,w,b	;volatile
 17998  005A98  0101               	movlb	1	; () banked
 17999  005A9A  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 18000  005A9C  013F               	movlb	63	; () banked
 18001  005A9E  511A               	movf	26,w,b	;volatile
 18002  005AA0  0101               	movlb	1	; () banked
 18003  005AA2  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 18004  005AA4  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 18005  005AA6                     
 18006                           ; BSR set to: 1
 18007                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 18008  005AA6  013C               	movlb	60	; () banked
 18009  005AA8  AB60               	btfss	96,5,b	;volatile
 18010  005AAA  EF59  F02D         	goto	i2u759_41
 18011  005AAE  EF5B  F02D         	goto	i2u759_40
 18012  005AB2                     i2u759_41:
 18013  005AB2  EF64  F02D         	goto	i2l7515
 18014  005AB6                     i2u759_40:
 18015  005AB6                     
 18016                           ; BSR set to: 60
 18017  005AB6  0E01               	movlw	1
 18018  005AB8  0101               	movlb	1	; () banked
 18019  005ABA  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 18020  005ABC  0E00               	movlw	0
 18021  005ABE  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 18022  005AC0  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 18023  005AC2  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 18024  005AC4  EF6D  F02D         	goto	i2l863
 18025  005AC8                     i2l7515:
 18026                           
 18027                           ; BSR set to: 60
 18028  005AC8  0EFF               	movlw	255
 18029  005ACA  0101               	movlb	1	; () banked
 18030  005ACC  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 18031  005ACE  0EFF               	movlw	255
 18032  005AD0  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 18033  005AD2  0EFF               	movlw	255
 18034  005AD4  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 18035  005AD6  0EFF               	movlw	255
 18036  005AD8  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 18037  005ADA                     i2l863:
 18038                           
 18039                           ; BSR set to: 1
 18040  005ADA  0011               	retfie		f
 18041  005ADC                     __end_of_SMT1_PW_ACQ_ISR:
 18042                           	callstack 0
 18043                           
 18044 ;; *************** function _SMT1_Overflow_ISR *****************
 18045 ;; Defined at:
 18046 ;;		line 213 in file "mcc_generated_files/smt1.c"
 18047 ;; Parameters:    Size  Location     Type
 18048 ;;		None
 18049 ;; Auto vars:     Size  Location     Type
 18050 ;;		None
 18051 ;; Return value:  Size  Location     Type
 18052 ;;                  1    wreg      void 
 18053 ;; Registers used:
 18054 ;;		wreg, status,2
 18055 ;; Tracked objects:
 18056 ;;		On entry : 0/0
 18057 ;;		On exit  : 0/0
 18058 ;;		Unchanged: 0/0
 18059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18064 ;;Total ram usage:        0 bytes
 18065 ;; Hardware stack levels used: 1
 18066 ;; This function calls:
 18067 ;;		Nothing
 18068 ;; This function is called by:
 18069 ;;		Interrupt level 2
 18070 ;; This function uses a non-reentrant model
 18071 ;;
 18072                           
 18073                           	psect	text107
 18074  00627C                     __ptext107:
 18075                           	callstack 0
 18076  00627C                     _SMT1_Overflow_ISR:
 18077                           	callstack 15
 18078  00627C                     
 18079                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 18080  00627C  0139               	movlb	57	; () banked
 18081  00627E  9BA1               	bcf	161,5,b	;volatile
 18082  006280                     
 18083                           ; BSR set to: 57
 18084                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 18085  006280  0E00               	movlw	0
 18086  006282  6E48               	movwf	_smtPeriod^0,c	;volatile
 18087  006284  0E00               	movlw	0
 18088  006286  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 18089  006288  0E00               	movlw	0
 18090  00628A  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 18091  00628C  0E00               	movlw	0
 18092  00628E  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 18093                           
 18094                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 18095  006290  0E00               	movlw	0
 18096  006292  0101               	movlb	1	; () banked
 18097  006294  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 18098  006296  0E00               	movlw	0
 18099  006298  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 18100  00629A  0E00               	movlw	0
 18101  00629C  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 18102  00629E  0E00               	movlw	0
 18103  0062A0  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 18104  0062A2                     
 18105                           ; BSR set to: 1
 18106  0062A2  0011               	retfie		f
 18107  0062A4                     __end_of_SMT1_Overflow_ISR:
 18108                           	callstack 0
 18109                           
 18110                           ;
 18111                           ; Interrupt Vector Table @ 0x8
 18112                           ;
 18113                           
 18114                           	psect	ivt0x8
 18115  000008                     __pivt0x8:
 18116                           	callstack 0
 18117  000008                     ivt0x8_base:
 18118                           	callstack 0
 18119                           
 18120                           ; Vector 0 : SWINT
 18121  000008  1916               	dw	_Default_ISR shr (0+2)
 18122                           
 18123                           ; Vector 1 : HLVD
 18124  00000A  1916               	dw	_Default_ISR shr (0+2)
 18125                           
 18126                           ; Vector 2 : OSF
 18127  00000C  1916               	dw	_Default_ISR shr (0+2)
 18128                           
 18129                           ; Vector 3 : CSW
 18130  00000E  1916               	dw	_Default_ISR shr (0+2)
 18131                           
 18132                           ; Vector 4 : NVM
 18133  000010  1916               	dw	_Default_ISR shr (0+2)
 18134                           
 18135                           ; Vector 5 : SCAN
 18136  000012  1916               	dw	_Default_ISR shr (0+2)
 18137                           
 18138                           ; Vector 6 : CRC
 18139  000014  1916               	dw	_Default_ISR shr (0+2)
 18140                           
 18141                           ; Vector 7 : IOC
 18142  000016  1916               	dw	_Default_ISR shr (0+2)
 18143                           
 18144                           ; Vector 8 : INT0
 18145  000018  1916               	dw	_Default_ISR shr (0+2)
 18146                           
 18147                           ; Vector 9 : ZCD
 18148  00001A  1916               	dw	_Default_ISR shr (0+2)
 18149                           
 18150                           ; Vector 10 : AD
 18151  00001C  1916               	dw	_Default_ISR shr (0+2)
 18152                           
 18153                           ; Vector 11 : ADT
 18154  00001E  1916               	dw	_Default_ISR shr (0+2)
 18155                           
 18156                           ; Vector 12 : CMP1
 18157  000020  1916               	dw	_Default_ISR shr (0+2)
 18158                           
 18159                           ; Vector 13 : SMT1
 18160  000022  189F               	dw	_SMT1_Overflow_ISR shr (0+2)
 18161                           
 18162                           ; Vector 14 : SMT1PRA
 18163  000024  16EF               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 18164                           
 18165                           ; Vector 15 : SMT1PRW
 18166  000026  16A2               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 18167                           
 18168                           ; Vector 16 : DMA1SCNT
 18169  000028  1916               	dw	_Default_ISR shr (0+2)
 18170                           
 18171                           ; Vector 17 : DMA1DCNT
 18172  00002A  1916               	dw	_Default_ISR shr (0+2)
 18173                           
 18174                           ; Vector 18 : DMA1OR
 18175  00002C  1916               	dw	_Default_ISR shr (0+2)
 18176                           
 18177                           ; Vector 19 : DMA1A
 18178  00002E  1916               	dw	_Default_ISR shr (0+2)
 18179                           
 18180                           ; Vector 20 : SPI1RX
 18181  000030  1916               	dw	_Default_ISR shr (0+2)
 18182                           
 18183                           ; Vector 21 : SPI1TX
 18184  000032  1916               	dw	_Default_ISR shr (0+2)
 18185                           
 18186                           ; Vector 22 : SPI1
 18187  000034  1916               	dw	_Default_ISR shr (0+2)
 18188                           
 18189                           ; Vector 23 : I2C1RX
 18190  000036  1916               	dw	_Default_ISR shr (0+2)
 18191                           
 18192                           ; Vector 24 : I2C1TX
 18193  000038  1916               	dw	_Default_ISR shr (0+2)
 18194                           
 18195                           ; Vector 25 : I2C1
 18196  00003A  1916               	dw	_Default_ISR shr (0+2)
 18197                           
 18198                           ; Vector 26 : I2C1E
 18199  00003C  1916               	dw	_Default_ISR shr (0+2)
 18200                           
 18201                           ; Vector 27 : U1RX
 18202  00003E  1763               	dw	_UART1_rx_vect_isr shr (0+2)
 18203                           
 18204                           ; Vector 28 : U1TX
 18205  000040  1754               	dw	_UART1_tx_vect_isr shr (0+2)
 18206                           
 18207                           ; Vector 29 : U1E
 18208  000042  1916               	dw	_Default_ISR shr (0+2)
 18209                           
 18210                           ; Vector 30 : U1
 18211  000044  1916               	dw	_Default_ISR shr (0+2)
 18212                           
 18213                           ; Vector 31 : TMR0
 18214  000046  1916               	dw	_Default_ISR shr (0+2)
 18215                           
 18216                           ; Vector 32 : TMR1
 18217  000048  1916               	dw	_Default_ISR shr (0+2)
 18218                           
 18219                           ; Vector 33 : TMR1G
 18220  00004A  1916               	dw	_Default_ISR shr (0+2)
 18221                           
 18222                           ; Vector 34 : TMR2
 18223  00004C  1916               	dw	_Default_ISR shr (0+2)
 18224                           
 18225                           ; Vector 35 : CCP1
 18226  00004E  1916               	dw	_Default_ISR shr (0+2)
 18227                           
 18228                           ; Vector 36 : Undefined
 18229  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 18230                           
 18231                           ; Vector 37 : NCO1
 18232  000052  1916               	dw	_Default_ISR shr (0+2)
 18233                           
 18234                           ; Vector 38 : CWG1
 18235  000054  1916               	dw	_Default_ISR shr (0+2)
 18236                           
 18237                           ; Vector 39 : CLC1
 18238  000056  1916               	dw	_Default_ISR shr (0+2)
 18239                           
 18240                           ; Vector 40 : INT1
 18241  000058  1916               	dw	_Default_ISR shr (0+2)
 18242                           
 18243                           ; Vector 41 : CMP2
 18244  00005A  1916               	dw	_Default_ISR shr (0+2)
 18245                           
 18246                           ; Vector 42 : DMA2SCNT
 18247  00005C  1916               	dw	_Default_ISR shr (0+2)
 18248                           
 18249                           ; Vector 43 : DMA2DCNT
 18250  00005E  1916               	dw	_Default_ISR shr (0+2)
 18251                           
 18252                           ; Vector 44 : DMA2OR
 18253  000060  1916               	dw	_Default_ISR shr (0+2)
 18254                           
 18255                           ; Vector 45 : DMA2A
 18256  000062  1916               	dw	_Default_ISR shr (0+2)
 18257                           
 18258                           ; Vector 46 : I2C2RX
 18259  000064  1916               	dw	_Default_ISR shr (0+2)
 18260                           
 18261                           ; Vector 47 : I2C2TX
 18262  000066  1916               	dw	_Default_ISR shr (0+2)
 18263                           
 18264                           ; Vector 48 : I2C2
 18265  000068  1916               	dw	_Default_ISR shr (0+2)
 18266                           
 18267                           ; Vector 49 : I2C2E
 18268  00006A  1916               	dw	_Default_ISR shr (0+2)
 18269                           
 18270                           ; Vector 50 : U2RX
 18271  00006C  1916               	dw	_Default_ISR shr (0+2)
 18272                           
 18273                           ; Vector 51 : U2TX
 18274  00006E  1916               	dw	_Default_ISR shr (0+2)
 18275                           
 18276                           ; Vector 52 : U2E
 18277  000070  1916               	dw	_Default_ISR shr (0+2)
 18278                           
 18279                           ; Vector 53 : U2
 18280  000072  1916               	dw	_Default_ISR shr (0+2)
 18281                           
 18282                           ; Vector 54 : TMR3
 18283  000074  1916               	dw	_Default_ISR shr (0+2)
 18284                           
 18285                           ; Vector 55 : TMR3G
 18286  000076  1916               	dw	_Default_ISR shr (0+2)
 18287                           
 18288                           ; Vector 56 : TMR4
 18289  000078  179C               	dw	_TMR4_ISR shr (0+2)
 18290                           
 18291                           ; Vector 57 : CCP2
 18292  00007A  1916               	dw	_Default_ISR shr (0+2)
 18293                           
 18294                           ; Vector 58 : Undefined
 18295  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 18296                           
 18297                           ; Vector 59 : CWG2
 18298  00007E  1916               	dw	_Default_ISR shr (0+2)
 18299                           
 18300                           ; Vector 60 : CLC2
 18301  000080  1916               	dw	_Default_ISR shr (0+2)
 18302                           
 18303                           ; Vector 61 : INT2
 18304  000082  1916               	dw	_Default_ISR shr (0+2)
 18305                           
 18306                           ; Vector 62 : Undefined
 18307  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 18308                           
 18309                           ; Vector 63 : Undefined
 18310  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 18311                           
 18312                           ; Vector 64 : Undefined
 18313  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 18314                           
 18315                           ; Vector 65 : Undefined
 18316  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 18317                           
 18318                           ; Vector 66 : Undefined
 18319  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 18320                           
 18321                           ; Vector 67 : Undefined
 18322  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 18323                           
 18324                           ; Vector 68 : Undefined
 18325  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 18326                           
 18327                           ; Vector 69 : Undefined
 18328  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 18329                           
 18330                           ; Vector 70 : TMR5
 18331  000094  1916               	dw	_Default_ISR shr (0+2)
 18332                           
 18333                           ; Vector 71 : TMR5G
 18334  000096  182E               	dw	_TMR5_GATE_ISR shr (0+2)
 18335                           
 18336                           ; Vector 72 : TMR6
 18337  000098  1916               	dw	_Default_ISR shr (0+2)
 18338                           
 18339                           ; Vector 73 : CCP3
 18340  00009A  1807               	dw	_CCP3_CaptureISR shr (0+2)
 18341                           
 18342                           ; Vector 74 : CWG3
 18343  00009C  1916               	dw	_Default_ISR shr (0+2)
 18344                           
 18345                           ; Vector 75 : CLC3
 18346  00009E  1916               	dw	_Default_ISR shr (0+2)
 18347                           
 18348                           ; Vector 76 : Undefined
 18349  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 18350                           
 18351                           ; Vector 77 : Undefined
 18352  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 18353                           
 18354                           ; Vector 78 : Undefined
 18355  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 18356                           
 18357                           ; Vector 79 : Undefined
 18358  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 18359                           
 18360                           ; Vector 80 : CCP4
 18361  0000A8  1814               	dw	_CCP4_CaptureISR shr (0+2)
 18362                           
 18363                           ; Vector 81 : CLC4
 18364  0000AA  1916               	dw	_Default_ISR shr (0+2)
 18365  0000AC                     ivt0x8_undefint:
 18366                           	callstack 0
 18367  0000AC  00FF               	reset	
 18368                           
 18369                           	psect	text108
 18370  000000                     __ptext108:
 18371                           	callstack 0
 18372  000000                     
 18373                           	psect	rparam
 18374  0000                     
 18375                           	psect	idloc
 18376                           
 18377                           ;Config register IDLOC0 @ 0x200000
 18378                           ;	unspecified, using default values
 18379  200000                     	org	2097152
 18380  200000  0FFF               	dw	4095
 18381                           
 18382                           ;Config register IDLOC1 @ 0x200002
 18383                           ;	unspecified, using default values
 18384  200002                     	org	2097154
 18385  200002  0FFF               	dw	4095
 18386                           
 18387                           ;Config register IDLOC2 @ 0x200004
 18388                           ;	unspecified, using default values
 18389  200004                     	org	2097156
 18390  200004  0FFF               	dw	4095
 18391                           
 18392                           ;Config register IDLOC3 @ 0x200006
 18393                           ;	unspecified, using default values
 18394  200006                     	org	2097158
 18395  200006  0FFF               	dw	4095
 18396                           
 18397                           ;Config register IDLOC4 @ 0x200008
 18398                           ;	unspecified, using default values
 18399  200008                     	org	2097160
 18400  200008  0FFF               	dw	4095
 18401                           
 18402                           ;Config register IDLOC5 @ 0x20000A
 18403                           ;	unspecified, using default values
 18404  20000A                     	org	2097162
 18405  20000A  0FFF               	dw	4095
 18406                           
 18407                           ;Config register IDLOC6 @ 0x20000C
 18408                           ;	unspecified, using default values
 18409  20000C                     	org	2097164
 18410  20000C  0FFF               	dw	4095
 18411                           
 18412                           ;Config register IDLOC7 @ 0x20000E
 18413                           ;	unspecified, using default values
 18414  20000E                     	org	2097166
 18415  20000E  0FFF               	dw	4095
 18416                           
 18417                           	psect	config
 18418                           
 18419                           ;Config register CONFIG1L @ 0x300000
 18420                           ;	External Oscillator Selection
 18421                           ;	FEXTOSC = OFF, Oscillator not enabled
 18422                           ;	Reset Oscillator Selection
 18423                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 18424  300000                     	org	3145728
 18425  300000  8C                 	db	140
 18426                           
 18427                           ;Config register CONFIG1H @ 0x300001
 18428                           ;	Clock out Enable bit
 18429                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 18430                           ;	PRLOCKED One-Way Set Enable bit
 18431                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 18432                           ;	Clock Switch Enable bit
 18433                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18434                           ;	Fail-Safe Clock Monitor Enable bit
 18435                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 18436  300001                     	org	3145729
 18437  300001  FF                 	db	255
 18438                           
 18439                           ;Config register CONFIG2L @ 0x300002
 18440                           ;	MCLR Enable bit
 18441                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 18442                           ;	Power-up timer selection bits
 18443                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 18444                           ;	Multi-vector enable bit
 18445                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 18446                           ;	IVTLOCK bit One-way set enable bit
 18447                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 18448                           ;	Low Power BOR Enable bit
 18449                           ;	LPBOREN = OFF, ULPBOR disabled
 18450                           ;	Brown-out Reset Enable bits
 18451                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 18452  300002                     	org	3145730
 18453  300002  FF                 	db	255
 18454                           
 18455                           ;Config register CONFIG2H @ 0x300003
 18456                           ;	Brown-out Reset Voltage Selection bits
 18457                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 18458                           ;	ZCD Disable bit
 18459                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 18460                           ;	PPSLOCK bit One-Way Set Enable bit
 18461                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 18462                           ;	Stack Full/Underflow Reset Enable bit
 18463                           ;	STVREN = ON, Stack full/underflow will cause Reset
 18464                           ;	Debugger Enable bit
 18465                           ;	DEBUG = OFF, Background debugger disabled
 18466                           ;	Extended Instruction Set Enable bit
 18467                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 18468  300003                     	org	3145731
 18469  300003  FF                 	db	255
 18470                           
 18471                           ;Config register CONFIG3L @ 0x300004
 18472                           ;	WDT Period selection bits
 18473                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18474                           ;	WDT operating mode
 18475                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 18476  300004                     	org	3145732
 18477  300004  9F                 	db	159
 18478                           
 18479                           ;Config register CONFIG3H @ 0x300005
 18480                           ;	WDT Window Select bits
 18481                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18482                           ;	WDT input clock selector
 18483                           ;	WDTCCS = SC, Software Control
 18484  300005                     	org	3145733
 18485  300005  FF                 	db	255
 18486                           
 18487                           ;Config register CONFIG4L @ 0x300006
 18488                           ;	Boot Block Size selection bits
 18489                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 18490                           ;	Boot Block enable bit
 18491                           ;	BBEN = OFF, Boot block disabled
 18492                           ;	Storage Area Flash enable bit
 18493                           ;	SAFEN = OFF, SAF disabled
 18494                           ;	Application Block write protection bit
 18495                           ;	WRTAPP = OFF, Application Block not write protected
 18496  300006                     	org	3145734
 18497  300006  FF                 	db	255
 18498                           
 18499                           ;Config register CONFIG4H @ 0x300007
 18500                           ;	Configuration Register Write Protection bit
 18501                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 18502                           ;	Boot Block Write Protection bit
 18503                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 18504                           ;	Data EEPROM Write Protection bit
 18505                           ;	WRTD = OFF, Data EEPROM not write-protected
 18506                           ;	SAF Write protection bit
 18507                           ;	WRTSAF = OFF, SAF not Write Protected
 18508                           ;	Low Voltage Programming Enable bit
 18509                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 18510  300007                     	org	3145735
 18511  300007  FF                 	db	255
 18512                           
 18513                           ;Config register CONFIG5L @ 0x300008
 18514                           ;	PFM and Data EEPROM Code Protection bit
 18515                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 18516  300008                     	org	3145736
 18517  300008  FF                 	db	255
 18518                           
 18519                           ;Config register CONFIG5H @ 0x300009
 18520                           ;	unspecified, using default values
 18521  300009                     	org	3145737
 18522  300009  FF                 	db	255
 18523                           tosu	equ	0x3FFF
 18524                           tosh	equ	0x3FFE
 18525                           tosl	equ	0x3FFD
 18526                           stkptr	equ	0x3FFC
 18527                           pclatu	equ	0x3FFB
 18528                           pclath	equ	0x3FFA
 18529                           pcl	equ	0x3FF9
 18530                           tblptru	equ	0x3FF8
 18531                           tblptrh	equ	0x3FF7
 18532                           tblptrl	equ	0x3FF6
 18533                           tablat	equ	0x3FF5
 18534                           prodh	equ	0x3FF4
 18535                           prodl	equ	0x3FF3
 18536                           indf0	equ	0x3FEF
 18537                           postinc0	equ	0x3FEE
 18538                           postdec0	equ	0x3FED
 18539                           preinc0	equ	0x3FEC
 18540                           plusw0	equ	0x3FEB
 18541                           fsr0h	equ	0x3FEA
 18542                           fsr0l	equ	0x3FE9
 18543                           wreg	equ	0x3FE8
 18544                           indf1	equ	0x3FE7
 18545                           postinc1	equ	0x3FE6
 18546                           postdec1	equ	0x3FE5
 18547                           preinc1	equ	0x3FE4
 18548                           plusw1	equ	0x3FE3
 18549                           fsr1h	equ	0x3FE2
 18550                           fsr1l	equ	0x3FE1
 18551                           bsr	equ	0x3FE0
 18552                           indf2	equ	0x3FDF
 18553                           postinc2	equ	0x3FDE
 18554                           postdec2	equ	0x3FDD
 18555                           preinc2	equ	0x3FDC
 18556                           plusw2	equ	0x3FDB
 18557                           fsr2h	equ	0x3FDA
 18558                           fsr2l	equ	0x3FD9
 18559                           status	equ	0x3FD8

Data Sizes:
    Strings     167
    Constant    0
    Data        0
    BSS         182
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    139     159
    BANK1           256     20     186
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3446_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[14]), STR_5(CODE[16]), 
		 -> STR_4(CODE[21]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _getCurve->___flge
    _utoa->_pad
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    ___fldiv->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _getCurve->___flge
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    _checkBatt->_setSteering
    ___flge->___flmul
    _calcSteering->_setSteering
    _setSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_checkCurveCount
    _startAccell->_printf
    _getReverse->_printf
    _checkCurveCount->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  219106
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  217959
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                    _checkCurveCount
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          2     2      0   60539
                                             16 BANK1      2     2      0
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   51206
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                            12    12      0    3611
                                             21 BANK0     10    10      0
                             ___flge
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _checkCurveCount                                      4     4      0   52947
                                             16 BANK1      4     4      0
                            ___lwdiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   51206
                                              8 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   50381
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   49866
                                            103 BANK0     36    30      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    5909
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32150
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6763
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4497
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   10973
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1706
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    8402
                                             44 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    8139
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2903
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9603
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8579
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1126
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     787
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
           ___lwdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _checkCurveCount
       ___lwdiv
       ___xxtofl
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
             _utoa
               ___lodiv
               ___lomod
               _pad
     _getBatteryVoltage
     _getCurve
       ___flge
       ___lwdiv
       ___xxtofl
     _getReverse
       _printf
     _setMotor
     _setSteering
     _startAccell
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      BA       7       72.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A5      32        0.0%
DATA                 0      0     1A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 30 11:46:20 2024

                             _CCP4_Initialize 611A                        ??_CCP3_DefaultCallBack 0003  
                     __end_of_checkCurveCount 50B6                                  ___fldiv@aexp 006C  
                                ___fldiv@bexp 006B                                   _startAccell 55C4  
                                ___fldiv@sign 0064                                            l72 63BC  
                                          l75 62C6                                            l69 5B70  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 5A28  
                                         l404 5B26                                           l308 59E0  
                                         l309 59FA                                           l318 63E4  
                                         l520 5BBA                                           l441 6174  
                                         l362 6402                                           l371 63EE  
                                         l188 517E                                           l284 55C2  
                                         l365 6416                                           l359 640C  
                                         l368 63F8                                           l712 6018  
                                         l449 643E                                           l482 6146  
                                         l723 635C                                           l555 6420  
                                         l644 61CE                                           l740 5FB0  
                                         l709 6374                                           l581 5E6C  
                                         l726 5FE4                                           l479 6434  
                                         l751 638C                                           l737 63A4  
                                         l754 5F7C                                           l923 6344  
                                         l695 642A                                           l795 6118  
                                         l893 61FA                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 5CD6                                           _pad 5244  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0019  
                             _TMR2_Initialize 632A                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 642C                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0066                            _UART1_Transmit_ISR 5C92  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                       __end_of_CCP4_CaptureISR 6084  
                                ___fltol@exp1 0082                                          l1042 5A84  
                                        ?_abs 0026                                          l2004 2E92  
                                        l2006 2F0A                                          l1054 6094  
                                        l2007 2EF8                                          l2032 2AE2  
                                        l1304 3576                                          l1232 4734  
                                        l2025 28C8                                          l1057 60B4  
                                        l2042 2C12                                          l2034 2B5A  
                                        l1330 3614                                          l2035 2B48  
                                        l2131 52CA                                          l1260 63CC  
                                        l2029 2C50                                          l1325 358A  
                                        l2133 5304                                          l2141 3096  
                                        l2310 5D14                                          l2302 4C52  
                                        l1318 45B6                                          l1351 37AC  
                                        l2223 1906                                          l1319 45C8  
                                        l2080 4126                                          l1408 3FDA  
                                        l2128 5288                                          l1280 50B4  
                                        l1248 483A                                          l2073 40CA  
                                        l1257 578C                                          l1265 581E  
                                        l2066 4032                                          l2307 5D0C  
                                        l2139 308E                               _timer3ReloadVal 0192  
                                        l2316 3BDC                                          l1276 5662  
                                        l4101 5B22                                          l2069 418E  
                                        l1373 39C6                                          l1525 4316  
                                        l2341 56F8                                          l1382 4714  
                                        l2326 5DFC                                          l1286 33CA  
                                        l4103 5B24                                          l4111 50D8  
                                        l1391 4F18                                          l2159 32D2  
                                        l2319 3B20                                          l1288 3566  
                                        l4121 5134                                          l4113 50E0  
                                        l4105 62A4                                          l2361 5D4E  
                                        l2177 1D56                                          l2257 3C16  
                                        l2089 627A                                          l1642 5242  
                                        l1490 4946                                          l1538 447A  
                                        l4131 63A6                                          l4123 513A  
                                        l4115 512E                                          l4107 50B6  
                                        l1395 3DF4                                          l2355 596C  
                                        l2195 14C8                                          l2267 3DE4  
                                        l2259 3C1E                                          l2291 58FA  
                                        l1708 4A4E                                          l2380 59CC  
                                        l2284 2172                                          l2276 233E  
                                        l2292 5902                                          l4125 513C  
                                        l4117 5130                                          l4109 50D6  
                                        l1397 3E18                                          l2349 5C90  
                                        l2365 4D46                                          l1398 3E2C  
                                        l1902 588A                                          l1670 551E  
                                        l4143 5A2A                                          l4127 513E  
                                        l4119 5132                                          l4215 635E  
                                        l1399 3EA0                                          l1655 5474  
                                        l2375 59C4                                          l4081 5AF0  
                                        l4129 5140                                          l4161 610C  
                                        l1681 4B54                                          l4091 5B18  
                                        l4083 5B06                                          l4075 5ADC  
                                        l4163 6110                                          l4155 60EA  
                                        l4171 632A                                          l1940 251E  
                                        l1676 4B0E                                          l4093 5B1A  
                                        l4085 5B08                                          l4077 5ADE  
                                        l4165 6112                                          l4157 6108  
                                        l4173 6336                                          l1941 24E4  
                                        l1909 5892                                          l1685 5E34  
                                        l4095 5B1C                                          l4087 5B12  
                                        l4079 5AE6                                          l4167 6114  
                                        l4159 610A                                          l4175 633C  
                                        l1856 4E36                                          l4097 5B1E  
                                        l4089 5B16                                          l4177 6376  
                                        l4169 6346                                          l1849 4E16  
                                        l1866 4FE8                                          l4099 5B20  
                                        l1939 2530                                          l1859 4FC8  
                                        l1956 264A                                          l1948 2800  
                                        l4189 61D0                                          l1965 271A  
                                        l1981 5C4C                                          l1966 2708  
                                        ?_pad 0026                                          l4199 638E  
                                        l1993 2FEC                                          l8001 2C6E  
                                        l1995 2E4C                                          l8011 2CA2  
                                        l8003 2C70                                          l7301 5B28  
                                        l8021 2CD4                                          l8005 2C80  
                                        l8013 2CAA                                          l1998 2E10  
                                        l7311 5B4C                                          l7303 5B38  
                                        l8103 2F1A                                          l8111 2F62  
                                        l8031 2D08                                          l8023 2CD6  
                                        l8015 2CBA                                          l8007 2C90  
                                        l7321 5B68                                          l7313 5B50  
                                        l7305 5B3C                                          l8201 29DC  
                                        l8121 2FCC                                          l8113 2F7C  
                                        l8105 2F26                                          l8041 2D4E  
                                        l8025 2CE6                                          l8033 2D10  
                                        l8017 2CC0                                          l8009 2CA0  
                                        l6601 608C                                          l9001 1DA8  
                                        l7315 5B58                                          l7307 5B44  
                                        l8211 2A66                                          l8203 29EC  
                                        l6611 483C                                          l8123 2FDA  
                                        l8115 2F92                                          l8107 2F34  
                                        l8051 2D76                                          l8043 2D52  
                                        l8035 2D20                                          l8027 2CF6  
                                        l8019 2CC6                                          l6603 6090  
                                        l9011 1E38                                          l9003 1DAC  
                                        l7317 5B5C                                          l7309 5B48  
                                        l8301 5214                                          l8221 2AE0  
                                        l8213 2A9C                                          l8205 2A0C  
                                        l8141 2820                                          l6621 4870  
                                        l6613 4840                                          l8125 2FE0  
                                        l8117 2FAC                                          l8109 2F5E  
                                        l8061 2DC4                                          l8037 2D36  
                                        l8029 2D06                                          l6605 6092  
                                        l9013 1E78                                          l9005 1DD8  
                                        l6711 63E6                                          l7319 5B64  
                                        l8311 523A                                          l8303 5216  
                                        l8231 2B40                                          l8223 2AF2  
                                        l8215 2AAA                                          l8207 2A1C  
                                        l8151 2866                                          l8143 2830  
                                        l8135 2802                                          l9111 40B4  
                                        l9103 406C                                          l6631 48B2  
                                        l6623 4880                                          l6615 484E  
                                        l8127 2FE2                                          l8119 2FC8  
                                        l8071 2E0E                                          l8063 2DD4  
                                        l8055 2D8A                                          l8039 2D46  
                                        l8047 2D66                                          l6607 60A2  
                                        l9031 1FF2                                          l9023 1F68  
                                        l9015 1EA6                                          l9007 1DE8  
                                        l6713 6404                                          l8305 521C  
                                        l8241 2BAE                                          l8225 2B00  
                                        l8217 2AC8                                          l8209 2A3C  
                                        l8161 2892                                          l8153 286C  
                                        l8145 2840                                          l8137 2810  
                                        l9121 4134                                          l9113 40C0  
                                        l9105 4074                                          l6641 4904  
                                        l6633 48BE                                          l6625 4884  
                                        l6617 485E                                          l8081 2E5C  
                                        l8073 2E1A                                          l8065 2DDC  
                                        l8057 2DA4                                          l8049 2D76  
                                        l9201 3FC8                                          l8321 53E0  
                                        l9041 20D4                                          l9025 1F7A  
                                        l9017 1ED4                                          l9009 1E28  
                                        l6731 642C                                          l6715 63FA  
                                        l8307 5222                                          l8251 2C16  
                                        l8235 2B6A                                          l8243 2BB2  
                                        l8227 2B04                                          l8219 2AD2  
                                        l8171 28E8                                          l8163 28A2  
                                        l8155 2872                                          l8147 2850  
                                        l8139 281E                                          l8411 49B4  
                                        l8403 4974                                          l9131 417C  
                                        l9123 4136                                          l9115 40FC  
                                        l9107 4080                                          l6651 4936  
                                        l6643 4906                                          l6635 48CC  
                                        l6627 4894                                          l6619 4862  
                                        l8083 2E72                                          l8091 2EA2  
                                        l8075 2E38                                          l8067 2DEC  
                                        l8059 2DB4                                          l8331 5414  
                                        l8323 53E4                                          l8315 53C6  
                                        l9043 20E6                                          l9051 21B2  
                                        l9027 1F9C                                          l9035 201E  
                                        l9019 1F30                                          l9211 625E  
                                        l6733 6418                                          l6901 5B8A  
                                        l6717 640E                                          l6709 63F0  
                                        l8309 5232                                          l8261 2C40  
                                        l8253 2C26                                          l8245 2BCC  
                                        l8237 2B76                                          l8229 2B12  
                                        l8181 2930                                          l8165 28B2  
                                        l8157 2880                                          l8149 2856  
                                        l8421 49E4                                          l8413 49C2  
                                        l8405 499E                                          l9133 417E  
                                        l9125 413A                                          l9117 4108  
                                        l9109 40B2                                          l6645 4910  
                                        l6637 48D6                                          l6629 48AA  
                                        l6821 5718                                          l7701 236E  
                                        l8093 2EB0                                          l8085 2E78  
                                        l8077 2E3A                                          l8069 2E00  
                                        l9221 5842                                          l8501 5CD6  
                                        l8341 544E                                          l8333 541C  
                                        l8325 53F2                                          l8317 53CA  
                                        l9061 22A6                                          l9053 21E0  
                                        l9045 212E                                          l9037 204C  
                                        l9029 1FAE                                          l9141 58AA  
                                        l9301 3382                                          l6903 5BA4  
                                        l6911 5520                                          l8271 5180  
                                        l8255 2C34                                          l8247 2BE0  
                                        l8239 2B84                                          l8191 297E  
                                        l8183 293C                                          l8175 28FC  
                                        l8167 28B8                                          l8159 2882  
                                        l8431 4A0E                                          l8423 49EE  
                                        l8407 49A0                                          l9127 415E  
                                        l9119 4116                                          l6639 48F4  
                                        l6647 4916                                          l6823 5728  
                                        l9151 4E78                                          l7711 23A8  
                                        l7703 237E                                          l8095 2EB4  
                                        l8087 2E82                                          l8079 2E4A  
                                        l6815 63BE                                          l9231 587C  
                                        l9223 584A                                          l9215 5820  
                                        l8503 5CF0                                          l8335 542A  
                                        l8343 5454                                          l8327 53FA  
                                        l8319 53D8                                          l8351 5476  
                                        l8511 4BDC                                          l9071 22EC  
                                        l9063 22B8                                          l9055 2240  
                                        l9047 2186                                          l9143 58D8  
                                        l9311 33DE                                          l9303 339E  
                                        l6729 6436                                          l6905 5BA8  
                                        l6921 554A                                          l6913 5524  
                                        l8281 51AC                                          l8273 5184  
                                        l8257 2C36                                          l8249 2BFA  
                                        l8193 298E                                          l8185 2958  
                                        l8177 290C                                          l8169 28D8  
                                        l8433 4A1E                                          l8409 49B0  
                                        l9129 416E                                          l6649 4926  
                                        l6825 5758                                          l6817 56FA  
                                        l9161 4ED4                                          l9153 4E84  
                                        l9145 4E38                                          l7801 2572  
                                        l7721 23D6                                          l7713 23AE  
                                        l7705 238E                                          l8097 2EC2  
                                        l8089 2E90                                          l9401 35B2  
                                        l9233 587E                                          l9225 5858  
                                        l9217 5828                                          l8601 316C  
                                        l8345 5464                                          l8337 5440  
                                        l8329 540C                                          l8361 5516  
                                        l8353 54A4                                          l8265 5C06  
                                        l8513 4BE8                                          l8505 4B56  
                                        l8441 4D48                                          l9065 22CC  
                                        l9137 5894                                          l9209 6254  
                                        l9321 342C                                          l9313 33EA  
                                        l9305 33B6                                          l9241 55E0  
                                        l6907 5BAA                                          l6931 555E  
                                        l6923 554E                                          l6915 5530  
                                        l8291 51DA                                          l8283 51B4  
                                        l8275 5192                                          l8259 2C3C  
                                        l8195 299E                                          l8187 2964  
                                        l8179 2916                                          l8435 4A2E  
                                        l8419 49DA                                          l9091 3FDE  
                                        l6827 5784                                          l6819 5702  
                                        l9083 5FE6                                          l9163 4EE0  
                                        l9147 4E54                                          l9155 4E94  
                                        l7811 25AC                                          l7803 2580  
                                        l7731 240A                                          l7723 23D8  
                                        l7715 23C0                                          l7707 2390  
                                        l8099 2EF0                                          l9171 3EA8  
                                        l9411 362C                                          l9403 35CE  
                                        l8371 4A90                                          l9235 5884  
                                        l9227 585E                                          l9219 583A  
                                        l8611 323E                                          l8603 31D0  
                                        l8347 546C                                          l8339 5448  
                                        l8363 551C                                          l8355 54B4  
                                        l8267 5C18                                          l8523 4C4A  
                                        l8507 4B76                                          l8531 596E  
                                        l8451 4D9C                                          l8443 4D54  
                                        l9059 2278                                          l9075 22FA  
                                        l9139 589C                                          l9331 34B6  
                                        l9323 3442                                          l9315 33F0  
                                        l9307 33C4                                          l9251 5600  
                                        l6861 6158                                          l6749 6422  
                                        l6909 5BB6                                          l6941 5572  
                                        l6933 5562                                          l6925 5552  
                                        l6917 5540                                          l8293 51E2  
                                        l8285 51B8                                          l8277 519A  
                                        l8197 29AE                                          l8189 2970  
                                        l8437 4A3E                                          l8429 4A02  
                                        l9093 3FEE                                          l9085 5FB2  
                                        l9157 4EB0                                          l9165 4F00  
                                        l9149 4E70                                          l7821 2618  
                                        l7813 25AE                                          l7805 258E  
                                        l7741 2446                                          l7725 23E8  
                                        l7733 2412                                          l7717 23C2  
                                        l7709 2398                                          l9173 3EB4  
                                        l9181 3EDC                                          l9413 3640  
                                        l8381 4AFC                                          l8373 4ABE  
                                        l9229 5874                                          l7661 59D0  
                                        l7901 5C70                                          l8621 3284  
                                        l8605 31EC                                          l8613 324C  
                                        l8357 54E2                                          l8509 4BB4  
                                        l8517 4BF4                                          l8541 39C8  
                                        l8461 4E10                                          l8453 4DAE  
                                        l8445 4D72                                          l9077 2328  
                                        l9069 22DA                                          l9341 351E  
                                        l9333 34C8                                          l9325 344A  
                                        l9317 3400                                          l9309 33CE  
                                        l9261 564C                                          l9253 5606  
                                        l9237 55C4                                          l6863 6164  
                                        l6871 61B8                                          l6951 5596  
                                        l6943 5576                                          l6935 5566  
                                        l6927 5556                                          l6919 5546  
                                        l8295 51F0                                          l8287 51C0  
                                        l8279 519E                                          l8199 29BE  
                                        l9095 3FFC                                          l9159 4ECC  
                                        l7831 2670                                          l7823 261A  
                                        l7815 25B8                                          l7807 259A  
                                        l7751 245A                                          l7743 244A  
                                        l7735 2422                                          l7727 23F8  
                                        l7719 23C8                                          l9511 39B6  
                                        l9503 391A                                          l9087 5F7E  
                                        l9191 3F6C                                          l9175 3EBC  
                                        l9183 3F1E                                          l9167 3DE6  
                                        l9423 368E                                          l9415 3654  
                                        l9407 35DA                                          l8383 4B4C  
                                        l8375 4ACE                                          l8367 4A50  
                                        l6599 6086                                          l9271 57B2  
                                        l7671 5A20                                          l7663 59F0  
                                        l7903 5D16                                          l8623 3290  
                                        l8615 325E                                          l8607 320A  
                                        l8359 54F2                                          l8391 5E14  
                                        l8519 4C06                                          l8543 39E8  
                                        l8527 5904                                          l8535 59A4  
                                        l8711 1426                                          l8703 135C  
                                        l8631 10AA                                          l8455 4DDC  
                                        l8447 4D7A                                          l8471 4F62  
                                        l8463 4F1A                                          l9335 34FC  
                                        l9327 344A                                          l9319 3416  
                                        l9263 5652                                          l9255 5616  
                                        l9247 55EA                                          l9239 55D6  
                                        l6865 616E                                          l6881 612A  
                                        l6873 61BC                                          l6953 55BE  
                                        l6945 557A                                          l6937 556A  
                                        l6929 555A                                          l8297 51F6  
                                        l8289 51D2                                          l9097 4042  
                                        l9521 45D6                                          l7841 269E  
                                        l7825 262A                                          l7809 259E  
                                        l7817 25BE                                          l7761 246E  
                                        l7753 245E                                          l7745 244E  
                                        l7737 2434                                          l7729 2408  
                                        l9513 39BE                                          l9505 3974  
                                        l9089 5F4A                                          l9193 3F88  
                                        l9185 3F3C                                          l9177 3EC8  
                                        l9169 3E34                                          l9433 36C8  
                                        l9425 36A0                                          l9417 3668  
                                        l9441 3756                                          l9409 3618  
                                        l8385 4B52                                          l8377 4ADC  
                                        l8369 4A80                                          l9273 57B6  
                                        l9265 578E                                          l7921 41A2  
                                        l7673 5A24                                          l7665 59FC  
                                        l7681 5676                                          l7905 5D22  
                                        l8481 5252                                          l8625 3298  
                                        l8617 326C                                          l8609 3224  
                                        l8393 5E24                                          l8561 3B94  
                                        l8553 3AD4                                          l8545 3A40  
                                        l8529 5914                                          l7913 5DC6  
                                        l8537 59B6                                          l8801 18B8  
                                        l8721 1488                                          l8713 142E  
                                        l8705 1390                                          l8641 10FE  
                                        l8633 10B4                                          l8457 4DFC  
                                        l8449 4D8E                                          l8473 4F90  
                                        l8465 4F38                                          l9329 3480  
                                        l9361 44B0                                          l9257 561C  
                                        l9249 55F4                                          l6867 6172  
                                        l6859 6148                                          l6883 6136  
                                        l6891 5E4A                                          l6875 61BE  
                                        l6947 557E                                          l6939 556E  
                                        l8299 520C                                          l9099 4058  
                                        l9531 4688                                          l9523 45E4  
                                        l7843 26AC                                          l7835 2684  
                                        l7851 26CA                                          l7819 25E4  
                                        l7827 263A                                          l7763 2472  
                                        l7755 2462                                          l7747 2452  
                                        l7739 2442                                          l7771 2482  
                                        l9507 3992                                          l9195 3F94  
                                        l9187 3F48                                          l9443 376A  
                                        l9435 36D8                                          l9419 367A  
                                        l8379 4AEE                                          l9275 57FE  
                                        l9283 581C                                          l9267 5794  
                                        l7931 41F8                                          l7923 41C2  
                                        l7667 5A0E                                          l7675 5A26  
                                        l7659 59D0                                          l7683 5688  
                                        l7907 5D26                                          l8491 52A8  
                                        l8483 5266                                          l8619 3272  
                                        l8627 32AA                                          l8571 300E  
                                        l8563 3BBC                                          l8555 3B10  
                                        l8547 3A54                                          l8811 18FE  
                                        l8803 18CC                                          l8723 149A  
                                        l8707 1396                                          l8715 1462  
                                        l8651 1142                                          l8643 1108  
                                        l8635 10C4                                          l8459 4DFE  
                                        l8475 4FB0                                          l8467 4F40  
                                        l9339 350E                                          l9291 331C  
                                        l9347 352A                                          l9371 44FC  
                                        l9363 44C2                                          l9355 447C  
                                        l9259 5638                                          l9611 482E  
                                        l9603 481E                                          l6885 6140  
                                        l6893 5E4E                                          l6877 61CA  
                                        l6869 61A4                                          l6949 558A  
                                        l8397 4948                                          l9541 46D0  
                                        l9533 4690                                          l9525 45F8  
                                        l7845 26B4                                          l7837 268E  
                                        l7829 2660                                          l7853 26D8  
                                        l7781 24F2                                          l7773 2486  
                                        l7765 2476                                          l7757 2466  
                                        l7749 2456                                          l7693 2340  
                                        l9509 399A                                          l9197 3FB0  
                                        l9189 3F64                                          l9445 377C  
                                        l9429 36B4                                          l9277 5806  
                                        l9269 57AA                                          l7941 424C  
                                        l7933 4204                                          l7925 41C6  
                                        l7917 4190                                          l7669 5A10  
                                        l7677 63DE                                          l7685 5692  
                                        l7909 5D42                                          l8493 52AC  
                                        l8485 5274                                          l8581 3082  
                                        l8573 3038                                          l8389 5DFE  
                                        l8565 3BCC                                          l8549 3A62  
                                        l8557 3B44                                          l8901 1C2E  
                                        l8821 19BA                                          l8813 1922  
                                        l8805 18D0                                          l8741 154A  
                                        l8725 14A2                                          l8717 1472  
                                        l8709 13F2                                          l8653 114E  
                                        l8661 1164                                          l8645 1110  
                                        l8637 10D2                                          l8477 4FC2  
                                        l8469 4F54                                          l9293 3338  
                                        l9381 454A                                          l9373 450E  
                                        l9365 44CC                                          l9357 4494  
                                        l9605 4822                                          l9613 62EC  
                                        l6887 6144                                          l6879 611A  
                                        l6895 5E68                                          l8399 4960  
                                        l9543 46DC                                          l9535 46A4  
                                        l9527 45F8                                          l9519 45CA  
                                        l7863 272A                                          l7871 2780  
                                        l7855 26DC                                          l7847 26B8  
                                        l7839 269C                                          l7791 251C  
                                        l7783 24FE                                          l7775 24B0  
                                        l7767 247A                                          l7759 246A  
                                        l7695 234E                                          l9471 37F2  
                                        l9463 37AE                                          l9199 3FB8  
                                        l9447 3794                                          l9439 36FC  
                                        l9279 5816                                          l7951 42C0  
                                        l7943 425E                                          l7935 4222  
                                        l7927 41D4                                          l7919 4194  
                                        l7687 56B0                                          l7679 5664  
                                        l8495 52D8                                          l8487 5280  
                                        l8479 5244                                          l8591 30CC  
                                        l8583 309E                                          l8575 3058  
                                        l8559 3B80                                          l8911 1C7E  
                                        l8903 1C40                                          l8831 1A02  
                                        l8823 19C8                                          l8815 1986  
                                        l8807 18E0                                          l8751 1582  
                                        l8743 1552                                          l8735 14E6  
                                        l8727 14BC                                          l8719 1476  
                                        l8671 11EE                                          l8663 118A  
                                        l8655 1156                                          l8647 1122  
                                        l8639 10DA                                          l9551 4FEA  
                                        l9295 3350                                          l9287 32D4  
                                        l9391 45AA                                          l9375 4524  
                                        l9383 4550                                          l9367 44E4  
                                        l9359 449E                                          l9607 4826  
                                        l9615 62F0                                          l6889 5E36  
                                        l6897 5B72                                          l9545 46F8  
                                        l9537 46A8                                          l9529 4674  
                                        l7881 27D2                                          l7873 2790  
                                        l7865 2736                                          l7857 26EA  
                                        l7849 26C8                                          l7793 253E  
                                        l7785 2502                                          l7777 24CC  
                                        l7769 247E                                          l7697 235C  
                                        l9481 383E                                          l9473 37FA  
                                        l9465 37BC                                          l9449 37A8  
                                        l7945 428C                                          l7937 422A  
                                        l7953 42C6                                          l7929 41F4  
                                        l7961 4318                                          l7689 56E6  
                                        l8497 52EC                                          l8489 5294  
                                        l8593 30D6                                          l8585 30B0  
                                        l8577 3066                                          l8569 2FEE  
                                        l8913 1C86                                          l8905 1C5A  
                                        l8841 1A2C                                          l8833 1A06  
                                        l8817 1994                                          l8825 19D0  
                                        l8809 18F2                                          l8761 15CC  
                                        l8753 1590                                          l8737 14F8  
                                        l8745 1556                                          l8729 14D4  
                                        l8681 125E                                          l8673 1206  
                                        l8657 115A                                          l8649 1130  
                                        l9561 5070                                          l9553 5002  
                                        l9297 335E                                          l9289 32D8  
                                        l9393 45B2                                          l9385 4566  
                                        l9377 4532                                          l9369 44E8  
                                        l9609 482A                                          l9617 62F2  
                                        l6899 5B86                                          l9547 4700  
                                        l9539 46B4                                          l7891 27F0  
                                        l7883 27D8                                          l7875 27A0  
                                        l7867 2744                                          l7859 2700  
                                        l7795 254E                                          l7787 2510  
                                        l7779 24DC                                          l7699 235E  
                                        l9483 3842                                          l9475 3810  
                                        l9467 37D2                                          l9395 3578  
                                        l7955 42D6                                          l7947 42AC  
                                        l7939 423E                                          l7971 435C  
                                        l7963 431C                                          l8595 30DC  
                                        l8587 30BE                                          l8579 3068  
                                        l8931 1D10                                          l8923 1CD8  
                                        l8915 1C98                                          l8907 1C60  
                                        l8851 1A60                                          l8843 1A32  
                                        l8835 1A0C                                          l8827 19E4  
                                        l8819 19A8                                          l8771 1612  
                                        l8763 15DE                                          l8755 1594  
                                        l8747 155E                                          l8739 1514  
                                        l8691 12DA                                          l8675 1210  
                                        l8667 11C0                                          l8659 115E  
                                        l9563 5084                                          l9555 5018  
                                        l9299 3364                                          l9387 4584  
                                        l9379 453C                                          l9571 4716  
                                        l9619 6300                                          l9549 470C  
                                        l7885 27DA                                          l7877 27C0  
                                        l7869 277E                                          l7789 2512  
                                        l9493 3902                                          l9485 3858  
                                        l9477 381C                                          l9469 37D6  
                                        l9397 358A                                          l7957 42F6  
                                        l7949 42AE                                          l7981 43C4  
                                        l7973 437C                                          l7965 432A  
                                        l8597 315E                                          l8589 30C4  
                                        l8933 1D16                                          l8925 1CEA  
                                        l8917 1C9E                                          l8909 1C72  
                                        l8837 1A18                                          l8829 19F2  
                                        l8845 1A38                                          l8853 1A66  
                                        l8861 1AFE                                          l8781 1726  
                                        l8773 1676                                          l8757 15A6  
                                        l8765 15E6                                          l8749 1570  
                                        l8693 12E4                                          l8685 1294  
                                        l8669 11D2                                          l8941 3BEC  
                                        l9565 50A2                                          l9557 504E  
                                        l9389 4592                                          l9581 47A4  
                                        l9573 4742                                          l7887 27E0  
                                        l7879 27C4                                          l7799 2562  
                                        l9487 38EA                                          l9479 3828  
                                        l9399 35A6                                          l7991 443A  
                                        l7983 43F2                                          l7975 439A  
                                        l7967 434A                                          l7895 5C4E  
                                        l8599 3166                                          l8927 1CF6  
                                        l8919 1CA4                                          l8935 1D32  
                                        l8871 1B68                                          l8863 1B1C  
                                        l8855 1ABE                                          l8847 1A4A  
                                        l8839 1A28                                          l8791 17E4  
                                        l8783 175A                                          l8775 16CE  
                                        l8767 15EE                                          l8759 15B4  
                                        l8687 12A6                                          l8679 1238  
                                        l8951 3C5A                                          l8943 3BEE  
                                        l9567 50AC                                          l9559 505C  
                                        l9591 47D0                                          l9583 47A8  
                                        l9575 4754                                          l7889 27EE  
                                        l9497 390E                                          l9489 38F6  
                                        l7993 445A                                          l7985 4412  
                                        l7977 43A2                                          l7969 434E  
                                        l7897 5C5A                                          l8929 1CFE  
                                        l8881 1BA6                                          l8873 1B6C  
                                        l8865 1B38                                          l8857 1AF2  
                                        l8849 1A5C                                          l8793 17F4  
                                        l8785 178E                                          l8777 1702  
                                        l8769 15FE                                          l8689 12C2  
                                        l8697 130C                                          l8953 3C60  
                                        l8961 3D48                                          l8945 3C08  
                                        l9569 50B0                                          l9761 3540  
                                        l9593 47D4                                          l9585 47B0  
                                        l9577 4758                                          l9763 35EE  
                                        l7987 4424                                          l7979 43B6  
                                        l7899 5C6C                                          l8891 1BD8  
                                        l8883 1BAE                                          l8875 1B7C  
                                        l8867 1B4A                                          l8859 1AFA  
                                        l8795 1828                                          l8787 17A2  
                                        l8779 1708                                          l8699 1326  
                                        l8963 3D5C                                          l8971 3DBC  
                                        l8955 3CD6                                          l8947 3C46  
                                        l8939 3BDE                                          l9595 47E2  
                                        l9587 47B8                                          l9579 475C  
                                        l7997 2C52                                          l9765 3710  
                                        l7989 442A                                          l8893 1BDE  
                                        l8885 1BBC                                          l8877 1B8E  
                                        l8869 1B58                                          l8797 1880  
                                        l8789 17D4                                          l8981 4C8A  
                                        l8965 3D7A                                          l8957 3CDE  
                                        l8949 3C50                                          l9597 47F2  
                                        l9589 47BE                                          l7999 2C60  
                                        l9767 3EF0                                          l8895 1C04  
                                        l8887 1BC4                                          l8879 1B96  
                                        l8799 1884                                          l8991 4D1A  
                                        l8983 4C98                                          l8975 4C54  
                                        l8967 3D94                                          l8959 3CE4  
                                        l9599 4806                                          STR_1 1048  
                                        STR_2 101B                                          l9769 392E  
                                        l8897 1C20                                          l8889 1BCC  
                                        l8985 4CB4                                          l8977 4C7E  
                                        l8969 3DAE                                          STR_3 1001  
                                        STR_4 1033                                          l8899 1C28  
                                        l8987 4CD6                                          l8995 1D58  
                                        STR_5 105C                                          STR_6 107A  
                                        l8989 4CE8                                          l8997 1D86  
                                        STR_7 1088                                          STR_8 106C  
                                        l8999 1D98                                          STR_9 1095  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          u8000 277E  
                                        _PMD4 0039C4                                          u8001 277A  
                                        _PMD5 0039C5                                          u8010 2790  
                                        _PMD6 0039C6                                          u8011 278C  
                                        _PMD7 0039C7                                          u6500 48CC  
                                        u8020 27A0                                          u8100 41A2  
                                        u6501 48C8                                          u8021 279C  
                                        u8101 419E                                          u6510 48F4  
                                        u8030 27C0                                          u8110 41D4  
                                        u6511 48F0                                          u8031 27BC  
                                        u8111 41D0                                          u6520 4926  
                                        u8040 27D2                                          u8200 43C4  
                                        u9000 5252                                          u2985 5B10  
                                        u6521 4922                                          u8041 27CE  
                                        u8121 41FE                                          u8201 43C0  
                                        u9001 524E                                          u2986 5B12  
                                        u8050 27EE                                          u8130 4222  
                                        u8210 43F2                                          u9010 5274  
                                        u8051 27EA                                          u8131 421E  
                                        u8211 43EE                                          u9011 5270  
                                        u8300 2D76                                          u6460 60A2  
                                        u8140 424C                                          u8220 443A  
                                        u8060 5C90                                          u9020 52CA  
                                        u9100 4C40                                          u8301 2D72  
                                        u6461 609E                                          u8141 4248  
                                        u8221 4436                                          u8061 5C8C  
                                        u9021 52C6                                          u9101 4C3A  
                                        u6470 484E                                          u8310 2DEC  
                                        u8230 2C6E                                          u8150 428C  
                                        u8070 5D42                                          u9030 52D8  
                                        u9110 4C42                                          u6471 484A  
                                        u8311 2DE8                                          u8231 2C6A  
                                        u8151 4288                                          u8071 5D3E  
                                        u9031 52D4                                          u6480 4870  
                                        u8400 2F06                                          u8320 2E0E  
                                        u8240 2C80                                          u8160 42D6  
                                        u9040 5CF0                                          u7600 59E0  
                                        u9120 595A                                          u8080 5DF6  
                                        u6481 486C                                          u8401 2F02  
                                        u8321 2E0A                                          u8241 2C7C  
                                        u8161 42D2                                          u9041 5CEC  
                                        u7601 59DC                                          u8081 5DF0  
                                        u6490 48AA                                          u8410 2F1A  
                                        u8330 2E38                                          u8250 2C90  
                                        u8170 432A                                          u7610 59F0  
                                        u9050 4B96                                          u9210 3AD0  
                                        u9130 596C                                          u8090 5DF8  
                                        u6491 48A6                                          u8411 2F16  
                                        u8331 2E34                                          u8251 2C8C  
                                        u8171 4326                                          u7611 59EC  
                                        u9211 3ACC                                          u9131 5968  
                                        u8500 2892                                          u6740 5718  
                                        u7700 23C0                                          u8420 2F34  
                                        u8340 2E5C                                          u8260 2CD4  
                                        u8180 435C                                          u7620 5A20  
                                        u9300 3066                                          u9060 4BB4  
                                        u9220 3AF4                                          u9140 599E  
                                        u8501 288E                                          u6741 5714  
                                        u7701 23BC                                          u8421 2F30  
                                        u8341 2E58                                          u8261 2CD0  
                                        u8181 4358                                          u7621 5A1C  
                                        u9301 3062                                          u9061 4BB0  
                                        u9205 3A76                                          u9141 5998  
                                        u8510 28A2                                          u6750 5728  
                                        u7710 23D6                                          u8430 2F7C  
                                        u8350 2E72                                          u8270 2CE6  
                                        u8190 439A                                          u7630 5676  
                                        u9310 3082                                          u9070 4BDC  
                                        u9230 3B10                                          u9206 3A80  
                                        u9150 59A0                                          u8511 289E  
                                        u6751 5724                                          u7711 23D2  
                                        u8431 2F78                                          u8351 2E6E  
                                        u8271 2CE2                                          u8191 4396  
                                        u7631 5672                                          u9311 307E  
                                        u9071 4BD8                                          u9055 4B8C  
                                        u9231 3B0C                                          u9207 3A90  
                                        u9127 594C                                          u8600 2B6A  
                                        u8520 28D8                                          u7800 2510  
                                        u7720 23E8                                          u8440 2FAC  
                                        u8360 2E90                                          u8280 2CF6  
                                        u7640 5688                                          u9400 326C  
                                        u9320 30B0                                          u9080 4C06  
                                        u9240 3B64                                          u9160 59B6  
                                        u8601 2B66                                          u8521 28D4  
                                        u7801 250C                                          u7721 23E4  
                                        u8441 2FA8                                          u8361 2E8C  
                                        u8281 2CF2                                          u7641 5684  
                                        u9401 3268                                          u9321 30AC  
                                        u9081 4C02                                          u9225 3AEA  
                                        u9161 59B2                                          u8610 2B84  
                                        u8530 28E8                                          u7810 2530  
                                        u7730 23F8                                          u8450 2FDA  
                                        u8370 2EB0                                          u8290 2D36  
                                        u7650 56B0                                          u9410 3284  
                                        u9330 30BE                                          u9250 3B80  
                                        u9170 3A12                                          u8611 2B80  
                                        u8531 28E4                                          u7811 252C  
                                        u7731 23F4                                          u8451 2FD6  
                                        u8371 2EAC                                          u8291 2D32  
                                        u7651 56AC                                          u9411 3280  
                                        u9331 30BA                                          u9251 3B7C  
                                        u8700 5232                                          u8620 2BCC  
                                        u8540 2A86                                          u8460 281E  
                                        u7900 2670                                          u7820 253E  
                                        u7740 2434                                          u8380 2EC2  
                                        u7660 56E6                                          u9340 31EC  
                                        u9260 3BBC                                          u9180 3A40  
                                        u9500 125E                                          u9420 10D2  
                                        u8701 522E                                          u8621 2BC8  
                                        u8461 281A                                          u7901 266C  
                                        u7821 253A                                          u7741 2430  
                                        u8381 2EBE                                          u7661 56E2  
                                        u9341 31E8                                          u9261 3BB8  
                                        u9245 3B5A                                          u9181 3A3C  
                                        u9501 125A                                          u9421 10CE  
                                        u8630 2BFA                                          u8550 2AE0  
                                        u8470 2830                                          u7910 269C  
                                        u7830 254E                                          u7750 2442  
                                        u7670 235C                                          u8390 2EF0  
                                        u9350 320A                                          u9270 3020  
                                        u8710 53D8                                          u9190 3A62  
                                        u9510 128E                                          u9430 1122  
                                        u8631 2BF6                                          u8551 2ADC  
                                        u8471 282C                                          u7911 2698  
                                        u7831 254A                                          u7751 243E  
                                        u7671 2358                                          u8391 2EEC  
                                        u9351 3206                                          u9271 301A  
                                        u8711 53D4                                          u9095 4C18  
                                        u9191 3A5E                                          u9175 3A08  
                                        u9511 1288                                          u9431 111E  
                                        u8640 2C34                                          u8560 2B00  
                                        u8480 2840                                          u7920 26AC  
                                        u7840 2580                                          u7760 24B0  
                                        u7680 236E                                          u8800 4A80  
                                        u9360 3224                                          u9280 3022  
                                        u8720 53F2                                          u9600 14E2  
                                        u9520 1290                                          u9440 1130  
                                        u8641 2C30                                          u8561 2AFC  
                                        u8545 2A7C                                          u8481 283C  
                                        u7921 26A8                                          u7841 257C  
                                        u7761 24AC                                          u7681 236A  
                                        u8801 4A7C                                          u9361 3220  
                                        u8721 53EE                                          u9601 14DE  
                                        u9441 112C                                          u8650 5192  
                                        u8570 2B12                                          u8490 2880  
                                        u7930 26C8                                          u7850 258E  
                                        u7770 24C8                                          u7690 237E  
                                        u8810 4ABE                                          u9370 323E  
                                        u9290 3038                                          u8730 540C  
                                        u9610 14F8                                          u9530 12A6  
                                        u9450 1142                                          u8651 518E  
                                        u8571 2B0E                                          u8491 287C  
                                        u7931 26C4                                          u7851 258A  
                                        u7771 24C2                                          u7691 237A  
                                        u8811 4ABA                                          u9371 323A  
                                        u9291 3034                                          u8731 5408  
                                        u9611 14F4                                          u9531 12A2  
                                        u9451 113E                                          u8660 51AC  
                                        u8580 2B40                                          u8900 49FE  
                                        u7940 26D8                                          u7860 25AC  
                                        u7780 24CA                                          u8820 4ADC  
                                        u9380 324C                                          u8740 542A  
                                        u9700 1726                                          u9620 1514  
                                        u9540 1358                                          u9460 118A  
                                        u8661 51A8                                          u8581 2B3C  
                                        u8901 49FA                                          u7941 26D4  
                                        u7861 25A8                                          u8821 4AD8  
                                        u9381 3248                                          u8741 5426  
                                        u9701 1722                                          u9621 1510  
                                        u9541 1354                                          u9461 1186  
                                        u8670 51D2                                          u8590 2B56  
                                        u8910 4A1E                                          u7950 26EA  
                                        u7870 25E4                                          u7790 24F2  
                                        u8830 4AFC                                          u9390 325E  
                                        u8750 5440                                          u9710 178E  
                                        u9630 154A                                          u9550 13EE  
                                        u9470 11BA                                          u8671 51CE  
                                        u8591 2B52                                          u8911 4A1A  
                                        u7951 26E6                                          u7871 25E0  
                                        u7791 24EE                                          u8831 4AF8  
                                        u9391 325A                                          u8751 543C  
                                        u9711 178A                                          u9631 1546  
                                        u9551 13EA                                          u9471 11B4  
                                        u8680 51F0                                          u8920 4A2E  
                                        u7960 2700                                          u7880 262A  
                                        u8840 4B4C                                          u8760 5464  
                                        u9800 19C8                                          u9720 17D4  
                                        u9640 1570                                          u9560 1462  
                                        u9480 11BC                                          u8681 51EC  
                                        u8921 4A2A                                          u7961 26FC  
                                        u7881 2626                                          u8841 4B48  
                                        u8761 5460                                          u9801 19C4  
                                        u9721 17D0                                          u9641 156C  
                                        u9561 145E                                          u8690 520C  
                                        u7970 2716                                          u7890 2660  
                                        u8770 54A4                                          u8850 5E14  
                                        u9810 19E4                                          u9730 17E4  
                                        u9650 1582                                          u9570 1488  
                                        u9490 11D2                                          u8691 5208  
                                        u7971 2712                                          u7891 265C  
                                        u8771 54A0                                          u8851 5E10  
                                        u9811 19E0                                          u9731 17E0  
                                        u9651 157E                                          u9571 1484  
                                        u9491 11CE                                          u8931 4D4E  
                                        u8860 4960                                          u7980 272A  
                                        u8780 54E2                                          u9900 1C40  
                                        u9820 19F2                                          u9740 1880  
                                        u9660 1590                                          u9580 149A  
                                        u8940 4D72                                          u8861 495C  
                                        u7981 2726                                          u8781 54DE  
                                        u9901 1C3C                                          u9821 19EE  
                                        u9741 187C                                          u9661 158C  
                                        u9581 1496                                          u8941 4D6E  
                                        u8870 4994                                          u7990 2744  
                                        u8790 5516                                          u9910 1C5A  
                                        u9830 1A4A                                          u9750 18CC  
                                        u9670 15A6                                          u9590 14BC  
                                        u8950 4D9C                                          u7991 2740  
                                        u8791 5512                                          u9911 1C56  
                                        u9831 1A46                                          u9751 18C8  
                                        u9671 15A2                                          u9591 14B8  
                                        u8951 4D98                                          u8880 49C2  
                                        u9920 1C72                                          u9840 1B1C  
                                        u9760 18F2                                          u9680 15B4  
                                        u8960 4DDC                                          u8881 49BE  
                                        u9921 1C6E                                          u9841 1B18  
                                        u9761 18EE                                          u9681 15B0  
                                        u8961 4DD8                                          u8890 49D6  
                                        u9930 1CD2                                          u9850 1B38  
                                        u9770 1994                                          u9690 15DE  
                                        u8970 4F38                                          u8891 49D2  
                                        u8875 498A                                          u9931 1CCC  
                                        u9851 1B34                                          u9771 1990  
                                        u9691 15DA                                          u8971 4F34  
                                        u9940 1CD4                                          u9860 1B4A  
                                        u9780 19A8                                          u8980 4F62  
                                        u9861 1B46                                          u9781 19A4  
                                        u8981 4F5E                                          u9950 1CEA  
                                        u9870 1B58                                          u9790 19BA  
                                        u8990 4F90                                          u9951 1CE6  
                                        u9871 1B54                                          u9791 19B6  
                                        u8991 4F8C                                          u9880 1B8E  
                                        u9960 3BEC                                          u9881 1B8A  
                                        u9961 3BE8                                          u9890 1BBC  
                                        u9970 3C08                                          _TMR2 003FAA  
                                        u9891 1BB8                                          u9971 3C04  
                                        u9980 3D5C                                          _TMR4 003F9E  
                                        u9981 3D58                                          u9990 3D7A  
                                        u9991 3D76                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 0140                                          _main 62EC  
                                        _dtoa 2FEE                                          _loop 4716  
                                        _prec 003C                                          _nout 0128  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                          _utoa 3BDE  
                               ___fpclassifyf 4B56                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 0196                               ___fldiv@new_exp 0065  
                             _TMR3_Initialize 5E36                               _PWM5_Initialize 638E  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                                _tolower$3697 0020                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 5D8C                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 5FB2                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 63BE                                 ___fltol@sign1 0081  
                             __end_of___aldiv 4948                               __end_of___aodiv 4318  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 6176                               __end_of___fladd 2802  
                                       ?_main 0001                                         ?_dtoa 0060  
                                       _ADCLK 003EFF                               __end_of___aomod 447C  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 2FEE                                         _ADREF 003EFD  
                             __end_of___awdiv 5244                               __end_of___flneg 5E36  
                                       ?_loop 0001                                         STR_10 109D  
                                       STR_13 1099                                         STR_14 10A1  
                                       STR_17 10A5                                         STR_19 10A5  
                             __end_of___awmod 5476                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2C52  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 5C4E  
                             __end_of___fltol 4A50                                         u10000 3D94  
                                       u10001 3D90                                         u10010 3DAE  
                                       u10011 3DAA                                         u10020 3DBC  
                                       u10100 1E38                                         u10021 3DB8  
                                       u10101 1E34                                         u10030 4C7E  
                                       u10110 1EA6                                         u10031 4C7A  
                                       u10111 1EA2                                         ?_utoa 0060  
                                       u10040 4CB4                                         u10120 1ED4  
                                       u11000 481A                                         u10041 4CB0  
                                       u10121 1ED0                                         u11001 4816  
                                       u10050 4CD6                                         u10130 1F7A  
                                       u10051 4CD2                                         u10131 1F76  
                                       u10300 4126                                         u10060 4CE8  
                                       u10140 204C                                         u10301 4122  
                                       u10205 600A                                         u10061 4CE4  
                                       u10141 2048                                         u10310 4134  
                                       u10070 4D1A                                         u10150 20CE  
                                       u10311 4130                                         u10215 5FD6  
                                       u10071 4D16                                         u10151 20C8  
                                       u10320 416E                                         u10240 3FEE  
                                       u10400 3F64                                         u10160 20D0  
                                       u10080 1D86                                         u10321 416A  
                                       u10241 3FEA                                         u10225 5FA2  
                                       u10401 3F60                                         u10081 1D82  
                                       u10330 417C                                         u10250 3FFC  
                                       u10410 3F88                                         u10170 20E6  
                                       u10090 1DE8                                         u10331 4178  
                                       u10251 3FF8                                         u10235 5F6E  
                                       u10411 3F84                                         u10171 20E2  
                                       u10091 1DE4                                         u10260 4058  
                                       u10420 3FB0                                         u10500 57FE  
                                       u10180 21E0                                         u10340 58FA  
                                       u10261 4054                                         u10421 3FAC  
                                       u10501 57FA                                         u10181 21DC  
                                       u10341 58F6                                         u10270 40AE  
                                       u10350 4E54                                         u10430 583A  
                                       u10190 22A6                                         u10510 331C  
                                       u10271 40AA                                         u10351 4E50  
                                       u10431 5836                                         u10191 22A2  
                                       u10511 3318                                         u10280 40F8  
                                       u10360 4E70                                         u10440 5858  
                                       u10600 342C                                         u10520 3338  
                                       u10281 40F4                                         u10361 4E6C  
                                       u10441 5854                                         u10601 3428  
                                       u10521 3334                                         u10290 4116  
                                       u10370 4EB0                                         u10450 5874  
                                       u10610 3442                                         u10530 3350  
                                       u10291 4112                                         u10371 4EAC  
                                       u10451 5870                               __end_of___lodiv 4E38  
                                       u10611 343E                                         u10531 334C  
                                       u10380 4ECC                                         u10620 34B6  
                                       u10540 3382                                         u10700 450E  
                                       u10460 5616                               ___awdiv@divisor 0016  
                                       u10381 4EC8                                         u10621 34B2  
                                       u10541 337E                                         u10701 450A  
                                       u10461 5612                                         u10390 3F3C  
                                       u10630 34FC                                         u10550 339E  
                                       u10710 4524                                         u10470 5638  
                                       u10391 3F38                                         u10631 34F8  
                                       u10551 339A                                         u10711 4520  
                                       u10471 5634                                         u10800 377C  
                                       u10640 351E                                         u10560 33B6  
                                       u10720 4566                                         u10480 5662  
                                       u10801 3778                                         u10641 351A  
                                       u10561 33B2                                         u10721 4562  
                                       u10481 565E                                         u10810 3794  
                                       u10490 57AA                                         u10570 33DE  
                                       u10730 4584                                         u10650 4494  
                                       _U1P1H 003DED                                         u10811 3790  
                                       u10491 57A6                                         u10571 33DA  
                                       u10731 4580                                         u10651 4490  
                                       u10900 46A4                                         u10820 37D2  
                                       u10580 3400                                         u10740 45AA  
                                       u10660 44B0                                         _U1P2H 003DEF  
                                       u10901 46A0                                         u10821 37CE  
                                       u10581 33FC                                         u10741 45A6  
                                       u10661 44AC                                         u10910 46D0  
                                       u10830 37F2                                         u10750 35A6  
                                       u10590 3416                                         u10670 44C2  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       u10911 46CC                                         u10831 37EE  
                                       u10751 35A2                                         u10591 3412  
                                       u10671 44BE                                         _T3CLK 003FA9  
                                       u10920 46F8                                         u10840 3810  
                                       u10760 35CE                                         u10680 44E4  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       u10921 46F4                                         u10841 380C  
                                       u10761 35CA                                         u10681 44E0  
                                       u10850 383E                                         u10770 367A  
                                       u10930 5002                                         u10690 44FC  
                                       _U1P3L 003DF0                                         u10851 383A  
                                       u10771 3676                                         u10931 4FFE  
                                       u10691 44F8                                         u10860 3858  
                                       u10780 36A0                                         u10940 5018  
                                       u10861 3854                                         u10781 369C  
                                       u10941 5014                                         u10870 3992  
                                       u10790 376A                                         u10950 4742  
                                       u10871 398E                                         u10791 3766  
                                       u10951 473E                                         u10880 39B6  
                                       u10960 4754                                         _T3CON 003FA6  
                                       u10881 39B2                                         u10961 4750  
                                       u10890 4688                                         u10970 47A4  
                                       u10891 4684                                         u10971 47A0  
                                       u10980 47D0                                         u10981 47CC  
                                       u10990 47E2                                         u10991 47DE  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 4FEA                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                             __end_of___lwdiv 5894                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 5DBE  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5D82                                         i1l333 5CD0  
                                       i1l350 6452                                         i1l343 53C4  
                                       i1l336 5CD4                                         i1l353 6450  
                                       _U1TXB 003DEA                                         i1l347 6226  
                                       i1l356 644E                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 6458  
                                       i1l692 61A2                                         i2l534 6252  
                                       i2l438 5F12                                         i2l446 604E  
                                       i2l552 60E8                                         i1l688 5EA0  
                                       i2l529 62EA                                         i2l537 63DA  
                                       i1l698 6454                                         i2l476 5F48  
                                       i2l558 6328                                         i2l487 6082  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 5ADA  
                                       i2l856 5C04                                         i2l868 62A2  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                  vfpfcnvrt@llu 00D9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 6458  
                             _TMR4_Initialize 61A4                               _PWM6_Initialize 6376  
                           _UART1_tx_vect_isr 5D50                              __end_of_TMR4_ISR 5EA8  
                     setSteering@steeringMode 0085                                         _delay 00F7  
                                       _flags 003E                                         _fputc 5664  
                                       _fputs 5C4E                         __size_of_calcMotorPow 014C  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 003A                                         _putch 63DC  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 5DFE  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 012A                               _curveRightCount 00F8  
                       __size_of_calcSteering 0236                                         utoa@d 0062  
                                       utoa@i 0076                                         utoa@n 006E  
                                       utoa@p 006A                                         utoa@w 006C  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 63FA  
                 _UART1_SetRxInterruptHandler 63F0                       __end_of_CCP4_Initialize 6148  
                              ?___fpclassifyf 0014                               __end_of_tolower 59CE  
                             __end_of_strncmp 4D48                              ___lodiv@dividend 0014  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 6454  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 6452  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 5DC6  
                             _TMR5_Initialize 5B72                               _PWM7_Initialize 635E  
                             __initialization 5EA8                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 630C  
                                __end_of_dtoa 32D4                                  __end_of_loop 483C  
                            ?_checkCurveCount 0001                                  __end_of_utoa 3DE6  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 6346  
                              _roundTimeCount 00F1                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                        ??_utoa 0031  
                               __activetblptr 000003                                  _calcMotorPow 45CA  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 5D8A  
                                startAccell@i 01B6                              ___lodiv@quotient 0024  
                             _PWM8_Initialize 6346                              _UART1_Initialize 5520  
                                _calcSteering 3578                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 5FB2  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1251 6448                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 63A6                       __end_of_TMR3_Initialize 5E6E  
                                      i1l7415 6176                                        i1l7351 5CB6  
                                      i1l7417 618A                                        i1l6721 620E  
                                      i1l7361 5326                                        i1l7353 5CC6  
                                      i1l7345 5C92                                        i1l6723 6210  
                                      i1l7371 5386                                        i1l7363 5336  
                                      i1l7355 5CCA                                        i1l7347 5CA2  
                                      i1l6725 6220                                        i1l7373 53A2  
                                      i1l7365 534E                                        i1l7357 5306  
                                      i1l7349 5CB4                                        i1l6727 6224  
                                      i1l6719 61FC                                        i1l7375 53C0  
                                      i1l7367 535E                                        i1l7359 5316  
                                      i1l7471 5DA6                                        i1l7369 536E  
                                      i1l7465 5D56                                        i1l7299 6440  
                                      i1l7491 5E7A                                        i1l7467 5D6A  
                                      i1l7493 5E94                                        i1l7469 5D92  
                                      i1l7495 5E98                                        i1l7489 5E76  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      i1l6955 644A                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l7501 5BD0                                        i2l7511 5AA6  
                                      i2l7503 5BE0                                        i2l7513 5AB6  
                                      i2l7505 5BF2                                        i2l7515 5AC8  
                                      i2l7507 5A88                                        i2l7517 627C  
                                      i2l7509 5A8C                                        i2l6741 623C  
                                      i2l7381 5EF8                                        i2l7519 6280  
                                      i2l6743 6242                                        i2l6735 6228  
                                      i2l7391 5F42                                        i2l7383 5F0C  
                                      i2l6737 6236                                        i2l6745 6248  
                                      i2l7393 630C                                        i2l7481 60B8  
                                      i2l7385 5F14                                        i2l7377 5EDE  
                                      i2l7473 601C                                        i2l6747 624C  
                                      i2l6739 6238                                        i2l7395 6318  
                                      i2l7483 60BC                                        i2l7387 5F22  
                                      i2l7379 5EEC                                        i2l7475 602C  
                                      i2l7397 6320                                        i2l7485 60D0  
                                      i2l7389 5F2E                                        i2l7477 6050  
                                      i2l7399 6324                                        i2l7479 6060  
                                      i2l7497 5BBC                                        i2l6961 62E2  
                                      i2l7499 5BC0                                        i2l6957 62C8  
                                      i2l6965 63CE                                        i2l6959 62D6  
                                ?_setSteering 0083                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 578E                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 640E                              __end_of___xxtofl 4190  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 3578  
                    __end_of_CCP3_SetCallBack 6440                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 01AC  
                                      ___flge 4A50                                        ___fleq 5476  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 0032                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                     ??___lodiv 0024  
                                   ??___lomod 0024                                        _efgtoa 10AA  
                                   ??___lwdiv 0018                                 _CCP3_CallBack 019A  
                                      _floorf 39C8                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 638E                       __end_of_TMR4_Initialize 61D0  
                                      clear_0 5EAE                                        clear_1 5EBA  
                                      clear_2 5EC6                              ___awdiv@quotient 001A  
                                      _motPow 0130                               ___awmod@divisor 0016  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                             ___awmod@counter 0018                                 _CCP4_CallBack 0198  
                                      _smtWay 0120                                        _printf 6254  
                                      pad@buf 0028                                        dtoa@fp 0060  
                            ?_CCP3_Initialize 0001                                        _strcpy 5904  
                                      _strlen 5D16                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 4F1A                               _ADCC_Initialize 5A2A  
        __end_of_TMR4_DefaultInterruptHandler 6456         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 6454                                        fputc@c 0016  
                              _PMD_Initialize 62A4                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 60EA                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 5904                     ?_ADCC_GetSingleConversion 0014  
                                      utoa@fp 0060      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 6404  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 63FA  
                   _UART1_DefaultErrorHandler 644A                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 007B  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 6376  
                     __end_of_TMR5_Initialize 5BBC                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 5B28  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 5ED8                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0083  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 6228                            __size_of_calcSpeed 021A  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 6436  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 61A4  
                          __size_of_checkBatt 0092                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 56FA  
                               __end_of_fputs 5C92                               fp__TMR4_10msISR 0000  
                               __end_of_putch 63E6                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 635E                        __end_of_PMD_Initialize 62C8  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 01A0               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 5B72                                       ??_fputs 0023  
                             _CLC3_Initialize 61D0                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00EB  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 0190  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 006D  
                                     ?___fleq 0014                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 5A86                    __end_of_PWM6_LoadDutyValue 5F7E  
                                     ?_efgtoa 0083          __end_of_TMR5_SetGateInterruptHandler 6422  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 6418  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       ?_floorf 0036  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0036  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 01AE                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 5306                                    _getReverse 447C  
                                     ?_strcpy 0014                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 5F7E  
                                  _distRightM 013C                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 39C8                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 05E8                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 5820  
                         ??_UART1_Receive_ISR 0012                              ___lomod@dividend 0014  
                     __end_of_TMR5_WriteTimer 6254                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01F6  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 55C4                                       ___aldiv 483C  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 4190                                       ___fladd 2340  
                                     ___aomod 4318                                       ___fldiv 2C52  
                                     ___awdiv 5180                                       ___flneg 5DFE  
                                     ___awmod 53C6                                       ___flmul 2802  
                                     ___flsub 5C06                                       ___fltol 4948  
                                     ___lodiv 4D48                                       ___lomod 4F1A  
                                     ___lwdiv 5820                     __end_of_UART1_Receive_ISR 53C6  
                                   ?_vfprintf 01A6                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                               __size_of_efgtoa 0CAE  
                             __size_of_floorf 0216                                       __pcinit 5EA8  
                   _TMR5_GateInterruptHandler 0194                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 62EC  
                                     __ptext1 4716                                       __ptext2 55C4  
                                     __ptext3 447C                                       __ptext4 32D4  
                                     __ptext5 4FEA                                       __ptext6 6254  
                                     __ptext7 5894                                       __ptext8 1D58  
                                     __ptext9 3BDE                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strcpy 006A  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 61FC  
                       _OSCILLATOR_Initialize 63A6                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
                            ___awmod@dividend 0014                 __size_of_CCP4_DefaultCallBack 0036  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                       _isupper 5DC6  
                                     efgtoa@c 0089                                       efgtoa@d 00A7  
                                     efgtoa@e 00BF                                       efgtoa@f 0085  
                                     efgtoa@g 00BB                                       efgtoa@h 00B1  
                                     efgtoa@i 00B9                                       efgtoa@l 00B5  
                                     efgtoa@m 00A1                                       efgtoa@n 00C1  
                                     efgtoa@p 00AB                                       efgtoa@t 009B  
                                     efgtoa@u 00C3                                       efgtoa@w 00AD  
                                   _IPR10bits 00398A                                       _smtDuty 0124  
                                   _T4HLTbits 003FA1                                    ??_getCurve 0075  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                                     _tolower 596E                                       _strncmp 4C54  
                        end_of_initialization 5ED8                                       floorf@e 0077  
                                   _T2RSTbits 003FAF                                       floorf@m 0073  
                                     floorf@u 0079                                       floorf@x 0036  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 63F0  
                 _UART1_SetTxInterruptHandler 63E6                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 2340  
                                  efgtoa@mode 00B0                             ?_CCP3_SetCallBack 0014  
                                  efgtoa@sign 00A9                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 003A  
            __end_of_ADCC_GetSingleConversion 60B6                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 61FC                                       strcpy@d 001C  
                                     strlen@a 0016                                       strcpy@s 001A  
                                     strlen@s 0014                          __size_of_startAccell 00A0  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                    __size_of_checkCurveCount 00CC                                   ___fladd@grs 0078  
                          getCurve@deltaRight 007D                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                              _curveLeftCount 00F9                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 5B28                                __end_of___flge 4B56  
                              __end_of___fleq 5520                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00E7  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D58                             __size_of_TMR4_ISR 0038  
                              __end_of_floorf 3BDE                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 627C  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 596E                                __end_of_strlen 5D50  
                              _TMR5_ReadTimer 62C8                           start_initialization 5EA8  
                             ___lodiv@divisor 001C                               ___lodiv@counter 002C  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 5D16                                   __end_of_pad 5306  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00EB  
                       __end_of___fpclassifyf 4C54                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 014E                          __end_of_TMR4_10msISR 644A  
                                 vfprintf@fmt 01A8                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 0136  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 601A  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 62EC                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 6084  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 0040  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 019C  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01A6  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5F4A                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 01A4  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5F14  
                      __size_of_TMR4_CallBack 002E                             ??_checkCurveCount 003A  
                                   _calcSpeed 37AE                             __size_of_getCurve 02A4  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 578E  
                                _currentSpeed 00ED                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 0190                                   _efgtoa$3572 0093  
                                 _efgtoa$3567 008F                                   _efgtoa$3576 0095  
                                 _efgtoa$3568 0091                                   _efgtoa$3577 0097  
                                 _efgtoa$3578 0099                            setMotor@motorPower 0018  
                            ___lwdiv@dividend 0014                        _PIN_MANAGER_Initialize 50B6  
                                   _dtoa$3543 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 640E         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 6404                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 642C  
                                    ?___fldiv 002A                                      ?___awdiv 0014  
                                   __ptext100 60B8                                     __ptext101 630C  
                                   __ptext102 63CE                              ___aodiv@quotient 0026  
                                    ?___flneg 0014                                     __ptext103 6228  
                                   __ptext104 62C8                                     __ptext105 5BBC  
                                   __ptext106 5A88                                     __ptext107 627C  
                                   __ptext108 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                                      ?___lodiv 0014  
                                    ?___lomod 0014                                      ?___lwdiv 0014  
                          ??_UART1_Initialize 0016                                     _distLeftM 013E  
                                   _distFront 00FD                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F3  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FA  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                               ___lomod@divisor 001C  
                                 __smallconst 1000                               ___lomod@counter 0024  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 6452     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 6450                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 5BBC  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 60B8                                     _curveMode 00FB  
                            ___lwdiv@quotient 0019                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 5ADC                                 ??_setSteering 0086  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 5A88  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5F4A                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u730_20 5CA2  
                                    i1u730_21 5C9E                                      i1u731_20 5CC6  
                                    i1u731_21 5CC2                                      i1u732_20 5326  
                                    i1u732_21 5322                                      i1u741_20 618A  
                                    i1u741_21 6186                                      i1u734_20 535E  
                                    i1u733_28 533C                                      i1u734_21 535A  
                                    i1u733_29 534E                                      i1u742_28 6190  
                                    i1u751_20 5DA6                                      i1u750_28 5D70  
                                    i1u742_29 61A2                                      i1u751_21 5DA2  
                                    i1u750_29 5D82                                      i1u664_20 6220  
                                    i1u736_20 53A2                                      i1u735_28 5374  
                                    i1u664_21 621C                                      i1u736_21 539E  
                                    i1u735_29 5386                                      i1u752_28 5DAC  
                                    i1u752_29 5DBE                                      _PIR1bits 0039A1  
                                    i1u737_28 53A8                                      i1u737_29 53BC  
                                    i1u757_20 5E94                                      i1u749_20 5D6A  
                                    i1u757_21 5E90                                      i1u749_21 5D66  
                                    _PIR4bits 0039A4                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    i2u665_40 6236                                      i2u665_41 6232  
                                    _PIR9bits 0039A9                                      i2u738_40 5EEC  
                                    i2u753_48 603A                                      i2u738_41 5EE8  
                                    i2u753_49 604E                                      i2u755_40 60D0  
                                    i2u739_40 5F22                                      i2u754_48 606E  
                                    i2u755_41 60CC                                      i2u739_41 5F1E  
                                    i2u754_49 6082                                      i2u756_48 60D6  
                                    i2u756_49 60E8                                      i2u758_40 5BE0  
                                    i2u758_41 5BDC                                      i2u759_40 5AB6  
                                    i2u759_41 5AB2                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 627C                                      _TMR4_ISR 5E70  
                  __end_of_UART1_Transmit_ISR 5CD6                                 _TMR4_CallBack 6176  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D58                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 63BE                                  ??_getReverse 003A  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 008C  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 5A2A                                 getCurve@ratio 0077  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                                    vfpfcnvrt@c 00EA  
                                  vfpfcnvrt@f 00E3                           ??_getBatteryVoltage 0019  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 000A                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 004C                      checkCurveCount@roundTime 01B6  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0043  
                          __end_of_getReverse 45CA                                    _ADSTATbits 003EFC  
                                 _followCount 0132                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 62A4                           __end_of_setSteering 3FDC  
                                  vfprintf@ap 01AA                                      __Lrparam 0000  
                                  vfprintf@fp 01A6                                   _oldDistLeft 0138  
                               ??_startAccell 003A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 63CE  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 5EDE  
                     __end_of_SMT1_PR_ACQ_ISR 5C06                              __size_of___lodiv 00F0  
                            __size_of___lomod 00D0                                    ?_vfpfcnvrt 00C7  
                            __size_of___lwdiv 0074                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 6422  
                          ___fpclassifyf@F465 011C                                      _actSpeed 56FA  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 6440  
                                    ___xxtofl 3FDC                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 63DC                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                               ___lwdiv@divisor 0016  
                     __end_of_SMT1_PW_ACQ_ISR 5ADC                               ___lwdiv@counter 0018  
                                    _getCurve 32D4                                      __ptext10 4F1A  
                                    __ptext11 4D48                                      __ptext20 5DFE  
                                    __ptext12 4C54                                      __ptext21 5476  
                                    __ptext13 10AA                                      __ptext30 5CD6  
                                    __ptext22 53C6                                      __ptext14 596E  
                                    __ptext31 4318                                      __ptext23 2FEE  
                                    __ptext15 5DC6                                      __ptext40 2C52  
                                    __ptext32 4190                                      __ptext24 5244  
                                    __ptext16 5904                                      __ptext41 5F4A  
                                    __ptext33 5820                                      __ptext25 5D16  
                                    __ptext17 39C8                                      __ptext50 483C  
                                    __ptext42 5F7E                                      __ptext34 578E  
                                    __ptext26 5C4E                                      __ptext18 4B56  
                                    __ptext51 3FDC                                      __ptext43 37AE  
                                    __ptext35 63BE                                      __ptext27 5664  
                                    __ptext19 5C06                                      __ptext60 6404  
                                    __ptext52 4948                                      __ptext44 2340  
                                    __ptext36 6084                                      __ptext28 63DC  
                                    __ptext61 640E                                      __ptext53 2802  
                                    __ptext45 45CA                                      __ptext37 4A50  
                                    __ptext29 59CE                                      __ptext70 635E  
                                    __ptext62 5B72                                      __ptext54 5180  
                                    __ptext46 4E38                                      __ptext38 3578  
                                    __ptext71 6376                                      __ptext63 6418  
                                    __ptext55 5B28                                      __ptext47 5FB2  
                                    __ptext39 3DE6                                      __ptext80 6148  
                                    __ptext72 638E                                      __ptext64 61A4  
                                    __ptext56 5520                                      __ptext48 5FE6  
                                    __ptext81 6436                                      __ptext73 62A4  
                                    __ptext65 6422                                      __ptext57 63E6  
                                    __ptext49 56FA                                      __ptext90 61FC  
                                    __ptext82 5A2A                                      __ptext74 50B6  
                                    __ptext66 5E36                                      __ptext58 63F0  
                                    __ptext91 5E70                                      __ptext83 5D50  
                                    __ptext75 63A6                                      __ptext67 632A  
                                    __ptext59 63FA                                      __ptext92 6176  
                                    __ptext84 5C92                                      __ptext76 5ADC  
                                    __ptext68 60EA                                      __ptext93 6440  
                                    __ptext85 5D8C                                      __ptext77 61D0  
                                    __ptext69 6346                                      __ptext94 6454  
                                    __ptext86 5306                                      __ptext78 611A  
                                    __ptext95 6458                                      __ptext87 6450  
                                    __ptext79 642C                                      __ptext96 601C  
                                    __ptext88 6452                                      __ptext97 5EDE  
                                    __ptext89 644A                                      __ptext98 6050  
                                    __ptext99 5F14                              __size_of_isupper 0038  
                                    _distLeft 00F5                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 6418  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012E  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0126  
                               __size_of_utoa 0208                               _SMT1_Initialize 60EA  
                                 _IVTLOCKbits 003FD4                                      _setMotor 4E38  
                                    _setSpeed 00EF                      __size_of_TMR5_WriteTimer 002C  
                                    efgtoa@fp 0083                                      efgtoa@ne 009F  
                                    efgtoa@pp 009D                                      efgtoa@ou 00A3  
                   _UART1_OverrunErrorHandler 019E  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 5894  
                                   printf@fmt 01AE                    __end_of_PWM8_LoadDutyValue 5FE6  
                             _CCP3_CaptureISR 601C                                   _UART1_Write 59CE  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 632A     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 630C                              ___aomod@dividend 0014  
                             _checkCurveCount 4FEA                           __end_of_startAccell 5664  
                              _battCheckCount 0134                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 013A  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3603 00E1  
                 __end_of_UART1_RxDataHandler 6228                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 5F14                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 5FE6  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 3DE6  
                             _CCP4_CaptureISR 6050                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 4716                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 37AE  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01B4                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 6450                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012C  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 63CE                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 6436  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 6148                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 008E                      _UART1_TxInterruptHandler 01A2  
                               ___fladd@signs 0075                           __end_of_Default_ISR 645A  
                     __end_of_SMT1_Initialize 611A                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 5180                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 0076                                  ___fladd@bexp 0077  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 6050  
