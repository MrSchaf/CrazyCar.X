

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 30 17:46:09 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=4,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=4,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=4,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=4,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=4,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=4,class=CODE,delta=1
   115                           	psect	text100,global,reloc=4,class=CODE,delta=1
   116                           	psect	text101,global,reloc=4,class=CODE,delta=1
   117                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	text102,global,reloc=4,class=CODE,delta=1
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   121                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   122                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   123  0000                     
   124                           ; Version 2.20
   125                           ; Generated 05/05/2020 GMT
   126                           ; 
   127                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F46K42 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	nvCOMRAM
   160  00004C                     __pnvCOMRAM:
   161                           	callstack 0
   162  00004C                     _uart1TxBufferRemaining:
   163                           	callstack 0
   164  00004C                     	ds	1
   165                           
   166                           	psect	nvBANK1
   167  00018A                     __pnvBANK1:
   168                           	callstack 0
   169  00018A                     _TMR4_InterruptHandler:
   170                           	callstack 0
   171  00018A                     	ds	2
   172  00018C                     _timer3ReloadVal:
   173                           	callstack 0
   174  00018C                     	ds	2
   175  00018E                     _TMR5_GateInterruptHandler:
   176                           	callstack 0
   177  00018E                     	ds	2
   178  000190                     _timer5ReloadVal:
   179                           	callstack 0
   180  000190                     	ds	2
   181  000192                     _CCP4_CallBack:
   182                           	callstack 0
   183  000192                     	ds	2
   184  000194                     _CCP3_CallBack:
   185                           	callstack 0
   186  000194                     	ds	2
   187  000196                     _UART1_ErrorHandler:
   188                           	callstack 0
   189  000196                     	ds	2
   190  000198                     _UART1_OverrunErrorHandler:
   191                           	callstack 0
   192  000198                     	ds	2
   193  00019A                     _UART1_FramingErrorHandler:
   194                           	callstack 0
   195  00019A                     	ds	2
   196  00019C                     _UART1_TxInterruptHandler:
   197                           	callstack 0
   198  00019C                     	ds	2
   199  00019E                     _UART1_RxInterruptHandler:
   200                           	callstack 0
   201  00019E                     	ds	2
   202  0000                     _PIR4bits	set	14756
   203  0000                     _PIR1bits	set	14753
   204  0000                     _PIE1bits	set	14737
   205  0000                     _PIE7bits	set	14743
   206  0000                     _PIR7bits	set	14759
   207  0000                     _PIR6bits	set	14758
   208  0000                     _PIE8bits	set	14744
   209  0000                     _PIR8bits	set	14760
   210  0000                     _PIE10bits	set	14746
   211  0000                     _PIR10bits	set	14762
   212  0000                     _PIE9bits	set	14745
   213  0000                     _PIR9bits	set	14761
   214  0000                     _IPR9bits	set	14729
   215  0000                     _IPR7bits	set	14727
   216  0000                     _IPR8bits	set	14728
   217  0000                     _IPR10bits	set	14730
   218  0000                     _IPR1bits	set	14721
   219  0000                     _IPR3bits	set	14723
   220  0000                     _PIE3bits	set	14739
   221  0000                     _PMD7	set	14791
   222  0000                     _PMD6	set	14790
   223  0000                     _PMD5	set	14789
   224  0000                     _PMD4	set	14788
   225  0000                     _PMD3	set	14787
   226  0000                     _PMD2	set	14786
   227  0000                     _PMD1	set	14785
   228  0000                     _PMD0	set	14784
   229  0000                     _OSCTUNE	set	14814
   230  0000                     _OSCFRQ	set	14815
   231  0000                     _OSCEN	set	14813
   232  0000                     _OSCCON3	set	14811
   233  0000                     _OSCCON1	set	14809
   234  0000                     _CCP4PPS	set	15056
   235  0000                     _SMT1SIGPPS	set	15058
   236  0000                     _CLCIN2PPS	set	15067
   237  0000                     _RB3PPS	set	14859
   238  0000                     _RA3PPS	set	14851
   239  0000                     _SMT1WINPPS	set	15057
   240  0000                     _CLCIN0PPS	set	15065
   241  0000                     _RA4PPS	set	14852
   242  0000                     _T5GPPS	set	15049
   243  0000                     _RA0PPS	set	14848
   244  0000                     _U1RXPPS	set	15077
   245  0000                     _RA1PPS	set	14849
   246  0000                     _CLCIN3PPS	set	15068
   247  0000                     _CCP3PPS	set	15055
   248  0000                     _INLVLE	set	14980
   249  0000                     _INLVLD	set	14964
   250  0000                     _INLVLC	set	14948
   251  0000                     _INLVLB	set	14932
   252  0000                     _INLVLA	set	14916
   253  0000                     _SLRCONE	set	14979
   254  0000                     _SLRCOND	set	14963
   255  0000                     _SLRCONC	set	14947
   256  0000                     _SLRCONB	set	14931
   257  0000                     _SLRCONA	set	14915
   258  0000                     _ODCOND	set	14962
   259  0000                     _ODCONC	set	14946
   260  0000                     _ODCONB	set	14930
   261  0000                     _ODCONA	set	14914
   262  0000                     _ODCONE	set	14978
   263  0000                     _RD1I2C	set	14971
   264  0000                     _RD0I2C	set	14970
   265  0000                     _RC4I2C	set	14955
   266  0000                     _RC3I2C	set	14954
   267  0000                     _RB2I2C	set	14939
   268  0000                     _RB1I2C	set	14938
   269  0000                     _WPUC	set	14945
   270  0000                     _WPUA	set	14913
   271  0000                     _WPUB	set	14929
   272  0000                     _WPUE	set	14977
   273  0000                     _WPUD	set	14961
   274  0000                     _ANSELA	set	14912
   275  0000                     _ANSELE	set	14976
   276  0000                     _ANSELB	set	14928
   277  0000                     _ANSELC	set	14944
   278  0000                     _ANSELD	set	14960
   279  0000                     _CLC3CON	set	15456
   280  0000                     _CLC3GLS3	set	15465
   281  0000                     _CLC3GLS2	set	15464
   282  0000                     _CLC3GLS1	set	15463
   283  0000                     _CLC3GLS0	set	15462
   284  0000                     _CLC3SEL3	set	15461
   285  0000                     _CLC3SEL2	set	15460
   286  0000                     _CLC3SEL1	set	15459
   287  0000                     _CLC3SEL0	set	15458
   288  0000                     _CLC3POL	set	15457
   289  0000                     _CLC3CONbits	set	15456
   290  0000                     _U1RXB	set	15848
   291  0000                     _U1TXB	set	15850
   292  0000                     _U1ERRIRbits	set	15865
   293  0000                     _U1ERRIE	set	15866
   294  0000                     _U1ERRIR	set	15865
   295  0000                     _U1UIR	set	15864
   296  0000                     _U1FIFO	set	15863
   297  0000                     _U1BRGH	set	15862
   298  0000                     _U1BRGL	set	15861
   299  0000                     _U1CON2	set	15860
   300  0000                     _U1CON1	set	15859
   301  0000                     _U1CON0	set	15858
   302  0000                     _U1P3H	set	15857
   303  0000                     _U1P3L	set	15856
   304  0000                     _U1P2H	set	15855
   305  0000                     _U1P2L	set	15854
   306  0000                     _U1P1H	set	15853
   307  0000                     _U1P1L	set	15852
   308  0000                     _ADCON1bits	set	16121
   309  0000                     _ADERRL	set	16098
   310  0000                     _ADERRH	set	16099
   311  0000                     _ADPREVL	set	16109
   312  0000                     _ADPREVH	set	16110
   313  0000                     _ADFLTRL	set	16102
   314  0000                     _ADFLTRH	set	16103
   315  0000                     _ADSTATbits	set	16124
   316  0000                     _ADACCL	set	16104
   317  0000                     _ADACCH	set	16105
   318  0000                     _ADCON2bits	set	16122
   319  0000                     _ADCNT	set	16107
   320  0000                     _ADCON3bits	set	16123
   321  0000                     _ADRESL	set	16111
   322  0000                     _ADRESH	set	16112
   323  0000                     _ADCON0bits	set	16120
   324  0000                     _ADCON0	set	16120
   325  0000                     _ADCLK	set	16127
   326  0000                     _ADACT	set	16126
   327  0000                     _ADREF	set	16125
   328  0000                     _ADSTAT	set	16124
   329  0000                     _ADCON3	set	16123
   330  0000                     _ADCON2	set	16122
   331  0000                     _ADCON1	set	16121
   332  0000                     _ADPREH	set	16119
   333  0000                     _ADPREL	set	16118
   334  0000                     _ADCAP	set	16117
   335  0000                     _ADACQH	set	16116
   336  0000                     _ADACQL	set	16115
   337  0000                     _ADPCH	set	16113
   338  0000                     _ADRPT	set	16108
   339  0000                     _ADACCU	set	16106
   340  0000                     _ADSTPTH	set	16101
   341  0000                     _ADSTPTL	set	16100
   342  0000                     _ADUTHH	set	16097
   343  0000                     _ADUTHL	set	16096
   344  0000                     _ADLTHH	set	16095
   345  0000                     _ADLTHL	set	16094
   346  0000                     _SMT1TMR	set	16146
   347  0000                     _SMT1CPR	set	16149
   348  0000                     _SMT1CPW	set	16152
   349  0000                     _SMT1PR	set	16155
   350  0000                     _SMT1STATbits	set	16160
   351  0000                     _SMT1CON0bits	set	16158
   352  0000                     _SMT1CON1bits	set	16159
   353  0000                     _SMT1PRL	set	16155
   354  0000                     _SMT1PRH	set	16156
   355  0000                     _SMT1PRU	set	16157
   356  0000                     _SMT1SIG	set	16162
   357  0000                     _SMT1WIN	set	16163
   358  0000                     _SMT1CLK	set	16161
   359  0000                     _SMT1STAT	set	16160
   360  0000                     _SMT1CON1	set	16159
   361  0000                     _SMT1CON0	set	16158
   362  0000                     _CCPTMRS1bits	set	16223
   363  0000                     _CCPTMRS0bits	set	16222
   364  0000                     _PORTBbits	set	16331
   365  0000                     _PR2	set	16299
   366  0000                     _TMR2	set	16298
   367  0000                     _T2CONbits	set	16300
   368  0000                     _T2RSTbits	set	16303
   369  0000                     _T2HLTbits	set	16301
   370  0000                     _T2CON	set	16300
   371  0000                     _T2TMR	set	16298
   372  0000                     _T2PR	set	16299
   373  0000                     _T2RST	set	16303
   374  0000                     _T2HLT	set	16301
   375  0000                     _T2CLKCON	set	16302
   376  0000                     _PWM6DCL	set	16232
   377  0000                     _PWM6DCH	set	16233
   378  0000                     _PWM6CON	set	16234
   379  0000                     _PWM5DCL	set	16236
   380  0000                     _PWM5DCH	set	16237
   381  0000                     _PWM5CON	set	16238
   382  0000                     _PWM8DCL	set	16224
   383  0000                     _PWM8DCH	set	16225
   384  0000                     _PWM8CON	set	16226
   385  0000                     _PWM7DCL	set	16228
   386  0000                     _PWM7DCH	set	16229
   387  0000                     _PWM7CON	set	16230
   388  0000                     _PR4	set	16287
   389  0000                     _TMR4	set	16286
   390  0000                     _T4CONbits	set	16288
   391  0000                     _T4RSTbits	set	16291
   392  0000                     _T4HLTbits	set	16289
   393  0000                     _T4CON	set	16288
   394  0000                     _T4TMR	set	16286
   395  0000                     _T4PR	set	16287
   396  0000                     _T4RST	set	16291
   397  0000                     _T4HLT	set	16289
   398  0000                     _T4CLKCON	set	16290
   399  0000                     _T3GCONbits	set	16295
   400  0000                     _T3CONbits	set	16294
   401  0000                     _T3CON	set	16294
   402  0000                     _TMR3L	set	16292
   403  0000                     _TMR3H	set	16293
   404  0000                     _T3CLK	set	16297
   405  0000                     _T3GATE	set	16296
   406  0000                     _T3GCON	set	16295
   407  0000                     _T5GCONbits	set	16283
   408  0000                     _T5CONbits	set	16282
   409  0000                     _T5CON	set	16282
   410  0000                     _TMR5L	set	16280
   411  0000                     _TMR5H	set	16281
   412  0000                     _T5CLK	set	16285
   413  0000                     _T5GATE	set	16284
   414  0000                     _T5GCON	set	16283
   415  0000                     _CCPR4L	set	16240
   416  0000                     _CCPR4H	set	16241
   417  0000                     _CCP4CAP	set	16243
   418  0000                     _CCP4CON	set	16242
   419  0000                     _CCPR3L	set	16244
   420  0000                     _CCPR3H	set	16245
   421  0000                     _CCP3CAP	set	16247
   422  0000                     _CCP3CON	set	16246
   423  0000                     _PORTDbits	set	16333
   424  0000                     _IVTBASEL	set	16341
   425  0000                     _IVTBASEH	set	16342
   426  0000                     _IVTBASEU	set	16343
   427  0000                     _IVTLOCKbits	set	16340
   428  0000                     _IVTLOCK	set	16340
   429  0000                     _INTCON0bits	set	16338
   430  0000                     _TRISD	set	16325
   431  0000                     _TRISC	set	16324
   432  0000                     _TRISB	set	16323
   433  0000                     _TRISA	set	16322
   434  0000                     _TRISE	set	16326
   435  0000                     _LATC	set	16316
   436  0000                     _LATB	set	16315
   437  0000                     _LATA	set	16314
   438  0000                     _LATD	set	16317
   439  0000                     _LATE	set	16318
   440  0000                     _GIE	set	130711
   441                           
   442                           	psect	smallconst
   443  001000                     __psmallconst:
   444                           	callstack 0
   445  001000  00                 	db	0
   446  001001                     STR_2:
   447                           
   448                           ; BSR set to: 1
   449  001001  4F                 	db	79	;'O'
   450  001002  75                 	db	117	;'u'
   451  001003  74                 	db	116	;'t'
   452  001004  20                 	db	32
   453  001005  7C                 	db	124
   454  001006  20                 	db	32
   455  001007  64                 	db	100	;'d'
   456  001008  4C                 	db	76	;'L'
   457  001009  3D                 	db	61	;'='
   458  00100A  20                 	db	32
   459  00100B  25                 	db	37
   460  00100C  64                 	db	100	;'d'
   461  00100D  20                 	db	32
   462  00100E  7C                 	db	124
   463  00100F  20                 	db	32
   464  001010  64                 	db	100	;'d'
   465  001011  52                 	db	82	;'R'
   466  001012  3D                 	db	61	;'='
   467  001013  20                 	db	32
   468  001014  25                 	db	37
   469  001015  64                 	db	100	;'d'
   470  001016  00                 	db	0
   471  001017                     STR_10:
   472                           
   473                           ; BSR set to: 1
   474  001017  43                 	db	67	;'C'
   475  001018  75                 	db	117	;'u'
   476  001019  72                 	db	114	;'r'
   477  00101A  76                 	db	118	;'v'
   478  00101B  65                 	db	101	;'e'
   479  00101C  54                 	db	84	;'T'
   480  00101D  69                 	db	105	;'i'
   481  00101E  6D                 	db	109	;'m'
   482  00101F  65                 	db	101	;'e'
   483  001020  3A                 	db	58	;':'
   484  001021  20                 	db	32
   485  001022  25                 	db	37
   486  001023  64                 	db	100	;'d'
   487  001024  0A                 	db	10
   488  001025  00                 	db	0
   489  001026                     STR_5:
   490                           
   491                           ; BSR set to: 1
   492  001026  20                 	db	32
   493  001027  20                 	db	32
   494  001028  20                 	db	32
   495  001029  43                 	db	67	;'C'
   496  00102A  75                 	db	117	;'u'
   497  00102B  72                 	db	114	;'r'
   498  00102C  76                 	db	118	;'v'
   499  00102D  65                 	db	101	;'e'
   500  00102E  52                 	db	82	;'R'
   501  00102F  69                 	db	105	;'i'
   502  001030  67                 	db	103	;'g'
   503  001031  68                 	db	104	;'h'
   504  001032  74                 	db	116	;'t'
   505  001033  0A                 	db	10
   506  001034  00                 	db	0
   507  001035                     STR_15:
   508                           
   509                           ; BSR set to: 1
   510  001035  53                 	db	83	;'S'
   511  001036  74                 	db	116	;'t'
   512  001037  6F                 	db	111	;'o'
   513  001038  70                 	db	112	;'p'
   514  001039  20                 	db	32
   515  00103A  52                 	db	82	;'R'
   516  00103B  65                 	db	101	;'e'
   517  00103C  76                 	db	118	;'v'
   518  00103D  65                 	db	101	;'e'
   519  00103E  72                 	db	114	;'r'
   520  00103F  73                 	db	115	;'s'
   521  001040  65                 	db	101	;'e'
   522  001041  0A                 	db	10
   523  001042  00                 	db	0
   524  001043                     STR_13:
   525                           
   526                           ; BSR set to: 1
   527  001043  52                 	db	82	;'R'
   528  001044  65                 	db	101	;'e'
   529  001045  76                 	db	118	;'v'
   530  001046  65                 	db	101	;'e'
   531  001047  72                 	db	114	;'r'
   532  001048  73                 	db	115	;'s'
   533  001049  65                 	db	101	;'e'
   534  00104A  52                 	db	82	;'R'
   535  00104B  69                 	db	105	;'i'
   536  00104C  67                 	db	103	;'g'
   537  00104D  74                 	db	116	;'t'
   538  00104E  68                 	db	104	;'h'
   539  00104F  0A                 	db	10
   540  001050  00                 	db	0
   541  001051                     STR_3:
   542                           
   543                           ; BSR set to: 1
   544  001051  20                 	db	32
   545  001052  20                 	db	32
   546  001053  20                 	db	32
   547  001054  43                 	db	67	;'C'
   548  001055  75                 	db	117	;'u'
   549  001056  72                 	db	114	;'r'
   550  001057  76                 	db	118	;'v'
   551  001058  65                 	db	101	;'e'
   552  001059  4C                 	db	76	;'L'
   553  00105A  65                 	db	101	;'e'
   554  00105B  66                 	db	102	;'f'
   555  00105C  74                 	db	116	;'t'
   556  00105D  0A                 	db	10
   557  00105E  00                 	db	0
   558  00105F                     STR_14:
   559                           
   560                           ; BSR set to: 1
   561  00105F  52                 	db	82	;'R'
   562  001060  65                 	db	101	;'e'
   563  001061  76                 	db	118	;'v'
   564  001062  65                 	db	101	;'e'
   565  001063  72                 	db	114	;'r'
   566  001064  73                 	db	115	;'s'
   567  001065  65                 	db	101	;'e'
   568  001066  4C                 	db	76	;'L'
   569  001067  65                 	db	101	;'e'
   570  001068  66                 	db	102	;'f'
   571  001069  74                 	db	116	;'t'
   572  00106A  0A                 	db	10
   573  00106B  00                 	db	0
   574  00106C                     STR_8:
   575                           
   576                           ; BSR set to: 1
   577  00106C  52                 	db	82	;'R'
   578  00106D  69                 	db	105	;'i'
   579  00106E  67                 	db	103	;'g'
   580  00106F  68                 	db	104	;'h'
   581  001070  74                 	db	116	;'t'
   582  001071  20                 	db	32
   583  001072  4F                 	db	79	;'O'
   584  001073  75                 	db	117	;'u'
   585  001074  74                 	db	116	;'t'
   586  001075  21                 	db	33
   587  001076  0A                 	db	10
   588  001077  00                 	db	0
   589  001078                     STR_9:
   590                           
   591                           ; BSR set to: 1
   592  001078  46                 	db	70	;'F'
   593  001079  72                 	db	114	;'r'
   594  00107A  6F                 	db	111	;'o'
   595  00107B  6E                 	db	110	;'n'
   596  00107C  74                 	db	116	;'t'
   597  00107D  20                 	db	32
   598  00107E  4F                 	db	79	;'O'
   599  00107F  75                 	db	117	;'u'
   600  001080  74                 	db	116	;'t'
   601  001081  21                 	db	33
   602  001082  0A                 	db	10
   603  001083  00                 	db	0
   604  001084                     STR_11:
   605                           
   606                           ; BSR set to: 1
   607  001084  41                 	db	65	;'A'
   608  001085  66                 	db	102	;'f'
   609  001086  74                 	db	116	;'t'
   610  001087  65                 	db	101	;'e'
   611  001088  72                 	db	114	;'r'
   612  001089  43                 	db	67	;'C'
   613  00108A  75                 	db	117	;'u'
   614  00108B  72                 	db	114	;'r'
   615  00108C  76                 	db	118	;'v'
   616  00108D  65                 	db	101	;'e'
   617  00108E  0A                 	db	10
   618  00108F  00                 	db	0
   619  001090                     STR_7:
   620                           
   621                           ; BSR set to: 1
   622  001090  4C                 	db	76	;'L'
   623  001091  65                 	db	101	;'e'
   624  001092  66                 	db	102	;'f'
   625  001093  74                 	db	116	;'t'
   626  001094  20                 	db	32
   627  001095  4F                 	db	79	;'O'
   628  001096  75                 	db	117	;'u'
   629  001097  74                 	db	116	;'t'
   630  001098  21                 	db	33
   631  001099  0A                 	db	10
   632  00109A  00                 	db	0
   633  00109B                     STR_1:
   634                           
   635                           ; BSR set to: 1
   636  00109B  42                 	db	66	;'B'
   637  00109C  56                 	db	86	;'V'
   638  00109D  6F                 	db	111	;'o'
   639  00109E  6C                 	db	108	;'l'
   640  00109F  74                 	db	116	;'t'
   641  0010A0  3A                 	db	58	;':'
   642  0010A1  20                 	db	32
   643  0010A2  25                 	db	37
   644  0010A3  66                 	db	102	;'f'
   645  0010A4  0A                 	db	10
   646  0010A5  00                 	db	0
   647  0010A6                     STR_12:
   648                           
   649                           ; BSR set to: 1
   650  0010A6  4F                 	db	79	;'O'
   651  0010A7  75                 	db	117	;'u'
   652  0010A8  74                 	db	116	;'t'
   653  0010A9  43                 	db	67	;'C'
   654  0010AA  75                 	db	117	;'u'
   655  0010AB  72                 	db	114	;'r'
   656  0010AC  76                 	db	118	;'v'
   657  0010AD  65                 	db	101	;'e'
   658  0010AE  0A                 	db	10
   659  0010AF  00                 	db	0
   660  0010B0                     STR_6:
   661                           
   662                           ; BSR set to: 1
   663  0010B0  49                 	db	73	;'I'
   664  0010B1  6E                 	db	110	;'n'
   665  0010B2  43                 	db	67	;'C'
   666  0010B3  75                 	db	117	;'u'
   667  0010B4  72                 	db	114	;'r'
   668  0010B5  76                 	db	118	;'v'
   669  0010B6  65                 	db	101	;'e'
   670  0010B7  0A                 	db	10
   671  0010B8  00                 	db	0
   672  0010B9                     STR_16:
   673                           
   674                           ; BSR set to: 1
   675  0010B9  49                 	db	73	;'I'
   676  0010BA  4E                 	db	78	;'N'
   677  0010BB  46                 	db	70	;'F'
   678  0010BC  00                 	db	0
   679  0010BD                     STR_20:
   680                           
   681                           ; BSR set to: 1
   682  0010BD  4E                 	db	78	;'N'
   683  0010BE  41                 	db	65	;'A'
   684  0010BF  4E                 	db	78	;'N'
   685  0010C0  00                 	db	0
   686  0010C1                     STR_17:
   687                           
   688                           ; BSR set to: 1
   689  0010C1  69                 	db	105	;'i'
   690  0010C2  6E                 	db	110	;'n'
   691  0010C3  66                 	db	102	;'f'
   692  0010C4  00                 	db	0
   693  0010C5                     STR_21:
   694                           
   695                           ; BSR set to: 1
   696  0010C5  6E                 	db	110	;'n'
   697  0010C6  61                 	db	97	;'a'
   698  0010C7  6E                 	db	110	;'n'
   699  0010C8  00                 	db	0
   700  0010C9                     STR_24:
   701                           
   702                           ; BSR set to: 1
   703  0010C9  6C                 	db	108	;'l'
   704  0010CA  66                 	db	102	;'f'
   705  0010CB  00                 	db	0
   706  0010CC  00                 	db	0	; dummy byte at the end
   707  0000                     
   708                           ; #config settings
   709                           
   710                           	psect	cinit
   711  005874                     __pcinit:
   712                           	callstack 0
   713  005874                     start_initialization:
   714                           	callstack 0
   715  005874                     __initialization:
   716                           	callstack 0
   717                           
   718                           ; Clear objects allocated to BANK1 (138 bytes)
   719  005874  EE00  F100         	lfsr	0,__pbssBANK1
   720  005878  0E8A               	movlw	138
   721  00587A                     clear_0:
   722  00587A  6AEE               	clrf	postinc0,c
   723  00587C  06E8               	decf	wreg,f,c
   724  00587E  E1FD               	bnz	clear_0
   725                           
   726                           ; Clear objects allocated to BANK0 (26 bytes)
   727  005880  EE00  F0E5         	lfsr	0,__pbssBANK0
   728  005884  0E1A               	movlw	26
   729  005886                     clear_1:
   730  005886  6AEE               	clrf	postinc0,c
   731  005888  06E8               	decf	wreg,f,c
   732  00588A  E1FD               	bnz	clear_1
   733                           
   734                           ; Clear objects allocated to COMRAM (18 bytes)
   735  00588C  EE00  F03A         	lfsr	0,__pbssCOMRAM
   736  005890  0E12               	movlw	18
   737  005892                     clear_2:
   738  005892  6AEE               	clrf	postinc0,c
   739  005894  06E8               	decf	wreg,f,c
   740  005896  E1FD               	bnz	clear_2
   741                           
   742                           ;
   743                           ; Setup IVTBASE
   744                           ;
   745  005898  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   746  00589A  6ED5               	movwf	213,c
   747  00589C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   748  00589E  6ED6               	movwf	214,c
   749  0058A0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   750  0058A2  6ED7               	movwf	215,c
   751  0058A4                     end_of_initialization:
   752                           	callstack 0
   753  0058A4                     __end_of__initialization:
   754                           	callstack 0
   755  0058A4  0100               	movlb	0
   756  0058A6  EF5C  F02E         	goto	_main	;jump to C main() function
   757                           
   758                           	psect	bssCOMRAM
   759  00003A                     __pbssCOMRAM:
   760                           	callstack 0
   761  00003A                     _prec:
   762                           	callstack 0
   763  00003A                     	ds	2
   764  00003C                     _flags:
   765                           	callstack 0
   766  00003C                     	ds	2
   767  00003E                     _roundTimeCount:
   768                           	callstack 0
   769  00003E                     	ds	2
   770  000040                     TMR4_ISR@CountCallBack:
   771                           	callstack 0
   772  000040                     	ds	2
   773  000042                     _uart1RxLastError:
   774                           	callstack 0
   775  000042                     	ds	1
   776  000043                     _uart1RxCount:
   777                           	callstack 0
   778  000043                     	ds	1
   779  000044                     _uart1RxTail:
   780                           	callstack 0
   781  000044                     	ds	1
   782  000045                     _uart1RxHead:
   783                           	callstack 0
   784  000045                     	ds	1
   785  000046                     _uart1TxTail:
   786                           	callstack 0
   787  000046                     	ds	1
   788  000047                     _uart1TxHead:
   789                           	callstack 0
   790  000047                     	ds	1
   791  000048                     _smtPeriod:
   792                           	callstack 0
   793  000048                     	ds	4
   794                           
   795                           	psect	bssBANK0
   796  0000E5                     __pbssBANK0:
   797                           	callstack 0
   798  0000E5                     _width:
   799                           	callstack 0
   800  0000E5                     	ds	2
   801  0000E7                     _BatteryVolt:
   802                           	callstack 0
   803  0000E7                     	ds	2
   804  0000E9                     _actMotorPow:
   805                           	callstack 0
   806  0000E9                     	ds	2
   807  0000EB                     _currentSpeed:
   808                           	callstack 0
   809  0000EB                     	ds	2
   810  0000ED                     _setSpeed:
   811                           	callstack 0
   812  0000ED                     	ds	2
   813  0000EF                     _oldDistRight:
   814                           	callstack 0
   815  0000EF                     	ds	2
   816  0000F1                     _oldDistLeft:
   817                           	callstack 0
   818  0000F1                     	ds	2
   819  0000F3                     _distRight:
   820                           	callstack 0
   821  0000F3                     	ds	2
   822  0000F5                     _distLeft:
   823                           	callstack 0
   824  0000F5                     	ds	2
   825  0000F7                     _delay:
   826                           	callstack 0
   827  0000F7                     	ds	1
   828  0000F8                     _curveRightCount:
   829                           	callstack 0
   830  0000F8                     	ds	1
   831  0000F9                     _curveLeftCount:
   832                           	callstack 0
   833  0000F9                     	ds	1
   834  0000FA                     _cycle10ms:
   835                           	callstack 0
   836  0000FA                     	ds	1
   837  0000FB                     _curveMode:
   838                           	callstack 0
   839  0000FB                     	ds	1
   840  0000FC                     _driveMode:
   841                           	callstack 0
   842  0000FC                     	ds	1
   843  0000FD                     _distFront:
   844                           	callstack 0
   845  0000FD                     	ds	2
   846                           
   847                           	psect	bssBANK1
   848  000100                     __pbssBANK1:
   849                           	callstack 0
   850  000100                     _uart1RxStatusBuffer:
   851                           	callstack 0
   852  000100                     	ds	8
   853  000108                     _uart1RxBuffer:
   854                           	callstack 0
   855  000108                     	ds	8
   856  000110                     _uart1TxBuffer:
   857                           	callstack 0
   858  000110                     	ds	8
   859  000118                     floorf@F527:
   860                           	callstack 0
   861  000118                     	ds	4
   862  00011C                     ___fpclassifyf@F465:
   863                           	callstack 0
   864  00011C                     	ds	4
   865  000120                     _smtWay:
   866                           	callstack 0
   867  000120                     	ds	4
   868  000124                     _smtDuty:
   869                           	callstack 0
   870  000124                     	ds	4
   871  000128                     _nout:
   872                           	callstack 0
   873  000128                     	ds	2
   874  00012A                     _reverseTime:
   875                           	callstack 0
   876  00012A                     	ds	2
   877  00012C                     _oldSpeed:
   878                           	callstack 0
   879  00012C                     	ds	2
   880  00012E                     _motPow:
   881                           	callstack 0
   882  00012E                     	ds	2
   883  000130                     _followCount:
   884                           	callstack 0
   885  000130                     	ds	2
   886  000132                     _battCheckCount:
   887                           	callstack 0
   888  000132                     	ds	2
   889  000134                     _reverseCount:
   890                           	callstack 0
   891  000134                     	ds	2
   892  000136                     _distRightM:
   893                           	callstack 0
   894  000136                     	ds	2
   895  000138                     _distLeftM:
   896                           	callstack 0
   897  000138                     	ds	2
   898  00013A                     _dbuf:
   899                           	callstack 0
   900  00013A                     	ds	80
   901                           
   902                           	psect	cstackBANK1
   903  0001A0                     __pcstackBANK1:
   904                           	callstack 0
   905  0001A0                     ?_vfprintf:
   906                           	callstack 0
   907  0001A0                     vfprintf@fp:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x0
   911  0001A0                     	ds	2
   912  0001A2                     vfprintf@fmt:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x2
   916  0001A2                     	ds	2
   917  0001A4                     vfprintf@ap:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x4
   921  0001A4                     	ds	2
   922  0001A6                     ?_printf:
   923                           	callstack 0
   924  0001A6                     printf@fmt:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x6
   928  0001A6                     	ds	6
   929  0001AC                     printf@ap:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0xC
   933  0001AC                     	ds	2
   934  0001AE                     ??_getCurve:
   935  0001AE                     _getBatteryVoltage$4190:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0xE
   939  0001AE                     	ds	2
   940  0001B0                     getCurve@deltaLeft:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x10
   944  0001B0                     	ds	2
   945  0001B2                     getCurve@deltaRight:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x12
   949  0001B2                     	ds	2
   950                           
   951                           	psect	cstackBANK0
   952  000060                     __pcstackBANK0:
   953                           	callstack 0
   954  000060                     ?_dtoa:
   955                           	callstack 0
   956  000060                     ___flmul@sign:
   957                           	callstack 0
   958  000060                     dtoa@fp:
   959                           	callstack 0
   960  000060                     ___fldiv@rem:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x0
   964  000060                     	ds	1
   965  000061                     ___flmul@aexp:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x1
   969  000061                     	ds	1
   970  000062                     ___flmul@grs:
   971                           	callstack 0
   972  000062                     dtoa@d:
   973                           	callstack 0
   974                           
   975                           ; 8 bytes @ 0x2
   976  000062                     	ds	2
   977  000064                     ___fldiv@sign:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x4
   981  000064                     	ds	1
   982  000065                     ___fldiv@new_exp:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x5
   986  000065                     	ds	1
   987  000066                     ___flmul@bexp:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x6
   991  000066                     	ds	1
   992  000067                     ___fldiv@grs:
   993                           	callstack 0
   994  000067                     ___flmul@prod:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x7
   998  000067                     	ds	3
   999  00006A                     _dtoa$3540:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0xA
  1003  00006A                     	ds	1
  1004  00006B                     ___fldiv@bexp:
  1005                           	callstack 0
  1006  00006B                     ___flmul@temp:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0xB
  1010  00006B                     	ds	1
  1011  00006C                     ___fldiv@aexp:
  1012                           	callstack 0
  1013  00006C                     dtoa@p:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0xC
  1017  00006C                     	ds	1
  1018  00006D                     ??_floorf:
  1019  00006D                     ?___fladd:
  1020                           	callstack 0
  1021  00006D                     ___flge@ff1:
  1022                           	callstack 0
  1023  00006D                     ___fladd@b:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0xD
  1027  00006D                     	ds	1
  1028  00006E                     dtoa@w:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0xE
  1032  00006E                     	ds	2
  1033  000070                     dtoa@s:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x10
  1037  000070                     	ds	1
  1038  000071                     ___flge@ff2:
  1039                           	callstack 0
  1040  000071                     ___fladd@a:
  1041                           	callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x11
  1044  000071                     	ds	1
  1045  000072                     dtoa@n:
  1046                           	callstack 0
  1047                           
  1048                           ; 8 bytes @ 0x12
  1049  000072                     	ds	1
  1050  000073                     floorf@m:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x13
  1054  000073                     	ds	2
  1055  000075                     ___fladd@signs:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x15
  1059  000075                     	ds	1
  1060  000076                     ___fladd@aexp:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x16
  1064  000076                     	ds	1
  1065  000077                     ___fladd@bexp:
  1066                           	callstack 0
  1067  000077                     floorf@e:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x17
  1071  000077                     	ds	1
  1072  000078                     ___fladd@grs:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x18
  1076  000078                     	ds	1
  1077  000079                     ?___flsub:
  1078                           	callstack 0
  1079  000079                     ?___fltol:
  1080                           	callstack 0
  1081  000079                     ___fltol@f1:
  1082                           	callstack 0
  1083  000079                     ___flsub@b:
  1084                           	callstack 0
  1085  000079                     floorf@u:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x19
  1089  000079                     	ds	1
  1090  00007A                     dtoa@i:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x1A
  1094  00007A                     	ds	3
  1095  00007D                     ??___fltol:
  1096  00007D                     ___flsub@a:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x1D
  1100  00007D                     	ds	4
  1101  000081                     ___fltol@sign1:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x21
  1105  000081                     	ds	1
  1106  000082                     ___fltol@exp1:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x22
  1110  000082                     	ds	1
  1111  000083                     ??_calcSpeed:
  1112  000083                     ??_calcMotorPow:
  1113  000083                     ?_efgtoa:
  1114                           	callstack 0
  1115  000083                     setSteering@steering:
  1116                           	callstack 0
  1117  000083                     efgtoa@fp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x23
  1121  000083                     	ds	2
  1122  000085                     setSteering@steeringMode:
  1123                           	callstack 0
  1124  000085                     calcMotorPow@setSpeedDelta:
  1125                           	callstack 0
  1126  000085                     efgtoa@f:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x25
  1130  000085                     	ds	1
  1131  000086                     ??_setSteering:
  1132                           
  1133                           ; 1 bytes @ 0x26
  1134  000086                     	ds	1
  1135  000087                     calcSpeed@speed:
  1136                           	callstack 0
  1137  000087                     calcMotorPow@oldSpeedDelta:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x27
  1141  000087                     	ds	1
  1142  000088                     setSteering@steeringF:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x28
  1146  000088                     	ds	1
  1147  000089                     calcMotorPow@addMPow:
  1148                           	callstack 0
  1149  000089                     efgtoa@c:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x29
  1153  000089                     	ds	1
  1154  00008A                     ??_efgtoa:
  1155  00008A                     setSteering@steeringB:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x2A
  1159  00008A                     	ds	2
  1160  00008C                     ??_calcSteering:
  1161                           
  1162                           ; 1 bytes @ 0x2C
  1163  00008C                     	ds	2
  1164  00008E                     calcSteering@delta:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x2E
  1168  00008E                     	ds	1
  1169  00008F                     _efgtoa$3564:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x2F
  1173  00008F                     	ds	2
  1174  000091                     _efgtoa$3565:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x31
  1178  000091                     	ds	2
  1179  000093                     _efgtoa$3569:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x33
  1183  000093                     	ds	2
  1184  000095                     _efgtoa$3573:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x35
  1188  000095                     	ds	2
  1189  000097                     _efgtoa$3574:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x37
  1193  000097                     	ds	2
  1194  000099                     _efgtoa$3575:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x39
  1198  000099                     	ds	2
  1199  00009B                     efgtoa@t:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x3B
  1203  00009B                     	ds	2
  1204  00009D                     efgtoa@pp:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x3D
  1208  00009D                     	ds	2
  1209  00009F                     efgtoa@ne:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x3F
  1213  00009F                     	ds	2
  1214  0000A1                     efgtoa@m:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x41
  1218  0000A1                     	ds	2
  1219  0000A3                     efgtoa@ou:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x43
  1223  0000A3                     	ds	4
  1224  0000A7                     efgtoa@d:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x47
  1228  0000A7                     	ds	2
  1229  0000A9                     efgtoa@sign:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x49
  1233  0000A9                     	ds	2
  1234  0000AB                     efgtoa@p:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x4B
  1238  0000AB                     	ds	2
  1239  0000AD                     efgtoa@w:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x4D
  1243  0000AD                     	ds	2
  1244  0000AF                     efgtoa@nmode:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0x4F
  1248  0000AF                     	ds	1
  1249  0000B0                     efgtoa@mode:
  1250                           	callstack 0
  1251                           
  1252                           ; 1 bytes @ 0x50
  1253  0000B0                     	ds	1
  1254  0000B1                     efgtoa@h:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x51
  1258  0000B1                     	ds	4
  1259  0000B5                     efgtoa@l:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x55
  1263  0000B5                     	ds	4
  1264  0000B9                     efgtoa@i:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x59
  1268  0000B9                     	ds	2
  1269  0000BB                     efgtoa@g:
  1270                           	callstack 0
  1271                           
  1272                           ; 4 bytes @ 0x5B
  1273  0000BB                     	ds	4
  1274  0000BF                     efgtoa@e:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x5F
  1278  0000BF                     	ds	2
  1279  0000C1                     efgtoa@n:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x61
  1283  0000C1                     	ds	2
  1284  0000C3                     efgtoa@u:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x63
  1288  0000C3                     	ds	4
  1289  0000C7                     ?_vfpfcnvrt:
  1290                           	callstack 0
  1291  0000C7                     vfpfcnvrt@fp:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x67
  1295  0000C7                     	ds	2
  1296  0000C9                     vfpfcnvrt@fmt:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x69
  1300  0000C9                     	ds	2
  1301  0000CB                     vfpfcnvrt@ap:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x6B
  1305  0000CB                     	ds	2
  1306  0000CD                     ??_vfpfcnvrt:
  1307                           
  1308                           ; 1 bytes @ 0x6D
  1309  0000CD                     	ds	4
  1310  0000D1                     vfpfcnvrt@ll:
  1311                           	callstack 0
  1312                           
  1313                           ; 8 bytes @ 0x71
  1314  0000D1                     	ds	8
  1315  0000D9                     _vfpfcnvrt$3593:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x79
  1319  0000D9                     	ds	2
  1320  0000DB                     vfpfcnvrt@f:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0x7B
  1324  0000DB                     	ds	4
  1325  0000DF                     vfpfcnvrt@ct:
  1326                           	callstack 0
  1327                           
  1328                           ; 3 bytes @ 0x7F
  1329  0000DF                     	ds	3
  1330  0000E2                     vfpfcnvrt@c:
  1331                           	callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x82
  1334  0000E2                     	ds	1
  1335  0000E3                     vfprintf@cfmt:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x83
  1339  0000E3                     	ds	2
  1340                           
  1341                           	psect	cstackCOMRAM
  1342  000001                     __pcstackCOMRAM:
  1343                           	callstack 0
  1344  000001                     CCP3_DefaultCallBack@capturedValue:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x0
  1348  000001                     	ds	2
  1349  000003                     CCP3_CaptureISR@module:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x2
  1353  000003                     	ds	2
  1354  000005                     CCP4_DefaultCallBack@capturedValue:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x4
  1358  000005                     	ds	2
  1359  000007                     CCP4_CaptureISR@module:
  1360                           	callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x6
  1363  000007                     	ds	2
  1364  000009                     ?_TMR5_ReadTimer:
  1365                           	callstack 0
  1366  000009                     TMR5_WriteTimer@timerVal:
  1367                           	callstack 0
  1368                           
  1369                           ; 2 bytes @ 0x8
  1370  000009                     	ds	2
  1371  00000B                     ??_TMR5_ReadTimer:
  1372  00000B                     
  1373                           ; 1 bytes @ 0xA
  1374  00000B                     	ds	2
  1375  00000D                     TMR5_ReadTimer@readVal:
  1376                           	callstack 0
  1377                           
  1378                           ; 2 bytes @ 0xC
  1379  00000D                     	ds	2
  1380  00000F                     TMR5_ReadTimer@readValHigh:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0xE
  1384  00000F                     	ds	1
  1385  000010                     TMR5_ReadTimer@readValLow:
  1386                           	callstack 0
  1387                           
  1388                           ; 1 bytes @ 0xF
  1389  000010                     	ds	1
  1390  000011                     ??_UART1_tx_vect_isr:
  1391  000011                     
  1392                           ; 1 bytes @ 0x10
  1393  000011                     	ds	1
  1394  000012                     ??_UART1_rx_vect_isr:
  1395                           
  1396                           ; 1 bytes @ 0x11
  1397  000012                     	ds	1
  1398  000013                     ??_TMR4_ISR:
  1399                           
  1400                           ; 1 bytes @ 0x12
  1401  000013                     	ds	1
  1402  000014                     ??_TMR3_Initialize:
  1403  000014                     ?_strlen:
  1404                           	callstack 0
  1405  000014                     ?___fpclassifyf:
  1406                           	callstack 0
  1407  000014                     ?_isupper:
  1408                           	callstack 0
  1409  000014                     ?_strncmp:
  1410                           	callstack 0
  1411  000014                     ?_ADCC_GetSingleConversion:
  1412                           	callstack 0
  1413  000014                     ?___awdiv:
  1414                           	callstack 0
  1415  000014                     ?___awmod:
  1416                           	callstack 0
  1417  000014                     ?___aldiv:
  1418                           	callstack 0
  1419  000014                     ?___flneg:
  1420                           	callstack 0
  1421  000014                     ?___aodiv:
  1422                           	callstack 0
  1423  000014                     ?___aomod:
  1424                           	callstack 0
  1425  000014                     UART1_Write@txData:
  1426                           	callstack 0
  1427  000014                     INTERRUPT_Initialize@state:
  1428                           	callstack 0
  1429  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1430                           	callstack 0
  1431  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1432                           	callstack 0
  1433  000014                     UART1_SetErrorHandler@interruptHandler:
  1434                           	callstack 0
  1435  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1436                           	callstack 0
  1437  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1438                           	callstack 0
  1439  000014                     CCP3_SetCallBack@customCallBack:
  1440                           	callstack 0
  1441  000014                     CCP4_SetCallBack@customCallBack:
  1442                           	callstack 0
  1443  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1444                           	callstack 0
  1445  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1446                           	callstack 0
  1447  000014                     PWM7_LoadDutyValue@dutyValue:
  1448                           	callstack 0
  1449  000014                     PWM8_LoadDutyValue@dutyValue:
  1450                           	callstack 0
  1451  000014                     PWM5_LoadDutyValue@dutyValue:
  1452                           	callstack 0
  1453  000014                     PWM6_LoadDutyValue@dutyValue:
  1454                           	callstack 0
  1455  000014                     ___awdiv@dividend:
  1456                           	callstack 0
  1457  000014                     ___awmod@dividend:
  1458                           	callstack 0
  1459  000014                     isupper@c:
  1460                           	callstack 0
  1461  000014                     strcpy@dest:
  1462                           	callstack 0
  1463  000014                     strlen@s:
  1464                           	callstack 0
  1465  000014                     strncmp@_l:
  1466                           	callstack 0
  1467  000014                     ___aldiv@dividend:
  1468                           	callstack 0
  1469  000014                     ___fleq@ff1:
  1470                           	callstack 0
  1471  000014                     ___flneg@f1:
  1472                           	callstack 0
  1473  000014                     ___fpclassifyf@x:
  1474                           	callstack 0
  1475  000014                     ___aodiv@dividend:
  1476                           	callstack 0
  1477  000014                     ___aomod@dividend:
  1478                           	callstack 0
  1479                           
  1480                           ; 8 bytes @ 0x13
  1481  000014                     	ds	1
  1482  000015                     putch@txData:
  1483                           	callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x14
  1486  000015                     	ds	1
  1487  000016                     ??_TMR5_Initialize:
  1488  000016                     ??_isupper:
  1489  000016                     ??_PWM7_LoadDutyValue:
  1490  000016                     ??_PWM8_LoadDutyValue:
  1491  000016                     ??_PWM5_LoadDutyValue:
  1492  000016                     ??_PWM6_LoadDutyValue:
  1493  000016                     ??_ADCC_GetSingleConversion:
  1494  000016                     ___awdiv@divisor:
  1495                           	callstack 0
  1496  000016                     ___awmod@divisor:
  1497                           	callstack 0
  1498  000016                     fputc@c:
  1499                           	callstack 0
  1500  000016                     strcpy@src:
  1501                           	callstack 0
  1502  000016                     strlen@a:
  1503                           	callstack 0
  1504  000016                     strncmp@_r:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x15
  1508  000016                     	ds	2
  1509  000018                     ??___fpclassifyf:
  1510  000018                     ??_strcpy:
  1511  000018                     ADCC_GetSingleConversion@channel:
  1512                           	callstack 0
  1513  000018                     ___awdiv@counter:
  1514                           	callstack 0
  1515  000018                     ___awmod@counter:
  1516                           	callstack 0
  1517  000018                     setMotor@motorPower:
  1518                           	callstack 0
  1519  000018                     fputc@fp:
  1520                           	callstack 0
  1521  000018                     strncmp@n:
  1522                           	callstack 0
  1523  000018                     ___aldiv@divisor:
  1524                           	callstack 0
  1525  000018                     ___fleq@ff2:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x17
  1529  000018                     	ds	1
  1530  000019                     ___awdiv@sign:
  1531                           	callstack 0
  1532  000019                     ___awmod@sign:
  1533                           	callstack 0
  1534                           
  1535                           ; 1 bytes @ 0x18
  1536  000019                     	ds	1
  1537  00001A                     ??_setMotor:
  1538  00001A                     ??_fputc:
  1539  00001A                     ??_strncmp:
  1540  00001A                     ?_tolower:
  1541                           	callstack 0
  1542  00001A                     ___awdiv@quotient:
  1543                           	callstack 0
  1544  00001A                     strcpy@s:
  1545                           	callstack 0
  1546  00001A                     tolower@c:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x19
  1550  00001A                     	ds	1
  1551  00001B                     strncmp@l:
  1552                           	callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x1A
  1555  00001B                     	ds	1
  1556  00001C                     ??_tolower:
  1557  00001C                     ??___fleq:
  1558  00001C                     ?___xxtofl:
  1559                           	callstack 0
  1560  00001C                     ___aldiv@counter:
  1561                           	callstack 0
  1562  00001C                     ___fpclassifyf@e:
  1563                           	callstack 0
  1564  00001C                     strcpy@d:
  1565                           	callstack 0
  1566  00001C                     ___xxtofl@val:
  1567                           	callstack 0
  1568  00001C                     ___aodiv@divisor:
  1569                           	callstack 0
  1570  00001C                     ___aomod@divisor:
  1571                           	callstack 0
  1572                           
  1573                           ; 8 bytes @ 0x1B
  1574  00001C                     	ds	1
  1575  00001D                     ___aldiv@sign:
  1576                           	callstack 0
  1577  00001D                     strncmp@r:
  1578                           	callstack 0
  1579                           
  1580                           ; 2 bytes @ 0x1C
  1581  00001D                     	ds	1
  1582  00001E                     ___aldiv@quotient:
  1583                           	callstack 0
  1584  00001E                     ___fpclassifyf@u:
  1585                           	callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x1D
  1588  00001E                     	ds	1
  1589  00001F                     fputs@s:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x1E
  1593  00001F                     	ds	1
  1594  000020                     ??___xxtofl:
  1595  000020                     _tolower$3686:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x1F
  1599  000020                     	ds	1
  1600  000021                     fputs@fp:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x20
  1604  000021                     	ds	1
  1605  000022                     ?_actSpeed:
  1606                           	callstack 0
  1607                           
  1608                           ; 2 bytes @ 0x21
  1609  000022                     	ds	1
  1610  000023                     fputs@c:
  1611                           	callstack 0
  1612                           
  1613                           ; 1 bytes @ 0x22
  1614  000023                     	ds	1
  1615  000024                     ___aodiv@counter:
  1616                           	callstack 0
  1617  000024                     ___aomod@counter:
  1618                           	callstack 0
  1619  000024                     ___xxtofl@sign:
  1620                           	callstack 0
  1621  000024                     actSpeed@speed:
  1622                           	callstack 0
  1623  000024                     fputs@i:
  1624                           	callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x23
  1627  000024                     	ds	1
  1628  000025                     ___aodiv@sign:
  1629                           	callstack 0
  1630  000025                     ___aomod@sign:
  1631                           	callstack 0
  1632  000025                     ___xxtofl@exp:
  1633                           	callstack 0
  1634                           
  1635                           ; 1 bytes @ 0x24
  1636  000025                     	ds	1
  1637  000026                     ?_abs:
  1638                           	callstack 0
  1639  000026                     ?_pad:
  1640                           	callstack 0
  1641  000026                     pad@fp:
  1642                           	callstack 0
  1643  000026                     abs@a:
  1644                           	callstack 0
  1645  000026                     ___xxtofl@arg:
  1646                           	callstack 0
  1647  000026                     ___aodiv@quotient:
  1648                           	callstack 0
  1649                           
  1650                           ; 8 bytes @ 0x25
  1651  000026                     	ds	2
  1652  000028                     ??_abs:
  1653  000028                     pad@buf:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x27
  1657  000028                     	ds	2
  1658  00002A                     ?___fldiv:
  1659                           	callstack 0
  1660  00002A                     ?___flmul:
  1661                           	callstack 0
  1662  00002A                     pad@p:
  1663                           	callstack 0
  1664  00002A                     ___fldiv@b:
  1665                           	callstack 0
  1666  00002A                     ___flmul@b:
  1667                           	callstack 0
  1668                           
  1669                           ; 4 bytes @ 0x29
  1670  00002A                     	ds	2
  1671  00002C                     ??_pad:
  1672                           
  1673                           ; 1 bytes @ 0x2B
  1674  00002C                     	ds	1
  1675  00002D                     pad@i:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x2C
  1679  00002D                     	ds	1
  1680  00002E                     ___fldiv@a:
  1681                           	callstack 0
  1682  00002E                     ___flmul@a:
  1683                           	callstack 0
  1684                           
  1685                           ; 4 bytes @ 0x2D
  1686  00002E                     	ds	1
  1687  00002F                     pad@w:
  1688                           	callstack 0
  1689                           
  1690                           ; 2 bytes @ 0x2E
  1691  00002F                     	ds	2
  1692  000031                     ??_dtoa:
  1693                           
  1694                           ; 1 bytes @ 0x30
  1695  000031                     	ds	1
  1696  000032                     ??___fldiv:
  1697  000032                     ??___flmul:
  1698                           
  1699                           ; 1 bytes @ 0x31
  1700  000032                     	ds	4
  1701  000036                     ??___fladd:
  1702  000036                     ??___flge:
  1703  000036                     ?_floorf:
  1704                           	callstack 0
  1705  000036                     floorf@x:
  1706                           	callstack 0
  1707                           
  1708                           ; 4 bytes @ 0x35
  1709  000036                     	ds	4
  1710  00003A                     
  1711                           ; 1 bytes @ 0x39
  1712 ;;
  1713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1714 ;;
  1715 ;; *************** function _main *****************
  1716 ;; Defined at:
  1717 ;;		line 8 in file "main.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels required when called: 20
  1737 ;; This function calls:
  1738 ;;		_SYSTEM_Initialize
  1739 ;;		_TMR4_SetInterruptHandler
  1740 ;;		_loop
  1741 ;; This function is called by:
  1742 ;;		Startup code after reset
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text0
  1747  005CB8                     __ptext0:
  1748                           	callstack 0
  1749  005CB8                     _main:
  1750                           	callstack 11
  1751  005CB8                     
  1752                           ;main.c: 9:     SYSTEM_Initialize();
  1753  005CB8  EC7A  F02A         	call	_SYSTEM_Initialize	;wreg free
  1754  005CBC                     
  1755                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1756  005CBC  8ED2               	bsf	210,7,c	;volatile
  1757  005CBE                     
  1758                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1759  005CBE  8CD2               	bsf	210,6,c	;volatile
  1760                           
  1761                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1762  005CC0  0EFC               	movlw	low _TMR4_10msISR
  1763  005CC2  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1764  005CC4  0E5D               	movlw	high _TMR4_10msISR
  1765  005CC6  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1766  005CC8  ECEF  F02E         	call	_TMR4_SetInterruptHandler	;wreg free
  1767  005CCC                     l9202:
  1768                           
  1769                           ;main.c: 15:         loop();
  1770  005CCC  EC0D  F022         	call	_loop	;wreg free
  1771  005CD0  EF66  F02E         	goto	l9202
  1772  005CD4  EF57  F000         	goto	start
  1773  005CD8                     __end_of_main:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _loop *****************
  1777 ;; Defined at:
  1778 ;;		line 19 in file "main.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 19
  1799 ;; This function calls:
  1800 ;;		___flge
  1801 ;;		___xxtofl
  1802 ;;		_calcMotorPow
  1803 ;;		_calcSpeed
  1804 ;;		_calcSteering
  1805 ;;		_checkBatt
  1806 ;;		_getBatteryVoltage
  1807 ;;		_getCurve
  1808 ;;		_getReverse
  1809 ;;		_setMotor
  1810 ;;		_setSteering
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text1
  1817  00441A                     __ptext1:
  1818                           	callstack 0
  1819  00441A                     _loop:
  1820                           	callstack 11
  1821  00441A                     
  1822                           ;main.c: 20:     setMotor(0);
  1823  00441A  0E00               	movlw	0
  1824  00441C  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1825  00441E  0E00               	movlw	0
  1826  004420  6E18               	movwf	setMotor@motorPower^0,c
  1827  004422  EC21  F025         	call	_setMotor	;wreg free
  1828                           
  1829                           ;main.c: 21:     setSteering(0, Front);
  1830  004426  0E00               	movlw	0
  1831  004428  0100               	movlb	0	; () banked
  1832  00442A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1833  00442C  0E00               	movlw	0
  1834  00442E  6F83               	movwf	setSteering@steering& (0+255),b
  1835  004430  0E03               	movlw	3
  1836  004432  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1837  004434  ECAC  F01C         	call	_setSteering	;wreg free
  1838  004438                     l1228:
  1839  004438  B8CB               	btfsc	203,4,c	;volatile
  1840  00443A  EF21  F022         	goto	u10261
  1841  00443E  EF23  F022         	goto	u10260
  1842  004442                     u10261:
  1843  004442  EF1C  F022         	goto	l1228
  1844  004446                     u10260:
  1845  004446                     l9164:
  1846  004446  0100               	movlb	0	; () banked
  1847  004448  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1848  00444A  B4D8               	btfsc	status,2,c
  1849  00444C  EF2A  F022         	goto	u10271
  1850  004450  EF2C  F022         	goto	u10270
  1851  004454                     u10271:
  1852  004454  EF23  F022         	goto	l9164
  1853  004458                     u10270:
  1854  004458                     
  1855                           ; BSR set to: 0
  1856                           ;main.c: 26:         cycle10ms = 0;
  1857  004458  0E00               	movlw	0
  1858  00445A  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1859  00445C                     
  1860                           ; BSR set to: 0
  1861                           ;main.c: 28:         getBatteryVoltage();
  1862  00445C  ECF7  F028         	call	_getBatteryVoltage	;wreg free
  1863  004460                     
  1864                           ;main.c: 29:     } while (BatteryVolt < ((6.5) * 409.6));
  1865  004460  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  1866  004464  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1867  004468  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1868  00446A  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1869  00446C  0E00               	movlw	0
  1870  00446E  ECA7  F01D         	call	___xxtofl
  1871  004472  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1872  004476  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1873  00447A  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1874  00447E  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1875  004482  0E66               	movlw	102
  1876  004484  0100               	movlb	0	; () banked
  1877  004486  6F71               	movwf	___flge@ff2& (0+255),b
  1878  004488  0E66               	movlw	102
  1879  00448A  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1880  00448C  0E26               	movlw	38
  1881  00448E  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1882  004490  0E45               	movlw	69
  1883  004492  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1884  004494  ECA5  F023         	call	___flge	;wreg free
  1885  004498  0100               	movlb	0	; () banked
  1886  00449A  A0D8               	btfss	status,0,c
  1887  00449C  EF52  F022         	goto	u10281
  1888  0044A0  EF54  F022         	goto	u10280
  1889  0044A4                     u10281:
  1890  0044A4  EF23  F022         	goto	l9164
  1891  0044A8                     u10280:
  1892  0044A8                     
  1893                           ; BSR set to: 0
  1894                           ;main.c: 33:     oldDistLeft = distLeft;
  1895  0044A8  C0F5  F0F1         	movff	_distLeft,_oldDistLeft	;volatile
  1896  0044AC  C0F6  F0F2         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1897                           
  1898                           ;main.c: 34:     oldDistRight = distRight;
  1899  0044B0  C0F3  F0EF         	movff	_distRight,_oldDistRight	;volatile
  1900  0044B4  C0F4  F0F0         	movff	_distRight+1,_oldDistRight+1	;volatile
  1901  0044B8                     
  1902                           ; BSR set to: 0
  1903                           ;main.c: 35:     cycle10ms = 0;
  1904  0044B8  0E00               	movlw	0
  1905  0044BA  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1906  0044BC                     l9174:
  1907  0044BC  0100               	movlb	0	; () banked
  1908  0044BE  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1909  0044C0  B4D8               	btfsc	status,2,c
  1910  0044C2  EF65  F022         	goto	u10291
  1911  0044C6  EF67  F022         	goto	u10290
  1912  0044CA                     u10291:
  1913  0044CA  EF5E  F022         	goto	l9174
  1914  0044CE                     u10290:
  1915  0044CE                     
  1916                           ; BSR set to: 0
  1917                           ;main.c: 38:         cycle10ms = 0;
  1918  0044CE  0E00               	movlw	0
  1919  0044D0  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1920  0044D2                     
  1921                           ; BSR set to: 0
  1922                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1923  0044D2  BACB               	btfsc	203,5,c	;volatile
  1924  0044D4  EF6E  F022         	goto	u10301
  1925  0044D8  EF70  F022         	goto	u10300
  1926  0044DC                     u10301:
  1927  0044DC  EF82  F022         	goto	l9184
  1928  0044E0                     u10300:
  1929  0044E0                     
  1930                           ; BSR set to: 0
  1931                           ;main.c: 41:             setSpeed = 0;
  1932  0044E0  0E00               	movlw	0
  1933  0044E2  6FEE               	movwf	(_setSpeed+1)& (0+255),b
  1934  0044E4  0E00               	movlw	0
  1935  0044E6  6FED               	movwf	_setSpeed& (0+255),b
  1936                           
  1937                           ;main.c: 42:             actMotorPow = 0;
  1938  0044E8  0E00               	movlw	0
  1939  0044EA  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
  1940  0044EC  0E00               	movlw	0
  1941  0044EE  6FE9               	movwf	_actMotorPow& (0+255),b
  1942  0044F0                     
  1943                           ; BSR set to: 0
  1944                           ;main.c: 43:             setSteering(0, Front);
  1945  0044F0  0E00               	movlw	0
  1946  0044F2  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1947  0044F4  0E00               	movlw	0
  1948  0044F6  6F83               	movwf	setSteering@steering& (0+255),b
  1949  0044F8  0E03               	movlw	3
  1950  0044FA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1951  0044FC  ECAC  F01C         	call	_setSteering	;wreg free
  1952                           
  1953                           ;main.c: 44:             break;
  1954  004500  EF9A  F022         	goto	l1244
  1955  004504                     l9184:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;main.c: 47:         if (checkBatt()) {
  1959  004504  ECAE  F028         	call	_checkBatt	;wreg free
  1960  004508  0900               	iorlw	0
  1961  00450A  B4D8               	btfsc	status,2,c
  1962  00450C  EF8A  F022         	goto	u10311
  1963  004510  EF8C  F022         	goto	u10310
  1964  004514                     u10311:
  1965  004514  EF8E  F022         	goto	l9188
  1966  004518                     u10310:
  1967  004518  EF9A  F022         	goto	l1244
  1968  00451C                     l9188:
  1969                           
  1970                           ;main.c: 51:         getCurve();
  1971  00451C  ECA7  F017         	call	_getCurve	;wreg free
  1972                           
  1973                           ;main.c: 52:         getReverse();
  1974  004520  EC75  F021         	call	_getReverse	;wreg free
  1975  004524                     
  1976                           ;main.c: 54:         calcSteering();
  1977  004524  EC81  F01E         	call	_calcSteering	;wreg free
  1978  004528                     
  1979                           ;main.c: 55:         calcSpeed();
  1980  004528  ECA7  F01B         	call	_calcSpeed	;wreg free
  1981  00452C                     
  1982                           ;main.c: 56:         calcMotorPow();
  1983  00452C  ECCF  F020         	call	_calcMotorPow	;wreg free
  1984  004530  EF5E  F022         	goto	l9174
  1985  004534                     l1244:
  1986  004534  0012               	return		;funcret
  1987  004536                     __end_of_loop:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _getReverse *****************
  1991 ;; Defined at:
  1992 ;;		line 199 in file "main.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 17
  2013 ;; This function calls:
  2014 ;;		_printf
  2015 ;; This function is called by:
  2016 ;;		_loop
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text2
  2021  0042EA                     __ptext2:
  2022                           	callstack 0
  2023  0042EA                     _getReverse:
  2024                           	callstack 12
  2025  0042EA                     
  2026                           ;main.c: 200:     if (distFront < (15)) {
  2027  0042EA  0100               	movlb	0	; () banked
  2028  0042EC  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2029  0042EE  E107               	bnz	u10021
  2030  0042F0  0E0F               	movlw	15
  2031  0042F2  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2032  0042F4  B0D8               	btfsc	status,0,c
  2033  0042F6  EF7F  F021         	goto	u10021
  2034  0042FA  EF81  F021         	goto	u10020
  2035  0042FE                     u10021:
  2036  0042FE  EF86  F021         	goto	l8990
  2037  004302                     u10020:
  2038  004302                     
  2039                           ; BSR set to: 0
  2040                           ;main.c: 201:         ++reverseCount;
  2041  004302  0101               	movlb	1	; () banked
  2042  004304  4B34               	infsnz	_reverseCount& (0+255),f,b
  2043  004306  2B35               	incf	(_reverseCount+1)& (0+255),f,b
  2044                           
  2045                           ;main.c: 202:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2046  004308  EF9D  F021         	goto	l8996
  2047  00430C                     l8990:
  2048                           
  2049                           ; BSR set to: 0
  2050  00430C  0E02               	movlw	2
  2051  00430E  19FC               	xorwf	_driveMode& (0+255),w,b
  2052  004310  B4D8               	btfsc	status,2,c
  2053  004312  EF8D  F021         	goto	u10031
  2054  004316  EF8F  F021         	goto	u10030
  2055  00431A                     u10031:
  2056  00431A  EF9D  F021         	goto	l8996
  2057  00431E                     u10030:
  2058  00431E                     
  2059                           ; BSR set to: 0
  2060  00431E  0E03               	movlw	3
  2061  004320  19FC               	xorwf	_driveMode& (0+255),w,b
  2062  004322  B4D8               	btfsc	status,2,c
  2063  004324  EF96  F021         	goto	u10041
  2064  004328  EF98  F021         	goto	u10040
  2065  00432C                     u10041:
  2066  00432C  EF9D  F021         	goto	l8996
  2067  004330                     u10040:
  2068  004330                     
  2069                           ; BSR set to: 0
  2070                           ;main.c: 203:         reverseCount = 0;
  2071  004330  0E00               	movlw	0
  2072  004332  0101               	movlb	1	; () banked
  2073  004334  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2074  004336  0E00               	movlw	0
  2075  004338  6F34               	movwf	_reverseCount& (0+255),b
  2076  00433A                     l8996:
  2077                           
  2078                           ;main.c: 206:     if (reverseCount > (50)) {
  2079  00433A  0101               	movlb	1	; () banked
  2080  00433C  5135               	movf	(_reverseCount+1)& (0+255),w,b
  2081  00433E  E109               	bnz	u10050
  2082  004340  0E33               	movlw	51
  2083  004342  5D34               	subwf	_reverseCount& (0+255),w,b
  2084  004344  A0D8               	btfss	status,0,c
  2085  004346  EFA7  F021         	goto	u10051
  2086  00434A  EFA9  F021         	goto	u10050
  2087  00434E                     u10051:
  2088  00434E  EF0C  F022         	goto	l1320
  2089  004352                     u10050:
  2090  004352                     
  2091                           ; BSR set to: 1
  2092                           ;main.c: 207:         ++reverseTime;
  2093  004352  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2094  004354  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2095  004356                     
  2096                           ; BSR set to: 1
  2097                           ;main.c: 209:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2098  004356  0E02               	movlw	2
  2099  004358  0100               	movlb	0	; () banked
  2100  00435A  19FC               	xorwf	_driveMode& (0+255),w,b
  2101  00435C  B4D8               	btfsc	status,2,c
  2102  00435E  EFB3  F021         	goto	u10061
  2103  004362  EFB5  F021         	goto	u10060
  2104  004366                     u10061:
  2105  004366  EFDF  F021         	goto	l9014
  2106  00436A                     u10060:
  2107  00436A                     
  2108                           ; BSR set to: 0
  2109  00436A  0E03               	movlw	3
  2110  00436C  19FC               	xorwf	_driveMode& (0+255),w,b
  2111  00436E  B4D8               	btfsc	status,2,c
  2112  004370  EFBC  F021         	goto	u10071
  2113  004374  EFBE  F021         	goto	u10070
  2114  004378                     u10071:
  2115  004378  EFDF  F021         	goto	l9014
  2116  00437C                     u10070:
  2117  00437C                     
  2118                           ; BSR set to: 0
  2119                           ;main.c: 210:             if (distLeft > distRight) {
  2120  00437C  51F5               	movf	_distLeft& (0+255),w,b	;volatile
  2121  00437E  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2122  004380  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2123  004382  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2124  004384  B0D8               	btfsc	status,0,c
  2125  004386  EFC7  F021         	goto	u10081
  2126  00438A  EFC9  F021         	goto	u10080
  2127  00438E                     u10081:
  2128  00438E  EFD5  F021         	goto	l9010
  2129  004392                     u10080:
  2130  004392                     
  2131                           ; BSR set to: 0
  2132                           ;main.c: 211:                 printf("ReverseRigth\n");
  2133  004392  0E43               	movlw	low STR_13
  2134  004394  0101               	movlb	1	; () banked
  2135  004396  6FA6               	movwf	printf@fmt& (0+255),b
  2136  004398  0E10               	movlw	high STR_13
  2137  00439A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2138  00439C  EC10  F02E         	call	_printf	;wreg free
  2139  0043A0                     
  2140                           ;main.c: 212:                 driveMode = ReverseRight;
  2141  0043A0  0E02               	movlw	2
  2142  0043A2  0100               	movlb	0	; () banked
  2143  0043A4  6FFC               	movwf	_driveMode& (0+255),b
  2144                           
  2145                           ;main.c: 213:             } else {
  2146  0043A6  EFDF  F021         	goto	l9014
  2147  0043AA                     l9010:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;main.c: 214:                 printf("ReverseLeft\n");
  2151  0043AA  0E5F               	movlw	low STR_14
  2152  0043AC  0101               	movlb	1	; () banked
  2153  0043AE  6FA6               	movwf	printf@fmt& (0+255),b
  2154  0043B0  0E10               	movlw	high STR_14
  2155  0043B2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2156  0043B4  EC10  F02E         	call	_printf	;wreg free
  2157  0043B8                     
  2158                           ;main.c: 215:                 driveMode = ReverseLeft;
  2159  0043B8  0E03               	movlw	3
  2160  0043BA  0100               	movlb	0	; () banked
  2161  0043BC  6FFC               	movwf	_driveMode& (0+255),b
  2162  0043BE                     l9014:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;main.c: 219:         if (distFront > (35) || reverseTime > (300)) {
  2166  0043BE  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2167  0043C0  E107               	bnz	u10091
  2168  0043C2  0E24               	movlw	36
  2169  0043C4  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2170  0043C6  B0D8               	btfsc	status,0,c
  2171  0043C8  EFE8  F021         	goto	u10091
  2172  0043CC  EFEA  F021         	goto	u10090
  2173  0043D0                     u10091:
  2174  0043D0  EFF9  F021         	goto	l9018
  2175  0043D4                     u10090:
  2176  0043D4                     
  2177                           ; BSR set to: 0
  2178  0043D4  0101               	movlb	1	; () banked
  2179  0043D6  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2180  0043D8  EFF7  F021         	goto	u10101
  2181  0043DC  0E2D               	movlw	45
  2182  0043DE  5D2A               	subwf	_reverseTime& (0+255),w,b
  2183  0043E0  0E01               	movlw	1
  2184  0043E2  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2185  0043E4  A0D8               	btfss	status,0,c
  2186  0043E6  EFF7  F021         	goto	u10101
  2187  0043EA  EFF9  F021         	goto	u10100
  2188  0043EE                     u10101:
  2189  0043EE  EF0C  F022         	goto	l1320
  2190  0043F2                     u10100:
  2191  0043F2                     l9018:
  2192                           
  2193                           ;main.c: 220:             printf("Stop Reverse\n");
  2194  0043F2  0E35               	movlw	low STR_15
  2195  0043F4  0101               	movlb	1	; () banked
  2196  0043F6  6FA6               	movwf	printf@fmt& (0+255),b
  2197  0043F8  0E10               	movlw	high STR_15
  2198  0043FA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2199  0043FC  EC10  F02E         	call	_printf	;wreg free
  2200  004400                     
  2201                           ;main.c: 222:                 driveMode = Straight;
  2202  004400  0E00               	movlw	0
  2203  004402  0100               	movlb	0	; () banked
  2204  004404  6FFC               	movwf	_driveMode& (0+255),b
  2205  004406                     
  2206                           ; BSR set to: 0
  2207                           ;main.c: 227:             reverseCount = 0;
  2208  004406  0E00               	movlw	0
  2209  004408  0101               	movlb	1	; () banked
  2210  00440A  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2211  00440C  0E00               	movlw	0
  2212  00440E  6F34               	movwf	_reverseCount& (0+255),b
  2213                           
  2214                           ;main.c: 228:             reverseTime = 0;
  2215  004410  0E00               	movlw	0
  2216  004412  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2217  004414  0E00               	movlw	0
  2218  004416  6F2A               	movwf	_reverseTime& (0+255),b
  2219  004418                     l1320:
  2220                           
  2221                           ; BSR set to: 1
  2222  004418  0012               	return		;funcret
  2223  00441A                     __end_of_getReverse:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _getCurve *****************
  2227 ;; Defined at:
  2228 ;;		line 127 in file "main.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  deltaRight      2   18[BANK1 ] short 
  2233 ;;  deltaLeft       2   16[BANK1 ] short 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;Total ram usage:        6 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 17
  2250 ;; This function calls:
  2251 ;;		_printf
  2252 ;; This function is called by:
  2253 ;;		_loop
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text3
  2258  002F4E                     __ptext3:
  2259                           	callstack 0
  2260  002F4E                     _getCurve:
  2261                           	callstack 12
  2262  002F4E                     
  2263                           ;main.c: 128:     int16_t deltaLeft;;main.c: 129:     int16_t deltaRight;;main.c: 131:  
      +                             switch (curveMode) {
  2264  002F4E  EF01  F019         	goto	l8980
  2265  002F52                     l8902:
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;main.c: 133:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2269  002F52  0100               	movlb	0	; () banked
  2270  002F54  51F1               	movf	_oldDistLeft& (0+255),w,b
  2271  002F56  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2272  002F58  0101               	movlb	1	; () banked
  2273  002F5A  6FB0               	movwf	getCurve@deltaLeft& (0+255),b
  2274  002F5C  0100               	movlb	0	; () banked
  2275  002F5E  51F2               	movf	(_oldDistLeft+1)& (0+255),w,b
  2276  002F60  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2277  002F62  0101               	movlb	1	; () banked
  2278  002F64  6FB1               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2279                           
  2280                           ;main.c: 134:             deltaRight = (int16_t) (distRight - oldDistRight);
  2281  002F66  0100               	movlb	0	; () banked
  2282  002F68  51EF               	movf	_oldDistRight& (0+255),w,b
  2283  002F6A  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2284  002F6C  0101               	movlb	1	; () banked
  2285  002F6E  6FB2               	movwf	getCurve@deltaRight& (0+255),b
  2286  002F70  0100               	movlb	0	; () banked
  2287  002F72  51F0               	movf	(_oldDistRight+1)& (0+255),w,b
  2288  002F74  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2289  002F76  0101               	movlb	1	; () banked
  2290  002F78  6FB3               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2291                           
  2292                           ;main.c: 137:             if (deltaLeft > (40) && deltaLeft < (200) && oldDistLeft < (15
      +                          0)) {
  2293  002F7A  BFB1               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2294  002F7C  EFC9  F017         	goto	u9861
  2295  002F80  51B1               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2296  002F82  E109               	bnz	u9860
  2297  002F84  0E29               	movlw	41
  2298  002F86  5DB0               	subwf	getCurve@deltaLeft& (0+255),w,b
  2299  002F88  A0D8               	btfss	status,0,c
  2300  002F8A  EFC9  F017         	goto	u9861
  2301  002F8E  EFCB  F017         	goto	u9860
  2302  002F92                     u9861:
  2303  002F92  EF04  F018         	goto	l8916
  2304  002F96                     u9860:
  2305  002F96                     
  2306                           ; BSR set to: 1
  2307  002F96  BFB1               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2308  002F98  EFD9  F017         	goto	u9870
  2309  002F9C  51B1               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2310  002F9E  E107               	bnz	u9871
  2311  002FA0  0EC8               	movlw	200
  2312  002FA2  5DB0               	subwf	getCurve@deltaLeft& (0+255),w,b
  2313  002FA4  B0D8               	btfsc	status,0,c
  2314  002FA6  EFD7  F017         	goto	u9871
  2315  002FAA  EFD9  F017         	goto	u9870
  2316  002FAE                     u9871:
  2317  002FAE  EF04  F018         	goto	l8916
  2318  002FB2                     u9870:
  2319  002FB2                     
  2320                           ; BSR set to: 1
  2321  002FB2  0100               	movlb	0	; () banked
  2322  002FB4  51F2               	movf	(_oldDistLeft+1)& (0+255),w,b
  2323  002FB6  E107               	bnz	u9881
  2324  002FB8  0E96               	movlw	150
  2325  002FBA  5DF1               	subwf	_oldDistLeft& (0+255),w,b
  2326  002FBC  B0D8               	btfsc	status,0,c
  2327  002FBE  EFE3  F017         	goto	u9881
  2328  002FC2  EFE5  F017         	goto	u9880
  2329  002FC6                     u9881:
  2330  002FC6  EF04  F018         	goto	l8916
  2331  002FCA                     u9880:
  2332  002FCA                     
  2333                           ; BSR set to: 0
  2334                           ;main.c: 138:                 delay = 0;
  2335  002FCA  0E00               	movlw	0
  2336  002FCC  6FF7               	movwf	_delay& (0+255),b
  2337                           
  2338                           ;main.c: 139:                 curveMode = BeforeCurve;
  2339  002FCE  0E01               	movlw	1
  2340  002FD0  6FFB               	movwf	_curveMode& (0+255),b
  2341                           
  2342                           ;main.c: 140:                 driveMode = CurveLeft;
  2343  002FD2  0E04               	movlw	4
  2344  002FD4  6FFC               	movwf	_driveMode& (0+255),b
  2345  002FD6                     
  2346                           ; BSR set to: 0
  2347                           ;main.c: 141:                 ++curveLeftCount;
  2348  002FD6  2BF9               	incf	_curveLeftCount& (0+255),f,b
  2349  002FD8                     
  2350                           ; BSR set to: 0
  2351                           ;main.c: 142:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  2352  002FD8  0E01               	movlw	low STR_2
  2353  002FDA  0101               	movlb	1	; () banked
  2354  002FDC  6FA6               	movwf	printf@fmt& (0+255),b
  2355  002FDE  0E10               	movlw	high STR_2
  2356  002FE0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2357  002FE2  C1B0  F1A8         	movff	getCurve@deltaLeft,?_printf+2
  2358  002FE6  C1B1  F1A9         	movff	getCurve@deltaLeft+1,?_printf+3
  2359  002FEA  C1B2  F1AA         	movff	getCurve@deltaRight,?_printf+4
  2360  002FEE  C1B3  F1AB         	movff	getCurve@deltaRight+1,?_printf+5
  2361  002FF2  EC10  F02E         	call	_printf	;wreg free
  2362  002FF6                     
  2363                           ;main.c: 143:                 printf("   CurveLeft\n");
  2364  002FF6  0E51               	movlw	low STR_3
  2365  002FF8  0101               	movlb	1	; () banked
  2366  002FFA  6FA6               	movwf	printf@fmt& (0+255),b
  2367  002FFC  0E10               	movlw	high STR_3
  2368  002FFE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2369  003000  EC10  F02E         	call	_printf	;wreg free
  2370                           
  2371                           ;main.c: 144:             } else if (deltaRight > (40) && deltaRight < (200) && oldDistR
      +                          ight < (150)) {
  2372  003004  EF20  F019         	goto	l1284
  2373  003008                     l8916:
  2374  003008  0101               	movlb	1	; () banked
  2375  00300A  BFB3               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2376  00300C  EF11  F018         	goto	u9891
  2377  003010  51B3               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2378  003012  E109               	bnz	u9890
  2379  003014  0E29               	movlw	41
  2380  003016  5DB2               	subwf	getCurve@deltaRight& (0+255),w,b
  2381  003018  A0D8               	btfss	status,0,c
  2382  00301A  EF11  F018         	goto	u9891
  2383  00301E  EF13  F018         	goto	u9890
  2384  003022                     u9891:
  2385  003022  EF20  F019         	goto	l1284
  2386  003026                     u9890:
  2387  003026                     
  2388                           ; BSR set to: 1
  2389  003026  BFB3               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2390  003028  EF21  F018         	goto	u9900
  2391  00302C  51B3               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2392  00302E  E107               	bnz	u9901
  2393  003030  0EC8               	movlw	200
  2394  003032  5DB2               	subwf	getCurve@deltaRight& (0+255),w,b
  2395  003034  B0D8               	btfsc	status,0,c
  2396  003036  EF1F  F018         	goto	u9901
  2397  00303A  EF21  F018         	goto	u9900
  2398  00303E                     u9901:
  2399  00303E  EF20  F019         	goto	l1284
  2400  003042                     u9900:
  2401  003042                     
  2402                           ; BSR set to: 1
  2403  003042  0100               	movlb	0	; () banked
  2404  003044  51F0               	movf	(_oldDistRight+1)& (0+255),w,b
  2405  003046  E107               	bnz	u9911
  2406  003048  0E96               	movlw	150
  2407  00304A  5DEF               	subwf	_oldDistRight& (0+255),w,b
  2408  00304C  B0D8               	btfsc	status,0,c
  2409  00304E  EF2B  F018         	goto	u9911
  2410  003052  EF2D  F018         	goto	u9910
  2411  003056                     u9911:
  2412  003056  EF20  F019         	goto	l1284
  2413  00305A                     u9910:
  2414  00305A                     
  2415                           ; BSR set to: 0
  2416                           ;main.c: 145:                 delay = 0;
  2417  00305A  0E00               	movlw	0
  2418  00305C  6FF7               	movwf	_delay& (0+255),b
  2419                           
  2420                           ;main.c: 146:                 curveMode = BeforeCurve;
  2421  00305E  0E01               	movlw	1
  2422  003060  6FFB               	movwf	_curveMode& (0+255),b
  2423                           
  2424                           ;main.c: 147:                 driveMode = CurveRight;
  2425  003062  0E05               	movlw	5
  2426  003064  6FFC               	movwf	_driveMode& (0+255),b
  2427  003066                     
  2428                           ; BSR set to: 0
  2429                           ;main.c: 148:                 ++curveRightCount;
  2430  003066  2BF8               	incf	_curveRightCount& (0+255),f,b
  2431  003068                     
  2432                           ; BSR set to: 0
  2433                           ;main.c: 149:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  2434  003068  0E01               	movlw	low STR_2
  2435  00306A  0101               	movlb	1	; () banked
  2436  00306C  6FA6               	movwf	printf@fmt& (0+255),b
  2437  00306E  0E10               	movlw	high STR_2
  2438  003070  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2439  003072  C1B0  F1A8         	movff	getCurve@deltaLeft,?_printf+2
  2440  003076  C1B1  F1A9         	movff	getCurve@deltaLeft+1,?_printf+3
  2441  00307A  C1B2  F1AA         	movff	getCurve@deltaRight,?_printf+4
  2442  00307E  C1B3  F1AB         	movff	getCurve@deltaRight+1,?_printf+5
  2443  003082  EC10  F02E         	call	_printf	;wreg free
  2444  003086                     
  2445                           ;main.c: 150:                 printf("   CurveRight\n");
  2446  003086  0E26               	movlw	low STR_5
  2447  003088  0101               	movlb	1	; () banked
  2448  00308A  6FA6               	movwf	printf@fmt& (0+255),b
  2449  00308C  0E10               	movlw	high STR_5
  2450  00308E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2451  003090  EC10  F02E         	call	_printf	;wreg free
  2452  003094  EF20  F019         	goto	l1284
  2453  003098                     l8930:
  2454                           
  2455                           ; BSR set to: 1
  2456                           ;main.c: 155:             if (delay >= (1)) {
  2457  003098  0100               	movlb	0	; () banked
  2458  00309A  51F7               	movf	_delay& (0+255),w,b
  2459  00309C  B4D8               	btfsc	status,2,c
  2460  00309E  EF53  F018         	goto	u9921
  2461  0030A2  EF55  F018         	goto	u9920
  2462  0030A6                     u9921:
  2463  0030A6  EF62  F018         	goto	l8936
  2464  0030AA                     u9920:
  2465  0030AA                     
  2466                           ; BSR set to: 0
  2467                           ;main.c: 156:                 delay = 0;
  2468  0030AA  0E00               	movlw	0
  2469  0030AC  6FF7               	movwf	_delay& (0+255),b
  2470                           
  2471                           ;main.c: 157:                 curveMode = InCurve;
  2472  0030AE  0E02               	movlw	2
  2473  0030B0  6FFB               	movwf	_curveMode& (0+255),b
  2474  0030B2                     
  2475                           ; BSR set to: 0
  2476                           ;main.c: 158:                 printf("InCurve\n");
  2477  0030B2  0EB0               	movlw	low STR_6
  2478  0030B4  0101               	movlb	1	; () banked
  2479  0030B6  6FA6               	movwf	printf@fmt& (0+255),b
  2480  0030B8  0E10               	movlw	high STR_6
  2481  0030BA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2482  0030BC  EC10  F02E         	call	_printf	;wreg free
  2483                           
  2484                           ;main.c: 159:             } else {
  2485  0030C0  EF20  F019         	goto	l1284
  2486  0030C4                     l8936:
  2487                           
  2488                           ;main.c: 160:                 ++delay;
  2489  0030C4  0100               	movlb	0	; () banked
  2490  0030C6  2BF7               	incf	_delay& (0+255),f,b
  2491  0030C8  EF20  F019         	goto	l1284
  2492  0030CC                     l8938:
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;main.c: 164:             if (delay >= (35)) {
  2496  0030CC  0E22               	movlw	34
  2497  0030CE  0100               	movlb	0	; () banked
  2498  0030D0  65F7               	cpfsgt	_delay& (0+255),b
  2499  0030D2  EF6D  F018         	goto	u9931
  2500  0030D6  EF6F  F018         	goto	u9930
  2501  0030DA                     u9931:
  2502  0030DA  EF62  F018         	goto	l8936
  2503  0030DE                     u9930:
  2504  0030DE                     
  2505                           ; BSR set to: 0
  2506                           ;main.c: 165:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (300)) {
  2507  0030DE  0E04               	movlw	4
  2508  0030E0  19FC               	xorwf	_driveMode& (0+255),w,b
  2509  0030E2  A4D8               	btfss	status,2,c
  2510  0030E4  EF76  F018         	goto	u9941
  2511  0030E8  EF78  F018         	goto	u9940
  2512  0030EC                     u9941:
  2513  0030EC  EF83  F018         	goto	l8944
  2514  0030F0                     u9940:
  2515  0030F0                     
  2516                           ; BSR set to: 0
  2517  0030F0  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2518  0030F2  E109               	bnz	u9950
  2519  0030F4  0E2D               	movlw	45
  2520  0030F6  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2521  0030F8  A0D8               	btfss	status,0,c
  2522  0030FA  EF81  F018         	goto	u9951
  2523  0030FE  EF83  F018         	goto	u9950
  2524  003102                     u9951:
  2525  003102  EFA2  F018         	goto	l8950
  2526  003106                     u9950:
  2527  003106                     l8944:
  2528                           
  2529                           ; BSR set to: 0
  2530  003106  0E05               	movlw	5
  2531  003108  19FC               	xorwf	_driveMode& (0+255),w,b
  2532  00310A  A4D8               	btfss	status,2,c
  2533  00310C  EF8A  F018         	goto	u9961
  2534  003110  EF8C  F018         	goto	u9960
  2535  003114                     u9961:
  2536  003114  EF97  F018         	goto	l8948
  2537  003118                     u9960:
  2538  003118                     
  2539                           ; BSR set to: 0
  2540  003118  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2541  00311A  E109               	bnz	u9970
  2542  00311C  0E2D               	movlw	45
  2543  00311E  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2544  003120  A0D8               	btfss	status,0,c
  2545  003122  EF95  F018         	goto	u9971
  2546  003126  EF97  F018         	goto	u9970
  2547  00312A                     u9971:
  2548  00312A  EFA2  F018         	goto	l8950
  2549  00312E                     u9970:
  2550  00312E                     l8948:
  2551                           
  2552                           ; BSR set to: 0
  2553  00312E  0E2D               	movlw	45
  2554  003130  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2555  003132  0E01               	movlw	1
  2556  003134  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2557  003136  A0D8               	btfss	status,0,c
  2558  003138  EFA0  F018         	goto	u9981
  2559  00313C  EFA2  F018         	goto	u9980
  2560  003140                     u9981:
  2561  003140  EF62  F018         	goto	l8936
  2562  003144                     u9980:
  2563  003144                     l8950:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;main.c: 166:                     if(distLeft < (45)){
  2567  003144  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2568  003146  E107               	bnz	u9991
  2569  003148  0E2D               	movlw	45
  2570  00314A  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2571  00314C  B0D8               	btfsc	status,0,c
  2572  00314E  EFAB  F018         	goto	u9991
  2573  003152  EFAD  F018         	goto	u9990
  2574  003156                     u9991:
  2575  003156  EFB6  F018         	goto	l8954
  2576  00315A                     u9990:
  2577  00315A                     
  2578                           ; BSR set to: 0
  2579                           ;main.c: 167:                         printf("Left Out!\n");
  2580  00315A  0E90               	movlw	low STR_7
  2581  00315C  0101               	movlb	1	; () banked
  2582  00315E  6FA6               	movwf	printf@fmt& (0+255),b
  2583  003160  0E10               	movlw	high STR_7
  2584  003162  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2585  003164  EC10  F02E         	call	_printf	;wreg free
  2586                           
  2587                           ;main.c: 168:                     } else if(distRight < (45)){
  2588  003168  EFD1  F018         	goto	l1298
  2589  00316C                     l8954:
  2590                           
  2591                           ; BSR set to: 0
  2592  00316C  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2593  00316E  E107               	bnz	u10001
  2594  003170  0E2D               	movlw	45
  2595  003172  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2596  003174  B0D8               	btfsc	status,0,c
  2597  003176  EFBF  F018         	goto	u10001
  2598  00317A  EFC1  F018         	goto	u10000
  2599  00317E                     u10001:
  2600  00317E  EFCA  F018         	goto	l8958
  2601  003182                     u10000:
  2602  003182                     
  2603                           ; BSR set to: 0
  2604                           ;main.c: 169:                         printf("Right Out!\n");
  2605  003182  0E6C               	movlw	low STR_8
  2606  003184  0101               	movlb	1	; () banked
  2607  003186  6FA6               	movwf	printf@fmt& (0+255),b
  2608  003188  0E10               	movlw	high STR_8
  2609  00318A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2610  00318C  EC10  F02E         	call	_printf	;wreg free
  2611                           
  2612                           ;main.c: 170:                     } else {
  2613  003190  EFD1  F018         	goto	l1298
  2614  003194                     l8958:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 171:                         printf("Front Out!\n");
  2618  003194  0E78               	movlw	low STR_9
  2619  003196  0101               	movlb	1	; () banked
  2620  003198  6FA6               	movwf	printf@fmt& (0+255),b
  2621  00319A  0E10               	movlw	high STR_9
  2622  00319C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2623  00319E  EC10  F02E         	call	_printf	;wreg free
  2624  0031A2                     l1298:
  2625                           
  2626                           ;main.c: 173:                     printf("CurveTime: %d\n", delay);
  2627  0031A2  0E17               	movlw	low STR_10
  2628  0031A4  0101               	movlb	1	; () banked
  2629  0031A6  6FA6               	movwf	printf@fmt& (0+255),b
  2630  0031A8  0E10               	movlw	high STR_10
  2631  0031AA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2632  0031AC  C0F7  F1A8         	movff	_delay,?_printf+2
  2633  0031B0  6BA9               	clrf	(?_printf+3)& (0+255),b
  2634  0031B2  EC10  F02E         	call	_printf	;wreg free
  2635  0031B6                     
  2636                           ;main.c: 174:                     delay = 0;
  2637  0031B6  0E00               	movlw	0
  2638  0031B8  0100               	movlb	0	; () banked
  2639  0031BA  6FF7               	movwf	_delay& (0+255),b
  2640  0031BC                     
  2641                           ; BSR set to: 0
  2642                           ;main.c: 175:                     curveMode = AfterCurve;
  2643  0031BC  0E03               	movlw	3
  2644  0031BE  6FFB               	movwf	_curveMode& (0+255),b
  2645  0031C0                     
  2646                           ; BSR set to: 0
  2647                           ;main.c: 177:                     driveMode = Straight;
  2648  0031C0  0E00               	movlw	0
  2649  0031C2  6FFC               	movwf	_driveMode& (0+255),b
  2650  0031C4                     
  2651                           ; BSR set to: 0
  2652                           ;main.c: 178:                     printf("AfterCurve\n");
  2653  0031C4  0E84               	movlw	low STR_11
  2654  0031C6  0101               	movlb	1	; () banked
  2655  0031C8  6FA6               	movwf	printf@fmt& (0+255),b
  2656  0031CA  0E10               	movlw	high STR_11
  2657  0031CC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2658  0031CE  EC10  F02E         	call	_printf	;wreg free
  2659  0031D2  EF62  F018         	goto	l8936
  2660  0031D6                     l8970:
  2661                           
  2662                           ; BSR set to: 1
  2663                           ;main.c: 186:             if (delay >= (1)) {
  2664  0031D6  0100               	movlb	0	; () banked
  2665  0031D8  51F7               	movf	_delay& (0+255),w,b
  2666  0031DA  B4D8               	btfsc	status,2,c
  2667  0031DC  EFF2  F018         	goto	u10011
  2668  0031E0  EFF4  F018         	goto	u10010
  2669  0031E4                     u10011:
  2670  0031E4  EF62  F018         	goto	l8936
  2671  0031E8                     u10010:
  2672  0031E8                     
  2673                           ; BSR set to: 0
  2674                           ;main.c: 187:                 delay = 0;
  2675  0031E8  0E00               	movlw	0
  2676  0031EA  6FF7               	movwf	_delay& (0+255),b
  2677                           
  2678                           ;main.c: 188:                 curveMode = OutCurve;
  2679  0031EC  0E00               	movlw	0
  2680  0031EE  6FFB               	movwf	_curveMode& (0+255),b
  2681  0031F0                     
  2682                           ; BSR set to: 0
  2683                           ;main.c: 189:                 printf("OutCurve\n");
  2684  0031F0  0EA6               	movlw	low STR_12
  2685  0031F2  0101               	movlb	1	; () banked
  2686  0031F4  6FA6               	movwf	printf@fmt& (0+255),b
  2687  0031F6  0E10               	movlw	high STR_12
  2688  0031F8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2689  0031FA  EC10  F02E         	call	_printf	;wreg free
  2690                           
  2691                           ;main.c: 190:             } else {
  2692  0031FE  EF20  F019         	goto	l1284
  2693  003202                     l8980:
  2694  003202  0100               	movlb	0	; () banked
  2695  003204  51FB               	movf	_curveMode& (0+255),w,b
  2696  003206  0101               	movlb	1	; () banked
  2697  003208  6FAE               	movwf	??_getCurve& (0+255),b
  2698  00320A  6BAF               	clrf	(??_getCurve+1)& (0+255),b
  2699                           
  2700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2701                           ; Switch size 1, requested type "simple"
  2702                           ; Number of cases is 1, Range of values is 0 to 0
  2703                           ; switch strategies available:
  2704                           ; Name         Instructions Cycles
  2705                           ; simple_byte            4     3 (average)
  2706                           ;	Chosen strategy is simple_byte
  2707  00320C  51AF               	movf	(??_getCurve+1)& (0+255),w,b
  2708  00320E  0A00               	xorlw	0	; case 0
  2709  003210  B4D8               	btfsc	status,2,c
  2710  003212  EF0D  F019         	goto	l9372
  2711  003216  EF20  F019         	goto	l1284
  2712  00321A                     l9372:
  2713                           
  2714                           ; BSR set to: 1
  2715                           ; Switch size 1, requested type "simple"
  2716                           ; Number of cases is 4, Range of values is 0 to 3
  2717                           ; switch strategies available:
  2718                           ; Name         Instructions Cycles
  2719                           ; simple_byte           13     7 (average)
  2720                           ;	Chosen strategy is simple_byte
  2721  00321A  51AE               	movf	??_getCurve& (0+255),w,b
  2722  00321C  0A00               	xorlw	0	; case 0
  2723  00321E  B4D8               	btfsc	status,2,c
  2724  003220  EFA9  F017         	goto	l8902
  2725  003224  0A01               	xorlw	1	; case 1
  2726  003226  B4D8               	btfsc	status,2,c
  2727  003228  EF4C  F018         	goto	l8930
  2728  00322C  0A03               	xorlw	3	; case 2
  2729  00322E  B4D8               	btfsc	status,2,c
  2730  003230  EF66  F018         	goto	l8938
  2731  003234  0A01               	xorlw	1	; case 3
  2732  003236  B4D8               	btfsc	status,2,c
  2733  003238  EFEB  F018         	goto	l8970
  2734  00323C  EF20  F019         	goto	l1284
  2735  003240                     l1284:
  2736                           
  2737                           ;main.c: 195:     oldDistLeft = distLeft;
  2738  003240  C0F5  F0F1         	movff	_distLeft,_oldDistLeft	;volatile
  2739  003244  C0F6  F0F2         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2740                           
  2741                           ;main.c: 196:     oldDistRight = distRight;
  2742  003248  C0F3  F0EF         	movff	_distRight,_oldDistRight	;volatile
  2743  00324C  C0F4  F0F0         	movff	_distRight+1,_oldDistRight+1	;volatile
  2744  003250  0012               	return		;funcret
  2745  003252                     __end_of_getCurve:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _checkBatt *****************
  2749 ;; Defined at:
  2750 ;;		line 84 in file "main.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      _Bool 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 18
  2771 ;; This function calls:
  2772 ;;		___flge
  2773 ;;		___xxtofl
  2774 ;;		_getBatteryVoltage
  2775 ;;		_setSteering
  2776 ;; This function is called by:
  2777 ;;		_loop
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text4
  2782  00515C                     __ptext4:
  2783                           	callstack 0
  2784  00515C                     _checkBatt:
  2785                           	callstack 11
  2786  00515C                     
  2787                           ;main.c: 85:     ++battCheckCount;
  2788  00515C  0101               	movlb	1	; () banked
  2789  00515E  4B32               	infsnz	_battCheckCount& (0+255),f,b
  2790  005160  2B33               	incf	(_battCheckCount+1)& (0+255),f,b
  2791  005162                     
  2792                           ; BSR set to: 1
  2793                           ;main.c: 86:     if (battCheckCount > (500)) {
  2794  005162  0EF5               	movlw	245
  2795  005164  5D32               	subwf	_battCheckCount& (0+255),w,b
  2796  005166  0E01               	movlw	1
  2797  005168  5933               	subwfb	(_battCheckCount+1)& (0+255),w,b
  2798  00516A  A0D8               	btfss	status,0,c
  2799  00516C  EFBA  F028         	goto	u9841
  2800  005170  EFBC  F028         	goto	u9840
  2801  005174                     u9841:
  2802  005174  EFF5  F028         	goto	l8896
  2803  005178                     u9840:
  2804  005178                     
  2805                           ; BSR set to: 1
  2806                           ;main.c: 87:         battCheckCount = 0;
  2807  005178  0E00               	movlw	0
  2808  00517A  6F33               	movwf	(_battCheckCount+1)& (0+255),b
  2809  00517C  0E00               	movlw	0
  2810  00517E  6F32               	movwf	_battCheckCount& (0+255),b
  2811  005180                     
  2812                           ; BSR set to: 1
  2813                           ;main.c: 88:         getBatteryVoltage();
  2814  005180  ECF7  F028         	call	_getBatteryVoltage	;wreg free
  2815  005184                     
  2816                           ;main.c: 90:         if (BatteryVolt < (6.5) * 409.6) {
  2817  005184  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  2818  005188  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  2819  00518C  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2820  00518E  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2821  005190  0E00               	movlw	0
  2822  005192  ECA7  F01D         	call	___xxtofl
  2823  005196  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  2824  00519A  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  2825  00519E  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  2826  0051A2  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  2827  0051A6  0E66               	movlw	102
  2828  0051A8  0100               	movlb	0	; () banked
  2829  0051AA  6F71               	movwf	___flge@ff2& (0+255),b
  2830  0051AC  0E66               	movlw	102
  2831  0051AE  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2832  0051B0  0E26               	movlw	38
  2833  0051B2  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2834  0051B4  0E45               	movlw	69
  2835  0051B6  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2836  0051B8  ECA5  F023         	call	___flge	;wreg free
  2837  0051BC  0100               	movlb	0	; () banked
  2838  0051BE  B0D8               	btfsc	status,0,c
  2839  0051C0  EFE4  F028         	goto	u9851
  2840  0051C4  EFE6  F028         	goto	u9850
  2841  0051C8                     u9851:
  2842  0051C8  EFF5  F028         	goto	l8896
  2843  0051CC                     u9850:
  2844  0051CC                     
  2845                           ; BSR set to: 0
  2846                           ;main.c: 91:             setSpeed = 0;
  2847  0051CC  0E00               	movlw	0
  2848  0051CE  6FEE               	movwf	(_setSpeed+1)& (0+255),b
  2849  0051D0  0E00               	movlw	0
  2850  0051D2  6FED               	movwf	_setSpeed& (0+255),b
  2851  0051D4                     
  2852                           ; BSR set to: 0
  2853                           ;main.c: 92:             setSteering(0, Front);
  2854  0051D4  0E00               	movlw	0
  2855  0051D6  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2856  0051D8  0E00               	movlw	0
  2857  0051DA  6F83               	movwf	setSteering@steering& (0+255),b
  2858  0051DC  0E03               	movlw	3
  2859  0051DE  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2860  0051E0  ECAC  F01C         	call	_setSteering	;wreg free
  2861  0051E4                     
  2862                           ;main.c: 93:             return 1;
  2863  0051E4  0E01               	movlw	1
  2864  0051E6  EFF6  F028         	goto	l1261
  2865  0051EA                     l8896:
  2866                           
  2867                           ;main.c: 96:     return 0;
  2868  0051EA  0E00               	movlw	0
  2869  0051EC                     l1261:
  2870  0051EC  0012               	return		;funcret
  2871  0051EE                     __end_of_checkBatt:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _getBatteryVoltage *****************
  2875 ;; Defined at:
  2876 ;;		line 79 in file "main.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;Total ram usage:        4 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; Hardware stack levels required when called: 17
  2897 ;; This function calls:
  2898 ;;		_ADCC_GetSingleConversion
  2899 ;;		___fldiv
  2900 ;;		___xxtofl
  2901 ;;		_printf
  2902 ;; This function is called by:
  2903 ;;		_loop
  2904 ;;		_checkBatt
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text5
  2909  0051EE                     __ptext5:
  2910                           	callstack 0
  2911  0051EE                     _getBatteryVoltage:
  2912                           	callstack 12
  2913  0051EE                     
  2914                           ;main.c: 80:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2915  0051EE  0E22               	movlw	34
  2916  0051F0  EC28  F02D         	call	_ADCC_GetSingleConversion
  2917  0051F4  C014  F0E7         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2918  0051F8  C015  F0E8         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2919                           
  2920                           ;main.c: 81:     printf("BVolt: %f\n", BatteryVolt / 409.6f);
  2921  0051FC  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  2922  005200  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  2923  005204  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2924  005206  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2925  005208  0E00               	movlw	0
  2926  00520A  ECA7  F01D         	call	___xxtofl
  2927  00520E  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  2928  005212  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  2929  005216  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  2930  00521A  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  2931  00521E  0ECD               	movlw	205
  2932  005220  6E2E               	movwf	___fldiv@a^0,c
  2933  005222  0ECC               	movlw	204
  2934  005224  6E2F               	movwf	(___fldiv@a+1)^0,c
  2935  005226  0ECC               	movlw	204
  2936  005228  6E30               	movwf	(___fldiv@a+2)^0,c
  2937  00522A  0E43               	movlw	67
  2938  00522C  6E31               	movwf	(___fldiv@a+3)^0,c
  2939  00522E  ECD9  F015         	call	___fldiv	;wreg free
  2940  005232  C02A  F1AE         	movff	?___fldiv,_getBatteryVoltage$4190
  2941  005236  C02B  F1AF         	movff	?___fldiv+1,_getBatteryVoltage$4190+1
  2942  00523A  C02C  F1B0         	movff	?___fldiv+2,_getBatteryVoltage$4190+2
  2943  00523E  C02D  F1B1         	movff	?___fldiv+3,_getBatteryVoltage$4190+3
  2944  005242                     
  2945                           ;main.c: 81:     printf("BVolt: %f\n", BatteryVolt / 409.6f);
  2946  005242  0E9B               	movlw	low STR_1
  2947  005244  0101               	movlb	1	; () banked
  2948  005246  6FA6               	movwf	printf@fmt& (0+255),b
  2949  005248  0E10               	movlw	high STR_1
  2950  00524A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2951  00524C  C1AE  F1A8         	movff	_getBatteryVoltage$4190,?_printf+2
  2952  005250  C1AF  F1A9         	movff	_getBatteryVoltage$4190+1,?_printf+3
  2953  005254  C1B0  F1AA         	movff	_getBatteryVoltage$4190+2,?_printf+4
  2954  005258  C1B1  F1AB         	movff	_getBatteryVoltage$4190+3,?_printf+5
  2955  00525C  EC10  F02E         	call	_printf	;wreg free
  2956  005260  0012               	return		;funcret
  2957  005262                     __end_of_getBatteryVoltage:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _printf *****************
  2961 ;; Defined at:
  2962 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  2965 ;;		 -> STR_15(14), STR_14(13), STR_13(14), STR_12(10), 
  2966 ;;		 -> STR_11(12), STR_10(15), STR_9(12), STR_8(12), 
  2967 ;;		 -> STR_7(11), STR_6(9), STR_5(15), STR_4(22), 
  2968 ;;		 -> STR_3(14), STR_2(22), STR_1(11), 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  ap              2   12[BANK1 ] PTR void [1]
  2971 ;;		 -> ?_printf(2), 
  2972 ;;  ret             2    0        int 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  2    6[BANK1 ] int 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2982 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;Total ram usage:        8 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 16
  2989 ;; This function calls:
  2990 ;;		_vfprintf
  2991 ;; This function is called by:
  2992 ;;		_getBatteryVoltage
  2993 ;;		_getCurve
  2994 ;;		_getReverse
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text6
  2999  005C20                     __ptext6:
  3000                           	callstack 0
  3001  005C20                     _printf:
  3002                           	callstack 12
  3003  005C20  0EA8               	movlw	low (?_printf+2)
  3004  005C22  0101               	movlb	1	; () banked
  3005  005C24  6FAC               	movwf	printf@ap& (0+255),b
  3006  005C26  0E01               	movlw	high (?_printf+2)
  3007  005C28  6FAD               	movwf	(printf@ap+1)& (0+255),b
  3008  005C2A                     
  3009                           ; BSR set to: 1
  3010  005C2A  0E00               	movlw	0
  3011  005C2C  6FA0               	movwf	vfprintf@fp& (0+255),b
  3012  005C2E  0E00               	movlw	0
  3013  005C30  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
  3014  005C32  C1A6  F1A2         	movff	printf@fmt,vfprintf@fmt
  3015  005C36  C1A7  F1A3         	movff	printf@fmt+1,vfprintf@fmt+1
  3016  005C3A  0EAC               	movlw	low printf@ap
  3017  005C3C  6FA4               	movwf	vfprintf@ap& (0+255),b
  3018  005C3E  0E01               	movlw	high printf@ap
  3019  005C40  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  3020  005C42  EC31  F029         	call	_vfprintf	;wreg free
  3021  005C46  0012               	return		;funcret
  3022  005C48                     __end_of_printf:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function _vfprintf *****************
  3026 ;; Defined at:
  3027 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3030 ;;		 -> NULL(0), 
  3031 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3032 ;;		 -> STR_15(14), STR_14(13), STR_13(14), STR_12(10), 
  3033 ;;		 -> STR_11(12), STR_10(15), STR_9(12), STR_8(12), 
  3034 ;;		 -> STR_7(11), STR_6(9), STR_5(15), STR_4(22), 
  3035 ;;		 -> STR_3(14), STR_2(22), STR_1(11), 
  3036 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3037 ;;		 -> printf@ap(2), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  3040 ;;		 -> STR_15(14), STR_14(13), STR_13(14), STR_12(10), 
  3041 ;;		 -> STR_11(12), STR_10(15), STR_9(12), STR_8(12), 
  3042 ;;		 -> STR_7(11), STR_6(9), STR_5(15), STR_4(22), 
  3043 ;;		 -> STR_3(14), STR_2(22), STR_1(11), 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  2    0[BANK1 ] int 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3053 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;Total ram usage:        8 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 15
  3060 ;; This function calls:
  3061 ;;		_vfpfcnvrt
  3062 ;; This function is called by:
  3063 ;;		_printf
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text7
  3068  005262                     __ptext7:
  3069                           	callstack 0
  3070  005262                     _vfprintf:
  3071                           	callstack 12
  3072  005262                     
  3073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3074  005262  C1A2  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  3075  005266  C1A3  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3076  00526A                     
  3077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3078  00526A  0E00               	movlw	0
  3079  00526C  0101               	movlb	1	; () banked
  3080  00526E  6F29               	movwf	(_nout+1)& (0+255),b
  3081  005270  0E00               	movlw	0
  3082  005272  6F28               	movwf	_nout& (0+255),b
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3085  005274  EF53  F029         	goto	l8766
  3086  005278                     l8764:
  3087                           
  3088                           ; BSR set to: 1
  3089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3090  005278  C1A0  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3091  00527C  C1A1  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3092  005280  0EE3               	movlw	low vfprintf@cfmt
  3093  005282  0100               	movlb	0	; () banked
  3094  005284  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3095  005286  0E00               	movlw	high vfprintf@cfmt
  3096  005288  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3097  00528A  C1A4  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3098  00528E  C1A5  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3099  005292  ECBE  F00E         	call	_vfpfcnvrt	;wreg free
  3100  005296  0100               	movlb	0	; () banked
  3101  005298  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3102  00529A  0101               	movlb	1	; () banked
  3103  00529C  2728               	addwf	_nout& (0+255),f,b
  3104  00529E  0100               	movlb	0	; () banked
  3105  0052A0  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3106  0052A2  0101               	movlb	1	; () banked
  3107  0052A4  2329               	addwfc	(_nout+1)& (0+255),f,b
  3108  0052A6                     l8766:
  3109                           
  3110                           ; BSR set to: 1
  3111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3112  0052A6  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  3113  0052AC  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3114  0052B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3115  0052B2  6AF8               	clrf	tblptru,c
  3116  0052B4                     	endif
  3117  0052B4                     	if	0	;tblptru may be non-zero
  3118  0052B4                     	endif
  3119  0052B4  0008               	tblrd		*
  3120  0052B6  50F5               	movf	tablat,w,c
  3121  0052B8  0900               	iorlw	0
  3122  0052BA  A4D8               	btfss	status,2,c
  3123  0052BC  EF62  F029         	goto	u9681
  3124  0052C0  EF64  F029         	goto	u9680
  3125  0052C4                     u9681:
  3126  0052C4  EF3C  F029         	goto	l8764
  3127  0052C8                     u9680:
  3128  0052C8                     
  3129                           ; BSR set to: 1
  3130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3131  0052C8  C128  F1A0         	movff	_nout,?_vfprintf
  3132  0052CC  C129  F1A1         	movff	_nout+1,?_vfprintf+1
  3133  0052D0                     
  3134                           ; BSR set to: 1
  3135  0052D0  0012               	return		;funcret
  3136  0052D2                     __end_of_vfprintf:
  3137                           	callstack 0
  3138                           
  3139 ;; *************** function _vfpfcnvrt *****************
  3140 ;; Defined at:
  3141 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3144 ;;		 -> NULL(0), 
  3145 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3146 ;;		 -> vfprintf@cfmt(2), 
  3147 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3148 ;;		 -> printf@ap(2), 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  ll              8  113[BANK0 ] long long 
  3151 ;;  llu             8    0        unsigned long long 
  3152 ;;  f               4  123[BANK0 ] unsigned long long 
  3153 ;;  ct              3  127[BANK0 ] unsigned char [3]
  3154 ;;  vp              3    0        PTR void 
  3155 ;;  cp              3    0        PTR unsigned char 
  3156 ;;  i               2    0        int 
  3157 ;;  done            2    0        int 
  3158 ;;  c               1  130[BANK0 ] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2  103[BANK0 ] int 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3168 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;Total ram usage:       28 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 14
  3175 ;; This function calls:
  3176 ;;		_dtoa
  3177 ;;		_efgtoa
  3178 ;;		_fputc
  3179 ;;		_isupper
  3180 ;;		_strncmp
  3181 ;;		_tolower
  3182 ;; This function is called by:
  3183 ;;		_vfprintf
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text8
  3188  001D7C                     __ptext8:
  3189                           	callstack 0
  3190  001D7C                     _vfpfcnvrt:
  3191                           	callstack 12
  3192  001D7C                     
  3193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3194  001D7C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3195  001D82  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3196  001D88  006F FF7B FFF6     	movff	postinc2,tblptrl
  3197  001D8E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3198  001D94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3199  001D94  6AF8               	clrf	tblptru,c
  3200  001D96                     	endif
  3201  001D96                     	if	0	;tblptru may be non-zero
  3202  001D96                     	endif
  3203  001D96  0008               	tblrd		*
  3204  001D98  50F5               	movf	tablat,w,c
  3205  001D9A  0A25               	xorlw	37
  3206  001D9C  A4D8               	btfss	status,2,c
  3207  001D9E  EFD3  F00E         	goto	u9571
  3208  001DA2  EFD5  F00E         	goto	u9570
  3209  001DA6                     u9571:
  3210  001DA6  EF2D  F011         	goto	l8752
  3211  001DAA                     u9570:
  3212  001DAA                     
  3213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3214  001DAA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3215  001DB0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3216  001DB6  2ADE               	incf	postinc2,f,c
  3217  001DB8  0E00               	movlw	0
  3218  001DBA  22DD               	addwfc	postdec2,f,c
  3219  001DBC                     
  3220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3221  001DBC  0E00               	movlw	0
  3222  001DBE  0100               	movlb	0	; () banked
  3223  001DC0  6FE6               	movwf	(_width+1)& (0+255),b
  3224  001DC2  0E00               	movlw	0
  3225  001DC4  6FE5               	movwf	_width& (0+255),b
  3226  001DC6  C0E5  F03C         	movff	_width,_flags
  3227  001DCA  C0E6  F03D         	movff	_width+1,_flags+1
  3228  001DCE                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3231  001DCE  683A               	setf	_prec^0,c
  3232  001DD0  683B               	setf	(_prec+1)^0,c
  3233  001DD2                     
  3234                           ; BSR set to: 0
  3235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3236  001DD2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3237  001DD8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3238  001DDE  006F FF7B FFF6     	movff	postinc2,tblptrl
  3239  001DE4  006F FF77 FFF7     	movff	postdec2,tblptrh
  3240  001DEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3241  001DEA  6AF8               	clrf	tblptru,c
  3242  001DEC                     	endif
  3243  001DEC                     	if	0	;tblptru may be non-zero
  3244  001DEC                     	endif
  3245  001DEC  0008               	tblrd		*
  3246  001DEE  50F5               	movf	tablat,w,c
  3247  001DF0  6E1A               	movwf	tolower@c^0,c
  3248  001DF2  6A1B               	clrf	(tolower@c+1)^0,c
  3249  001DF4  EC9E  F029         	call	_tolower	;wreg free
  3250  001DF8  501A               	movf	?_tolower^0,w,c
  3251  001DFA  0100               	movlb	0	; () banked
  3252  001DFC  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  3253  001DFE                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3256  001DFE  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  3257  001E00  B4D8               	btfsc	status,2,c
  3258  001E02  EF05  F00F         	goto	u9581
  3259  001E06  EF07  F00F         	goto	u9580
  3260  001E0A                     u9581:
  3261  001E0A  EF4F  F00F         	goto	l8698
  3262  001E0E                     u9580:
  3263  001E0E                     
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3266  001E0E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3267  001E14  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3268  001E1A  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3269  001E20  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3270  001E26  0E01               	movlw	1
  3271  001E28  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3272  001E2A  0E00               	movlw	0
  3273  001E2C  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3274  001E2E  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3275  001E34  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3276  001E3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3277  001E3A  6AF8               	clrf	tblptru,c
  3278  001E3C                     	endif
  3279  001E3C                     	if	0	;tblptru may be non-zero
  3280  001E3C                     	endif
  3281  001E3C  0008               	tblrd		*
  3282  001E3E  50F5               	movf	tablat,w,c
  3283  001E40  6E1A               	movwf	tolower@c^0,c
  3284  001E42  6A1B               	clrf	(tolower@c+1)^0,c
  3285  001E44  EC9E  F029         	call	_tolower	;wreg free
  3286  001E48  501A               	movf	?_tolower^0,w,c
  3287  001E4A  0100               	movlb	0	; () banked
  3288  001E4C  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3289  001E4E                     
  3290                           ; BSR set to: 0
  3291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3292  001E4E  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3293  001E50  B4D8               	btfsc	status,2,c
  3294  001E52  EF2D  F00F         	goto	u9591
  3295  001E56  EF2F  F00F         	goto	u9590
  3296  001E5A                     u9591:
  3297  001E5A  EF4F  F00F         	goto	l8698
  3298  001E5E                     u9590:
  3299  001E5E                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3302  001E5E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3303  001E64  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3304  001E6A  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3305  001E70  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3306  001E76  0E02               	movlw	2
  3307  001E78  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3308  001E7A  0E00               	movlw	0
  3309  001E7C  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3310  001E7E  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3311  001E84  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3312  001E8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3313  001E8A  6AF8               	clrf	tblptru,c
  3314  001E8C                     	endif
  3315  001E8C                     	if	0	;tblptru may be non-zero
  3316  001E8C                     	endif
  3317  001E8C  0008               	tblrd		*
  3318  001E8E  50F5               	movf	tablat,w,c
  3319  001E90  6E1A               	movwf	tolower@c^0,c
  3320  001E92  6A1B               	clrf	(tolower@c+1)^0,c
  3321  001E94  EC9E  F029         	call	_tolower	;wreg free
  3322  001E98  501A               	movf	?_tolower^0,w,c
  3323  001E9A  0100               	movlb	0	; () banked
  3324  001E9C  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3325  001E9E                     l8698:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3329  001E9E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3330  001EA4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3331  001EAA  006F FF7B FFF6     	movff	postinc2,tblptrl
  3332  001EB0  006F FF77 FFF7     	movff	postdec2,tblptrh
  3333  001EB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3334  001EB6  6AF8               	clrf	tblptru,c
  3335  001EB8                     	endif
  3336  001EB8                     	if	0	;tblptru may be non-zero
  3337  001EB8                     	endif
  3338  001EB8  0008               	tblrd		*
  3339  001EBA  50F5               	movf	tablat,w,c
  3340  001EBC  0A64               	xorlw	100
  3341  001EBE  B4D8               	btfsc	status,2,c
  3342  001EC0  EF64  F00F         	goto	u9601
  3343  001EC4  EF66  F00F         	goto	u9600
  3344  001EC8                     u9601:
  3345  001EC8  EF7D  F00F         	goto	l8702
  3346  001ECC                     u9600:
  3347  001ECC                     
  3348                           ; BSR set to: 0
  3349  001ECC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3350  001ED2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3351  001ED8  006F FF7B FFF6     	movff	postinc2,tblptrl
  3352  001EDE  006F FF77 FFF7     	movff	postdec2,tblptrh
  3353  001EE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3354  001EE4  6AF8               	clrf	tblptru,c
  3355  001EE6                     	endif
  3356  001EE6                     	if	0	;tblptru may be non-zero
  3357  001EE6                     	endif
  3358  001EE6  0008               	tblrd		*
  3359  001EE8  50F5               	movf	tablat,w,c
  3360  001EEA  0A69               	xorlw	105
  3361  001EEC  A4D8               	btfss	status,2,c
  3362  001EEE  EF7B  F00F         	goto	u9611
  3363  001EF2  EF7D  F00F         	goto	u9610
  3364  001EF6                     u9611:
  3365  001EF6  EFC7  F00F         	goto	l8708
  3366  001EFA                     u9610:
  3367  001EFA                     l8702:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3371  001EFA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3372  001F00  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3373  001F06  2ADE               	incf	postinc2,f,c
  3374  001F08  0E00               	movlw	0
  3375  001F0A  22DD               	addwfc	postdec2,f,c
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3378  001F0C  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3379  001F12  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3380  001F18  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3381  001F1E  0E02               	movlw	2
  3382  001F20  26DE               	addwf	postinc2,f,c
  3383  001F22  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3384  001F28  0E00               	movlw	0
  3385  001F2A  22DD               	addwfc	postdec2,f,c
  3386  001F2C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3387  001F32  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3388  001F38  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3389  001F3E  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3390  001F44  0E00               	movlw	0
  3391  001F46  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3392  001F48  0EFF               	movlw	-1
  3393  001F4A  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3394  001F4C  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3395  001F4E  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3396  001F50  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3397  001F52  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3398  001F54  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3399  001F56                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3402  001F56  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3403  001F5A  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3404  001F5E  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3405  001F62  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3406  001F66  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3407  001F6A  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3408  001F6E  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3409  001F72  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3410  001F76  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3411  001F7A  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3412  001F7E  EC29  F019         	call	_dtoa	;wreg free
  3413  001F82  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3414  001F86  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3415  001F8A  EF4F  F011         	goto	l2254
  3416  001F8E                     l8708:
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3420  001F8E  0E66               	movlw	102
  3421  001F90  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3422  001F92  A4D8               	btfss	status,2,c
  3423  001F94  EFCE  F00F         	goto	u9621
  3424  001F98  EFD0  F00F         	goto	u9620
  3425  001F9C                     u9621:
  3426  001F9C  EF22  F010         	goto	l8720
  3427  001FA0                     u9620:
  3428  001FA0                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3431  001FA0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3432  001FA6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3433  001FAC  006F FF7B FFF6     	movff	postinc2,tblptrl
  3434  001FB2  006F FF77 FFF7     	movff	postdec2,tblptrh
  3435  001FB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3436  001FB8  6AF8               	clrf	tblptru,c
  3437  001FBA                     	endif
  3438  001FBA                     	if	0	;tblptru may be non-zero
  3439  001FBA                     	endif
  3440  001FBA  0008               	tblrd		*
  3441  001FBC  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3442  001FC2                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3445  001FC2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3446  001FC8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3447  001FCE  2ADE               	incf	postinc2,f,c
  3448  001FD0  0E00               	movlw	0
  3449  001FD2  22DD               	addwfc	postdec2,f,c
  3450  001FD4                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3453  001FD4  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3454  001FDA  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3455  001FE0  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3456  001FE6  0E04               	movlw	4
  3457  001FE8  26DE               	addwf	postinc2,f,c
  3458  001FEA  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3459  001FF0  0E00               	movlw	0
  3460  001FF2  22DD               	addwfc	postdec2,f,c
  3461  001FF4  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3462  001FFA  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3463  002000  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3464  002006  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3465  00200C  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3466  002012  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3467  002018                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3470  002018  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3471  00201C  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3472  002020  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3473  002024  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3474  002028  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3475  00202C  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3476  002030  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3477  002034  EC67  F008         	call	_efgtoa	;wreg free
  3478  002038  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3479  00203C  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3480  002040  EF4F  F011         	goto	l2254
  3481  002044                     l8720:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3485  002044  0EDF               	movlw	low vfpfcnvrt@ct
  3486  002046  6E14               	movwf	strncmp@_l^0,c
  3487  002048  0E00               	movlw	high vfpfcnvrt@ct
  3488  00204A  6E15               	movwf	(strncmp@_l+1)^0,c
  3489  00204C  0EC9               	movlw	low STR_24
  3490  00204E  6E16               	movwf	strncmp@_r^0,c
  3491  002050  0E10               	movlw	high STR_24
  3492  002052  6E17               	movwf	(strncmp@_r+1)^0,c
  3493  002054  0E00               	movlw	0
  3494  002056  6E19               	movwf	(strncmp@n+1)^0,c
  3495  002058  0E02               	movlw	2
  3496  00205A  6E18               	movwf	strncmp@n^0,c
  3497  00205C  ECA7  F024         	call	_strncmp	;wreg free
  3498  002060  5014               	movf	?_strncmp^0,w,c
  3499  002062  1015               	iorwf	(?_strncmp+1)^0,w,c
  3500  002064  A4D8               	btfss	status,2,c
  3501  002066  EF37  F010         	goto	u9631
  3502  00206A  EF39  F010         	goto	u9630
  3503  00206E                     u9631:
  3504  00206E  EFEC  F010         	goto	l8736
  3505  002072                     u9630:
  3506  002072                     
  3507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3508  002072  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3509  002078  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3510  00207E  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3511  002084  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3512  00208A  0E01               	movlw	1
  3513  00208C  0100               	movlb	0	; () banked
  3514  00208E  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3515  002090  0E00               	movlw	0
  3516  002092  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3517  002094  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3518  00209A  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3519  0020A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3520  0020A0  6AF8               	clrf	tblptru,c
  3521  0020A2                     	endif
  3522  0020A2                     	if	0	;tblptru may be non-zero
  3523  0020A2                     	endif
  3524  0020A2  0008               	tblrd		*
  3525  0020A4  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3526  0020AA  0EBF               	movlw	191
  3527  0020AC  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3528  0020AE  0EFF               	movlw	255
  3529  0020B0  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3530  0020B2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3531  0020B8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3532  0020BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  3533  0020C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  3534  0020CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3535  0020CA  6AF8               	clrf	tblptru,c
  3536  0020CC                     	endif
  3537  0020CC                     	if	0	;tblptru may be non-zero
  3538  0020CC                     	endif
  3539  0020CC  0008               	tblrd		*
  3540  0020CE  50F5               	movf	tablat,w,c
  3541  0020D0  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3542  0020D2  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3543  0020D4  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3544  0020D6  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3545  0020D8  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3546  0020DA  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3547  0020DC  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3548  0020DE  E10A               	bnz	u9640
  3549  0020E0  0E1A               	movlw	26
  3550  0020E2  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3551  0020E4  A0D8               	btfss	status,0,c
  3552  0020E6  EF77  F010         	goto	u9641
  3553  0020EA  EF7A  F010         	goto	u9640
  3554  0020EE                     u9641:
  3555  0020EE  0E01               	movlw	1
  3556  0020F0  EF7B  F010         	goto	u9650
  3557  0020F4                     u9640:
  3558  0020F4  0E00               	movlw	0
  3559  0020F6                     u9650:
  3560  0020F6  6FD9               	movwf	_vfpfcnvrt$3593& (0+255),b
  3561  0020F8  6BDA               	clrf	(_vfpfcnvrt$3593+1)& (0+255),b
  3562  0020FA                     
  3563                           ; BSR set to: 0
  3564  0020FA  51D9               	movf	_vfpfcnvrt$3593& (0+255),w,b
  3565  0020FC  11DA               	iorwf	(_vfpfcnvrt$3593+1)& (0+255),w,b
  3566  0020FE  B4D8               	btfsc	status,2,c
  3567  002100  EF84  F010         	goto	u9661
  3568  002104  EF86  F010         	goto	u9660
  3569  002108                     u9661:
  3570  002108  EFAA  F010         	goto	l8730
  3571  00210C                     u9660:
  3572  00210C                     
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3575  00210C  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3576  002112  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3577  002118  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3578  00211E  0E04               	movlw	4
  3579  002120  26DE               	addwf	postinc2,f,c
  3580  002122  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3581  002128  0E00               	movlw	0
  3582  00212A  22DD               	addwfc	postdec2,f,c
  3583  00212C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3584  002132  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3585  002138  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3586  00213E  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3587  002144  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3588  00214A  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3591  002150  EFCC  F010         	goto	l2262
  3592  002154                     l8730:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3596  002154  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3597  00215A  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3598  002160  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3599  002166  0E04               	movlw	4
  3600  002168  26DE               	addwf	postinc2,f,c
  3601  00216A  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3602  002170  0E00               	movlw	0
  3603  002172  22DD               	addwfc	postdec2,f,c
  3604  002174  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3605  00217A  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3606  002180  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3607  002186  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3608  00218C  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3609  002192  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3610  002198                     l2262:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3614  002198  0E02               	movlw	2
  3615  00219A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3616  0021A0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3617  0021A6  26DE               	addwf	postinc2,f,c
  3618  0021A8  0E00               	movlw	0
  3619  0021AA  22DD               	addwfc	postdec2,f,c
  3620  0021AC                     
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3623  0021AC  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3624  0021B0  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3625  0021B4  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3626  0021B8  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3627  0021BC  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3628  0021C0  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3629  0021C4  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3630  0021C8  EC67  F008         	call	_efgtoa	;wreg free
  3631  0021CC  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3632  0021D0  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3633  0021D4  EF4F  F011         	goto	l2254
  3634  0021D8                     l8736:
  3635                           
  3636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3637  0021D8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3638  0021DE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3639  0021E4  006F FF7B FFF6     	movff	postinc2,tblptrl
  3640  0021EA  006F FF77 FFF7     	movff	postdec2,tblptrh
  3641  0021F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3642  0021F0  6AF8               	clrf	tblptru,c
  3643  0021F2                     	endif
  3644  0021F2                     	if	0	;tblptru may be non-zero
  3645  0021F2                     	endif
  3646  0021F2  0008               	tblrd		*
  3647  0021F4  50F5               	movf	tablat,w,c
  3648  0021F6  0A25               	xorlw	37
  3649  0021F8  A4D8               	btfss	status,2,c
  3650  0021FA  EF01  F011         	goto	u9671
  3651  0021FE  EF03  F011         	goto	u9670
  3652  002202                     u9671:
  3653  002202  EF1D  F011         	goto	l8746
  3654  002206                     u9670:
  3655  002206                     
  3656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3657  002206  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3658  00220C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3659  002212  2ADE               	incf	postinc2,f,c
  3660  002214  0E00               	movlw	0
  3661  002216  22DD               	addwfc	postdec2,f,c
  3662  002218                     
  3663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3664  002218  0E00               	movlw	0
  3665  00221A  6E17               	movwf	(fputc@c+1)^0,c
  3666  00221C  0E25               	movlw	37
  3667  00221E  6E16               	movwf	fputc@c^0,c
  3668  002220  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3669  002224  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3670  002228  EC19  F028         	call	_fputc	;wreg free
  3671  00222C                     l8742:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3674  00222C  0E00               	movlw	0
  3675  00222E  0100               	movlb	0	; () banked
  3676  002230  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3677  002232  0E01               	movlw	1
  3678  002234  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3679  002236  EF4F  F011         	goto	l2254
  3680  00223A                     l8746:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3683  00223A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3684  002240  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3685  002246  2ADE               	incf	postinc2,f,c
  3686  002248  0E00               	movlw	0
  3687  00224A  22DD               	addwfc	postdec2,f,c
  3688  00224C                     
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3690  00224C  0E00               	movlw	0
  3691  00224E  0100               	movlb	0	; () banked
  3692  002250  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3693  002252  0E00               	movlw	0
  3694  002254  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3695  002256  EF4F  F011         	goto	l2254
  3696  00225A                     l8752:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3699  00225A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3700  002260  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3701  002266  006F FF7B FFF6     	movff	postinc2,tblptrl
  3702  00226C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3703  002272                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3704  002272  6AF8               	clrf	tblptru,c
  3705  002274                     	endif
  3706  002274                     	if	0	;tblptru may be non-zero
  3707  002274                     	endif
  3708  002274  0008               	tblrd		*
  3709  002276  50F5               	movf	tablat,w,c
  3710  002278  6E16               	movwf	fputc@c^0,c
  3711  00227A  6A17               	clrf	(fputc@c+1)^0,c
  3712  00227C  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3713  002280  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3714  002284  EC19  F028         	call	_fputc	;wreg free
  3715  002288                     
  3716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3717  002288  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3718  00228E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3719  002294  2ADE               	incf	postinc2,f,c
  3720  002296  0E00               	movlw	0
  3721  002298  22DD               	addwfc	postdec2,f,c
  3722  00229A  EF16  F011         	goto	l8742
  3723  00229E                     l2254:
  3724  00229E  0012               	return		;funcret
  3725  0022A0                     __end_of_vfpfcnvrt:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _strncmp *****************
  3729 ;; Defined at:
  3730 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3733 ;;		 -> vfpfcnvrt@ct(3), 
  3734 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  3735 ;;		 -> STR_26(3), 
  3736 ;;  n               2   23[COMRAM] unsigned int 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  r               2   28[COMRAM] PTR const unsigned char 
  3739 ;;		 -> STR_26(3), 
  3740 ;;  l               2   26[COMRAM] PTR const unsigned char 
  3741 ;;		 -> vfpfcnvrt@ct(3), 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  2   19[COMRAM] int 
  3744 ;; Registers used:
  3745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3751 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;Total ram usage:       11 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; Hardware stack levels required when called: 8
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_vfpfcnvrt
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text9
  3766  00494E                     __ptext9:
  3767                           	callstack 0
  3768  00494E                     _strncmp:
  3769                           	callstack 17
  3770  00494E  C014  F01B         	movff	strncmp@_l,strncmp@l
  3771  004952  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  3772  004956  C016  F01D         	movff	strncmp@_r,strncmp@r
  3773  00495A  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  3774  00495E  0618               	decf	strncmp@n^0,f,c
  3775  004960  A0D8               	btfss	status,0,c
  3776  004962  0619               	decf	(strncmp@n+1)^0,f,c
  3777  004964  2818               	incf	strncmp@n^0,w,c
  3778  004966  E106               	bnz	u9521
  3779  004968  2819               	incf	(strncmp@n+1)^0,w,c
  3780  00496A  A4D8               	btfss	status,2,c
  3781  00496C  EFBA  F024         	goto	u9521
  3782  004970  EFBC  F024         	goto	u9520
  3783  004974                     u9521:
  3784  004974  EFC9  F024         	goto	l8668
  3785  004978                     u9520:
  3786  004978  0E00               	movlw	0
  3787  00497A  6E15               	movwf	(?_strncmp+1)^0,c
  3788  00497C  0E00               	movlw	0
  3789  00497E  6E14               	movwf	?_strncmp^0,c
  3790  004980  EF20  F025         	goto	l2342
  3791  004984                     l8666:
  3792  004984  4A1B               	infsnz	strncmp@l^0,f,c
  3793  004986  2A1C               	incf	(strncmp@l+1)^0,f,c
  3794  004988  4A1D               	infsnz	strncmp@r^0,f,c
  3795  00498A  2A1E               	incf	(strncmp@r+1)^0,f,c
  3796  00498C  0618               	decf	strncmp@n^0,f,c
  3797  00498E  A0D8               	btfss	status,0,c
  3798  004990  0619               	decf	(strncmp@n+1)^0,f,c
  3799  004992                     l8668:
  3800  004992  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  3801  004998  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  3802  00499E  50DF               	movf	indf2,w,c
  3803  0049A0  B4D8               	btfsc	status,2,c
  3804  0049A2  EFD5  F024         	goto	u9531
  3805  0049A6  EFD7  F024         	goto	u9530
  3806  0049AA                     u9531:
  3807  0049AA  EF0A  F025         	goto	l8676
  3808  0049AE                     u9530:
  3809  0049AE  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  3810  0049B4  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  3811  0049BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3812  0049BA  6AF8               	clrf	tblptru,c
  3813  0049BC                     	endif
  3814  0049BC                     	if	0	;tblptru may be non-zero
  3815  0049BC                     	endif
  3816  0049BC  0008               	tblrd		*
  3817  0049BE  50F5               	movf	tablat,w,c
  3818  0049C0  0900               	iorlw	0
  3819  0049C2  B4D8               	btfsc	status,2,c
  3820  0049C4  EFE6  F024         	goto	u9541
  3821  0049C8  EFE8  F024         	goto	u9540
  3822  0049CC                     u9541:
  3823  0049CC  EF0A  F025         	goto	l8676
  3824  0049D0                     u9540:
  3825  0049D0  5018               	movf	strncmp@n^0,w,c
  3826  0049D2  1019               	iorwf	(strncmp@n+1)^0,w,c
  3827  0049D4  B4D8               	btfsc	status,2,c
  3828  0049D6  EFEF  F024         	goto	u9551
  3829  0049DA  EFF1  F024         	goto	u9550
  3830  0049DE                     u9551:
  3831  0049DE  EF0A  F025         	goto	l8676
  3832  0049E2                     u9550:
  3833  0049E2  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  3834  0049E8  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  3835  0049EE  50DF               	movf	indf2,w,c
  3836  0049F0  6E1A               	movwf	??_strncmp^0,c
  3837  0049F2  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  3838  0049F8  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  3839  0049FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3840  0049FE  6AF8               	clrf	tblptru,c
  3841  004A00                     	endif
  3842  004A00                     	if	0	;tblptru may be non-zero
  3843  004A00                     	endif
  3844  004A00  0008               	tblrd		*
  3845  004A02  50F5               	movf	tablat,w,c
  3846  004A04  181A               	xorwf	??_strncmp^0,w,c
  3847  004A06  B4D8               	btfsc	status,2,c
  3848  004A08  EF08  F025         	goto	u9561
  3849  004A0C  EF0A  F025         	goto	u9560
  3850  004A10                     u9561:
  3851  004A10  EFC2  F024         	goto	l8666
  3852  004A14                     u9560:
  3853  004A14                     l8676:
  3854  004A14  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  3855  004A1A  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  3856  004A20  50DF               	movf	indf2,w,c
  3857  004A22  6E1A               	movwf	??_strncmp^0,c
  3858  004A24  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  3859  004A2A  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  3860  004A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3861  004A30  6AF8               	clrf	tblptru,c
  3862  004A32                     	endif
  3863  004A32                     	if	0	;tblptru may be non-zero
  3864  004A32                     	endif
  3865  004A32  0008               	tblrd		*
  3866  004A34  50F5               	movf	tablat,w,c
  3867  004A36  5C1A               	subwf	??_strncmp^0,w,c
  3868  004A38  6E14               	movwf	?_strncmp^0,c
  3869  004A3A  6A15               	clrf	(?_strncmp+1)^0,c
  3870  004A3C  A0D8               	btfss	status,0,c
  3871  004A3E  0615               	decf	(?_strncmp+1)^0,f,c
  3872  004A40                     l2342:
  3873  004A40  0012               	return		;funcret
  3874  004A42                     __end_of_strncmp:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _efgtoa *****************
  3878 ;; Defined at:
  3879 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  3882 ;;		 -> NULL(0), 
  3883 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  3884 ;;  c               1   41[BANK0 ] unsigned char 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  u               4   99[BANK0 ] unsigned char 
  3887 ;;  g               4   91[BANK0 ] unsigned char 
  3888 ;;  l               4   85[BANK0 ] unsigned char 
  3889 ;;  h               4   81[BANK0 ] unsigned char 
  3890 ;;  ou              4   67[BANK0 ] unsigned char 
  3891 ;;  n               2   97[BANK0 ] int 
  3892 ;;  e               2   95[BANK0 ] int 
  3893 ;;  i               2   89[BANK0 ] int 
  3894 ;;  w               2   77[BANK0 ] int 
  3895 ;;  p               2   75[BANK0 ] int 
  3896 ;;  sign            2   73[BANK0 ] int 
  3897 ;;  d               2   71[BANK0 ] int 
  3898 ;;  m               2   65[BANK0 ] int 
  3899 ;;  ne              2   63[BANK0 ] int 
  3900 ;;  pp              2   61[BANK0 ] int 
  3901 ;;  t               2   59[BANK0 ] int 
  3902 ;;  mode            1   80[BANK0 ] unsigned char 
  3903 ;;  nmode           1   79[BANK0 ] unsigned char 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  2   35[BANK0 ] int 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3913 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;Total ram usage:       68 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 13
  3920 ;; This function calls:
  3921 ;;		___awdiv
  3922 ;;		___awmod
  3923 ;;		___fladd
  3924 ;;		___fldiv
  3925 ;;		___fleq
  3926 ;;		___flge
  3927 ;;		___flmul
  3928 ;;		___flneg
  3929 ;;		___flsub
  3930 ;;		___fltol
  3931 ;;		___fpclassifyf
  3932 ;;		_floorf
  3933 ;;		_isupper
  3934 ;;		_pad
  3935 ;;		_strcpy
  3936 ;;		_tolower
  3937 ;; This function is called by:
  3938 ;;		_vfpfcnvrt
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text10
  3943  0010CE                     __ptext10:
  3944                           	callstack 0
  3945  0010CE                     _efgtoa:
  3946                           	callstack 12
  3947  0010CE                     
  3948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3949  0010CE  0E00               	movlw	0
  3950  0010D0  0100               	movlb	0	; () banked
  3951  0010D2  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  3952  0010D4  0E00               	movlw	0
  3953  0010D6  6FA9               	movwf	efgtoa@sign& (0+255),b
  3954  0010D8                     
  3955                           ; BSR set to: 0
  3956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3957  0010D8  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  3958  0010DC  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  3959  0010E0  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  3960  0010E4  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  3961  0010E8                     
  3962                           ; BSR set to: 0
  3963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3964  0010E8  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3965  0010EA  EF7B  F008         	goto	u8980
  3966  0010EE  EF79  F008         	goto	u8981
  3967  0010F2                     u8981:
  3968  0010F2  EF91  F008         	goto	l8362
  3969  0010F6                     u8980:
  3970  0010F6                     
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3973  0010F6  0E00               	movlw	0
  3974  0010F8  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  3975  0010FA  0E01               	movlw	1
  3976  0010FC  6FA9               	movwf	efgtoa@sign& (0+255),b
  3977  0010FE                     
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3980  0010FE  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  3981  001102  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  3982  001106  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  3983  00110A  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  3984  00110E  ECE5  F02B         	call	___flneg	;wreg free
  3985  001112  C014  F0BB         	movff	?___flneg,efgtoa@g
  3986  001116  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  3987  00111A  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  3988  00111E  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  3989  001122                     l8362:
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3992  001122  0E00               	movlw	0
  3993  001124  0100               	movlb	0	; () banked
  3994  001126  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  3995  001128  0E00               	movlw	0
  3996  00112A  6FC1               	movwf	efgtoa@n& (0+255),b
  3997  00112C                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4000  00112C  C0E5  F0AD         	movff	_width,efgtoa@w
  4001  001130  C0E6  F0AE         	movff	_width+1,efgtoa@w+1
  4002  001134                     
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4005  001134  51A9               	movf	efgtoa@sign& (0+255),w,b
  4006  001136  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4007  001138  A4D8               	btfss	status,2,c
  4008  00113A  EFA1  F008         	goto	u8991
  4009  00113E  EFA3  F008         	goto	u8990
  4010  001142                     u8991:
  4011  001142  EFAA  F008         	goto	l8370
  4012  001146                     u8990:
  4013  001146                     
  4014                           ; BSR set to: 0
  4015  001146  A43C               	btfss	_flags^0,2,c
  4016  001148  EFA8  F008         	goto	u9001
  4017  00114C  EFAA  F008         	goto	u9000
  4018  001150                     u9001:
  4019  001150  EFC4  F008         	goto	l8382
  4020  001154                     u9000:
  4021  001154                     l8370:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4025  001154  51A9               	movf	efgtoa@sign& (0+255),w,b
  4026  001156  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4027  001158  A4D8               	btfss	status,2,c
  4028  00115A  EFB1  F008         	goto	u9011
  4029  00115E  EFB3  F008         	goto	u9010
  4030  001162                     u9011:
  4031  001162  EFB9  F008         	goto	l8374
  4032  001166                     u9010:
  4033  001166                     
  4034                           ; BSR set to: 0
  4035  001166  0E00               	movlw	0
  4036  001168  6F90               	movwf	(_efgtoa$3564+1)& (0+255),b
  4037  00116A  0E2B               	movlw	43
  4038  00116C  6F8F               	movwf	_efgtoa$3564& (0+255),b
  4039  00116E  EFBD  F008         	goto	l8376
  4040  001172                     l8374:
  4041                           
  4042                           ; BSR set to: 0
  4043  001172  0E00               	movlw	0
  4044  001174  6F90               	movwf	(_efgtoa$3564+1)& (0+255),b
  4045  001176  0E2D               	movlw	45
  4046  001178  6F8F               	movwf	_efgtoa$3564& (0+255),b
  4047  00117A                     l8376:
  4048                           
  4049                           ; BSR set to: 0
  4050  00117A  C08F  F13A         	movff	_efgtoa$3564,_dbuf
  4051  00117E                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4054  00117E  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4055  001180  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4056  001182                     
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4059  001182  07AD               	decf	efgtoa@w& (0+255),f,b
  4060  001184  A0D8               	btfss	status,0,c
  4061  001186  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4062  001188                     l8382:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4066  001188  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4067  00118C  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4068  001190  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4069  001194  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4070  001198  EC28  F024         	call	___fpclassifyf	;wreg free
  4071  00119C  0414               	decf	?___fpclassifyf^0,w,c
  4072  00119E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4073  0011A0  A4D8               	btfss	status,2,c
  4074  0011A2  EFD5  F008         	goto	u9021
  4075  0011A6  EFD7  F008         	goto	u9020
  4076  0011AA                     u9021:
  4077  0011AA  EF2E  F009         	goto	l8400
  4078  0011AE                     u9020:
  4079  0011AE  0EBF               	movlw	191
  4080  0011B0  0100               	movlb	0	; () banked
  4081  0011B2  6F8A               	movwf	??_efgtoa& (0+255),b
  4082  0011B4  0EFF               	movlw	255
  4083  0011B6  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4084  0011B8  5189               	movf	efgtoa@c& (0+255),w,b
  4085  0011BA  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4086  0011BC  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4087  0011BE  518A               	movf	??_efgtoa& (0+255),w,b
  4088  0011C0  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4089  0011C2  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4090  0011C4  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4091  0011C6  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4092  0011C8  E10A               	bnz	u9030
  4093  0011CA  0E1A               	movlw	26
  4094  0011CC  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4095  0011CE  A0D8               	btfss	status,0,c
  4096  0011D0  EFEC  F008         	goto	u9031
  4097  0011D4  EFEF  F008         	goto	u9030
  4098  0011D8                     u9031:
  4099  0011D8  0E01               	movlw	1
  4100  0011DA  EFF0  F008         	goto	u9040
  4101  0011DE                     u9030:
  4102  0011DE  0E00               	movlw	0
  4103  0011E0                     u9040:
  4104  0011E0  6F91               	movwf	_efgtoa$3565& (0+255),b
  4105  0011E2  6B92               	clrf	(_efgtoa$3565+1)& (0+255),b
  4106  0011E4                     
  4107                           ; BSR set to: 0
  4108  0011E4  5191               	movf	_efgtoa$3565& (0+255),w,b
  4109  0011E6  1192               	iorwf	(_efgtoa$3565+1)& (0+255),w,b
  4110  0011E8  B4D8               	btfsc	status,2,c
  4111  0011EA  EFF9  F008         	goto	u9051
  4112  0011EE  EFFB  F008         	goto	u9050
  4113  0011F2                     u9051:
  4114  0011F2  EF09  F009         	goto	l8392
  4115  0011F6                     u9050:
  4116  0011F6                     
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4119  0011F6  0E3A               	movlw	low _dbuf
  4120  0011F8  25C1               	addwf	efgtoa@n& (0+255),w,b
  4121  0011FA  6E14               	movwf	strcpy@dest^0,c
  4122  0011FC  0E01               	movlw	high _dbuf
  4123  0011FE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4124  001200  6E15               	movwf	(strcpy@dest+1)^0,c
  4125  001202  0EB9               	movlw	low STR_16
  4126  001204  6E16               	movwf	strcpy@src^0,c
  4127  001206  0E10               	movlw	high STR_16
  4128  001208  6E17               	movwf	(strcpy@src+1)^0,c
  4129  00120A  EC69  F029         	call	_strcpy	;wreg free
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4132  00120E  EF15  F009         	goto	l8394
  4133  001212                     l8392:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4137  001212  0E3A               	movlw	low _dbuf
  4138  001214  25C1               	addwf	efgtoa@n& (0+255),w,b
  4139  001216  6E14               	movwf	strcpy@dest^0,c
  4140  001218  0E01               	movlw	high _dbuf
  4141  00121A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4142  00121C  6E15               	movwf	(strcpy@dest+1)^0,c
  4143  00121E  0EC1               	movlw	low STR_17
  4144  001220  6E16               	movwf	strcpy@src^0,c
  4145  001222  0E10               	movlw	high STR_17
  4146  001224  6E17               	movwf	(strcpy@src+1)^0,c
  4147  001226  EC69  F029         	call	_strcpy	;wreg free
  4148  00122A                     l8394:
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4151  00122A  0100               	movlb	0	; () banked
  4152  00122C  0EFD               	movlw	253
  4153  00122E  27AD               	addwf	efgtoa@w& (0+255),f,b
  4154  001230  0EFF               	movlw	255
  4155  001232  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4156  001234                     
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4159  001234  C083  F026         	movff	efgtoa@fp,pad@fp
  4160  001238  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4161  00123C  0E3A               	movlw	low _dbuf
  4162  00123E  6E28               	movwf	pad@buf^0,c
  4163  001240  0E01               	movlw	high _dbuf
  4164  001242  6E29               	movwf	(pad@buf+1)^0,c
  4165  001244  C0AD  F02A         	movff	efgtoa@w,pad@p
  4166  001248  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4167  00124C  EC59  F026         	call	_pad	;wreg free
  4168  001250  C026  F083         	movff	?_pad,?_efgtoa
  4169  001254  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4170  001258  EFBD  F00E         	goto	l2170
  4171  00125C                     l8400:
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4174  00125C  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4175  001260  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4176  001264  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4177  001268  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4178  00126C  EC28  F024         	call	___fpclassifyf	;wreg free
  4179  001270  5014               	movf	?___fpclassifyf^0,w,c
  4180  001272  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4181  001274  A4D8               	btfss	status,2,c
  4182  001276  EF3F  F009         	goto	u9061
  4183  00127A  EF41  F009         	goto	u9060
  4184  00127E                     u9061:
  4185  00127E  EF98  F009         	goto	l8418
  4186  001282                     u9060:
  4187  001282  0EBF               	movlw	191
  4188  001284  0100               	movlb	0	; () banked
  4189  001286  6F8A               	movwf	??_efgtoa& (0+255),b
  4190  001288  0EFF               	movlw	255
  4191  00128A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4192  00128C  5189               	movf	efgtoa@c& (0+255),w,b
  4193  00128E  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4194  001290  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4195  001292  518A               	movf	??_efgtoa& (0+255),w,b
  4196  001294  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4197  001296  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4198  001298  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4199  00129A  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4200  00129C  E10A               	bnz	u9070
  4201  00129E  0E1A               	movlw	26
  4202  0012A0  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4203  0012A2  A0D8               	btfss	status,0,c
  4204  0012A4  EF56  F009         	goto	u9071
  4205  0012A8  EF59  F009         	goto	u9070
  4206  0012AC                     u9071:
  4207  0012AC  0E01               	movlw	1
  4208  0012AE  EF5A  F009         	goto	u9080
  4209  0012B2                     u9070:
  4210  0012B2  0E00               	movlw	0
  4211  0012B4                     u9080:
  4212  0012B4  6F93               	movwf	_efgtoa$3569& (0+255),b
  4213  0012B6  6B94               	clrf	(_efgtoa$3569+1)& (0+255),b
  4214  0012B8                     
  4215                           ; BSR set to: 0
  4216  0012B8  5193               	movf	_efgtoa$3569& (0+255),w,b
  4217  0012BA  1194               	iorwf	(_efgtoa$3569+1)& (0+255),w,b
  4218  0012BC  B4D8               	btfsc	status,2,c
  4219  0012BE  EF63  F009         	goto	u9091
  4220  0012C2  EF65  F009         	goto	u9090
  4221  0012C6                     u9091:
  4222  0012C6  EF73  F009         	goto	l8410
  4223  0012CA                     u9090:
  4224  0012CA                     
  4225                           ; BSR set to: 0
  4226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4227  0012CA  0E3A               	movlw	low _dbuf
  4228  0012CC  25C1               	addwf	efgtoa@n& (0+255),w,b
  4229  0012CE  6E14               	movwf	strcpy@dest^0,c
  4230  0012D0  0E01               	movlw	high _dbuf
  4231  0012D2  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4232  0012D4  6E15               	movwf	(strcpy@dest+1)^0,c
  4233  0012D6  0EBD               	movlw	low STR_20
  4234  0012D8  6E16               	movwf	strcpy@src^0,c
  4235  0012DA  0E10               	movlw	high STR_20
  4236  0012DC  6E17               	movwf	(strcpy@src+1)^0,c
  4237  0012DE  EC69  F029         	call	_strcpy	;wreg free
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4240  0012E2  EF7F  F009         	goto	l8412
  4241  0012E6                     l8410:
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4245  0012E6  0E3A               	movlw	low _dbuf
  4246  0012E8  25C1               	addwf	efgtoa@n& (0+255),w,b
  4247  0012EA  6E14               	movwf	strcpy@dest^0,c
  4248  0012EC  0E01               	movlw	high _dbuf
  4249  0012EE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4250  0012F0  6E15               	movwf	(strcpy@dest+1)^0,c
  4251  0012F2  0EC5               	movlw	low STR_21
  4252  0012F4  6E16               	movwf	strcpy@src^0,c
  4253  0012F6  0E10               	movlw	high STR_21
  4254  0012F8  6E17               	movwf	(strcpy@src+1)^0,c
  4255  0012FA  EC69  F029         	call	_strcpy	;wreg free
  4256  0012FE                     l8412:
  4257                           
  4258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4259  0012FE  0100               	movlb	0	; () banked
  4260  001300  0EFD               	movlw	253
  4261  001302  27AD               	addwf	efgtoa@w& (0+255),f,b
  4262  001304  0EFF               	movlw	255
  4263  001306  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4264  001308                     
  4265                           ; BSR set to: 0
  4266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4267  001308  C083  F026         	movff	efgtoa@fp,pad@fp
  4268  00130C  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4269  001310  0E3A               	movlw	low _dbuf
  4270  001312  6E28               	movwf	pad@buf^0,c
  4271  001314  0E01               	movlw	high _dbuf
  4272  001316  6E29               	movwf	(pad@buf+1)^0,c
  4273  001318  C0AD  F02A         	movff	efgtoa@w,pad@p
  4274  00131C  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4275  001320  EC59  F026         	call	_pad	;wreg free
  4276  001324  C026  F083         	movff	?_pad,?_efgtoa
  4277  001328  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4278  00132C  EFBD  F00E         	goto	l2170
  4279  001330                     l8418:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4282  001330  0E00               	movlw	0
  4283  001332  0100               	movlb	0	; () banked
  4284  001334  6FC3               	movwf	efgtoa@u& (0+255),b
  4285  001336  0E00               	movlw	0
  4286  001338  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4287  00133A  0E80               	movlw	128
  4288  00133C  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4289  00133E  0E3F               	movlw	63
  4290  001340  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4291                           
  4292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4293  001342  0E00               	movlw	0
  4294  001344  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4295  001346  0E00               	movlw	0
  4296  001348  6FBF               	movwf	efgtoa@e& (0+255),b
  4297  00134A                     
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4300  00134A  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4301  00134E  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4302  001352  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4303  001356  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4304  00135A  0E00               	movlw	0
  4305  00135C  6E18               	movwf	___fleq@ff2^0,c
  4306  00135E  0E00               	movlw	0
  4307  001360  6E19               	movwf	(___fleq@ff2+1)^0,c
  4308  001362  0E00               	movlw	0
  4309  001364  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4310  001366  0E00               	movlw	0
  4311  001368  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4312  00136A  EC72  F027         	call	___fleq	;wreg free
  4313  00136E  B0D8               	btfsc	status,0,c
  4314  001370  EFBC  F009         	goto	u9101
  4315  001374  EFBE  F009         	goto	u9100
  4316  001378                     u9101:
  4317  001378  EF43  F00A         	goto	l8436
  4318  00137C                     u9100:
  4319  00137C  EFDD  F009         	goto	l8428
  4320  001380                     l8424:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4324  001380  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4325  001384  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4326  001388  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4327  00138C  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4328  001390  0E00               	movlw	0
  4329  001392  6E2E               	movwf	___flmul@a^0,c
  4330  001394  0E00               	movlw	0
  4331  001396  6E2F               	movwf	(___flmul@a+1)^0,c
  4332  001398  0E20               	movlw	32
  4333  00139A  6E30               	movwf	(___flmul@a+2)^0,c
  4334  00139C  0E41               	movlw	65
  4335  00139E  6E31               	movwf	(___flmul@a+3)^0,c
  4336  0013A0  ECB1  F013         	call	___flmul	;wreg free
  4337  0013A4  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4338  0013A8  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4339  0013AC  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4340  0013B0  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4341  0013B4                     
  4342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4343  0013B4  0100               	movlb	0	; () banked
  4344  0013B6  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4345  0013B8  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4346  0013BA                     l8428:
  4347                           
  4348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4349  0013BA  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4350  0013BE  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4351  0013C2  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4352  0013C6  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4353  0013CA  0E00               	movlw	0
  4354  0013CC  6E2E               	movwf	___flmul@a^0,c
  4355  0013CE  0E00               	movlw	0
  4356  0013D0  6E2F               	movwf	(___flmul@a+1)^0,c
  4357  0013D2  0E20               	movlw	32
  4358  0013D4  6E30               	movwf	(___flmul@a+2)^0,c
  4359  0013D6  0E41               	movlw	65
  4360  0013D8  6E31               	movwf	(___flmul@a+3)^0,c
  4361  0013DA  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4362  0013DE  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4363  0013E2  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4364  0013E6  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4365  0013EA  ECB1  F013         	call	___flmul	;wreg free
  4366  0013EE  C02A  F071         	movff	?___flmul,___flge@ff2
  4367  0013F2  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4368  0013F6  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4369  0013FA  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4370  0013FE  ECA5  F023         	call	___flge	;wreg free
  4371  001402  0100               	movlb	0	; () banked
  4372  001404  B0D8               	btfsc	status,0,c
  4373  001406  EF07  F00A         	goto	u9111
  4374  00140A  EF09  F00A         	goto	u9110
  4375  00140E                     u9111:
  4376  00140E  EFC0  F009         	goto	l8424
  4377  001412                     u9110:
  4378  001412  EF29  F00A         	goto	l8434
  4379  001416                     l8430:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4383  001416  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  4384  00141A  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4385  00141E  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4386  001422  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4387  001426  0E00               	movlw	0
  4388  001428  6E2E               	movwf	___fldiv@a^0,c
  4389  00142A  0E00               	movlw	0
  4390  00142C  6E2F               	movwf	(___fldiv@a+1)^0,c
  4391  00142E  0E20               	movlw	32
  4392  001430  6E30               	movwf	(___fldiv@a+2)^0,c
  4393  001432  0E41               	movlw	65
  4394  001434  6E31               	movwf	(___fldiv@a+3)^0,c
  4395  001436  ECD9  F015         	call	___fldiv	;wreg free
  4396  00143A  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  4397  00143E  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4398  001442  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4399  001446  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4400  00144A                     
  4401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4402  00144A  0100               	movlb	0	; () banked
  4403  00144C  07BF               	decf	efgtoa@e& (0+255),f,b
  4404  00144E  A0D8               	btfss	status,0,c
  4405  001450  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4406  001452                     l8434:
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4410  001452  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4411  001456  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4412  00145A  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4413  00145E  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4414  001462  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4415  001466  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4416  00146A  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4417  00146E  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4418  001472  ECA5  F023         	call	___flge	;wreg free
  4419  001476  0100               	movlb	0	; () banked
  4420  001478  A0D8               	btfss	status,0,c
  4421  00147A  EF41  F00A         	goto	u9121
  4422  00147E  EF43  F00A         	goto	u9120
  4423  001482                     u9121:
  4424  001482  EF0B  F00A         	goto	l8430
  4425  001486                     u9120:
  4426  001486                     l8436:
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4429  001486  C089  F01A         	movff	efgtoa@c,tolower@c
  4430  00148A  6A1B               	clrf	(tolower@c+1)^0,c
  4431  00148C  EC9E  F029         	call	_tolower	;wreg free
  4432  001490  501A               	movf	?_tolower^0,w,c
  4433  001492  0100               	movlb	0	; () banked
  4434  001494  6FB0               	movwf	efgtoa@mode& (0+255),b
  4435  001496                     
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4438  001496  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  4439  00149A                     
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4442  00149A  0E67               	movlw	103
  4443  00149C  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4444  00149E  A4D8               	btfss	status,2,c
  4445  0014A0  EF54  F00A         	goto	u9131
  4446  0014A4  EF56  F00A         	goto	u9130
  4447  0014A8                     u9131:
  4448  0014A8  EF7C  F00A         	goto	l8450
  4449  0014AC                     u9130:
  4450  0014AC                     
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4453  0014AC  503A               	movf	_prec^0,w,c
  4454  0014AE  103B               	iorwf	(_prec+1)^0,w,c
  4455  0014B0  A4D8               	btfss	status,2,c
  4456  0014B2  EF5D  F00A         	goto	u9141
  4457  0014B6  EF5F  F00A         	goto	u9140
  4458  0014BA                     u9141:
  4459  0014BA  EF63  F00A         	goto	l8446
  4460  0014BE                     u9140:
  4461  0014BE                     
  4462                           ; BSR set to: 0
  4463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4464  0014BE  0E00               	movlw	0
  4465  0014C0  6E3B               	movwf	(_prec+1)^0,c
  4466  0014C2  0E01               	movlw	1
  4467  0014C4  6E3A               	movwf	_prec^0,c
  4468  0014C6                     l8446:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4472  0014C6  BE3B               	btfsc	(_prec+1)^0,7,c
  4473  0014C8  EF70  F00A         	goto	u9150
  4474  0014CC  503B               	movf	(_prec+1)^0,w,c
  4475  0014CE  E106               	bnz	u9151
  4476  0014D0  043A               	decf	_prec^0,w,c
  4477  0014D2  B0D8               	btfsc	status,0,c
  4478  0014D4  EF6E  F00A         	goto	u9151
  4479  0014D8  EF70  F00A         	goto	u9150
  4480  0014DC                     u9151:
  4481  0014DC  EF76  F00A         	goto	l2188
  4482  0014E0                     u9150:
  4483  0014E0                     l8448:
  4484                           
  4485                           ; BSR set to: 0
  4486  0014E0  0E00               	movlw	0
  4487  0014E2  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  4488  0014E4  0E06               	movlw	6
  4489  0014E6  6FAB               	movwf	efgtoa@p& (0+255),b
  4490  0014E8  EF85  F00A         	goto	l8456
  4491  0014EC                     l2188:
  4492                           
  4493                           ; BSR set to: 0
  4494  0014EC  C03A  F0AB         	movff	_prec,efgtoa@p
  4495  0014F0  C03B  F0AC         	movff	_prec+1,efgtoa@p+1
  4496  0014F4  EF85  F00A         	goto	l8456
  4497  0014F8                     l8450:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4501  0014F8  BE3B               	btfsc	(_prec+1)^0,7,c
  4502  0014FA  EF81  F00A         	goto	u9161
  4503  0014FE  EF83  F00A         	goto	u9160
  4504  001502                     u9161:
  4505  001502  EF70  F00A         	goto	l8448
  4506  001506                     u9160:
  4507  001506  EF76  F00A         	goto	l2188
  4508  00150A                     l8456:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4512  00150A  0E67               	movlw	103
  4513  00150C  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4514  00150E  A4D8               	btfss	status,2,c
  4515  001510  EF8C  F00A         	goto	u9171
  4516  001514  EF8E  F00A         	goto	u9170
  4517  001518                     u9171:
  4518  001518  EFBD  F00A         	goto	l8466
  4519  00151C                     u9170:
  4520  00151C                     
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4523  00151C  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  4524  00151E  EF9C  F00A         	goto	u9180
  4525  001522  0EFC               	movlw	252
  4526  001524  5DBF               	subwf	efgtoa@e& (0+255),w,b
  4527  001526  0EFF               	movlw	255
  4528  001528  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4529  00152A  A0D8               	btfss	status,0,c
  4530  00152C  EF9A  F00A         	goto	u9181
  4531  001530  EF9C  F00A         	goto	u9180
  4532  001534                     u9181:
  4533  001534  EFBB  F00A         	goto	l8464
  4534  001538                     u9180:
  4535  001538                     
  4536                           ; BSR set to: 0
  4537  001538  0EFF               	movlw	255
  4538  00153A  6F8A               	movwf	??_efgtoa& (0+255),b
  4539  00153C  0EFF               	movlw	255
  4540  00153E  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4541  001540  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  4542  001544  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  4543  001548  518A               	movf	??_efgtoa& (0+255),w,b
  4544  00154A  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4545  00154C  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4546  00154E  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4547  001550  51BF               	movf	efgtoa@e& (0+255),w,b
  4548  001552  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4549  001554  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4550  001556  0A80               	xorlw	128
  4551  001558  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  4552  00155A  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4553  00155C  0A80               	xorlw	128
  4554  00155E  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4555  001560  A0D8               	btfss	status,0,c
  4556  001562  EFB5  F00A         	goto	u9191
  4557  001566  EFB7  F00A         	goto	u9190
  4558  00156A                     u9191:
  4559  00156A  EFBB  F00A         	goto	l8464
  4560  00156E                     u9190:
  4561  00156E                     
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4564  00156E  0E66               	movlw	102
  4565  001570  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4566                           
  4567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4568  001572  EFBD  F00A         	goto	l8466
  4569  001576                     l8464:
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4573  001576  0E65               	movlw	101
  4574  001578  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4575  00157A                     l8466:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4579  00157A  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  4580  00157E  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  4581  001582                     
  4582                           ; BSR set to: 0
  4583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4584  001582  0E67               	movlw	103
  4585  001584  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4586  001586  A4D8               	btfss	status,2,c
  4587  001588  EFC8  F00A         	goto	u9201
  4588  00158C  EFCA  F00A         	goto	u9200
  4589  001590                     u9201:
  4590  001590  EFDA  F00A         	goto	l8474
  4591  001594                     u9200:
  4592  001594                     
  4593                           ; BSR set to: 0
  4594  001594  0E66               	movlw	102
  4595  001596  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4596  001598  A4D8               	btfss	status,2,c
  4597  00159A  EFD1  F00A         	goto	u9211
  4598  00159E  EFD3  F00A         	goto	u9210
  4599  0015A2                     u9211:
  4600  0015A2  EFDC  F00A         	goto	l8476
  4601  0015A6                     u9210:
  4602  0015A6                     
  4603                           ; BSR set to: 0
  4604  0015A6  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4605  0015A8  EFDA  F00A         	goto	u9220
  4606  0015AC  EFD8  F00A         	goto	u9221
  4607  0015B0                     u9221:
  4608  0015B0  EFDC  F00A         	goto	l8476
  4609  0015B4                     u9220:
  4610  0015B4                     l8474:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4614  0015B4  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4615  0015B6  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4616  0015B8                     l8476:
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4620  0015B8  0E66               	movlw	102
  4621  0015BA  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4622  0015BC  A4D8               	btfss	status,2,c
  4623  0015BE  EFE3  F00A         	goto	u9231
  4624  0015C2  EFE5  F00A         	goto	u9230
  4625  0015C6                     u9231:
  4626  0015C6  EF05  F00B         	goto	l8486
  4627  0015CA                     u9230:
  4628  0015CA                     
  4629                           ; BSR set to: 0
  4630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4631  0015CA  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4632  0015CC  EFEC  F00A         	goto	u9240
  4633  0015D0  EFEA  F00A         	goto	u9241
  4634  0015D4                     u9241:
  4635  0015D4  EFF8  F00A         	goto	l8482
  4636  0015D8                     u9240:
  4637  0015D8                     
  4638                           ; BSR set to: 0
  4639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4640  0015D8  0E00               	movlw	0
  4641  0015DA  6FC3               	movwf	efgtoa@u& (0+255),b
  4642  0015DC  0E00               	movlw	0
  4643  0015DE  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4644  0015E0  0E80               	movlw	128
  4645  0015E2  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4646  0015E4  0E3F               	movlw	63
  4647  0015E6  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4648                           
  4649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4650  0015E8  0E00               	movlw	0
  4651  0015EA  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4652  0015EC  0E00               	movlw	0
  4653  0015EE  6FBF               	movwf	efgtoa@e& (0+255),b
  4654  0015F0                     l8482:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4658  0015F0  0E67               	movlw	103
  4659  0015F2  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4660  0015F4  B4D8               	btfsc	status,2,c
  4661  0015F6  EFFF  F00A         	goto	u9251
  4662  0015FA  EF01  F00B         	goto	u9250
  4663  0015FE                     u9251:
  4664  0015FE  EF05  F00B         	goto	l8486
  4665  001602                     u9250:
  4666  001602                     
  4667                           ; BSR set to: 0
  4668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4669  001602  51BF               	movf	efgtoa@e& (0+255),w,b
  4670  001604  27A1               	addwf	efgtoa@m& (0+255),f,b
  4671  001606  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4672  001608  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4673  00160A                     l8486:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4677  00160A  0E00               	movlw	0
  4678  00160C  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4679  00160E  0E00               	movlw	0
  4680  001610  6FB9               	movwf	efgtoa@i& (0+255),b
  4681  001612                     
  4682                           ; BSR set to: 0
  4683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4684  001612  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  4685  001616  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  4686  00161A  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  4687  00161E  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  4688  001622                     
  4689                           ; BSR set to: 0
  4690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4691  001622  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  4692  001626  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  4693  00162A  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  4694  00162E  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  4695                           
  4696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4697  001632  EF96  F00B         	goto	l8500
  4698  001636                     l8492:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4702  001636  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  4703  00163A  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  4704  00163E  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  4705  001642  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  4706  001646  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  4707  00164A  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  4708  00164E  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  4709  001652  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  4710  001656  ECD9  F015         	call	___fldiv	;wreg free
  4711  00165A  C02A  F036         	movff	?___fldiv,floorf@x
  4712  00165E  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  4713  001662  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  4714  001666  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  4715  00166A  EC9C  F01A         	call	_floorf	;wreg free
  4716  00166E  C036  F0B5         	movff	?_floorf,efgtoa@l
  4717  001672  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4718  001676  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4719  00167A  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4720                           
  4721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4722  00167E  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4723  001682  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4724  001686  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4725  00168A  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4726  00168E  EC21  F023         	call	___fltol	;wreg free
  4727  001692  C079  F0A7         	movff	?___fltol,efgtoa@d
  4728  001696  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4729  00169A                     
  4730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4731  00169A  C0B1  F079         	movff	efgtoa@h,___flsub@b
  4732  00169E  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  4733  0016A2  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  4734  0016A6  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  4735  0016AA  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  4736  0016AE  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  4737  0016B2  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  4738  0016B6  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  4739  0016BA  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  4740  0016BE  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  4741  0016C2  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  4742  0016C6  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  4743  0016CA  ECB1  F013         	call	___flmul	;wreg free
  4744  0016CE  C02A  F07D         	movff	?___flmul,___flsub@a
  4745  0016D2  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  4746  0016D6  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  4747  0016DA  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  4748  0016DE  ECE9  F02A         	call	___flsub	;wreg free
  4749  0016E2  C079  F0B1         	movff	?___flsub,efgtoa@h
  4750  0016E6  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  4751  0016EA  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  4752  0016EE  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  4753  0016F2                     
  4754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4755  0016F2  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  4756  0016F6  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4757  0016FA  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4758  0016FE  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4759  001702  0E00               	movlw	0
  4760  001704  6E2E               	movwf	___fldiv@a^0,c
  4761  001706  0E00               	movlw	0
  4762  001708  6E2F               	movwf	(___fldiv@a+1)^0,c
  4763  00170A  0E20               	movlw	32
  4764  00170C  6E30               	movwf	(___fldiv@a+2)^0,c
  4765  00170E  0E41               	movlw	65
  4766  001710  6E31               	movwf	(___fldiv@a+3)^0,c
  4767  001712  ECD9  F015         	call	___fldiv	;wreg free
  4768  001716  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  4769  00171A  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4770  00171E  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4771  001722  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4772  001726                     
  4773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4774  001726  0100               	movlb	0	; () banked
  4775  001728  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  4776  00172A  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  4777  00172C                     l8500:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4781  00172C  51A1               	movf	efgtoa@m& (0+255),w,b
  4782  00172E  5DB9               	subwf	efgtoa@i& (0+255),w,b
  4783  001730  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  4784  001732  0A80               	xorlw	128
  4785  001734  6F8A               	movwf	??_efgtoa& (0+255),b
  4786  001736  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  4787  001738  0A80               	xorlw	128
  4788  00173A  598A               	subwfb	??_efgtoa& (0+255),w,b
  4789  00173C  A0D8               	btfss	status,0,c
  4790  00173E  EFA3  F00B         	goto	u9261
  4791  001742  EFA5  F00B         	goto	u9260
  4792  001746                     u9261:
  4793  001746  EF1B  F00B         	goto	l8492
  4794  00174A                     u9260:
  4795  00174A                     
  4796                           ; BSR set to: 0
  4797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4798  00174A  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4799  00174E  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4800  001752  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4801  001756  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4802  00175A  0E00               	movlw	0
  4803  00175C  6E2E               	movwf	___flmul@a^0,c
  4804  00175E  0E00               	movlw	0
  4805  001760  6E2F               	movwf	(___flmul@a+1)^0,c
  4806  001762  0EA0               	movlw	160
  4807  001764  6E30               	movwf	(___flmul@a+2)^0,c
  4808  001766  0E40               	movlw	64
  4809  001768  6E31               	movwf	(___flmul@a+3)^0,c
  4810  00176A  ECB1  F013         	call	___flmul	;wreg free
  4811  00176E  C02A  F0B5         	movff	?___flmul,efgtoa@l
  4812  001772  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  4813  001776  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  4814  00177A  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  4815  00177E                     
  4816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4817  00177E  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  4818  001782  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  4819  001786  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  4820  00178A  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  4821  00178E  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  4822  001792  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  4823  001796  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  4824  00179A  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  4825  00179E  ECA5  F023         	call	___flge	;wreg free
  4826  0017A2  0100               	movlb	0	; () banked
  4827  0017A4  B0D8               	btfsc	status,0,c
  4828  0017A6  EFD7  F00B         	goto	u9271
  4829  0017AA  EFD9  F00B         	goto	u9270
  4830  0017AE                     u9271:
  4831  0017AE  EFE3  F00B         	goto	l8508
  4832  0017B2                     u9270:
  4833  0017B2                     
  4834                           ; BSR set to: 0
  4835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4836  0017B2  0E00               	movlw	0
  4837  0017B4  6FB5               	movwf	efgtoa@l& (0+255),b
  4838  0017B6  0E00               	movlw	0
  4839  0017B8  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  4840  0017BA  0E00               	movlw	0
  4841  0017BC  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  4842  0017BE  0E00               	movlw	0
  4843  0017C0  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  4844                           
  4845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4846  0017C2  EF0C  F00C         	goto	l8514
  4847  0017C6                     l8508:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4851  0017C6  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  4852  0017CA  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  4853  0017CE  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  4854  0017D2  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  4855  0017D6  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  4856  0017DA  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  4857  0017DE  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  4858  0017E2  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  4859  0017E6  EC72  F027         	call	___fleq	;wreg free
  4860  0017EA  A0D8               	btfss	status,0,c
  4861  0017EC  EFFA  F00B         	goto	u9281
  4862  0017F0  EFFC  F00B         	goto	u9280
  4863  0017F4                     u9281:
  4864  0017F4  EF0C  F00C         	goto	l8514
  4865  0017F8                     u9280:
  4866  0017F8  0100               	movlb	0	; () banked
  4867  0017FA  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  4868  0017FC  EF02  F00C         	goto	u9291
  4869  001800  EF04  F00C         	goto	u9290
  4870  001804                     u9291:
  4871  001804  EF0C  F00C         	goto	l8514
  4872  001808                     u9290:
  4873  001808                     
  4874                           ; BSR set to: 0
  4875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4876  001808  0E00               	movlw	0
  4877  00180A  6FB5               	movwf	efgtoa@l& (0+255),b
  4878  00180C  0E00               	movlw	0
  4879  00180E  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  4880  001810  0E00               	movlw	0
  4881  001812  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  4882  001814  0E00               	movlw	0
  4883  001816  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  4884  001818                     l8514:
  4885                           
  4886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4887  001818  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  4888  00181C  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  4889  001820  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  4890  001824  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  4891  001828  C0B5  F071         	movff	efgtoa@l,___fladd@a
  4892  00182C  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  4893  001830  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  4894  001834  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  4895  001838  EC50  F011         	call	___fladd	;wreg free
  4896  00183C  C06D  F0B1         	movff	?___fladd,efgtoa@h
  4897  001840  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  4898  001844  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  4899  001848  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  4900  00184C                     
  4901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4902  00184C  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  4903  001850  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  4904  001854  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  4905  001858  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  4906  00185C  0E00               	movlw	0
  4907  00185E  6E2E               	movwf	___flmul@a^0,c
  4908  001860  0E00               	movlw	0
  4909  001862  6E2F               	movwf	(___flmul@a+1)^0,c
  4910  001864  0E20               	movlw	32
  4911  001866  6E30               	movwf	(___flmul@a+2)^0,c
  4912  001868  0E41               	movlw	65
  4913  00186A  6E31               	movwf	(___flmul@a+3)^0,c
  4914  00186C  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  4915  001870  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  4916  001874  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  4917  001878  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  4918  00187C  ECB1  F013         	call	___flmul	;wreg free
  4919  001880  C02A  F071         	movff	?___flmul,___flge@ff2
  4920  001884  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4921  001888  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4922  00188C  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4923  001890  ECA5  F023         	call	___flge	;wreg free
  4924  001894  0100               	movlb	0	; () banked
  4925  001896  A0D8               	btfss	status,0,c
  4926  001898  EF50  F00C         	goto	u9301
  4927  00189C  EF52  F00C         	goto	u9300
  4928  0018A0                     u9301:
  4929  0018A0  EF7A  F00C         	goto	l8526
  4930  0018A4                     u9300:
  4931  0018A4                     
  4932                           ; BSR set to: 0
  4933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4934  0018A4  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4935  0018A6  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4936  0018A8                     
  4937                           ; BSR set to: 0
  4938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4939  0018A8  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  4940  0018AC  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  4941  0018B0  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  4942  0018B4  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  4943  0018B8  0E00               	movlw	0
  4944  0018BA  6E2E               	movwf	___flmul@a^0,c
  4945  0018BC  0E00               	movlw	0
  4946  0018BE  6E2F               	movwf	(___flmul@a+1)^0,c
  4947  0018C0  0E20               	movlw	32
  4948  0018C2  6E30               	movwf	(___flmul@a+2)^0,c
  4949  0018C4  0E41               	movlw	65
  4950  0018C6  6E31               	movwf	(___flmul@a+3)^0,c
  4951  0018C8  ECB1  F013         	call	___flmul	;wreg free
  4952  0018CC  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  4953  0018D0  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  4954  0018D4  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  4955  0018D8  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  4956  0018DC                     
  4957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4958  0018DC  0E66               	movlw	102
  4959  0018DE  0100               	movlb	0	; () banked
  4960  0018E0  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4961  0018E2  A4D8               	btfss	status,2,c
  4962  0018E4  EF76  F00C         	goto	u9311
  4963  0018E8  EF78  F00C         	goto	u9310
  4964  0018EC                     u9311:
  4965  0018EC  EF7A  F00C         	goto	l8526
  4966  0018F0                     u9310:
  4967  0018F0                     
  4968                           ; BSR set to: 0
  4969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4970  0018F0  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4971  0018F2  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4972  0018F4                     l8526:
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4976  0018F4  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  4977  0018F8  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  4978  0018FC  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  4979  001900  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  4980  001904                     
  4981                           ; BSR set to: 0
  4982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4983  001904  0E65               	movlw	101
  4984  001906  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4985  001908  B4D8               	btfsc	status,2,c
  4986  00190A  EF89  F00C         	goto	u9321
  4987  00190E  EF8B  F00C         	goto	u9320
  4988  001912                     u9321:
  4989  001912  EF91  F00C         	goto	l8532
  4990  001916                     u9320:
  4991  001916                     
  4992                           ; BSR set to: 0
  4993  001916  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  4994  00191A  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  4995  00191E  EF95  F00C         	goto	l2216
  4996  001922                     l8532:
  4997                           
  4998                           ; BSR set to: 0
  4999  001922  0E00               	movlw	0
  5000  001924  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5001  001926  0E00               	movlw	0
  5002  001928  6F9F               	movwf	efgtoa@ne& (0+255),b
  5003  00192A                     l2216:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5007  00192A  0E00               	movlw	0
  5008  00192C  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5009  00192E  0E00               	movlw	0
  5010  001930  6F9D               	movwf	efgtoa@pp& (0+255),b
  5011                           
  5012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5013  001932  0E00               	movlw	0
  5014  001934  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5015  001936  0E00               	movlw	0
  5016  001938  6F9B               	movwf	efgtoa@t& (0+255),b
  5017                           
  5018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5019  00193A  0E00               	movlw	0
  5020  00193C  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5021  00193E  0E00               	movlw	0
  5022  001940  6FB9               	movwf	efgtoa@i& (0+255),b
  5023                           
  5024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5025  001942  EF91  F00D         	goto	l8582
  5026  001946                     l8534:
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5030  001946  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5031  00194A  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5032  00194E  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5033  001952  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5034  001956  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5035  00195A  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5036  00195E  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5037  001962  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5038  001966  ECD9  F015         	call	___fldiv	;wreg free
  5039  00196A  C02A  F036         	movff	?___fldiv,floorf@x
  5040  00196E  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5041  001972  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5042  001976  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5043  00197A  EC9C  F01A         	call	_floorf	;wreg free
  5044  00197E  C036  F0B5         	movff	?_floorf,efgtoa@l
  5045  001982  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5046  001986  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5047  00198A  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5048                           
  5049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5050  00198E  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5051  001992  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5052  001996  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5053  00199A  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5054  00199E  EC21  F023         	call	___fltol	;wreg free
  5055  0019A2  C079  F0A7         	movff	?___fltol,efgtoa@d
  5056  0019A6  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5057  0019AA                     
  5058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5059  0019AA  B83C               	btfsc	_flags^0,4,c
  5060  0019AC  EFDA  F00C         	goto	u9331
  5061  0019B0  EFDC  F00C         	goto	u9330
  5062  0019B4                     u9331:
  5063  0019B4  EFFA  F00C         	goto	l8546
  5064  0019B8                     u9330:
  5065  0019B8  0100               	movlb	0	; () banked
  5066  0019BA  51A7               	movf	efgtoa@d& (0+255),w,b
  5067  0019BC  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5068  0019BE  A4D8               	btfss	status,2,c
  5069  0019C0  EFE4  F00C         	goto	u9341
  5070  0019C4  EFE6  F00C         	goto	u9340
  5071  0019C8                     u9341:
  5072  0019C8  EFFA  F00C         	goto	l8546
  5073  0019CC                     u9340:
  5074  0019CC                     
  5075                           ; BSR set to: 0
  5076  0019CC  0E67               	movlw	103
  5077  0019CE  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5078  0019D0  A4D8               	btfss	status,2,c
  5079  0019D2  EFED  F00C         	goto	u9351
  5080  0019D6  EFEF  F00C         	goto	u9350
  5081  0019DA                     u9351:
  5082  0019DA  EFFA  F00C         	goto	l8546
  5083  0019DE                     u9350:
  5084  0019DE                     
  5085                           ; BSR set to: 0
  5086  0019DE  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5087  0019E0  EFF6  F00C         	goto	u9360
  5088  0019E4  EFF4  F00C         	goto	u9361
  5089  0019E8                     u9361:
  5090  0019E8  EFFA  F00C         	goto	l8546
  5091  0019EC                     u9360:
  5092  0019EC                     
  5093                           ; BSR set to: 0
  5094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5095  0019EC  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5096  0019EE  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5097                           
  5098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5099  0019F0  EF45  F00D         	goto	l8574
  5100  0019F4                     l8546:
  5101                           
  5102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5103  0019F4  0100               	movlb	0	; () banked
  5104  0019F6  519D               	movf	efgtoa@pp& (0+255),w,b
  5105  0019F8  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5106  0019FA  A4D8               	btfss	status,2,c
  5107  0019FC  EF02  F00D         	goto	u9371
  5108  001A00  EF04  F00D         	goto	u9370
  5109  001A04                     u9371:
  5110  001A04  EF2E  F00D         	goto	l8566
  5111  001A08                     u9370:
  5112  001A08                     
  5113                           ; BSR set to: 0
  5114  001A08  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5115  001A0A  EF0B  F00D         	goto	u9380
  5116  001A0E  EF09  F00D         	goto	u9381
  5117  001A12                     u9381:
  5118  001A12  EF2E  F00D         	goto	l8566
  5119  001A16                     u9380:
  5120  001A16                     
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5123  001A16  0E3A               	movlw	low _dbuf
  5124  001A18  25C1               	addwf	efgtoa@n& (0+255),w,b
  5125  001A1A  6ED9               	movwf	fsr2l,c
  5126  001A1C  0E01               	movlw	high _dbuf
  5127  001A1E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5128  001A20  6EDA               	movwf	fsr2h,c
  5129  001A22  0E2E               	movlw	46
  5130  001A24  6EDF               	movwf	indf2,c
  5131  001A26                     
  5132                           ; BSR set to: 0
  5133  001A26  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5134  001A28  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5135  001A2A                     
  5136                           ; BSR set to: 0
  5137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5138  001A2A  07AD               	decf	efgtoa@w& (0+255),f,b
  5139  001A2C  A0D8               	btfss	status,0,c
  5140  001A2E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5141  001A30                     
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5144  001A30  0E00               	movlw	0
  5145  001A32  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5146  001A34  0E01               	movlw	1
  5147  001A36  6F9D               	movwf	efgtoa@pp& (0+255),b
  5148  001A38  EF2E  F00D         	goto	l8566
  5149  001A3C                     l8558:
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5153  001A3C  0E3A               	movlw	low _dbuf
  5154  001A3E  25C1               	addwf	efgtoa@n& (0+255),w,b
  5155  001A40  6ED9               	movwf	fsr2l,c
  5156  001A42  0E01               	movlw	high _dbuf
  5157  001A44  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5158  001A46  6EDA               	movwf	fsr2h,c
  5159  001A48  0E30               	movlw	48
  5160  001A4A  6EDF               	movwf	indf2,c
  5161  001A4C                     
  5162                           ; BSR set to: 0
  5163  001A4C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5164  001A4E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5165  001A50                     
  5166                           ; BSR set to: 0
  5167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5168  001A50  07AD               	decf	efgtoa@w& (0+255),f,b
  5169  001A52  A0D8               	btfss	status,0,c
  5170  001A54  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5171  001A56                     
  5172                           ; BSR set to: 0
  5173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5174  001A56  079B               	decf	efgtoa@t& (0+255),f,b
  5175  001A58  A0D8               	btfss	status,0,c
  5176  001A5A  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5177  001A5C                     l8566:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5181  001A5C  519B               	movf	efgtoa@t& (0+255),w,b
  5182  001A5E  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5183  001A60  A4D8               	btfss	status,2,c
  5184  001A62  EF35  F00D         	goto	u9391
  5185  001A66  EF37  F00D         	goto	u9390
  5186  001A6A                     u9391:
  5187  001A6A  EF1E  F00D         	goto	l8558
  5188  001A6E                     u9390:
  5189  001A6E                     
  5190                           ; BSR set to: 0
  5191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5192  001A6E  0E3A               	movlw	low _dbuf
  5193  001A70  25C1               	addwf	efgtoa@n& (0+255),w,b
  5194  001A72  6ED9               	movwf	fsr2l,c
  5195  001A74  0E01               	movlw	high _dbuf
  5196  001A76  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5197  001A78  6EDA               	movwf	fsr2h,c
  5198  001A7A  51A7               	movf	efgtoa@d& (0+255),w,b
  5199  001A7C  0F30               	addlw	48
  5200  001A7E  6EDF               	movwf	indf2,c
  5201  001A80                     
  5202                           ; BSR set to: 0
  5203  001A80  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5204  001A82  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5205  001A84                     
  5206                           ; BSR set to: 0
  5207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5208  001A84  07AD               	decf	efgtoa@w& (0+255),f,b
  5209  001A86  A0D8               	btfss	status,0,c
  5210  001A88  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5211  001A8A                     l8574:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5215  001A8A  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5216  001A8E  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5217  001A92  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5218  001A96  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5219  001A9A  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5220  001A9E  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5221  001AA2  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5222  001AA6  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5223  001AAA  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5224  001AAE  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5225  001AB2  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5226  001AB6  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5227  001ABA  ECB1  F013         	call	___flmul	;wreg free
  5228  001ABE  C02A  F07D         	movff	?___flmul,___flsub@a
  5229  001AC2  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5230  001AC6  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5231  001ACA  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5232  001ACE  ECE9  F02A         	call	___flsub	;wreg free
  5233  001AD2  C079  F0B1         	movff	?___flsub,efgtoa@h
  5234  001AD6  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5235  001ADA  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5236  001ADE  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5237  001AE2                     
  5238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5239  001AE2  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5240  001AE6  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5241  001AEA  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5242  001AEE  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5243  001AF2  0E00               	movlw	0
  5244  001AF4  6E2E               	movwf	___fldiv@a^0,c
  5245  001AF6  0E00               	movlw	0
  5246  001AF8  6E2F               	movwf	(___fldiv@a+1)^0,c
  5247  001AFA  0E20               	movlw	32
  5248  001AFC  6E30               	movwf	(___fldiv@a+2)^0,c
  5249  001AFE  0E41               	movlw	65
  5250  001B00  6E31               	movwf	(___fldiv@a+3)^0,c
  5251  001B02  ECD9  F015         	call	___fldiv	;wreg free
  5252  001B06  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5253  001B0A  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5254  001B0E  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5255  001B12  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5256  001B16                     
  5257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5258  001B16  0100               	movlb	0	; () banked
  5259  001B18  079F               	decf	efgtoa@ne& (0+255),f,b
  5260  001B1A  A0D8               	btfss	status,0,c
  5261  001B1C  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5262  001B1E                     
  5263                           ; BSR set to: 0
  5264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5265  001B1E  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5266  001B20  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5267  001B22                     l8582:
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5271  001B22  51A1               	movf	efgtoa@m& (0+255),w,b
  5272  001B24  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5273  001B26  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5274  001B28  0A80               	xorlw	128
  5275  001B2A  6F8A               	movwf	??_efgtoa& (0+255),b
  5276  001B2C  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5277  001B2E  0A80               	xorlw	128
  5278  001B30  598A               	subwfb	??_efgtoa& (0+255),w,b
  5279  001B32  B0D8               	btfsc	status,0,c
  5280  001B34  EF9E  F00D         	goto	u9401
  5281  001B38  EFA0  F00D         	goto	u9400
  5282  001B3C                     u9401:
  5283  001B3C  EFAE  F00D         	goto	l8586
  5284  001B40                     u9400:
  5285  001B40                     
  5286                           ; BSR set to: 0
  5287  001B40  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5288  001B42  EFAC  F00D         	goto	u9411
  5289  001B46  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5290  001B48  E109               	bnz	u9410
  5291  001B4A  0E4B               	movlw	75
  5292  001B4C  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5293  001B4E  A0D8               	btfss	status,0,c
  5294  001B50  EFAC  F00D         	goto	u9411
  5295  001B54  EFAE  F00D         	goto	u9410
  5296  001B58                     u9411:
  5297  001B58  EFA3  F00C         	goto	l8534
  5298  001B5C                     u9410:
  5299  001B5C                     l8586:
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5303  001B5C  519D               	movf	efgtoa@pp& (0+255),w,b
  5304  001B5E  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5305  001B60  A4D8               	btfss	status,2,c
  5306  001B62  EFB5  F00D         	goto	u9421
  5307  001B66  EFB7  F00D         	goto	u9420
  5308  001B6A                     u9421:
  5309  001B6A  EFC8  F00D         	goto	l8594
  5310  001B6E                     u9420:
  5311  001B6E                     
  5312                           ; BSR set to: 0
  5313  001B6E  A83C               	btfss	_flags^0,4,c
  5314  001B70  EFBC  F00D         	goto	u9431
  5315  001B74  EFBE  F00D         	goto	u9430
  5316  001B78                     u9431:
  5317  001B78  EFC8  F00D         	goto	l8594
  5318  001B7C                     u9430:
  5319  001B7C                     
  5320                           ; BSR set to: 0
  5321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5322  001B7C  0E3A               	movlw	low _dbuf
  5323  001B7E  25C1               	addwf	efgtoa@n& (0+255),w,b
  5324  001B80  6ED9               	movwf	fsr2l,c
  5325  001B82  0E01               	movlw	high _dbuf
  5326  001B84  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5327  001B86  6EDA               	movwf	fsr2h,c
  5328  001B88  0E2E               	movlw	46
  5329  001B8A  6EDF               	movwf	indf2,c
  5330  001B8C                     
  5331                           ; BSR set to: 0
  5332  001B8C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5333  001B8E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5334  001B90                     l8594:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5338  001B90  0E3A               	movlw	low _dbuf
  5339  001B92  25C1               	addwf	efgtoa@n& (0+255),w,b
  5340  001B94  6ED9               	movwf	fsr2l,c
  5341  001B96  0E01               	movlw	high _dbuf
  5342  001B98  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5343  001B9A  6EDA               	movwf	fsr2h,c
  5344  001B9C  0E00               	movlw	0
  5345  001B9E  6EDF               	movwf	indf2,c
  5346  001BA0                     
  5347                           ; BSR set to: 0
  5348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5349  001BA0  0E65               	movlw	101
  5350  001BA2  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5351  001BA4  A4D8               	btfss	status,2,c
  5352  001BA6  EFD7  F00D         	goto	u9441
  5353  001BAA  EFD9  F00D         	goto	u9440
  5354  001BAE                     u9441:
  5355  001BAE  EFAB  F00E         	goto	l8656
  5356  001BB2                     u9440:
  5357  001BB2                     
  5358                           ; BSR set to: 0
  5359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5360  001BB2  0E00               	movlw	0
  5361  001BB4  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5362  001BB6  0E4F               	movlw	79
  5363  001BB8  6FB9               	movwf	efgtoa@i& (0+255),b
  5364  001BBA                     
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5367  001BBA  0E3A               	movlw	low _dbuf
  5368  001BBC  25B9               	addwf	efgtoa@i& (0+255),w,b
  5369  001BBE  6ED9               	movwf	fsr2l,c
  5370  001BC0  0E01               	movlw	high _dbuf
  5371  001BC2  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5372  001BC4  6EDA               	movwf	fsr2h,c
  5373  001BC6  0E00               	movlw	0
  5374  001BC8  6EDF               	movwf	indf2,c
  5375  001BCA                     
  5376                           ; BSR set to: 0
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5378  001BCA  0E00               	movlw	0
  5379  001BCC  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5380  001BCE  0E00               	movlw	0
  5381  001BD0  6FA9               	movwf	efgtoa@sign& (0+255),b
  5382  001BD2                     
  5383                           ; BSR set to: 0
  5384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5385  001BD2  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5386  001BD4  EFF0  F00D         	goto	u9450
  5387  001BD8  EFEE  F00D         	goto	u9451
  5388  001BDC                     u9451:
  5389  001BDC  EFF8  F00D         	goto	l8610
  5390  001BE0                     u9450:
  5391  001BE0                     
  5392                           ; BSR set to: 0
  5393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5394  001BE0  0E00               	movlw	0
  5395  001BE2  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5396  001BE4  0E01               	movlw	1
  5397  001BE6  6FA9               	movwf	efgtoa@sign& (0+255),b
  5398  001BE8                     
  5399                           ; BSR set to: 0
  5400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5401  001BE8  6DBF               	negf	efgtoa@e& (0+255),b
  5402  001BEA  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5403  001BEC  B0D8               	btfsc	status,0,c
  5404  001BEE  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5405  001BF0                     l8610:
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5409  001BF0  0E00               	movlw	0
  5410  001BF2  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5411  001BF4  0E02               	movlw	2
  5412  001BF6  6FAB               	movwf	efgtoa@p& (0+255),b
  5413                           
  5414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5415  001BF8  EF29  F00E         	goto	l8622
  5416  001BFC                     l8612:
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5420  001BFC  07B9               	decf	efgtoa@i& (0+255),f,b
  5421  001BFE  A0D8               	btfss	status,0,c
  5422  001C00  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5423  001C02                     
  5424                           ; BSR set to: 0
  5425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5426  001C02  0E3A               	movlw	low _dbuf
  5427  001C04  25B9               	addwf	efgtoa@i& (0+255),w,b
  5428  001C06  6ED9               	movwf	fsr2l,c
  5429  001C08  0E01               	movlw	high _dbuf
  5430  001C0A  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5431  001C0C  6EDA               	movwf	fsr2h,c
  5432  001C0E  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5433  001C12  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5434  001C16  0E00               	movlw	0
  5435  001C18  6E17               	movwf	(___awmod@divisor+1)^0,c
  5436  001C1A  0E0A               	movlw	10
  5437  001C1C  6E16               	movwf	___awmod@divisor^0,c
  5438  001C1E  EC1A  F027         	call	___awmod	;wreg free
  5439  001C22  5014               	movf	?___awmod^0,w,c
  5440  001C24  0F30               	addlw	48
  5441  001C26  6EDF               	movwf	indf2,c
  5442  001C28                     
  5443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5444  001C28  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  5445  001C2C  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  5446  001C30  0E00               	movlw	0
  5447  001C32  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5448  001C34  0E0A               	movlw	10
  5449  001C36  6E16               	movwf	___awdiv@divisor^0,c
  5450  001C38  ECF7  F025         	call	___awdiv	;wreg free
  5451  001C3C  C014  F0BF         	movff	?___awdiv,efgtoa@e
  5452  001C40  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  5453  001C44                     
  5454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5455  001C44  0100               	movlb	0	; () banked
  5456  001C46  07AB               	decf	efgtoa@p& (0+255),f,b
  5457  001C48  A0D8               	btfss	status,0,c
  5458  001C4A  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  5459  001C4C                     
  5460                           ; BSR set to: 0
  5461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5462  001C4C  07AD               	decf	efgtoa@w& (0+255),f,b
  5463  001C4E  A0D8               	btfss	status,0,c
  5464  001C50  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5465  001C52                     l8622:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5469  001C52  51BF               	movf	efgtoa@e& (0+255),w,b
  5470  001C54  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5471  001C56  A4D8               	btfss	status,2,c
  5472  001C58  EF30  F00E         	goto	u9461
  5473  001C5C  EF32  F00E         	goto	u9460
  5474  001C60                     u9461:
  5475  001C60  EFFE  F00D         	goto	l8612
  5476  001C64                     u9460:
  5477  001C64                     
  5478                           ; BSR set to: 0
  5479  001C64  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5480  001C66  EF3F  F00E         	goto	u9470
  5481  001C6A  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  5482  001C6C  E106               	bnz	u9471
  5483  001C6E  05AB               	decf	efgtoa@p& (0+255),w,b
  5484  001C70  B0D8               	btfsc	status,0,c
  5485  001C72  EF3D  F00E         	goto	u9471
  5486  001C76  EF3F  F00E         	goto	u9470
  5487  001C7A                     u9471:
  5488  001C7A  EFFE  F00D         	goto	l8612
  5489  001C7E                     u9470:
  5490  001C7E                     
  5491                           ; BSR set to: 0
  5492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5493  001C7E  07B9               	decf	efgtoa@i& (0+255),f,b
  5494  001C80  A0D8               	btfss	status,0,c
  5495  001C82  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5496  001C84                     
  5497                           ; BSR set to: 0
  5498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5499  001C84  51A9               	movf	efgtoa@sign& (0+255),w,b
  5500  001C86  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5501  001C88  A4D8               	btfss	status,2,c
  5502  001C8A  EF49  F00E         	goto	u9481
  5503  001C8E  EF4B  F00E         	goto	u9480
  5504  001C92                     u9481:
  5505  001C92  EF51  F00E         	goto	l8632
  5506  001C96                     u9480:
  5507  001C96                     
  5508                           ; BSR set to: 0
  5509  001C96  0E00               	movlw	0
  5510  001C98  6F96               	movwf	(_efgtoa$3573+1)& (0+255),b
  5511  001C9A  0E2B               	movlw	43
  5512  001C9C  6F95               	movwf	_efgtoa$3573& (0+255),b
  5513  001C9E  EF55  F00E         	goto	l8634
  5514  001CA2                     l8632:
  5515                           
  5516                           ; BSR set to: 0
  5517  001CA2  0E00               	movlw	0
  5518  001CA4  6F96               	movwf	(_efgtoa$3573+1)& (0+255),b
  5519  001CA6  0E2D               	movlw	45
  5520  001CA8  6F95               	movwf	_efgtoa$3573& (0+255),b
  5521  001CAA                     l8634:
  5522                           
  5523                           ; BSR set to: 0
  5524  001CAA  0E3A               	movlw	low _dbuf
  5525  001CAC  25B9               	addwf	efgtoa@i& (0+255),w,b
  5526  001CAE  6ED9               	movwf	fsr2l,c
  5527  001CB0  0E01               	movlw	high _dbuf
  5528  001CB2  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5529  001CB4  6EDA               	movwf	fsr2h,c
  5530  001CB6  0060  F257  FFDF   	movff	_efgtoa$3573,indf2
  5531  001CBC                     
  5532                           ; BSR set to: 0
  5533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5534  001CBC  07AD               	decf	efgtoa@w& (0+255),f,b
  5535  001CBE  A0D8               	btfss	status,0,c
  5536  001CC0  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5537  001CC2                     
  5538                           ; BSR set to: 0
  5539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5540  001CC2  07B9               	decf	efgtoa@i& (0+255),f,b
  5541  001CC4  A0D8               	btfss	status,0,c
  5542  001CC6  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5543  001CC8                     
  5544                           ; BSR set to: 0
  5545  001CC8  0EBF               	movlw	191
  5546  001CCA  6F8A               	movwf	??_efgtoa& (0+255),b
  5547  001CCC  0EFF               	movlw	255
  5548  001CCE  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5549  001CD0  5189               	movf	efgtoa@c& (0+255),w,b
  5550  001CD2  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5551  001CD4  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5552  001CD6  518A               	movf	??_efgtoa& (0+255),w,b
  5553  001CD8  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5554  001CDA  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5555  001CDC  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5556  001CDE  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5557  001CE0  E10A               	bnz	u9490
  5558  001CE2  0E1A               	movlw	26
  5559  001CE4  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5560  001CE6  A0D8               	btfss	status,0,c
  5561  001CE8  EF78  F00E         	goto	u9491
  5562  001CEC  EF7B  F00E         	goto	u9490
  5563  001CF0                     u9491:
  5564  001CF0  0E01               	movlw	1
  5565  001CF2  EF7C  F00E         	goto	u9500
  5566  001CF6                     u9490:
  5567  001CF6  0E00               	movlw	0
  5568  001CF8                     u9500:
  5569  001CF8  6F99               	movwf	_efgtoa$3575& (0+255),b
  5570  001CFA  6B9A               	clrf	(_efgtoa$3575+1)& (0+255),b
  5571  001CFC                     
  5572                           ; BSR set to: 0
  5573  001CFC  5199               	movf	_efgtoa$3575& (0+255),w,b
  5574  001CFE  119A               	iorwf	(_efgtoa$3575+1)& (0+255),w,b
  5575  001D00  A4D8               	btfss	status,2,c
  5576  001D02  EF85  F00E         	goto	u9511
  5577  001D06  EF87  F00E         	goto	u9510
  5578  001D0A                     u9511:
  5579  001D0A  EF8D  F00E         	goto	l8648
  5580  001D0E                     u9510:
  5581  001D0E                     
  5582                           ; BSR set to: 0
  5583  001D0E  0E00               	movlw	0
  5584  001D10  6F98               	movwf	(_efgtoa$3574+1)& (0+255),b
  5585  001D12  0E65               	movlw	101
  5586  001D14  6F97               	movwf	_efgtoa$3574& (0+255),b
  5587  001D16  EF91  F00E         	goto	l8650
  5588  001D1A                     l8648:
  5589                           
  5590                           ; BSR set to: 0
  5591  001D1A  0E00               	movlw	0
  5592  001D1C  6F98               	movwf	(_efgtoa$3574+1)& (0+255),b
  5593  001D1E  0E45               	movlw	69
  5594  001D20  6F97               	movwf	_efgtoa$3574& (0+255),b
  5595  001D22                     l8650:
  5596                           
  5597                           ; BSR set to: 0
  5598  001D22  0E3A               	movlw	low _dbuf
  5599  001D24  25B9               	addwf	efgtoa@i& (0+255),w,b
  5600  001D26  6ED9               	movwf	fsr2l,c
  5601  001D28  0E01               	movlw	high _dbuf
  5602  001D2A  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5603  001D2C  6EDA               	movwf	fsr2h,c
  5604  001D2E  0060  F25F  FFDF   	movff	_efgtoa$3574,indf2
  5605  001D34                     
  5606                           ; BSR set to: 0
  5607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5608  001D34  07AD               	decf	efgtoa@w& (0+255),f,b
  5609  001D36  A0D8               	btfss	status,0,c
  5610  001D38  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5611  001D3A                     
  5612                           ; BSR set to: 0
  5613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5614  001D3A  0E3A               	movlw	low _dbuf
  5615  001D3C  25C1               	addwf	efgtoa@n& (0+255),w,b
  5616  001D3E  6E14               	movwf	strcpy@dest^0,c
  5617  001D40  0E01               	movlw	high _dbuf
  5618  001D42  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5619  001D44  6E15               	movwf	(strcpy@dest+1)^0,c
  5620  001D46  0E3A               	movlw	low _dbuf
  5621  001D48  25B9               	addwf	efgtoa@i& (0+255),w,b
  5622  001D4A  6E16               	movwf	strcpy@src^0,c
  5623  001D4C  0E01               	movlw	high _dbuf
  5624  001D4E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5625  001D50  6E17               	movwf	(strcpy@src+1)^0,c
  5626  001D52  EC69  F029         	call	_strcpy	;wreg free
  5627  001D56                     l8656:
  5628                           
  5629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5630  001D56  C083  F026         	movff	efgtoa@fp,pad@fp
  5631  001D5A  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5632  001D5E  0E3A               	movlw	low _dbuf
  5633  001D60  6E28               	movwf	pad@buf^0,c
  5634  001D62  0E01               	movlw	high _dbuf
  5635  001D64  6E29               	movwf	(pad@buf+1)^0,c
  5636  001D66  C0AD  F02A         	movff	efgtoa@w,pad@p
  5637  001D6A  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5638  001D6E  EC59  F026         	call	_pad	;wreg free
  5639  001D72  C026  F083         	movff	?_pad,?_efgtoa
  5640  001D76  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5641  001D7A                     l2170:
  5642  001D7A  0012               	return		;funcret
  5643  001D7C                     __end_of_efgtoa:
  5644                           	callstack 0
  5645                           
  5646 ;; *************** function _tolower *****************
  5647 ;; Defined at:
  5648 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  c               2   25[COMRAM] int 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  2   25[COMRAM] int 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;Total ram usage:        8 bytes
  5667 ;; Hardware stack levels used: 1
  5668 ;; Hardware stack levels required when called: 9
  5669 ;; This function calls:
  5670 ;;		_isupper
  5671 ;; This function is called by:
  5672 ;;		_efgtoa
  5673 ;;		_vfpfcnvrt
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text11
  5678  00533C                     __ptext11:
  5679                           	callstack 0
  5680  00533C                     _tolower:
  5681                           	callstack 16
  5682  00533C  0EBF               	movlw	191
  5683  00533E  6E1C               	movwf	??_tolower^0,c
  5684  005340  0EFF               	movlw	255
  5685  005342  6E1D               	movwf	(??_tolower+1)^0,c
  5686  005344  C01A  F01E         	movff	tolower@c,??_tolower+2
  5687  005348  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  5688  00534C  501C               	movf	??_tolower^0,w,c
  5689  00534E  261E               	addwf	(??_tolower+2)^0,f,c
  5690  005350  501D               	movf	(??_tolower+1)^0,w,c
  5691  005352  221F               	addwfc	(??_tolower+3)^0,f,c
  5692  005354  501F               	movf	(??_tolower+3)^0,w,c
  5693  005356  E10A               	bnz	u8700
  5694  005358  0E1A               	movlw	26
  5695  00535A  5C1E               	subwf	(??_tolower+2)^0,w,c
  5696  00535C  A0D8               	btfss	status,0,c
  5697  00535E  EFB3  F029         	goto	u8701
  5698  005362  EFB6  F029         	goto	u8700
  5699  005366                     u8701:
  5700  005366  0E01               	movlw	1
  5701  005368  EFB7  F029         	goto	u8710
  5702  00536C                     u8700:
  5703  00536C  0E00               	movlw	0
  5704  00536E                     u8710:
  5705  00536E  6E20               	movwf	_tolower$3686^0,c
  5706  005370  6A21               	clrf	(_tolower$3686+1)^0,c
  5707  005372  5020               	movf	_tolower$3686^0,w,c
  5708  005374  1021               	iorwf	(_tolower$3686+1)^0,w,c
  5709  005376  B4D8               	btfsc	status,2,c
  5710  005378  EFC0  F029         	goto	u8721
  5711  00537C  EFC2  F029         	goto	u8720
  5712  005380                     u8721:
  5713  005380  EFC9  F029         	goto	l2352
  5714  005384                     u8720:
  5715  005384  0E20               	movlw	32
  5716  005386  101A               	iorwf	tolower@c^0,w,c
  5717  005388  6E1A               	movwf	?_tolower^0,c
  5718  00538A  501B               	movf	(tolower@c+1)^0,w,c
  5719  00538C  6E1B               	movwf	(?_tolower+1)^0,c
  5720  00538E  EFCD  F029         	goto	l2357
  5721  005392                     l2352:
  5722  005392  C01A  F01A         	movff	tolower@c,?_tolower
  5723  005396  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5724  00539A                     l2357:
  5725  00539A  0012               	return		;funcret
  5726  00539C                     __end_of_tolower:
  5727                           	callstack 0
  5728                           
  5729 ;; *************** function _isupper *****************
  5730 ;; Defined at:
  5731 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  c               2   19[COMRAM] int 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  2   19[COMRAM] int 
  5738 ;; Registers used:
  5739 ;;		wreg, status,2, status,0
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;Total ram usage:        6 bytes
  5750 ;; Hardware stack levels used: 1
  5751 ;; Hardware stack levels required when called: 8
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_efgtoa
  5756 ;;		_vfpfcnvrt
  5757 ;;		_tolower
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text12
  5762  005792                     __ptext12:
  5763                           	callstack 0
  5764  005792                     _isupper:
  5765                           	callstack 16
  5766  005792  0EBF               	movlw	191
  5767  005794  6E16               	movwf	??_isupper^0,c
  5768  005796  0EFF               	movlw	255
  5769  005798  6E17               	movwf	(??_isupper+1)^0,c
  5770  00579A  C014  F018         	movff	isupper@c,??_isupper+2
  5771  00579E  C015  F019         	movff	isupper@c+1,??_isupper+3
  5772  0057A2  5016               	movf	??_isupper^0,w,c
  5773  0057A4  2618               	addwf	(??_isupper+2)^0,f,c
  5774  0057A6  5017               	movf	(??_isupper+1)^0,w,c
  5775  0057A8  2219               	addwfc	(??_isupper+3)^0,f,c
  5776  0057AA  5019               	movf	(??_isupper+3)^0,w,c
  5777  0057AC  E10A               	bnz	u7710
  5778  0057AE  0E1A               	movlw	26
  5779  0057B0  5C18               	subwf	(??_isupper+2)^0,w,c
  5780  0057B2  A0D8               	btfss	status,0,c
  5781  0057B4  EFDE  F02B         	goto	u7711
  5782  0057B8  EFE1  F02B         	goto	u7710
  5783  0057BC                     u7711:
  5784  0057BC  0E01               	movlw	1
  5785  0057BE  EFE2  F02B         	goto	u7720
  5786  0057C2                     u7710:
  5787  0057C2  0E00               	movlw	0
  5788  0057C4                     u7720:
  5789  0057C4  6E14               	movwf	?_isupper^0,c
  5790  0057C6  6A15               	clrf	(?_isupper+1)^0,c
  5791  0057C8  0012               	return		;funcret
  5792  0057CA                     __end_of_isupper:
  5793                           	callstack 0
  5794                           
  5795 ;; *************** function _strcpy *****************
  5796 ;; Defined at:
  5797 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  dest            2   19[COMRAM] PTR unsigned char 
  5800 ;;		 -> dbuf(80), 
  5801 ;;  src             2   21[COMRAM] PTR const unsigned char 
  5802 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
  5803 ;;		 -> dbuf(80), 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  d               2   27[COMRAM] PTR unsigned char 
  5806 ;;		 -> dbuf(80), 
  5807 ;;  s               2   25[COMRAM] PTR const unsigned char 
  5808 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
  5809 ;;		 -> dbuf(80), 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  2   19[COMRAM] PTR unsigned char 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;Total ram usage:       10 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 8
  5826 ;; This function calls:
  5827 ;;		Nothing
  5828 ;; This function is called by:
  5829 ;;		_efgtoa
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text13
  5834  0052D2                     __ptext13:
  5835                           	callstack 0
  5836  0052D2                     _strcpy:
  5837                           	callstack 16
  5838  0052D2  C016  F01A         	movff	strcpy@src,strcpy@s
  5839  0052D6  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  5840  0052DA  C014  F01C         	movff	strcpy@dest,strcpy@d
  5841  0052DE  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  5842  0052E2                     l8250:
  5843  0052E2  501A               	movf	strcpy@s^0,w,c
  5844  0052E4  6E18               	movwf	??_strcpy^0,c
  5845  0052E6  501B               	movf	(strcpy@s+1)^0,w,c
  5846  0052E8  6E19               	movwf	(??_strcpy+1)^0,c
  5847  0052EA  4A1A               	infsnz	strcpy@s^0,f,c
  5848  0052EC  2A1B               	incf	(strcpy@s+1)^0,f,c
  5849  0052EE  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  5850  0052F4  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  5851  0052FA  0E00               	movlw	low (__smallconst shr (0+16))
  5852  0052FC  6EF8               	movwf	tblptru,c
  5853  0052FE  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  5854  005304  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  5855  00530A  4A1C               	infsnz	strcpy@d^0,f,c
  5856  00530C  2A1D               	incf	(strcpy@d+1)^0,f,c
  5857  00530E  0E0F               	movlw	(high __ramtop+-1)
  5858  005310  64F7               	cpfsgt	tblptrh,c
  5859  005312  D003               	bra	u8687
  5860  005314  0008               	tblrd		*
  5861  005316  50F5               	movf	tablat,w,c
  5862  005318  D007               	bra	u8680
  5863  00531A                     u8687:
  5864  00531A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  5865  005320  006F FFDF FFEA     	movff	tblptrh,fsr0h
  5866  005326  50EF               	movf	indf0,w,c
  5867  005328                     u8680:
  5868  005328  6EDF               	movwf	indf2,c
  5869  00532A  50DF               	movf	indf2,w,c
  5870  00532C  A4D8               	btfss	status,2,c
  5871  00532E  EF9B  F029         	goto	u8691
  5872  005332  EF9D  F029         	goto	u8690
  5873  005336                     u8691:
  5874  005336  EF71  F029         	goto	l8250
  5875  00533A                     u8690:
  5876  00533A  0012               	return		;funcret
  5877  00533C                     __end_of_strcpy:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function _floorf *****************
  5881 ;; Defined at:
  5882 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  x               4   53[COMRAM] float 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  u               4   25[BANK0 ] struct .
  5887 ;;  m               4   19[BANK0 ] unsigned long 
  5888 ;;  e               2   23[BANK0 ] int 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  4   53[COMRAM] float 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;Total ram usage:       20 bytes
  5903 ;; Hardware stack levels used: 1
  5904 ;; Hardware stack levels required when called: 8
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_efgtoa
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text14
  5913  003538                     __ptext14:
  5914                           	callstack 0
  5915  003538                     _floorf:
  5916                           	callstack 16
  5917  003538  C118  F079         	movff	floorf@F527,floorf@u
  5918  00353C  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  5919  003540  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  5920  003544  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  5921  003548  C036  F079         	movff	floorf@x,floorf@u
  5922  00354C  C037  F07A         	movff	floorf@x+1,floorf@u+1
  5923  003550  C038  F07B         	movff	floorf@x+2,floorf@u+2
  5924  003554  C039  F07C         	movff	floorf@x+3,floorf@u+3
  5925  003558  0E81               	movlw	129
  5926  00355A  0100               	movlb	0	; () banked
  5927  00355C  6F6D               	movwf	??_floorf& (0+255),b
  5928  00355E  0EFF               	movlw	255
  5929  003560  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5930  003562  C079  F06F         	movff	floorf@u,??_floorf+2
  5931  003566  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5932  00356A  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5933  00356E  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5934  003572  0E18               	movlw	24
  5935  003574  EFC1  F01A         	goto	u8730
  5936  003578                     u8735:
  5937  003578  90D8               	bcf	status,0,c
  5938  00357A  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5939  00357C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5940  00357E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5941  003580  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5942  003582                     u8730:
  5943  003582  2EE8               	decfsz	wreg,f,c
  5944  003584  EFBC  F01A         	goto	u8735
  5945  003588  516F               	movf	(??_floorf+2)& (0+255),w,b
  5946  00358A  256D               	addwf	??_floorf& (0+255),w,b
  5947  00358C  6F77               	movwf	floorf@e& (0+255),b
  5948  00358E  0E00               	movlw	0
  5949  003590  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5950  003592  6F78               	movwf	(floorf@e+1)& (0+255),b
  5951  003594  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5952  003596  EFD6  F01A         	goto	u8741
  5953  00359A  5178               	movf	(floorf@e+1)& (0+255),w,b
  5954  00359C  E109               	bnz	u8740
  5955  00359E  0E17               	movlw	23
  5956  0035A0  5D77               	subwf	floorf@e& (0+255),w,b
  5957  0035A2  A0D8               	btfss	status,0,c
  5958  0035A4  EFD6  F01A         	goto	u8741
  5959  0035A8  EFD8  F01A         	goto	u8740
  5960  0035AC                     u8741:
  5961  0035AC  EFE2  F01A         	goto	l8268
  5962  0035B0                     u8740:
  5963  0035B0                     l8266:
  5964                           
  5965                           ; BSR set to: 0
  5966  0035B0  C036  F036         	movff	floorf@x,?_floorf
  5967  0035B4  C037  F037         	movff	floorf@x+1,?_floorf+1
  5968  0035B8  C038  F038         	movff	floorf@x+2,?_floorf+2
  5969  0035BC  C039  F039         	movff	floorf@x+3,?_floorf+3
  5970  0035C0  EFA6  F01B         	goto	l2293
  5971  0035C4                     l8268:
  5972                           
  5973                           ; BSR set to: 0
  5974  0035C4  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5975  0035C6  EFE7  F01A         	goto	u8751
  5976  0035CA  EFE9  F01A         	goto	u8750
  5977  0035CE                     u8751:
  5978  0035CE  EF5A  F01B         	goto	l8278
  5979  0035D2                     u8750:
  5980  0035D2                     
  5981                           ; BSR set to: 0
  5982  0035D2  C077  F06D         	movff	floorf@e,??_floorf
  5983  0035D6  0EFF               	movlw	255
  5984  0035D8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5985  0035DA  0EFF               	movlw	255
  5986  0035DC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5987  0035DE  0E7F               	movlw	127
  5988  0035E0  6F70               	movwf	(??_floorf+3)& (0+255),b
  5989  0035E2  0E00               	movlw	0
  5990  0035E4  6F71               	movwf	(??_floorf+4)& (0+255),b
  5991  0035E6                     u8765:
  5992  0035E6  676D               	tstfsz	??_floorf& (0+255),b
  5993  0035E8  EFF8  F01A         	goto	u8766
  5994  0035EC  EF00  F01B         	goto	u8767
  5995  0035F0                     u8766:
  5996  0035F0  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5997  0035F2  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5998  0035F4  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5999  0035F6  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6000  0035F8  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6001  0035FA  2F6D               	decfsz	??_floorf& (0+255),f,b
  6002  0035FC  EFF3  F01A         	goto	u8765
  6003  003600                     u8767:
  6004  003600  C06E  F073         	movff	??_floorf+1,floorf@m
  6005  003604  C06F  F074         	movff	??_floorf+2,floorf@m+1
  6006  003608  C070  F075         	movff	??_floorf+3,floorf@m+2
  6007  00360C  C071  F076         	movff	??_floorf+4,floorf@m+3
  6008  003610  0100               	movlb	0	; () banked
  6009  003612  5173               	movf	floorf@m& (0+255),w,b
  6010  003614  1579               	andwf	floorf@u& (0+255),w,b
  6011  003616  6F6D               	movwf	??_floorf& (0+255),b
  6012  003618  5174               	movf	(floorf@m+1)& (0+255),w,b
  6013  00361A  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6014  00361C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6015  00361E  5175               	movf	(floorf@m+2)& (0+255),w,b
  6016  003620  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6017  003622  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6018  003624  5176               	movf	(floorf@m+3)& (0+255),w,b
  6019  003626  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6020  003628  6F70               	movwf	(??_floorf+3)& (0+255),b
  6021  00362A  516D               	movf	??_floorf& (0+255),w,b
  6022  00362C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6023  00362E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6024  003630  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6025  003632  A4D8               	btfss	status,2,c
  6026  003634  EF1E  F01B         	goto	u8771
  6027  003638  EF20  F01B         	goto	u8770
  6028  00363C                     u8771:
  6029  00363C  EF22  F01B         	goto	l8274
  6030  003640                     u8770:
  6031  003640  EFD8  F01A         	goto	l8266
  6032  003644                     l8274:
  6033                           
  6034                           ; BSR set to: 0
  6035  003644  C079  F06D         	movff	floorf@u,??_floorf
  6036  003648  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6037  00364C  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6038  003650  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6039  003654  0E20               	movlw	32
  6040  003656  EF32  F01B         	goto	u8780
  6041  00365A                     u8785:
  6042  00365A  90D8               	bcf	status,0,c
  6043  00365C  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6044  00365E  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6045  003660  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6046  003662  336D               	rrcf	??_floorf& (0+255),f,b
  6047  003664                     u8780:
  6048  003664  2EE8               	decfsz	wreg,f,c
  6049  003666  EF2D  F01B         	goto	u8785
  6050  00366A  516D               	movf	??_floorf& (0+255),w,b
  6051  00366C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6052  00366E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6053  003670  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6054  003672  B4D8               	btfsc	status,2,c
  6055  003674  EF3E  F01B         	goto	u8791
  6056  003678  EF40  F01B         	goto	u8790
  6057  00367C                     u8791:
  6058  00367C  EF48  F01B         	goto	l2296
  6059  003680                     u8790:
  6060  003680                     
  6061                           ; BSR set to: 0
  6062  003680  5173               	movf	floorf@m& (0+255),w,b
  6063  003682  2779               	addwf	floorf@u& (0+255),f,b
  6064  003684  5174               	movf	(floorf@m+1)& (0+255),w,b
  6065  003686  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6066  003688  5175               	movf	(floorf@m+2)& (0+255),w,b
  6067  00368A  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6068  00368C  5176               	movf	(floorf@m+3)& (0+255),w,b
  6069  00368E  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6070  003690                     l2296:
  6071                           
  6072                           ; BSR set to: 0
  6073  003690  1D73               	comf	floorf@m& (0+255),w,b
  6074  003692  6F6D               	movwf	??_floorf& (0+255),b
  6075  003694  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6076  003696  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6077  003698  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6078  00369A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6079  00369C  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6080  00369E  6F70               	movwf	(??_floorf+3)& (0+255),b
  6081  0036A0  516D               	movf	??_floorf& (0+255),w,b
  6082  0036A2  1779               	andwf	floorf@u& (0+255),f,b
  6083  0036A4  516E               	movf	(??_floorf+1)& (0+255),w,b
  6084  0036A6  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6085  0036A8  516F               	movf	(??_floorf+2)& (0+255),w,b
  6086  0036AA  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6087  0036AC  5170               	movf	(??_floorf+3)& (0+255),w,b
  6088  0036AE  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6089  0036B0  EF9E  F01B         	goto	l8286
  6090  0036B4                     l8278:
  6091                           
  6092                           ; BSR set to: 0
  6093  0036B4  C079  F06D         	movff	floorf@u,??_floorf
  6094  0036B8  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6095  0036BC  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6096  0036C0  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6097  0036C4  0E20               	movlw	32
  6098  0036C6  EF6A  F01B         	goto	u8800
  6099  0036CA                     u8805:
  6100  0036CA  90D8               	bcf	status,0,c
  6101  0036CC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6102  0036CE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6103  0036D0  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6104  0036D2  336D               	rrcf	??_floorf& (0+255),f,b
  6105  0036D4                     u8800:
  6106  0036D4  2EE8               	decfsz	wreg,f,c
  6107  0036D6  EF65  F01B         	goto	u8805
  6108  0036DA  516D               	movf	??_floorf& (0+255),w,b
  6109  0036DC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6110  0036DE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6111  0036E0  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6112  0036E2  A4D8               	btfss	status,2,c
  6113  0036E4  EF76  F01B         	goto	u8811
  6114  0036E8  EF78  F01B         	goto	u8810
  6115  0036EC                     u8811:
  6116  0036EC  EF82  F01B         	goto	l8282
  6117  0036F0                     u8810:
  6118  0036F0                     
  6119                           ; BSR set to: 0
  6120  0036F0  0E00               	movlw	0
  6121  0036F2  6F79               	movwf	floorf@u& (0+255),b
  6122  0036F4  0E00               	movlw	0
  6123  0036F6  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6124  0036F8  0E00               	movlw	0
  6125  0036FA  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6126  0036FC  0E00               	movlw	0
  6127  0036FE  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6128  003700  EF9E  F01B         	goto	l8286
  6129  003704                     l8282:
  6130                           
  6131                           ; BSR set to: 0
  6132  003704  90D8               	bcf	status,0,c
  6133  003706  3579               	rlcf	floorf@u& (0+255),w,b
  6134  003708  6F6D               	movwf	??_floorf& (0+255),b
  6135  00370A  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6136  00370C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6137  00370E  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6138  003710  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6139  003712  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6140  003714  6F70               	movwf	(??_floorf+3)& (0+255),b
  6141  003716  516D               	movf	??_floorf& (0+255),w,b
  6142  003718  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6143  00371A  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6144  00371C  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6145  00371E  B4D8               	btfsc	status,2,c
  6146  003720  EF94  F01B         	goto	u8821
  6147  003724  EF96  F01B         	goto	u8820
  6148  003728                     u8821:
  6149  003728  EF9E  F01B         	goto	l8286
  6150  00372C                     u8820:
  6151  00372C                     
  6152                           ; BSR set to: 0
  6153  00372C  0E00               	movlw	0
  6154  00372E  6F79               	movwf	floorf@u& (0+255),b
  6155  003730  0E00               	movlw	0
  6156  003732  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6157  003734  0E80               	movlw	128
  6158  003736  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6159  003738  0EBF               	movlw	191
  6160  00373A  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6161  00373C                     l8286:
  6162                           
  6163                           ; BSR set to: 0
  6164  00373C  C079  F036         	movff	floorf@u,?_floorf
  6165  003740  C07A  F037         	movff	floorf@u+1,?_floorf+1
  6166  003744  C07B  F038         	movff	floorf@u+2,?_floorf+2
  6167  003748  C07C  F039         	movff	floorf@u+3,?_floorf+3
  6168  00374C                     l2293:
  6169                           
  6170                           ; BSR set to: 0
  6171  00374C  0012               	return		;funcret
  6172  00374E                     __end_of_floorf:
  6173                           	callstack 0
  6174                           
  6175 ;; *************** function ___fpclassifyf *****************
  6176 ;; Defined at:
  6177 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  x               4   19[COMRAM] float 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  u               4   29[COMRAM] struct .
  6182 ;;  e               2   27[COMRAM] int 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  2   19[COMRAM] int 
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;Total ram usage:       14 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; Hardware stack levels required when called: 8
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_efgtoa
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text15
  6207  004850                     __ptext15:
  6208                           	callstack 0
  6209  004850                     ___fpclassifyf:
  6210                           	callstack 16
  6211  004850  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6212  004854  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6213  004858  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6214  00485C  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6215  004860  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6216  004864  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6217  004868  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6218  00486C  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6219  004870  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6220  004874  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6221  004878  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6222  00487C  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6223  004880  0E18               	movlw	24
  6224  004882  EF48  F024         	goto	u8610
  6225  004886                     u8615:
  6226  004886  90D8               	bcf	status,0,c
  6227  004888  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6228  00488A  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6229  00488C  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6230  00488E  3218               	rrcf	??___fpclassifyf^0,f,c
  6231  004890                     u8610:
  6232  004890  2EE8               	decfsz	wreg,f,c
  6233  004892  EF43  F024         	goto	u8615
  6234  004896  5018               	movf	??___fpclassifyf^0,w,c
  6235  004898  6E1C               	movwf	___fpclassifyf@e^0,c
  6236  00489A  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6237  00489C  501C               	movf	___fpclassifyf@e^0,w,c
  6238  00489E  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6239  0048A0  A4D8               	btfss	status,2,c
  6240  0048A2  EF55  F024         	goto	u8621
  6241  0048A6  EF57  F024         	goto	u8620
  6242  0048AA                     u8621:
  6243  0048AA  EF77  F024         	goto	l8238
  6244  0048AE                     u8620:
  6245  0048AE  90D8               	bcf	status,0,c
  6246  0048B0  341E               	rlcf	___fpclassifyf@u^0,w,c
  6247  0048B2  6E18               	movwf	??___fpclassifyf^0,c
  6248  0048B4  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6249  0048B6  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6250  0048B8  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6251  0048BA  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6252  0048BC  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6253  0048BE  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6254  0048C0  5018               	movf	??___fpclassifyf^0,w,c
  6255  0048C2  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6256  0048C4  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6257  0048C6  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6258  0048C8  A4D8               	btfss	status,2,c
  6259  0048CA  EF69  F024         	goto	u8631
  6260  0048CE  EF6B  F024         	goto	u8630
  6261  0048D2                     u8631:
  6262  0048D2  EF71  F024         	goto	l8234
  6263  0048D6                     u8630:
  6264  0048D6  0E00               	movlw	0
  6265  0048D8  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6266  0048DA  0E02               	movlw	2
  6267  0048DC  6E14               	movwf	?___fpclassifyf^0,c
  6268  0048DE  EFA6  F024         	goto	l2279
  6269  0048E2                     l8234:
  6270  0048E2  0E00               	movlw	0
  6271  0048E4  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6272  0048E6  0E03               	movlw	3
  6273  0048E8  6E14               	movwf	?___fpclassifyf^0,c
  6274  0048EA  EFA6  F024         	goto	l2279
  6275  0048EE                     l8238:
  6276  0048EE  281C               	incf	___fpclassifyf@e^0,w,c
  6277  0048F0  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6278  0048F2  A4D8               	btfss	status,2,c
  6279  0048F4  EF7E  F024         	goto	u8641
  6280  0048F8  EF80  F024         	goto	u8640
  6281  0048FC                     u8641:
  6282  0048FC  EFA2  F024         	goto	l8244
  6283  004900                     u8640:
  6284  004900  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6285  004904  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6286  004908  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6287  00490C  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6288  004910  0E09               	movlw	9
  6289  004912                     u8655:
  6290  004912  90D8               	bcf	status,0,c
  6291  004914  3618               	rlcf	??___fpclassifyf^0,f,c
  6292  004916  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6293  004918  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6294  00491A  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6295  00491C  2EE8               	decfsz	wreg,f,c
  6296  00491E  EF89  F024         	goto	u8655
  6297  004922  5018               	movf	??___fpclassifyf^0,w,c
  6298  004924  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6299  004926  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6300  004928  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6301  00492A  B4D8               	btfsc	status,2,c
  6302  00492C  EF9A  F024         	goto	u8661
  6303  004930  EF9D  F024         	goto	u8660
  6304  004934                     u8661:
  6305  004934  0E01               	movlw	1
  6306  004936  EF9E  F024         	goto	u8670
  6307  00493A                     u8660:
  6308  00493A  0E00               	movlw	0
  6309  00493C                     u8670:
  6310  00493C  6E14               	movwf	?___fpclassifyf^0,c
  6311  00493E  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6312  004940  EFA6  F024         	goto	l2279
  6313  004944                     l8244:
  6314  004944  0E00               	movlw	0
  6315  004946  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6316  004948  0E04               	movlw	4
  6317  00494A  6E14               	movwf	?___fpclassifyf^0,c
  6318  00494C                     l2279:
  6319  00494C  0012               	return		;funcret
  6320  00494E                     __end_of___fpclassifyf:
  6321                           	callstack 0
  6322                           
  6323 ;; *************** function ___flsub *****************
  6324 ;; Defined at:
  6325 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  b               4   25[BANK0 ] int 
  6328 ;;  a               4   29[BANK0 ] int 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  4   25[BANK0 ] int 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6340 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;Total ram usage:        8 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 9
  6347 ;; This function calls:
  6348 ;;		___fladd
  6349 ;; This function is called by:
  6350 ;;		_efgtoa
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text16
  6355  0055D2                     __ptext16:
  6356                           	callstack 0
  6357  0055D2                     ___flsub:
  6358                           	callstack 15
  6359  0055D2  0E00               	movlw	0
  6360  0055D4  0100               	movlb	0	; () banked
  6361  0055D6  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6362  0055D8  0E00               	movlw	0
  6363  0055DA  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6364  0055DC  0E00               	movlw	0
  6365  0055DE  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6366  0055E0  0E80               	movlw	128
  6367  0055E2  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6368  0055E4                     
  6369                           ; BSR set to: 0
  6370  0055E4  C079  F06D         	movff	___flsub@b,___fladd@b
  6371  0055E8  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6372  0055EC  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6373  0055F0  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6374  0055F4  C07D  F071         	movff	___flsub@a,___fladd@a
  6375  0055F8  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6376  0055FC  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6377  005600  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6378  005604  EC50  F011         	call	___fladd	;wreg free
  6379  005608  C06D  F079         	movff	?___fladd,?___flsub
  6380  00560C  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6381  005610  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6382  005614  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6383  005618  0012               	return		;funcret
  6384  00561A                     __end_of___flsub:
  6385                           	callstack 0
  6386                           
  6387 ;; *************** function ___flneg *****************
  6388 ;; Defined at:
  6389 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  f1              4   19[COMRAM] int 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  4   19[COMRAM] int 
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;Total ram usage:        4 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; Hardware stack levels required when called: 8
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_efgtoa
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text17
  6418  0057CA                     __ptext17:
  6419                           	callstack 0
  6420  0057CA                     ___flneg:
  6421                           	callstack 16
  6422  0057CA  5014               	movf	___flneg@f1^0,w,c
  6423  0057CC  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6424  0057CE  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6425  0057D0  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6426  0057D2  B4D8               	btfsc	status,2,c
  6427  0057D4  EFEE  F02B         	goto	u8481
  6428  0057D8  EFF0  F02B         	goto	u8480
  6429  0057DC                     u8481:
  6430  0057DC  EFF8  F02B         	goto	l8152
  6431  0057E0                     u8480:
  6432  0057E0  0E00               	movlw	0
  6433  0057E2  1A14               	xorwf	___flneg@f1^0,f,c
  6434  0057E4  0E00               	movlw	0
  6435  0057E6  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6436  0057E8  0E00               	movlw	0
  6437  0057EA  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6438  0057EC  0E80               	movlw	128
  6439  0057EE  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6440  0057F0                     l8152:
  6441  0057F0  C014  F014         	movff	___flneg@f1,?___flneg
  6442  0057F4  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  6443  0057F8  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  6444  0057FC  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  6445  005800  0012               	return		;funcret
  6446  005802                     __end_of___flneg:
  6447                           	callstack 0
  6448                           
  6449 ;; *************** function ___flge *****************
  6450 ;; Defined at:
  6451 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  ff1             4   13[BANK0 ] int 
  6454 ;;  ff2             4   17[BANK0 ] int 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;		None               void
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6466 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;Total ram usage:       12 bytes
  6471 ;; Hardware stack levels used: 1
  6472 ;; Hardware stack levels required when called: 8
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_loop
  6477 ;;		_checkBatt
  6478 ;;		_efgtoa
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text18
  6483  00474A                     __ptext18:
  6484                           	callstack 0
  6485  00474A                     ___flge:
  6486                           	callstack 16
  6487  00474A  0E00               	movlw	0
  6488  00474C  0100               	movlb	0	; () banked
  6489  00474E  156D               	andwf	___flge@ff1& (0+255),w,b
  6490  004750  6E36               	movwf	??___flge^0,c
  6491  004752  0E00               	movlw	0
  6492  004754  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  6493  004756  6E37               	movwf	(??___flge+1)^0,c
  6494  004758  0E80               	movlw	128
  6495  00475A  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  6496  00475C  6E38               	movwf	(??___flge+2)^0,c
  6497  00475E  0E7F               	movlw	127
  6498  004760  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  6499  004762  6E39               	movwf	(??___flge+3)^0,c
  6500  004764  5036               	movf	??___flge^0,w,c
  6501  004766  1037               	iorwf	(??___flge+1)^0,w,c
  6502  004768  1038               	iorwf	(??___flge+2)^0,w,c
  6503  00476A  1039               	iorwf	(??___flge+3)^0,w,c
  6504  00476C  A4D8               	btfss	status,2,c
  6505  00476E  EFBB  F023         	goto	u8431
  6506  004772  EFBD  F023         	goto	u8430
  6507  004776                     u8431:
  6508  004776  EFC5  F023         	goto	l8130
  6509  00477A                     u8430:
  6510  00477A                     
  6511                           ; BSR set to: 0
  6512  00477A  0E00               	movlw	0
  6513  00477C  6F6D               	movwf	___flge@ff1& (0+255),b
  6514  00477E  0E00               	movlw	0
  6515  004780  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  6516  004782  0E00               	movlw	0
  6517  004784  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  6518  004786  0E00               	movlw	0
  6519  004788  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  6520  00478A                     l8130:
  6521                           
  6522                           ; BSR set to: 0
  6523  00478A  0E00               	movlw	0
  6524  00478C  1571               	andwf	___flge@ff2& (0+255),w,b
  6525  00478E  6E36               	movwf	??___flge^0,c
  6526  004790  0E00               	movlw	0
  6527  004792  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  6528  004794  6E37               	movwf	(??___flge+1)^0,c
  6529  004796  0E80               	movlw	128
  6530  004798  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  6531  00479A  6E38               	movwf	(??___flge+2)^0,c
  6532  00479C  0E7F               	movlw	127
  6533  00479E  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  6534  0047A0  6E39               	movwf	(??___flge+3)^0,c
  6535  0047A2  5036               	movf	??___flge^0,w,c
  6536  0047A4  1037               	iorwf	(??___flge+1)^0,w,c
  6537  0047A6  1038               	iorwf	(??___flge+2)^0,w,c
  6538  0047A8  1039               	iorwf	(??___flge+3)^0,w,c
  6539  0047AA  A4D8               	btfss	status,2,c
  6540  0047AC  EFDA  F023         	goto	u8441
  6541  0047B0  EFDC  F023         	goto	u8440
  6542  0047B4                     u8441:
  6543  0047B4  EFE4  F023         	goto	l8134
  6544  0047B8                     u8440:
  6545  0047B8                     
  6546                           ; BSR set to: 0
  6547  0047B8  0E00               	movlw	0
  6548  0047BA  6F71               	movwf	___flge@ff2& (0+255),b
  6549  0047BC  0E00               	movlw	0
  6550  0047BE  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  6551  0047C0  0E00               	movlw	0
  6552  0047C2  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  6553  0047C4  0E00               	movlw	0
  6554  0047C6  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  6555  0047C8                     l8134:
  6556                           
  6557                           ; BSR set to: 0
  6558  0047C8  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  6559  0047CA  EFE9  F023         	goto	u8451
  6560  0047CE  EFEB  F023         	goto	u8450
  6561  0047D2                     u8451:
  6562  0047D2  EFF4  F023         	goto	l8138
  6563  0047D6                     u8450:
  6564  0047D6                     
  6565                           ; BSR set to: 0
  6566  0047D6  6D6D               	negf	___flge@ff1& (0+255),b
  6567  0047D8  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  6568  0047DA  B0D8               	btfsc	status,0,c
  6569  0047DC  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  6570  0047DE  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  6571  0047E0  B0D8               	btfsc	status,0,c
  6572  0047E2  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  6573  0047E4  0E80               	movlw	128
  6574  0047E6  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6575  0047E8                     l8138:
  6576                           
  6577                           ; BSR set to: 0
  6578  0047E8  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  6579  0047EA  EFF9  F023         	goto	u8461
  6580  0047EE  EFFB  F023         	goto	u8460
  6581  0047F2                     u8461:
  6582  0047F2  EF04  F024         	goto	l1669
  6583  0047F6                     u8460:
  6584  0047F6                     
  6585                           ; BSR set to: 0
  6586  0047F6  6D71               	negf	___flge@ff2& (0+255),b
  6587  0047F8  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  6588  0047FA  B0D8               	btfsc	status,0,c
  6589  0047FC  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  6590  0047FE  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  6591  004800  B0D8               	btfsc	status,0,c
  6592  004802  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  6593  004804  0E80               	movlw	128
  6594  004806  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6595  004808                     l1669:
  6596                           
  6597                           ; BSR set to: 0
  6598  004808  0E00               	movlw	0
  6599  00480A  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  6600  00480C  0E00               	movlw	0
  6601  00480E  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6602  004810  0E00               	movlw	0
  6603  004812  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6604  004814  0E80               	movlw	128
  6605  004816  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6606  004818  0E00               	movlw	0
  6607  00481A  1B71               	xorwf	___flge@ff2& (0+255),f,b
  6608  00481C  0E00               	movlw	0
  6609  00481E  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6610  004820  0E00               	movlw	0
  6611  004822  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6612  004824  0E80               	movlw	128
  6613  004826  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6614  004828  5171               	movf	___flge@ff2& (0+255),w,b
  6615  00482A  5D6D               	subwf	___flge@ff1& (0+255),w,b
  6616  00482C  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  6617  00482E  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6618  004830  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  6619  004832  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6620  004834  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  6621  004836  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6622  004838  B0D8               	btfsc	status,0,c
  6623  00483A  EF21  F024         	goto	u8471
  6624  00483E  EF23  F024         	goto	u8470
  6625  004842                     u8471:
  6626  004842  EF26  F024         	goto	l8144
  6627  004846                     u8470:
  6628  004846                     
  6629                           ; BSR set to: 0
  6630  004846  90D8               	bcf	status,0,c
  6631  004848  EF27  F024         	goto	l1674
  6632  00484C                     l8144:
  6633                           
  6634                           ; BSR set to: 0
  6635  00484C  80D8               	bsf	status,0,c
  6636  00484E                     l1674:
  6637                           
  6638                           ; BSR set to: 0
  6639  00484E  0012               	return		;funcret
  6640  004850                     __end_of___flge:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function ___fleq *****************
  6644 ;; Defined at:
  6645 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  ff1             4   19[COMRAM] int 
  6648 ;;  ff2             4   23[COMRAM] int 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;		None               void
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6660 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;Total ram usage:       12 bytes
  6665 ;; Hardware stack levels used: 1
  6666 ;; Hardware stack levels required when called: 8
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_efgtoa
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text19
  6675  004EE4                     __ptext19:
  6676                           	callstack 0
  6677  004EE4                     ___fleq:
  6678                           	callstack 16
  6679  004EE4  0E00               	movlw	0
  6680  004EE6  1414               	andwf	___fleq@ff1^0,w,c
  6681  004EE8  6E1C               	movwf	??___fleq^0,c
  6682  004EEA  0E00               	movlw	0
  6683  004EEC  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6684  004EEE  6E1D               	movwf	(??___fleq+1)^0,c
  6685  004EF0  0E80               	movlw	128
  6686  004EF2  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6687  004EF4  6E1E               	movwf	(??___fleq+2)^0,c
  6688  004EF6  0E7F               	movlw	127
  6689  004EF8  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6690  004EFA  6E1F               	movwf	(??___fleq+3)^0,c
  6691  004EFC  501C               	movf	??___fleq^0,w,c
  6692  004EFE  101D               	iorwf	(??___fleq+1)^0,w,c
  6693  004F00  101E               	iorwf	(??___fleq+2)^0,w,c
  6694  004F02  101F               	iorwf	(??___fleq+3)^0,w,c
  6695  004F04  A4D8               	btfss	status,2,c
  6696  004F06  EF87  F027         	goto	u8401
  6697  004F0A  EF89  F027         	goto	u8400
  6698  004F0E                     u8401:
  6699  004F0E  EF91  F027         	goto	l8114
  6700  004F12                     u8400:
  6701  004F12  0E00               	movlw	0
  6702  004F14  6E14               	movwf	___fleq@ff1^0,c
  6703  004F16  0E00               	movlw	0
  6704  004F18  6E15               	movwf	(___fleq@ff1+1)^0,c
  6705  004F1A  0E00               	movlw	0
  6706  004F1C  6E16               	movwf	(___fleq@ff1+2)^0,c
  6707  004F1E  0E00               	movlw	0
  6708  004F20  6E17               	movwf	(___fleq@ff1+3)^0,c
  6709  004F22                     l8114:
  6710  004F22  0E00               	movlw	0
  6711  004F24  1418               	andwf	___fleq@ff2^0,w,c
  6712  004F26  6E1C               	movwf	??___fleq^0,c
  6713  004F28  0E00               	movlw	0
  6714  004F2A  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6715  004F2C  6E1D               	movwf	(??___fleq+1)^0,c
  6716  004F2E  0E80               	movlw	128
  6717  004F30  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6718  004F32  6E1E               	movwf	(??___fleq+2)^0,c
  6719  004F34  0E7F               	movlw	127
  6720  004F36  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6721  004F38  6E1F               	movwf	(??___fleq+3)^0,c
  6722  004F3A  501C               	movf	??___fleq^0,w,c
  6723  004F3C  101D               	iorwf	(??___fleq+1)^0,w,c
  6724  004F3E  101E               	iorwf	(??___fleq+2)^0,w,c
  6725  004F40  101F               	iorwf	(??___fleq+3)^0,w,c
  6726  004F42  A4D8               	btfss	status,2,c
  6727  004F44  EFA6  F027         	goto	u8411
  6728  004F48  EFA8  F027         	goto	u8410
  6729  004F4C                     u8411:
  6730  004F4C  EFB0  F027         	goto	l8118
  6731  004F50                     u8410:
  6732  004F50  0E00               	movlw	0
  6733  004F52  6E18               	movwf	___fleq@ff2^0,c
  6734  004F54  0E00               	movlw	0
  6735  004F56  6E19               	movwf	(___fleq@ff2+1)^0,c
  6736  004F58  0E00               	movlw	0
  6737  004F5A  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6738  004F5C  0E00               	movlw	0
  6739  004F5E  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6740  004F60                     l8118:
  6741  004F60  5018               	movf	___fleq@ff2^0,w,c
  6742  004F62  1814               	xorwf	___fleq@ff1^0,w,c
  6743  004F64  E10F               	bnz	u8420
  6744  004F66  5019               	movf	(___fleq@ff2+1)^0,w,c
  6745  004F68  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6746  004F6A  E10C               	bnz	u8420
  6747  004F6C  501A               	movf	(___fleq@ff2+2)^0,w,c
  6748  004F6E  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6749  004F70  E109               	bnz	u8420
  6750  004F72  501B               	movf	(___fleq@ff2+3)^0,w,c
  6751  004F74  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6752  004F76  B4D8               	btfsc	status,2,c
  6753  004F78  EFC0  F027         	goto	u8421
  6754  004F7C  EFC2  F027         	goto	u8420
  6755  004F80                     u8421:
  6756  004F80  EFC5  F027         	goto	l8122
  6757  004F84                     u8420:
  6758  004F84  90D8               	bcf	status,0,c
  6759  004F86  EFC6  F027         	goto	l1663
  6760  004F8A                     l8122:
  6761  004F8A  80D8               	bsf	status,0,c
  6762  004F8C                     l1663:
  6763  004F8C  0012               	return		;funcret
  6764  004F8E                     __end_of___fleq:
  6765                           	callstack 0
  6766                           
  6767 ;; *************** function ___awmod *****************
  6768 ;; Defined at:
  6769 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  dividend        2   19[COMRAM] int 
  6772 ;;  divisor         2   21[COMRAM] int 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  sign            1   24[COMRAM] unsigned char 
  6775 ;;  counter         1   23[COMRAM] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  2   19[COMRAM] int 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;Total ram usage:        6 bytes
  6790 ;; Hardware stack levels used: 1
  6791 ;; Hardware stack levels required when called: 8
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		_efgtoa
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text20
  6800  004E34                     __ptext20:
  6801                           	callstack 0
  6802  004E34                     ___awmod:
  6803                           	callstack 16
  6804  004E34  0E00               	movlw	0
  6805  004E36  6E19               	movwf	___awmod@sign^0,c
  6806  004E38  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  6807  004E3A  EF23  F027         	goto	u8340
  6808  004E3E  EF21  F027         	goto	u8341
  6809  004E42                     u8341:
  6810  004E42  EF29  F027         	goto	l8082
  6811  004E46                     u8340:
  6812  004E46  6C14               	negf	___awmod@dividend^0,c
  6813  004E48  1E15               	comf	(___awmod@dividend+1)^0,f,c
  6814  004E4A  B0D8               	btfsc	status,0,c
  6815  004E4C  2A15               	incf	(___awmod@dividend+1)^0,f,c
  6816  004E4E  0E01               	movlw	1
  6817  004E50  6E19               	movwf	___awmod@sign^0,c
  6818  004E52                     l8082:
  6819  004E52  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  6820  004E54  EF30  F027         	goto	u8350
  6821  004E58  EF2E  F027         	goto	u8351
  6822  004E5C                     u8351:
  6823  004E5C  EF34  F027         	goto	l8086
  6824  004E60                     u8350:
  6825  004E60  6C16               	negf	___awmod@divisor^0,c
  6826  004E62  1E17               	comf	(___awmod@divisor+1)^0,f,c
  6827  004E64  B0D8               	btfsc	status,0,c
  6828  004E66  2A17               	incf	(___awmod@divisor+1)^0,f,c
  6829  004E68                     l8086:
  6830  004E68  5016               	movf	___awmod@divisor^0,w,c
  6831  004E6A  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  6832  004E6C  B4D8               	btfsc	status,2,c
  6833  004E6E  EF3B  F027         	goto	u8361
  6834  004E72  EF3D  F027         	goto	u8360
  6835  004E76                     u8361:
  6836  004E76  EF61  F027         	goto	l8102
  6837  004E7A                     u8360:
  6838  004E7A  0E01               	movlw	1
  6839  004E7C  6E18               	movwf	___awmod@counter^0,c
  6840  004E7E  EF45  F027         	goto	l8092
  6841  004E82                     l8090:
  6842  004E82  90D8               	bcf	status,0,c
  6843  004E84  3616               	rlcf	___awmod@divisor^0,f,c
  6844  004E86  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  6845  004E88  2A18               	incf	___awmod@counter^0,f,c
  6846  004E8A                     l8092:
  6847  004E8A  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  6848  004E8C  EF4A  F027         	goto	u8371
  6849  004E90  EF4C  F027         	goto	u8370
  6850  004E94                     u8371:
  6851  004E94  EF41  F027         	goto	l8090
  6852  004E98                     u8370:
  6853  004E98                     l8094:
  6854  004E98  5016               	movf	___awmod@divisor^0,w,c
  6855  004E9A  5C14               	subwf	___awmod@dividend^0,w,c
  6856  004E9C  5017               	movf	(___awmod@divisor+1)^0,w,c
  6857  004E9E  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  6858  004EA0  A0D8               	btfss	status,0,c
  6859  004EA2  EF55  F027         	goto	u8381
  6860  004EA6  EF57  F027         	goto	u8380
  6861  004EAA                     u8381:
  6862  004EAA  EF5B  F027         	goto	l8098
  6863  004EAE                     u8380:
  6864  004EAE  5016               	movf	___awmod@divisor^0,w,c
  6865  004EB0  5E14               	subwf	___awmod@dividend^0,f,c
  6866  004EB2  5017               	movf	(___awmod@divisor+1)^0,w,c
  6867  004EB4  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  6868  004EB6                     l8098:
  6869  004EB6  90D8               	bcf	status,0,c
  6870  004EB8  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  6871  004EBA  3216               	rrcf	___awmod@divisor^0,f,c
  6872  004EBC  2E18               	decfsz	___awmod@counter^0,f,c
  6873  004EBE  EF4C  F027         	goto	l8094
  6874  004EC2                     l8102:
  6875  004EC2  5019               	movf	___awmod@sign^0,w,c
  6876  004EC4  B4D8               	btfsc	status,2,c
  6877  004EC6  EF67  F027         	goto	u8391
  6878  004ECA  EF69  F027         	goto	u8390
  6879  004ECE                     u8391:
  6880  004ECE  EF6D  F027         	goto	l8106
  6881  004ED2                     u8390:
  6882  004ED2  6C14               	negf	___awmod@dividend^0,c
  6883  004ED4  1E15               	comf	(___awmod@dividend+1)^0,f,c
  6884  004ED6  B0D8               	btfsc	status,0,c
  6885  004ED8  2A15               	incf	(___awmod@dividend+1)^0,f,c
  6886  004EDA                     l8106:
  6887  004EDA  C014  F014         	movff	___awmod@dividend,?___awmod
  6888  004EDE  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  6889  004EE2  0012               	return		;funcret
  6890  004EE4                     __end_of___awmod:
  6891                           	callstack 0
  6892                           
  6893 ;; *************** function _dtoa *****************
  6894 ;; Defined at:
  6895 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6898 ;;		 -> NULL(0), 
  6899 ;;  d               8    2[BANK0 ] long long 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;  n               8   18[BANK0 ] long long 
  6902 ;;  i               2   26[BANK0 ] int 
  6903 ;;  s               2   16[BANK0 ] int 
  6904 ;;  w               2   14[BANK0 ] int 
  6905 ;;  p               2   12[BANK0 ] int 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    0[BANK0 ] int 
  6908 ;; Registers used:
  6909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6915 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;Total ram usage:       36 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; Hardware stack levels required when called: 13
  6922 ;; This function calls:
  6923 ;;		___aodiv
  6924 ;;		___aomod
  6925 ;;		_abs
  6926 ;;		_pad
  6927 ;; This function is called by:
  6928 ;;		_vfpfcnvrt
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text21
  6933  003252                     __ptext21:
  6934                           	callstack 0
  6935  003252                     _dtoa:
  6936                           	callstack 12
  6937  003252                     
  6938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6939  003252  C062  F072         	movff	dtoa@d,dtoa@n
  6940  003256  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  6941  00325A  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  6942  00325E  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  6943  003262  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  6944  003266  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  6945  00326A  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  6946  00326E  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  6947  003272                     
  6948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6949  003272  0100               	movlb	0	; () banked
  6950  003274  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  6951  003276  EF3F  F019         	goto	u8831
  6952  00327A  EF42  F019         	goto	u8830
  6953  00327E                     u8831:
  6954  00327E  0E01               	movlw	1
  6955  003280  EF43  F019         	goto	u8840
  6956  003284                     u8830:
  6957  003284  0E00               	movlw	0
  6958  003286                     u8840:
  6959  003286  6F70               	movwf	dtoa@s& (0+255),b
  6960  003288  6B71               	clrf	(dtoa@s+1)& (0+255),b
  6961                           
  6962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6963  00328A  5170               	movf	dtoa@s& (0+255),w,b
  6964  00328C  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  6965  00328E  B4D8               	btfsc	status,2,c
  6966  003290  EF4C  F019         	goto	u8851
  6967  003294  EF4E  F019         	goto	u8850
  6968  003298                     u8851:
  6969  003298  EF5E  F019         	goto	l8296
  6970  00329C                     u8850:
  6971  00329C                     
  6972                           ; BSR set to: 0
  6973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6974  00329C  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  6975  00329E  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  6976  0032A0  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  6977  0032A2  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  6978  0032A4  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  6979  0032A6  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  6980  0032A8  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  6981  0032AA  6D72               	negf	dtoa@n& (0+255),b
  6982  0032AC  0E00               	movlw	0
  6983  0032AE  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  6984  0032B0  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  6985  0032B2  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  6986  0032B4  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  6987  0032B6  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  6988  0032B8  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  6989  0032BA  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  6990  0032BC                     l8296:
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6994  0032BC  BE3B               	btfsc	(_prec+1)^0,7,c
  6995  0032BE  EF63  F019         	goto	u8861
  6996  0032C2  EF65  F019         	goto	u8860
  6997  0032C6                     u8861:
  6998  0032C6  EF66  F019         	goto	l8300
  6999  0032CA                     u8860:
  7000  0032CA                     
  7001                           ; BSR set to: 0
  7002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7003  0032CA  923C               	bcf	_flags^0,1,c
  7004  0032CC                     l8300:
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7008  0032CC  BE3B               	btfsc	(_prec+1)^0,7,c
  7009  0032CE  EF73  F019         	goto	u8870
  7010  0032D2  503B               	movf	(_prec+1)^0,w,c
  7011  0032D4  E106               	bnz	u8871
  7012  0032D6  043A               	decf	_prec^0,w,c
  7013  0032D8  B0D8               	btfsc	status,0,c
  7014  0032DA  EF71  F019         	goto	u8871
  7015  0032DE  EF73  F019         	goto	u8870
  7016  0032E2                     u8871:
  7017  0032E2  EF79  F019         	goto	l2132
  7018  0032E6                     u8870:
  7019  0032E6                     
  7020                           ; BSR set to: 0
  7021  0032E6  0E00               	movlw	0
  7022  0032E8  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7023  0032EA  0E01               	movlw	1
  7024  0032EC  6F6C               	movwf	dtoa@p& (0+255),b
  7025  0032EE  EF7D  F019         	goto	l2134
  7026  0032F2                     l2132:
  7027                           
  7028                           ; BSR set to: 0
  7029  0032F2  C03A  F06C         	movff	_prec,dtoa@p
  7030  0032F6  C03B  F06D         	movff	_prec+1,dtoa@p+1
  7031  0032FA                     l2134:
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7035  0032FA  C0E5  F06E         	movff	_width,dtoa@w
  7036  0032FE  C0E6  F06F         	movff	_width+1,dtoa@w+1
  7037  003302                     
  7038                           ; BSR set to: 0
  7039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7040  003302  5170               	movf	dtoa@s& (0+255),w,b
  7041  003304  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7042  003306  A4D8               	btfss	status,2,c
  7043  003308  EF88  F019         	goto	u8881
  7044  00330C  EF8A  F019         	goto	u8880
  7045  003310                     u8881:
  7046  003310  EF91  F019         	goto	l8308
  7047  003314                     u8880:
  7048  003314                     
  7049                           ; BSR set to: 0
  7050  003314  A43C               	btfss	_flags^0,2,c
  7051  003316  EF8F  F019         	goto	u8891
  7052  00331A  EF91  F019         	goto	u8890
  7053  00331E                     u8891:
  7054  00331E  EF94  F019         	goto	l8310
  7055  003322                     u8890:
  7056  003322                     l8308:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7060  003322  076E               	decf	dtoa@w& (0+255),f,b
  7061  003324  A0D8               	btfss	status,0,c
  7062  003326  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7063  003328                     l8310:
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7067  003328  0E00               	movlw	0
  7068  00332A  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7069  00332C  0E4F               	movlw	79
  7070  00332E  6F7A               	movwf	dtoa@i& (0+255),b
  7071  003330                     
  7072                           ; BSR set to: 0
  7073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7074  003330  0E00               	movlw	0
  7075  003332  0101               	movlb	1	; () banked
  7076  003334  6F89               	movwf	(_dbuf+79)& (0+255),b
  7077                           
  7078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7079  003336  EF1A  F01A         	goto	l8324
  7080  00333A                     l8314:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7084  00333A  077A               	decf	dtoa@i& (0+255),f,b
  7085  00333C  A0D8               	btfss	status,0,c
  7086  00333E  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7087  003340                     
  7088                           ; BSR set to: 0
  7089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7090  003340  0E3A               	movlw	low _dbuf
  7091  003342  257A               	addwf	dtoa@i& (0+255),w,b
  7092  003344  6ED9               	movwf	fsr2l,c
  7093  003346  0E01               	movlw	high _dbuf
  7094  003348  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7095  00334A  6EDA               	movwf	fsr2h,c
  7096  00334C  C072  F014         	movff	dtoa@n,___aomod@dividend
  7097  003350  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7098  003354  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7099  003358  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7100  00335C  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7101  003360  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7102  003364  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7103  003368  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7104  00336C  0E0A               	movlw	10
  7105  00336E  6E1C               	movwf	___aomod@divisor^0,c
  7106  003370  0E00               	movlw	0
  7107  003372  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7108  003374  0E00               	movlw	0
  7109  003376  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7110  003378  0E00               	movlw	0
  7111  00337A  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7112  00337C  0E00               	movlw	0
  7113  00337E  6E20               	movwf	(___aomod@divisor+4)^0,c
  7114  003380  0E00               	movlw	0
  7115  003382  6E21               	movwf	(___aomod@divisor+5)^0,c
  7116  003384  0E00               	movlw	0
  7117  003386  6E22               	movwf	(___aomod@divisor+6)^0,c
  7118  003388  0E00               	movlw	0
  7119  00338A  6E23               	movwf	(___aomod@divisor+7)^0,c
  7120  00338C  EC1D  F020         	call	___aomod	;wreg free
  7121  003390  C014  F031         	movff	?___aomod,??_dtoa
  7122  003394  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7123  003398  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7124  00339C  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7125  0033A0  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7126  0033A4  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7127  0033A8  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7128  0033AC  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7129  0033B0  C031  F026         	movff	??_dtoa,abs@a
  7130  0033B4  C033  F027         	movff	??_dtoa+2,abs@a+1
  7131  0033B8  EC51  F02B         	call	_abs	;wreg free
  7132  0033BC  5026               	movf	?_abs^0,w,c
  7133  0033BE  0F30               	addlw	48
  7134  0033C0  6EDF               	movwf	indf2,c
  7135  0033C2                     
  7136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7137  0033C2  0100               	movlb	0	; () banked
  7138  0033C4  076C               	decf	dtoa@p& (0+255),f,b
  7139  0033C6  A0D8               	btfss	status,0,c
  7140  0033C8  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7141  0033CA                     
  7142                           ; BSR set to: 0
  7143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7144  0033CA  076E               	decf	dtoa@w& (0+255),f,b
  7145  0033CC  A0D8               	btfss	status,0,c
  7146  0033CE  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7147  0033D0                     
  7148                           ; BSR set to: 0
  7149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7150  0033D0  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7151  0033D4  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7152  0033D8  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7153  0033DC  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7154  0033E0  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7155  0033E4  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7156  0033E8  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7157  0033EC  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7158  0033F0  0E0A               	movlw	10
  7159  0033F2  6E1C               	movwf	___aodiv@divisor^0,c
  7160  0033F4  0E00               	movlw	0
  7161  0033F6  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7162  0033F8  0E00               	movlw	0
  7163  0033FA  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7164  0033FC  0E00               	movlw	0
  7165  0033FE  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7166  003400  0E00               	movlw	0
  7167  003402  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7168  003404  0E00               	movlw	0
  7169  003406  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7170  003408  0E00               	movlw	0
  7171  00340A  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7172  00340C  0E00               	movlw	0
  7173  00340E  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7174  003410  EC59  F01F         	call	___aodiv	;wreg free
  7175  003414  C014  F072         	movff	?___aodiv,dtoa@n
  7176  003418  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7177  00341C  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7178  003420  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7179  003424  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7180  003428  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7181  00342C  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7182  003430  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7183  003434                     l8324:
  7184                           
  7185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7186  003434  0100               	movlb	0	; () banked
  7187  003436  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7188  003438  EF26  F01A         	goto	u8901
  7189  00343C  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7190  00343E  E108               	bnz	u8900
  7191  003440  057A               	decf	dtoa@i& (0+255),w,b
  7192  003442  A0D8               	btfss	status,0,c
  7193  003444  EF26  F01A         	goto	u8901
  7194  003448  EF28  F01A         	goto	u8900
  7195  00344C                     u8901:
  7196  00344C  EF58  F01A         	goto	l8334
  7197  003450                     u8900:
  7198  003450                     
  7199                           ; BSR set to: 0
  7200  003450  5172               	movf	dtoa@n& (0+255),w,b
  7201  003452  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7202  003454  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7203  003456  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7204  003458  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7205  00345A  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7206  00345C  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7207  00345E  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7208  003460  A4D8               	btfss	status,2,c
  7209  003462  EF35  F01A         	goto	u8911
  7210  003466  EF37  F01A         	goto	u8910
  7211  00346A                     u8911:
  7212  00346A  EF9D  F019         	goto	l8314
  7213  00346E                     u8910:
  7214  00346E                     
  7215                           ; BSR set to: 0
  7216  00346E  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7217  003470  EF44  F01A         	goto	u8920
  7218  003474  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7219  003476  E106               	bnz	u8921
  7220  003478  056C               	decf	dtoa@p& (0+255),w,b
  7221  00347A  B0D8               	btfsc	status,0,c
  7222  00347C  EF42  F01A         	goto	u8921
  7223  003480  EF44  F01A         	goto	u8920
  7224  003484                     u8921:
  7225  003484  EF9D  F019         	goto	l8314
  7226  003488                     u8920:
  7227  003488                     
  7228                           ; BSR set to: 0
  7229  003488  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7230  00348A  EF4F  F01A         	goto	u8931
  7231  00348E  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7232  003490  E108               	bnz	u8930
  7233  003492  056E               	decf	dtoa@w& (0+255),w,b
  7234  003494  A0D8               	btfss	status,0,c
  7235  003496  EF4F  F01A         	goto	u8931
  7236  00349A  EF51  F01A         	goto	u8930
  7237  00349E                     u8931:
  7238  00349E  EF58  F01A         	goto	l8334
  7239  0034A2                     u8930:
  7240  0034A2                     
  7241                           ; BSR set to: 0
  7242  0034A2  B23C               	btfsc	_flags^0,1,c
  7243  0034A4  EF56  F01A         	goto	u8941
  7244  0034A8  EF58  F01A         	goto	u8940
  7245  0034AC                     u8941:
  7246  0034AC  EF9D  F019         	goto	l8314
  7247  0034B0                     u8940:
  7248  0034B0                     l8334:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7252  0034B0  5170               	movf	dtoa@s& (0+255),w,b
  7253  0034B2  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7254  0034B4  A4D8               	btfss	status,2,c
  7255  0034B6  EF5F  F01A         	goto	u8951
  7256  0034BA  EF61  F01A         	goto	u8950
  7257  0034BE                     u8951:
  7258  0034BE  EF68  F01A         	goto	l8338
  7259  0034C2                     u8950:
  7260  0034C2                     
  7261                           ; BSR set to: 0
  7262  0034C2  A43C               	btfss	_flags^0,2,c
  7263  0034C4  EF66  F01A         	goto	u8961
  7264  0034C8  EF68  F01A         	goto	u8960
  7265  0034CC                     u8961:
  7266  0034CC  EF87  F01A         	goto	l8348
  7267  0034D0                     u8960:
  7268  0034D0                     l8338:
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7272  0034D0  077A               	decf	dtoa@i& (0+255),f,b
  7273  0034D2  A0D8               	btfss	status,0,c
  7274  0034D4  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7275  0034D6                     
  7276                           ; BSR set to: 0
  7277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7278  0034D6  5170               	movf	dtoa@s& (0+255),w,b
  7279  0034D8  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7280  0034DA  A4D8               	btfss	status,2,c
  7281  0034DC  EF72  F01A         	goto	u8971
  7282  0034E0  EF74  F01A         	goto	u8970
  7283  0034E4                     u8971:
  7284  0034E4  EF7A  F01A         	goto	l8344
  7285  0034E8                     u8970:
  7286  0034E8                     
  7287                           ; BSR set to: 0
  7288  0034E8  0E00               	movlw	0
  7289  0034EA  6F6B               	movwf	(_dtoa$3540+1)& (0+255),b
  7290  0034EC  0E2B               	movlw	43
  7291  0034EE  6F6A               	movwf	_dtoa$3540& (0+255),b
  7292  0034F0  EF7E  F01A         	goto	l8346
  7293  0034F4                     l8344:
  7294                           
  7295                           ; BSR set to: 0
  7296  0034F4  0E00               	movlw	0
  7297  0034F6  6F6B               	movwf	(_dtoa$3540+1)& (0+255),b
  7298  0034F8  0E2D               	movlw	45
  7299  0034FA  6F6A               	movwf	_dtoa$3540& (0+255),b
  7300  0034FC                     l8346:
  7301                           
  7302                           ; BSR set to: 0
  7303  0034FC  0E3A               	movlw	low _dbuf
  7304  0034FE  257A               	addwf	dtoa@i& (0+255),w,b
  7305  003500  6ED9               	movwf	fsr2l,c
  7306  003502  0E01               	movlw	high _dbuf
  7307  003504  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7308  003506  6EDA               	movwf	fsr2h,c
  7309  003508  0060  F1AB  FFDF   	movff	_dtoa$3540,indf2
  7310  00350E                     l8348:
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7314  00350E  C060  F026         	movff	dtoa@fp,pad@fp
  7315  003512  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7316  003516  0E3A               	movlw	low _dbuf
  7317  003518  257A               	addwf	dtoa@i& (0+255),w,b
  7318  00351A  6E28               	movwf	pad@buf^0,c
  7319  00351C  0E01               	movlw	high _dbuf
  7320  00351E  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7321  003520  6E29               	movwf	(pad@buf+1)^0,c
  7322  003522  C06E  F02A         	movff	dtoa@w,pad@p
  7323  003526  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7324  00352A  EC59  F026         	call	_pad	;wreg free
  7325  00352E  C026  F060         	movff	?_pad,?_dtoa
  7326  003532  C027  F061         	movff	?_pad+1,?_dtoa+1
  7327  003536  0012               	return		;funcret
  7328  003538                     __end_of_dtoa:
  7329                           	callstack 0
  7330                           
  7331 ;; *************** function _pad *****************
  7332 ;; Defined at:
  7333 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7336 ;;		 -> NULL(0), 
  7337 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7338 ;;		 -> dbuf(80), 
  7339 ;;  p               2   41[COMRAM] int 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  w               2   46[COMRAM] int 
  7342 ;;  i               2   44[COMRAM] int 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  2   37[COMRAM] int 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7352 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;Total ram usage:       11 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 12
  7359 ;; This function calls:
  7360 ;;		_fputc
  7361 ;;		_fputs
  7362 ;;		_strlen
  7363 ;; This function is called by:
  7364 ;;		_dtoa
  7365 ;;		_efgtoa
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text22
  7370  004CB2                     __ptext22:
  7371                           	callstack 0
  7372  004CB2                     _pad:
  7373                           	callstack 12
  7374  004CB2                     
  7375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7376  004CB2  A03C               	btfss	_flags^0,0,c
  7377  004CB4  EF5E  F026         	goto	u8561
  7378  004CB8  EF60  F026         	goto	u8560
  7379  004CBC                     u8561:
  7380  004CBC  EF6A  F026         	goto	l8204
  7381  004CC0                     u8560:
  7382  004CC0                     
  7383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7384  004CC0  C028  F01F         	movff	pad@buf,fputs@s
  7385  004CC4  C029  F020         	movff	pad@buf+1,fputs@s+1
  7386  004CC8  C026  F021         	movff	pad@fp,fputs@fp
  7387  004CCC  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7388  004CD0  EC0D  F02B         	call	_fputs	;wreg free
  7389  004CD4                     l8204:
  7390                           
  7391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7392  004CD4  BE2B               	btfsc	(pad@p+1)^0,7,c
  7393  004CD6  EF6F  F026         	goto	u8571
  7394  004CDA  EF71  F026         	goto	u8570
  7395  004CDE                     u8571:
  7396  004CDE  EF77  F026         	goto	l8208
  7397  004CE2                     u8570:
  7398  004CE2  C02A  F02F         	movff	pad@p,pad@w
  7399  004CE6  C02B  F030         	movff	pad@p+1,pad@w+1
  7400  004CEA  EF7B  F026         	goto	l2121
  7401  004CEE                     l8208:
  7402  004CEE  0E00               	movlw	0
  7403  004CF0  6E30               	movwf	(pad@w+1)^0,c
  7404  004CF2  0E00               	movlw	0
  7405  004CF4  6E2F               	movwf	pad@w^0,c
  7406  004CF6                     l2121:
  7407                           
  7408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7409  004CF6  0E00               	movlw	0
  7410  004CF8  6E2E               	movwf	(pad@i+1)^0,c
  7411  004CFA  0E00               	movlw	0
  7412  004CFC  6E2D               	movwf	pad@i^0,c
  7413                           
  7414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7415  004CFE  EF8D  F026         	goto	l8214
  7416  004D02                     l8210:
  7417                           
  7418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7419  004D02  0E00               	movlw	0
  7420  004D04  6E17               	movwf	(fputc@c+1)^0,c
  7421  004D06  0E20               	movlw	32
  7422  004D08  6E16               	movwf	fputc@c^0,c
  7423  004D0A  C026  F018         	movff	pad@fp,fputc@fp
  7424  004D0E  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7425  004D12  EC19  F028         	call	_fputc	;wreg free
  7426  004D16                     
  7427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7428  004D16  4A2D               	infsnz	pad@i^0,f,c
  7429  004D18  2A2E               	incf	(pad@i+1)^0,f,c
  7430  004D1A                     l8214:
  7431                           
  7432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7433  004D1A  502F               	movf	pad@w^0,w,c
  7434  004D1C  5C2D               	subwf	pad@i^0,w,c
  7435  004D1E  502E               	movf	(pad@i+1)^0,w,c
  7436  004D20  0A80               	xorlw	128
  7437  004D22  6E2C               	movwf	??_pad^0,c
  7438  004D24  5030               	movf	(pad@w+1)^0,w,c
  7439  004D26  0A80               	xorlw	128
  7440  004D28  582C               	subwfb	??_pad^0,w,c
  7441  004D2A  A0D8               	btfss	status,0,c
  7442  004D2C  EF9A  F026         	goto	u8581
  7443  004D30  EF9C  F026         	goto	u8580
  7444  004D34                     u8581:
  7445  004D34  EF81  F026         	goto	l8210
  7446  004D38                     u8580:
  7447  004D38                     
  7448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7449  004D38  B03C               	btfsc	_flags^0,0,c
  7450  004D3A  EFA1  F026         	goto	u8591
  7451  004D3E  EFA3  F026         	goto	u8590
  7452  004D42                     u8591:
  7453  004D42  EFAD  F026         	goto	l8218
  7454  004D46                     u8590:
  7455  004D46                     
  7456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7457  004D46  C028  F01F         	movff	pad@buf,fputs@s
  7458  004D4A  C029  F020         	movff	pad@buf+1,fputs@s+1
  7459  004D4E  C026  F021         	movff	pad@fp,fputs@fp
  7460  004D52  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7461  004D56  EC0D  F02B         	call	_fputs	;wreg free
  7462  004D5A                     l8218:
  7463                           
  7464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7465  004D5A  C028  F014         	movff	pad@buf,strlen@s
  7466  004D5E  C029  F015         	movff	pad@buf+1,strlen@s+1
  7467  004D62  EC71  F02B         	call	_strlen	;wreg free
  7468  004D66  502F               	movf	pad@w^0,w,c
  7469  004D68  2414               	addwf	?_strlen^0,w,c
  7470  004D6A  6E26               	movwf	?_pad^0,c
  7471  004D6C  5030               	movf	(pad@w+1)^0,w,c
  7472  004D6E  2015               	addwfc	(?_strlen+1)^0,w,c
  7473  004D70  6E27               	movwf	(?_pad+1)^0,c
  7474  004D72  0012               	return		;funcret
  7475  004D74                     __end_of_pad:
  7476                           	callstack 0
  7477                           
  7478 ;; *************** function _strlen *****************
  7479 ;; Defined at:
  7480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7483 ;;		 -> dbuf(80), 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  a               2   21[COMRAM] PTR const unsigned char 
  7486 ;;		 -> dbuf(80), 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  2   19[COMRAM] unsigned int 
  7489 ;; Registers used:
  7490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7499 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7500 ;;Total ram usage:        4 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 8
  7503 ;; This function calls:
  7504 ;;		Nothing
  7505 ;; This function is called by:
  7506 ;;		_pad
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text23
  7511  0056E2                     __ptext23:
  7512                           	callstack 0
  7513  0056E2                     _strlen:
  7514                           	callstack 15
  7515  0056E2  C014  F016         	movff	strlen@s,strlen@a
  7516  0056E6  C015  F017         	movff	strlen@s+1,strlen@a+1
  7517  0056EA  EF79  F02B         	goto	l7666
  7518  0056EE                     l7664:
  7519  0056EE  4A14               	infsnz	strlen@s^0,f,c
  7520  0056F0  2A15               	incf	(strlen@s+1)^0,f,c
  7521  0056F2                     l7666:
  7522  0056F2  0060  F053  FFD9   	movff	strlen@s,fsr2l
  7523  0056F8  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  7524  0056FE  50DF               	movf	indf2,w,c
  7525  005700  A4D8               	btfss	status,2,c
  7526  005702  EF85  F02B         	goto	u7701
  7527  005706  EF87  F02B         	goto	u7700
  7528  00570A                     u7701:
  7529  00570A  EF77  F02B         	goto	l7664
  7530  00570E                     u7700:
  7531  00570E  5016               	movf	strlen@a^0,w,c
  7532  005710  5C14               	subwf	strlen@s^0,w,c
  7533  005712  6E14               	movwf	?_strlen^0,c
  7534  005714  5017               	movf	(strlen@a+1)^0,w,c
  7535  005716  5815               	subwfb	(strlen@s+1)^0,w,c
  7536  005718  6E15               	movwf	(?_strlen+1)^0,c
  7537  00571A  0012               	return		;funcret
  7538  00571C                     __end_of_strlen:
  7539                           	callstack 0
  7540                           
  7541 ;; *************** function _fputs *****************
  7542 ;; Defined at:
  7543 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  s               2   30[COMRAM] PTR const unsigned char 
  7546 ;;		 -> dbuf(80), 
  7547 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7548 ;;		 -> NULL(0), 
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;  i               2   35[COMRAM] int 
  7551 ;;  c               1   34[COMRAM] unsigned char 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  2   30[COMRAM] int 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7562 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7564 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7565 ;;Total ram usage:        7 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; Hardware stack levels required when called: 11
  7568 ;; This function calls:
  7569 ;;		_fputc
  7570 ;; This function is called by:
  7571 ;;		_pad
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text24
  7576  00561A                     __ptext24:
  7577                           	callstack 0
  7578  00561A                     _fputs:
  7579                           	callstack 12
  7580  00561A  0E00               	movlw	0
  7581  00561C  6E25               	movwf	(fputs@i+1)^0,c
  7582  00561E  0E00               	movlw	0
  7583  005620  6E24               	movwf	fputs@i^0,c
  7584  005622  EF1E  F02B         	goto	l7660
  7585  005626                     l7656:
  7586  005626  C023  F016         	movff	fputs@c,fputc@c
  7587  00562A  6A17               	clrf	(fputc@c+1)^0,c
  7588  00562C  C021  F018         	movff	fputs@fp,fputc@fp
  7589  005630  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  7590  005634  EC19  F028         	call	_fputc	;wreg free
  7591  005638  4A24               	infsnz	fputs@i^0,f,c
  7592  00563A  2A25               	incf	(fputs@i+1)^0,f,c
  7593  00563C                     l7660:
  7594  00563C  5024               	movf	fputs@i^0,w,c
  7595  00563E  241F               	addwf	fputs@s^0,w,c
  7596  005640  6ED9               	movwf	fsr2l,c
  7597  005642  5025               	movf	(fputs@i+1)^0,w,c
  7598  005644  2020               	addwfc	(fputs@s+1)^0,w,c
  7599  005646  6EDA               	movwf	fsr2h,c
  7600  005648  50DF               	movf	indf2,w,c
  7601  00564A  6E23               	movwf	fputs@c^0,c
  7602  00564C  5023               	movf	fputs@c^0,w,c
  7603  00564E  A4D8               	btfss	status,2,c
  7604  005650  EF2C  F02B         	goto	u7691
  7605  005654  EF2E  F02B         	goto	u7690
  7606  005658                     u7691:
  7607  005658  EF13  F02B         	goto	l7656
  7608  00565C                     u7690:
  7609  00565C  0012               	return		;funcret
  7610  00565E                     __end_of_fputs:
  7611                           	callstack 0
  7612                           
  7613 ;; *************** function _fputc *****************
  7614 ;; Defined at:
  7615 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  c               2   21[COMRAM] int 
  7618 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7619 ;;		 -> NULL(0), 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  2   21[COMRAM] int 
  7624 ;; Registers used:
  7625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7634 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7635 ;;Total ram usage:        9 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; Hardware stack levels required when called: 10
  7638 ;; This function calls:
  7639 ;;		_putch
  7640 ;; This function is called by:
  7641 ;;		_pad
  7642 ;;		_vfpfcnvrt
  7643 ;;		_fputs
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text25
  7648  005032                     __ptext25:
  7649                           	callstack 0
  7650  005032                     _fputc:
  7651                           	callstack 15
  7652  005032  5018               	movf	fputc@fp^0,w,c
  7653  005034  1019               	iorwf	(fputc@fp+1)^0,w,c
  7654  005036  B4D8               	btfsc	status,2,c
  7655  005038  EF20  F028         	goto	u7261
  7656  00503C  EF22  F028         	goto	u7260
  7657  005040                     u7261:
  7658  005040  EF2B  F028         	goto	l7442
  7659  005044                     u7260:
  7660  005044  5018               	movf	fputc@fp^0,w,c
  7661  005046  1019               	iorwf	(fputc@fp+1)^0,w,c
  7662  005048  A4D8               	btfss	status,2,c
  7663  00504A  EF29  F028         	goto	u7271
  7664  00504E  EF2B  F028         	goto	u7270
  7665  005052                     u7271:
  7666  005052  EF30  F028         	goto	l7444
  7667  005056                     u7270:
  7668  005056                     l7442:
  7669  005056  5016               	movf	fputc@c^0,w,c
  7670  005058  ECCC  F02E         	call	_putch
  7671  00505C  EF63  F028         	goto	l2318
  7672  005060                     l7444:
  7673  005060  EE20 F004          	lfsr	2,4
  7674  005064  5018               	movf	fputc@fp^0,w,c
  7675  005066  26D9               	addwf	fsr2l,f,c
  7676  005068  5019               	movf	(fputc@fp+1)^0,w,c
  7677  00506A  22DA               	addwfc	fsr2h,f,c
  7678  00506C  50DE               	movf	postinc2,w,c
  7679  00506E  10DE               	iorwf	postinc2,w,c
  7680  005070  B4D8               	btfsc	status,2,c
  7681  005072  EF3D  F028         	goto	u7281
  7682  005076  EF3F  F028         	goto	u7280
  7683  00507A                     u7281:
  7684  00507A  EF5A  F028         	goto	l7448
  7685  00507E                     u7280:
  7686  00507E  EE20 F004          	lfsr	2,4
  7687  005082  5018               	movf	fputc@fp^0,w,c
  7688  005084  26D9               	addwf	fsr2l,f,c
  7689  005086  5019               	movf	(fputc@fp+1)^0,w,c
  7690  005088  22DA               	addwfc	fsr2h,f,c
  7691  00508A  EE10 F002          	lfsr	1,2
  7692  00508E  5018               	movf	fputc@fp^0,w,c
  7693  005090  26E1               	addwf	fsr1l,f,c
  7694  005092  5019               	movf	(fputc@fp+1)^0,w,c
  7695  005094  22E2               	addwfc	fsr1h,f,c
  7696  005096  50DE               	movf	postinc2,w,c
  7697  005098  5CE6               	subwf	postinc1,w,c
  7698  00509A  50E6               	movf	postinc1,w,c
  7699  00509C  0A80               	xorlw	128
  7700  00509E  6E1E               	movwf	(??_fputc+4)^0,c
  7701  0050A0  50DE               	movf	postinc2,w,c
  7702  0050A2  0A80               	xorlw	128
  7703  0050A4  581E               	subwfb	(??_fputc+4)^0,w,c
  7704  0050A6  B0D8               	btfsc	status,0,c
  7705  0050A8  EF58  F028         	goto	u7291
  7706  0050AC  EF5A  F028         	goto	u7290
  7707  0050B0                     u7291:
  7708  0050B0  EF63  F028         	goto	l2318
  7709  0050B4                     u7290:
  7710  0050B4                     l7448:
  7711  0050B4  EE20 F002          	lfsr	2,2
  7712  0050B8  5018               	movf	fputc@fp^0,w,c
  7713  0050BA  26D9               	addwf	fsr2l,f,c
  7714  0050BC  5019               	movf	(fputc@fp+1)^0,w,c
  7715  0050BE  22DA               	addwfc	fsr2h,f,c
  7716  0050C0  2ADE               	incf	postinc2,f,c
  7717  0050C2  0E00               	movlw	0
  7718  0050C4  22DD               	addwfc	postdec2,f,c
  7719  0050C6                     l2318:
  7720  0050C6  0012               	return		;funcret
  7721  0050C8                     __end_of_fputc:
  7722                           	callstack 0
  7723                           
  7724 ;; *************** function _putch *****************
  7725 ;; Defined at:
  7726 ;;		line 230 in file "mcc_generated_files/uart1.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  txData          1    wreg     unsigned char 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  txData          1   20[COMRAM] unsigned char 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      void 
  7733 ;; Registers used:
  7734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;Total ram usage:        1 bytes
  7745 ;; Hardware stack levels used: 1
  7746 ;; Hardware stack levels required when called: 9
  7747 ;; This function calls:
  7748 ;;		_UART1_Write
  7749 ;; This function is called by:
  7750 ;;		_fputc
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text26
  7755  005D98                     __ptext26:
  7756                           	callstack 0
  7757  005D98                     _putch:
  7758                           	callstack 15
  7759                           
  7760                           ;incstack = 0
  7761                           ;putch@txData stored from wreg
  7762  005D98  6E15               	movwf	putch@txData^0,c
  7763  005D9A                     
  7764                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  7765  005D9A  5015               	movf	putch@txData^0,w,c
  7766  005D9C  ECCE  F029         	call	_UART1_Write
  7767  005DA0  0012               	return		;funcret
  7768  005DA2                     __end_of_putch:
  7769                           	callstack 0
  7770                           
  7771 ;; *************** function _UART1_Write *****************
  7772 ;; Defined at:
  7773 ;;		line 202 in file "mcc_generated_files/uart1.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  txData          1    wreg     unsigned char 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  txData          1   19[COMRAM] unsigned char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;Total ram usage:        1 bytes
  7792 ;; Hardware stack levels used: 1
  7793 ;; Hardware stack levels required when called: 8
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_putch
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text27
  7802  00539C                     __ptext27:
  7803                           	callstack 0
  7804  00539C                     _UART1_Write:
  7805                           	callstack 15
  7806                           
  7807                           ;incstack = 0
  7808                           ;UART1_Write@txData stored from wreg
  7809  00539C  6E14               	movwf	UART1_Write@txData^0,c
  7810  00539E                     l7420:
  7811                           
  7812                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  7813  00539E  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  7814  0053A0  B4D8               	btfsc	status,2,c
  7815  0053A2  EFD5  F029         	goto	u7231
  7816  0053A6  EFD7  F029         	goto	u7230
  7817  0053AA                     u7231:
  7818  0053AA  EFCF  F029         	goto	l7420
  7819  0053AE                     u7230:
  7820  0053AE                     
  7821                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  7822  0053AE  0139               	movlb	57	; () banked
  7823  0053B0  B993               	btfsc	147,4,b	;volatile
  7824  0053B2  EFDD  F029         	goto	u7241
  7825  0053B6  EFDF  F029         	goto	u7240
  7826  0053BA                     u7241:
  7827  0053BA  EFE4  F029         	goto	l309
  7828  0053BE                     u7240:
  7829  0053BE                     
  7830                           ; BSR set to: 57
  7831                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  7832  0053BE  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  7833                           
  7834                           ;mcc_generated_files/uart1.c: 211:     }
  7835  0053C4  EFFA  F029         	goto	l7434
  7836  0053C8                     l309:
  7837                           
  7838                           ; BSR set to: 57
  7839                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  7840  0053C8  9993               	bcf	147,4,b	;volatile
  7841  0053CA                     
  7842                           ; BSR set to: 57
  7843                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  7844  0053CA  0E10               	movlw	low _uart1TxBuffer
  7845  0053CC  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  7846  0053CE  6ED9               	movwf	fsr2l,c
  7847  0053D0  6ADA               	clrf	fsr2h,c
  7848  0053D2  0E01               	movlw	high _uart1TxBuffer
  7849  0053D4  22DA               	addwfc	fsr2h,f,c
  7850  0053D6  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  7851  0053DC                     
  7852                           ; BSR set to: 57
  7853  0053DC  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  7854  0053DE                     
  7855                           ; BSR set to: 57
  7856                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  7857  0053DE  0E07               	movlw	7
  7858  0053E0  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  7859  0053E2  EFF5  F029         	goto	u7251
  7860  0053E6  EFF7  F029         	goto	u7250
  7861  0053EA                     u7251:
  7862  0053EA  EFF9  F029         	goto	l7432
  7863  0053EE                     u7250:
  7864  0053EE                     
  7865                           ; BSR set to: 57
  7866                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  7867  0053EE  0E00               	movlw	0
  7868  0053F0  6E47               	movwf	_uart1TxHead^0,c	;volatile
  7869  0053F2                     l7432:
  7870                           
  7871                           ; BSR set to: 57
  7872                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  7873  0053F2  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  7874  0053F4                     l7434:
  7875                           
  7876                           ; BSR set to: 57
  7877                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  7878  0053F4  8993               	bsf	147,4,b	;volatile
  7879  0053F6                     
  7880                           ; BSR set to: 57
  7881  0053F6  0012               	return		;funcret
  7882  0053F8                     __end_of_UART1_Write:
  7883                           	callstack 0
  7884                           
  7885 ;; *************** function _abs *****************
  7886 ;; Defined at:
  7887 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;  a               2   37[COMRAM] int 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  2   37[COMRAM] int 
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;Total ram usage:        4 bytes
  7906 ;; Hardware stack levels used: 1
  7907 ;; Hardware stack levels required when called: 8
  7908 ;; This function calls:
  7909 ;;		Nothing
  7910 ;; This function is called by:
  7911 ;;		_dtoa
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text28
  7916  0056A2                     __ptext28:
  7917                           	callstack 0
  7918  0056A2                     _abs:
  7919                           	callstack 16
  7920  0056A2  BE27               	btfsc	(abs@a+1)^0,7,c
  7921  0056A4  EF5E  F02B         	goto	u8600
  7922  0056A8  5027               	movf	(abs@a+1)^0,w,c
  7923  0056AA  E106               	bnz	u8601
  7924  0056AC  0426               	decf	abs@a^0,w,c
  7925  0056AE  B0D8               	btfsc	status,0,c
  7926  0056B0  EF5C  F02B         	goto	u8601
  7927  0056B4  EF5E  F02B         	goto	u8600
  7928  0056B8                     u8601:
  7929  0056B8  EF6C  F02B         	goto	l2284
  7930  0056BC                     u8600:
  7931  0056BC  C026  F028         	movff	abs@a,??_abs
  7932  0056C0  C027  F029         	movff	abs@a+1,??_abs+1
  7933  0056C4  1E28               	comf	??_abs^0,f,c
  7934  0056C6  1E29               	comf	(??_abs+1)^0,f,c
  7935  0056C8  4A28               	infsnz	??_abs^0,f,c
  7936  0056CA  2A29               	incf	(??_abs+1)^0,f,c
  7937  0056CC  C028  F026         	movff	??_abs,?_abs
  7938  0056D0  C029  F027         	movff	??_abs+1,?_abs+1
  7939  0056D4  EF70  F02B         	goto	l2287
  7940  0056D8                     l2284:
  7941  0056D8  C026  F026         	movff	abs@a,?_abs
  7942  0056DC  C027  F027         	movff	abs@a+1,?_abs+1
  7943  0056E0                     l2287:
  7944  0056E0  0012               	return		;funcret
  7945  0056E2                     __end_of_abs:
  7946                           	callstack 0
  7947                           
  7948 ;; *************** function ___aomod *****************
  7949 ;; Defined at:
  7950 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  dividend        8   19[COMRAM] long long 
  7953 ;;  divisor         8   27[COMRAM] long long 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  sign            1   36[COMRAM] unsigned char 
  7956 ;;  counter         1   35[COMRAM] unsigned char 
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  8   19[COMRAM] long long 
  7959 ;; Registers used:
  7960 ;;		wreg, status,2, status,0
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7966 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7969 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7970 ;;Total ram usage:       18 bytes
  7971 ;; Hardware stack levels used: 1
  7972 ;; Hardware stack levels required when called: 8
  7973 ;; This function calls:
  7974 ;;		Nothing
  7975 ;; This function is called by:
  7976 ;;		_dtoa
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text29
  7981  00403A                     __ptext29:
  7982                           	callstack 0
  7983  00403A                     ___aomod:
  7984                           	callstack 16
  7985  00403A  0E00               	movlw	0
  7986  00403C  6E25               	movwf	___aomod@sign^0,c
  7987  00403E  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  7988  004040  EF26  F020         	goto	u7800
  7989  004044  EF24  F020         	goto	u7801
  7990  004048                     u7801:
  7991  004048  EF38  F020         	goto	l7728
  7992  00404C                     u7800:
  7993  00404C  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  7994  00404E  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  7995  004050  1E19               	comf	(___aomod@dividend+5)^0,f,c
  7996  004052  1E18               	comf	(___aomod@dividend+4)^0,f,c
  7997  004054  1E17               	comf	(___aomod@dividend+3)^0,f,c
  7998  004056  1E16               	comf	(___aomod@dividend+2)^0,f,c
  7999  004058  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8000  00405A  6C14               	negf	___aomod@dividend^0,c
  8001  00405C  0E00               	movlw	0
  8002  00405E  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8003  004060  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8004  004062  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8005  004064  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8006  004066  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8007  004068  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8008  00406A  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8009  00406C  0E01               	movlw	1
  8010  00406E  6E25               	movwf	___aomod@sign^0,c
  8011  004070                     l7728:
  8012  004070  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8013  004072  EF3F  F020         	goto	u7810
  8014  004076  EF3D  F020         	goto	u7811
  8015  00407A                     u7811:
  8016  00407A  EF4F  F020         	goto	l7732
  8017  00407E                     u7810:
  8018  00407E  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8019  004080  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8020  004082  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8021  004084  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8022  004086  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8023  004088  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8024  00408A  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8025  00408C  6C1C               	negf	___aomod@divisor^0,c
  8026  00408E  0E00               	movlw	0
  8027  004090  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8028  004092  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8029  004094  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8030  004096  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8031  004098  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8032  00409A  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8033  00409C  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8034  00409E                     l7732:
  8035  00409E  501C               	movf	___aomod@divisor^0,w,c
  8036  0040A0  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8037  0040A2  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8038  0040A4  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8039  0040A6  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8040  0040A8  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8041  0040AA  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8042  0040AC  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8043  0040AE  B4D8               	btfsc	status,2,c
  8044  0040B0  EF5C  F020         	goto	u7821
  8045  0040B4  EF5E  F020         	goto	u7820
  8046  0040B8                     u7821:
  8047  0040B8  EFA6  F020         	goto	l7748
  8048  0040BC                     u7820:
  8049  0040BC  0E01               	movlw	1
  8050  0040BE  6E24               	movwf	___aomod@counter^0,c
  8051  0040C0  EF6C  F020         	goto	l7738
  8052  0040C4                     l7736:
  8053  0040C4  90D8               	bcf	status,0,c
  8054  0040C6  361C               	rlcf	___aomod@divisor^0,f,c
  8055  0040C8  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8056  0040CA  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8057  0040CC  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8058  0040CE  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8059  0040D0  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8060  0040D2  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8061  0040D4  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8062  0040D6  2A24               	incf	___aomod@counter^0,f,c
  8063  0040D8                     l7738:
  8064  0040D8  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8065  0040DA  EF71  F020         	goto	u7831
  8066  0040DE  EF73  F020         	goto	u7830
  8067  0040E2                     u7831:
  8068  0040E2  EF62  F020         	goto	l7736
  8069  0040E6                     u7830:
  8070  0040E6                     l7740:
  8071  0040E6  501C               	movf	___aomod@divisor^0,w,c
  8072  0040E8  5C14               	subwf	___aomod@dividend^0,w,c
  8073  0040EA  501D               	movf	(___aomod@divisor+1)^0,w,c
  8074  0040EC  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8075  0040EE  501E               	movf	(___aomod@divisor+2)^0,w,c
  8076  0040F0  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8077  0040F2  501F               	movf	(___aomod@divisor+3)^0,w,c
  8078  0040F4  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8079  0040F6  5020               	movf	(___aomod@divisor+4)^0,w,c
  8080  0040F8  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8081  0040FA  5021               	movf	(___aomod@divisor+5)^0,w,c
  8082  0040FC  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8083  0040FE  5022               	movf	(___aomod@divisor+6)^0,w,c
  8084  004100  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8085  004102  5023               	movf	(___aomod@divisor+7)^0,w,c
  8086  004104  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8087  004106  A0D8               	btfss	status,0,c
  8088  004108  EF88  F020         	goto	u7841
  8089  00410C  EF8A  F020         	goto	u7840
  8090  004110                     u7841:
  8091  004110  EF9A  F020         	goto	l7744
  8092  004114                     u7840:
  8093  004114  501C               	movf	___aomod@divisor^0,w,c
  8094  004116  5E14               	subwf	___aomod@dividend^0,f,c
  8095  004118  501D               	movf	(___aomod@divisor+1)^0,w,c
  8096  00411A  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8097  00411C  501E               	movf	(___aomod@divisor+2)^0,w,c
  8098  00411E  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8099  004120  501F               	movf	(___aomod@divisor+3)^0,w,c
  8100  004122  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8101  004124  5020               	movf	(___aomod@divisor+4)^0,w,c
  8102  004126  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8103  004128  5021               	movf	(___aomod@divisor+5)^0,w,c
  8104  00412A  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8105  00412C  5022               	movf	(___aomod@divisor+6)^0,w,c
  8106  00412E  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8107  004130  5023               	movf	(___aomod@divisor+7)^0,w,c
  8108  004132  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8109  004134                     l7744:
  8110  004134  90D8               	bcf	status,0,c
  8111  004136  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8112  004138  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8113  00413A  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8114  00413C  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8115  00413E  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8116  004140  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8117  004142  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8118  004144  321C               	rrcf	___aomod@divisor^0,f,c
  8119  004146  2E24               	decfsz	___aomod@counter^0,f,c
  8120  004148  EF73  F020         	goto	l7740
  8121  00414C                     l7748:
  8122  00414C  5025               	movf	___aomod@sign^0,w,c
  8123  00414E  B4D8               	btfsc	status,2,c
  8124  004150  EFAC  F020         	goto	u7851
  8125  004154  EFAE  F020         	goto	u7850
  8126  004158                     u7851:
  8127  004158  EFBE  F020         	goto	l7752
  8128  00415C                     u7850:
  8129  00415C  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8130  00415E  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8131  004160  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8132  004162  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8133  004164  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8134  004166  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8135  004168  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8136  00416A  6C14               	negf	___aomod@dividend^0,c
  8137  00416C  0E00               	movlw	0
  8138  00416E  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8139  004170  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8140  004172  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8141  004174  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8142  004176  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8143  004178  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8144  00417A  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8145  00417C                     l7752:
  8146  00417C  C014  F014         	movff	___aomod@dividend,?___aomod
  8147  004180  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8148  004184  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8149  004188  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8150  00418C  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8151  004190  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8152  004194  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8153  004198  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8154  00419C  0012               	return		;funcret
  8155  00419E                     __end_of___aomod:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function ___aodiv *****************
  8159 ;; Defined at:
  8160 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  dividend        8   19[COMRAM] long long 
  8163 ;;  divisor         8   27[COMRAM] long long 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  quotient        8   37[COMRAM] long long 
  8166 ;;  sign            1   36[COMRAM] unsigned char 
  8167 ;;  counter         1   35[COMRAM] unsigned char 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  8   19[COMRAM] long long 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8177 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8178 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;Total ram usage:       26 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; Hardware stack levels required when called: 8
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_dtoa
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text30
  8192  003EB2                     __ptext30:
  8193                           	callstack 0
  8194  003EB2                     ___aodiv:
  8195                           	callstack 16
  8196  003EB2  0E00               	movlw	0
  8197  003EB4  6E25               	movwf	___aodiv@sign^0,c
  8198  003EB6  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8199  003EB8  EF62  F01F         	goto	u7730
  8200  003EBC  EF60  F01F         	goto	u7731
  8201  003EC0                     u7731:
  8202  003EC0  EF74  F01F         	goto	l7684
  8203  003EC4                     u7730:
  8204  003EC4  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8205  003EC6  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8206  003EC8  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8207  003ECA  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8208  003ECC  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8209  003ECE  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8210  003ED0  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8211  003ED2  6C1C               	negf	___aodiv@divisor^0,c
  8212  003ED4  0E00               	movlw	0
  8213  003ED6  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8214  003ED8  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8215  003EDA  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8216  003EDC  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8217  003EDE  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8218  003EE0  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8219  003EE2  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8220  003EE4  0E01               	movlw	1
  8221  003EE6  6E25               	movwf	___aodiv@sign^0,c
  8222  003EE8                     l7684:
  8223  003EE8  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8224  003EEA  EF7B  F01F         	goto	u7740
  8225  003EEE  EF79  F01F         	goto	u7741
  8226  003EF2                     u7741:
  8227  003EF2  EF8D  F01F         	goto	l7690
  8228  003EF6                     u7740:
  8229  003EF6  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8230  003EF8  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8231  003EFA  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8232  003EFC  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8233  003EFE  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8234  003F00  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8235  003F02  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8236  003F04  6C14               	negf	___aodiv@dividend^0,c
  8237  003F06  0E00               	movlw	0
  8238  003F08  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8239  003F0A  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8240  003F0C  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8241  003F0E  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8242  003F10  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8243  003F12  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8244  003F14  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8245  003F16  0E01               	movlw	1
  8246  003F18  1A25               	xorwf	___aodiv@sign^0,f,c
  8247  003F1A                     l7690:
  8248  003F1A  EE20  F026         	lfsr	2,___aodiv@quotient
  8249  003F1E  0E07               	movlw	7
  8250  003F20                     u7751:
  8251  003F20  6ADE               	clrf	postinc2,c
  8252  003F22  06E8               	decf	wreg,f,c
  8253  003F24  E2FD               	bc	u7751
  8254  003F26  501C               	movf	___aodiv@divisor^0,w,c
  8255  003F28  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8256  003F2A  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8257  003F2C  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8258  003F2E  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8259  003F30  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8260  003F32  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8261  003F34  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8262  003F36  B4D8               	btfsc	status,2,c
  8263  003F38  EFA0  F01F         	goto	u7761
  8264  003F3C  EFA2  F01F         	goto	u7760
  8265  003F40                     u7761:
  8266  003F40  EFF4  F01F         	goto	l7712
  8267  003F44                     u7760:
  8268  003F44  0E01               	movlw	1
  8269  003F46  6E24               	movwf	___aodiv@counter^0,c
  8270  003F48  EFB0  F01F         	goto	l7698
  8271  003F4C                     l7696:
  8272  003F4C  90D8               	bcf	status,0,c
  8273  003F4E  361C               	rlcf	___aodiv@divisor^0,f,c
  8274  003F50  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8275  003F52  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8276  003F54  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8277  003F56  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8278  003F58  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8279  003F5A  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8280  003F5C  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8281  003F5E  2A24               	incf	___aodiv@counter^0,f,c
  8282  003F60                     l7698:
  8283  003F60  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8284  003F62  EFB5  F01F         	goto	u7771
  8285  003F66  EFB7  F01F         	goto	u7770
  8286  003F6A                     u7771:
  8287  003F6A  EFA6  F01F         	goto	l7696
  8288  003F6E                     u7770:
  8289  003F6E                     l7700:
  8290  003F6E  90D8               	bcf	status,0,c
  8291  003F70  3626               	rlcf	___aodiv@quotient^0,f,c
  8292  003F72  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8293  003F74  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8294  003F76  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8295  003F78  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8296  003F7A  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8297  003F7C  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8298  003F7E  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8299  003F80  501C               	movf	___aodiv@divisor^0,w,c
  8300  003F82  5C14               	subwf	___aodiv@dividend^0,w,c
  8301  003F84  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8302  003F86  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8303  003F88  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8304  003F8A  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8305  003F8C  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8306  003F8E  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8307  003F90  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8308  003F92  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8309  003F94  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8310  003F96  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8311  003F98  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8312  003F9A  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8313  003F9C  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8314  003F9E  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8315  003FA0  A0D8               	btfss	status,0,c
  8316  003FA2  EFD5  F01F         	goto	u7781
  8317  003FA6  EFD7  F01F         	goto	u7780
  8318  003FAA                     u7781:
  8319  003FAA  EFE8  F01F         	goto	l7708
  8320  003FAE                     u7780:
  8321  003FAE  501C               	movf	___aodiv@divisor^0,w,c
  8322  003FB0  5E14               	subwf	___aodiv@dividend^0,f,c
  8323  003FB2  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8324  003FB4  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8325  003FB6  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8326  003FB8  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8327  003FBA  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8328  003FBC  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8329  003FBE  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8330  003FC0  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8331  003FC2  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8332  003FC4  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8333  003FC6  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8334  003FC8  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8335  003FCA  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8336  003FCC  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8337  003FCE  8026               	bsf	___aodiv@quotient^0,0,c
  8338  003FD0                     l7708:
  8339  003FD0  90D8               	bcf	status,0,c
  8340  003FD2  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8341  003FD4  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8342  003FD6  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8343  003FD8  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8344  003FDA  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8345  003FDC  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8346  003FDE  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8347  003FE0  321C               	rrcf	___aodiv@divisor^0,f,c
  8348  003FE2  2E24               	decfsz	___aodiv@counter^0,f,c
  8349  003FE4  EFB7  F01F         	goto	l7700
  8350  003FE8                     l7712:
  8351  003FE8  5025               	movf	___aodiv@sign^0,w,c
  8352  003FEA  B4D8               	btfsc	status,2,c
  8353  003FEC  EFFA  F01F         	goto	u7791
  8354  003FF0  EFFC  F01F         	goto	u7790
  8355  003FF4                     u7791:
  8356  003FF4  EF0C  F020         	goto	l7716
  8357  003FF8                     u7790:
  8358  003FF8  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8359  003FFA  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8360  003FFC  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8361  003FFE  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8362  004000  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8363  004002  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8364  004004  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8365  004006  6C26               	negf	___aodiv@quotient^0,c
  8366  004008  0E00               	movlw	0
  8367  00400A  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8368  00400C  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8369  00400E  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8370  004010  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8371  004012  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8372  004014  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8373  004016  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8374  004018                     l7716:
  8375  004018  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8376  00401C  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8377  004020  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8378  004024  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8379  004028  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8380  00402C  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8381  004030  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8382  004034  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8383  004038  0012               	return		;funcret
  8384  00403A                     __end_of___aodiv:
  8385                           	callstack 0
  8386                           
  8387 ;; *************** function _ADCC_GetSingleConversion *****************
  8388 ;; Defined at:
  8389 ;;		line 137 in file "mcc_generated_files/adcc.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  channel         1    wreg     enum E16058
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  channel         1   23[COMRAM] enum E16058
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  2   19[COMRAM] unsigned short 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8407 ;;Total ram usage:        5 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 8
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_getBatteryVoltage
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text31
  8418  005A50                     __ptext31:
  8419                           	callstack 0
  8420  005A50                     _ADCC_GetSingleConversion:
  8421                           	callstack 20
  8422                           
  8423                           ;incstack = 0
  8424                           ;ADCC_GetSingleConversion@channel stored from wreg
  8425  005A50  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  8426  005A52                     
  8427                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  8428  005A52  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  8429  005A58                     
  8430                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  8431  005A58  013E               	movlb	62	; () banked
  8432  005A5A  8FF8               	bsf	248,7,b	;volatile
  8433  005A5C                     
  8434                           ; BSR set to: 62
  8435                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  8436  005A5C  9DF8               	bcf	248,6,b	;volatile
  8437  005A5E                     
  8438                           ; BSR set to: 62
  8439                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  8440  005A5E  81F8               	bsf	248,0,b	;volatile
  8441  005A60                     l1054:
  8442                           
  8443                           ; BSR set to: 62
  8444                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  8445  005A60  B1F8               	btfsc	248,0,b	;volatile
  8446  005A62  EF35  F02D         	goto	u9691
  8447  005A66  EF37  F02D         	goto	u9690
  8448  005A6A                     u9691:
  8449  005A6A  EF30  F02D         	goto	l1054
  8450  005A6E                     u9690:
  8451  005A6E                     
  8452                           ; BSR set to: 62
  8453                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8454  005A6E  51F0               	movf	240,w,b	;volatile
  8455  005A70  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  8456  005A72  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  8457  005A74  51EF               	movf	239,w,b	;volatile
  8458  005A76  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  8459  005A78  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  8460  005A7A  0E00               	movlw	0
  8461  005A7C  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  8462  005A7E  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  8463  005A80                     
  8464                           ; BSR set to: 62
  8465  005A80  0012               	return		;funcret
  8466  005A82                     __end_of_ADCC_GetSingleConversion:
  8467                           	callstack 0
  8468                           
  8469 ;; *************** function _calcSteering *****************
  8470 ;; Defined at:
  8471 ;;		line 233 in file "main.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;		None
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;  delta           2   46[BANK0 ] short 
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      void 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8488 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8489 ;;Total ram usage:        4 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; Hardware stack levels required when called: 10
  8492 ;; This function calls:
  8493 ;;		_setSteering
  8494 ;; This function is called by:
  8495 ;;		_loop
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text32
  8500  003D02                     __ptext32:
  8501                           	callstack 0
  8502  003D02                     _calcSteering:
  8503                           	callstack 19
  8504  003D02                     
  8505                           ;main.c: 234:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  8506  003D02  0100               	movlb	0	; () banked
  8507  003D04  51F3               	movf	_distRight& (0+255),w,b	;volatile
  8508  003D06  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  8509  003D08  6F8E               	movwf	calcSteering@delta& (0+255),b
  8510  003D0A  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  8511  003D0C  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  8512  003D0E  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  8513                           
  8514                           ;main.c: 238:     switch (driveMode) {
  8515  003D10  EFB2  F01E         	goto	l9038
  8516  003D14                     l1326:
  8517  003D14                     l9028:
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;main.c: 243:             if (delta > (30)) {
  8521  003D14  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  8522  003D16  EF96  F01E         	goto	u10111
  8523  003D1A  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  8524  003D1C  E109               	bnz	u10110
  8525  003D1E  0E1F               	movlw	31
  8526  003D20  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  8527  003D22  A0D8               	btfss	status,0,c
  8528  003D24  EF96  F01E         	goto	u10111
  8529  003D28  EF98  F01E         	goto	u10110
  8530  003D2C                     u10111:
  8531  003D2C  EF9E  F01E         	goto	l9032
  8532  003D30                     u10110:
  8533  003D30                     
  8534                           ; BSR set to: 0
  8535                           ;main.c: 244:                 delta = (30);
  8536  003D30  0E00               	movlw	0
  8537  003D32  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  8538  003D34  0E1E               	movlw	30
  8539  003D36  6F8E               	movwf	calcSteering@delta& (0+255),b
  8540                           
  8541                           ;main.c: 245:             } else if (delta < -(30)) {
  8542  003D38  EF33  F01F         	goto	l9062
  8543  003D3C                     l9032:
  8544                           
  8545                           ; BSR set to: 0
  8546  003D3C  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  8547  003D3E  EFAA  F01E         	goto	u10121
  8548  003D42  0EE2               	movlw	226
  8549  003D44  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  8550  003D46  0EFF               	movlw	255
  8551  003D48  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  8552  003D4A  B0D8               	btfsc	status,0,c
  8553  003D4C  EFAA  F01E         	goto	u10121
  8554  003D50  EFAC  F01E         	goto	u10120
  8555  003D54                     u10121:
  8556  003D54  EFCF  F01E         	goto	l1331
  8557  003D58                     u10120:
  8558  003D58                     
  8559                           ; BSR set to: 0
  8560                           ;main.c: 246:                 delta = -(30);
  8561  003D58  0EFF               	movlw	255
  8562  003D5A  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  8563  003D5C  0EE2               	movlw	226
  8564  003D5E  6F8E               	movwf	calcSteering@delta& (0+255),b
  8565  003D60  EF33  F01F         	goto	l9062
  8566  003D64                     l9038:
  8567                           
  8568                           ; BSR set to: 0
  8569  003D64  51FC               	movf	_driveMode& (0+255),w,b
  8570  003D66  6F8C               	movwf	??_calcSteering& (0+255),b
  8571  003D68  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  8572                           
  8573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8574                           ; Switch size 1, requested type "simple"
  8575                           ; Number of cases is 1, Range of values is 0 to 0
  8576                           ; switch strategies available:
  8577                           ; Name         Instructions Cycles
  8578                           ; simple_byte            4     3 (average)
  8579                           ;	Chosen strategy is simple_byte
  8580  003D6A  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  8581  003D6C  0A00               	xorlw	0	; case 0
  8582  003D6E  B4D8               	btfsc	status,2,c
  8583  003D70  EFBC  F01E         	goto	l9374
  8584  003D74  EF33  F01F         	goto	l9062
  8585  003D78                     l9374:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ; Switch size 1, requested type "simple"
  8589                           ; Number of cases is 4, Range of values is 0 to 5
  8590                           ; switch strategies available:
  8591                           ; Name         Instructions Cycles
  8592                           ; simple_byte           13     7 (average)
  8593                           ;	Chosen strategy is simple_byte
  8594  003D78  518C               	movf	??_calcSteering& (0+255),w,b
  8595  003D7A  0A00               	xorlw	0	; case 0
  8596  003D7C  B4D8               	btfsc	status,2,c
  8597  003D7E  EF8A  F01E         	goto	l9028
  8598  003D82  0A01               	xorlw	1	; case 1
  8599  003D84  B4D8               	btfsc	status,2,c
  8600  003D86  EF8A  F01E         	goto	l1326
  8601  003D8A  0A05               	xorlw	5	; case 4
  8602  003D8C  B4D8               	btfsc	status,2,c
  8603  003D8E  EF8A  F01E         	goto	l9028
  8604  003D92  0A01               	xorlw	1	; case 5
  8605  003D94  B4D8               	btfsc	status,2,c
  8606  003D96  EF8A  F01E         	goto	l9028
  8607  003D9A  EF33  F01F         	goto	l9062
  8608  003D9E                     l1331:
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;main.c: 253:     switch (driveMode) {
  8612  003D9E  EF33  F01F         	goto	l9062
  8613  003DA2                     l9040:
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;main.c: 255:             setSteering(delta, Ratio);
  8617  003DA2  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  8618  003DA6  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  8619  003DAA  0E02               	movlw	2
  8620  003DAC  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8621  003DAE  ECAC  F01C         	call	_setSteering	;wreg free
  8622                           
  8623                           ;main.c: 256:             break;
  8624  003DB2  EF58  F01F         	goto	l1345
  8625  003DB6                     l9042:
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;main.c: 258:             setSteering(delta, Front);
  8629  003DB6  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  8630  003DBA  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  8631  003DBE  0E03               	movlw	3
  8632  003DC0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8633  003DC2  ECAC  F01C         	call	_setSteering	;wreg free
  8634                           
  8635                           ;main.c: 259:             break;
  8636  003DC6  EF58  F01F         	goto	l1345
  8637  003DCA                     l9044:
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;main.c: 261:             setSteering(-(60), Inverted);
  8641  003DCA  0EFF               	movlw	255
  8642  003DCC  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8643  003DCE  0EC4               	movlw	196
  8644  003DD0  6F83               	movwf	setSteering@steering& (0+255),b
  8645  003DD2  0E00               	movlw	0
  8646  003DD4  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8647  003DD6  ECAC  F01C         	call	_setSteering	;wreg free
  8648                           
  8649                           ;main.c: 262:             break;
  8650  003DDA  EF58  F01F         	goto	l1345
  8651  003DDE                     l9046:
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;main.c: 264:             setSteering((60), Inverted);
  8655  003DDE  0E00               	movlw	0
  8656  003DE0  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8657  003DE2  0E3C               	movlw	60
  8658  003DE4  6F83               	movwf	setSteering@steering& (0+255),b
  8659  003DE6  0E00               	movlw	0
  8660  003DE8  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8661  003DEA  ECAC  F01C         	call	_setSteering	;wreg free
  8662                           
  8663                           ;main.c: 265:             break;
  8664  003DEE  EF58  F01F         	goto	l1345
  8665  003DF2                     l9048:
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;main.c: 267:             if (curveMode == InCurve) {
  8669  003DF2  0E02               	movlw	2
  8670  003DF4  19FB               	xorwf	_curveMode& (0+255),w,b
  8671  003DF6  A4D8               	btfss	status,2,c
  8672  003DF8  EF00  F01F         	goto	u10131
  8673  003DFC  EF02  F01F         	goto	u10130
  8674  003E00                     u10131:
  8675  003E00  EF0C  F01F         	goto	l9052
  8676  003E04                     u10130:
  8677  003E04                     
  8678                           ; BSR set to: 0
  8679                           ;main.c: 268:                 setSteering((60), Ratio);
  8680  003E04  0E00               	movlw	0
  8681  003E06  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8682  003E08  0E3C               	movlw	60
  8683  003E0A  6F83               	movwf	setSteering@steering& (0+255),b
  8684  003E0C  0E02               	movlw	2
  8685  003E0E  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8686  003E10  ECAC  F01C         	call	_setSteering	;wreg free
  8687                           
  8688                           ;main.c: 269:             } else {
  8689  003E14  EF58  F01F         	goto	l1345
  8690  003E18                     l9052:
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;main.c: 270:                 setSteering(-5, Front);
  8694  003E18  0EFF               	movlw	255
  8695  003E1A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8696  003E1C  0EFB               	movlw	251
  8697  003E1E  6F83               	movwf	setSteering@steering& (0+255),b
  8698  003E20  0E03               	movlw	3
  8699  003E22  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8700  003E24  ECAC  F01C         	call	_setSteering	;wreg free
  8701  003E28  EF58  F01F         	goto	l1345
  8702  003E2C                     l9054:
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;main.c: 274:             if (curveMode == InCurve) {
  8706  003E2C  0E02               	movlw	2
  8707  003E2E  19FB               	xorwf	_curveMode& (0+255),w,b
  8708  003E30  A4D8               	btfss	status,2,c
  8709  003E32  EF1D  F01F         	goto	u10141
  8710  003E36  EF1F  F01F         	goto	u10140
  8711  003E3A                     u10141:
  8712  003E3A  EF29  F01F         	goto	l9058
  8713  003E3E                     u10140:
  8714  003E3E                     
  8715                           ; BSR set to: 0
  8716                           ;main.c: 275:                 setSteering(-(60), Ratio);
  8717  003E3E  0EFF               	movlw	255
  8718  003E40  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8719  003E42  0EC4               	movlw	196
  8720  003E44  6F83               	movwf	setSteering@steering& (0+255),b
  8721  003E46  0E02               	movlw	2
  8722  003E48  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8723  003E4A  ECAC  F01C         	call	_setSteering	;wreg free
  8724                           
  8725                           ;main.c: 276:             } else {
  8726  003E4E  EF58  F01F         	goto	l1345
  8727  003E52                     l9058:
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;main.c: 277:                 setSteering(5, Front);
  8731  003E52  0E00               	movlw	0
  8732  003E54  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8733  003E56  0E05               	movlw	5
  8734  003E58  6F83               	movwf	setSteering@steering& (0+255),b
  8735  003E5A  0E03               	movlw	3
  8736  003E5C  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8737  003E5E  ECAC  F01C         	call	_setSteering	;wreg free
  8738  003E62  EF58  F01F         	goto	l1345
  8739  003E66                     l9062:
  8740                           
  8741                           ; BSR set to: 0
  8742  003E66  51FC               	movf	_driveMode& (0+255),w,b
  8743  003E68  6F8C               	movwf	??_calcSteering& (0+255),b
  8744  003E6A  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  8745                           
  8746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8747                           ; Switch size 1, requested type "simple"
  8748                           ; Number of cases is 1, Range of values is 0 to 0
  8749                           ; switch strategies available:
  8750                           ; Name         Instructions Cycles
  8751                           ; simple_byte            4     3 (average)
  8752                           ;	Chosen strategy is simple_byte
  8753  003E6C  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  8754  003E6E  0A00               	xorlw	0	; case 0
  8755  003E70  B4D8               	btfsc	status,2,c
  8756  003E72  EF3D  F01F         	goto	l9376
  8757  003E76  EF58  F01F         	goto	l1345
  8758  003E7A                     l9376:
  8759                           
  8760                           ; BSR set to: 0
  8761                           ; Switch size 1, requested type "simple"
  8762                           ; Number of cases is 6, Range of values is 0 to 5
  8763                           ; switch strategies available:
  8764                           ; Name         Instructions Cycles
  8765                           ; simple_byte           19    10 (average)
  8766                           ;	Chosen strategy is simple_byte
  8767  003E7A  518C               	movf	??_calcSteering& (0+255),w,b
  8768  003E7C  0A00               	xorlw	0	; case 0
  8769  003E7E  B4D8               	btfsc	status,2,c
  8770  003E80  EFDB  F01E         	goto	l9042
  8771  003E84  0A01               	xorlw	1	; case 1
  8772  003E86  B4D8               	btfsc	status,2,c
  8773  003E88  EFD1  F01E         	goto	l9040
  8774  003E8C  0A03               	xorlw	3	; case 2
  8775  003E8E  B4D8               	btfsc	status,2,c
  8776  003E90  EFE5  F01E         	goto	l9044
  8777  003E94  0A01               	xorlw	1	; case 3
  8778  003E96  B4D8               	btfsc	status,2,c
  8779  003E98  EFEF  F01E         	goto	l9046
  8780  003E9C  0A07               	xorlw	7	; case 4
  8781  003E9E  B4D8               	btfsc	status,2,c
  8782  003EA0  EFF9  F01E         	goto	l9048
  8783  003EA4  0A01               	xorlw	1	; case 5
  8784  003EA6  B4D8               	btfsc	status,2,c
  8785  003EA8  EF16  F01F         	goto	l9054
  8786  003EAC  EF58  F01F         	goto	l1345
  8787  003EB0                     l1345:
  8788  003EB0  0012               	return		;funcret
  8789  003EB2                     __end_of_calcSteering:
  8790                           	callstack 0
  8791                           
  8792 ;; *************** function _setSteering *****************
  8793 ;; Defined at:
  8794 ;;		line 391 in file "main.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  steering        2   35[BANK0 ] short 
  8797 ;;  steeringMode    1   37[BANK0 ] enum E17305
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;  steeringB       2   42[BANK0 ] short 
  8800 ;;  steeringF       2   40[BANK0 ] short 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8810 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8813 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8814 ;;Total ram usage:        9 bytes
  8815 ;; Hardware stack levels used: 1
  8816 ;; Hardware stack levels required when called: 9
  8817 ;; This function calls:
  8818 ;;		_PWM5_LoadDutyValue
  8819 ;;		_PWM6_LoadDutyValue
  8820 ;;		___fldiv
  8821 ;;		___fltol
  8822 ;;		___xxtofl
  8823 ;; This function is called by:
  8824 ;;		_loop
  8825 ;;		_checkBatt
  8826 ;;		_calcSteering
  8827 ;;		_startAccell
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text33
  8832  003958                     __ptext33:
  8833                           	callstack 0
  8834  003958                     _setSteering:
  8835                           	callstack 20
  8836  003958  0E00               	movlw	0
  8837  00395A  0100               	movlb	0	; () banked
  8838  00395C  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8839  00395E  0E00               	movlw	0
  8840  003960  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8841                           
  8842                           ;main.c: 393:     switch (steeringMode) {
  8843  003962  EF27  F01D         	goto	l8846
  8844  003966                     l1388:
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;main.c: 395:             steeringF = (+steering);
  8848  003966  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8849  00396A  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8850                           
  8851                           ;main.c: 396:             steeringB = -steering;
  8852  00396E  C083  F086         	movff	setSteering@steering,??_setSteering
  8853  003972  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  8854  003976  1F86               	comf	??_setSteering& (0+255),f,b
  8855  003978  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  8856  00397A  4B86               	infsnz	??_setSteering& (0+255),f,b
  8857  00397C  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  8858  00397E  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  8859  003982  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  8860                           
  8861                           ;main.c: 397:             break;
  8862  003986  EF48  F01D         	goto	l8848
  8863  00398A                     l1390:
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;main.c: 399:             steeringF = (+steering);
  8867  00398A  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8868  00398E  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8869                           
  8870                           ;main.c: 400:             steeringB = (+steering);
  8871  003992  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  8872  003996  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  8873                           
  8874                           ;main.c: 401:             break;
  8875  00399A  EF48  F01D         	goto	l8848
  8876  00399E                     l1391:
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;main.c: 403:             steeringF = (+steering);
  8880  00399E  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8881  0039A2  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8882  0039A6                     
  8883                           ; BSR set to: 0
  8884                           ;main.c: 404:             steeringB = (-steering / (1.25));
  8885  0039A6  0E00               	movlw	0
  8886  0039A8  6E2E               	movwf	___fldiv@a^0,c
  8887  0039AA  0E00               	movlw	0
  8888  0039AC  6E2F               	movwf	(___fldiv@a+1)^0,c
  8889  0039AE  0EA0               	movlw	160
  8890  0039B0  6E30               	movwf	(___fldiv@a+2)^0,c
  8891  0039B2  0E3F               	movlw	63
  8892  0039B4  6E31               	movwf	(___fldiv@a+3)^0,c
  8893  0039B6  C083  F086         	movff	setSteering@steering,??_setSteering
  8894  0039BA  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  8895  0039BE  1F86               	comf	??_setSteering& (0+255),f,b
  8896  0039C0  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  8897  0039C2  4B86               	infsnz	??_setSteering& (0+255),f,b
  8898  0039C4  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  8899  0039C6  C086  F01C         	movff	??_setSteering,___xxtofl@val
  8900  0039CA  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  8901  0039CE  0E00               	movlw	0
  8902  0039D0  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  8903  0039D2  0EFF               	movlw	-1
  8904  0039D4  6E1E               	movwf	(___xxtofl@val+2)^0,c
  8905  0039D6  6E1F               	movwf	(___xxtofl@val+3)^0,c
  8906  0039D8  0E01               	movlw	1
  8907  0039DA  ECA7  F01D         	call	___xxtofl
  8908  0039DE  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  8909  0039E2  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  8910  0039E6  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  8911  0039EA  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  8912  0039EE  ECD9  F015         	call	___fldiv	;wreg free
  8913  0039F2  C02A  F079         	movff	?___fldiv,___fltol@f1
  8914  0039F6  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  8915  0039FA  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  8916  0039FE  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  8917  003A02  EC21  F023         	call	___fltol	;wreg free
  8918  003A06  C079  F08A         	movff	?___fltol,setSteering@steeringB
  8919  003A0A  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  8920                           
  8921                           ;main.c: 405:             break;
  8922  003A0E  EF48  F01D         	goto	l8848
  8923  003A12                     l1392:
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;main.c: 407:             steeringF = (+steering);
  8927  003A12  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8928  003A16  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8929  003A1A                     
  8930                           ; BSR set to: 0
  8931                           ;main.c: 408:             steeringB = 0;
  8932  003A1A  0E00               	movlw	0
  8933  003A1C  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8934  003A1E  0E00               	movlw	0
  8935  003A20  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8936                           
  8937                           ;main.c: 409:             break;
  8938  003A22  EF48  F01D         	goto	l8848
  8939  003A26                     l8838:
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;main.c: 411:             steeringF = 0;
  8943  003A26  0E00               	movlw	0
  8944  003A28  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8945  003A2A  0E00               	movlw	0
  8946  003A2C  6F88               	movwf	setSteering@steeringF& (0+255),b
  8947  003A2E                     
  8948                           ; BSR set to: 0
  8949                           ;main.c: 412:             steeringB = (+steering);
  8950  003A2E  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  8951  003A32  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  8952                           
  8953                           ;main.c: 413:             break;
  8954  003A36  EF48  F01D         	goto	l8848
  8955  003A3A                     l8842:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;main.c: 415:             steeringF = 0;
  8959  003A3A  0E00               	movlw	0
  8960  003A3C  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8961  003A3E  0E00               	movlw	0
  8962  003A40  6F88               	movwf	setSteering@steeringF& (0+255),b
  8963                           
  8964                           ;main.c: 416:             steeringB = 0;
  8965  003A42  0E00               	movlw	0
  8966  003A44  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8967  003A46  0E00               	movlw	0
  8968  003A48  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8969                           
  8970                           ;main.c: 417:             break;
  8971  003A4A  EF48  F01D         	goto	l8848
  8972  003A4E                     l8846:
  8973                           
  8974                           ; BSR set to: 0
  8975  003A4E  5185               	movf	setSteering@steeringMode& (0+255),w,b
  8976  003A50  6F86               	movwf	??_setSteering& (0+255),b
  8977  003A52  6B87               	clrf	(??_setSteering+1)& (0+255),b
  8978                           
  8979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8980                           ; Switch size 1, requested type "simple"
  8981                           ; Number of cases is 1, Range of values is 0 to 0
  8982                           ; switch strategies available:
  8983                           ; Name         Instructions Cycles
  8984                           ; simple_byte            4     3 (average)
  8985                           ;	Chosen strategy is simple_byte
  8986  003A54  5187               	movf	(??_setSteering+1)& (0+255),w,b
  8987  003A56  0A00               	xorlw	0	; case 0
  8988  003A58  B4D8               	btfsc	status,2,c
  8989  003A5A  EF31  F01D         	goto	l9378
  8990  003A5E  EF1D  F01D         	goto	l8842
  8991  003A62                     l9378:
  8992                           
  8993                           ; BSR set to: 0
  8994                           ; Switch size 1, requested type "simple"
  8995                           ; Number of cases is 5, Range of values is 0 to 4
  8996                           ; switch strategies available:
  8997                           ; Name         Instructions Cycles
  8998                           ; simple_byte           16     9 (average)
  8999                           ;	Chosen strategy is simple_byte
  9000  003A62  5186               	movf	??_setSteering& (0+255),w,b
  9001  003A64  0A00               	xorlw	0	; case 0
  9002  003A66  B4D8               	btfsc	status,2,c
  9003  003A68  EFB3  F01C         	goto	l1388
  9004  003A6C  0A01               	xorlw	1	; case 1
  9005  003A6E  B4D8               	btfsc	status,2,c
  9006  003A70  EFC5  F01C         	goto	l1390
  9007  003A74  0A03               	xorlw	3	; case 2
  9008  003A76  B4D8               	btfsc	status,2,c
  9009  003A78  EFCF  F01C         	goto	l1391
  9010  003A7C  0A01               	xorlw	1	; case 3
  9011  003A7E  B4D8               	btfsc	status,2,c
  9012  003A80  EF09  F01D         	goto	l1392
  9013  003A84  0A07               	xorlw	7	; case 4
  9014  003A86  B4D8               	btfsc	status,2,c
  9015  003A88  EF13  F01D         	goto	l8838
  9016  003A8C  EF1D  F01D         	goto	l8842
  9017  003A90                     l8848:
  9018                           
  9019                           ;main.c: 420:     if (steeringF > ((65))) {
  9020  003A90  0100               	movlb	0	; () banked
  9021  003A92  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  9022  003A94  EF55  F01D         	goto	u9801
  9023  003A98  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  9024  003A9A  E109               	bnz	u9800
  9025  003A9C  0E42               	movlw	66
  9026  003A9E  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9027  003AA0  A0D8               	btfss	status,0,c
  9028  003AA2  EF55  F01D         	goto	u9801
  9029  003AA6  EF57  F01D         	goto	u9800
  9030  003AAA                     u9801:
  9031  003AAA  EF5D  F01D         	goto	l8852
  9032  003AAE                     u9800:
  9033  003AAE                     
  9034                           ; BSR set to: 0
  9035                           ;main.c: 421:         steeringF = ((65));
  9036  003AAE  0E00               	movlw	0
  9037  003AB0  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9038  003AB2  0E41               	movlw	65
  9039  003AB4  6F88               	movwf	setSteering@steeringF& (0+255),b
  9040                           
  9041                           ;main.c: 422:     } else if (steeringF < (-(65))) {
  9042  003AB6  EF6F  F01D         	goto	l8856
  9043  003ABA                     l8852:
  9044                           
  9045                           ; BSR set to: 0
  9046  003ABA  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  9047  003ABC  EF69  F01D         	goto	u9811
  9048  003AC0  0EBF               	movlw	191
  9049  003AC2  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  9050  003AC4  0EFF               	movlw	255
  9051  003AC6  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  9052  003AC8  B0D8               	btfsc	status,0,c
  9053  003ACA  EF69  F01D         	goto	u9811
  9054  003ACE  EF6B  F01D         	goto	u9810
  9055  003AD2                     u9811:
  9056  003AD2  EF6F  F01D         	goto	l8856
  9057  003AD6                     u9810:
  9058  003AD6                     
  9059                           ; BSR set to: 0
  9060                           ;main.c: 423:         steeringF = (-(65));
  9061  003AD6  0EFF               	movlw	255
  9062  003AD8  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  9063  003ADA  0EBF               	movlw	191
  9064  003ADC  6F88               	movwf	setSteering@steeringF& (0+255),b
  9065  003ADE                     l8856:
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;main.c: 426:     if (steeringB > ((40))) {
  9069  003ADE  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  9070  003AE0  EF7B  F01D         	goto	u9821
  9071  003AE4  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  9072  003AE6  E109               	bnz	u9820
  9073  003AE8  0E29               	movlw	41
  9074  003AEA  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9075  003AEC  A0D8               	btfss	status,0,c
  9076  003AEE  EF7B  F01D         	goto	u9821
  9077  003AF2  EF7D  F01D         	goto	u9820
  9078  003AF6                     u9821:
  9079  003AF6  EF83  F01D         	goto	l8860
  9080  003AFA                     u9820:
  9081  003AFA                     
  9082                           ; BSR set to: 0
  9083                           ;main.c: 427:         steeringB = ((40));
  9084  003AFA  0E00               	movlw	0
  9085  003AFC  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9086  003AFE  0E28               	movlw	40
  9087  003B00  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9088                           
  9089                           ;main.c: 428:     } else if (steeringB < (-(40))) {
  9090  003B02  EF95  F01D         	goto	l8864
  9091  003B06                     l8860:
  9092                           
  9093                           ; BSR set to: 0
  9094  003B06  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  9095  003B08  EF8F  F01D         	goto	u9831
  9096  003B0C  0ED8               	movlw	216
  9097  003B0E  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  9098  003B10  0EFF               	movlw	255
  9099  003B12  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  9100  003B14  B0D8               	btfsc	status,0,c
  9101  003B16  EF8F  F01D         	goto	u9831
  9102  003B1A  EF91  F01D         	goto	u9830
  9103  003B1E                     u9831:
  9104  003B1E  EF95  F01D         	goto	l8864
  9105  003B22                     u9830:
  9106  003B22                     
  9107                           ; BSR set to: 0
  9108                           ;main.c: 429:         steeringB = (-(40));
  9109  003B22  0EFF               	movlw	255
  9110  003B24  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  9111  003B26  0ED8               	movlw	216
  9112  003B28  6F8A               	movwf	setSteering@steeringB& (0+255),b
  9113  003B2A                     l8864:
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;main.c: 433:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9117  003B2A  0E60               	movlw	96
  9118  003B2C  2588               	addwf	setSteering@steeringF& (0+255),w,b
  9119  003B2E  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9120  003B30  0E01               	movlw	1
  9121  003B32  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  9122  003B34  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9123  003B36  EC8B  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  9124  003B3A                     
  9125                           ;main.c: 434:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9126  003B3A  0E65               	movlw	101
  9127  003B3C  0100               	movlb	0	; () banked
  9128  003B3E  258A               	addwf	setSteering@steeringB& (0+255),w,b
  9129  003B40  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9130  003B42  0E01               	movlw	1
  9131  003B44  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  9132  003B46  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9133  003B48  ECA5  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  9134  003B4C  0012               	return		;funcret
  9135  003B4E                     __end_of_setSteering:
  9136                           	callstack 0
  9137                           
  9138 ;; *************** function ___fldiv *****************
  9139 ;; Defined at:
  9140 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  b               4   41[COMRAM] void 
  9143 ;;  a               4   45[COMRAM] void 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  grs             4    7[BANK0 ] unsigned long 
  9146 ;;  rem             4    0[BANK0 ] unsigned long 
  9147 ;;  new_exp         2    5[BANK0 ] short 
  9148 ;;  aexp            1   12[BANK0 ] unsigned char 
  9149 ;;  bexp            1   11[BANK0 ] unsigned char 
  9150 ;;  sign            1    4[BANK0 ] unsigned char 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  4   41[COMRAM] unsigned char 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2, status,0
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9160 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;Total ram usage:       25 bytes
  9165 ;; Hardware stack levels used: 1
  9166 ;; Hardware stack levels required when called: 8
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_getBatteryVoltage
  9171 ;;		_setSteering
  9172 ;;		_efgtoa
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           	psect	text34
  9177  002BB2                     __ptext34:
  9178                           	callstack 0
  9179  002BB2                     ___fldiv:
  9180                           	callstack 20
  9181  002BB2  502D               	movf	(___fldiv@b+3)^0,w,c
  9182  002BB4  0B80               	andlw	128
  9183  002BB6  0100               	movlb	0	; () banked
  9184  002BB8  6F64               	movwf	___fldiv@sign& (0+255),b
  9185  002BBA  502D               	movf	(___fldiv@b+3)^0,w,c
  9186  002BBC  242D               	addwf	(___fldiv@b+3)^0,w,c
  9187  002BBE  6F6B               	movwf	___fldiv@bexp& (0+255),b
  9188  002BC0                     
  9189                           ; BSR set to: 0
  9190  002BC0  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  9191  002BC2  EFE5  F015         	goto	u7861
  9192  002BC6  EFE7  F015         	goto	u7860
  9193  002BCA                     u7861:
  9194  002BCA  EFE8  F015         	goto	l7762
  9195  002BCE                     u7860:
  9196  002BCE                     
  9197                           ; BSR set to: 0
  9198  002BCE  816B               	bsf	___fldiv@bexp& (0+255),0,b
  9199  002BD0                     l7762:
  9200                           
  9201                           ; BSR set to: 0
  9202  002BD0  516B               	movf	___fldiv@bexp& (0+255),w,b
  9203  002BD2  B4D8               	btfsc	status,2,c
  9204  002BD4  EFEE  F015         	goto	u7871
  9205  002BD8  EFF0  F015         	goto	u7870
  9206  002BDC                     u7871:
  9207  002BDC  EF05  F016         	goto	l7772
  9208  002BE0                     u7870:
  9209  002BE0                     
  9210                           ; BSR set to: 0
  9211  002BE0  296B               	incf	___fldiv@bexp& (0+255),w,b
  9212  002BE2  A4D8               	btfss	status,2,c
  9213  002BE4  EFF6  F015         	goto	u7881
  9214  002BE8  EFF8  F015         	goto	u7880
  9215  002BEC                     u7881:
  9216  002BEC  EF00  F016         	goto	l7768
  9217  002BF0                     u7880:
  9218  002BF0                     
  9219                           ; BSR set to: 0
  9220  002BF0  0E00               	movlw	0
  9221  002BF2  6E2A               	movwf	___fldiv@b^0,c
  9222  002BF4  0E00               	movlw	0
  9223  002BF6  6E2B               	movwf	(___fldiv@b+1)^0,c
  9224  002BF8  0E00               	movlw	0
  9225  002BFA  6E2C               	movwf	(___fldiv@b+2)^0,c
  9226  002BFC  0E00               	movlw	0
  9227  002BFE  6E2D               	movwf	(___fldiv@b+3)^0,c
  9228  002C00                     l7768:
  9229                           
  9230                           ; BSR set to: 0
  9231  002C00  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  9232  002C02                     
  9233                           ; BSR set to: 0
  9234  002C02  0E00               	movlw	0
  9235  002C04  6E2D               	movwf	(___fldiv@b+3)^0,c
  9236  002C06  EF0D  F016         	goto	l7774
  9237  002C0A                     l7772:
  9238                           
  9239                           ; BSR set to: 0
  9240  002C0A  0E00               	movlw	0
  9241  002C0C  6E2A               	movwf	___fldiv@b^0,c
  9242  002C0E  0E00               	movlw	0
  9243  002C10  6E2B               	movwf	(___fldiv@b+1)^0,c
  9244  002C12  0E00               	movlw	0
  9245  002C14  6E2C               	movwf	(___fldiv@b+2)^0,c
  9246  002C16  0E00               	movlw	0
  9247  002C18  6E2D               	movwf	(___fldiv@b+3)^0,c
  9248  002C1A                     l7774:
  9249                           
  9250                           ; BSR set to: 0
  9251  002C1A  5031               	movf	(___fldiv@a+3)^0,w,c
  9252  002C1C  0B80               	andlw	128
  9253  002C1E  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  9254  002C20                     
  9255                           ; BSR set to: 0
  9256  002C20  5031               	movf	(___fldiv@a+3)^0,w,c
  9257  002C22  2431               	addwf	(___fldiv@a+3)^0,w,c
  9258  002C24  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9259  002C26                     
  9260                           ; BSR set to: 0
  9261  002C26  AE30               	btfss	(___fldiv@a+2)^0,7,c
  9262  002C28  EF18  F016         	goto	u7891
  9263  002C2C  EF1A  F016         	goto	u7890
  9264  002C30                     u7891:
  9265  002C30  EF1B  F016         	goto	l7782
  9266  002C34                     u7890:
  9267  002C34                     
  9268                           ; BSR set to: 0
  9269  002C34  816C               	bsf	___fldiv@aexp& (0+255),0,b
  9270  002C36                     l7782:
  9271                           
  9272                           ; BSR set to: 0
  9273  002C36  516C               	movf	___fldiv@aexp& (0+255),w,b
  9274  002C38  B4D8               	btfsc	status,2,c
  9275  002C3A  EF21  F016         	goto	u7901
  9276  002C3E  EF23  F016         	goto	u7900
  9277  002C42                     u7901:
  9278  002C42  EF38  F016         	goto	l7792
  9279  002C46                     u7900:
  9280  002C46                     
  9281                           ; BSR set to: 0
  9282  002C46  296C               	incf	___fldiv@aexp& (0+255),w,b
  9283  002C48  A4D8               	btfss	status,2,c
  9284  002C4A  EF29  F016         	goto	u7911
  9285  002C4E  EF2B  F016         	goto	u7910
  9286  002C52                     u7911:
  9287  002C52  EF33  F016         	goto	l7788
  9288  002C56                     u7910:
  9289  002C56                     
  9290                           ; BSR set to: 0
  9291  002C56  0E00               	movlw	0
  9292  002C58  6E2E               	movwf	___fldiv@a^0,c
  9293  002C5A  0E00               	movlw	0
  9294  002C5C  6E2F               	movwf	(___fldiv@a+1)^0,c
  9295  002C5E  0E00               	movlw	0
  9296  002C60  6E30               	movwf	(___fldiv@a+2)^0,c
  9297  002C62  0E00               	movlw	0
  9298  002C64  6E31               	movwf	(___fldiv@a+3)^0,c
  9299  002C66                     l7788:
  9300                           
  9301                           ; BSR set to: 0
  9302  002C66  8E30               	bsf	(___fldiv@a+2)^0,7,c
  9303  002C68                     
  9304                           ; BSR set to: 0
  9305  002C68  0E00               	movlw	0
  9306  002C6A  6E31               	movwf	(___fldiv@a+3)^0,c
  9307  002C6C  EF40  F016         	goto	l7794
  9308  002C70                     l7792:
  9309                           
  9310                           ; BSR set to: 0
  9311  002C70  0E00               	movlw	0
  9312  002C72  6E2E               	movwf	___fldiv@a^0,c
  9313  002C74  0E00               	movlw	0
  9314  002C76  6E2F               	movwf	(___fldiv@a+1)^0,c
  9315  002C78  0E00               	movlw	0
  9316  002C7A  6E30               	movwf	(___fldiv@a+2)^0,c
  9317  002C7C  0E00               	movlw	0
  9318  002C7E  6E31               	movwf	(___fldiv@a+3)^0,c
  9319  002C80                     l7794:
  9320                           
  9321                           ; BSR set to: 0
  9322  002C80  502E               	movf	___fldiv@a^0,w,c
  9323  002C82  102F               	iorwf	(___fldiv@a+1)^0,w,c
  9324  002C84  1030               	iorwf	(___fldiv@a+2)^0,w,c
  9325  002C86  1031               	iorwf	(___fldiv@a+3)^0,w,c
  9326  002C88  A4D8               	btfss	status,2,c
  9327  002C8A  EF49  F016         	goto	u7921
  9328  002C8E  EF4B  F016         	goto	u7920
  9329  002C92                     u7921:
  9330  002C92  EF63  F016         	goto	l7806
  9331  002C96                     u7920:
  9332  002C96                     
  9333                           ; BSR set to: 0
  9334  002C96  0E00               	movlw	0
  9335  002C98  6E2A               	movwf	___fldiv@b^0,c
  9336  002C9A  0E00               	movlw	0
  9337  002C9C  6E2B               	movwf	(___fldiv@b+1)^0,c
  9338  002C9E  0E00               	movlw	0
  9339  002CA0  6E2C               	movwf	(___fldiv@b+2)^0,c
  9340  002CA2  0E00               	movlw	0
  9341  002CA4  6E2D               	movwf	(___fldiv@b+3)^0,c
  9342  002CA6                     
  9343                           ; BSR set to: 0
  9344  002CA6  0E80               	movlw	128
  9345  002CA8  122C               	iorwf	(___fldiv@b+2)^0,f,c
  9346  002CAA  0E7F               	movlw	127
  9347  002CAC  122D               	iorwf	(___fldiv@b+3)^0,f,c
  9348  002CAE                     l7800:
  9349                           
  9350                           ; BSR set to: 0
  9351  002CAE  5164               	movf	___fldiv@sign& (0+255),w,b
  9352  002CB0  122D               	iorwf	(___fldiv@b+3)^0,f,c
  9353  002CB2                     
  9354                           ; BSR set to: 0
  9355  002CB2  C02A  F02A         	movff	___fldiv@b,?___fldiv
  9356  002CB6  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  9357  002CBA  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  9358  002CBE  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  9359  002CC2  EFA6  F017         	goto	l1986
  9360  002CC6                     l7806:
  9361                           
  9362                           ; BSR set to: 0
  9363  002CC6  516B               	movf	___fldiv@bexp& (0+255),w,b
  9364  002CC8  A4D8               	btfss	status,2,c
  9365  002CCA  EF69  F016         	goto	u7931
  9366  002CCE  EF6B  F016         	goto	u7930
  9367  002CD2                     u7931:
  9368  002CD2  EF75  F016         	goto	l7814
  9369  002CD6                     u7930:
  9370  002CD6                     
  9371                           ; BSR set to: 0
  9372  002CD6  0E00               	movlw	0
  9373  002CD8  6E2A               	movwf	?___fldiv^0,c
  9374  002CDA  0E00               	movlw	0
  9375  002CDC  6E2B               	movwf	(?___fldiv+1)^0,c
  9376  002CDE  0E00               	movlw	0
  9377  002CE0  6E2C               	movwf	(?___fldiv+2)^0,c
  9378  002CE2  0E00               	movlw	0
  9379  002CE4  6E2D               	movwf	(?___fldiv+3)^0,c
  9380  002CE6  EFA6  F017         	goto	l1986
  9381  002CEA                     l7814:
  9382                           
  9383                           ; BSR set to: 0
  9384  002CEA  516C               	movf	___fldiv@aexp& (0+255),w,b
  9385  002CEC  C06B  F032         	movff	___fldiv@bexp,??___fldiv
  9386  002CF0  6A33               	clrf	(??___fldiv+1)^0,c
  9387  002CF2  5E32               	subwf	??___fldiv^0,f,c
  9388  002CF4  0E00               	movlw	0
  9389  002CF6  5A33               	subwfb	(??___fldiv+1)^0,f,c
  9390  002CF8  0E7F               	movlw	127
  9391  002CFA  2432               	addwf	??___fldiv^0,w,c
  9392  002CFC  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9393  002CFE  0E00               	movlw	0
  9394  002D00  2033               	addwfc	(??___fldiv+1)^0,w,c
  9395  002D02  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9396  002D04                     
  9397                           ; BSR set to: 0
  9398  002D04  C02A  F060         	movff	___fldiv@b,___fldiv@rem
  9399  002D08  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  9400  002D0C  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  9401  002D10  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  9402  002D14                     
  9403                           ; BSR set to: 0
  9404  002D14  0E00               	movlw	0
  9405  002D16  6E2A               	movwf	___fldiv@b^0,c
  9406  002D18  0E00               	movlw	0
  9407  002D1A  6E2B               	movwf	(___fldiv@b+1)^0,c
  9408  002D1C  0E00               	movlw	0
  9409  002D1E  6E2C               	movwf	(___fldiv@b+2)^0,c
  9410  002D20  0E00               	movlw	0
  9411  002D22  6E2D               	movwf	(___fldiv@b+3)^0,c
  9412  002D24                     
  9413                           ; BSR set to: 0
  9414  002D24  0E00               	movlw	0
  9415  002D26  6F67               	movwf	___fldiv@grs& (0+255),b
  9416  002D28  0E00               	movlw	0
  9417  002D2A  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  9418  002D2C  0E00               	movlw	0
  9419  002D2E  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  9420  002D30  0E00               	movlw	0
  9421  002D32  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  9422  002D34                     
  9423                           ; BSR set to: 0
  9424  002D34  0E00               	movlw	0
  9425  002D36  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9426  002D38  EFD6  F016         	goto	l1988
  9427  002D3C                     l7824:
  9428                           
  9429                           ; BSR set to: 0
  9430  002D3C  516C               	movf	___fldiv@aexp& (0+255),w,b
  9431  002D3E  B4D8               	btfsc	status,2,c
  9432  002D40  EFA4  F016         	goto	u7941
  9433  002D44  EFA6  F016         	goto	u7940
  9434  002D48                     u7941:
  9435  002D48  EFBD  F016         	goto	l7832
  9436  002D4C                     u7940:
  9437  002D4C                     
  9438                           ; BSR set to: 0
  9439  002D4C  90D8               	bcf	status,0,c
  9440  002D4E  3760               	rlcf	___fldiv@rem& (0+255),f,b
  9441  002D50  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9442  002D52  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9443  002D54  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9444  002D56  90D8               	bcf	status,0,c
  9445  002D58  362A               	rlcf	___fldiv@b^0,f,c
  9446  002D5A  362B               	rlcf	(___fldiv@b+1)^0,f,c
  9447  002D5C  362C               	rlcf	(___fldiv@b+2)^0,f,c
  9448  002D5E  362D               	rlcf	(___fldiv@b+3)^0,f,c
  9449  002D60                     
  9450                           ; BSR set to: 0
  9451  002D60  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9452  002D62  EFB5  F016         	goto	u7951
  9453  002D66  EFB7  F016         	goto	u7950
  9454  002D6A                     u7951:
  9455  002D6A  EFB8  F016         	goto	l1991
  9456  002D6E                     u7950:
  9457  002D6E                     
  9458                           ; BSR set to: 0
  9459  002D6E  802A               	bsf	___fldiv@b^0,0,c
  9460  002D70                     l1991:
  9461                           
  9462                           ; BSR set to: 0
  9463  002D70  90D8               	bcf	status,0,c
  9464  002D72  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9465  002D74  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9466  002D76  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9467  002D78  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9468  002D7A                     l7832:
  9469                           
  9470                           ; BSR set to: 0
  9471  002D7A  502E               	movf	___fldiv@a^0,w,c
  9472  002D7C  5D60               	subwf	___fldiv@rem& (0+255),w,b
  9473  002D7E  502F               	movf	(___fldiv@a+1)^0,w,c
  9474  002D80  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9475  002D82  5030               	movf	(___fldiv@a+2)^0,w,c
  9476  002D84  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9477  002D86  5031               	movf	(___fldiv@a+3)^0,w,c
  9478  002D88  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9479  002D8A  A0D8               	btfss	status,0,c
  9480  002D8C  EFCA  F016         	goto	u7961
  9481  002D90  EFCC  F016         	goto	u7960
  9482  002D94                     u7961:
  9483  002D94  EFD5  F016         	goto	l7838
  9484  002D98                     u7960:
  9485  002D98                     
  9486                           ; BSR set to: 0
  9487  002D98  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9488  002D9A                     
  9489                           ; BSR set to: 0
  9490  002D9A  502E               	movf	___fldiv@a^0,w,c
  9491  002D9C  5F60               	subwf	___fldiv@rem& (0+255),f,b
  9492  002D9E  502F               	movf	(___fldiv@a+1)^0,w,c
  9493  002DA0  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9494  002DA2  5030               	movf	(___fldiv@a+2)^0,w,c
  9495  002DA4  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9496  002DA6  5031               	movf	(___fldiv@a+3)^0,w,c
  9497  002DA8  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9498  002DAA                     l7838:
  9499                           
  9500                           ; BSR set to: 0
  9501  002DAA  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  9502  002DAC                     l1988:
  9503                           
  9504                           ; BSR set to: 0
  9505  002DAC  0E19               	movlw	25
  9506  002DAE  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  9507  002DB0  EFDC  F016         	goto	u7971
  9508  002DB4  EFDE  F016         	goto	u7970
  9509  002DB8                     u7971:
  9510  002DB8  EF9E  F016         	goto	l7824
  9511  002DBC                     u7970:
  9512  002DBC                     
  9513                           ; BSR set to: 0
  9514  002DBC  5160               	movf	___fldiv@rem& (0+255),w,b
  9515  002DBE  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9516  002DC0  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9517  002DC2  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9518  002DC4  B4D8               	btfsc	status,2,c
  9519  002DC6  EFE7  F016         	goto	u7981
  9520  002DCA  EFE9  F016         	goto	u7980
  9521  002DCE                     u7981:
  9522  002DCE  EF01  F017         	goto	l7850
  9523  002DD2                     u7980:
  9524  002DD2                     
  9525                           ; BSR set to: 0
  9526  002DD2  8167               	bsf	___fldiv@grs& (0+255),0,b
  9527  002DD4  EF01  F017         	goto	l7850
  9528  002DD8                     l7844:
  9529                           
  9530                           ; BSR set to: 0
  9531  002DD8  90D8               	bcf	status,0,c
  9532  002DDA  362A               	rlcf	___fldiv@b^0,f,c
  9533  002DDC  362B               	rlcf	(___fldiv@b+1)^0,f,c
  9534  002DDE  362C               	rlcf	(___fldiv@b+2)^0,f,c
  9535  002DE0  362D               	rlcf	(___fldiv@b+3)^0,f,c
  9536  002DE2                     
  9537                           ; BSR set to: 0
  9538  002DE2  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9539  002DE4  EFF6  F016         	goto	u7991
  9540  002DE8  EFF8  F016         	goto	u7990
  9541  002DEC                     u7991:
  9542  002DEC  EFF9  F016         	goto	l1997
  9543  002DF0                     u7990:
  9544  002DF0                     
  9545                           ; BSR set to: 0
  9546  002DF0  802A               	bsf	___fldiv@b^0,0,c
  9547  002DF2                     l1997:
  9548                           
  9549                           ; BSR set to: 0
  9550  002DF2  90D8               	bcf	status,0,c
  9551  002DF4  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9552  002DF6  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9553  002DF8  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9554  002DFA  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9555  002DFC  0765               	decf	___fldiv@new_exp& (0+255),f,b
  9556  002DFE  A0D8               	btfss	status,0,c
  9557  002E00  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9558  002E02                     l7850:
  9559                           
  9560                           ; BSR set to: 0
  9561  002E02  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  9562  002E04  EF06  F017         	goto	u8001
  9563  002E08  EF08  F017         	goto	u8000
  9564  002E0C                     u8001:
  9565  002E0C  EFEC  F016         	goto	l7844
  9566  002E10                     u8000:
  9567  002E10                     
  9568                           ; BSR set to: 0
  9569  002E10  0E00               	movlw	0
  9570  002E12  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9571  002E14                     
  9572                           ; BSR set to: 0
  9573  002E14  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9574  002E16  EF0F  F017         	goto	u8011
  9575  002E1A  EF11  F017         	goto	u8010
  9576  002E1E                     u8011:
  9577  002E1E  EF35  F017         	goto	l1999
  9578  002E22                     u8010:
  9579  002E22                     
  9580                           ; BSR set to: 0
  9581  002E22  0EFF               	movlw	255
  9582  002E24  1567               	andwf	___fldiv@grs& (0+255),w,b
  9583  002E26  6E32               	movwf	??___fldiv^0,c
  9584  002E28  0EFF               	movlw	255
  9585  002E2A  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9586  002E2C  6E33               	movwf	(??___fldiv+1)^0,c
  9587  002E2E  0EFF               	movlw	255
  9588  002E30  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9589  002E32  6E34               	movwf	(??___fldiv+2)^0,c
  9590  002E34  0E7F               	movlw	127
  9591  002E36  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9592  002E38  6E35               	movwf	(??___fldiv+3)^0,c
  9593  002E3A  5032               	movf	??___fldiv^0,w,c
  9594  002E3C  1033               	iorwf	(??___fldiv+1)^0,w,c
  9595  002E3E  1034               	iorwf	(??___fldiv+2)^0,w,c
  9596  002E40  1035               	iorwf	(??___fldiv+3)^0,w,c
  9597  002E42  B4D8               	btfsc	status,2,c
  9598  002E44  EF26  F017         	goto	u8021
  9599  002E48  EF28  F017         	goto	u8020
  9600  002E4C                     u8021:
  9601  002E4C  EF2C  F017         	goto	l2000
  9602  002E50                     u8020:
  9603  002E50                     l7858:
  9604                           
  9605                           ; BSR set to: 0
  9606  002E50  0E01               	movlw	1
  9607  002E52  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9608  002E54  EF35  F017         	goto	l1999
  9609  002E58                     l2000:
  9610                           
  9611                           ; BSR set to: 0
  9612  002E58  A02A               	btfss	___fldiv@b^0,0,c
  9613  002E5A  EF31  F017         	goto	u8031
  9614  002E5E  EF33  F017         	goto	u8030
  9615  002E62                     u8031:
  9616  002E62  EF35  F017         	goto	l1999
  9617  002E66                     u8030:
  9618  002E66  EF28  F017         	goto	l7858
  9619  002E6A                     l1999:
  9620                           
  9621                           ; BSR set to: 0
  9622  002E6A  516C               	movf	___fldiv@aexp& (0+255),w,b
  9623  002E6C  B4D8               	btfsc	status,2,c
  9624  002E6E  EF3B  F017         	goto	u8041
  9625  002E72  EF3D  F017         	goto	u8040
  9626  002E76                     u8041:
  9627  002E76  EF61  F017         	goto	l7870
  9628  002E7A                     u8040:
  9629  002E7A                     
  9630                           ; BSR set to: 0
  9631  002E7A  0E01               	movlw	1
  9632  002E7C  262A               	addwf	___fldiv@b^0,f,c
  9633  002E7E  0E00               	movlw	0
  9634  002E80  222B               	addwfc	(___fldiv@b+1)^0,f,c
  9635  002E82  222C               	addwfc	(___fldiv@b+2)^0,f,c
  9636  002E84  222D               	addwfc	(___fldiv@b+3)^0,f,c
  9637  002E86                     
  9638                           ; BSR set to: 0
  9639  002E86  A02D               	btfss	(___fldiv@b+3)^0,0,c
  9640  002E88  EF48  F017         	goto	u8051
  9641  002E8C  EF4A  F017         	goto	u8050
  9642  002E90                     u8051:
  9643  002E90  EF61  F017         	goto	l7870
  9644  002E94                     u8050:
  9645  002E94                     
  9646                           ; BSR set to: 0
  9647  002E94  C02A  F032         	movff	___fldiv@b,??___fldiv
  9648  002E98  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  9649  002E9C  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  9650  002EA0  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  9651  002EA4  3435               	rlcf	(??___fldiv+3)^0,w,c
  9652  002EA6  3235               	rrcf	(??___fldiv+3)^0,f,c
  9653  002EA8  3234               	rrcf	(??___fldiv+2)^0,f,c
  9654  002EAA  3233               	rrcf	(??___fldiv+1)^0,f,c
  9655  002EAC  3232               	rrcf	??___fldiv^0,f,c
  9656  002EAE  C032  F02A         	movff	??___fldiv,___fldiv@b
  9657  002EB2  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  9658  002EB6  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  9659  002EBA  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  9660  002EBE                     
  9661                           ; BSR set to: 0
  9662  002EBE  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  9663  002EC0  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9664  002EC2                     l7870:
  9665                           
  9666                           ; BSR set to: 0
  9667  002EC2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9668  002EC4  EF6C  F017         	goto	u8061
  9669  002EC8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9670  002ECA  E108               	bnz	u8060
  9671  002ECC  2965               	incf	___fldiv@new_exp& (0+255),w,b
  9672  002ECE  A0D8               	btfss	status,0,c
  9673  002ED0  EF6C  F017         	goto	u8061
  9674  002ED4  EF6E  F017         	goto	u8060
  9675  002ED8                     u8061:
  9676  002ED8  EF79  F017         	goto	l7874
  9677  002EDC                     u8060:
  9678  002EDC                     
  9679                           ; BSR set to: 0
  9680  002EDC  0E00               	movlw	0
  9681  002EDE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9682  002EE0  6965               	setf	___fldiv@new_exp& (0+255),b
  9683  002EE2  0E00               	movlw	0
  9684  002EE4  6E2A               	movwf	___fldiv@b^0,c
  9685  002EE6  0E00               	movlw	0
  9686  002EE8  6E2B               	movwf	(___fldiv@b+1)^0,c
  9687  002EEA  0E00               	movlw	0
  9688  002EEC  6E2C               	movwf	(___fldiv@b+2)^0,c
  9689  002EEE  0E00               	movlw	0
  9690  002EF0  6E2D               	movwf	(___fldiv@b+3)^0,c
  9691  002EF2                     l7874:
  9692                           
  9693                           ; BSR set to: 0
  9694  002EF2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9695  002EF4  EF86  F017         	goto	u8070
  9696  002EF8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9697  002EFA  E106               	bnz	u8071
  9698  002EFC  0565               	decf	___fldiv@new_exp& (0+255),w,b
  9699  002EFE  B0D8               	btfsc	status,0,c
  9700  002F00  EF84  F017         	goto	u8071
  9701  002F04  EF86  F017         	goto	u8070
  9702  002F08                     u8071:
  9703  002F08  EF94  F017         	goto	l7878
  9704  002F0C                     u8070:
  9705  002F0C                     
  9706                           ; BSR set to: 0
  9707  002F0C  0E00               	movlw	0
  9708  002F0E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9709  002F10  0E00               	movlw	0
  9710  002F12  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9711  002F14  0E00               	movlw	0
  9712  002F16  6E2A               	movwf	___fldiv@b^0,c
  9713  002F18  0E00               	movlw	0
  9714  002F1A  6E2B               	movwf	(___fldiv@b+1)^0,c
  9715  002F1C  0E00               	movlw	0
  9716  002F1E  6E2C               	movwf	(___fldiv@b+2)^0,c
  9717  002F20  0E00               	movlw	0
  9718  002F22  6E2D               	movwf	(___fldiv@b+3)^0,c
  9719  002F24  0E00               	movlw	0
  9720  002F26  6F64               	movwf	___fldiv@sign& (0+255),b
  9721  002F28                     l7878:
  9722                           
  9723                           ; BSR set to: 0
  9724  002F28  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  9725  002F2C                     
  9726                           ; BSR set to: 0
  9727  002F2C  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  9728  002F2E  EF9B  F017         	goto	u8081
  9729  002F32  EF9D  F017         	goto	u8080
  9730  002F36                     u8081:
  9731  002F36  EFA0  F017         	goto	l7884
  9732  002F3A                     u8080:
  9733  002F3A                     
  9734                           ; BSR set to: 0
  9735  002F3A  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  9736  002F3C  EFA1  F017         	goto	l7886
  9737  002F40                     l7884:
  9738                           
  9739                           ; BSR set to: 0
  9740  002F40  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  9741  002F42                     l7886:
  9742                           
  9743                           ; BSR set to: 0
  9744  002F42  90D8               	bcf	status,0,c
  9745  002F44  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  9746  002F46  6E2D               	movwf	(___fldiv@b+3)^0,c
  9747  002F48  EF57  F016         	goto	l7800
  9748  002F4C                     l1986:
  9749                           
  9750                           ; BSR set to: 0
  9751  002F4C  0012               	return		;funcret
  9752  002F4E                     __end_of___fldiv:
  9753                           	callstack 0
  9754                           
  9755 ;; *************** function _PWM6_LoadDutyValue *****************
  9756 ;; Defined at:
  9757 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;		None
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      void 
  9764 ;; Registers used:
  9765 ;;		wreg, status,2, status,0
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9774 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9775 ;;Total ram usage:        4 bytes
  9776 ;; Hardware stack levels used: 1
  9777 ;; Hardware stack levels required when called: 8
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_setSteering
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text35
  9786  005916                     __ptext35:
  9787                           	callstack 0
  9788  005916                     _PWM6_LoadDutyValue:
  9789                           	callstack 20
  9790  005916                     
  9791                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9792  005916  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9793  00591A  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  9794  00591E  90D8               	bcf	status,0,c
  9795  005920  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9796  005922  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9797  005924  90D8               	bcf	status,0,c
  9798  005926  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9799  005928  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9800  00592A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9801  00592C  6E69               	movwf	105,c	;volatile
  9802                           
  9803                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9804  00592E  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9805  005932  0E03               	movlw	3
  9806  005934  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  9807  005936  0E06               	movlw	6
  9808  005938  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  9809  00593A                     u6115:
  9810  00593A  90D8               	bcf	status,0,c
  9811  00593C  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  9812  00593E  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  9813  005940  EF9D  F02C         	goto	u6115
  9814  005944  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9815  005946  6E68               	movwf	104,c	;volatile
  9816  005948  0012               	return		;funcret
  9817  00594A                     __end_of_PWM6_LoadDutyValue:
  9818                           	callstack 0
  9819                           
  9820 ;; *************** function _PWM5_LoadDutyValue *****************
  9821 ;; Defined at:
  9822 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, status,2, status,0
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9840 ;;Total ram usage:        4 bytes
  9841 ;; Hardware stack levels used: 1
  9842 ;; Hardware stack levels required when called: 8
  9843 ;; This function calls:
  9844 ;;		Nothing
  9845 ;; This function is called by:
  9846 ;;		_setSteering
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           	psect	text36
  9851  00594A                     __ptext36:
  9852                           	callstack 0
  9853  00594A                     _PWM5_LoadDutyValue:
  9854                           	callstack 20
  9855  00594A                     
  9856                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9857  00594A  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9858  00594E  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  9859  005952  90D8               	bcf	status,0,c
  9860  005954  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9861  005956  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9862  005958  90D8               	bcf	status,0,c
  9863  00595A  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9864  00595C  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9865  00595E  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9866  005960  6E6D               	movwf	109,c	;volatile
  9867                           
  9868                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9869  005962  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9870  005966  0E03               	movlw	3
  9871  005968  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  9872  00596A  0E06               	movlw	6
  9873  00596C  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  9874  00596E                     u6105:
  9875  00596E  90D8               	bcf	status,0,c
  9876  005970  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  9877  005972  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  9878  005974  EFB7  F02C         	goto	u6105
  9879  005978  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9880  00597A  6E6C               	movwf	108,c	;volatile
  9881  00597C  0012               	return		;funcret
  9882  00597E                     __end_of_PWM5_LoadDutyValue:
  9883                           	callstack 0
  9884                           
  9885 ;; *************** function _calcSpeed *****************
  9886 ;; Defined at:
  9887 ;;		line 283 in file "main.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;		None
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;  speed           2   39[BANK0 ] short 
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  1    wreg      void 
  9894 ;; Registers used:
  9895 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9902 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;Total ram usage:        6 bytes
  9906 ;; Hardware stack levels used: 1
  9907 ;; Hardware stack levels required when called: 9
  9908 ;; This function calls:
  9909 ;;		___fladd
  9910 ;;		___flmul
  9911 ;;		___fltol
  9912 ;;		___xxtofl
  9913 ;; This function is called by:
  9914 ;;		_loop
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text37
  9919  00374E                     __ptext37:
  9920                           	callstack 0
  9921  00374E                     _calcSpeed:
  9922                           	callstack 20
  9923  00374E                     
  9924                           ;main.c: 284:     int16_t speed = 0;
  9925  00374E  0E00               	movlw	0
  9926  003750  0100               	movlb	0	; () banked
  9927  003752  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9928  003754  0E00               	movlw	0
  9929  003756  6F87               	movwf	calcSpeed@speed& (0+255),b
  9930                           
  9931                           ;main.c: 286:     switch (driveMode) {
  9932  003758  EF5D  F01C         	goto	l9114
  9933  00375C                     l9078:
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;main.c: 288:             if (distFront > (30)) {
  9937  00375C  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9938  00375E  E109               	bnz	u10150
  9939  003760  0E1F               	movlw	31
  9940  003762  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  9941  003764  A0D8               	btfss	status,0,c
  9942  003766  EFB7  F01B         	goto	u10151
  9943  00376A  EFB9  F01B         	goto	u10150
  9944  00376E                     u10151:
  9945  00376E  EFBB  F01B         	goto	l9082
  9946  003772                     u10150:
  9947  003772                     
  9948                           ; BSR set to: 0
  9949                           ;main.c: 289:                 driveMode = Straight;
  9950  003772  0E00               	movlw	0
  9951  003774  6FFC               	movwf	_driveMode& (0+255),b
  9952  003776                     l9082:
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;main.c: 291:             if (setSpeed > (70)) {
  9956  003776  BFEE               	btfsc	(_setSpeed+1)& (0+255),7,b
  9957  003778  EFC7  F01B         	goto	u10161
  9958  00377C  51EE               	movf	(_setSpeed+1)& (0+255),w,b
  9959  00377E  E109               	bnz	u10160
  9960  003780  0E47               	movlw	71
  9961  003782  5DED               	subwf	_setSpeed& (0+255),w,b
  9962  003784  A0D8               	btfss	status,0,c
  9963  003786  EFC7  F01B         	goto	u10161
  9964  00378A  EFC9  F01B         	goto	u10160
  9965  00378E                     u10161:
  9966  00378E  EFE4  F01B         	goto	l9092
  9967  003792                     u10160:
  9968  003792                     
  9969                           ; BSR set to: 0
  9970                           ;main.c: 292:                     speed = setSpeed;
  9971  003792  C0ED  F087         	movff	_setSpeed,calcSpeed@speed
  9972  003796  C0EE  F088         	movff	_setSpeed+1,calcSpeed@speed+1
  9973  00379A                     
  9974                           ; BSR set to: 0
  9975                           ;main.c: 293:                 if (distFront < (15)) {
  9976  00379A  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9977  00379C  E107               	bnz	u10171
  9978  00379E  0E0F               	movlw	15
  9979  0037A0  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  9980  0037A2  B0D8               	btfsc	status,0,c
  9981  0037A4  EFD6  F01B         	goto	u10171
  9982  0037A8  EFD8  F01B         	goto	u10170
  9983  0037AC                     u10171:
  9984  0037AC  EFDE  F01B         	goto	l9090
  9985  0037B0                     u10170:
  9986  0037B0                     
  9987                           ; BSR set to: 0
  9988                           ;main.c: 294:                     speed -= 4;
  9989  0037B0  0EFC               	movlw	252
  9990  0037B2  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9991  0037B4  0EFF               	movlw	255
  9992  0037B6  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9993                           
  9994                           ;main.c: 295:                 } else {
  9995  0037B8  EF82  F01C         	goto	l9116
  9996  0037BC                     l9090:
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;main.c: 296:                     speed -= 2;
 10000  0037BC  0EFE               	movlw	254
 10001  0037BE  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10002  0037C0  0EFF               	movlw	255
 10003  0037C2  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10004  0037C4  EF82  F01C         	goto	l9116
 10005  0037C8                     l9092:
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;main.c: 299:                 speed = (70);
 10009  0037C8  0E00               	movlw	0
 10010  0037CA  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10011  0037CC  0E46               	movlw	70
 10012  0037CE  6F87               	movwf	calcSpeed@speed& (0+255),b
 10013  0037D0  EF82  F01C         	goto	l9116
 10014  0037D4                     l9094:
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;main.c: 303:             if (distFront < (30)) {
 10018  0037D4  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10019  0037D6  E107               	bnz	u10181
 10020  0037D8  0E1E               	movlw	30
 10021  0037DA  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10022  0037DC  B0D8               	btfsc	status,0,c
 10023  0037DE  EFF3  F01B         	goto	u10181
 10024  0037E2  EFF5  F01B         	goto	u10180
 10025  0037E6                     u10181:
 10026  0037E6  EFF7  F01B         	goto	l9098
 10027  0037EA                     u10180:
 10028  0037EA                     
 10029                           ; BSR set to: 0
 10030                           ;main.c: 304:                 driveMode = Brake;
 10031  0037EA  0E01               	movlw	1
 10032  0037EC  6FFC               	movwf	_driveMode& (0+255),b
 10033  0037EE                     l9098:
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;main.c: 307:             if (distFront >= (175)) {
 10037  0037EE  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10038  0037F0  E109               	bnz	u10190
 10039  0037F2  0EAF               	movlw	175
 10040  0037F4  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10041  0037F6  A0D8               	btfss	status,0,c
 10042  0037F8  EF00  F01C         	goto	u10191
 10043  0037FC  EF02  F01C         	goto	u10190
 10044  003800                     u10191:
 10045  003800  EF4B  F01C         	goto	l9102
 10046  003804                     u10190:
 10047  003804                     
 10048                           ; BSR set to: 0
 10049                           ;main.c: 308:                 speed = (int16_t) ((0.4) * (distFront - (175)) + (275));
 10050  003804  0E00               	movlw	0
 10051  003806  6F71               	movwf	___fladd@a& (0+255),b
 10052  003808  0E80               	movlw	128
 10053  00380A  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10054  00380C  0E89               	movlw	137
 10055  00380E  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10056  003810  0E43               	movlw	67
 10057  003812  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10058  003814  0ECD               	movlw	205
 10059  003816  6E2E               	movwf	___flmul@a^0,c
 10060  003818  0ECC               	movlw	204
 10061  00381A  6E2F               	movwf	(___flmul@a+1)^0,c
 10062  00381C  0ECC               	movlw	204
 10063  00381E  6E30               	movwf	(___flmul@a+2)^0,c
 10064  003820  0E3E               	movlw	62
 10065  003822  6E31               	movwf	(___flmul@a+3)^0,c
 10066  003824  0E51               	movlw	81
 10067  003826  6F83               	movwf	??_calcSpeed& (0+255),b
 10068  003828  0EFF               	movlw	255
 10069  00382A  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 10070  00382C  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 10071  003830  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 10072  003834  5183               	movf	??_calcSpeed& (0+255),w,b
 10073  003836  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10074  003838  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10075  00383A  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10076  00383C  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10077  003840  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10078  003844  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10079  003846  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10080  003848  0E00               	movlw	0
 10081  00384A  ECA7  F01D         	call	___xxtofl
 10082  00384E  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10083  003852  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10084  003856  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10085  00385A  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10086  00385E  ECB1  F013         	call	___flmul	;wreg free
 10087  003862  C02A  F06D         	movff	?___flmul,___fladd@b
 10088  003866  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10089  00386A  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10090  00386E  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10091  003872  EC50  F011         	call	___fladd	;wreg free
 10092  003876  C06D  F079         	movff	?___fladd,___fltol@f1
 10093  00387A  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10094  00387E  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10095  003882  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10096  003886  EC21  F023         	call	___fltol	;wreg free
 10097  00388A  C079  F087         	movff	?___fltol,calcSpeed@speed
 10098  00388E  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10099                           
 10100                           ;main.c: 309:             } else {
 10101  003892  EF82  F01C         	goto	l9116
 10102  003896                     l9102:
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;main.c: 310:                 speed = (275);
 10106  003896  0E01               	movlw	1
 10107  003898  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10108  00389A  0E13               	movlw	19
 10109  00389C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10110  00389E  EF82  F01C         	goto	l9116
 10111  0038A2                     l9104:
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;main.c: 315:             speed = (-125);
 10115  0038A2  0EFF               	movlw	255
 10116  0038A4  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10117  0038A6  0E83               	movlw	131
 10118  0038A8  6F87               	movwf	calcSpeed@speed& (0+255),b
 10119                           
 10120                           ;main.c: 316:             break;
 10121  0038AA  EF82  F01C         	goto	l9116
 10122  0038AE                     l9108:
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;main.c: 321:             speed = (200);
 10126  0038AE  0E00               	movlw	0
 10127  0038B0  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10128  0038B2  0EC8               	movlw	200
 10129  0038B4  6F87               	movwf	calcSpeed@speed& (0+255),b
 10130                           
 10131                           ;main.c: 322:             break;
 10132  0038B6  EF82  F01C         	goto	l9116
 10133  0038BA                     l9114:
 10134                           
 10135                           ; BSR set to: 0
 10136  0038BA  51FC               	movf	_driveMode& (0+255),w,b
 10137  0038BC  6F83               	movwf	??_calcSpeed& (0+255),b
 10138  0038BE  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10139                           
 10140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10141                           ; Switch size 1, requested type "simple"
 10142                           ; Number of cases is 1, Range of values is 0 to 0
 10143                           ; switch strategies available:
 10144                           ; Name         Instructions Cycles
 10145                           ; simple_byte            4     3 (average)
 10146                           ;	Chosen strategy is simple_byte
 10147  0038C0  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10148  0038C2  0A00               	xorlw	0	; case 0
 10149  0038C4  B4D8               	btfsc	status,2,c
 10150  0038C6  EF67  F01C         	goto	l9380
 10151  0038CA  EF82  F01C         	goto	l9116
 10152  0038CE                     l9380:
 10153                           
 10154                           ; BSR set to: 0
 10155                           ; Switch size 1, requested type "simple"
 10156                           ; Number of cases is 6, Range of values is 0 to 5
 10157                           ; switch strategies available:
 10158                           ; Name         Instructions Cycles
 10159                           ; simple_byte           19    10 (average)
 10160                           ;	Chosen strategy is simple_byte
 10161  0038CE  5183               	movf	??_calcSpeed& (0+255),w,b
 10162  0038D0  0A00               	xorlw	0	; case 0
 10163  0038D2  B4D8               	btfsc	status,2,c
 10164  0038D4  EFEA  F01B         	goto	l9094
 10165  0038D8  0A01               	xorlw	1	; case 1
 10166  0038DA  B4D8               	btfsc	status,2,c
 10167  0038DC  EFAE  F01B         	goto	l9078
 10168  0038E0  0A03               	xorlw	3	; case 2
 10169  0038E2  B4D8               	btfsc	status,2,c
 10170  0038E4  EF51  F01C         	goto	l9104
 10171  0038E8  0A01               	xorlw	1	; case 3
 10172  0038EA  B4D8               	btfsc	status,2,c
 10173  0038EC  EF51  F01C         	goto	l9104
 10174  0038F0  0A07               	xorlw	7	; case 4
 10175  0038F2  B4D8               	btfsc	status,2,c
 10176  0038F4  EF57  F01C         	goto	l9108
 10177  0038F8  0A01               	xorlw	1	; case 5
 10178  0038FA  B4D8               	btfsc	status,2,c
 10179  0038FC  EF57  F01C         	goto	l9108
 10180  003900  EF82  F01C         	goto	l9116
 10181  003904                     l9116:
 10182                           
 10183                           ;main.c: 328:     if (speed > (400)) {
 10184  003904  0100               	movlb	0	; () banked
 10185  003906  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10186  003908  EF8F  F01C         	goto	u10201
 10187  00390C  0E91               	movlw	145
 10188  00390E  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10189  003910  0E01               	movlw	1
 10190  003912  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10191  003914  A0D8               	btfss	status,0,c
 10192  003916  EF8F  F01C         	goto	u10201
 10193  00391A  EF91  F01C         	goto	u10200
 10194  00391E                     u10201:
 10195  00391E  EF95  F01C         	goto	l9120
 10196  003922                     u10200:
 10197  003922                     
 10198                           ; BSR set to: 0
 10199                           ;main.c: 329:         speed = (400);
 10200  003922  0E01               	movlw	1
 10201  003924  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10202  003926  0E90               	movlw	144
 10203  003928  6F87               	movwf	calcSpeed@speed& (0+255),b
 10204  00392A                     l9120:
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;main.c: 331:     if (speed < (-250)) {
 10208  00392A  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10209  00392C  EFA1  F01C         	goto	u10211
 10210  003930  0E06               	movlw	6
 10211  003932  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10212  003934  0EFF               	movlw	255
 10213  003936  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10214  003938  B0D8               	btfsc	status,0,c
 10215  00393A  EFA1  F01C         	goto	u10211
 10216  00393E  EFA3  F01C         	goto	u10210
 10217  003942                     u10211:
 10218  003942  EFA7  F01C         	goto	l9124
 10219  003946                     u10210:
 10220  003946                     
 10221                           ; BSR set to: 0
 10222                           ;main.c: 332:         speed = (-250);
 10223  003946  0EFF               	movlw	255
 10224  003948  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10225  00394A  0E06               	movlw	6
 10226  00394C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10227  00394E                     l9124:
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;main.c: 334:     setSpeed = speed;
 10231  00394E  C087  F0ED         	movff	calcSpeed@speed,_setSpeed
 10232  003952  C088  F0EE         	movff	calcSpeed@speed+1,_setSpeed+1
 10233  003956                     
 10234                           ; BSR set to: 0
 10235  003956  0012               	return		;funcret
 10236  003958                     __end_of_calcSpeed:
 10237                           	callstack 0
 10238                           
 10239 ;; *************** function ___fladd *****************
 10240 ;; Defined at:
 10241 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;  b               4   13[BANK0 ] void 
 10244 ;;  a               4   17[BANK0 ] void 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  grs             1   24[BANK0 ] unsigned char 
 10247 ;;  bexp            1   23[BANK0 ] unsigned char 
 10248 ;;  aexp            1   22[BANK0 ] unsigned char 
 10249 ;;  signs           1   21[BANK0 ] unsigned char 
 10250 ;; Return value:  Size  Location     Type
 10251 ;;                  4   13[BANK0 ] unsigned char 
 10252 ;; Registers used:
 10253 ;;		wreg, status,2, status,0
 10254 ;; Tracked objects:
 10255 ;;		On entry : 0/0
 10256 ;;		On exit  : 0/0
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10259 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;Total ram usage:       16 bytes
 10264 ;; Hardware stack levels used: 1
 10265 ;; Hardware stack levels required when called: 8
 10266 ;; This function calls:
 10267 ;;		Nothing
 10268 ;; This function is called by:
 10269 ;;		_calcSpeed
 10270 ;;		___flsub
 10271 ;;		_efgtoa
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text38
 10276  0022A0                     __ptext38:
 10277                           	callstack 0
 10278  0022A0                     ___fladd:
 10279                           	callstack 15
 10280  0022A0  0100               	movlb	0	; () banked
 10281  0022A2  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10282  0022A4  0B80               	andlw	128
 10283  0022A6  6F75               	movwf	___fladd@signs& (0+255),b
 10284  0022A8  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10285  0022AA  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10286  0022AC  6F77               	movwf	___fladd@bexp& (0+255),b
 10287  0022AE                     
 10288                           ; BSR set to: 0
 10289  0022AE  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10290  0022B0  EF5C  F011         	goto	u7301
 10291  0022B4  EF5E  F011         	goto	u7300
 10292  0022B8                     u7301:
 10293  0022B8  EF5F  F011         	goto	l7458
 10294  0022BC                     u7300:
 10295  0022BC                     
 10296                           ; BSR set to: 0
 10297  0022BC  8177               	bsf	___fladd@bexp& (0+255),0,b
 10298  0022BE                     l7458:
 10299                           
 10300                           ; BSR set to: 0
 10301  0022BE  5177               	movf	___fladd@bexp& (0+255),w,b
 10302  0022C0  B4D8               	btfsc	status,2,c
 10303  0022C2  EF65  F011         	goto	u7311
 10304  0022C6  EF67  F011         	goto	u7310
 10305  0022CA                     u7311:
 10306  0022CA  EF7C  F011         	goto	l7468
 10307  0022CE                     u7310:
 10308  0022CE                     
 10309                           ; BSR set to: 0
 10310  0022CE  2977               	incf	___fladd@bexp& (0+255),w,b
 10311  0022D0  A4D8               	btfss	status,2,c
 10312  0022D2  EF6D  F011         	goto	u7321
 10313  0022D6  EF6F  F011         	goto	u7320
 10314  0022DA                     u7321:
 10315  0022DA  EF77  F011         	goto	l7464
 10316  0022DE                     u7320:
 10317  0022DE                     
 10318                           ; BSR set to: 0
 10319  0022DE  0E00               	movlw	0
 10320  0022E0  6F6D               	movwf	___fladd@b& (0+255),b
 10321  0022E2  0E00               	movlw	0
 10322  0022E4  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10323  0022E6  0E00               	movlw	0
 10324  0022E8  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10325  0022EA  0E00               	movlw	0
 10326  0022EC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10327  0022EE                     l7464:
 10328                           
 10329                           ; BSR set to: 0
 10330  0022EE  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10331  0022F0                     
 10332                           ; BSR set to: 0
 10333  0022F0  0E00               	movlw	0
 10334  0022F2  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10335  0022F4  EF84  F011         	goto	l7470
 10336  0022F8                     l7468:
 10337                           
 10338                           ; BSR set to: 0
 10339  0022F8  0E00               	movlw	0
 10340  0022FA  6F6D               	movwf	___fladd@b& (0+255),b
 10341  0022FC  0E00               	movlw	0
 10342  0022FE  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10343  002300  0E00               	movlw	0
 10344  002302  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10345  002304  0E00               	movlw	0
 10346  002306  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10347  002308                     l7470:
 10348                           
 10349                           ; BSR set to: 0
 10350  002308  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10351  00230A  0B80               	andlw	128
 10352  00230C  6F76               	movwf	___fladd@aexp& (0+255),b
 10353  00230E                     
 10354                           ; BSR set to: 0
 10355  00230E  5175               	movf	___fladd@signs& (0+255),w,b
 10356  002310  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10357  002312  B4D8               	btfsc	status,2,c
 10358  002314  EF8E  F011         	goto	u7331
 10359  002318  EF90  F011         	goto	u7330
 10360  00231C                     u7331:
 10361  00231C  EF91  F011         	goto	l7476
 10362  002320                     u7330:
 10363  002320                     
 10364                           ; BSR set to: 0
 10365  002320  8D75               	bsf	___fladd@signs& (0+255),6,b
 10366  002322                     l7476:
 10367                           
 10368                           ; BSR set to: 0
 10369  002322  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10370  002324  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10371  002326  6F76               	movwf	___fladd@aexp& (0+255),b
 10372  002328                     
 10373                           ; BSR set to: 0
 10374  002328  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10375  00232A  EF99  F011         	goto	u7341
 10376  00232E  EF9B  F011         	goto	u7340
 10377  002332                     u7341:
 10378  002332  EF9C  F011         	goto	l7482
 10379  002336                     u7340:
 10380  002336                     
 10381                           ; BSR set to: 0
 10382  002336  8176               	bsf	___fladd@aexp& (0+255),0,b
 10383  002338                     l7482:
 10384                           
 10385                           ; BSR set to: 0
 10386  002338  5176               	movf	___fladd@aexp& (0+255),w,b
 10387  00233A  B4D8               	btfsc	status,2,c
 10388  00233C  EFA2  F011         	goto	u7351
 10389  002340  EFA4  F011         	goto	u7350
 10390  002344                     u7351:
 10391  002344  EFB9  F011         	goto	l7492
 10392  002348                     u7350:
 10393  002348                     
 10394                           ; BSR set to: 0
 10395  002348  2976               	incf	___fladd@aexp& (0+255),w,b
 10396  00234A  A4D8               	btfss	status,2,c
 10397  00234C  EFAA  F011         	goto	u7361
 10398  002350  EFAC  F011         	goto	u7360
 10399  002354                     u7361:
 10400  002354  EFB4  F011         	goto	l7488
 10401  002358                     u7360:
 10402  002358                     
 10403                           ; BSR set to: 0
 10404  002358  0E00               	movlw	0
 10405  00235A  6F71               	movwf	___fladd@a& (0+255),b
 10406  00235C  0E00               	movlw	0
 10407  00235E  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10408  002360  0E00               	movlw	0
 10409  002362  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10410  002364  0E00               	movlw	0
 10411  002366  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10412  002368                     l7488:
 10413                           
 10414                           ; BSR set to: 0
 10415  002368  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10416  00236A                     
 10417                           ; BSR set to: 0
 10418  00236A  0E00               	movlw	0
 10419  00236C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10420  00236E  EFC1  F011         	goto	l7494
 10421  002372                     l7492:
 10422                           
 10423                           ; BSR set to: 0
 10424  002372  0E00               	movlw	0
 10425  002374  6F71               	movwf	___fladd@a& (0+255),b
 10426  002376  0E00               	movlw	0
 10427  002378  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10428  00237A  0E00               	movlw	0
 10429  00237C  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10430  00237E  0E00               	movlw	0
 10431  002380  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10432  002382                     l7494:
 10433                           
 10434                           ; BSR set to: 0
 10435  002382  5177               	movf	___fladd@bexp& (0+255),w,b
 10436  002384  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10437  002386  B0D8               	btfsc	status,0,c
 10438  002388  EFC8  F011         	goto	u7371
 10439  00238C  EFCA  F011         	goto	u7370
 10440  002390                     u7371:
 10441  002390  EFF1  F011         	goto	l7530
 10442  002394                     u7370:
 10443  002394                     
 10444                           ; BSR set to: 0
 10445  002394  AD75               	btfss	___fladd@signs& (0+255),6,b
 10446  002396  EFCF  F011         	goto	u7381
 10447  00239A  EFD1  F011         	goto	u7380
 10448  00239E                     u7381:
 10449  00239E  EFD3  F011         	goto	l7500
 10450  0023A2                     u7380:
 10451  0023A2                     
 10452                           ; BSR set to: 0
 10453  0023A2  0E80               	movlw	128
 10454  0023A4  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10455  0023A6                     l7500:
 10456                           
 10457                           ; BSR set to: 0
 10458  0023A6  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10459  0023AA                     
 10460                           ; BSR set to: 0
 10461  0023AA  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10462  0023AE                     
 10463                           ; BSR set to: 0
 10464  0023AE  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10465  0023B2                     
 10466                           ; BSR set to: 0
 10467  0023B2  C06D  F078         	movff	___fladd@b,___fladd@grs
 10468  0023B6                     
 10469                           ; BSR set to: 0
 10470  0023B6  C071  F06D         	movff	___fladd@a,___fladd@b
 10471  0023BA                     
 10472                           ; BSR set to: 0
 10473  0023BA  C078  F071         	movff	___fladd@grs,___fladd@a
 10474  0023BE                     
 10475                           ; BSR set to: 0
 10476  0023BE  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10477  0023C2                     
 10478                           ; BSR set to: 0
 10479  0023C2  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10480  0023C6                     
 10481                           ; BSR set to: 0
 10482  0023C6  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10483  0023CA                     
 10484                           ; BSR set to: 0
 10485  0023CA  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10486  0023CE                     
 10487                           ; BSR set to: 0
 10488  0023CE  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10489  0023D2                     
 10490                           ; BSR set to: 0
 10491  0023D2  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10492  0023D6                     
 10493                           ; BSR set to: 0
 10494  0023D6  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10495  0023DA                     
 10496                           ; BSR set to: 0
 10497  0023DA  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10498  0023DE                     
 10499                           ; BSR set to: 0
 10500  0023DE  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10501  0023E2                     l7530:
 10502                           
 10503                           ; BSR set to: 0
 10504  0023E2  0E00               	movlw	0
 10505  0023E4  6F78               	movwf	___fladd@grs& (0+255),b
 10506  0023E6                     
 10507                           ; BSR set to: 0
 10508  0023E6  5177               	movf	___fladd@bexp& (0+255),w,b
 10509  0023E8  C076  F036         	movff	___fladd@aexp,??___fladd
 10510  0023EC  6A37               	clrf	(??___fladd+1)^0,c
 10511  0023EE  5E36               	subwf	??___fladd^0,f,c
 10512  0023F0  0E00               	movlw	0
 10513  0023F2  5A37               	subwfb	(??___fladd+1)^0,f,c
 10514  0023F4  BE37               	btfsc	(??___fladd+1)^0,7,c
 10515  0023F6  EF06  F012         	goto	u7391
 10516  0023FA  5037               	movf	(??___fladd+1)^0,w,c
 10517  0023FC  E109               	bnz	u7390
 10518  0023FE  0E1A               	movlw	26
 10519  002400  5C36               	subwf	??___fladd^0,w,c
 10520  002402  A0D8               	btfss	status,0,c
 10521  002404  EF06  F012         	goto	u7391
 10522  002408  EF08  F012         	goto	u7390
 10523  00240C                     u7391:
 10524  00240C  EF3F  F012         	goto	l1933
 10525  002410                     u7390:
 10526  002410                     
 10527                           ; BSR set to: 0
 10528  002410  516D               	movf	___fladd@b& (0+255),w,b
 10529  002412  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10530  002414  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10531  002416  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10532  002418  A4D8               	btfss	status,2,c
 10533  00241A  EF11  F012         	goto	u7401
 10534  00241E  EF14  F012         	goto	u7400
 10535  002422                     u7401:
 10536  002422  0E01               	movlw	1
 10537  002424  EF15  F012         	goto	u7410
 10538  002428                     u7400:
 10539  002428  0E00               	movlw	0
 10540  00242A                     u7410:
 10541  00242A  6F78               	movwf	___fladd@grs& (0+255),b
 10542  00242C                     
 10543                           ; BSR set to: 0
 10544  00242C  0E00               	movlw	0
 10545  00242E  6F6D               	movwf	___fladd@b& (0+255),b
 10546  002430  0E00               	movlw	0
 10547  002432  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10548  002434  0E00               	movlw	0
 10549  002436  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10550  002438  0E00               	movlw	0
 10551  00243A  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10552  00243C                     
 10553                           ; BSR set to: 0
 10554  00243C  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10555  002440  EF48  F012         	goto	l1932
 10556  002444                     l1934:
 10557                           
 10558                           ; BSR set to: 0
 10559  002444  A178               	btfss	___fladd@grs& (0+255),0,b
 10560  002446  EF27  F012         	goto	u7421
 10561  00244A  EF29  F012         	goto	u7420
 10562  00244E                     u7421:
 10563  00244E  EF2F  F012         	goto	l7542
 10564  002452                     u7420:
 10565  002452                     
 10566                           ; BSR set to: 0
 10567  002452  90D8               	bcf	status,0,c
 10568  002454  3178               	rrcf	___fladd@grs& (0+255),w,b
 10569  002456  0901               	iorlw	1
 10570  002458  6F78               	movwf	___fladd@grs& (0+255),b
 10571  00245A  EF31  F012         	goto	l7544
 10572  00245E                     l7542:
 10573                           
 10574                           ; BSR set to: 0
 10575  00245E  90D8               	bcf	status,0,c
 10576  002460  3378               	rrcf	___fladd@grs& (0+255),f,b
 10577  002462                     l7544:
 10578                           
 10579                           ; BSR set to: 0
 10580  002462  A16D               	btfss	___fladd@b& (0+255),0,b
 10581  002464  EF36  F012         	goto	u7431
 10582  002468  EF38  F012         	goto	u7430
 10583  00246C                     u7431:
 10584  00246C  EF39  F012         	goto	l7548
 10585  002470                     u7430:
 10586  002470                     
 10587                           ; BSR set to: 0
 10588  002470  8F78               	bsf	___fladd@grs& (0+255),7,b
 10589  002472                     l7548:
 10590                           
 10591                           ; BSR set to: 0
 10592  002472  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10593  002474  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10594  002476  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10595  002478  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10596  00247A  336D               	rrcf	___fladd@b& (0+255),f,b
 10597  00247C                     
 10598                           ; BSR set to: 0
 10599  00247C  2B77               	incf	___fladd@bexp& (0+255),f,b
 10600  00247E                     l1933:
 10601                           
 10602                           ; BSR set to: 0
 10603  00247E  5176               	movf	___fladd@aexp& (0+255),w,b
 10604  002480  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10605  002482  A0D8               	btfss	status,0,c
 10606  002484  EF46  F012         	goto	u7441
 10607  002488  EF48  F012         	goto	u7440
 10608  00248C                     u7441:
 10609  00248C  EF22  F012         	goto	l1934
 10610  002490                     u7440:
 10611  002490                     l1932:
 10612                           
 10613                           ; BSR set to: 0
 10614  002490  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10615  002492  EF4D  F012         	goto	u7451
 10616  002496  EF4F  F012         	goto	u7450
 10617  00249A                     u7451:
 10618  00249A  EF8F  F012         	goto	l7576
 10619  00249E                     u7450:
 10620  00249E                     
 10621                           ; BSR set to: 0
 10622  00249E  5177               	movf	___fladd@bexp& (0+255),w,b
 10623  0024A0  A4D8               	btfss	status,2,c
 10624  0024A2  EF55  F012         	goto	u7461
 10625  0024A6  EF57  F012         	goto	u7460
 10626  0024AA                     u7461:
 10627  0024AA  EF61  F012         	goto	l7558
 10628  0024AE                     u7460:
 10629  0024AE                     
 10630                           ; BSR set to: 0
 10631  0024AE  0E00               	movlw	0
 10632  0024B0  6F6D               	movwf	?___fladd& (0+255),b
 10633  0024B2  0E00               	movlw	0
 10634  0024B4  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10635  0024B6  0E00               	movlw	0
 10636  0024B8  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10637  0024BA  0E00               	movlw	0
 10638  0024BC  6F70               	movwf	(?___fladd+3)& (0+255),b
 10639  0024BE  EFB0  F013         	goto	l1941
 10640  0024C2                     l7558:
 10641                           
 10642                           ; BSR set to: 0
 10643  0024C2  5171               	movf	___fladd@a& (0+255),w,b
 10644  0024C4  276D               	addwf	___fladd@b& (0+255),f,b
 10645  0024C6  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10646  0024C8  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10647  0024CA  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10648  0024CC  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10649  0024CE  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10650  0024D0  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10651  0024D2                     
 10652                           ; BSR set to: 0
 10653  0024D2  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10654  0024D4  EF6E  F012         	goto	u7471
 10655  0024D8  EF70  F012         	goto	u7470
 10656  0024DC                     u7471:
 10657  0024DC  EF1C  F013         	goto	l7612
 10658  0024E0                     u7470:
 10659  0024E0                     
 10660                           ; BSR set to: 0
 10661  0024E0  A178               	btfss	___fladd@grs& (0+255),0,b
 10662  0024E2  EF75  F012         	goto	u7481
 10663  0024E6  EF77  F012         	goto	u7480
 10664  0024EA                     u7481:
 10665  0024EA  EF7D  F012         	goto	l7566
 10666  0024EE                     u7480:
 10667  0024EE                     
 10668                           ; BSR set to: 0
 10669  0024EE  90D8               	bcf	status,0,c
 10670  0024F0  3178               	rrcf	___fladd@grs& (0+255),w,b
 10671  0024F2  0901               	iorlw	1
 10672  0024F4  6F78               	movwf	___fladd@grs& (0+255),b
 10673  0024F6  EF7F  F012         	goto	l7568
 10674  0024FA                     l7566:
 10675                           
 10676                           ; BSR set to: 0
 10677  0024FA  90D8               	bcf	status,0,c
 10678  0024FC  3378               	rrcf	___fladd@grs& (0+255),f,b
 10679  0024FE                     l7568:
 10680                           
 10681                           ; BSR set to: 0
 10682  0024FE  A16D               	btfss	___fladd@b& (0+255),0,b
 10683  002500  EF84  F012         	goto	u7491
 10684  002504  EF86  F012         	goto	u7490
 10685  002508                     u7491:
 10686  002508  EF87  F012         	goto	l7572
 10687  00250C                     u7490:
 10688  00250C                     
 10689                           ; BSR set to: 0
 10690  00250C  8F78               	bsf	___fladd@grs& (0+255),7,b
 10691  00250E                     l7572:
 10692                           
 10693                           ; BSR set to: 0
 10694  00250E  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10695  002510  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10696  002512  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10697  002514  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10698  002516  336D               	rrcf	___fladd@b& (0+255),f,b
 10699  002518                     
 10700                           ; BSR set to: 0
 10701  002518  2B77               	incf	___fladd@bexp& (0+255),f,b
 10702  00251A  EF1C  F013         	goto	l7612
 10703  00251E                     l7576:
 10704                           
 10705                           ; BSR set to: 0
 10706  00251E  5171               	movf	___fladd@a& (0+255),w,b
 10707  002520  5D6D               	subwf	___fladd@b& (0+255),w,b
 10708  002522  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10709  002524  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10710  002526  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10711  002528  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10712  00252A  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10713  00252C  0A80               	xorlw	128
 10714  00252E  6E36               	movwf	??___fladd^0,c
 10715  002530  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10716  002532  0A80               	xorlw	128
 10717  002534  5836               	subwfb	??___fladd^0,w,c
 10718  002536  B0D8               	btfsc	status,0,c
 10719  002538  EFA0  F012         	goto	u7501
 10720  00253C  EFA2  F012         	goto	u7500
 10721  002540                     u7501:
 10722  002540  EFCD  F012         	goto	l7586
 10723  002544                     u7500:
 10724  002544                     
 10725                           ; BSR set to: 0
 10726  002544  516D               	movf	___fladd@b& (0+255),w,b
 10727  002546  5D71               	subwf	___fladd@a& (0+255),w,b
 10728  002548  6E36               	movwf	??___fladd^0,c
 10729  00254A  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10730  00254C  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10731  00254E  6E37               	movwf	(??___fladd+1)^0,c
 10732  002550  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10733  002552  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10734  002554  6E38               	movwf	(??___fladd+2)^0,c
 10735  002556  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10736  002558  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10737  00255A  6E39               	movwf	(??___fladd+3)^0,c
 10738  00255C  0EFF               	movlw	255
 10739  00255E  2436               	addwf	??___fladd^0,w,c
 10740  002560  6F6D               	movwf	___fladd@b& (0+255),b
 10741  002562  0EFF               	movlw	255
 10742  002564  2037               	addwfc	(??___fladd+1)^0,w,c
 10743  002566  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10744  002568  0EFF               	movlw	255
 10745  00256A  2038               	addwfc	(??___fladd+2)^0,w,c
 10746  00256C  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10747  00256E  0EFF               	movlw	255
 10748  002570  2039               	addwfc	(??___fladd+3)^0,w,c
 10749  002572  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10750  002574  0E80               	movlw	128
 10751  002576  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10752  002578                     
 10753                           ; BSR set to: 0
 10754  002578  6D78               	negf	___fladd@grs& (0+255),b
 10755  00257A                     
 10756                           ; BSR set to: 0
 10757  00257A  5178               	movf	___fladd@grs& (0+255),w,b
 10758  00257C  A4D8               	btfss	status,2,c
 10759  00257E  EFC3  F012         	goto	u7511
 10760  002582  EFC5  F012         	goto	u7510
 10761  002586                     u7511:
 10762  002586  EFD5  F012         	goto	l1949
 10763  00258A                     u7510:
 10764  00258A                     
 10765                           ; BSR set to: 0
 10766  00258A  0E01               	movlw	1
 10767  00258C  276D               	addwf	___fladd@b& (0+255),f,b
 10768  00258E  0E00               	movlw	0
 10769  002590  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10770  002592  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10771  002594  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10772  002596  EFD5  F012         	goto	l1949
 10773  00259A                     l7586:
 10774                           
 10775                           ; BSR set to: 0
 10776  00259A  5171               	movf	___fladd@a& (0+255),w,b
 10777  00259C  5F6D               	subwf	___fladd@b& (0+255),f,b
 10778  00259E  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10779  0025A0  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10780  0025A2  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10781  0025A4  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10782  0025A6  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10783  0025A8  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10784  0025AA                     l1949:
 10785                           
 10786                           ; BSR set to: 0
 10787  0025AA  516D               	movf	___fladd@b& (0+255),w,b
 10788  0025AC  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10789  0025AE  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10790  0025B0  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10791  0025B2  A4D8               	btfss	status,2,c
 10792  0025B4  EFDE  F012         	goto	u7521
 10793  0025B8  EFE0  F012         	goto	u7520
 10794  0025BC                     u7521:
 10795  0025BC  EF15  F013         	goto	l7610
 10796  0025C0                     u7520:
 10797  0025C0                     
 10798                           ; BSR set to: 0
 10799  0025C0  5178               	movf	___fladd@grs& (0+255),w,b
 10800  0025C2  A4D8               	btfss	status,2,c
 10801  0025C4  EFE6  F012         	goto	u7531
 10802  0025C8  EFE8  F012         	goto	u7530
 10803  0025CC                     u7531:
 10804  0025CC  EF15  F013         	goto	l7610
 10805  0025D0                     u7530:
 10806  0025D0                     
 10807                           ; BSR set to: 0
 10808  0025D0  0E00               	movlw	0
 10809  0025D2  6F6D               	movwf	?___fladd& (0+255),b
 10810  0025D4  0E00               	movlw	0
 10811  0025D6  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10812  0025D8  0E00               	movlw	0
 10813  0025DA  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10814  0025DC  0E00               	movlw	0
 10815  0025DE  6F70               	movwf	(?___fladd+3)& (0+255),b
 10816  0025E0  EFB0  F013         	goto	l1941
 10817  0025E4                     l7594:
 10818                           
 10819                           ; BSR set to: 0
 10820  0025E4  90D8               	bcf	status,0,c
 10821  0025E6  376D               	rlcf	___fladd@b& (0+255),f,b
 10822  0025E8  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10823  0025EA  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10824  0025EC  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10825  0025EE                     
 10826                           ; BSR set to: 0
 10827  0025EE  AF78               	btfss	___fladd@grs& (0+255),7,b
 10828  0025F0  EFFC  F012         	goto	u7541
 10829  0025F4  EFFE  F012         	goto	u7540
 10830  0025F8                     u7541:
 10831  0025F8  EFFF  F012         	goto	l7600
 10832  0025FC                     u7540:
 10833  0025FC                     
 10834                           ; BSR set to: 0
 10835  0025FC  816D               	bsf	___fladd@b& (0+255),0,b
 10836  0025FE                     l7600:
 10837                           
 10838                           ; BSR set to: 0
 10839  0025FE  A178               	btfss	___fladd@grs& (0+255),0,b
 10840  002600  EF04  F013         	goto	u7551
 10841  002604  EF06  F013         	goto	u7550
 10842  002608                     u7551:
 10843  002608  EF0A  F013         	goto	l7604
 10844  00260C                     u7550:
 10845  00260C                     
 10846                           ; BSR set to: 0
 10847  00260C  80D8               	bsf	status,0,c
 10848  00260E  3778               	rlcf	___fladd@grs& (0+255),f,b
 10849  002610  EF0C  F013         	goto	l7606
 10850  002614                     l7604:
 10851                           
 10852                           ; BSR set to: 0
 10853  002614  90D8               	bcf	status,0,c
 10854  002616  3778               	rlcf	___fladd@grs& (0+255),f,b
 10855  002618                     l7606:
 10856                           
 10857                           ; BSR set to: 0
 10858  002618  5177               	movf	___fladd@bexp& (0+255),w,b
 10859  00261A  B4D8               	btfsc	status,2,c
 10860  00261C  EF12  F013         	goto	u7561
 10861  002620  EF14  F013         	goto	u7560
 10862  002624                     u7561:
 10863  002624  EF15  F013         	goto	l7610
 10864  002628                     u7560:
 10865  002628                     
 10866                           ; BSR set to: 0
 10867  002628  0777               	decf	___fladd@bexp& (0+255),f,b
 10868  00262A                     l7610:
 10869                           
 10870                           ; BSR set to: 0
 10871  00262A  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10872  00262C  EF1A  F013         	goto	u7571
 10873  002630  EF1C  F013         	goto	u7570
 10874  002634                     u7571:
 10875  002634  EFF2  F012         	goto	l7594
 10876  002638                     u7570:
 10877  002638                     l7612:
 10878                           
 10879                           ; BSR set to: 0
 10880  002638  0E00               	movlw	0
 10881  00263A  6F76               	movwf	___fladd@aexp& (0+255),b
 10882  00263C                     
 10883                           ; BSR set to: 0
 10884  00263C  AF78               	btfss	___fladd@grs& (0+255),7,b
 10885  00263E  EF23  F013         	goto	u7581
 10886  002642  EF25  F013         	goto	u7580
 10887  002646                     u7581:
 10888  002646  EF3D  F013         	goto	l1958
 10889  00264A                     u7580:
 10890  00264A                     
 10891                           ; BSR set to: 0
 10892  00264A  C078  F036         	movff	___fladd@grs,??___fladd
 10893  00264E  0E7F               	movlw	127
 10894  002650  1636               	andwf	??___fladd^0,f,c
 10895  002652  B4D8               	btfsc	status,2,c
 10896  002654  EF2E  F013         	goto	u7591
 10897  002658  EF30  F013         	goto	u7590
 10898  00265C                     u7591:
 10899  00265C  EF34  F013         	goto	l1959
 10900  002660                     u7590:
 10901  002660                     l7618:
 10902                           
 10903                           ; BSR set to: 0
 10904  002660  0E01               	movlw	1
 10905  002662  6F76               	movwf	___fladd@aexp& (0+255),b
 10906  002664  EF3D  F013         	goto	l1958
 10907  002668                     l1959:
 10908                           
 10909                           ; BSR set to: 0
 10910  002668  A16D               	btfss	___fladd@b& (0+255),0,b
 10911  00266A  EF39  F013         	goto	u7601
 10912  00266E  EF3B  F013         	goto	u7600
 10913  002672                     u7601:
 10914  002672  EF3D  F013         	goto	l1958
 10915  002676                     u7600:
 10916  002676  EF30  F013         	goto	l7618
 10917  00267A                     l1958:
 10918                           
 10919                           ; BSR set to: 0
 10920  00267A  5176               	movf	___fladd@aexp& (0+255),w,b
 10921  00267C  B4D8               	btfsc	status,2,c
 10922  00267E  EF43  F013         	goto	u7611
 10923  002682  EF45  F013         	goto	u7610
 10924  002686                     u7611:
 10925  002686  EF70  F013         	goto	l7630
 10926  00268A                     u7610:
 10927  00268A                     
 10928                           ; BSR set to: 0
 10929  00268A  0E01               	movlw	1
 10930  00268C  276D               	addwf	___fladd@b& (0+255),f,b
 10931  00268E  0E00               	movlw	0
 10932  002690  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10933  002692  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10934  002694  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10935  002696                     
 10936                           ; BSR set to: 0
 10937  002696  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10938  002698  EF50  F013         	goto	u7621
 10939  00269C  EF52  F013         	goto	u7620
 10940  0026A0                     u7621:
 10941  0026A0  EF70  F013         	goto	l7630
 10942  0026A4                     u7620:
 10943  0026A4                     
 10944                           ; BSR set to: 0
 10945  0026A4  C06D  F036         	movff	___fladd@b,??___fladd
 10946  0026A8  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 10947  0026AC  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 10948  0026B0  C070  F039         	movff	___fladd@b+3,??___fladd+3
 10949  0026B4  3439               	rlcf	(??___fladd+3)^0,w,c
 10950  0026B6  3239               	rrcf	(??___fladd+3)^0,f,c
 10951  0026B8  3238               	rrcf	(??___fladd+2)^0,f,c
 10952  0026BA  3237               	rrcf	(??___fladd+1)^0,f,c
 10953  0026BC  3236               	rrcf	??___fladd^0,f,c
 10954  0026BE  C036  F06D         	movff	??___fladd,___fladd@b
 10955  0026C2  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 10956  0026C6  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 10957  0026CA  C039  F070         	movff	??___fladd+3,___fladd@b+3
 10958  0026CE  2977               	incf	___fladd@bexp& (0+255),w,b
 10959  0026D0  B4D8               	btfsc	status,2,c
 10960  0026D2  EF6D  F013         	goto	u7631
 10961  0026D6  EF6F  F013         	goto	u7630
 10962  0026DA                     u7631:
 10963  0026DA  EF70  F013         	goto	l7630
 10964  0026DE                     u7630:
 10965  0026DE                     
 10966                           ; BSR set to: 0
 10967  0026DE  2B77               	incf	___fladd@bexp& (0+255),f,b
 10968  0026E0                     l7630:
 10969                           
 10970                           ; BSR set to: 0
 10971  0026E0  2977               	incf	___fladd@bexp& (0+255),w,b
 10972  0026E2  B4D8               	btfsc	status,2,c
 10973  0026E4  EF76  F013         	goto	u7641
 10974  0026E8  EF78  F013         	goto	u7640
 10975  0026EC                     u7641:
 10976  0026EC  EF80  F013         	goto	l7634
 10977  0026F0                     u7640:
 10978  0026F0                     
 10979                           ; BSR set to: 0
 10980  0026F0  5177               	movf	___fladd@bexp& (0+255),w,b
 10981  0026F2  A4D8               	btfss	status,2,c
 10982  0026F4  EF7E  F013         	goto	u7651
 10983  0026F8  EF80  F013         	goto	u7650
 10984  0026FC                     u7651:
 10985  0026FC  EF92  F013         	goto	l7638
 10986  002700                     u7650:
 10987  002700                     l7634:
 10988                           
 10989                           ; BSR set to: 0
 10990  002700  0E00               	movlw	0
 10991  002702  6F6D               	movwf	___fladd@b& (0+255),b
 10992  002704  0E00               	movlw	0
 10993  002706  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10994  002708  0E00               	movlw	0
 10995  00270A  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10996  00270C  0E00               	movlw	0
 10997  00270E  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10998  002710  5177               	movf	___fladd@bexp& (0+255),w,b
 10999  002712  A4D8               	btfss	status,2,c
 11000  002714  EF8E  F013         	goto	u7661
 11001  002718  EF90  F013         	goto	u7660
 11002  00271C                     u7661:
 11003  00271C  EF92  F013         	goto	l7638
 11004  002720                     u7660:
 11005  002720                     
 11006                           ; BSR set to: 0
 11007  002720  0E00               	movlw	0
 11008  002722  6F75               	movwf	___fladd@signs& (0+255),b
 11009  002724                     l7638:
 11010                           
 11011                           ; BSR set to: 0
 11012  002724  A177               	btfss	___fladd@bexp& (0+255),0,b
 11013  002726  EF97  F013         	goto	u7671
 11014  00272A  EF99  F013         	goto	u7670
 11015  00272E                     u7671:
 11016  00272E  EF9C  F013         	goto	l7642
 11017  002732                     u7670:
 11018  002732                     
 11019                           ; BSR set to: 0
 11020  002732  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11021  002734  EF9D  F013         	goto	l7644
 11022  002738                     l7642:
 11023                           
 11024                           ; BSR set to: 0
 11025  002738  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 11026  00273A                     l7644:
 11027                           
 11028                           ; BSR set to: 0
 11029  00273A  90D8               	bcf	status,0,c
 11030  00273C  3177               	rrcf	___fladd@bexp& (0+255),w,b
 11031  00273E  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11032  002740                     
 11033                           ; BSR set to: 0
 11034  002740  AF75               	btfss	___fladd@signs& (0+255),7,b
 11035  002742  EFA5  F013         	goto	u7681
 11036  002746  EFA7  F013         	goto	u7680
 11037  00274A                     u7681:
 11038  00274A  EFA8  F013         	goto	l7650
 11039  00274E                     u7680:
 11040  00274E                     
 11041                           ; BSR set to: 0
 11042  00274E  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 11043  002750                     l7650:
 11044                           
 11045                           ; BSR set to: 0
 11046  002750  C06D  F06D         	movff	___fladd@b,?___fladd
 11047  002754  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 11048  002758  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 11049  00275C  C070  F070         	movff	___fladd@b+3,?___fladd+3
 11050  002760                     l1941:
 11051                           
 11052                           ; BSR set to: 0
 11053  002760  0012               	return		;funcret
 11054  002762                     __end_of___fladd:
 11055                           	callstack 0
 11056                           
 11057 ;; *************** function _calcMotorPow *****************
 11058 ;; Defined at:
 11059 ;;		line 337 in file "main.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;		None
 11062 ;; Auto vars:     Size  Location     Type
 11063 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 11064 ;;  setSpeedDelt    2   37[BANK0 ] short 
 11065 ;;  addMPow         1   41[BANK0 ] char 
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;Total ram usage:        7 bytes
 11080 ;; Hardware stack levels used: 1
 11081 ;; Hardware stack levels required when called: 10
 11082 ;; This function calls:
 11083 ;;		___awdiv
 11084 ;;		___flmul
 11085 ;;		___fltol
 11086 ;;		___xxtofl
 11087 ;;		_actSpeed
 11088 ;;		_setMotor
 11089 ;; This function is called by:
 11090 ;;		_loop
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           	psect	text39
 11095  00419E                     __ptext39:
 11096                           	callstack 0
 11097  00419E                     _calcMotorPow:
 11098                           	callstack 19
 11099  00419E                     
 11100                           ;main.c: 338:     currentSpeed = actSpeed();
 11101  00419E  EC64  F028         	call	_actSpeed	;wreg free
 11102  0041A2  C022  F0EB         	movff	?_actSpeed,_currentSpeed
 11103  0041A6  C023  F0EC         	movff	?_actSpeed+1,_currentSpeed+1
 11104  0041AA                     
 11105                           ;main.c: 340:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11106  0041AA  0100               	movlb	0	; () banked
 11107  0041AC  51EB               	movf	_currentSpeed& (0+255),w,b
 11108  0041AE  5DED               	subwf	_setSpeed& (0+255),w,b
 11109  0041B0  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11110  0041B2  51EC               	movf	(_currentSpeed+1)& (0+255),w,b
 11111  0041B4  59EE               	subwfb	(_setSpeed+1)& (0+255),w,b
 11112  0041B6  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11113  0041B8                     
 11114                           ; BSR set to: 0
 11115                           ;main.c: 341:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11116  0041B8  0101               	movlb	1	; () banked
 11117  0041BA  512C               	movf	_oldSpeed& (0+255),w,b
 11118  0041BC  0100               	movlb	0	; () banked
 11119  0041BE  5DEB               	subwf	_currentSpeed& (0+255),w,b
 11120  0041C0  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11121  0041C2  0101               	movlb	1	; () banked
 11122  0041C4  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11123  0041C6  0100               	movlb	0	; () banked
 11124  0041C8  59EC               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11125  0041CA  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11126  0041CC                     
 11127                           ; BSR set to: 0
 11128                           ;main.c: 347:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11129  0041CC  0E0A               	movlw	10
 11130  0041CE  6E2E               	movwf	___flmul@a^0,c
 11131  0041D0  0ED7               	movlw	215
 11132  0041D2  6E2F               	movwf	(___flmul@a+1)^0,c
 11133  0041D4  0EA3               	movlw	163
 11134  0041D6  6E30               	movwf	(___flmul@a+2)^0,c
 11135  0041D8  0E3C               	movlw	60
 11136  0041DA  6E31               	movwf	(___flmul@a+3)^0,c
 11137  0041DC  0E00               	movlw	0
 11138  0041DE  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11139  0041E0  0E02               	movlw	2
 11140  0041E2  6E16               	movwf	___awdiv@divisor^0,c
 11141  0041E4  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11142  0041E8  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11143  0041EC  ECF7  F025         	call	___awdiv	;wreg free
 11144  0041F0  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11145  0041F4  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11146  0041F8  5014               	movf	?___awdiv^0,w,c
 11147  0041FA  0100               	movlb	0	; () banked
 11148  0041FC  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11149  0041FE  5015               	movf	(?___awdiv+1)^0,w,c
 11150  004200  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11151  004202  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11152  004206  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11153  00420A  0E00               	movlw	0
 11154  00420C  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11155  00420E  0EFF               	movlw	-1
 11156  004210  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11157  004212  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11158  004214  0E01               	movlw	1
 11159  004216  ECA7  F01D         	call	___xxtofl
 11160  00421A  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11161  00421E  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11162  004222  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11163  004226  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11164  00422A  ECB1  F013         	call	___flmul	;wreg free
 11165  00422E  C02A  F079         	movff	?___flmul,___fltol@f1
 11166  004232  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11167  004236  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11168  00423A  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11169  00423E  EC21  F023         	call	___fltol	;wreg free
 11170  004242  0100               	movlb	0	; () banked
 11171  004244  5179               	movf	?___fltol& (0+255),w,b
 11172  004246  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11173  004248                     
 11174                           ; BSR set to: 0
 11175                           ;main.c: 349:     if (addMPow > (2)) {
 11176  004248  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11177  00424A  0A80               	xorlw	128
 11178  00424C  0F7D               	addlw	-131
 11179  00424E  A0D8               	btfss	status,0,c
 11180  004250  EF2C  F021         	goto	u10221
 11181  004254  EF2E  F021         	goto	u10220
 11182  004258                     u10221:
 11183  004258  EF32  F021         	goto	l9144
 11184  00425C                     u10220:
 11185  00425C                     
 11186                           ; BSR set to: 0
 11187                           ;main.c: 350:         addMPow = (2);
 11188  00425C  0E02               	movlw	2
 11189  00425E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11190                           
 11191                           ;main.c: 351:     } else if (addMPow < -(2)) {
 11192  004260  EF3E  F021         	goto	l9148
 11193  004264                     l9144:
 11194                           
 11195                           ; BSR set to: 0
 11196  004264  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11197  004266  0A80               	xorlw	128
 11198  004268  0F82               	addlw	130
 11199  00426A  B0D8               	btfsc	status,0,c
 11200  00426C  EF3A  F021         	goto	u10231
 11201  004270  EF3C  F021         	goto	u10230
 11202  004274                     u10231:
 11203  004274  EF3E  F021         	goto	l9148
 11204  004278                     u10230:
 11205  004278                     
 11206                           ; BSR set to: 0
 11207                           ;main.c: 352:         addMPow = -(2);
 11208  004278  0EFE               	movlw	254
 11209  00427A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11210  00427C                     l9148:
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;main.c: 355:     actMotorPow += addMPow;
 11214  00427C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11215  00427E  27E9               	addwf	_actMotorPow& (0+255),f,b
 11216  004280  0E00               	movlw	0
 11217  004282  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11218  004284  0EFF               	movlw	255
 11219  004286  23EA               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11220  004288                     
 11221                           ; BSR set to: 0
 11222                           ;main.c: 357:     if (actMotorPow > (700)) {
 11223  004288  BFEA               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11224  00428A  EF50  F021         	goto	u10241
 11225  00428E  0EBD               	movlw	189
 11226  004290  5DE9               	subwf	_actMotorPow& (0+255),w,b
 11227  004292  0E02               	movlw	2
 11228  004294  59EA               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11229  004296  A0D8               	btfss	status,0,c
 11230  004298  EF50  F021         	goto	u10241
 11231  00429C  EF52  F021         	goto	u10240
 11232  0042A0                     u10241:
 11233  0042A0  EF58  F021         	goto	l9154
 11234  0042A4                     u10240:
 11235  0042A4                     
 11236                           ; BSR set to: 0
 11237                           ;main.c: 358:         actMotorPow = (700);
 11238  0042A4  0E02               	movlw	2
 11239  0042A6  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
 11240  0042A8  0EBC               	movlw	188
 11241  0042AA  6FE9               	movwf	_actMotorPow& (0+255),b
 11242                           
 11243                           ;main.c: 359:     } else if (actMotorPow < (-400)) {
 11244  0042AC  EF6A  F021         	goto	l9158
 11245  0042B0                     l9154:
 11246                           
 11247                           ; BSR set to: 0
 11248  0042B0  AFEA               	btfss	(_actMotorPow+1)& (0+255),7,b
 11249  0042B2  EF64  F021         	goto	u10251
 11250  0042B6  0E70               	movlw	112
 11251  0042B8  5DE9               	subwf	_actMotorPow& (0+255),w,b
 11252  0042BA  0EFE               	movlw	254
 11253  0042BC  59EA               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11254  0042BE  B0D8               	btfsc	status,0,c
 11255  0042C0  EF64  F021         	goto	u10251
 11256  0042C4  EF66  F021         	goto	u10250
 11257  0042C8                     u10251:
 11258  0042C8  EF6A  F021         	goto	l9158
 11259  0042CC                     u10250:
 11260  0042CC                     
 11261                           ; BSR set to: 0
 11262                           ;main.c: 360:         actMotorPow = (-400);
 11263  0042CC  0EFE               	movlw	254
 11264  0042CE  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
 11265  0042D0  0E70               	movlw	112
 11266  0042D2  6FE9               	movwf	_actMotorPow& (0+255),b
 11267  0042D4                     l9158:
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;main.c: 363:     setMotor(actMotorPow);
 11271  0042D4  C0E9  F018         	movff	_actMotorPow,setMotor@motorPower
 11272  0042D8  C0EA  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11273  0042DC  EC21  F025         	call	_setMotor	;wreg free
 11274  0042E0                     
 11275                           ;main.c: 365:     oldSpeed = currentSpeed;
 11276  0042E0  C0EB  F12C         	movff	_currentSpeed,_oldSpeed
 11277  0042E4  C0EC  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11278  0042E8  0012               	return		;funcret
 11279  0042EA                     __end_of_calcMotorPow:
 11280                           	callstack 0
 11281                           
 11282 ;; *************** function _setMotor *****************
 11283 ;; Defined at:
 11284 ;;		line 368 in file "main.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;  motorPower      2   23[COMRAM] short 
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, status,0, cstack
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11301 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11302 ;;Total ram usage:        4 bytes
 11303 ;; Hardware stack levels used: 1
 11304 ;; Hardware stack levels required when called: 9
 11305 ;; This function calls:
 11306 ;;		_PWM7_LoadDutyValue
 11307 ;;		_PWM8_LoadDutyValue
 11308 ;; This function is called by:
 11309 ;;		_loop
 11310 ;;		_calcMotorPow
 11311 ;;		_startAccell
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text40
 11316  004A42                     __ptext40:
 11317                           	callstack 0
 11318  004A42                     _setMotor:
 11319                           	callstack 20
 11320  004A42                     
 11321                           ;main.c: 369:     if (motorPower >= (40)) {
 11322  004A42  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11323  004A44  EF2D  F025         	goto	u6311
 11324  004A48  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11325  004A4A  E109               	bnz	u6310
 11326  004A4C  0E28               	movlw	40
 11327  004A4E  5C18               	subwf	setMotor@motorPower^0,w,c
 11328  004A50  A0D8               	btfss	status,0,c
 11329  004A52  EF2D  F025         	goto	u6311
 11330  004A56  EF2F  F025         	goto	u6310
 11331  004A5A                     u6311:
 11332  004A5A  EF4F  F025         	goto	l6542
 11333  004A5E                     u6310:
 11334  004A5E                     
 11335                           ;main.c: 370:         if (motorPower > (700)) {
 11336  004A5E  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11337  004A60  EF3B  F025         	goto	u6321
 11338  004A64  0EBD               	movlw	189
 11339  004A66  5C18               	subwf	setMotor@motorPower^0,w,c
 11340  004A68  0E02               	movlw	2
 11341  004A6A  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11342  004A6C  A0D8               	btfss	status,0,c
 11343  004A6E  EF3B  F025         	goto	u6321
 11344  004A72  EF3D  F025         	goto	u6320
 11345  004A76                     u6321:
 11346  004A76  EF41  F025         	goto	l6538
 11347  004A7A                     u6320:
 11348  004A7A                     
 11349                           ;main.c: 371:             motorPower = (700);
 11350  004A7A  0E02               	movlw	2
 11351  004A7C  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11352  004A7E  0EBC               	movlw	188
 11353  004A80  6E18               	movwf	setMotor@motorPower^0,c
 11354  004A82                     l6538:
 11355                           
 11356                           ;main.c: 373:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11357  004A82  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11358  004A86  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11359  004A8A  ECD9  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11360  004A8E                     
 11361                           ;main.c: 374:         PWM8_LoadDutyValue(0);
 11362  004A8E  0E00               	movlw	0
 11363  004A90  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11364  004A92  0E00               	movlw	0
 11365  004A94  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11366  004A96  ECBF  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11367                           
 11368                           ;main.c: 375:     } else if (motorPower <= -(40)) {
 11369  004A9A  EF91  F025         	goto	l1384
 11370  004A9E                     l6542:
 11371  004A9E  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11372  004AA0  EF5B  F025         	goto	u6331
 11373  004AA4  0ED9               	movlw	217
 11374  004AA6  5C18               	subwf	setMotor@motorPower^0,w,c
 11375  004AA8  0EFF               	movlw	255
 11376  004AAA  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11377  004AAC  B0D8               	btfsc	status,0,c
 11378  004AAE  EF5B  F025         	goto	u6331
 11379  004AB2  EF5D  F025         	goto	u6330
 11380  004AB6                     u6331:
 11381  004AB6  EF85  F025         	goto	l6552
 11382  004ABA                     u6330:
 11383  004ABA                     
 11384                           ;main.c: 376:         if (motorPower < (-400)) {
 11385  004ABA  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11386  004ABC  EF69  F025         	goto	u6341
 11387  004AC0  0E70               	movlw	112
 11388  004AC2  5C18               	subwf	setMotor@motorPower^0,w,c
 11389  004AC4  0EFE               	movlw	254
 11390  004AC6  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11391  004AC8  B0D8               	btfsc	status,0,c
 11392  004ACA  EF69  F025         	goto	u6341
 11393  004ACE  EF6B  F025         	goto	u6340
 11394  004AD2                     u6341:
 11395  004AD2  EF6F  F025         	goto	l6548
 11396  004AD6                     u6340:
 11397  004AD6                     
 11398                           ;main.c: 377:             motorPower = (-400);
 11399  004AD6  0EFE               	movlw	254
 11400  004AD8  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11401  004ADA  0E70               	movlw	112
 11402  004ADC  6E18               	movwf	setMotor@motorPower^0,c
 11403  004ADE                     l6548:
 11404                           
 11405                           ;main.c: 379:         PWM7_LoadDutyValue(0);
 11406  004ADE  0E00               	movlw	0
 11407  004AE0  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11408  004AE2  0E00               	movlw	0
 11409  004AE4  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11410  004AE6  ECD9  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11411  004AEA                     
 11412                           ;main.c: 380:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11413  004AEA  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11414  004AEE  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11415  004AF2  1E1A               	comf	??_setMotor^0,f,c
 11416  004AF4  1E1B               	comf	(??_setMotor+1)^0,f,c
 11417  004AF6  4A1A               	infsnz	??_setMotor^0,f,c
 11418  004AF8  2A1B               	incf	(??_setMotor+1)^0,f,c
 11419  004AFA  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11420  004AFE  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11421  004B02  ECBF  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11422                           
 11423                           ;main.c: 381:     } else {
 11424  004B06  EF91  F025         	goto	l1384
 11425  004B0A                     l6552:
 11426                           
 11427                           ;main.c: 383:         PWM7_LoadDutyValue(0);
 11428  004B0A  0E00               	movlw	0
 11429  004B0C  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11430  004B0E  0E00               	movlw	0
 11431  004B10  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11432  004B12  ECD9  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11433                           
 11434                           ;main.c: 384:         PWM8_LoadDutyValue(0);
 11435  004B16  0E00               	movlw	0
 11436  004B18  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11437  004B1A  0E00               	movlw	0
 11438  004B1C  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11439  004B1E  ECBF  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11440  004B22                     l1384:
 11441  004B22  0012               	return		;funcret
 11442  004B24                     __end_of_setMotor:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function _PWM8_LoadDutyValue *****************
 11446 ;; Defined at:
 11447 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;		None
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1    wreg      void 
 11454 ;; Registers used:
 11455 ;;		wreg, status,2, status,0
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11465 ;;Total ram usage:        4 bytes
 11466 ;; Hardware stack levels used: 1
 11467 ;; Hardware stack levels required when called: 8
 11468 ;; This function calls:
 11469 ;;		Nothing
 11470 ;; This function is called by:
 11471 ;;		_setMotor
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text41
 11476  00597E                     __ptext41:
 11477                           	callstack 0
 11478  00597E                     _PWM8_LoadDutyValue:
 11479                           	callstack 20
 11480  00597E                     
 11481                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11482  00597E  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11483  005982  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11484  005986  90D8               	bcf	status,0,c
 11485  005988  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11486  00598A  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11487  00598C  90D8               	bcf	status,0,c
 11488  00598E  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11489  005990  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11490  005992  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11491  005994  6E61               	movwf	97,c	;volatile
 11492                           
 11493                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11494  005996  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11495  00599A  0E03               	movlw	3
 11496  00599C  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11497  00599E  0E06               	movlw	6
 11498  0059A0  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11499  0059A2                     u6095:
 11500  0059A2  90D8               	bcf	status,0,c
 11501  0059A4  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11502  0059A6  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11503  0059A8  EFD1  F02C         	goto	u6095
 11504  0059AC  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11505  0059AE  6E60               	movwf	96,c	;volatile
 11506  0059B0  0012               	return		;funcret
 11507  0059B2                     __end_of_PWM8_LoadDutyValue:
 11508                           	callstack 0
 11509                           
 11510 ;; *************** function _PWM7_LoadDutyValue *****************
 11511 ;; Defined at:
 11512 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;		None
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  1    wreg      void 
 11519 ;; Registers used:
 11520 ;;		wreg, status,2, status,0
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;Total ram usage:        4 bytes
 11531 ;; Hardware stack levels used: 1
 11532 ;; Hardware stack levels required when called: 8
 11533 ;; This function calls:
 11534 ;;		Nothing
 11535 ;; This function is called by:
 11536 ;;		_setMotor
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text42
 11541  0059B2                     __ptext42:
 11542                           	callstack 0
 11543  0059B2                     _PWM7_LoadDutyValue:
 11544                           	callstack 20
 11545  0059B2                     
 11546                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11547  0059B2  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11548  0059B6  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11549  0059BA  90D8               	bcf	status,0,c
 11550  0059BC  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11551  0059BE  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11552  0059C0  90D8               	bcf	status,0,c
 11553  0059C2  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11554  0059C4  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11555  0059C6  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11556  0059C8  6E65               	movwf	101,c	;volatile
 11557                           
 11558                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11559  0059CA  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11560  0059CE  0E03               	movlw	3
 11561  0059D0  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11562  0059D2  0E06               	movlw	6
 11563  0059D4  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11564  0059D6                     u6085:
 11565  0059D6  90D8               	bcf	status,0,c
 11566  0059D8  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11567  0059DA  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11568  0059DC  EFEB  F02C         	goto	u6085
 11569  0059E0  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11570  0059E2  6E64               	movwf	100,c	;volatile
 11571  0059E4  0012               	return		;funcret
 11572  0059E6                     __end_of_PWM7_LoadDutyValue:
 11573                           	callstack 0
 11574                           
 11575 ;; *************** function _actSpeed *****************
 11576 ;; Defined at:
 11577 ;;		line 67 in file "main.c"
 11578 ;; Parameters:    Size  Location     Type
 11579 ;;		None
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;  speed           2   35[COMRAM] short 
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  2   33[COMRAM] short 
 11584 ;; Registers used:
 11585 ;;		wreg, status,2, status,0, cstack
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;Total ram usage:        4 bytes
 11596 ;; Hardware stack levels used: 1
 11597 ;; Hardware stack levels required when called: 9
 11598 ;; This function calls:
 11599 ;;		___aldiv
 11600 ;; This function is called by:
 11601 ;;		_calcMotorPow
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text43
 11606  0050C8                     __ptext43:
 11607                           	callstack 0
 11608  0050C8                     _actSpeed:
 11609                           	callstack 19
 11610  0050C8                     
 11611                           ;main.c: 68:     int16_t speed = 0;
 11612  0050C8  0E00               	movlw	0
 11613  0050CA  6E25               	movwf	(actSpeed@speed+1)^0,c
 11614  0050CC  0E00               	movlw	0
 11615  0050CE  6E24               	movwf	actSpeed@speed^0,c
 11616  0050D0                     
 11617                           ;main.c: 69:     if (smtPeriod) {
 11618  0050D0  5048               	movf	_smtPeriod^0,w,c	;volatile
 11619  0050D2  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11620  0050D4  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11621  0050D6  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11622  0050D8  B4D8               	btfsc	status,2,c
 11623  0050DA  EF71  F028         	goto	u6391
 11624  0050DE  EF73  F028         	goto	u6390
 11625  0050E2                     u6391:
 11626  0050E2  EFA9  F028         	goto	l6610
 11627  0050E6                     u6390:
 11628  0050E6                     
 11629                           ;main.c: 70:         if (CLC3CONbits.LC3OUT) {
 11630  0050E6  013C               	movlb	60	; () banked
 11631  0050E8  AB60               	btfss	96,5,b	;volatile
 11632  0050EA  EF79  F028         	goto	u6401
 11633  0050EE  EF7B  F028         	goto	u6400
 11634  0050F2                     u6401:
 11635  0050F2  EF93  F028         	goto	l6608
 11636  0050F6                     u6400:
 11637  0050F6                     
 11638                           ; BSR set to: 60
 11639                           ;main.c: 71:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11640  0050F6  0E20               	movlw	32
 11641  0050F8  6E14               	movwf	___aldiv@dividend^0,c
 11642  0050FA  0EA1               	movlw	161
 11643  0050FC  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11644  0050FE  0E07               	movlw	7
 11645  005100  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11646  005102  0E00               	movlw	0
 11647  005104  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11648  005106  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11649  00510A  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11650  00510E  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11651  005112  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11652  005116  EC9B  F022         	call	___aldiv	;wreg free
 11653  00511A  C014  F024         	movff	?___aldiv,actSpeed@speed
 11654  00511E  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11655                           
 11656                           ;main.c: 72:         } else {
 11657  005122  EFA9  F028         	goto	l6610
 11658  005126                     l6608:
 11659                           
 11660                           ; BSR set to: 60
 11661                           ;main.c: 73:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11662  005126  0EE0               	movlw	224
 11663  005128  6E14               	movwf	___aldiv@dividend^0,c
 11664  00512A  0E5E               	movlw	94
 11665  00512C  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11666  00512E  0EF8               	movlw	248
 11667  005130  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11668  005132  0EFF               	movlw	255
 11669  005134  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11670  005136  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11671  00513A  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11672  00513E  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11673  005142  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11674  005146  EC9B  F022         	call	___aldiv	;wreg free
 11675  00514A  C014  F024         	movff	?___aldiv,actSpeed@speed
 11676  00514E  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11677  005152                     l6610:
 11678                           
 11679                           ;main.c: 76:     return speed;
 11680  005152  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11681  005156  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11682  00515A  0012               	return		;funcret
 11683  00515C                     __end_of_actSpeed:
 11684                           	callstack 0
 11685                           
 11686 ;; *************** function ___aldiv *****************
 11687 ;; Defined at:
 11688 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  dividend        4   19[COMRAM] long 
 11691 ;;  divisor         4   23[COMRAM] long 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  quotient        4   29[COMRAM] long 
 11694 ;;  sign            1   28[COMRAM] unsigned char 
 11695 ;;  counter         1   27[COMRAM] unsigned char 
 11696 ;; Return value:  Size  Location     Type
 11697 ;;                  4   19[COMRAM] long 
 11698 ;; Registers used:
 11699 ;;		wreg, status,2, status,0
 11700 ;; Tracked objects:
 11701 ;;		On entry : 0/0
 11702 ;;		On exit  : 0/0
 11703 ;;		Unchanged: 0/0
 11704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11705 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11709 ;;Total ram usage:       14 bytes
 11710 ;; Hardware stack levels used: 1
 11711 ;; Hardware stack levels required when called: 8
 11712 ;; This function calls:
 11713 ;;		Nothing
 11714 ;; This function is called by:
 11715 ;;		_actSpeed
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text44
 11720  004536                     __ptext44:
 11721                           	callstack 0
 11722  004536                     ___aldiv:
 11723                           	callstack 19
 11724  004536  0E00               	movlw	0
 11725  004538  6E1D               	movwf	___aldiv@sign^0,c
 11726  00453A  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11727  00453C  EFA4  F022         	goto	u6130
 11728  004540  EFA2  F022         	goto	u6131
 11729  004544                     u6131:
 11730  004544  EFAE  F022         	goto	l6408
 11731  004548                     u6130:
 11732  004548  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11733  00454A  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11734  00454C  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11735  00454E  6C18               	negf	___aldiv@divisor^0,c
 11736  004550  0E00               	movlw	0
 11737  004552  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11738  004554  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11739  004556  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11740  004558  0E01               	movlw	1
 11741  00455A  6E1D               	movwf	___aldiv@sign^0,c
 11742  00455C                     l6408:
 11743  00455C  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11744  00455E  EFB5  F022         	goto	u6140
 11745  004562  EFB3  F022         	goto	u6141
 11746  004566                     u6141:
 11747  004566  EFBF  F022         	goto	l6414
 11748  00456A                     u6140:
 11749  00456A  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11750  00456C  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11751  00456E  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11752  004570  6C14               	negf	___aldiv@dividend^0,c
 11753  004572  0E00               	movlw	0
 11754  004574  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11755  004576  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11756  004578  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11757  00457A  0E01               	movlw	1
 11758  00457C  1A1D               	xorwf	___aldiv@sign^0,f,c
 11759  00457E                     l6414:
 11760  00457E  0E00               	movlw	0
 11761  004580  6E1E               	movwf	___aldiv@quotient^0,c
 11762  004582  0E00               	movlw	0
 11763  004584  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11764  004586  0E00               	movlw	0
 11765  004588  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11766  00458A  0E00               	movlw	0
 11767  00458C  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11768  00458E  5018               	movf	___aldiv@divisor^0,w,c
 11769  004590  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11770  004592  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11771  004594  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11772  004596  B4D8               	btfsc	status,2,c
 11773  004598  EFD0  F022         	goto	u6151
 11774  00459C  EFD2  F022         	goto	u6150
 11775  0045A0                     u6151:
 11776  0045A0  EF08  F023         	goto	l6436
 11777  0045A4                     u6150:
 11778  0045A4  0E01               	movlw	1
 11779  0045A6  6E1C               	movwf	___aldiv@counter^0,c
 11780  0045A8  EFDC  F022         	goto	l6422
 11781  0045AC                     l6420:
 11782  0045AC  90D8               	bcf	status,0,c
 11783  0045AE  3618               	rlcf	___aldiv@divisor^0,f,c
 11784  0045B0  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11785  0045B2  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11786  0045B4  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11787  0045B6  2A1C               	incf	___aldiv@counter^0,f,c
 11788  0045B8                     l6422:
 11789  0045B8  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11790  0045BA  EFE1  F022         	goto	u6161
 11791  0045BE  EFE3  F022         	goto	u6160
 11792  0045C2                     u6161:
 11793  0045C2  EFD6  F022         	goto	l6420
 11794  0045C6                     u6160:
 11795  0045C6                     l6424:
 11796  0045C6  90D8               	bcf	status,0,c
 11797  0045C8  361E               	rlcf	___aldiv@quotient^0,f,c
 11798  0045CA  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11799  0045CC  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11800  0045CE  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11801  0045D0  5018               	movf	___aldiv@divisor^0,w,c
 11802  0045D2  5C14               	subwf	___aldiv@dividend^0,w,c
 11803  0045D4  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11804  0045D6  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11805  0045D8  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11806  0045DA  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11807  0045DC  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11808  0045DE  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11809  0045E0  A0D8               	btfss	status,0,c
 11810  0045E2  EFF5  F022         	goto	u6171
 11811  0045E6  EFF7  F022         	goto	u6170
 11812  0045EA                     u6171:
 11813  0045EA  EF00  F023         	goto	l6432
 11814  0045EE                     u6170:
 11815  0045EE  5018               	movf	___aldiv@divisor^0,w,c
 11816  0045F0  5E14               	subwf	___aldiv@dividend^0,f,c
 11817  0045F2  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11818  0045F4  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11819  0045F6  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11820  0045F8  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11821  0045FA  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11822  0045FC  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11823  0045FE  801E               	bsf	___aldiv@quotient^0,0,c
 11824  004600                     l6432:
 11825  004600  90D8               	bcf	status,0,c
 11826  004602  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11827  004604  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11828  004606  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11829  004608  3218               	rrcf	___aldiv@divisor^0,f,c
 11830  00460A  2E1C               	decfsz	___aldiv@counter^0,f,c
 11831  00460C  EFE3  F022         	goto	l6424
 11832  004610                     l6436:
 11833  004610  501D               	movf	___aldiv@sign^0,w,c
 11834  004612  B4D8               	btfsc	status,2,c
 11835  004614  EF0E  F023         	goto	u6181
 11836  004618  EF10  F023         	goto	u6180
 11837  00461C                     u6181:
 11838  00461C  EF18  F023         	goto	l6440
 11839  004620                     u6180:
 11840  004620  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11841  004622  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11842  004624  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11843  004626  6C1E               	negf	___aldiv@quotient^0,c
 11844  004628  0E00               	movlw	0
 11845  00462A  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11846  00462C  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11847  00462E  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11848  004630                     l6440:
 11849  004630  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11850  004634  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11851  004638  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11852  00463C  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11853  004640  0012               	return		;funcret
 11854  004642                     __end_of___aldiv:
 11855                           	callstack 0
 11856                           
 11857 ;; *************** function ___xxtofl *****************
 11858 ;; Defined at:
 11859 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11860 ;; Parameters:    Size  Location     Type
 11861 ;;  sign            1    wreg     unsigned char 
 11862 ;;  val             4   27[COMRAM] long 
 11863 ;; Auto vars:     Size  Location     Type
 11864 ;;  sign            1   35[COMRAM] unsigned char 
 11865 ;;  arg             4   37[COMRAM] unsigned long 
 11866 ;;  exp             1   36[COMRAM] unsigned char 
 11867 ;; Return value:  Size  Location     Type
 11868 ;;                  4   27[COMRAM] unsigned char 
 11869 ;; Registers used:
 11870 ;;		wreg, status,2, status,0
 11871 ;; Tracked objects:
 11872 ;;		On entry : 0/0
 11873 ;;		On exit  : 0/0
 11874 ;;		Unchanged: 0/0
 11875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11877 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11880 ;;Total ram usage:       14 bytes
 11881 ;; Hardware stack levels used: 1
 11882 ;; Hardware stack levels required when called: 8
 11883 ;; This function calls:
 11884 ;;		Nothing
 11885 ;; This function is called by:
 11886 ;;		_loop
 11887 ;;		_getBatteryVoltage
 11888 ;;		_checkBatt
 11889 ;;		_calcSpeed
 11890 ;;		_calcMotorPow
 11891 ;;		_setSteering
 11892 ;;		_checkCurveCount
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           	psect	text45
 11897  003B4E                     __ptext45:
 11898                           	callstack 0
 11899  003B4E                     ___xxtofl:
 11900                           	callstack 20
 11901                           
 11902                           ;incstack = 0
 11903                           ;___xxtofl@sign stored from wreg
 11904  003B4E  6E24               	movwf	___xxtofl@sign^0,c
 11905  003B50  5024               	movf	___xxtofl@sign^0,w,c
 11906  003B52  B4D8               	btfsc	status,2,c
 11907  003B54  EFAE  F01D         	goto	u9701
 11908  003B58  EFB0  F01D         	goto	u9700
 11909  003B5C                     u9701:
 11910  003B5C  EFD2  F01D         	goto	l2059
 11911  003B60                     u9700:
 11912  003B60  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11913  003B62  EFB7  F01D         	goto	u9710
 11914  003B66  EFB5  F01D         	goto	u9711
 11915  003B6A                     u9711:
 11916  003B6A  EFD2  F01D         	goto	l2059
 11917  003B6E                     u9710:
 11918  003B6E  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 11919  003B72  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 11920  003B76  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 11921  003B7A  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 11922  003B7E  1E20               	comf	??___xxtofl^0,f,c
 11923  003B80  1E21               	comf	(??___xxtofl+1)^0,f,c
 11924  003B82  1E22               	comf	(??___xxtofl+2)^0,f,c
 11925  003B84  1E23               	comf	(??___xxtofl+3)^0,f,c
 11926  003B86  2A20               	incf	??___xxtofl^0,f,c
 11927  003B88  0E00               	movlw	0
 11928  003B8A  2221               	addwfc	(??___xxtofl+1)^0,f,c
 11929  003B8C  2222               	addwfc	(??___xxtofl+2)^0,f,c
 11930  003B8E  2223               	addwfc	(??___xxtofl+3)^0,f,c
 11931  003B90  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 11932  003B94  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 11933  003B98  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 11934  003B9C  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 11935  003BA0  EFDA  F01D         	goto	l8792
 11936  003BA4                     l2059:
 11937  003BA4  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 11938  003BA8  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11939  003BAC  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11940  003BB0  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11941  003BB4                     l8792:
 11942  003BB4  501C               	movf	___xxtofl@val^0,w,c
 11943  003BB6  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 11944  003BB8  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 11945  003BBA  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 11946  003BBC  A4D8               	btfss	status,2,c
 11947  003BBE  EFE3  F01D         	goto	u9721
 11948  003BC2  EFE5  F01D         	goto	u9720
 11949  003BC6                     u9721:
 11950  003BC6  EFEF  F01D         	goto	l8798
 11951  003BCA                     u9720:
 11952  003BCA  0E00               	movlw	0
 11953  003BCC  6E1C               	movwf	?___xxtofl^0,c
 11954  003BCE  0E00               	movlw	0
 11955  003BD0  6E1D               	movwf	(?___xxtofl+1)^0,c
 11956  003BD2  0E00               	movlw	0
 11957  003BD4  6E1E               	movwf	(?___xxtofl+2)^0,c
 11958  003BD6  0E00               	movlw	0
 11959  003BD8  6E1F               	movwf	(?___xxtofl+3)^0,c
 11960  003BDA  EF80  F01E         	goto	l2062
 11961  003BDE                     l8798:
 11962  003BDE  0E96               	movlw	150
 11963  003BE0  6E25               	movwf	___xxtofl@exp^0,c
 11964  003BE2  EFF9  F01D         	goto	l8802
 11965  003BE6                     l8800:
 11966  003BE6  2A25               	incf	___xxtofl@exp^0,f,c
 11967  003BE8  90D8               	bcf	status,0,c
 11968  003BEA  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11969  003BEC  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11970  003BEE  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11971  003BF0  3226               	rrcf	___xxtofl@arg^0,f,c
 11972  003BF2                     l8802:
 11973  003BF2  0E00               	movlw	0
 11974  003BF4  1426               	andwf	___xxtofl@arg^0,w,c
 11975  003BF6  6E20               	movwf	??___xxtofl^0,c
 11976  003BF8  0E00               	movlw	0
 11977  003BFA  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11978  003BFC  6E21               	movwf	(??___xxtofl+1)^0,c
 11979  003BFE  0E00               	movlw	0
 11980  003C00  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11981  003C02  6E22               	movwf	(??___xxtofl+2)^0,c
 11982  003C04  0EFE               	movlw	254
 11983  003C06  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11984  003C08  6E23               	movwf	(??___xxtofl+3)^0,c
 11985  003C0A  5020               	movf	??___xxtofl^0,w,c
 11986  003C0C  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11987  003C0E  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11988  003C10  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11989  003C12  A4D8               	btfss	status,2,c
 11990  003C14  EF0E  F01E         	goto	u9731
 11991  003C18  EF10  F01E         	goto	u9730
 11992  003C1C                     u9731:
 11993  003C1C  EFF3  F01D         	goto	l8800
 11994  003C20                     u9730:
 11995  003C20  EF1E  F01E         	goto	l2066
 11996  003C24                     l8804:
 11997  003C24  2A25               	incf	___xxtofl@exp^0,f,c
 11998  003C26  0E01               	movlw	1
 11999  003C28  2626               	addwf	___xxtofl@arg^0,f,c
 12000  003C2A  0E00               	movlw	0
 12001  003C2C  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 12002  003C2E  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 12003  003C30  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 12004  003C32  90D8               	bcf	status,0,c
 12005  003C34  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12006  003C36  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12007  003C38  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12008  003C3A  3226               	rrcf	___xxtofl@arg^0,f,c
 12009  003C3C                     l2066:
 12010  003C3C  0E00               	movlw	0
 12011  003C3E  1426               	andwf	___xxtofl@arg^0,w,c
 12012  003C40  6E20               	movwf	??___xxtofl^0,c
 12013  003C42  0E00               	movlw	0
 12014  003C44  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12015  003C46  6E21               	movwf	(??___xxtofl+1)^0,c
 12016  003C48  0E00               	movlw	0
 12017  003C4A  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12018  003C4C  6E22               	movwf	(??___xxtofl+2)^0,c
 12019  003C4E  0EFF               	movlw	255
 12020  003C50  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12021  003C52  6E23               	movwf	(??___xxtofl+3)^0,c
 12022  003C54  5020               	movf	??___xxtofl^0,w,c
 12023  003C56  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12024  003C58  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12025  003C5A  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12026  003C5C  A4D8               	btfss	status,2,c
 12027  003C5E  EF33  F01E         	goto	u9741
 12028  003C62  EF35  F01E         	goto	u9740
 12029  003C66                     u9741:
 12030  003C66  EF12  F01E         	goto	l8804
 12031  003C6A                     u9740:
 12032  003C6A  EF3D  F01E         	goto	l8812
 12033  003C6E                     l8810:
 12034  003C6E  0625               	decf	___xxtofl@exp^0,f,c
 12035  003C70  90D8               	bcf	status,0,c
 12036  003C72  3626               	rlcf	___xxtofl@arg^0,f,c
 12037  003C74  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 12038  003C76  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 12039  003C78  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 12040  003C7A                     l8812:
 12041  003C7A  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 12042  003C7C  EF42  F01E         	goto	u9751
 12043  003C80  EF44  F01E         	goto	u9750
 12044  003C84                     u9751:
 12045  003C84  EF4C  F01E         	goto	l2073
 12046  003C88                     u9750:
 12047  003C88  0E02               	movlw	2
 12048  003C8A  6025               	cpfslt	___xxtofl@exp^0,c
 12049  003C8C  EF4A  F01E         	goto	u9761
 12050  003C90  EF4C  F01E         	goto	u9760
 12051  003C94                     u9761:
 12052  003C94  EF37  F01E         	goto	l8810
 12053  003C98                     u9760:
 12054  003C98                     l2073:
 12055  003C98  B025               	btfsc	___xxtofl@exp^0,0,c
 12056  003C9A  EF51  F01E         	goto	u9771
 12057  003C9E  EF53  F01E         	goto	u9770
 12058  003CA2                     u9771:
 12059  003CA2  EF54  F01E         	goto	l8818
 12060  003CA6                     u9770:
 12061  003CA6  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 12062  003CA8                     l8818:
 12063  003CA8  90D8               	bcf	status,0,c
 12064  003CAA  3225               	rrcf	___xxtofl@exp^0,f,c
 12065  003CAC  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 12066  003CB0  6A21               	clrf	(??___xxtofl+1)^0,c
 12067  003CB2  6A22               	clrf	(??___xxtofl+2)^0,c
 12068  003CB4  6A23               	clrf	(??___xxtofl+3)^0,c
 12069  003CB6  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 12070  003CBA  6A22               	clrf	(??___xxtofl+2)^0,c
 12071  003CBC  6A21               	clrf	(??___xxtofl+1)^0,c
 12072  003CBE  6A20               	clrf	??___xxtofl^0,c
 12073  003CC0  5020               	movf	??___xxtofl^0,w,c
 12074  003CC2  1226               	iorwf	___xxtofl@arg^0,f,c
 12075  003CC4  5021               	movf	(??___xxtofl+1)^0,w,c
 12076  003CC6  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12077  003CC8  5022               	movf	(??___xxtofl+2)^0,w,c
 12078  003CCA  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12079  003CCC  5023               	movf	(??___xxtofl+3)^0,w,c
 12080  003CCE  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12081  003CD0  5024               	movf	___xxtofl@sign^0,w,c
 12082  003CD2  B4D8               	btfsc	status,2,c
 12083  003CD4  EF6E  F01E         	goto	u9781
 12084  003CD8  EF70  F01E         	goto	u9780
 12085  003CDC                     u9781:
 12086  003CDC  EF78  F01E         	goto	l8828
 12087  003CE0                     u9780:
 12088  003CE0  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12089  003CE2  EF77  F01E         	goto	u9790
 12090  003CE6  EF75  F01E         	goto	u9791
 12091  003CEA                     u9791:
 12092  003CEA  EF78  F01E         	goto	l8828
 12093  003CEE                     u9790:
 12094  003CEE  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12095  003CF0                     l8828:
 12096  003CF0  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12097  003CF4  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12098  003CF8  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12099  003CFC  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12100  003D00                     l2062:
 12101  003D00  0012               	return		;funcret
 12102  003D02                     __end_of___xxtofl:
 12103                           	callstack 0
 12104                           
 12105 ;; *************** function ___fltol *****************
 12106 ;; Defined at:
 12107 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12108 ;; Parameters:    Size  Location     Type
 12109 ;;  f1              4   25[BANK0 ] unsigned char 
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;  exp1            1   34[BANK0 ] unsigned char 
 12112 ;;  sign1           1   33[BANK0 ] unsigned char 
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  4   25[BANK0 ] long 
 12115 ;; Registers used:
 12116 ;;		wreg, status,2, status,0
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/0
 12119 ;;		On exit  : 0/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12122 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12123 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12125 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12126 ;;Total ram usage:       10 bytes
 12127 ;; Hardware stack levels used: 1
 12128 ;; Hardware stack levels required when called: 8
 12129 ;; This function calls:
 12130 ;;		Nothing
 12131 ;; This function is called by:
 12132 ;;		_calcSpeed
 12133 ;;		_calcMotorPow
 12134 ;;		_setSteering
 12135 ;;		_efgtoa
 12136 ;; This function uses a non-reentrant model
 12137 ;;
 12138                           
 12139                           	psect	text46
 12140  004642                     __ptext46:
 12141                           	callstack 0
 12142  004642                     ___fltol:
 12143                           	callstack 20
 12144  004642  0100               	movlb	0	; () banked
 12145  004644  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12146  004646  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12147  004648  6F82               	movwf	___fltol@exp1& (0+255),b
 12148  00464A  5182               	movf	___fltol@exp1& (0+255),w,b
 12149  00464C  A4D8               	btfss	status,2,c
 12150  00464E  EF2B  F023         	goto	u8491
 12151  004652  EF2D  F023         	goto	u8490
 12152  004656                     u8491:
 12153  004656  EF37  F023         	goto	l8162
 12154  00465A                     u8490:
 12155  00465A                     l8158:
 12156                           
 12157                           ; BSR set to: 0
 12158  00465A  0E00               	movlw	0
 12159  00465C  6F79               	movwf	?___fltol& (0+255),b
 12160  00465E  0E00               	movlw	0
 12161  004660  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12162  004662  0E00               	movlw	0
 12163  004664  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12164  004666  0E00               	movlw	0
 12165  004668  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12166  00466A  EFA4  F023         	goto	l1701
 12167  00466E                     l8162:
 12168                           
 12169                           ; BSR set to: 0
 12170  00466E  C079  F07D         	movff	___fltol@f1,??___fltol
 12171  004672  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12172  004676  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12173  00467A  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12174  00467E  0E20               	movlw	32
 12175  004680  EF47  F023         	goto	u8500
 12176  004684                     u8505:
 12177  004684  90D8               	bcf	status,0,c
 12178  004686  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12179  004688  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12180  00468A  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12181  00468C  337D               	rrcf	??___fltol& (0+255),f,b
 12182  00468E                     u8500:
 12183  00468E  2EE8               	decfsz	wreg,f,c
 12184  004690  EF42  F023         	goto	u8505
 12185  004694  517D               	movf	??___fltol& (0+255),w,b
 12186  004696  6F81               	movwf	___fltol@sign1& (0+255),b
 12187  004698                     
 12188                           ; BSR set to: 0
 12189  004698  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12190  00469A                     
 12191                           ; BSR set to: 0
 12192  00469A  0EFF               	movlw	255
 12193  00469C  1779               	andwf	___fltol@f1& (0+255),f,b
 12194  00469E  0EFF               	movlw	255
 12195  0046A0  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12196  0046A2  0EFF               	movlw	255
 12197  0046A4  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12198  0046A6  0E00               	movlw	0
 12199  0046A8  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12200  0046AA                     
 12201                           ; BSR set to: 0
 12202  0046AA  0E96               	movlw	150
 12203  0046AC  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12204  0046AE                     
 12205                           ; BSR set to: 0
 12206  0046AE  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12207  0046B0  EF5E  F023         	goto	u8510
 12208  0046B4  EF5C  F023         	goto	u8511
 12209  0046B8                     u8511:
 12210  0046B8  EF74  F023         	goto	l8182
 12211  0046BC                     u8510:
 12212  0046BC                     
 12213                           ; BSR set to: 0
 12214  0046BC  5182               	movf	___fltol@exp1& (0+255),w,b
 12215  0046BE  0A80               	xorlw	128
 12216  0046C0  0F97               	addlw	151
 12217  0046C2  B0D8               	btfsc	status,0,c
 12218  0046C4  EF66  F023         	goto	u8521
 12219  0046C8  EF68  F023         	goto	u8520
 12220  0046CC                     u8521:
 12221  0046CC  EF6A  F023         	goto	l8178
 12222  0046D0                     u8520:
 12223  0046D0  EF2D  F023         	goto	l8158
 12224  0046D4                     l8178:
 12225                           
 12226                           ; BSR set to: 0
 12227  0046D4  90D8               	bcf	status,0,c
 12228  0046D6  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12229  0046D8  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12230  0046DA  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12231  0046DC  3379               	rrcf	___fltol@f1& (0+255),f,b
 12232  0046DE                     
 12233                           ; BSR set to: 0
 12234  0046DE  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12235  0046E0  EF6A  F023         	goto	l8178
 12236  0046E4  EF8C  F023         	goto	l8192
 12237  0046E8                     l8182:
 12238                           
 12239                           ; BSR set to: 0
 12240  0046E8  0E1F               	movlw	31
 12241  0046EA  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12242  0046EC  EF7A  F023         	goto	u8531
 12243  0046F0  EF7C  F023         	goto	u8530
 12244  0046F4                     u8531:
 12245  0046F4  EF84  F023         	goto	l8190
 12246  0046F8                     u8530:
 12247  0046F8  EF2D  F023         	goto	l8158
 12248  0046FC                     l8188:
 12249                           
 12250                           ; BSR set to: 0
 12251  0046FC  90D8               	bcf	status,0,c
 12252  0046FE  3779               	rlcf	___fltol@f1& (0+255),f,b
 12253  004700  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12254  004702  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12255  004704  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12256  004706  0782               	decf	___fltol@exp1& (0+255),f,b
 12257  004708                     l8190:
 12258                           
 12259                           ; BSR set to: 0
 12260  004708  5182               	movf	___fltol@exp1& (0+255),w,b
 12261  00470A  A4D8               	btfss	status,2,c
 12262  00470C  EF8A  F023         	goto	u8541
 12263  004710  EF8C  F023         	goto	u8540
 12264  004714                     u8541:
 12265  004714  EF7E  F023         	goto	l8188
 12266  004718                     u8540:
 12267  004718                     l8192:
 12268                           
 12269                           ; BSR set to: 0
 12270  004718  5181               	movf	___fltol@sign1& (0+255),w,b
 12271  00471A  B4D8               	btfsc	status,2,c
 12272  00471C  EF92  F023         	goto	u8551
 12273  004720  EF94  F023         	goto	u8550
 12274  004724                     u8551:
 12275  004724  EF9C  F023         	goto	l8196
 12276  004728                     u8550:
 12277  004728                     
 12278                           ; BSR set to: 0
 12279  004728  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12280  00472A  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12281  00472C  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12282  00472E  6D79               	negf	___fltol@f1& (0+255),b
 12283  004730  0E00               	movlw	0
 12284  004732  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12285  004734  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12286  004736  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12287  004738                     l8196:
 12288                           
 12289                           ; BSR set to: 0
 12290  004738  C079  F079         	movff	___fltol@f1,?___fltol
 12291  00473C  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12292  004740  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12293  004744  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12294  004748                     l1701:
 12295                           
 12296                           ; BSR set to: 0
 12297  004748  0012               	return		;funcret
 12298  00474A                     __end_of___fltol:
 12299                           	callstack 0
 12300                           
 12301 ;; *************** function ___flmul *****************
 12302 ;; Defined at:
 12303 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12304 ;; Parameters:    Size  Location     Type
 12305 ;;  b               4   41[COMRAM] long 
 12306 ;;  a               4   45[COMRAM] long 
 12307 ;; Auto vars:     Size  Location     Type
 12308 ;;  prod            4    7[BANK0 ] struct .
 12309 ;;  grs             4    2[BANK0 ] unsigned long 
 12310 ;;  temp            2   11[BANK0 ] struct .
 12311 ;;  bexp            1    6[BANK0 ] unsigned char 
 12312 ;;  aexp            1    1[BANK0 ] unsigned char 
 12313 ;;  sign            1    0[BANK0 ] unsigned char 
 12314 ;; Return value:  Size  Location     Type
 12315 ;;                  4   41[COMRAM] unsigned char 
 12316 ;; Registers used:
 12317 ;;		wreg, status,2, status,0, prodl, prodh
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12324 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12326 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12327 ;;Total ram usage:       25 bytes
 12328 ;; Hardware stack levels used: 1
 12329 ;; Hardware stack levels required when called: 8
 12330 ;; This function calls:
 12331 ;;		Nothing
 12332 ;; This function is called by:
 12333 ;;		_calcSpeed
 12334 ;;		_calcMotorPow
 12335 ;;		_efgtoa
 12336 ;; This function uses a non-reentrant model
 12337 ;;
 12338                           
 12339                           	psect	text47
 12340  002762                     __ptext47:
 12341                           	callstack 0
 12342  002762                     ___flmul:
 12343                           	callstack 16
 12344  002762  502D               	movf	(___flmul@b+3)^0,w,c
 12345  002764  0B80               	andlw	128
 12346  002766  0100               	movlb	0	; () banked
 12347  002768  6F60               	movwf	___flmul@sign& (0+255),b
 12348  00276A  502D               	movf	(___flmul@b+3)^0,w,c
 12349  00276C  242D               	addwf	(___flmul@b+3)^0,w,c
 12350  00276E  6F66               	movwf	___flmul@bexp& (0+255),b
 12351  002770                     
 12352                           ; BSR set to: 0
 12353  002770  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12354  002772  EFBD  F013         	goto	u8091
 12355  002776  EFBF  F013         	goto	u8090
 12356  00277A                     u8091:
 12357  00277A  EFC0  F013         	goto	l7900
 12358  00277E                     u8090:
 12359  00277E                     
 12360                           ; BSR set to: 0
 12361  00277E  8166               	bsf	___flmul@bexp& (0+255),0,b
 12362  002780                     l7900:
 12363                           
 12364                           ; BSR set to: 0
 12365  002780  5166               	movf	___flmul@bexp& (0+255),w,b
 12366  002782  B4D8               	btfsc	status,2,c
 12367  002784  EFC6  F013         	goto	u8101
 12368  002788  EFC8  F013         	goto	u8100
 12369  00278C                     u8101:
 12370  00278C  EFDB  F013         	goto	l7908
 12371  002790                     u8100:
 12372  002790                     
 12373                           ; BSR set to: 0
 12374  002790  2966               	incf	___flmul@bexp& (0+255),w,b
 12375  002792  A4D8               	btfss	status,2,c
 12376  002794  EFCE  F013         	goto	u8111
 12377  002798  EFD0  F013         	goto	u8110
 12378  00279C                     u8111:
 12379  00279C  EFD8  F013         	goto	l7906
 12380  0027A0                     u8110:
 12381  0027A0                     
 12382                           ; BSR set to: 0
 12383  0027A0  0E00               	movlw	0
 12384  0027A2  6E2A               	movwf	___flmul@b^0,c
 12385  0027A4  0E00               	movlw	0
 12386  0027A6  6E2B               	movwf	(___flmul@b+1)^0,c
 12387  0027A8  0E00               	movlw	0
 12388  0027AA  6E2C               	movwf	(___flmul@b+2)^0,c
 12389  0027AC  0E00               	movlw	0
 12390  0027AE  6E2D               	movwf	(___flmul@b+3)^0,c
 12391  0027B0                     l7906:
 12392                           
 12393                           ; BSR set to: 0
 12394  0027B0  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12395  0027B2  EFE3  F013         	goto	l7910
 12396  0027B6                     l7908:
 12397                           
 12398                           ; BSR set to: 0
 12399  0027B6  0E00               	movlw	0
 12400  0027B8  6E2A               	movwf	___flmul@b^0,c
 12401  0027BA  0E00               	movlw	0
 12402  0027BC  6E2B               	movwf	(___flmul@b+1)^0,c
 12403  0027BE  0E00               	movlw	0
 12404  0027C0  6E2C               	movwf	(___flmul@b+2)^0,c
 12405  0027C2  0E00               	movlw	0
 12406  0027C4  6E2D               	movwf	(___flmul@b+3)^0,c
 12407  0027C6                     l7910:
 12408                           
 12409                           ; BSR set to: 0
 12410  0027C6  5031               	movf	(___flmul@a+3)^0,w,c
 12411  0027C8  0B80               	andlw	128
 12412  0027CA  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12413  0027CC                     
 12414                           ; BSR set to: 0
 12415  0027CC  5031               	movf	(___flmul@a+3)^0,w,c
 12416  0027CE  2431               	addwf	(___flmul@a+3)^0,w,c
 12417  0027D0  6F61               	movwf	___flmul@aexp& (0+255),b
 12418  0027D2                     
 12419                           ; BSR set to: 0
 12420  0027D2  AE30               	btfss	(___flmul@a+2)^0,7,c
 12421  0027D4  EFEE  F013         	goto	u8121
 12422  0027D8  EFF0  F013         	goto	u8120
 12423  0027DC                     u8121:
 12424  0027DC  EFF1  F013         	goto	l7918
 12425  0027E0                     u8120:
 12426  0027E0                     
 12427                           ; BSR set to: 0
 12428  0027E0  8161               	bsf	___flmul@aexp& (0+255),0,b
 12429  0027E2                     l7918:
 12430                           
 12431                           ; BSR set to: 0
 12432  0027E2  5161               	movf	___flmul@aexp& (0+255),w,b
 12433  0027E4  B4D8               	btfsc	status,2,c
 12434  0027E6  EFF7  F013         	goto	u8131
 12435  0027EA  EFF9  F013         	goto	u8130
 12436  0027EE                     u8131:
 12437  0027EE  EF0C  F014         	goto	l7926
 12438  0027F2                     u8130:
 12439  0027F2                     
 12440                           ; BSR set to: 0
 12441  0027F2  2961               	incf	___flmul@aexp& (0+255),w,b
 12442  0027F4  A4D8               	btfss	status,2,c
 12443  0027F6  EFFF  F013         	goto	u8141
 12444  0027FA  EF01  F014         	goto	u8140
 12445  0027FE                     u8141:
 12446  0027FE  EF09  F014         	goto	l7924
 12447  002802                     u8140:
 12448  002802                     
 12449                           ; BSR set to: 0
 12450  002802  0E00               	movlw	0
 12451  002804  6E2E               	movwf	___flmul@a^0,c
 12452  002806  0E00               	movlw	0
 12453  002808  6E2F               	movwf	(___flmul@a+1)^0,c
 12454  00280A  0E00               	movlw	0
 12455  00280C  6E30               	movwf	(___flmul@a+2)^0,c
 12456  00280E  0E00               	movlw	0
 12457  002810  6E31               	movwf	(___flmul@a+3)^0,c
 12458  002812                     l7924:
 12459                           
 12460                           ; BSR set to: 0
 12461  002812  8E30               	bsf	(___flmul@a+2)^0,7,c
 12462  002814  EF14  F014         	goto	l2018
 12463  002818                     l7926:
 12464                           
 12465                           ; BSR set to: 0
 12466  002818  0E00               	movlw	0
 12467  00281A  6E2E               	movwf	___flmul@a^0,c
 12468  00281C  0E00               	movlw	0
 12469  00281E  6E2F               	movwf	(___flmul@a+1)^0,c
 12470  002820  0E00               	movlw	0
 12471  002822  6E30               	movwf	(___flmul@a+2)^0,c
 12472  002824  0E00               	movlw	0
 12473  002826  6E31               	movwf	(___flmul@a+3)^0,c
 12474  002828                     l2018:
 12475                           
 12476                           ; BSR set to: 0
 12477  002828  5161               	movf	___flmul@aexp& (0+255),w,b
 12478  00282A  B4D8               	btfsc	status,2,c
 12479  00282C  EF1A  F014         	goto	u8151
 12480  002830  EF1C  F014         	goto	u8150
 12481  002834                     u8151:
 12482  002834  EF24  F014         	goto	l7930
 12483  002838                     u8150:
 12484  002838                     
 12485                           ; BSR set to: 0
 12486  002838  5166               	movf	___flmul@bexp& (0+255),w,b
 12487  00283A  A4D8               	btfss	status,2,c
 12488  00283C  EF22  F014         	goto	u8161
 12489  002840  EF24  F014         	goto	u8160
 12490  002844                     u8161:
 12491  002844  EF2E  F014         	goto	l7934
 12492  002848                     u8160:
 12493  002848                     l7930:
 12494                           
 12495                           ; BSR set to: 0
 12496  002848  0E00               	movlw	0
 12497  00284A  6E2A               	movwf	?___flmul^0,c
 12498  00284C  0E00               	movlw	0
 12499  00284E  6E2B               	movwf	(?___flmul+1)^0,c
 12500  002850  0E00               	movlw	0
 12501  002852  6E2C               	movwf	(?___flmul+2)^0,c
 12502  002854  0E00               	movlw	0
 12503  002856  6E2D               	movwf	(?___flmul+3)^0,c
 12504  002858  EFD8  F015         	goto	l2022
 12505  00285C                     l7934:
 12506                           
 12507                           ; BSR set to: 0
 12508  00285C  5030               	movf	(___flmul@a+2)^0,w,c
 12509  00285E  022A               	mulwf	___flmul@b^0,c
 12510  002860  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12511  002866  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12512  00286C                     
 12513                           ; BSR set to: 0
 12514  00286C  516B               	movf	___flmul@temp& (0+255),w,b
 12515  00286E  6F62               	movwf	___flmul@grs& (0+255),b
 12516  002870  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12517  002872  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12518  002874  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12519  002876                     
 12520                           ; BSR set to: 0
 12521  002876  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12522  002878  6F67               	movwf	___flmul@prod& (0+255),b
 12523  00287A  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12524  00287C  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12525  00287E  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12526  002880  502F               	movf	(___flmul@a+1)^0,w,c
 12527  002882  022B               	mulwf	(___flmul@b+1)^0,c
 12528  002884  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12529  00288A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12530  002890                     
 12531                           ; BSR set to: 0
 12532  002890  516B               	movf	___flmul@temp& (0+255),w,b
 12533  002892  2762               	addwf	___flmul@grs& (0+255),f,b
 12534  002894  0E00               	movlw	0
 12535  002896  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12536  002898  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12537  00289A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12538  00289C                     
 12539                           ; BSR set to: 0
 12540  00289C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12541  00289E  2767               	addwf	___flmul@prod& (0+255),f,b
 12542  0028A0  0E00               	movlw	0
 12543  0028A2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12544  0028A4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12545  0028A6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12546  0028A8  502E               	movf	___flmul@a^0,w,c
 12547  0028AA  022C               	mulwf	(___flmul@b+2)^0,c
 12548  0028AC  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12549  0028B2  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12550  0028B8                     
 12551                           ; BSR set to: 0
 12552  0028B8  516B               	movf	___flmul@temp& (0+255),w,b
 12553  0028BA  2762               	addwf	___flmul@grs& (0+255),f,b
 12554  0028BC  0E00               	movlw	0
 12555  0028BE  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12556  0028C0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12557  0028C2  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12558  0028C4                     
 12559                           ; BSR set to: 0
 12560  0028C4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12561  0028C6  2767               	addwf	___flmul@prod& (0+255),f,b
 12562  0028C8  0E00               	movlw	0
 12563  0028CA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12564  0028CC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12565  0028CE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12566  0028D0                     
 12567                           ; BSR set to: 0
 12568  0028D0  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12569  0028D4  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12570  0028D8  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12571  0028DC  6B62               	clrf	___flmul@grs& (0+255),b
 12572  0028DE                     
 12573                           ; BSR set to: 0
 12574  0028DE  502E               	movf	___flmul@a^0,w,c
 12575  0028E0  022B               	mulwf	(___flmul@b+1)^0,c
 12576  0028E2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12577  0028E8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12578  0028EE                     
 12579                           ; BSR set to: 0
 12580  0028EE  516B               	movf	___flmul@temp& (0+255),w,b
 12581  0028F0  2762               	addwf	___flmul@grs& (0+255),f,b
 12582  0028F2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12583  0028F4  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12584  0028F6  0E00               	movlw	0
 12585  0028F8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12586  0028FA  0E00               	movlw	0
 12587  0028FC  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12588  0028FE                     
 12589                           ; BSR set to: 0
 12590  0028FE  502F               	movf	(___flmul@a+1)^0,w,c
 12591  002900  022A               	mulwf	___flmul@b^0,c
 12592  002902  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12593  002908  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12594  00290E                     
 12595                           ; BSR set to: 0
 12596  00290E  516B               	movf	___flmul@temp& (0+255),w,b
 12597  002910  2762               	addwf	___flmul@grs& (0+255),f,b
 12598  002912  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12599  002914  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12600  002916  0E00               	movlw	0
 12601  002918  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12602  00291A  0E00               	movlw	0
 12603  00291C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12604  00291E                     
 12605                           ; BSR set to: 0
 12606  00291E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12607  002922  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12608  002926  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12609  00292A  6B62               	clrf	___flmul@grs& (0+255),b
 12610  00292C  502E               	movf	___flmul@a^0,w,c
 12611  00292E  022A               	mulwf	___flmul@b^0,c
 12612  002930  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12613  002936  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12614  00293C                     
 12615                           ; BSR set to: 0
 12616  00293C  516B               	movf	___flmul@temp& (0+255),w,b
 12617  00293E  2762               	addwf	___flmul@grs& (0+255),f,b
 12618  002940  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12619  002942  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12620  002944  0E00               	movlw	0
 12621  002946  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12622  002948  0E00               	movlw	0
 12623  00294A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12624  00294C                     
 12625                           ; BSR set to: 0
 12626  00294C  5030               	movf	(___flmul@a+2)^0,w,c
 12627  00294E  022B               	mulwf	(___flmul@b+1)^0,c
 12628  002950  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12629  002956  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12630  00295C  516B               	movf	___flmul@temp& (0+255),w,b
 12631  00295E  2767               	addwf	___flmul@prod& (0+255),f,b
 12632  002960  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12633  002962  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12634  002964  0E00               	movlw	0
 12635  002966  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12636  002968  0E00               	movlw	0
 12637  00296A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12638  00296C                     
 12639                           ; BSR set to: 0
 12640  00296C  502F               	movf	(___flmul@a+1)^0,w,c
 12641  00296E  022C               	mulwf	(___flmul@b+2)^0,c
 12642  002970  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12643  002976  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12644  00297C                     
 12645                           ; BSR set to: 0
 12646  00297C  516B               	movf	___flmul@temp& (0+255),w,b
 12647  00297E  2767               	addwf	___flmul@prod& (0+255),f,b
 12648  002980  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12649  002982  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12650  002984  0E00               	movlw	0
 12651  002986  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12652  002988  0E00               	movlw	0
 12653  00298A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12654  00298C  5030               	movf	(___flmul@a+2)^0,w,c
 12655  00298E  022C               	mulwf	(___flmul@b+2)^0,c
 12656  002990  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12657  002996  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12658  00299C                     
 12659                           ; BSR set to: 0
 12660  00299C  516B               	movf	___flmul@temp& (0+255),w,b
 12661  00299E  6E32               	movwf	??___flmul^0,c
 12662  0029A0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12663  0029A2  6E33               	movwf	(??___flmul+1)^0,c
 12664  0029A4  6A34               	clrf	(??___flmul+2)^0,c
 12665  0029A6  6A35               	clrf	(??___flmul+3)^0,c
 12666  0029A8  C034  F035         	movff	??___flmul+2,??___flmul+3
 12667  0029AC  C033  F034         	movff	??___flmul+1,??___flmul+2
 12668  0029B0  C032  F033         	movff	??___flmul,??___flmul+1
 12669  0029B4  6A32               	clrf	??___flmul^0,c
 12670  0029B6  5032               	movf	??___flmul^0,w,c
 12671  0029B8  2767               	addwf	___flmul@prod& (0+255),f,b
 12672  0029BA  5033               	movf	(??___flmul+1)^0,w,c
 12673  0029BC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12674  0029BE  5034               	movf	(??___flmul+2)^0,w,c
 12675  0029C0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12676  0029C2  5035               	movf	(??___flmul+3)^0,w,c
 12677  0029C4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12678  0029C6                     
 12679                           ; BSR set to: 0
 12680  0029C6  C062  F032         	movff	___flmul@grs,??___flmul
 12681  0029CA  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12682  0029CE  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12683  0029D2  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12684  0029D6  0E19               	movlw	25
 12685  0029D8  EFF3  F014         	goto	u8170
 12686  0029DC                     u8175:
 12687  0029DC  90D8               	bcf	status,0,c
 12688  0029DE  3235               	rrcf	(??___flmul+3)^0,f,c
 12689  0029E0  3234               	rrcf	(??___flmul+2)^0,f,c
 12690  0029E2  3233               	rrcf	(??___flmul+1)^0,f,c
 12691  0029E4  3232               	rrcf	??___flmul^0,f,c
 12692  0029E6                     u8170:
 12693  0029E6  2EE8               	decfsz	wreg,f,c
 12694  0029E8  EFEE  F014         	goto	u8175
 12695  0029EC  5032               	movf	??___flmul^0,w,c
 12696  0029EE  2767               	addwf	___flmul@prod& (0+255),f,b
 12697  0029F0  5033               	movf	(??___flmul+1)^0,w,c
 12698  0029F2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12699  0029F4  5034               	movf	(??___flmul+2)^0,w,c
 12700  0029F6  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12701  0029F8  5035               	movf	(??___flmul+3)^0,w,c
 12702  0029FA  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12703  0029FC                     
 12704                           ; BSR set to: 0
 12705  0029FC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12706  002A00  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12707  002A04  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12708  002A08  6B62               	clrf	___flmul@grs& (0+255),b
 12709  002A0A                     
 12710                           ; BSR set to: 0
 12711  002A0A  5161               	movf	___flmul@aexp& (0+255),w,b
 12712  002A0C  C066  F032         	movff	___flmul@bexp,??___flmul
 12713  002A10  6A33               	clrf	(??___flmul+1)^0,c
 12714  002A12  2632               	addwf	??___flmul^0,f,c
 12715  002A14  0E00               	movlw	0
 12716  002A16  2233               	addwfc	(??___flmul+1)^0,f,c
 12717  002A18  0E82               	movlw	130
 12718  002A1A  2432               	addwf	??___flmul^0,w,c
 12719  002A1C  6F6B               	movwf	___flmul@temp& (0+255),b
 12720  002A1E  0EFF               	movlw	255
 12721  002A20  2033               	addwfc	(??___flmul+1)^0,w,c
 12722  002A22  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12723  002A24  EF29  F015         	goto	l7982
 12724  002A28                     l7976:
 12725                           
 12726                           ; BSR set to: 0
 12727  002A28  90D8               	bcf	status,0,c
 12728  002A2A  3767               	rlcf	___flmul@prod& (0+255),f,b
 12729  002A2C  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12730  002A2E  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12731  002A30  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12732  002A32                     
 12733                           ; BSR set to: 0
 12734  002A32  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12735  002A34  EF1E  F015         	goto	u8181
 12736  002A38  EF20  F015         	goto	u8180
 12737  002A3C                     u8181:
 12738  002A3C  EF21  F015         	goto	l2025
 12739  002A40                     u8180:
 12740  002A40                     
 12741                           ; BSR set to: 0
 12742  002A40  8167               	bsf	___flmul@prod& (0+255),0,b
 12743  002A42                     l2025:
 12744                           
 12745                           ; BSR set to: 0
 12746  002A42  90D8               	bcf	status,0,c
 12747  002A44  3762               	rlcf	___flmul@grs& (0+255),f,b
 12748  002A46  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12749  002A48  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12750  002A4A  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12751  002A4C  076B               	decf	___flmul@temp& (0+255),f,b
 12752  002A4E  A0D8               	btfss	status,0,c
 12753  002A50  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12754  002A52                     l7982:
 12755                           
 12756                           ; BSR set to: 0
 12757  002A52  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12758  002A54  EF2E  F015         	goto	u8191
 12759  002A58  EF30  F015         	goto	u8190
 12760  002A5C                     u8191:
 12761  002A5C  EF14  F015         	goto	l7976
 12762  002A60                     u8190:
 12763  002A60                     
 12764                           ; BSR set to: 0
 12765  002A60  0E00               	movlw	0
 12766  002A62  6F61               	movwf	___flmul@aexp& (0+255),b
 12767  002A64                     
 12768                           ; BSR set to: 0
 12769  002A64  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12770  002A66  EF37  F015         	goto	u8201
 12771  002A6A  EF39  F015         	goto	u8200
 12772  002A6E                     u8201:
 12773  002A6E  EF5D  F015         	goto	l2027
 12774  002A72                     u8200:
 12775  002A72                     
 12776                           ; BSR set to: 0
 12777  002A72  0EFF               	movlw	255
 12778  002A74  1562               	andwf	___flmul@grs& (0+255),w,b
 12779  002A76  6E32               	movwf	??___flmul^0,c
 12780  002A78  0EFF               	movlw	255
 12781  002A7A  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12782  002A7C  6E33               	movwf	(??___flmul+1)^0,c
 12783  002A7E  0EFF               	movlw	255
 12784  002A80  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12785  002A82  6E34               	movwf	(??___flmul+2)^0,c
 12786  002A84  0E7F               	movlw	127
 12787  002A86  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12788  002A88  6E35               	movwf	(??___flmul+3)^0,c
 12789  002A8A  5032               	movf	??___flmul^0,w,c
 12790  002A8C  1033               	iorwf	(??___flmul+1)^0,w,c
 12791  002A8E  1034               	iorwf	(??___flmul+2)^0,w,c
 12792  002A90  1035               	iorwf	(??___flmul+3)^0,w,c
 12793  002A92  B4D8               	btfsc	status,2,c
 12794  002A94  EF4E  F015         	goto	u8211
 12795  002A98  EF50  F015         	goto	u8210
 12796  002A9C                     u8211:
 12797  002A9C  EF54  F015         	goto	l2028
 12798  002AA0                     u8210:
 12799  002AA0                     l7990:
 12800                           
 12801                           ; BSR set to: 0
 12802  002AA0  0E01               	movlw	1
 12803  002AA2  6F61               	movwf	___flmul@aexp& (0+255),b
 12804  002AA4  EF5D  F015         	goto	l2027
 12805  002AA8                     l2028:
 12806                           
 12807                           ; BSR set to: 0
 12808  002AA8  A167               	btfss	___flmul@prod& (0+255),0,b
 12809  002AAA  EF59  F015         	goto	u8221
 12810  002AAE  EF5B  F015         	goto	u8220
 12811  002AB2                     u8221:
 12812  002AB2  EF5D  F015         	goto	l2027
 12813  002AB6                     u8220:
 12814  002AB6  EF50  F015         	goto	l7990
 12815  002ABA                     l2027:
 12816                           
 12817                           ; BSR set to: 0
 12818  002ABA  5161               	movf	___flmul@aexp& (0+255),w,b
 12819  002ABC  B4D8               	btfsc	status,2,c
 12820  002ABE  EF63  F015         	goto	u8231
 12821  002AC2  EF65  F015         	goto	u8230
 12822  002AC6                     u8231:
 12823  002AC6  EF89  F015         	goto	l8002
 12824  002ACA                     u8230:
 12825  002ACA                     
 12826                           ; BSR set to: 0
 12827  002ACA  0E01               	movlw	1
 12828  002ACC  2767               	addwf	___flmul@prod& (0+255),f,b
 12829  002ACE  0E00               	movlw	0
 12830  002AD0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12831  002AD2  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12832  002AD4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12833  002AD6                     
 12834                           ; BSR set to: 0
 12835  002AD6  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12836  002AD8  EF70  F015         	goto	u8241
 12837  002ADC  EF72  F015         	goto	u8240
 12838  002AE0                     u8241:
 12839  002AE0  EF89  F015         	goto	l8002
 12840  002AE4                     u8240:
 12841  002AE4                     
 12842                           ; BSR set to: 0
 12843  002AE4  C067  F032         	movff	___flmul@prod,??___flmul
 12844  002AE8  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12845  002AEC  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12846  002AF0  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12847  002AF4  3435               	rlcf	(??___flmul+3)^0,w,c
 12848  002AF6  3235               	rrcf	(??___flmul+3)^0,f,c
 12849  002AF8  3234               	rrcf	(??___flmul+2)^0,f,c
 12850  002AFA  3233               	rrcf	(??___flmul+1)^0,f,c
 12851  002AFC  3232               	rrcf	??___flmul^0,f,c
 12852  002AFE  C032  F067         	movff	??___flmul,___flmul@prod
 12853  002B02  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12854  002B06  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12855  002B0A  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12856  002B0E                     
 12857                           ; BSR set to: 0
 12858  002B0E  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12859  002B10  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12860  002B12                     l8002:
 12861                           
 12862                           ; BSR set to: 0
 12863  002B12  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12864  002B14  EF94  F015         	goto	u8251
 12865  002B18  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12866  002B1A  E108               	bnz	u8250
 12867  002B1C  296B               	incf	___flmul@temp& (0+255),w,b
 12868  002B1E  A0D8               	btfss	status,0,c
 12869  002B20  EF94  F015         	goto	u8251
 12870  002B24  EF96  F015         	goto	u8250
 12871  002B28                     u8251:
 12872  002B28  EFA0  F015         	goto	l8006
 12873  002B2C                     u8250:
 12874  002B2C                     
 12875                           ; BSR set to: 0
 12876  002B2C  0E00               	movlw	0
 12877  002B2E  6F67               	movwf	___flmul@prod& (0+255),b
 12878  002B30  0E00               	movlw	0
 12879  002B32  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12880  002B34  0E80               	movlw	128
 12881  002B36  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12882  002B38  0E7F               	movlw	127
 12883  002B3A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12884  002B3C  EFCE  F015         	goto	l8018
 12885  002B40                     l8006:
 12886                           
 12887                           ; BSR set to: 0
 12888  002B40  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12889  002B42  EFAD  F015         	goto	u8260
 12890  002B46  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12891  002B48  E106               	bnz	u8261
 12892  002B4A  056B               	decf	___flmul@temp& (0+255),w,b
 12893  002B4C  B0D8               	btfsc	status,0,c
 12894  002B4E  EFAB  F015         	goto	u8261
 12895  002B52  EFAD  F015         	goto	u8260
 12896  002B56                     u8261:
 12897  002B56  EFB9  F015         	goto	l2035
 12898  002B5A                     u8260:
 12899  002B5A                     
 12900                           ; BSR set to: 0
 12901  002B5A  0E00               	movlw	0
 12902  002B5C  6F67               	movwf	___flmul@prod& (0+255),b
 12903  002B5E  0E00               	movlw	0
 12904  002B60  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12905  002B62  0E00               	movlw	0
 12906  002B64  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12907  002B66  0E00               	movlw	0
 12908  002B68  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12909  002B6A  0E00               	movlw	0
 12910  002B6C  6F60               	movwf	___flmul@sign& (0+255),b
 12911  002B6E  EFCE  F015         	goto	l8018
 12912  002B72                     l2035:
 12913                           
 12914                           ; BSR set to: 0
 12915  002B72  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12916  002B76                     
 12917                           ; BSR set to: 0
 12918  002B76  0EFF               	movlw	255
 12919  002B78  1767               	andwf	___flmul@prod& (0+255),f,b
 12920  002B7A  0EFF               	movlw	255
 12921  002B7C  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12922  002B7E  0E7F               	movlw	127
 12923  002B80  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12924  002B82  0E00               	movlw	0
 12925  002B84  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12926  002B86                     
 12927                           ; BSR set to: 0
 12928  002B86  A166               	btfss	___flmul@bexp& (0+255),0,b
 12929  002B88  EFC8  F015         	goto	u8271
 12930  002B8C  EFCA  F015         	goto	u8270
 12931  002B90                     u8271:
 12932  002B90  EFCB  F015         	goto	l8016
 12933  002B94                     u8270:
 12934  002B94                     
 12935                           ; BSR set to: 0
 12936  002B94  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12937  002B96                     l8016:
 12938                           
 12939                           ; BSR set to: 0
 12940  002B96  90D8               	bcf	status,0,c
 12941  002B98  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12942  002B9A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12943  002B9C                     l8018:
 12944                           
 12945                           ; BSR set to: 0
 12946  002B9C  5160               	movf	___flmul@sign& (0+255),w,b
 12947  002B9E  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12948  002BA0                     
 12949                           ; BSR set to: 0
 12950  002BA0  C067  F02A         	movff	___flmul@prod,?___flmul
 12951  002BA4  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 12952  002BA8  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 12953  002BAC  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 12954  002BB0                     l2022:
 12955                           
 12956                           ; BSR set to: 0
 12957  002BB0  0012               	return		;funcret
 12958  002BB2                     __end_of___flmul:
 12959                           	callstack 0
 12960                           
 12961 ;; *************** function ___awdiv *****************
 12962 ;; Defined at:
 12963 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;  dividend        2   19[COMRAM] int 
 12966 ;;  divisor         2   21[COMRAM] int 
 12967 ;; Auto vars:     Size  Location     Type
 12968 ;;  quotient        2   25[COMRAM] int 
 12969 ;;  sign            1   24[COMRAM] unsigned char 
 12970 ;;  counter         1   23[COMRAM] unsigned char 
 12971 ;; Return value:  Size  Location     Type
 12972 ;;                  2   19[COMRAM] int 
 12973 ;; Registers used:
 12974 ;;		wreg, status,2, status,0
 12975 ;; Tracked objects:
 12976 ;;		On entry : 0/0
 12977 ;;		On exit  : 0/0
 12978 ;;		Unchanged: 0/0
 12979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;Total ram usage:        8 bytes
 12985 ;; Hardware stack levels used: 1
 12986 ;; Hardware stack levels required when called: 8
 12987 ;; This function calls:
 12988 ;;		Nothing
 12989 ;; This function is called by:
 12990 ;;		_calcMotorPow
 12991 ;;		_efgtoa
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           	psect	text48
 12996  004BEE                     __ptext48:
 12997                           	callstack 0
 12998  004BEE                     ___awdiv:
 12999                           	callstack 16
 13000  004BEE  0E00               	movlw	0
 13001  004BF0  6E19               	movwf	___awdiv@sign^0,c
 13002  004BF2  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 13003  004BF4  EF00  F026         	goto	u8280
 13004  004BF8  EFFE  F025         	goto	u8281
 13005  004BFC                     u8281:
 13006  004BFC  EF06  F026         	goto	l8038
 13007  004C00                     u8280:
 13008  004C00  6C16               	negf	___awdiv@divisor^0,c
 13009  004C02  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 13010  004C04  B0D8               	btfsc	status,0,c
 13011  004C06  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 13012  004C08  0E01               	movlw	1
 13013  004C0A  6E19               	movwf	___awdiv@sign^0,c
 13014  004C0C                     l8038:
 13015  004C0C  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 13016  004C0E  EF0D  F026         	goto	u8290
 13017  004C12  EF0B  F026         	goto	u8291
 13018  004C16                     u8291:
 13019  004C16  EF13  F026         	goto	l8044
 13020  004C1A                     u8290:
 13021  004C1A  6C14               	negf	___awdiv@dividend^0,c
 13022  004C1C  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 13023  004C1E  B0D8               	btfsc	status,0,c
 13024  004C20  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 13025  004C22  0E01               	movlw	1
 13026  004C24  1A19               	xorwf	___awdiv@sign^0,f,c
 13027  004C26                     l8044:
 13028  004C26  0E00               	movlw	0
 13029  004C28  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 13030  004C2A  0E00               	movlw	0
 13031  004C2C  6E1A               	movwf	___awdiv@quotient^0,c
 13032  004C2E  5016               	movf	___awdiv@divisor^0,w,c
 13033  004C30  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 13034  004C32  B4D8               	btfsc	status,2,c
 13035  004C34  EF1E  F026         	goto	u8301
 13036  004C38  EF20  F026         	goto	u8300
 13037  004C3C                     u8301:
 13038  004C3C  EF48  F026         	goto	l8066
 13039  004C40                     u8300:
 13040  004C40  0E01               	movlw	1
 13041  004C42  6E18               	movwf	___awdiv@counter^0,c
 13042  004C44  EF28  F026         	goto	l8052
 13043  004C48                     l8050:
 13044  004C48  90D8               	bcf	status,0,c
 13045  004C4A  3616               	rlcf	___awdiv@divisor^0,f,c
 13046  004C4C  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 13047  004C4E  2A18               	incf	___awdiv@counter^0,f,c
 13048  004C50                     l8052:
 13049  004C50  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 13050  004C52  EF2D  F026         	goto	u8311
 13051  004C56  EF2F  F026         	goto	u8310
 13052  004C5A                     u8311:
 13053  004C5A  EF24  F026         	goto	l8050
 13054  004C5E                     u8310:
 13055  004C5E                     l8054:
 13056  004C5E  90D8               	bcf	status,0,c
 13057  004C60  361A               	rlcf	___awdiv@quotient^0,f,c
 13058  004C62  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13059  004C64  5016               	movf	___awdiv@divisor^0,w,c
 13060  004C66  5C14               	subwf	___awdiv@dividend^0,w,c
 13061  004C68  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13062  004C6A  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 13063  004C6C  A0D8               	btfss	status,0,c
 13064  004C6E  EF3B  F026         	goto	u8321
 13065  004C72  EF3D  F026         	goto	u8320
 13066  004C76                     u8321:
 13067  004C76  EF42  F026         	goto	l8062
 13068  004C7A                     u8320:
 13069  004C7A  5016               	movf	___awdiv@divisor^0,w,c
 13070  004C7C  5E14               	subwf	___awdiv@dividend^0,f,c
 13071  004C7E  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13072  004C80  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13073  004C82  801A               	bsf	___awdiv@quotient^0,0,c
 13074  004C84                     l8062:
 13075  004C84  90D8               	bcf	status,0,c
 13076  004C86  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13077  004C88  3216               	rrcf	___awdiv@divisor^0,f,c
 13078  004C8A  2E18               	decfsz	___awdiv@counter^0,f,c
 13079  004C8C  EF2F  F026         	goto	l8054
 13080  004C90                     l8066:
 13081  004C90  5019               	movf	___awdiv@sign^0,w,c
 13082  004C92  B4D8               	btfsc	status,2,c
 13083  004C94  EF4E  F026         	goto	u8331
 13084  004C98  EF50  F026         	goto	u8330
 13085  004C9C                     u8331:
 13086  004C9C  EF54  F026         	goto	l8070
 13087  004CA0                     u8330:
 13088  004CA0  6C1A               	negf	___awdiv@quotient^0,c
 13089  004CA2  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13090  004CA4  B0D8               	btfsc	status,0,c
 13091  004CA6  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13092  004CA8                     l8070:
 13093  004CA8  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13094  004CAC  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13095  004CB0  0012               	return		;funcret
 13096  004CB2                     __end_of___awdiv:
 13097                           	callstack 0
 13098                           
 13099 ;; *************** function _SYSTEM_Initialize *****************
 13100 ;; Defined at:
 13101 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;		None
 13104 ;; Auto vars:     Size  Location     Type
 13105 ;;		None
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  1    wreg      void 
 13108 ;; Registers used:
 13109 ;;		wreg, status,2, status,0, cstack
 13110 ;; Tracked objects:
 13111 ;;		On entry : 0/0
 13112 ;;		On exit  : 0/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13119 ;;Total ram usage:        0 bytes
 13120 ;; Hardware stack levels used: 1
 13121 ;; Hardware stack levels required when called: 10
 13122 ;; This function calls:
 13123 ;;		_ADCC_Initialize
 13124 ;;		_CCP3_Initialize
 13125 ;;		_CCP4_Initialize
 13126 ;;		_CLC3_Initialize
 13127 ;;		_INTERRUPT_Initialize
 13128 ;;		_OSCILLATOR_Initialize
 13129 ;;		_PIN_MANAGER_Initialize
 13130 ;;		_PMD_Initialize
 13131 ;;		_PWM5_Initialize
 13132 ;;		_PWM6_Initialize
 13133 ;;		_PWM7_Initialize
 13134 ;;		_PWM8_Initialize
 13135 ;;		_SMT1_Initialize
 13136 ;;		_TMR2_Initialize
 13137 ;;		_TMR3_Initialize
 13138 ;;		_TMR4_Initialize
 13139 ;;		_TMR5_Initialize
 13140 ;;		_UART1_Initialize
 13141 ;; This function is called by:
 13142 ;;		_main
 13143 ;; This function uses a non-reentrant model
 13144 ;;
 13145                           
 13146                           	psect	text49
 13147  0054F4                     __ptext49:
 13148                           	callstack 0
 13149  0054F4                     _SYSTEM_Initialize:
 13150                           	callstack 20
 13151  0054F4                     
 13152                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13153  0054F4  EC54  F02A         	call	_INTERRUPT_Initialize	;wreg free
 13154                           
 13155                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13156  0054F8  EC38  F02E         	call	_PMD_Initialize	;wreg free
 13157                           
 13158                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13159  0054FC  EC92  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 13160                           
 13161                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13162  005500  ECB9  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 13163  005504                     
 13164                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13165  005504  EC8A  F02D         	call	_CCP3_Initialize	;wreg free
 13166  005508                     
 13167                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13168  005508  ECFC  F029         	call	_ADCC_Initialize	;wreg free
 13169                           
 13170                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13171  00550C  ECB8  F02D         	call	_TMR4_Initialize	;wreg free
 13172  005510                     
 13173                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13174  005510  EC5B  F02D         	call	_SMT1_Initialize	;wreg free
 13175  005514                     
 13176                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13177  005514  EC89  F02E         	call	_PWM8_Initialize	;wreg free
 13178  005518                     
 13179                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13180  005518  EC7B  F02E         	call	_TMR2_Initialize	;wreg free
 13181  00551C                     
 13182                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13183  00551C  ECA1  F02E         	call	_PWM6_Initialize	;wreg free
 13184                           
 13185                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13186  005520  EC73  F02D         	call	_CCP4_Initialize	;wreg free
 13187  005524                     
 13188                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13189  005524  ECCE  F02D         	call	_CLC3_Initialize	;wreg free
 13190  005528                     
 13191                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13192  005528  EC01  F02C         	call	_TMR3_Initialize	;wreg free
 13193                           
 13194                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13195  00552C  ECAD  F02E         	call	_PWM5_Initialize	;wreg free
 13196  005530                     
 13197                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13198  005530  EC9F  F02A         	call	_TMR5_Initialize	;wreg free
 13199  005534                     
 13200                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13201  005534  EC95  F02E         	call	_PWM7_Initialize	;wreg free
 13202                           
 13203                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13204  005538  ECC7  F027         	call	_UART1_Initialize	;wreg free
 13205  00553C  0012               	return		;funcret
 13206  00553E                     __end_of_SYSTEM_Initialize:
 13207                           	callstack 0
 13208                           
 13209 ;; *************** function _UART1_Initialize *****************
 13210 ;; Defined at:
 13211 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;		None
 13214 ;; Auto vars:     Size  Location     Type
 13215 ;;		None
 13216 ;; Return value:  Size  Location     Type
 13217 ;;                  1    wreg      void 
 13218 ;; Registers used:
 13219 ;;		wreg, status,2, status,0, cstack
 13220 ;; Tracked objects:
 13221 ;;		On entry : 0/0
 13222 ;;		On exit  : 0/0
 13223 ;;		Unchanged: 0/0
 13224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13229 ;;Total ram usage:        0 bytes
 13230 ;; Hardware stack levels used: 1
 13231 ;; Hardware stack levels required when called: 9
 13232 ;; This function calls:
 13233 ;;		_UART1_SetErrorHandler
 13234 ;;		_UART1_SetFramingErrorHandler
 13235 ;;		_UART1_SetOverrunErrorHandler
 13236 ;;		_UART1_SetRxInterruptHandler
 13237 ;;		_UART1_SetTxInterruptHandler
 13238 ;; This function is called by:
 13239 ;;		_SYSTEM_Initialize
 13240 ;; This function uses a non-reentrant model
 13241 ;;
 13242                           
 13243                           	psect	text50
 13244  004F8E                     __ptext50:
 13245                           	callstack 0
 13246  004F8E                     _UART1_Initialize:
 13247                           	callstack 20
 13248  004F8E                     
 13249                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13250  004F8E  0139               	movlb	57	; () banked
 13251  004F90  9793               	bcf	147,3,b	;volatile
 13252  004F92                     
 13253                           ; BSR set to: 57
 13254                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13255  004F92  0E74               	movlw	low _UART1_Receive_ISR
 13256  004F94  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13257  004F96  0E4D               	movlw	high _UART1_Receive_ISR
 13258  004F98  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13259  004F9A  ECD6  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 13260  004F9E                     
 13261                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13262  004F9E  0139               	movlb	57	; () banked
 13263  004FA0  9993               	bcf	147,4,b	;volatile
 13264                           
 13265                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13266  004FA2  0E5E               	movlw	low _UART1_Transmit_ISR
 13267  004FA4  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13268  004FA6  0E56               	movlw	high _UART1_Transmit_ISR
 13269  004FA8  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13270  004FAA  ECD1  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 13271  004FAE                     
 13272                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13273  004FAE  0E00               	movlw	0
 13274  004FB0  013D               	movlb	61	; () banked
 13275  004FB2  6FEC               	movwf	236,b	;volatile
 13276  004FB4                     
 13277                           ; BSR set to: 61
 13278                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13279  004FB4  0E00               	movlw	0
 13280  004FB6  6FED               	movwf	237,b	;volatile
 13281  004FB8                     
 13282                           ; BSR set to: 61
 13283                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13284  004FB8  0E00               	movlw	0
 13285  004FBA  6FEE               	movwf	238,b	;volatile
 13286  004FBC                     
 13287                           ; BSR set to: 61
 13288                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13289  004FBC  0E00               	movlw	0
 13290  004FBE  6FEF               	movwf	239,b	;volatile
 13291  004FC0                     
 13292                           ; BSR set to: 61
 13293                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13294  004FC0  0E00               	movlw	0
 13295  004FC2  6FF0               	movwf	240,b	;volatile
 13296  004FC4                     
 13297                           ; BSR set to: 61
 13298                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13299  004FC4  0E00               	movlw	0
 13300  004FC6  6FF1               	movwf	241,b	;volatile
 13301  004FC8                     
 13302                           ; BSR set to: 61
 13303                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13304  004FC8  0EB0               	movlw	176
 13305  004FCA  6FF2               	movwf	242,b	;volatile
 13306  004FCC                     
 13307                           ; BSR set to: 61
 13308                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13309  004FCC  0E80               	movlw	128
 13310  004FCE  6FF3               	movwf	243,b	;volatile
 13311  004FD0                     
 13312                           ; BSR set to: 61
 13313                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13314  004FD0  0E00               	movlw	0
 13315  004FD2  6FF4               	movwf	244,b	;volatile
 13316  004FD4                     
 13317                           ; BSR set to: 61
 13318                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13319  004FD4  0E8A               	movlw	138
 13320  004FD6  6FF5               	movwf	245,b	;volatile
 13321  004FD8                     
 13322                           ; BSR set to: 61
 13323                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13324  004FD8  0E00               	movlw	0
 13325  004FDA  6FF6               	movwf	246,b	;volatile
 13326  004FDC                     
 13327                           ; BSR set to: 61
 13328                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13329  004FDC  0E00               	movlw	0
 13330  004FDE  6FF7               	movwf	247,b	;volatile
 13331  004FE0                     
 13332                           ; BSR set to: 61
 13333                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13334  004FE0  0E00               	movlw	0
 13335  004FE2  6FF8               	movwf	248,b	;volatile
 13336  004FE4                     
 13337                           ; BSR set to: 61
 13338                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13339  004FE4  0E00               	movlw	0
 13340  004FE6  6FF9               	movwf	249,b	;volatile
 13341  004FE8                     
 13342                           ; BSR set to: 61
 13343                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13344  004FE8  0E00               	movlw	0
 13345  004FEA  6FFA               	movwf	250,b	;volatile
 13346  004FEC                     
 13347                           ; BSR set to: 61
 13348                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13349  004FEC  0E0E               	movlw	low _UART1_DefaultFramingErrorHandler
 13350  004FEE  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13351  004FF0  0E5E               	movlw	high _UART1_DefaultFramingErrorHandler
 13352  004FF2  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13353  004FF4  ECE0  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 13354  004FF8                     
 13355                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13356  004FF8  0E0C               	movlw	low _UART1_DefaultOverrunErrorHandler
 13357  004FFA  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13358  004FFC  0E5E               	movlw	high _UART1_DefaultOverrunErrorHandler
 13359  004FFE  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13360  005000  ECDB  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13361  005004                     
 13362                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13363  005004  0E06               	movlw	low _UART1_DefaultErrorHandler
 13364  005006  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13365  005008  0E5E               	movlw	high _UART1_DefaultErrorHandler
 13366  00500A  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13367  00500C  ECE5  F02E         	call	_UART1_SetErrorHandler	;wreg free
 13368                           
 13369                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13370  005010  0E00               	movlw	0
 13371  005012  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13372                           
 13373                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13374  005014  0E00               	movlw	0
 13375  005016  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13376                           
 13377                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13378  005018  0E00               	movlw	0
 13379  00501A  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13380                           
 13381                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13382  00501C  0E08               	movlw	8
 13383  00501E  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13384                           
 13385                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13386  005020  0E00               	movlw	0
 13387  005022  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13388                           
 13389                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13390  005024  0E00               	movlw	0
 13391  005026  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13392                           
 13393                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13394  005028  0E00               	movlw	0
 13395  00502A  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13396  00502C                     
 13397                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13398  00502C  0139               	movlb	57	; () banked
 13399  00502E  8793               	bsf	147,3,b	;volatile
 13400  005030                     
 13401                           ; BSR set to: 57
 13402  005030  0012               	return		;funcret
 13403  005032                     __end_of_UART1_Initialize:
 13404                           	callstack 0
 13405                           
 13406 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13407 ;; Defined at:
 13408 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13409 ;; Parameters:    Size  Location     Type
 13410 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13411 ;;		 -> UART1_Transmit_ISR(1), 
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;		None
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  1    wreg      void 
 13416 ;; Registers used:
 13417 ;;		wreg, status,2, status,0
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13427 ;;Total ram usage:        2 bytes
 13428 ;; Hardware stack levels used: 1
 13429 ;; Hardware stack levels required when called: 8
 13430 ;; This function calls:
 13431 ;;		Nothing
 13432 ;; This function is called by:
 13433 ;;		_UART1_Initialize
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           	psect	text51
 13438  005DA2                     __ptext51:
 13439                           	callstack 0
 13440  005DA2                     _UART1_SetTxInterruptHandler:
 13441                           	callstack 20
 13442  005DA2                     
 13443                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13444  005DA2  C014  F19C         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13445  005DA6  C015  F19D         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13446  005DAA  0012               	return		;funcret
 13447  005DAC                     __end_of_UART1_SetTxInterruptHandler:
 13448                           	callstack 0
 13449                           
 13450 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13451 ;; Defined at:
 13452 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13455 ;;		 -> UART1_Receive_ISR(1), 
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, status,2, status,0
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;Total ram usage:        2 bytes
 13472 ;; Hardware stack levels used: 1
 13473 ;; Hardware stack levels required when called: 8
 13474 ;; This function calls:
 13475 ;;		Nothing
 13476 ;; This function is called by:
 13477 ;;		_UART1_Initialize
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text52
 13482  005DAC                     __ptext52:
 13483                           	callstack 0
 13484  005DAC                     _UART1_SetRxInterruptHandler:
 13485                           	callstack 20
 13486  005DAC                     
 13487                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13488  005DAC  C014  F19E         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13489  005DB0  C015  F19F         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13490  005DB4  0012               	return		;funcret
 13491  005DB6                     __end_of_UART1_SetRxInterruptHandler:
 13492                           	callstack 0
 13493                           
 13494 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13495 ;; Defined at:
 13496 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13499 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;		None
 13502 ;; Return value:  Size  Location     Type
 13503 ;;                  1    wreg      void 
 13504 ;; Registers used:
 13505 ;;		wreg, status,2, status,0
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 0/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13515 ;;Total ram usage:        2 bytes
 13516 ;; Hardware stack levels used: 1
 13517 ;; Hardware stack levels required when called: 8
 13518 ;; This function calls:
 13519 ;;		Nothing
 13520 ;; This function is called by:
 13521 ;;		_UART1_Initialize
 13522 ;; This function uses a non-reentrant model
 13523 ;;
 13524                           
 13525                           	psect	text53
 13526  005DB6                     __ptext53:
 13527                           	callstack 0
 13528  005DB6                     _UART1_SetOverrunErrorHandler:
 13529                           	callstack 20
 13530  005DB6                     
 13531                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13532  005DB6  C014  F198         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13533  005DBA  C015  F199         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13534  005DBE  0012               	return		;funcret
 13535  005DC0                     __end_of_UART1_SetOverrunErrorHandler:
 13536                           	callstack 0
 13537                           
 13538 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13539 ;; Defined at:
 13540 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13541 ;; Parameters:    Size  Location     Type
 13542 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13543 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13544 ;; Auto vars:     Size  Location     Type
 13545 ;;		None
 13546 ;; Return value:  Size  Location     Type
 13547 ;;                  1    wreg      void 
 13548 ;; Registers used:
 13549 ;;		wreg, status,2, status,0
 13550 ;; Tracked objects:
 13551 ;;		On entry : 0/0
 13552 ;;		On exit  : 0/0
 13553 ;;		Unchanged: 0/0
 13554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13559 ;;Total ram usage:        2 bytes
 13560 ;; Hardware stack levels used: 1
 13561 ;; Hardware stack levels required when called: 8
 13562 ;; This function calls:
 13563 ;;		Nothing
 13564 ;; This function is called by:
 13565 ;;		_UART1_Initialize
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           	psect	text54
 13570  005DC0                     __ptext54:
 13571                           	callstack 0
 13572  005DC0                     _UART1_SetFramingErrorHandler:
 13573                           	callstack 20
 13574  005DC0                     
 13575                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13576  005DC0  C014  F19A         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13577  005DC4  C015  F19B         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13578  005DC8  0012               	return		;funcret
 13579  005DCA                     __end_of_UART1_SetFramingErrorHandler:
 13580                           	callstack 0
 13581                           
 13582 ;; *************** function _UART1_SetErrorHandler *****************
 13583 ;; Defined at:
 13584 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13587 ;;		 -> UART1_DefaultErrorHandler(1), 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  1    wreg      void 
 13592 ;; Registers used:
 13593 ;;		wreg, status,2, status,0
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13603 ;;Total ram usage:        2 bytes
 13604 ;; Hardware stack levels used: 1
 13605 ;; Hardware stack levels required when called: 8
 13606 ;; This function calls:
 13607 ;;		Nothing
 13608 ;; This function is called by:
 13609 ;;		_UART1_Initialize
 13610 ;; This function uses a non-reentrant model
 13611 ;;
 13612                           
 13613                           	psect	text55
 13614  005DCA                     __ptext55:
 13615                           	callstack 0
 13616  005DCA                     _UART1_SetErrorHandler:
 13617                           	callstack 20
 13618  005DCA                     
 13619                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13620  005DCA  C014  F196         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13621  005DCE  C015  F197         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13622  005DD2  0012               	return		;funcret
 13623  005DD4                     __end_of_UART1_SetErrorHandler:
 13624                           	callstack 0
 13625                           
 13626 ;; *************** function _TMR5_Initialize *****************
 13627 ;; Defined at:
 13628 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13629 ;; Parameters:    Size  Location     Type
 13630 ;;		None
 13631 ;; Auto vars:     Size  Location     Type
 13632 ;;		None
 13633 ;; Return value:  Size  Location     Type
 13634 ;;                  1    wreg      void 
 13635 ;; Registers used:
 13636 ;;		wreg, status,2, status,0, cstack
 13637 ;; Tracked objects:
 13638 ;;		On entry : 0/0
 13639 ;;		On exit  : 0/0
 13640 ;;		Unchanged: 0/0
 13641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13646 ;;Total ram usage:        2 bytes
 13647 ;; Hardware stack levels used: 1
 13648 ;; Hardware stack levels required when called: 9
 13649 ;; This function calls:
 13650 ;;		_TMR5_SetGateInterruptHandler
 13651 ;; This function is called by:
 13652 ;;		_SYSTEM_Initialize
 13653 ;; This function uses a non-reentrant model
 13654 ;;
 13655                           
 13656                           	psect	text56
 13657  00553E                     __ptext56:
 13658                           	callstack 0
 13659  00553E                     _TMR5_Initialize:
 13660                           	callstack 20
 13661  00553E                     
 13662                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13663  00553E  0EC0               	movlw	192
 13664  005540  6E9B               	movwf	155,c	;volatile
 13665                           
 13666                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13667  005542  0E00               	movlw	0
 13668  005544  6E9C               	movwf	156,c	;volatile
 13669                           
 13670                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13671  005546  0E05               	movlw	5
 13672  005548  6E9D               	movwf	157,c	;volatile
 13673                           
 13674                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13675  00554A  0E00               	movlw	0
 13676  00554C  6E99               	movwf	153,c	;volatile
 13677                           
 13678                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13679  00554E  0E00               	movlw	0
 13680  005550  6E98               	movwf	152,c	;volatile
 13681  005552                     
 13682                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13683  005552  0139               	movlb	57	; () banked
 13684  005554  9DA8               	bcf	168,6,b	;volatile
 13685  005556                     
 13686                           ; BSR set to: 57
 13687                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13688  005556  5098               	movf	152,w,c	;volatile
 13689  005558  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13690  00555E  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13691  005560  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13692  005564  6A16               	clrf	??_TMR5_Initialize^0,c
 13693  005566  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13694  005568  0101               	movlb	1	; () banked
 13695  00556A  6F90               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13696  00556C  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13697  00556E  6F91               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13698  005570                     
 13699                           ; BSR set to: 1
 13700                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13701  005570  0139               	movlb	57	; () banked
 13702  005572  9FA8               	bcf	168,7,b	;volatile
 13703  005574                     
 13704                           ; BSR set to: 57
 13705                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13706  005574  8F98               	bsf	152,7,b	;volatile
 13707  005576                     
 13708                           ; BSR set to: 57
 13709                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13710  005576  0ED8               	movlw	low _TMR5_DefaultGateInterruptHandler
 13711  005578  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13712  00557A  0E5C               	movlw	high _TMR5_DefaultGateInterruptHandler
 13713  00557C  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13714  00557E  ECEA  F02E         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13715  005582                     
 13716                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13717  005582  0E03               	movlw	3
 13718  005584  6E9A               	movwf	154,c	;volatile
 13719  005586  0012               	return		;funcret
 13720  005588                     __end_of_TMR5_Initialize:
 13721                           	callstack 0
 13722                           
 13723 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13724 ;; Defined at:
 13725 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13726 ;; Parameters:    Size  Location     Type
 13727 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13728 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;		None
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      void 
 13733 ;; Registers used:
 13734 ;;		wreg, status,2, status,0
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13744 ;;Total ram usage:        2 bytes
 13745 ;; Hardware stack levels used: 1
 13746 ;; Hardware stack levels required when called: 8
 13747 ;; This function calls:
 13748 ;;		Nothing
 13749 ;; This function is called by:
 13750 ;;		_TMR5_Initialize
 13751 ;; This function uses a non-reentrant model
 13752 ;;
 13753                           
 13754                           	psect	text57
 13755  005DD4                     __ptext57:
 13756                           	callstack 0
 13757  005DD4                     _TMR5_SetGateInterruptHandler:
 13758                           	callstack 20
 13759  005DD4                     
 13760                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13761  005DD4  C014  F18E         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13762  005DD8  C015  F18F         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13763  005DDC  0012               	return		;funcret
 13764  005DDE                     __end_of_TMR5_SetGateInterruptHandler:
 13765                           	callstack 0
 13766                           
 13767 ;; *************** function _TMR4_Initialize *****************
 13768 ;; Defined at:
 13769 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13770 ;; Parameters:    Size  Location     Type
 13771 ;;		None
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;		None
 13774 ;; Return value:  Size  Location     Type
 13775 ;;                  1    wreg      void 
 13776 ;; Registers used:
 13777 ;;		wreg, status,2, status,0, cstack
 13778 ;; Tracked objects:
 13779 ;;		On entry : 0/0
 13780 ;;		On exit  : 0/0
 13781 ;;		Unchanged: 0/0
 13782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13787 ;;Total ram usage:        0 bytes
 13788 ;; Hardware stack levels used: 1
 13789 ;; Hardware stack levels required when called: 9
 13790 ;; This function calls:
 13791 ;;		_TMR4_SetInterruptHandler
 13792 ;; This function is called by:
 13793 ;;		_SYSTEM_Initialize
 13794 ;; This function uses a non-reentrant model
 13795 ;;
 13796                           
 13797                           	psect	text58
 13798  005B70                     __ptext58:
 13799                           	callstack 0
 13800  005B70                     _TMR4_Initialize:
 13801                           	callstack 20
 13802  005B70                     
 13803                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13804  005B70  0E01               	movlw	1
 13805  005B72  6EA2               	movwf	162,c	;volatile
 13806                           
 13807                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13808  005B74  0E00               	movlw	0
 13809  005B76  6EA1               	movwf	161,c	;volatile
 13810                           
 13811                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13812  005B78  0E00               	movlw	0
 13813  005B7A  6EA3               	movwf	163,c	;volatile
 13814                           
 13815                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13816  005B7C  0EF9               	movlw	249
 13817  005B7E  6E9F               	movwf	159,c	;volatile
 13818                           
 13819                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13820  005B80  0E00               	movlw	0
 13821  005B82  6E9E               	movwf	158,c	;volatile
 13822  005B84                     
 13823                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13824  005B84  0139               	movlb	57	; () banked
 13825  005B86  91A7               	bcf	167,0,b	;volatile
 13826  005B88                     
 13827                           ; BSR set to: 57
 13828                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13829  005B88  8197               	bsf	151,0,b	;volatile
 13830  005B8A                     
 13831                           ; BSR set to: 57
 13832                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13833  005B8A  0E10               	movlw	low _TMR4_DefaultInterruptHandler
 13834  005B8C  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13835  005B8E  0E5E               	movlw	high _TMR4_DefaultInterruptHandler
 13836  005B90  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13837  005B92  ECEF  F02E         	call	_TMR4_SetInterruptHandler	;wreg free
 13838  005B96                     
 13839                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13840  005B96  0EE0               	movlw	224
 13841  005B98  6EA0               	movwf	160,c	;volatile
 13842  005B9A  0012               	return		;funcret
 13843  005B9C                     __end_of_TMR4_Initialize:
 13844                           	callstack 0
 13845                           
 13846 ;; *************** function _TMR4_SetInterruptHandler *****************
 13847 ;; Defined at:
 13848 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13849 ;; Parameters:    Size  Location     Type
 13850 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13851 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;		None
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  1    wreg      void 
 13856 ;; Registers used:
 13857 ;;		wreg, status,2, status,0
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13867 ;;Total ram usage:        2 bytes
 13868 ;; Hardware stack levels used: 1
 13869 ;; Hardware stack levels required when called: 8
 13870 ;; This function calls:
 13871 ;;		Nothing
 13872 ;; This function is called by:
 13873 ;;		_TMR4_Initialize
 13874 ;;		_main
 13875 ;; This function uses a non-reentrant model
 13876 ;;
 13877                           
 13878                           	psect	text59
 13879  005DDE                     __ptext59:
 13880                           	callstack 0
 13881  005DDE                     _TMR4_SetInterruptHandler:
 13882                           	callstack 22
 13883  005DDE                     
 13884                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 13885  005DDE  C014  F18A         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 13886  005DE2  C015  F18B         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 13887  005DE6  0012               	return		;funcret
 13888  005DE8                     __end_of_TMR4_SetInterruptHandler:
 13889                           	callstack 0
 13890                           
 13891 ;; *************** function _TMR3_Initialize *****************
 13892 ;; Defined at:
 13893 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 13894 ;; Parameters:    Size  Location     Type
 13895 ;;		None
 13896 ;; Auto vars:     Size  Location     Type
 13897 ;;		None
 13898 ;; Return value:  Size  Location     Type
 13899 ;;                  1    wreg      void 
 13900 ;; Registers used:
 13901 ;;		wreg, status,2, status,0
 13902 ;; Tracked objects:
 13903 ;;		On entry : 0/0
 13904 ;;		On exit  : 0/0
 13905 ;;		Unchanged: 0/0
 13906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;Total ram usage:        2 bytes
 13912 ;; Hardware stack levels used: 1
 13913 ;; Hardware stack levels required when called: 8
 13914 ;; This function calls:
 13915 ;;		Nothing
 13916 ;; This function is called by:
 13917 ;;		_SYSTEM_Initialize
 13918 ;; This function uses a non-reentrant model
 13919 ;;
 13920                           
 13921                           	psect	text60
 13922  005802                     __ptext60:
 13923                           	callstack 0
 13924  005802                     _TMR3_Initialize:
 13925                           	callstack 21
 13926  005802                     
 13927                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 13928  005802  0E00               	movlw	0
 13929  005804  6EA7               	movwf	167,c	;volatile
 13930                           
 13931                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 13932  005806  0E00               	movlw	0
 13933  005808  6EA8               	movwf	168,c	;volatile
 13934                           
 13935                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 13936  00580A  0E05               	movlw	5
 13937  00580C  6EA9               	movwf	169,c	;volatile
 13938                           
 13939                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 13940  00580E  0E00               	movlw	0
 13941  005810  6EA5               	movwf	165,c	;volatile
 13942                           
 13943                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 13944  005812  0E00               	movlw	0
 13945  005814  6EA4               	movwf	164,c	;volatile
 13946  005816                     
 13947                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 13948  005816  0139               	movlb	57	; () banked
 13949  005818  9DA6               	bcf	166,6,b	;volatile
 13950  00581A                     
 13951                           ; BSR set to: 57
 13952                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13953  00581A  50A4               	movf	164,w,c	;volatile
 13954  00581C  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 13955  005822  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 13956  005824  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13957  005828  6A14               	clrf	??_TMR3_Initialize^0,c
 13958  00582A  1014               	iorwf	??_TMR3_Initialize^0,w,c
 13959  00582C  0101               	movlb	1	; () banked
 13960  00582E  6F8C               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13961  005830  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 13962  005832  6F8D               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13963  005834                     
 13964                           ; BSR set to: 1
 13965                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 13966  005834  0E01               	movlw	1
 13967  005836  6EA6               	movwf	166,c	;volatile
 13968  005838                     
 13969                           ; BSR set to: 1
 13970  005838  0012               	return		;funcret
 13971  00583A                     __end_of_TMR3_Initialize:
 13972                           	callstack 0
 13973                           
 13974 ;; *************** function _TMR2_Initialize *****************
 13975 ;; Defined at:
 13976 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;		None
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;		None
 13981 ;; Return value:  Size  Location     Type
 13982 ;;                  1    wreg      void 
 13983 ;; Registers used:
 13984 ;;		wreg, status,2
 13985 ;; Tracked objects:
 13986 ;;		On entry : 0/0
 13987 ;;		On exit  : 0/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;Total ram usage:        0 bytes
 13995 ;; Hardware stack levels used: 1
 13996 ;; Hardware stack levels required when called: 8
 13997 ;; This function calls:
 13998 ;;		Nothing
 13999 ;; This function is called by:
 14000 ;;		_SYSTEM_Initialize
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004                           	psect	text61
 14005  005CF6                     __ptext61:
 14006                           	callstack 0
 14007  005CF6                     _TMR2_Initialize:
 14008                           	callstack 21
 14009  005CF6                     
 14010                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 14011  005CF6  0E05               	movlw	5
 14012  005CF8  6EAE               	movwf	174,c	;volatile
 14013                           
 14014                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14015  005CFA  0E00               	movlw	0
 14016  005CFC  6EAD               	movwf	173,c	;volatile
 14017                           
 14018                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14019  005CFE  0E00               	movlw	0
 14020  005D00  6EAF               	movwf	175,c	;volatile
 14021  005D02                     
 14022                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 14023  005D02  68AB               	setf	171,c	;volatile
 14024                           
 14025                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14026  005D04  0E00               	movlw	0
 14027  005D06  6EAA               	movwf	170,c	;volatile
 14028  005D08                     
 14029                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14030  005D08  0139               	movlb	57	; () banked
 14031  005D0A  95A4               	bcf	164,2,b	;volatile
 14032                           
 14033                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14034  005D0C  0EB0               	movlw	176
 14035  005D0E  6EAC               	movwf	172,c	;volatile
 14036  005D10                     
 14037                           ; BSR set to: 57
 14038  005D10  0012               	return		;funcret
 14039  005D12                     __end_of_TMR2_Initialize:
 14040                           	callstack 0
 14041                           
 14042 ;; *************** function _SMT1_Initialize *****************
 14043 ;; Defined at:
 14044 ;;		line 60 in file "mcc_generated_files/smt1.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1    wreg      void 
 14051 ;; Registers used:
 14052 ;;		wreg, status,2
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 0/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;Total ram usage:        0 bytes
 14063 ;; Hardware stack levels used: 1
 14064 ;; Hardware stack levels required when called: 8
 14065 ;; This function calls:
 14066 ;;		Nothing
 14067 ;; This function is called by:
 14068 ;;		_SYSTEM_Initialize
 14069 ;; This function uses a non-reentrant model
 14070 ;;
 14071                           
 14072                           	psect	text62
 14073  005AB6                     __ptext62:
 14074                           	callstack 0
 14075  005AB6                     _SMT1_Initialize:
 14076                           	callstack 21
 14077  005AB6                     
 14078                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14079  005AB6  0E80               	movlw	128
 14080  005AB8  013F               	movlb	63	; () banked
 14081  005ABA  6F1E               	movwf	30,b	;volatile
 14082                           
 14083                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14084  005ABC  0E42               	movlw	66
 14085  005ABE  6F1F               	movwf	31,b	;volatile
 14086                           
 14087                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14088  005AC0  0E00               	movlw	0
 14089  005AC2  6F20               	movwf	32,b	;volatile
 14090                           
 14091                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14092  005AC4  0E04               	movlw	4
 14093  005AC6  6F21               	movwf	33,b	;volatile
 14094                           
 14095                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14096  005AC8  0E00               	movlw	0
 14097  005ACA  6F23               	movwf	35,b	;volatile
 14098                           
 14099                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14100  005ACC  0E00               	movlw	0
 14101  005ACE  6F22               	movwf	34,b	;volatile
 14102                           
 14103                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14104  005AD0  0E01               	movlw	1
 14105  005AD2  6F1D               	movwf	29,b	;volatile
 14106  005AD4                     
 14107                           ; BSR set to: 63
 14108                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14109  005AD4  691C               	setf	28,b	;volatile
 14110  005AD6                     
 14111                           ; BSR set to: 63
 14112                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14113  005AD6  691B               	setf	27,b	;volatile
 14114  005AD8                     
 14115                           ; BSR set to: 63
 14116                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14117  005AD8  0139               	movlb	57	; () banked
 14118  005ADA  8B91               	bsf	145,5,b	;volatile
 14119  005ADC                     
 14120                           ; BSR set to: 57
 14121                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14122  005ADC  8F91               	bsf	145,7,b	;volatile
 14123  005ADE                     
 14124                           ; BSR set to: 57
 14125                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14126  005ADE  8D91               	bsf	145,6,b	;volatile
 14127  005AE0                     
 14128                           ; BSR set to: 57
 14129                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14130  005AE0  013F               	movlb	63	; () banked
 14131  005AE2  8F1F               	bsf	31,7,b	;volatile
 14132  005AE4                     
 14133                           ; BSR set to: 63
 14134  005AE4  0012               	return		;funcret
 14135  005AE6                     __end_of_SMT1_Initialize:
 14136                           	callstack 0
 14137                           
 14138 ;; *************** function _PWM8_Initialize *****************
 14139 ;; Defined at:
 14140 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14141 ;; Parameters:    Size  Location     Type
 14142 ;;		None
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;		None
 14145 ;; Return value:  Size  Location     Type
 14146 ;;                  1    wreg      void 
 14147 ;; Registers used:
 14148 ;;		wreg, status,2
 14149 ;; Tracked objects:
 14150 ;;		On entry : 0/0
 14151 ;;		On exit  : 0/0
 14152 ;;		Unchanged: 0/0
 14153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14158 ;;Total ram usage:        0 bytes
 14159 ;; Hardware stack levels used: 1
 14160 ;; Hardware stack levels required when called: 8
 14161 ;; This function calls:
 14162 ;;		Nothing
 14163 ;; This function is called by:
 14164 ;;		_SYSTEM_Initialize
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text63
 14169  005D12                     __ptext63:
 14170                           	callstack 0
 14171  005D12                     _PWM8_Initialize:
 14172                           	callstack 21
 14173  005D12                     
 14174                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14175  005D12  0E80               	movlw	128
 14176  005D14  6E62               	movwf	98,c	;volatile
 14177                           
 14178                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14179  005D16  0E00               	movlw	0
 14180  005D18  6E61               	movwf	97,c	;volatile
 14181                           
 14182                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14183  005D1A  0E00               	movlw	0
 14184  005D1C  6E60               	movwf	96,c	;volatile
 14185                           
 14186                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14187  005D1E  013F               	movlb	63	; () banked
 14188  005D20  515F               	movf	95,w,b	;volatile
 14189  005D22  0B3F               	andlw	-193
 14190  005D24  0980               	iorlw	128
 14191  005D26  6F5F               	movwf	95,b	;volatile
 14192  005D28                     
 14193                           ; BSR set to: 63
 14194  005D28  0012               	return		;funcret
 14195  005D2A                     __end_of_PWM8_Initialize:
 14196                           	callstack 0
 14197                           
 14198 ;; *************** function _PWM7_Initialize *****************
 14199 ;; Defined at:
 14200 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14201 ;; Parameters:    Size  Location     Type
 14202 ;;		None
 14203 ;; Auto vars:     Size  Location     Type
 14204 ;;		None
 14205 ;; Return value:  Size  Location     Type
 14206 ;;                  1    wreg      void 
 14207 ;; Registers used:
 14208 ;;		wreg, status,2
 14209 ;; Tracked objects:
 14210 ;;		On entry : 0/0
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14218 ;;Total ram usage:        0 bytes
 14219 ;; Hardware stack levels used: 1
 14220 ;; Hardware stack levels required when called: 8
 14221 ;; This function calls:
 14222 ;;		Nothing
 14223 ;; This function is called by:
 14224 ;;		_SYSTEM_Initialize
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228                           	psect	text64
 14229  005D2A                     __ptext64:
 14230                           	callstack 0
 14231  005D2A                     _PWM7_Initialize:
 14232                           	callstack 21
 14233  005D2A                     
 14234                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14235  005D2A  0E80               	movlw	128
 14236  005D2C  6E66               	movwf	102,c	;volatile
 14237                           
 14238                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14239  005D2E  0E00               	movlw	0
 14240  005D30  6E65               	movwf	101,c	;volatile
 14241                           
 14242                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14243  005D32  0E00               	movlw	0
 14244  005D34  6E64               	movwf	100,c	;volatile
 14245                           
 14246                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14247  005D36  013F               	movlb	63	; () banked
 14248  005D38  515F               	movf	95,w,b	;volatile
 14249  005D3A  0BCF               	andlw	-49
 14250  005D3C  0920               	iorlw	32
 14251  005D3E  6F5F               	movwf	95,b	;volatile
 14252  005D40                     
 14253                           ; BSR set to: 63
 14254  005D40  0012               	return		;funcret
 14255  005D42                     __end_of_PWM7_Initialize:
 14256                           	callstack 0
 14257                           
 14258 ;; *************** function _PWM6_Initialize *****************
 14259 ;; Defined at:
 14260 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14261 ;; Parameters:    Size  Location     Type
 14262 ;;		None
 14263 ;; Auto vars:     Size  Location     Type
 14264 ;;		None
 14265 ;; Return value:  Size  Location     Type
 14266 ;;                  1    wreg      void 
 14267 ;; Registers used:
 14268 ;;		wreg, status,2
 14269 ;; Tracked objects:
 14270 ;;		On entry : 0/0
 14271 ;;		On exit  : 0/0
 14272 ;;		Unchanged: 0/0
 14273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14278 ;;Total ram usage:        0 bytes
 14279 ;; Hardware stack levels used: 1
 14280 ;; Hardware stack levels required when called: 8
 14281 ;; This function calls:
 14282 ;;		Nothing
 14283 ;; This function is called by:
 14284 ;;		_SYSTEM_Initialize
 14285 ;; This function uses a non-reentrant model
 14286 ;;
 14287                           
 14288                           	psect	text65
 14289  005D42                     __ptext65:
 14290                           	callstack 0
 14291  005D42                     _PWM6_Initialize:
 14292                           	callstack 21
 14293  005D42                     
 14294                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14295  005D42  0E80               	movlw	128
 14296  005D44  6E6A               	movwf	106,c	;volatile
 14297                           
 14298                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14299  005D46  0E59               	movlw	89
 14300  005D48  6E69               	movwf	105,c	;volatile
 14301                           
 14302                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14303  005D4A  0E40               	movlw	64
 14304  005D4C  6E68               	movwf	104,c	;volatile
 14305                           
 14306                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14307  005D4E  013F               	movlb	63	; () banked
 14308  005D50  515F               	movf	95,w,b	;volatile
 14309  005D52  0BF3               	andlw	-13
 14310  005D54  0904               	iorlw	4
 14311  005D56  6F5F               	movwf	95,b	;volatile
 14312  005D58                     
 14313                           ; BSR set to: 63
 14314  005D58  0012               	return		;funcret
 14315  005D5A                     __end_of_PWM6_Initialize:
 14316                           	callstack 0
 14317                           
 14318 ;; *************** function _PWM5_Initialize *****************
 14319 ;; Defined at:
 14320 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;		None
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;		None
 14325 ;; Return value:  Size  Location     Type
 14326 ;;                  1    wreg      void 
 14327 ;; Registers used:
 14328 ;;		wreg, status,2
 14329 ;; Tracked objects:
 14330 ;;		On entry : 0/0
 14331 ;;		On exit  : 0/0
 14332 ;;		Unchanged: 0/0
 14333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14338 ;;Total ram usage:        0 bytes
 14339 ;; Hardware stack levels used: 1
 14340 ;; Hardware stack levels required when called: 8
 14341 ;; This function calls:
 14342 ;;		Nothing
 14343 ;; This function is called by:
 14344 ;;		_SYSTEM_Initialize
 14345 ;; This function uses a non-reentrant model
 14346 ;;
 14347                           
 14348                           	psect	text66
 14349  005D5A                     __ptext66:
 14350                           	callstack 0
 14351  005D5A                     _PWM5_Initialize:
 14352                           	callstack 21
 14353  005D5A                     
 14354                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14355  005D5A  0E80               	movlw	128
 14356  005D5C  6E6E               	movwf	110,c	;volatile
 14357                           
 14358                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14359  005D5E  0E59               	movlw	89
 14360  005D60  6E6D               	movwf	109,c	;volatile
 14361                           
 14362                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14363  005D62  0E40               	movlw	64
 14364  005D64  6E6C               	movwf	108,c	;volatile
 14365                           
 14366                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14367  005D66  013F               	movlb	63	; () banked
 14368  005D68  515F               	movf	95,w,b	;volatile
 14369  005D6A  0BFC               	andlw	-4
 14370  005D6C  0901               	iorlw	1
 14371  005D6E  6F5F               	movwf	95,b	;volatile
 14372  005D70                     
 14373                           ; BSR set to: 63
 14374  005D70  0012               	return		;funcret
 14375  005D72                     __end_of_PWM5_Initialize:
 14376                           	callstack 0
 14377                           
 14378 ;; *************** function _PMD_Initialize *****************
 14379 ;; Defined at:
 14380 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14381 ;; Parameters:    Size  Location     Type
 14382 ;;		None
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;		None
 14385 ;; Return value:  Size  Location     Type
 14386 ;;                  1    wreg      void 
 14387 ;; Registers used:
 14388 ;;		wreg, status,2
 14389 ;; Tracked objects:
 14390 ;;		On entry : 0/0
 14391 ;;		On exit  : 0/0
 14392 ;;		Unchanged: 0/0
 14393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14398 ;;Total ram usage:        0 bytes
 14399 ;; Hardware stack levels used: 1
 14400 ;; Hardware stack levels required when called: 8
 14401 ;; This function calls:
 14402 ;;		Nothing
 14403 ;; This function is called by:
 14404 ;;		_SYSTEM_Initialize
 14405 ;; This function uses a non-reentrant model
 14406 ;;
 14407                           
 14408                           	psect	text67
 14409  005C70                     __ptext67:
 14410                           	callstack 0
 14411  005C70                     _PMD_Initialize:
 14412                           	callstack 21
 14413  005C70                     
 14414                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14415  005C70  0E00               	movlw	0
 14416  005C72  0139               	movlb	57	; () banked
 14417  005C74  6FC0               	movwf	192,b	;volatile
 14418                           
 14419                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14420  005C76  0E00               	movlw	0
 14421  005C78  6FC1               	movwf	193,b	;volatile
 14422                           
 14423                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14424  005C7A  0E00               	movlw	0
 14425  005C7C  6FC2               	movwf	194,b	;volatile
 14426                           
 14427                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14428  005C7E  0E00               	movlw	0
 14429  005C80  6FC3               	movwf	195,b	;volatile
 14430                           
 14431                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14432  005C82  0E00               	movlw	0
 14433  005C84  6FC4               	movwf	196,b	;volatile
 14434                           
 14435                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14436  005C86  0E00               	movlw	0
 14437  005C88  6FC5               	movwf	197,b	;volatile
 14438                           
 14439                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14440  005C8A  0E00               	movlw	0
 14441  005C8C  6FC6               	movwf	198,b	;volatile
 14442                           
 14443                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14444  005C8E  0E00               	movlw	0
 14445  005C90  6FC7               	movwf	199,b	;volatile
 14446  005C92                     
 14447                           ; BSR set to: 57
 14448  005C92  0012               	return		;funcret
 14449  005C94                     __end_of_PMD_Initialize:
 14450                           	callstack 0
 14451                           
 14452 ;; *************** function _PIN_MANAGER_Initialize *****************
 14453 ;; Defined at:
 14454 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;		None
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;		None
 14459 ;; Return value:  Size  Location     Type
 14460 ;;                  1    wreg      void 
 14461 ;; Registers used:
 14462 ;;		wreg, status,2
 14463 ;; Tracked objects:
 14464 ;;		On entry : 0/0
 14465 ;;		On exit  : 0/0
 14466 ;;		Unchanged: 0/0
 14467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14472 ;;Total ram usage:        0 bytes
 14473 ;; Hardware stack levels used: 1
 14474 ;; Hardware stack levels required when called: 8
 14475 ;; This function calls:
 14476 ;;		Nothing
 14477 ;; This function is called by:
 14478 ;;		_SYSTEM_Initialize
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482                           	psect	text68
 14483  004B24                     __ptext68:
 14484                           	callstack 0
 14485  004B24                     _PIN_MANAGER_Initialize:
 14486                           	callstack 21
 14487  004B24                     
 14488                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14489  004B24  0E00               	movlw	0
 14490  004B26  6EBE               	movwf	190,c	;volatile
 14491                           
 14492                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14493  004B28  0E00               	movlw	0
 14494  004B2A  6EBD               	movwf	189,c	;volatile
 14495                           
 14496                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14497  004B2C  0E24               	movlw	36
 14498  004B2E  6EBA               	movwf	186,c	;volatile
 14499                           
 14500                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14501  004B30  0E00               	movlw	0
 14502  004B32  6EBB               	movwf	187,c	;volatile
 14503                           
 14504                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14505  004B34  0E00               	movlw	0
 14506  004B36  6EBC               	movwf	188,c	;volatile
 14507                           
 14508                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14509  004B38  0E07               	movlw	7
 14510  004B3A  6EC6               	movwf	198,c	;volatile
 14511                           
 14512                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14513  004B3C  0EC0               	movlw	192
 14514  004B3E  6EC2               	movwf	194,c	;volatile
 14515                           
 14516                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14517  004B40  0EF7               	movlw	247
 14518  004B42  6EC3               	movwf	195,c	;volatile
 14519  004B44                     
 14520                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14521  004B44  68C4               	setf	196,c	;volatile
 14522  004B46                     
 14523                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14524  004B46  68C5               	setf	197,c	;volatile
 14525                           
 14526                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14527  004B48  0E1F               	movlw	31
 14528  004B4A  013A               	movlb	58	; () banked
 14529  004B4C  6F70               	movwf	112,b	;volatile
 14530  004B4E                     
 14531                           ; BSR set to: 58
 14532                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14533  004B4E  6960               	setf	96,b	;volatile
 14534                           
 14535                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14536  004B50  0EC0               	movlw	192
 14537  004B52  6F50               	movwf	80,b	;volatile
 14538                           
 14539                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14540  004B54  0E07               	movlw	7
 14541  004B56  6F80               	movwf	128,b	;volatile
 14542                           
 14543                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14544  004B58  0E7F               	movlw	127
 14545  004B5A  6F40               	movwf	64,b	;volatile
 14546                           
 14547                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14548  004B5C  0E00               	movlw	0
 14549  004B5E  6F71               	movwf	113,b	;volatile
 14550                           
 14551                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14552  004B60  0E00               	movlw	0
 14553  004B62  6F81               	movwf	129,b	;volatile
 14554                           
 14555                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14556  004B64  0E00               	movlw	0
 14557  004B66  6F51               	movwf	81,b	;volatile
 14558                           
 14559                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14560  004B68  0E00               	movlw	0
 14561  004B6A  6F41               	movwf	65,b	;volatile
 14562                           
 14563                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14564  004B6C  0E00               	movlw	0
 14565  004B6E  6F61               	movwf	97,b	;volatile
 14566                           
 14567                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14568  004B70  0E00               	movlw	0
 14569  004B72  6F5A               	movwf	90,b	;volatile
 14570                           
 14571                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14572  004B74  0E00               	movlw	0
 14573  004B76  6F5B               	movwf	91,b	;volatile
 14574                           
 14575                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14576  004B78  0E00               	movlw	0
 14577  004B7A  6F6A               	movwf	106,b	;volatile
 14578                           
 14579                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14580  004B7C  0E00               	movlw	0
 14581  004B7E  6F6B               	movwf	107,b	;volatile
 14582                           
 14583                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14584  004B80  0E00               	movlw	0
 14585  004B82  6F7A               	movwf	122,b	;volatile
 14586                           
 14587                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14588  004B84  0E00               	movlw	0
 14589  004B86  6F7B               	movwf	123,b	;volatile
 14590                           
 14591                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14592  004B88  0E00               	movlw	0
 14593  004B8A  6F82               	movwf	130,b	;volatile
 14594                           
 14595                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14596  004B8C  0E00               	movlw	0
 14597  004B8E  6F42               	movwf	66,b	;volatile
 14598                           
 14599                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14600  004B90  0E00               	movlw	0
 14601  004B92  6F52               	movwf	82,b	;volatile
 14602                           
 14603                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14604  004B94  0E00               	movlw	0
 14605  004B96  6F62               	movwf	98,b	;volatile
 14606                           
 14607                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14608  004B98  0E00               	movlw	0
 14609  004B9A  6F72               	movwf	114,b	;volatile
 14610  004B9C                     
 14611                           ; BSR set to: 58
 14612                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14613  004B9C  6943               	setf	67,b	;volatile
 14614  004B9E                     
 14615                           ; BSR set to: 58
 14616                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14617  004B9E  6953               	setf	83,b	;volatile
 14618  004BA0                     
 14619                           ; BSR set to: 58
 14620                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14621  004BA0  6963               	setf	99,b	;volatile
 14622  004BA2                     
 14623                           ; BSR set to: 58
 14624                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14625  004BA2  6973               	setf	115,b	;volatile
 14626                           
 14627                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14628  004BA4  0E07               	movlw	7
 14629  004BA6  6F83               	movwf	131,b	;volatile
 14630  004BA8                     
 14631                           ; BSR set to: 58
 14632                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14633  004BA8  6944               	setf	68,b	;volatile
 14634  004BAA                     
 14635                           ; BSR set to: 58
 14636                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14637  004BAA  6954               	setf	84,b	;volatile
 14638  004BAC                     
 14639                           ; BSR set to: 58
 14640                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14641  004BAC  6964               	setf	100,b	;volatile
 14642  004BAE                     
 14643                           ; BSR set to: 58
 14644                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14645  004BAE  6974               	setf	116,b	;volatile
 14646                           
 14647                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14648  004BB0  0E0F               	movlw	15
 14649  004BB2  6F84               	movwf	132,b	;volatile
 14650                           
 14651                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14652  004BB4  0E1F               	movlw	31
 14653  004BB6  6FCF               	movwf	207,b	;volatile
 14654                           
 14655                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14656  004BB8  0E09               	movlw	9
 14657  004BBA  6FDC               	movwf	220,b	;volatile
 14658                           
 14659                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14660  004BBC  0E0E               	movlw	14
 14661  004BBE  6F01               	movwf	1,b	;volatile
 14662                           
 14663                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14664  004BC0  0E0A               	movlw	10
 14665  004BC2  6FE5               	movwf	229,b	;volatile
 14666                           
 14667                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14668  004BC4  0E0D               	movlw	13
 14669  004BC6  6F00               	movwf	0,b	;volatile
 14670                           
 14671                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14672  004BC8  0E1D               	movlw	29
 14673  004BCA  6FC9               	movwf	201,b	;volatile
 14674                           
 14675                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14676  004BCC  0E10               	movlw	16
 14677  004BCE  6F04               	movwf	4,b	;volatile
 14678                           
 14679                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14680  004BD0  0E07               	movlw	7
 14681  004BD2  6FD9               	movwf	217,b	;volatile
 14682                           
 14683                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14684  004BD4  0E09               	movlw	9
 14685  004BD6  6FD1               	movwf	209,b	;volatile
 14686                           
 14687                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14688  004BD8  0E0F               	movlw	15
 14689  004BDA  6F03               	movwf	3,b	;volatile
 14690                           
 14691                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14692  004BDC  0E13               	movlw	19
 14693  004BDE  6F0B               	movwf	11,b	;volatile
 14694                           
 14695                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14696  004BE0  0E08               	movlw	8
 14697  004BE2  6FDB               	movwf	219,b	;volatile
 14698                           
 14699                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14700  004BE4  0E08               	movlw	8
 14701  004BE6  6FD2               	movwf	210,b	;volatile
 14702                           
 14703                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14704  004BE8  0E1E               	movlw	30
 14705  004BEA  6FD0               	movwf	208,b	;volatile
 14706  004BEC                     
 14707                           ; BSR set to: 58
 14708  004BEC  0012               	return		;funcret
 14709  004BEE                     __end_of_PIN_MANAGER_Initialize:
 14710                           	callstack 0
 14711                           
 14712 ;; *************** function _OSCILLATOR_Initialize *****************
 14713 ;; Defined at:
 14714 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14715 ;; Parameters:    Size  Location     Type
 14716 ;;		None
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;		None
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  1    wreg      void 
 14721 ;; Registers used:
 14722 ;;		wreg, status,2
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/0
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14732 ;;Total ram usage:        0 bytes
 14733 ;; Hardware stack levels used: 1
 14734 ;; Hardware stack levels required when called: 8
 14735 ;; This function calls:
 14736 ;;		Nothing
 14737 ;; This function is called by:
 14738 ;;		_SYSTEM_Initialize
 14739 ;; This function uses a non-reentrant model
 14740 ;;
 14741                           
 14742                           	psect	text69
 14743  005D72                     __ptext69:
 14744                           	callstack 0
 14745  005D72                     _OSCILLATOR_Initialize:
 14746                           	callstack 21
 14747  005D72                     
 14748                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14749  005D72  0E60               	movlw	96
 14750  005D74  0139               	movlb	57	; () banked
 14751  005D76  6FD9               	movwf	217,b	;volatile
 14752                           
 14753                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14754  005D78  0E00               	movlw	0
 14755  005D7A  6FDB               	movwf	219,b	;volatile
 14756                           
 14757                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14758  005D7C  0E00               	movlw	0
 14759  005D7E  6FDD               	movwf	221,b	;volatile
 14760                           
 14761                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14762  005D80  0E08               	movlw	8
 14763  005D82  6FDF               	movwf	223,b	;volatile
 14764                           
 14765                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14766  005D84  0E00               	movlw	0
 14767  005D86  6FDE               	movwf	222,b	;volatile
 14768  005D88                     
 14769                           ; BSR set to: 57
 14770  005D88  0012               	return		;funcret
 14771  005D8A                     __end_of_OSCILLATOR_Initialize:
 14772                           	callstack 0
 14773                           
 14774 ;; *************** function _INTERRUPT_Initialize *****************
 14775 ;; Defined at:
 14776 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14777 ;; Parameters:    Size  Location     Type
 14778 ;;		None
 14779 ;; Auto vars:     Size  Location     Type
 14780 ;;  state           1   19[COMRAM] _Bool 
 14781 ;; Return value:  Size  Location     Type
 14782 ;;                  1    wreg      void 
 14783 ;; Registers used:
 14784 ;;		wreg, status,2
 14785 ;; Tracked objects:
 14786 ;;		On entry : 0/0
 14787 ;;		On exit  : 0/0
 14788 ;;		Unchanged: 0/0
 14789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14794 ;;Total ram usage:        1 bytes
 14795 ;; Hardware stack levels used: 1
 14796 ;; Hardware stack levels required when called: 8
 14797 ;; This function calls:
 14798 ;;		Nothing
 14799 ;; This function is called by:
 14800 ;;		_SYSTEM_Initialize
 14801 ;; This function uses a non-reentrant model
 14802 ;;
 14803                           
 14804                           	psect	text70
 14805  0054A8                     __ptext70:
 14806                           	callstack 0
 14807  0054A8                     _INTERRUPT_Initialize:
 14808                           	callstack 21
 14809  0054A8                     
 14810                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14811  0054A8  8AD2               	bsf	210,5,c	;volatile
 14812  0054AA                     
 14813                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14814  0054AA  0E00               	movlw	0
 14815  0054AC  BED2               	btfsc	16338,7,c	;volatile
 14816  0054AE  0E01               	movlw	1
 14817  0054B0  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14818  0054B2                     
 14819                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14820  0054B2  9ED2               	bcf	16338,7,c	;volatile
 14821                           
 14822                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14823  0054B4  0E55               	movlw	85
 14824  0054B6  6ED4               	movwf	212,c	;volatile
 14825                           
 14826                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14827  0054B8  0EAA               	movlw	170
 14828  0054BA  6ED4               	movwf	212,c	;volatile
 14829  0054BC                     
 14830                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14831  0054BC  90D4               	bcf	212,0,c	;volatile
 14832                           
 14833                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14834  0054BE  0E00               	movlw	0
 14835  0054C0  6ED7               	movwf	215,c	;volatile
 14836                           
 14837                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14838  0054C2  0E00               	movlw	0
 14839  0054C4  6ED6               	movwf	214,c	;volatile
 14840                           
 14841                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14842  0054C6  0E08               	movlw	8
 14843  0054C8  6ED5               	movwf	213,c	;volatile
 14844                           
 14845                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14846  0054CA  0E55               	movlw	85
 14847  0054CC  6ED4               	movwf	212,c	;volatile
 14848                           
 14849                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14850  0054CE  0EAA               	movlw	170
 14851  0054D0  6ED4               	movwf	212,c	;volatile
 14852  0054D2                     
 14853                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14854  0054D2  80D4               	bsf	212,0,c	;volatile
 14855  0054D4                     
 14856                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14857  0054D4  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14858  0054D6  D002               	bra	u2805
 14859  0054D8  9ED2               	bcf	16338,7,c	;volatile
 14860  0054DA  D001               	bra	u2806
 14861  0054DC                     u2805:
 14862  0054DC  8ED2               	bsf	16338,7,c	;volatile
 14863  0054DE                     u2806:
 14864  0054DE                     
 14865                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14866  0054DE  0139               	movlb	57	; () banked
 14867  0054E0  9983               	bcf	131,4,b	;volatile
 14868  0054E2                     
 14869                           ; BSR set to: 57
 14870                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14871  0054E2  9783               	bcf	131,3,b	;volatile
 14872  0054E4                     
 14873                           ; BSR set to: 57
 14874                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 14875  0054E4  8F81               	bsf	129,7,b	;volatile
 14876  0054E6                     
 14877                           ; BSR set to: 57
 14878                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 14879  0054E6  8B81               	bsf	129,5,b	;volatile
 14880  0054E8                     
 14881                           ; BSR set to: 57
 14882                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 14883  0054E8  8D81               	bsf	129,6,b	;volatile
 14884  0054EA                     
 14885                           ; BSR set to: 57
 14886                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 14887  0054EA  818A               	bsf	138,0,b	;volatile
 14888  0054EC                     
 14889                           ; BSR set to: 57
 14890                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 14891  0054EC  8F88               	bsf	136,7,b	;volatile
 14892  0054EE                     
 14893                           ; BSR set to: 57
 14894                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 14895  0054EE  9187               	bcf	135,0,b	;volatile
 14896  0054F0                     
 14897                           ; BSR set to: 57
 14898                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 14899  0054F0  8389               	bsf	137,1,b	;volatile
 14900  0054F2                     
 14901                           ; BSR set to: 57
 14902  0054F2  0012               	return		;funcret
 14903  0054F4                     __end_of_INTERRUPT_Initialize:
 14904                           	callstack 0
 14905                           
 14906 ;; *************** function _CLC3_Initialize *****************
 14907 ;; Defined at:
 14908 ;;		line 58 in file "mcc_generated_files/clc3.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;		None
 14911 ;; Auto vars:     Size  Location     Type
 14912 ;;		None
 14913 ;; Return value:  Size  Location     Type
 14914 ;;                  1    wreg      void 
 14915 ;; Registers used:
 14916 ;;		wreg, status,2
 14917 ;; Tracked objects:
 14918 ;;		On entry : 0/0
 14919 ;;		On exit  : 0/0
 14920 ;;		Unchanged: 0/0
 14921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14926 ;;Total ram usage:        0 bytes
 14927 ;; Hardware stack levels used: 1
 14928 ;; Hardware stack levels required when called: 8
 14929 ;; This function calls:
 14930 ;;		Nothing
 14931 ;; This function is called by:
 14932 ;;		_SYSTEM_Initialize
 14933 ;; This function uses a non-reentrant model
 14934 ;;
 14935                           
 14936                           	psect	text71
 14937  005B9C                     __ptext71:
 14938                           	callstack 0
 14939  005B9C                     _CLC3_Initialize:
 14940                           	callstack 21
 14941  005B9C                     
 14942                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 14943  005B9C  0E00               	movlw	0
 14944  005B9E  013C               	movlb	60	; () banked
 14945  005BA0  6F61               	movwf	97,b	;volatile
 14946                           
 14947                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 14948  005BA2  0E03               	movlw	3
 14949  005BA4  6F62               	movwf	98,b	;volatile
 14950                           
 14951                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 14952  005BA6  0E02               	movlw	2
 14953  005BA8  6F63               	movwf	99,b	;volatile
 14954                           
 14955                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 14956  005BAA  0E00               	movlw	0
 14957  005BAC  6F64               	movwf	100,b	;volatile
 14958                           
 14959                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 14960  005BAE  0E00               	movlw	0
 14961  005BB0  6F65               	movwf	101,b	;volatile
 14962                           
 14963                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 14964  005BB2  0E02               	movlw	2
 14965  005BB4  6F66               	movwf	102,b	;volatile
 14966                           
 14967                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 14968  005BB6  0E08               	movlw	8
 14969  005BB8  6F67               	movwf	103,b	;volatile
 14970                           
 14971                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 14972  005BBA  0E00               	movlw	0
 14973  005BBC  6F68               	movwf	104,b	;volatile
 14974                           
 14975                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 14976  005BBE  0E00               	movlw	0
 14977  005BC0  6F69               	movwf	105,b	;volatile
 14978                           
 14979                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 14980  005BC2  0E85               	movlw	133
 14981  005BC4  6F60               	movwf	96,b	;volatile
 14982  005BC6                     
 14983                           ; BSR set to: 60
 14984  005BC6  0012               	return		;funcret
 14985  005BC8                     __end_of_CLC3_Initialize:
 14986                           	callstack 0
 14987                           
 14988 ;; *************** function _CCP4_Initialize *****************
 14989 ;; Defined at:
 14990 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 14991 ;; Parameters:    Size  Location     Type
 14992 ;;		None
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;		None
 14995 ;; Return value:  Size  Location     Type
 14996 ;;                  1    wreg      void 
 14997 ;; Registers used:
 14998 ;;		wreg, status,2, status,0, cstack
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15008 ;;Total ram usage:        0 bytes
 15009 ;; Hardware stack levels used: 1
 15010 ;; Hardware stack levels required when called: 9
 15011 ;; This function calls:
 15012 ;;		_CCP4_SetCallBack
 15013 ;; This function is called by:
 15014 ;;		_SYSTEM_Initialize
 15015 ;; This function uses a non-reentrant model
 15016 ;;
 15017                           
 15018                           	psect	text72
 15019  005AE6                     __ptext72:
 15020                           	callstack 0
 15021  005AE6                     _CCP4_Initialize:
 15022                           	callstack 20
 15023  005AE6                     
 15024                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 15025  005AE6  0E83               	movlw	131
 15026  005AE8  6E72               	movwf	114,c	;volatile
 15027                           
 15028                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 15029  005AEA  0E00               	movlw	0
 15030  005AEC  6E73               	movwf	115,c	;volatile
 15031                           
 15032                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 15033  005AEE  0E00               	movlw	0
 15034  005AF0  6E71               	movwf	113,c	;volatile
 15035                           
 15036                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 15037  005AF2  0E00               	movlw	0
 15038  005AF4  6E70               	movwf	112,c	;volatile
 15039  005AF6                     
 15040                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 15041  005AF6  0EE0               	movlw	low _CCP4_DefaultCallBack
 15042  005AF8  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 15043  005AFA  0E58               	movlw	high _CCP4_DefaultCallBack
 15044  005AFC  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 15045  005AFE  ECF4  F02E         	call	_CCP4_SetCallBack	;wreg free
 15046  005B02                     
 15047                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 15048  005B02  013F               	movlb	63	; () banked
 15049  005B04  515E               	movf	94,w,b	;volatile
 15050  005B06  0B3F               	andlw	-193
 15051  005B08  0980               	iorlw	128
 15052  005B0A  6F5E               	movwf	94,b	;volatile
 15053  005B0C                     
 15054                           ; BSR set to: 63
 15055                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 15056  005B0C  0139               	movlb	57	; () banked
 15057  005B0E  91AA               	bcf	170,0,b	;volatile
 15058  005B10                     
 15059                           ; BSR set to: 57
 15060                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 15061  005B10  819A               	bsf	154,0,b	;volatile
 15062  005B12                     
 15063                           ; BSR set to: 57
 15064  005B12  0012               	return		;funcret
 15065  005B14                     __end_of_CCP4_Initialize:
 15066                           	callstack 0
 15067                           
 15068 ;; *************** function _CCP4_SetCallBack *****************
 15069 ;; Defined at:
 15070 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15073 ;;		 -> CCP4_DefaultCallBack(1), 
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;		None
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  1    wreg      void 
 15078 ;; Registers used:
 15079 ;;		wreg, status,2, status,0
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15089 ;;Total ram usage:        2 bytes
 15090 ;; Hardware stack levels used: 1
 15091 ;; Hardware stack levels required when called: 8
 15092 ;; This function calls:
 15093 ;;		Nothing
 15094 ;; This function is called by:
 15095 ;;		_CCP4_Initialize
 15096 ;; This function uses a non-reentrant model
 15097 ;;
 15098                           
 15099                           	psect	text73
 15100  005DE8                     __ptext73:
 15101                           	callstack 0
 15102  005DE8                     _CCP4_SetCallBack:
 15103                           	callstack 20
 15104  005DE8                     
 15105                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15106  005DE8  C014  F192         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15107  005DEC  C015  F193         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15108  005DF0  0012               	return		;funcret
 15109  005DF2                     __end_of_CCP4_SetCallBack:
 15110                           	callstack 0
 15111                           
 15112 ;; *************** function _CCP3_Initialize *****************
 15113 ;; Defined at:
 15114 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;		None
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      void 
 15121 ;; Registers used:
 15122 ;;		wreg, status,2, status,0, cstack
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15132 ;;Total ram usage:        0 bytes
 15133 ;; Hardware stack levels used: 1
 15134 ;; Hardware stack levels required when called: 9
 15135 ;; This function calls:
 15136 ;;		_CCP3_SetCallBack
 15137 ;; This function is called by:
 15138 ;;		_SYSTEM_Initialize
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text74
 15143  005B14                     __ptext74:
 15144                           	callstack 0
 15145  005B14                     _CCP3_Initialize:
 15146                           	callstack 20
 15147  005B14                     
 15148                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15149  005B14  0E83               	movlw	131
 15150  005B16  6E76               	movwf	118,c	;volatile
 15151                           
 15152                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15153  005B18  0E00               	movlw	0
 15154  005B1A  6E77               	movwf	119,c	;volatile
 15155                           
 15156                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15157  005B1C  0E00               	movlw	0
 15158  005B1E  6E75               	movwf	117,c	;volatile
 15159                           
 15160                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15161  005B20  0E00               	movlw	0
 15162  005B22  6E74               	movwf	116,c	;volatile
 15163  005B24                     
 15164                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15165  005B24  0EAA               	movlw	low _CCP3_DefaultCallBack
 15166  005B26  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15167  005B28  0E58               	movlw	high _CCP3_DefaultCallBack
 15168  005B2A  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15169  005B2C  ECF9  F02E         	call	_CCP3_SetCallBack	;wreg free
 15170  005B30                     
 15171                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15172  005B30  013F               	movlb	63	; () banked
 15173  005B32  515E               	movf	94,w,b	;volatile
 15174  005B34  0BCF               	andlw	-49
 15175  005B36  0920               	iorlw	32
 15176  005B38  6F5E               	movwf	94,b	;volatile
 15177  005B3A                     
 15178                           ; BSR set to: 63
 15179                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15180  005B3A  0139               	movlb	57	; () banked
 15181  005B3C  93A9               	bcf	169,1,b	;volatile
 15182  005B3E                     
 15183                           ; BSR set to: 57
 15184                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15185  005B3E  8399               	bsf	153,1,b	;volatile
 15186  005B40                     
 15187                           ; BSR set to: 57
 15188  005B40  0012               	return		;funcret
 15189  005B42                     __end_of_CCP3_Initialize:
 15190                           	callstack 0
 15191                           
 15192 ;; *************** function _CCP3_SetCallBack *****************
 15193 ;; Defined at:
 15194 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15195 ;; Parameters:    Size  Location     Type
 15196 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15197 ;;		 -> CCP3_DefaultCallBack(1), 
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;		None
 15200 ;; Return value:  Size  Location     Type
 15201 ;;                  1    wreg      void 
 15202 ;; Registers used:
 15203 ;;		wreg, status,2, status,0
 15204 ;; Tracked objects:
 15205 ;;		On entry : 0/0
 15206 ;;		On exit  : 0/0
 15207 ;;		Unchanged: 0/0
 15208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15213 ;;Total ram usage:        2 bytes
 15214 ;; Hardware stack levels used: 1
 15215 ;; Hardware stack levels required when called: 8
 15216 ;; This function calls:
 15217 ;;		Nothing
 15218 ;; This function is called by:
 15219 ;;		_CCP3_Initialize
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text75
 15224  005DF2                     __ptext75:
 15225                           	callstack 0
 15226  005DF2                     _CCP3_SetCallBack:
 15227                           	callstack 20
 15228  005DF2                     
 15229                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15230  005DF2  C014  F194         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15231  005DF6  C015  F195         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15232  005DFA  0012               	return		;funcret
 15233  005DFC                     __end_of_CCP3_SetCallBack:
 15234                           	callstack 0
 15235                           
 15236 ;; *************** function _ADCC_Initialize *****************
 15237 ;; Defined at:
 15238 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15239 ;; Parameters:    Size  Location     Type
 15240 ;;		None
 15241 ;; Auto vars:     Size  Location     Type
 15242 ;;		None
 15243 ;; Return value:  Size  Location     Type
 15244 ;;                  1    wreg      void 
 15245 ;; Registers used:
 15246 ;;		wreg, status,2
 15247 ;; Tracked objects:
 15248 ;;		On entry : 0/0
 15249 ;;		On exit  : 0/0
 15250 ;;		Unchanged: 0/0
 15251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;Total ram usage:        0 bytes
 15257 ;; Hardware stack levels used: 1
 15258 ;; Hardware stack levels required when called: 8
 15259 ;; This function calls:
 15260 ;;		Nothing
 15261 ;; This function is called by:
 15262 ;;		_SYSTEM_Initialize
 15263 ;; This function uses a non-reentrant model
 15264 ;;
 15265                           
 15266                           	psect	text76
 15267  0053F8                     __ptext76:
 15268                           	callstack 0
 15269  0053F8                     _ADCC_Initialize:
 15270                           	callstack 21
 15271  0053F8                     
 15272                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15273  0053F8  0E00               	movlw	0
 15274  0053FA  013E               	movlb	62	; () banked
 15275  0053FC  6FDE               	movwf	222,b	;volatile
 15276                           
 15277                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15278  0053FE  0E00               	movlw	0
 15279  005400  6FDF               	movwf	223,b	;volatile
 15280                           
 15281                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15282  005402  0E00               	movlw	0
 15283  005404  6FE0               	movwf	224,b	;volatile
 15284                           
 15285                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15286  005406  0E00               	movlw	0
 15287  005408  6FE1               	movwf	225,b	;volatile
 15288                           
 15289                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15290  00540A  0E00               	movlw	0
 15291  00540C  6FE4               	movwf	228,b	;volatile
 15292                           
 15293                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15294  00540E  0E00               	movlw	0
 15295  005410  6FE5               	movwf	229,b	;volatile
 15296                           
 15297                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15298  005412  0E00               	movlw	0
 15299  005414  6FEA               	movwf	234,b	;volatile
 15300                           
 15301                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15302  005416  0E00               	movlw	0
 15303  005418  6FEC               	movwf	236,b	;volatile
 15304                           
 15305                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15306  00541A  0E00               	movlw	0
 15307  00541C  6FF1               	movwf	241,b	;volatile
 15308                           
 15309                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15310  00541E  0E58               	movlw	88
 15311  005420  6FF3               	movwf	243,b	;volatile
 15312                           
 15313                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15314  005422  0E02               	movlw	2
 15315  005424  6FF4               	movwf	244,b	;volatile
 15316                           
 15317                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15318  005426  0E00               	movlw	0
 15319  005428  6FF5               	movwf	245,b	;volatile
 15320                           
 15321                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15322  00542A  0E00               	movlw	0
 15323  00542C  6FF6               	movwf	246,b	;volatile
 15324                           
 15325                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15326  00542E  0E00               	movlw	0
 15327  005430  6FF7               	movwf	247,b	;volatile
 15328                           
 15329                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15330  005432  0E00               	movlw	0
 15331  005434  6FF9               	movwf	249,b	;volatile
 15332                           
 15333                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15334  005436  0E00               	movlw	0
 15335  005438  6FFA               	movwf	250,b	;volatile
 15336                           
 15337                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15338  00543A  0E00               	movlw	0
 15339  00543C  6FFB               	movwf	251,b	;volatile
 15340                           
 15341                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15342  00543E  0E00               	movlw	0
 15343  005440  6FFC               	movwf	252,b	;volatile
 15344                           
 15345                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15346  005442  0E00               	movlw	0
 15347  005444  6FFD               	movwf	253,b	;volatile
 15348                           
 15349                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15350  005446  0E00               	movlw	0
 15351  005448  6FFE               	movwf	254,b	;volatile
 15352                           
 15353                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15354  00544A  0E1F               	movlw	31
 15355  00544C  6FFF               	movwf	255,b	;volatile
 15356                           
 15357                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15358  00544E  0E84               	movlw	132
 15359  005450  6FF8               	movwf	248,b	;volatile
 15360  005452                     
 15361                           ; BSR set to: 62
 15362  005452  0012               	return		;funcret
 15363  005454                     __end_of_ADCC_Initialize:
 15364                           	callstack 0
 15365                           
 15366 ;; *************** function _UART1_tx_vect_isr *****************
 15367 ;; Defined at:
 15368 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15369 ;; Parameters:    Size  Location     Type
 15370 ;;		None
 15371 ;; Auto vars:     Size  Location     Type
 15372 ;;		None
 15373 ;; Return value:  Size  Location     Type
 15374 ;;                  1    wreg      void 
 15375 ;; Registers used:
 15376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15377 ;; Tracked objects:
 15378 ;;		On entry : 0/0
 15379 ;;		On exit  : 0/0
 15380 ;;		Unchanged: 0/0
 15381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15385 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15386 ;;Total ram usage:        1 bytes
 15387 ;; Hardware stack levels used: 1
 15388 ;; Hardware stack levels required when called: 5
 15389 ;; This function calls:
 15390 ;;		Absolute function
 15391 ;;		_UART1_Transmit_ISR
 15392 ;; This function is called by:
 15393 ;;		Interrupt level 1
 15394 ;; This function uses a non-reentrant model
 15395 ;;
 15396                           
 15397                           	psect	text77
 15398  00571C                     __ptext77:
 15399                           	callstack 0
 15400  00571C                     _UART1_tx_vect_isr:
 15401                           	callstack 13
 15402                           
 15403                           ; BSR set to: 62
 15404                           ;incstack = 0
 15405  00571C  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15406  005722                     
 15407                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15408  005722  0101               	movlb	1	; () banked
 15409  005724  519C               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15410  005726  119D               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15411  005728  B4D8               	btfsc	status,2,c
 15412  00572A  EF99  F02B         	goto	i1u704_21
 15413  00572E  EF9B  F02B         	goto	i1u704_20
 15414  005732                     i1u704_21:
 15415  005732  EFA7  F02B         	goto	i1l324
 15416  005736                     i1u704_20:
 15417  005736                     
 15418                           ; BSR set to: 1
 15419                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15420  005736  D802               	call	i1u705_28
 15421  005738  EFA7  F02B         	goto	i1u705_29
 15422  00573C                     i1u705_28:
 15423  00573C  0005               	push	
 15424  00573E  6EFA               	movwf	pclath,c
 15425  005740  519C               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15426  005742  6EFD               	movwf	tosl,c
 15427  005744  519D               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15428  005746  6EFE               	movwf	tosh,c
 15429  005748  6AFF               	clrf	tosu,c
 15430  00574A  50FA               	movf	pclath,w,c
 15431  00574C  0012               	return		;indir
 15432  00574E                     i1u705_29:
 15433  00574E                     i1l324:
 15434  00574E  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15435  005754  0011               	retfie		f
 15436  005756                     __end_of_UART1_tx_vect_isr:
 15437                           	callstack 0
 15438                           
 15439 ;; *************** function _UART1_Transmit_ISR *****************
 15440 ;; Defined at:
 15441 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15442 ;; Parameters:    Size  Location     Type
 15443 ;;		None
 15444 ;; Auto vars:     Size  Location     Type
 15445 ;;		None
 15446 ;; Return value:  Size  Location     Type
 15447 ;;                  1    wreg      void 
 15448 ;; Registers used:
 15449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15450 ;; Tracked objects:
 15451 ;;		On entry : 0/0
 15452 ;;		On exit  : 0/0
 15453 ;;		Unchanged: 0/0
 15454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15459 ;;Total ram usage:        0 bytes
 15460 ;; Hardware stack levels used: 1
 15461 ;; Hardware stack levels required when called: 4
 15462 ;; This function calls:
 15463 ;;		Nothing
 15464 ;; This function is called by:
 15465 ;;		_UART1_Initialize
 15466 ;;		_UART1_tx_vect_isr
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470                           	psect	text78
 15471  00565E                     __ptext78:
 15472                           	callstack 0
 15473  00565E                     _UART1_Transmit_ISR:
 15474                           	callstack 13
 15475  00565E                     
 15476                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15477  00565E  0E08               	movlw	8
 15478  005660  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15479  005662  EF35  F02B         	goto	i1u685_21
 15480  005666  EF37  F02B         	goto	i1u685_20
 15481  00566A                     i1u685_21:
 15482  00566A  EF4E  F02B         	goto	i1l333
 15483  00566E                     i1u685_20:
 15484  00566E                     
 15485                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15486  00566E  0E10               	movlw	low _uart1TxBuffer
 15487  005670  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15488  005672  6ED9               	movwf	fsr2l,c
 15489  005674  6ADA               	clrf	fsr2h,c
 15490  005676  0E01               	movlw	high _uart1TxBuffer
 15491  005678  22DA               	addwfc	fsr2h,f,c
 15492  00567A  50DF               	movf	indf2,w,c
 15493  00567C  013D               	movlb	61	; () banked
 15494  00567E  6FEA               	movwf	234,b	;volatile
 15495  005680                     
 15496                           ; BSR set to: 61
 15497  005680  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15498  005682                     
 15499                           ; BSR set to: 61
 15500                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15501  005682  0E07               	movlw	7
 15502  005684  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15503  005686  EF47  F02B         	goto	i1u686_21
 15504  00568A  EF49  F02B         	goto	i1u686_20
 15505  00568E                     i1u686_21:
 15506  00568E  EF4B  F02B         	goto	i1l7062
 15507  005692                     i1u686_20:
 15508  005692                     
 15509                           ; BSR set to: 61
 15510                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15511  005692  0E00               	movlw	0
 15512  005694  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15513  005696                     i1l7062:
 15514                           
 15515                           ; BSR set to: 61
 15516                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15517  005696  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15518                           
 15519                           ;mcc_generated_files/uart1.c: 264:     }
 15520  005698  EF50  F02B         	goto	i1l336
 15521  00569C                     i1l333:
 15522                           
 15523                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15524  00569C  0139               	movlb	57	; () banked
 15525  00569E  9993               	bcf	147,4,b	;volatile
 15526  0056A0                     i1l336:
 15527  0056A0  0012               	return		;funcret
 15528  0056A2                     __end_of_UART1_Transmit_ISR:
 15529                           	callstack 0
 15530                           
 15531 ;; *************** function _UART1_rx_vect_isr *****************
 15532 ;; Defined at:
 15533 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15534 ;; Parameters:    Size  Location     Type
 15535 ;;		None
 15536 ;; Auto vars:     Size  Location     Type
 15537 ;;		None
 15538 ;; Return value:  Size  Location     Type
 15539 ;;                  1    wreg      void 
 15540 ;; Registers used:
 15541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15542 ;; Tracked objects:
 15543 ;;		On entry : 0/0
 15544 ;;		On exit  : 0/0
 15545 ;;		Unchanged: 0/0
 15546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;Total ram usage:        1 bytes
 15552 ;; Hardware stack levels used: 1
 15553 ;; Hardware stack levels required when called: 7
 15554 ;; This function calls:
 15555 ;;		Absolute function
 15556 ;;		_UART1_Receive_ISR
 15557 ;; This function is called by:
 15558 ;;		Interrupt level 1
 15559 ;; This function uses a non-reentrant model
 15560 ;;
 15561                           
 15562                           	psect	text79
 15563  005758                     __ptext79:
 15564                           	callstack 0
 15565  005758                     _UART1_rx_vect_isr:
 15566                           	callstack 11
 15567                           
 15568                           ;incstack = 0
 15569  005758  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15570  00575E                     
 15571                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15572  00575E  0101               	movlb	1	; () banked
 15573  005760  519E               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15574  005762  119F               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15575  005764  B4D8               	btfsc	status,2,c
 15576  005766  EFB7  F02B         	goto	i1u706_21
 15577  00576A  EFB9  F02B         	goto	i1u706_20
 15578  00576E                     i1u706_21:
 15579  00576E  EFC5  F02B         	goto	i1l330
 15580  005772                     i1u706_20:
 15581  005772                     
 15582                           ; BSR set to: 1
 15583                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15584  005772  D802               	call	i1u707_28
 15585  005774  EFC5  F02B         	goto	i1u707_29
 15586  005778                     i1u707_28:
 15587  005778  0005               	push	
 15588  00577A  6EFA               	movwf	pclath,c
 15589  00577C  519E               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15590  00577E  6EFD               	movwf	tosl,c
 15591  005780  519F               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15592  005782  6EFE               	movwf	tosh,c
 15593  005784  6AFF               	clrf	tosu,c
 15594  005786  50FA               	movf	pclath,w,c
 15595  005788  0012               	return		;indir
 15596  00578A                     i1u707_29:
 15597  00578A                     i1l330:
 15598  00578A  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15599  005790  0011               	retfie		f
 15600  005792                     __end_of_UART1_rx_vect_isr:
 15601                           	callstack 0
 15602                           
 15603 ;; *************** function _UART1_Receive_ISR *****************
 15604 ;; Defined at:
 15605 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15606 ;; Parameters:    Size  Location     Type
 15607 ;;		None
 15608 ;; Auto vars:     Size  Location     Type
 15609 ;;		None
 15610 ;; Return value:  Size  Location     Type
 15611 ;;                  1    wreg      void 
 15612 ;; Registers used:
 15613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15614 ;; Tracked objects:
 15615 ;;		On entry : 0/0
 15616 ;;		On exit  : 0/0
 15617 ;;		Unchanged: 0/0
 15618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15623 ;;Total ram usage:        0 bytes
 15624 ;; Hardware stack levels used: 1
 15625 ;; Hardware stack levels required when called: 6
 15626 ;; This function calls:
 15627 ;;		Absolute function
 15628 ;;		_UART1_DefaultErrorHandler
 15629 ;;		_UART1_DefaultFramingErrorHandler
 15630 ;;		_UART1_DefaultOverrunErrorHandler
 15631 ;;		_UART1_RxDataHandler
 15632 ;; This function is called by:
 15633 ;;		_UART1_Initialize
 15634 ;;		_UART1_rx_vect_isr
 15635 ;; This function uses a non-reentrant model
 15636 ;;
 15637                           
 15638                           	psect	text80
 15639  004D74                     __ptext80:
 15640                           	callstack 0
 15641  004D74                     _UART1_Receive_ISR:
 15642                           	callstack 11
 15643  004D74                     
 15644                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15645  004D74  0E00               	movlw	low _uart1RxStatusBuffer
 15646  004D76  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15647  004D78  6ED9               	movwf	fsr2l,c
 15648  004D7A  6ADA               	clrf	fsr2h,c
 15649  004D7C  0E01               	movlw	high _uart1RxStatusBuffer
 15650  004D7E  22DA               	addwfc	fsr2h,f,c
 15651  004D80  0E00               	movlw	0
 15652  004D82  6EDF               	movwf	indf2,c
 15653  004D84                     
 15654                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15655  004D84  013D               	movlb	61	; () banked
 15656  004D86  A7F9               	btfss	249,3,b	;volatile
 15657  004D88  EFC8  F026         	goto	i1u687_21
 15658  004D8C  EFCA  F026         	goto	i1u687_20
 15659  004D90                     i1u687_21:
 15660  004D90  EFDE  F026         	goto	i1l7072
 15661  004D94                     i1u687_20:
 15662  004D94                     
 15663                           ; BSR set to: 61
 15664                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15665  004D94  0E00               	movlw	low _uart1RxStatusBuffer
 15666  004D96  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15667  004D98  6ED9               	movwf	fsr2l,c
 15668  004D9A  6ADA               	clrf	fsr2h,c
 15669  004D9C  0E01               	movlw	high _uart1RxStatusBuffer
 15670  004D9E  22DA               	addwfc	fsr2h,f,c
 15671  004DA0  0101               	movlb	1	; () banked
 15672  004DA2  82DF               	bsf	indf2,1,c
 15673  004DA4                     
 15674                           ; BSR set to: 1
 15675                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15676  004DA4  D802               	call	i1u688_28
 15677  004DA6  EFDE  F026         	goto	i1u688_29
 15678  004DAA                     i1u688_28:
 15679  004DAA  0005               	push	
 15680  004DAC  6EFA               	movwf	pclath,c
 15681  004DAE  519A               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15682  004DB0  6EFD               	movwf	tosl,c
 15683  004DB2  519B               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15684  004DB4  6EFE               	movwf	tosh,c
 15685  004DB6  6AFF               	clrf	tosu,c
 15686  004DB8  50FA               	movf	pclath,w,c
 15687  004DBA  0012               	return		;indir
 15688  004DBC                     i1u688_29:
 15689  004DBC                     i1l7072:
 15690                           
 15691                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15692  004DBC  013D               	movlb	61	; () banked
 15693  004DBE  A3F9               	btfss	249,1,b	;volatile
 15694  004DC0  EFE4  F026         	goto	i1u689_21
 15695  004DC4  EFE6  F026         	goto	i1u689_20
 15696  004DC8                     i1u689_21:
 15697  004DC8  EFFA  F026         	goto	i1l7078
 15698  004DCC                     i1u689_20:
 15699  004DCC                     
 15700                           ; BSR set to: 61
 15701                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15702  004DCC  0E00               	movlw	low _uart1RxStatusBuffer
 15703  004DCE  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15704  004DD0  6ED9               	movwf	fsr2l,c
 15705  004DD2  6ADA               	clrf	fsr2h,c
 15706  004DD4  0E01               	movlw	high _uart1RxStatusBuffer
 15707  004DD6  22DA               	addwfc	fsr2h,f,c
 15708  004DD8  0101               	movlb	1	; () banked
 15709  004DDA  84DF               	bsf	indf2,2,c
 15710  004DDC                     
 15711                           ; BSR set to: 1
 15712                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15713  004DDC  D802               	call	i1u690_28
 15714  004DDE  EFFA  F026         	goto	i1u690_29
 15715  004DE2                     i1u690_28:
 15716  004DE2  0005               	push	
 15717  004DE4  6EFA               	movwf	pclath,c
 15718  004DE6  5198               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15719  004DE8  6EFD               	movwf	tosl,c
 15720  004DEA  5199               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15721  004DEC  6EFE               	movwf	tosh,c
 15722  004DEE  6AFF               	clrf	tosu,c
 15723  004DF0  50FA               	movf	pclath,w,c
 15724  004DF2  0012               	return		;indir
 15725  004DF4                     i1u690_29:
 15726  004DF4                     i1l7078:
 15727                           
 15728                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15729  004DF4  0E00               	movlw	low _uart1RxStatusBuffer
 15730  004DF6  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15731  004DF8  6ED9               	movwf	fsr2l,c
 15732  004DFA  6ADA               	clrf	fsr2h,c
 15733  004DFC  0E01               	movlw	high _uart1RxStatusBuffer
 15734  004DFE  22DA               	addwfc	fsr2h,f,c
 15735  004E00  50DF               	movf	indf2,w,c
 15736  004E02  B4D8               	btfsc	status,2,c
 15737  004E04  EF06  F027         	goto	i1u691_21
 15738  004E08  EF08  F027         	goto	i1u691_20
 15739  004E0C                     i1u691_21:
 15740  004E0C  EF17  F027         	goto	i1l7082
 15741  004E10                     i1u691_20:
 15742  004E10                     
 15743                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15744  004E10  D802               	call	i1u692_28
 15745  004E12  EF15  F027         	goto	i1u692_29
 15746  004E16                     i1u692_28:
 15747  004E16  0005               	push	
 15748  004E18  6EFA               	movwf	pclath,c
 15749  004E1A  0101               	movlb	1	; () banked
 15750  004E1C  5196               	movf	_UART1_ErrorHandler& (0+255),w,b
 15751  004E1E  6EFD               	movwf	tosl,c
 15752  004E20  5197               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15753  004E22  6EFE               	movwf	tosh,c
 15754  004E24  6AFF               	clrf	tosu,c
 15755  004E26  50FA               	movf	pclath,w,c
 15756  004E28  0012               	return		;indir
 15757  004E2A                     i1u692_29:
 15758                           
 15759                           ;mcc_generated_files/uart1.c: 290:     } else {
 15760  004E2A  EF19  F027         	goto	i1l343
 15761  004E2E                     i1l7082:
 15762                           
 15763                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15764  004E2E  ECE4  F02D         	call	_UART1_RxDataHandler	;wreg free
 15765  004E32                     i1l343:
 15766  004E32  0012               	return		;funcret
 15767  004E34                     __end_of_UART1_Receive_ISR:
 15768                           	callstack 0
 15769                           
 15770 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15771 ;; Defined at:
 15772 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;		None
 15775 ;; Auto vars:     Size  Location     Type
 15776 ;;		None
 15777 ;; Return value:  Size  Location     Type
 15778 ;;                  1    wreg      void 
 15779 ;; Registers used:
 15780 ;;		None
 15781 ;; Tracked objects:
 15782 ;;		On entry : 0/0
 15783 ;;		On exit  : 0/0
 15784 ;;		Unchanged: 0/0
 15785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15790 ;;Total ram usage:        0 bytes
 15791 ;; Hardware stack levels used: 1
 15792 ;; Hardware stack levels required when called: 4
 15793 ;; This function calls:
 15794 ;;		Nothing
 15795 ;; This function is called by:
 15796 ;;		_UART1_Initialize
 15797 ;;		_UART1_Receive_ISR
 15798 ;; This function uses a non-reentrant model
 15799 ;;
 15800                           
 15801                           	psect	text81
 15802  005E0C                     __ptext81:
 15803                           	callstack 0
 15804  005E0C                     _UART1_DefaultOverrunErrorHandler:
 15805                           	callstack 12
 15806  005E0C  0012               	return		;funcret
 15807  005E0E                     __end_of_UART1_DefaultOverrunErrorHandler:
 15808                           	callstack 0
 15809                           
 15810 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15811 ;; Defined at:
 15812 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;		None
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;		None
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  1    wreg      void 
 15819 ;; Registers used:
 15820 ;;		None
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;Total ram usage:        0 bytes
 15831 ;; Hardware stack levels used: 1
 15832 ;; Hardware stack levels required when called: 4
 15833 ;; This function calls:
 15834 ;;		Nothing
 15835 ;; This function is called by:
 15836 ;;		_UART1_Initialize
 15837 ;;		_UART1_Receive_ISR
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841                           	psect	text82
 15842  005E0E                     __ptext82:
 15843                           	callstack 0
 15844  005E0E                     _UART1_DefaultFramingErrorHandler:
 15845                           	callstack 12
 15846  005E0E  0012               	return		;funcret
 15847  005E10                     __end_of_UART1_DefaultFramingErrorHandler:
 15848                           	callstack 0
 15849                           
 15850 ;; *************** function _UART1_DefaultErrorHandler *****************
 15851 ;; Defined at:
 15852 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15853 ;; Parameters:    Size  Location     Type
 15854 ;;		None
 15855 ;; Auto vars:     Size  Location     Type
 15856 ;;		None
 15857 ;; Return value:  Size  Location     Type
 15858 ;;                  1    wreg      void 
 15859 ;; Registers used:
 15860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15861 ;; Tracked objects:
 15862 ;;		On entry : 0/0
 15863 ;;		On exit  : 0/0
 15864 ;;		Unchanged: 0/0
 15865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15870 ;;Total ram usage:        0 bytes
 15871 ;; Hardware stack levels used: 1
 15872 ;; Hardware stack levels required when called: 5
 15873 ;; This function calls:
 15874 ;;		_UART1_RxDataHandler
 15875 ;; This function is called by:
 15876 ;;		_UART1_Initialize
 15877 ;;		_UART1_Receive_ISR
 15878 ;; This function uses a non-reentrant model
 15879 ;;
 15880                           
 15881                           	psect	text83
 15882  005E06                     __ptext83:
 15883                           	callstack 0
 15884  005E06                     _UART1_DefaultErrorHandler:
 15885                           	callstack 11
 15886  005E06                     
 15887                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15888  005E06  ECE4  F02D         	call	_UART1_RxDataHandler	;wreg free
 15889  005E0A  0012               	return		;funcret
 15890  005E0C                     __end_of_UART1_DefaultErrorHandler:
 15891                           	callstack 0
 15892                           
 15893 ;; *************** function _UART1_RxDataHandler *****************
 15894 ;; Defined at:
 15895 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15896 ;; Parameters:    Size  Location     Type
 15897 ;;		None
 15898 ;; Auto vars:     Size  Location     Type
 15899 ;;		None
 15900 ;; Return value:  Size  Location     Type
 15901 ;;                  1    wreg      void 
 15902 ;; Registers used:
 15903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15904 ;; Tracked objects:
 15905 ;;		On entry : 0/0
 15906 ;;		On exit  : 0/0
 15907 ;;		Unchanged: 0/0
 15908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15913 ;;Total ram usage:        0 bytes
 15914 ;; Hardware stack levels used: 1
 15915 ;; Hardware stack levels required when called: 4
 15916 ;; This function calls:
 15917 ;;		Nothing
 15918 ;; This function is called by:
 15919 ;;		_UART1_Receive_ISR
 15920 ;;		_UART1_DefaultErrorHandler
 15921 ;; This function uses a non-reentrant model
 15922 ;;
 15923                           
 15924                           	psect	text84
 15925  005BC8                     __ptext84:
 15926                           	callstack 0
 15927  005BC8                     _UART1_RxDataHandler:
 15928                           	callstack 12
 15929  005BC8                     
 15930                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15931  005BC8  0E08               	movlw	low _uart1RxBuffer
 15932  005BCA  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15933  005BCC  6ED9               	movwf	fsr2l,c
 15934  005BCE  6ADA               	clrf	fsr2h,c
 15935  005BD0  0E01               	movlw	high _uart1RxBuffer
 15936  005BD2  22DA               	addwfc	fsr2h,f,c
 15937  005BD4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15938  005BDA  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 15939  005BDC                     
 15940                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15941  005BDC  0E07               	movlw	7
 15942  005BDE  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 15943  005BE0  EFF4  F02D         	goto	i1u629_21
 15944  005BE4  EFF6  F02D         	goto	i1u629_20
 15945  005BE8                     i1u629_21:
 15946  005BE8  EFF8  F02D         	goto	i1l6508
 15947  005BEC                     i1u629_20:
 15948  005BEC                     
 15949                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15950  005BEC  0E00               	movlw	0
 15951  005BEE  6E45               	movwf	_uart1RxHead^0,c	;volatile
 15952  005BF0                     i1l6508:
 15953                           
 15954                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15955  005BF0  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 15956  005BF2  0012               	return		;funcret
 15957  005BF4                     __end_of_UART1_RxDataHandler:
 15958                           	callstack 0
 15959                           
 15960 ;; *************** function _TMR4_ISR *****************
 15961 ;; Defined at:
 15962 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 15963 ;; Parameters:    Size  Location     Type
 15964 ;;		None
 15965 ;; Auto vars:     Size  Location     Type
 15966 ;;		None
 15967 ;; Return value:  Size  Location     Type
 15968 ;;                  1    wreg      void 
 15969 ;; Registers used:
 15970 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15971 ;; Tracked objects:
 15972 ;;		On entry : 0/0
 15973 ;;		On exit  : 0/0
 15974 ;;		Unchanged: 0/0
 15975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15980 ;;Total ram usage:        1 bytes
 15981 ;; Hardware stack levels used: 1
 15982 ;; Hardware stack levels required when called: 6
 15983 ;; This function calls:
 15984 ;;		_TMR4_CallBack
 15985 ;; This function is called by:
 15986 ;;		Interrupt level 1
 15987 ;; This function uses a non-reentrant model
 15988 ;;
 15989                           
 15990                           	psect	text85
 15991  00583C                     __ptext85:
 15992                           	callstack 0
 15993  00583C                     _TMR4_ISR:
 15994                           	callstack 12
 15995                           
 15996                           ;incstack = 0
 15997  00583C  006F FF60  F013    	movff	status,??_TMR4_ISR
 15998  005842                     
 15999                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 16000  005842  0139               	movlb	57	; () banked
 16001  005844  91A7               	bcf	167,0,b	;volatile
 16002  005846                     
 16003                           ; BSR set to: 57
 16004                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 16005  005846  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 16006  005848  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 16007  00584A  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 16008  00584C  E109               	bnz	i1u712_20
 16009  00584E  0E0A               	movlw	10
 16010  005850  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 16011  005852  A0D8               	btfss	status,0,c
 16012  005854  EF2E  F02C         	goto	i1u712_21
 16013  005858  EF30  F02C         	goto	i1u712_20
 16014  00585C                     i1u712_21:
 16015  00585C  EF36  F02C         	goto	i1l688
 16016  005860                     i1u712_20:
 16017  005860                     
 16018                           ; BSR set to: 57
 16019                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 16020  005860  ECA1  F02D         	call	_TMR4_CallBack	;wreg free
 16021  005864                     
 16022                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 16023  005864  0E00               	movlw	0
 16024  005866  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 16025  005868  0E00               	movlw	0
 16026  00586A  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 16027  00586C                     i1l688:
 16028  00586C  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 16029  005872  0011               	retfie		f
 16030  005874                     __end_of_TMR4_ISR:
 16031                           	callstack 0
 16032                           
 16033 ;; *************** function _TMR4_CallBack *****************
 16034 ;; Defined at:
 16035 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;		None
 16038 ;; Auto vars:     Size  Location     Type
 16039 ;;		None
 16040 ;; Return value:  Size  Location     Type
 16041 ;;                  1    wreg      void 
 16042 ;; Registers used:
 16043 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16044 ;; Tracked objects:
 16045 ;;		On entry : 0/0
 16046 ;;		On exit  : 0/0
 16047 ;;		Unchanged: 0/0
 16048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16053 ;;Total ram usage:        0 bytes
 16054 ;; Hardware stack levels used: 1
 16055 ;; Hardware stack levels required when called: 5
 16056 ;; This function calls:
 16057 ;;		Absolute function
 16058 ;;		_TMR4_10msISR
 16059 ;;		_TMR4_DefaultInterruptHandler
 16060 ;; This function is called by:
 16061 ;;		_TMR4_ISR
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           	psect	text86
 16066  005B42                     __ptext86:
 16067                           	callstack 0
 16068  005B42                     _TMR4_CallBack:
 16069                           	callstack 12
 16070  005B42                     
 16071                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16072  005B42  0101               	movlb	1	; () banked
 16073  005B44  518A               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16074  005B46  118B               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16075  005B48  B4D8               	btfsc	status,2,c
 16076  005B4A  EFA9  F02D         	goto	i1u696_21
 16077  005B4E  EFAB  F02D         	goto	i1u696_20
 16078  005B52                     i1u696_21:
 16079  005B52  EFB7  F02D         	goto	i1l692
 16080  005B56                     i1u696_20:
 16081  005B56                     
 16082                           ; BSR set to: 1
 16083                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16084  005B56  D802               	call	i1u697_28
 16085  005B58  EFB7  F02D         	goto	i1u697_29
 16086  005B5C                     i1u697_28:
 16087  005B5C  0005               	push	
 16088  005B5E  6EFA               	movwf	pclath,c
 16089  005B60  518A               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16090  005B62  6EFD               	movwf	tosl,c
 16091  005B64  518B               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16092  005B66  6EFE               	movwf	tosh,c
 16093  005B68  6AFF               	clrf	tosu,c
 16094  005B6A  50FA               	movf	pclath,w,c
 16095  005B6C  0012               	return		;indir
 16096  005B6E                     i1u697_29:
 16097  005B6E                     i1l692:
 16098  005B6E  0012               	return		;funcret
 16099  005B70                     __end_of_TMR4_CallBack:
 16100                           	callstack 0
 16101                           
 16102 ;; *************** function _TMR4_10msISR *****************
 16103 ;; Defined at:
 16104 ;;		line 62 in file "main.c"
 16105 ;; Parameters:    Size  Location     Type
 16106 ;;		None
 16107 ;; Auto vars:     Size  Location     Type
 16108 ;;		None
 16109 ;; Return value:  Size  Location     Type
 16110 ;;                  1    wreg      void 
 16111 ;; Registers used:
 16112 ;;		status,2, status,0
 16113 ;; Tracked objects:
 16114 ;;		On entry : 0/0
 16115 ;;		On exit  : 0/0
 16116 ;;		Unchanged: 0/0
 16117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16122 ;;Total ram usage:        0 bytes
 16123 ;; Hardware stack levels used: 1
 16124 ;; Hardware stack levels required when called: 4
 16125 ;; This function calls:
 16126 ;;		Nothing
 16127 ;; This function is called by:
 16128 ;;		_main
 16129 ;;		_TMR4_CallBack
 16130 ;; This function uses a non-reentrant model
 16131 ;;
 16132                           
 16133                           	psect	text87
 16134  005DFC                     __ptext87:
 16135                           	callstack 0
 16136  005DFC                     _TMR4_10msISR:
 16137                           	callstack 12
 16138  005DFC                     
 16139                           ;main.c: 63:     ++cycle10ms;
 16140  005DFC  0100               	movlb	0	; () banked
 16141  005DFE  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 16142                           
 16143                           ;main.c: 64:     ++roundTimeCount;
 16144  005E00  4A3E               	infsnz	_roundTimeCount^0,f,c	;volatile
 16145  005E02  2A3F               	incf	(_roundTimeCount+1)^0,f,c	;volatile
 16146  005E04                     
 16147                           ; BSR set to: 0
 16148  005E04  0012               	return		;funcret
 16149  005E06                     __end_of_TMR4_10msISR:
 16150                           	callstack 0
 16151                           
 16152 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16153 ;; Defined at:
 16154 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;		None
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;		None
 16159 ;; Return value:  Size  Location     Type
 16160 ;;                  1    wreg      void 
 16161 ;; Registers used:
 16162 ;;		None
 16163 ;; Tracked objects:
 16164 ;;		On entry : 0/0
 16165 ;;		On exit  : 0/0
 16166 ;;		Unchanged: 0/0
 16167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16172 ;;Total ram usage:        0 bytes
 16173 ;; Hardware stack levels used: 1
 16174 ;; Hardware stack levels required when called: 4
 16175 ;; This function calls:
 16176 ;;		Nothing
 16177 ;; This function is called by:
 16178 ;;		_TMR4_Initialize
 16179 ;;		_TMR4_CallBack
 16180 ;; This function uses a non-reentrant model
 16181 ;;
 16182                           
 16183                           	psect	text88
 16184  005E10                     __ptext88:
 16185                           	callstack 0
 16186  005E10                     _TMR4_DefaultInterruptHandler:
 16187                           	callstack 12
 16188  005E10  0012               	return		;funcret
 16189  005E12                     __end_of_TMR4_DefaultInterruptHandler:
 16190                           	callstack 0
 16191                           
 16192 ;; *************** function _Default_ISR *****************
 16193 ;; Defined at:
 16194 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16195 ;; Parameters:    Size  Location     Type
 16196 ;;		None
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;		None
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      void 
 16201 ;; Registers used:
 16202 ;;		None
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16212 ;;Total ram usage:        0 bytes
 16213 ;; Hardware stack levels used: 1
 16214 ;; This function calls:
 16215 ;;		Nothing
 16216 ;; This function is called by:
 16217 ;;		Interrupt level 2
 16218 ;; This function uses a non-reentrant model
 16219 ;;
 16220                           
 16221                           	psect	text89
 16222  005E14                     __ptext89:
 16223                           	callstack 0
 16224  005E14                     _Default_ISR:
 16225                           	callstack 14
 16226  005E14  0011               	retfie		f
 16227  005E16                     __end_of_Default_ISR:
 16228                           	callstack 0
 16229                           
 16230 ;; *************** function _CCP3_CaptureISR *****************
 16231 ;; Defined at:
 16232 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16233 ;; Parameters:    Size  Location     Type
 16234 ;;		None
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  1    wreg      void 
 16239 ;; Registers used:
 16240 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16241 ;; Tracked objects:
 16242 ;;		On entry : 0/0
 16243 ;;		On exit  : 0/0
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;Total ram usage:        2 bytes
 16251 ;; Hardware stack levels used: 1
 16252 ;; Hardware stack levels required when called: 1
 16253 ;; This function calls:
 16254 ;;		Absolute function
 16255 ;;		_CCP3_DefaultCallBack
 16256 ;; This function is called by:
 16257 ;;		Interrupt level 2
 16258 ;; This function uses a non-reentrant model
 16259 ;;
 16260                           
 16261                           	psect	text90
 16262  0059E8                     __ptext90:
 16263                           	callstack 0
 16264  0059E8                     _CCP3_CaptureISR:
 16265                           	callstack 13
 16266  0059E8                     
 16267                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16268  0059E8  0139               	movlb	57	; () banked
 16269  0059EA  93A9               	bcf	169,1,b	;volatile
 16270                           
 16271                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16272  0059EC  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16273                           
 16274                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16275  0059F2  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16276  0059F8                     
 16277                           ; BSR set to: 57
 16278                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16279  0059F8  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16280  0059FC  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16281  005A00  D802               	call	i2u708_48
 16282  005A02  EF0D  F02D         	goto	i2u708_49
 16283  005A06                     i2u708_48:
 16284  005A06  0005               	push	
 16285  005A08  6EFA               	movwf	pclath,c
 16286  005A0A  0101               	movlb	1	; () banked
 16287  005A0C  5194               	movf	_CCP3_CallBack& (0+255),w,b
 16288  005A0E  6EFD               	movwf	tosl,c
 16289  005A10  5195               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16290  005A12  6EFE               	movwf	tosh,c
 16291  005A14  6AFF               	clrf	tosu,c
 16292  005A16  50FA               	movf	pclath,w,c
 16293  005A18  0012               	return		;indir
 16294  005A1A                     i2u708_49:
 16295  005A1A  0011               	retfie		f
 16296  005A1C                     __end_of_CCP3_CaptureISR:
 16297                           	callstack 0
 16298                           
 16299 ;; *************** function _CCP3_DefaultCallBack *****************
 16300 ;; Defined at:
 16301 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16302 ;; Parameters:    Size  Location     Type
 16303 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16304 ;; Auto vars:     Size  Location     Type
 16305 ;;		None
 16306 ;; Return value:  Size  Location     Type
 16307 ;;                  1    wreg      void 
 16308 ;; Registers used:
 16309 ;;		wreg, status,2, status,0
 16310 ;; Tracked objects:
 16311 ;;		On entry : 0/0
 16312 ;;		On exit  : 0/0
 16313 ;;		Unchanged: 0/0
 16314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16319 ;;Total ram usage:        2 bytes
 16320 ;; Hardware stack levels used: 1
 16321 ;; This function calls:
 16322 ;;		Nothing
 16323 ;; This function is called by:
 16324 ;;		_CCP3_Initialize
 16325 ;;		_CCP3_CaptureISR
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           	psect	text91
 16330  0058AA                     __ptext91:
 16331                           	callstack 0
 16332  0058AA                     _CCP3_DefaultCallBack:
 16333                           	callstack 13
 16334  0058AA                     
 16335                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16336  0058AA  AECD               	btfss	205,7,c	;volatile
 16337  0058AC  EF5A  F02C         	goto	i2u693_41
 16338  0058B0  EF5C  F02C         	goto	i2u693_40
 16339  0058B4                     i2u693_41:
 16340  0058B4  EF62  F02C         	goto	i2l7088
 16341  0058B8                     i2u693_40:
 16342  0058B8                     
 16343                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16344  0058B8  C001  F138         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16345  0058BC  C002  F139         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16346                           
 16347                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16348  0058C0  EF6F  F02C         	goto	i2l438
 16349  0058C4                     i2l7088:
 16350                           
 16351                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16352  0058C4  0101               	movlb	1	; () banked
 16353  0058C6  5138               	movf	_distLeftM& (0+255),w,b
 16354  0058C8  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16355  0058CA  0100               	movlb	0	; () banked
 16356  0058CC  6FF5               	movwf	_distLeft& (0+255),b	;volatile
 16357  0058CE  0101               	movlb	1	; () banked
 16358  0058D0  5139               	movf	(_distLeftM+1)& (0+255),w,b
 16359  0058D2  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16360  0058D4  0100               	movlb	0	; () banked
 16361  0058D6  6FF6               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16362  0058D8                     
 16363                           ; BSR set to: 0
 16364                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16365  0058D8  90D8               	bcf	status,0,c
 16366  0058DA  33F6               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16367  0058DC  33F5               	rrcf	_distLeft& (0+255),f,b	;volatile
 16368  0058DE                     i2l438:
 16369  0058DE  0012               	return		;funcret
 16370  0058E0                     __end_of_CCP3_DefaultCallBack:
 16371                           	callstack 0
 16372                           
 16373 ;; *************** function _CCP4_CaptureISR *****************
 16374 ;; Defined at:
 16375 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;		None
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      void 
 16382 ;; Registers used:
 16383 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16393 ;;Total ram usage:        2 bytes
 16394 ;; Hardware stack levels used: 1
 16395 ;; Hardware stack levels required when called: 1
 16396 ;; This function calls:
 16397 ;;		Absolute function
 16398 ;;		_CCP4_DefaultCallBack
 16399 ;; This function is called by:
 16400 ;;		Interrupt level 2
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           	psect	text92
 16405  005A1C                     __ptext92:
 16406                           	callstack 0
 16407  005A1C                     _CCP4_CaptureISR:
 16408                           	callstack 13
 16409  005A1C                     
 16410                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16411  005A1C  0139               	movlb	57	; () banked
 16412  005A1E  91AA               	bcf	170,0,b	;volatile
 16413                           
 16414                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16415  005A20  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16416                           
 16417                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16418  005A26  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16419  005A2C                     
 16420                           ; BSR set to: 57
 16421                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16422  005A2C  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16423  005A30  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16424  005A34  D802               	call	i2u709_48
 16425  005A36  EF27  F02D         	goto	i2u709_49
 16426  005A3A                     i2u709_48:
 16427  005A3A  0005               	push	
 16428  005A3C  6EFA               	movwf	pclath,c
 16429  005A3E  0101               	movlb	1	; () banked
 16430  005A40  5192               	movf	_CCP4_CallBack& (0+255),w,b
 16431  005A42  6EFD               	movwf	tosl,c
 16432  005A44  5193               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16433  005A46  6EFE               	movwf	tosh,c
 16434  005A48  6AFF               	clrf	tosu,c
 16435  005A4A  50FA               	movf	pclath,w,c
 16436  005A4C  0012               	return		;indir
 16437  005A4E                     i2u709_49:
 16438  005A4E  0011               	retfie		f
 16439  005A50                     __end_of_CCP4_CaptureISR:
 16440                           	callstack 0
 16441                           
 16442 ;; *************** function _CCP4_DefaultCallBack *****************
 16443 ;; Defined at:
 16444 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;		None
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1    wreg      void 
 16451 ;; Registers used:
 16452 ;;		wreg, status,2, status,0
 16453 ;; Tracked objects:
 16454 ;;		On entry : 0/0
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16462 ;;Total ram usage:        2 bytes
 16463 ;; Hardware stack levels used: 1
 16464 ;; This function calls:
 16465 ;;		Nothing
 16466 ;; This function is called by:
 16467 ;;		_CCP4_Initialize
 16468 ;;		_CCP4_CaptureISR
 16469 ;; This function uses a non-reentrant model
 16470 ;;
 16471                           
 16472                           	psect	text93
 16473  0058E0                     __ptext93:
 16474                           	callstack 0
 16475  0058E0                     _CCP4_DefaultCallBack:
 16476                           	callstack 13
 16477  0058E0                     
 16478                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16479  0058E0  ACCD               	btfss	205,6,c	;volatile
 16480  0058E2  EF75  F02C         	goto	i2u694_41
 16481  0058E6  EF77  F02C         	goto	i2u694_40
 16482  0058EA                     i2u694_41:
 16483  0058EA  EF7D  F02C         	goto	i2l7096
 16484  0058EE                     i2u694_40:
 16485  0058EE                     
 16486                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16487  0058EE  C005  F136         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16488  0058F2  C006  F137         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16489                           
 16490                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16491  0058F6  EF8A  F02C         	goto	i2l476
 16492  0058FA                     i2l7096:
 16493                           
 16494                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16495  0058FA  0101               	movlb	1	; () banked
 16496  0058FC  5136               	movf	_distRightM& (0+255),w,b
 16497  0058FE  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16498  005900  0100               	movlb	0	; () banked
 16499  005902  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16500  005904  0101               	movlb	1	; () banked
 16501  005906  5137               	movf	(_distRightM+1)& (0+255),w,b
 16502  005908  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16503  00590A  0100               	movlb	0	; () banked
 16504  00590C  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16505  00590E                     
 16506                           ; BSR set to: 0
 16507                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16508  00590E  90D8               	bcf	status,0,c
 16509  005910  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16510  005912  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16511  005914                     i2l476:
 16512  005914  0012               	return		;funcret
 16513  005916                     __end_of_CCP4_DefaultCallBack:
 16514                           	callstack 0
 16515                           
 16516 ;; *************** function _TMR5_GATE_ISR *****************
 16517 ;; Defined at:
 16518 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16519 ;; Parameters:    Size  Location     Type
 16520 ;;		None
 16521 ;; Auto vars:     Size  Location     Type
 16522 ;;		None
 16523 ;; Return value:  Size  Location     Type
 16524 ;;                  1    wreg      void 
 16525 ;; Registers used:
 16526 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16527 ;; Tracked objects:
 16528 ;;		On entry : 0/0
 16529 ;;		On exit  : 0/0
 16530 ;;		Unchanged: 0/0
 16531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16536 ;;Total ram usage:        0 bytes
 16537 ;; Hardware stack levels used: 1
 16538 ;; Hardware stack levels required when called: 3
 16539 ;; This function calls:
 16540 ;;		Absolute function
 16541 ;;		_TMR5_DefaultGateInterruptHandler
 16542 ;; This function is called by:
 16543 ;;		Interrupt level 2
 16544 ;; This function uses a non-reentrant model
 16545 ;;
 16546                           
 16547                           	psect	text94
 16548  005A84                     __ptext94:
 16549                           	callstack 0
 16550  005A84                     _TMR5_GATE_ISR:
 16551                           	callstack 11
 16552  005A84                     
 16553                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16554  005A84  0139               	movlb	57	; () banked
 16555  005A86  9FA8               	bcf	168,7,b	;volatile
 16556  005A88                     
 16557                           ; BSR set to: 57
 16558                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16559  005A88  0101               	movlb	1	; () banked
 16560  005A8A  518E               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16561  005A8C  118F               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16562  005A8E  B4D8               	btfsc	status,2,c
 16563  005A90  EF4C  F02D         	goto	i2u710_41
 16564  005A94  EF4E  F02D         	goto	i2u710_40
 16565  005A98                     i2u710_41:
 16566  005A98  EF5A  F02D         	goto	i2l552
 16567  005A9C                     i2u710_40:
 16568  005A9C                     
 16569                           ; BSR set to: 1
 16570                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16571  005A9C  D802               	call	i2u711_48
 16572  005A9E  EF5A  F02D         	goto	i2u711_49
 16573  005AA2                     i2u711_48:
 16574  005AA2  0005               	push	
 16575  005AA4  6EFA               	movwf	pclath,c
 16576  005AA6  518E               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16577  005AA8  6EFD               	movwf	tosl,c
 16578  005AAA  518F               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16579  005AAC  6EFE               	movwf	tosh,c
 16580  005AAE  6AFF               	clrf	tosu,c
 16581  005AB0  50FA               	movf	pclath,w,c
 16582  005AB2  0012               	return		;indir
 16583  005AB4                     i2u711_49:
 16584  005AB4                     i2l552:
 16585  005AB4  0011               	retfie		f
 16586  005AB6                     __end_of_TMR5_GATE_ISR:
 16587                           	callstack 0
 16588                           
 16589 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16590 ;; Defined at:
 16591 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;		None
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      void 
 16598 ;; Registers used:
 16599 ;;		wreg, status,2, status,0, cstack
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16609 ;;Total ram usage:        0 bytes
 16610 ;; Hardware stack levels used: 1
 16611 ;; Hardware stack levels required when called: 2
 16612 ;; This function calls:
 16613 ;;		_TMR5_ReadTimer
 16614 ;;		_TMR5_Reload
 16615 ;; This function is called by:
 16616 ;;		_TMR5_Initialize
 16617 ;;		_TMR5_GATE_ISR
 16618 ;; This function uses a non-reentrant model
 16619 ;;
 16620                           
 16621                           	psect	text95
 16622  005CD8                     __ptext95:
 16623                           	callstack 0
 16624  005CD8                     _TMR5_DefaultGateInterruptHandler:
 16625                           	callstack 11
 16626  005CD8                     
 16627                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16628  005CD8  EC4A  F02E         	call	_TMR5_ReadTimer	;wreg free
 16629  005CDC  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16630  005CE0  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16631  005CE4                     
 16632                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16633  005CE4  0100               	movlb	0	; () banked
 16634  005CE6  90D8               	bcf	status,0,c
 16635  005CE8  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16636  005CEA  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 16637  005CEC                     
 16638                           ; BSR set to: 0
 16639                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16640  005CEC  ECC5  F02E         	call	_TMR5_Reload	;wreg free
 16641  005CF0                     
 16642                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16643  005CF0  0139               	movlb	57	; () banked
 16644  005CF2  9FA8               	bcf	168,7,b	;volatile
 16645  005CF4                     
 16646                           ; BSR set to: 57
 16647  005CF4  0012               	return		;funcret
 16648  005CF6                     __end_of_TMR5_DefaultGateInterruptHandler:
 16649                           	callstack 0
 16650                           
 16651 ;; *************** function _TMR5_Reload *****************
 16652 ;; Defined at:
 16653 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;		None
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;		None
 16658 ;; Return value:  Size  Location     Type
 16659 ;;                  1    wreg      void 
 16660 ;; Registers used:
 16661 ;;		wreg, status,2, cstack
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16671 ;;Total ram usage:        0 bytes
 16672 ;; Hardware stack levels used: 1
 16673 ;; Hardware stack levels required when called: 1
 16674 ;; This function calls:
 16675 ;;		_TMR5_WriteTimer
 16676 ;; This function is called by:
 16677 ;;		_TMR5_DefaultGateInterruptHandler
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           	psect	text96
 16682  005D8A                     __ptext96:
 16683                           	callstack 0
 16684  005D8A                     _TMR5_Reload:
 16685                           	callstack 11
 16686  005D8A                     
 16687                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16688  005D8A  C190  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16689  005D8E  C191  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16690  005D92  ECFA  F02D         	call	_TMR5_WriteTimer	;wreg free
 16691  005D96  0012               	return		;funcret
 16692  005D98                     __end_of_TMR5_Reload:
 16693                           	callstack 0
 16694                           
 16695 ;; *************** function _TMR5_WriteTimer *****************
 16696 ;; Defined at:
 16697 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16698 ;; Parameters:    Size  Location     Type
 16699 ;;  timerVal        2    8[COMRAM] unsigned short 
 16700 ;; Auto vars:     Size  Location     Type
 16701 ;;		None
 16702 ;; Return value:  Size  Location     Type
 16703 ;;                  1    wreg      void 
 16704 ;; Registers used:
 16705 ;;		wreg, status,2
 16706 ;; Tracked objects:
 16707 ;;		On entry : 0/0
 16708 ;;		On exit  : 0/0
 16709 ;;		Unchanged: 0/0
 16710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16715 ;;Total ram usage:        2 bytes
 16716 ;; Hardware stack levels used: 1
 16717 ;; This function calls:
 16718 ;;		Nothing
 16719 ;; This function is called by:
 16720 ;;		_TMR5_Reload
 16721 ;; This function uses a non-reentrant model
 16722 ;;
 16723                           
 16724                           	psect	text97
 16725  005BF4                     __ptext97:
 16726                           	callstack 0
 16727  005BF4                     _TMR5_WriteTimer:
 16728                           	callstack 11
 16729  005BF4                     
 16730                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16731  005BF4  A49A               	btfss	154,2,c	;volatile
 16732  005BF6  EFFF  F02D         	goto	i2u630_41
 16733  005BFA  EF01  F02E         	goto	i2u630_40
 16734  005BFE                     i2u630_41:
 16735  005BFE  EF0A  F02E         	goto	i2l6526
 16736  005C02                     i2u630_40:
 16737  005C02                     
 16738                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16739  005C02  909A               	bcf	154,0,c	;volatile
 16740  005C04                     
 16741                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16742  005C04  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16743  005C06  6E99               	movwf	153,c	;volatile
 16744  005C08                     
 16745                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16746  005C08  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16747  005C0E                     
 16748                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16749  005C0E  809A               	bsf	154,0,c	;volatile
 16750                           
 16751                           ;mcc_generated_files/tmr5.c: 146:     }
 16752  005C10  EF0F  F02E         	goto	i2l534
 16753  005C14                     i2l6526:
 16754                           
 16755                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16756  005C14  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16757  005C16  6E99               	movwf	153,c	;volatile
 16758  005C18                     
 16759                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16760  005C18  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16761  005C1E                     i2l534:
 16762  005C1E  0012               	return		;funcret
 16763  005C20                     __end_of_TMR5_WriteTimer:
 16764                           	callstack 0
 16765                           
 16766 ;; *************** function _TMR5_ReadTimer *****************
 16767 ;; Defined at:
 16768 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16769 ;; Parameters:    Size  Location     Type
 16770 ;;		None
 16771 ;; Auto vars:     Size  Location     Type
 16772 ;;  readVal         2   12[COMRAM] unsigned short 
 16773 ;;  readValLow      1   15[COMRAM] unsigned char 
 16774 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16775 ;; Return value:  Size  Location     Type
 16776 ;;                  2    8[COMRAM] unsigned short 
 16777 ;; Registers used:
 16778 ;;		wreg, status,2
 16779 ;; Tracked objects:
 16780 ;;		On entry : 0/0
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16787 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16788 ;;Total ram usage:        8 bytes
 16789 ;; Hardware stack levels used: 1
 16790 ;; This function calls:
 16791 ;;		Nothing
 16792 ;; This function is called by:
 16793 ;;		_TMR5_DefaultGateInterruptHandler
 16794 ;; This function uses a non-reentrant model
 16795 ;;
 16796                           
 16797                           	psect	text98
 16798  005C94                     __ptext98:
 16799                           	callstack 0
 16800  005C94                     _TMR5_ReadTimer:
 16801                           	callstack 12
 16802  005C94                     
 16803                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16804  005C94  829A               	bsf	154,1,c	;volatile
 16805                           
 16806                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16807  005C96  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16808                           
 16809                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16810  005C9C  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16811  005CA2                     
 16812                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16813  005CA2  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16814  005CA4  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16815  005CA6  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16816  005CA8  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16817  005CAA  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16818  005CAE                     
 16819                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16820  005CAE  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16821  005CB2  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16822  005CB6  0012               	return		;funcret
 16823  005CB8                     __end_of_TMR5_ReadTimer:
 16824                           	callstack 0
 16825                           
 16826 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16827 ;; Defined at:
 16828 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16829 ;; Parameters:    Size  Location     Type
 16830 ;;		None
 16831 ;; Auto vars:     Size  Location     Type
 16832 ;;		None
 16833 ;; Return value:  Size  Location     Type
 16834 ;;                  1    wreg      void 
 16835 ;; Registers used:
 16836 ;;		wreg, status,2, status,0
 16837 ;; Tracked objects:
 16838 ;;		On entry : 0/0
 16839 ;;		On exit  : 0/0
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16846 ;;Total ram usage:        0 bytes
 16847 ;; Hardware stack levels used: 1
 16848 ;; This function calls:
 16849 ;;		Nothing
 16850 ;; This function is called by:
 16851 ;;		Interrupt level 2
 16852 ;; This function uses a non-reentrant model
 16853 ;;
 16854                           
 16855                           	psect	text99
 16856  005588                     __ptext99:
 16857                           	callstack 0
 16858  005588                     _SMT1_PR_ACQ_ISR:
 16859                           	callstack 14
 16860  005588                     
 16861                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16862  005588  0139               	movlb	57	; () banked
 16863  00558A  9DA1               	bcf	161,6,b	;volatile
 16864  00558C                     
 16865                           ; BSR set to: 57
 16866                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16867  00558C  013F               	movlb	63	; () banked
 16868  00558E  5115               	movf	21,w,b	;volatile
 16869  005590  6E48               	movwf	_smtPeriod^0,c	;volatile
 16870  005592  5116               	movf	22,w,b	;volatile
 16871  005594  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16872  005596  5117               	movf	23,w,b	;volatile
 16873  005598  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16874  00559A  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 16875  00559C                     
 16876                           ; BSR set to: 63
 16877                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 16878  00559C  013C               	movlb	60	; () banked
 16879  00559E  AB60               	btfss	96,5,b	;volatile
 16880  0055A0  EFD4  F02A         	goto	i2u713_41
 16881  0055A4  EFD6  F02A         	goto	i2u713_40
 16882  0055A8                     i2u713_41:
 16883  0055A8  EFDF  F02A         	goto	i2l7204
 16884  0055AC                     i2u713_40:
 16885  0055AC                     
 16886                           ; BSR set to: 60
 16887  0055AC  0E01               	movlw	1
 16888  0055AE  0101               	movlb	1	; () banked
 16889  0055B0  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16890  0055B2  0E00               	movlw	0
 16891  0055B4  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16892  0055B6  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16893  0055B8  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16894  0055BA  EFE8  F02A         	goto	i2l856
 16895  0055BE                     i2l7204:
 16896                           
 16897                           ; BSR set to: 60
 16898  0055BE  0EFF               	movlw	255
 16899  0055C0  0101               	movlb	1	; () banked
 16900  0055C2  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16901  0055C4  0EFF               	movlw	255
 16902  0055C6  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16903  0055C8  0EFF               	movlw	255
 16904  0055CA  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16905  0055CC  0EFF               	movlw	255
 16906  0055CE  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16907  0055D0                     i2l856:
 16908                           
 16909                           ; BSR set to: 1
 16910  0055D0  0011               	retfie		f
 16911  0055D2                     __end_of_SMT1_PR_ACQ_ISR:
 16912                           	callstack 0
 16913                           
 16914 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 16915 ;; Defined at:
 16916 ;;		line 203 in file "mcc_generated_files/smt1.c"
 16917 ;; Parameters:    Size  Location     Type
 16918 ;;		None
 16919 ;; Auto vars:     Size  Location     Type
 16920 ;;		None
 16921 ;; Return value:  Size  Location     Type
 16922 ;;                  1    wreg      void 
 16923 ;; Registers used:
 16924 ;;		wreg, status,2, status,0
 16925 ;; Tracked objects:
 16926 ;;		On entry : 0/0
 16927 ;;		On exit  : 0/0
 16928 ;;		Unchanged: 0/0
 16929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16934 ;;Total ram usage:        0 bytes
 16935 ;; Hardware stack levels used: 1
 16936 ;; This function calls:
 16937 ;;		Nothing
 16938 ;; This function is called by:
 16939 ;;		Interrupt level 2
 16940 ;; This function uses a non-reentrant model
 16941 ;;
 16942                           
 16943                           	psect	text100
 16944  005454                     __ptext100:
 16945                           	callstack 0
 16946  005454                     _SMT1_PW_ACQ_ISR:
 16947                           	callstack 14
 16948  005454                     
 16949                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 16950  005454  0139               	movlb	57	; () banked
 16951  005456  9FA1               	bcf	161,7,b	;volatile
 16952  005458                     
 16953                           ; BSR set to: 57
 16954                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 16955  005458  013F               	movlb	63	; () banked
 16956  00545A  5118               	movf	24,w,b	;volatile
 16957  00545C  0101               	movlb	1	; () banked
 16958  00545E  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16959  005460  013F               	movlb	63	; () banked
 16960  005462  5119               	movf	25,w,b	;volatile
 16961  005464  0101               	movlb	1	; () banked
 16962  005466  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16963  005468  013F               	movlb	63	; () banked
 16964  00546A  511A               	movf	26,w,b	;volatile
 16965  00546C  0101               	movlb	1	; () banked
 16966  00546E  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16967  005470  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 16968  005472                     
 16969                           ; BSR set to: 1
 16970                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 16971  005472  013C               	movlb	60	; () banked
 16972  005474  AB60               	btfss	96,5,b	;volatile
 16973  005476  EF3F  F02A         	goto	i2u714_41
 16974  00547A  EF41  F02A         	goto	i2u714_40
 16975  00547E                     i2u714_41:
 16976  00547E  EF4A  F02A         	goto	i2l7214
 16977  005482                     i2u714_40:
 16978  005482                     
 16979                           ; BSR set to: 60
 16980  005482  0E01               	movlw	1
 16981  005484  0101               	movlb	1	; () banked
 16982  005486  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16983  005488  0E00               	movlw	0
 16984  00548A  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16985  00548C  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16986  00548E  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16987  005490  EF53  F02A         	goto	i2l863
 16988  005494                     i2l7214:
 16989                           
 16990                           ; BSR set to: 60
 16991  005494  0EFF               	movlw	255
 16992  005496  0101               	movlb	1	; () banked
 16993  005498  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16994  00549A  0EFF               	movlw	255
 16995  00549C  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16996  00549E  0EFF               	movlw	255
 16997  0054A0  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16998  0054A2  0EFF               	movlw	255
 16999  0054A4  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17000  0054A6                     i2l863:
 17001                           
 17002                           ; BSR set to: 1
 17003  0054A6  0011               	retfie		f
 17004  0054A8                     __end_of_SMT1_PW_ACQ_ISR:
 17005                           	callstack 0
 17006                           
 17007 ;; *************** function _SMT1_Overflow_ISR *****************
 17008 ;; Defined at:
 17009 ;;		line 213 in file "mcc_generated_files/smt1.c"
 17010 ;; Parameters:    Size  Location     Type
 17011 ;;		None
 17012 ;; Auto vars:     Size  Location     Type
 17013 ;;		None
 17014 ;; Return value:  Size  Location     Type
 17015 ;;                  1    wreg      void 
 17016 ;; Registers used:
 17017 ;;		wreg, status,2
 17018 ;; Tracked objects:
 17019 ;;		On entry : 0/0
 17020 ;;		On exit  : 0/0
 17021 ;;		Unchanged: 0/0
 17022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17027 ;;Total ram usage:        0 bytes
 17028 ;; Hardware stack levels used: 1
 17029 ;; This function calls:
 17030 ;;		Nothing
 17031 ;; This function is called by:
 17032 ;;		Interrupt level 2
 17033 ;; This function uses a non-reentrant model
 17034 ;;
 17035                           
 17036                           	psect	text101
 17037  005C48                     __ptext101:
 17038                           	callstack 0
 17039  005C48                     _SMT1_Overflow_ISR:
 17040                           	callstack 14
 17041  005C48                     
 17042                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 17043  005C48  0139               	movlb	57	; () banked
 17044  005C4A  9BA1               	bcf	161,5,b	;volatile
 17045  005C4C                     
 17046                           ; BSR set to: 57
 17047                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 17048  005C4C  0E00               	movlw	0
 17049  005C4E  6E48               	movwf	_smtPeriod^0,c	;volatile
 17050  005C50  0E00               	movlw	0
 17051  005C52  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17052  005C54  0E00               	movlw	0
 17053  005C56  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17054  005C58  0E00               	movlw	0
 17055  005C5A  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 17056                           
 17057                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 17058  005C5C  0E00               	movlw	0
 17059  005C5E  0101               	movlb	1	; () banked
 17060  005C60  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17061  005C62  0E00               	movlw	0
 17062  005C64  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17063  005C66  0E00               	movlw	0
 17064  005C68  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17065  005C6A  0E00               	movlw	0
 17066  005C6C  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 17067  005C6E                     
 17068                           ; BSR set to: 1
 17069  005C6E  0011               	retfie		f
 17070  005C70                     __end_of_SMT1_Overflow_ISR:
 17071                           	callstack 0
 17072                           
 17073                           ;
 17074                           ; Interrupt Vector Table @ 0x8
 17075                           ;
 17076                           
 17077                           	psect	ivt0x8
 17078  000008                     __pivt0x8:
 17079                           	callstack 0
 17080  000008                     ivt0x8_base:
 17081                           	callstack 0
 17082                           
 17083                           ; Vector 0 : SWINT
 17084  000008  1785               	dw	_Default_ISR shr (0+2)
 17085                           
 17086                           ; Vector 1 : HLVD
 17087  00000A  1785               	dw	_Default_ISR shr (0+2)
 17088                           
 17089                           ; Vector 2 : OSF
 17090  00000C  1785               	dw	_Default_ISR shr (0+2)
 17091                           
 17092                           ; Vector 3 : CSW
 17093  00000E  1785               	dw	_Default_ISR shr (0+2)
 17094                           
 17095                           ; Vector 4 : NVM
 17096  000010  1785               	dw	_Default_ISR shr (0+2)
 17097                           
 17098                           ; Vector 5 : SCAN
 17099  000012  1785               	dw	_Default_ISR shr (0+2)
 17100                           
 17101                           ; Vector 6 : CRC
 17102  000014  1785               	dw	_Default_ISR shr (0+2)
 17103                           
 17104                           ; Vector 7 : IOC
 17105  000016  1785               	dw	_Default_ISR shr (0+2)
 17106                           
 17107                           ; Vector 8 : INT0
 17108  000018  1785               	dw	_Default_ISR shr (0+2)
 17109                           
 17110                           ; Vector 9 : ZCD
 17111  00001A  1785               	dw	_Default_ISR shr (0+2)
 17112                           
 17113                           ; Vector 10 : AD
 17114  00001C  1785               	dw	_Default_ISR shr (0+2)
 17115                           
 17116                           ; Vector 11 : ADT
 17117  00001E  1785               	dw	_Default_ISR shr (0+2)
 17118                           
 17119                           ; Vector 12 : CMP1
 17120  000020  1785               	dw	_Default_ISR shr (0+2)
 17121                           
 17122                           ; Vector 13 : SMT1
 17123  000022  1712               	dw	_SMT1_Overflow_ISR shr (0+2)
 17124                           
 17125                           ; Vector 14 : SMT1PRA
 17126  000024  1562               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17127                           
 17128                           ; Vector 15 : SMT1PRW
 17129  000026  1515               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17130                           
 17131                           ; Vector 16 : DMA1SCNT
 17132  000028  1785               	dw	_Default_ISR shr (0+2)
 17133                           
 17134                           ; Vector 17 : DMA1DCNT
 17135  00002A  1785               	dw	_Default_ISR shr (0+2)
 17136                           
 17137                           ; Vector 18 : DMA1OR
 17138  00002C  1785               	dw	_Default_ISR shr (0+2)
 17139                           
 17140                           ; Vector 19 : DMA1A
 17141  00002E  1785               	dw	_Default_ISR shr (0+2)
 17142                           
 17143                           ; Vector 20 : SPI1RX
 17144  000030  1785               	dw	_Default_ISR shr (0+2)
 17145                           
 17146                           ; Vector 21 : SPI1TX
 17147  000032  1785               	dw	_Default_ISR shr (0+2)
 17148                           
 17149                           ; Vector 22 : SPI1
 17150  000034  1785               	dw	_Default_ISR shr (0+2)
 17151                           
 17152                           ; Vector 23 : I2C1RX
 17153  000036  1785               	dw	_Default_ISR shr (0+2)
 17154                           
 17155                           ; Vector 24 : I2C1TX
 17156  000038  1785               	dw	_Default_ISR shr (0+2)
 17157                           
 17158                           ; Vector 25 : I2C1
 17159  00003A  1785               	dw	_Default_ISR shr (0+2)
 17160                           
 17161                           ; Vector 26 : I2C1E
 17162  00003C  1785               	dw	_Default_ISR shr (0+2)
 17163                           
 17164                           ; Vector 27 : U1RX
 17165  00003E  15D6               	dw	_UART1_rx_vect_isr shr (0+2)
 17166                           
 17167                           ; Vector 28 : U1TX
 17168  000040  15C7               	dw	_UART1_tx_vect_isr shr (0+2)
 17169                           
 17170                           ; Vector 29 : U1E
 17171  000042  1785               	dw	_Default_ISR shr (0+2)
 17172                           
 17173                           ; Vector 30 : U1
 17174  000044  1785               	dw	_Default_ISR shr (0+2)
 17175                           
 17176                           ; Vector 31 : TMR0
 17177  000046  1785               	dw	_Default_ISR shr (0+2)
 17178                           
 17179                           ; Vector 32 : TMR1
 17180  000048  1785               	dw	_Default_ISR shr (0+2)
 17181                           
 17182                           ; Vector 33 : TMR1G
 17183  00004A  1785               	dw	_Default_ISR shr (0+2)
 17184                           
 17185                           ; Vector 34 : TMR2
 17186  00004C  1785               	dw	_Default_ISR shr (0+2)
 17187                           
 17188                           ; Vector 35 : CCP1
 17189  00004E  1785               	dw	_Default_ISR shr (0+2)
 17190                           
 17191                           ; Vector 36 : Undefined
 17192  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17193                           
 17194                           ; Vector 37 : NCO1
 17195  000052  1785               	dw	_Default_ISR shr (0+2)
 17196                           
 17197                           ; Vector 38 : CWG1
 17198  000054  1785               	dw	_Default_ISR shr (0+2)
 17199                           
 17200                           ; Vector 39 : CLC1
 17201  000056  1785               	dw	_Default_ISR shr (0+2)
 17202                           
 17203                           ; Vector 40 : INT1
 17204  000058  1785               	dw	_Default_ISR shr (0+2)
 17205                           
 17206                           ; Vector 41 : CMP2
 17207  00005A  1785               	dw	_Default_ISR shr (0+2)
 17208                           
 17209                           ; Vector 42 : DMA2SCNT
 17210  00005C  1785               	dw	_Default_ISR shr (0+2)
 17211                           
 17212                           ; Vector 43 : DMA2DCNT
 17213  00005E  1785               	dw	_Default_ISR shr (0+2)
 17214                           
 17215                           ; Vector 44 : DMA2OR
 17216  000060  1785               	dw	_Default_ISR shr (0+2)
 17217                           
 17218                           ; Vector 45 : DMA2A
 17219  000062  1785               	dw	_Default_ISR shr (0+2)
 17220                           
 17221                           ; Vector 46 : I2C2RX
 17222  000064  1785               	dw	_Default_ISR shr (0+2)
 17223                           
 17224                           ; Vector 47 : I2C2TX
 17225  000066  1785               	dw	_Default_ISR shr (0+2)
 17226                           
 17227                           ; Vector 48 : I2C2
 17228  000068  1785               	dw	_Default_ISR shr (0+2)
 17229                           
 17230                           ; Vector 49 : I2C2E
 17231  00006A  1785               	dw	_Default_ISR shr (0+2)
 17232                           
 17233                           ; Vector 50 : U2RX
 17234  00006C  1785               	dw	_Default_ISR shr (0+2)
 17235                           
 17236                           ; Vector 51 : U2TX
 17237  00006E  1785               	dw	_Default_ISR shr (0+2)
 17238                           
 17239                           ; Vector 52 : U2E
 17240  000070  1785               	dw	_Default_ISR shr (0+2)
 17241                           
 17242                           ; Vector 53 : U2
 17243  000072  1785               	dw	_Default_ISR shr (0+2)
 17244                           
 17245                           ; Vector 54 : TMR3
 17246  000074  1785               	dw	_Default_ISR shr (0+2)
 17247                           
 17248                           ; Vector 55 : TMR3G
 17249  000076  1785               	dw	_Default_ISR shr (0+2)
 17250                           
 17251                           ; Vector 56 : TMR4
 17252  000078  160F               	dw	_TMR4_ISR shr (0+2)
 17253                           
 17254                           ; Vector 57 : CCP2
 17255  00007A  1785               	dw	_Default_ISR shr (0+2)
 17256                           
 17257                           ; Vector 58 : Undefined
 17258  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17259                           
 17260                           ; Vector 59 : CWG2
 17261  00007E  1785               	dw	_Default_ISR shr (0+2)
 17262                           
 17263                           ; Vector 60 : CLC2
 17264  000080  1785               	dw	_Default_ISR shr (0+2)
 17265                           
 17266                           ; Vector 61 : INT2
 17267  000082  1785               	dw	_Default_ISR shr (0+2)
 17268                           
 17269                           ; Vector 62 : Undefined
 17270  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17271                           
 17272                           ; Vector 63 : Undefined
 17273  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17274                           
 17275                           ; Vector 64 : Undefined
 17276  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17277                           
 17278                           ; Vector 65 : Undefined
 17279  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17280                           
 17281                           ; Vector 66 : Undefined
 17282  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17283                           
 17284                           ; Vector 67 : Undefined
 17285  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17286                           
 17287                           ; Vector 68 : Undefined
 17288  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17289                           
 17290                           ; Vector 69 : Undefined
 17291  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17292                           
 17293                           ; Vector 70 : TMR5
 17294  000094  1785               	dw	_Default_ISR shr (0+2)
 17295                           
 17296                           ; Vector 71 : TMR5G
 17297  000096  16A1               	dw	_TMR5_GATE_ISR shr (0+2)
 17298                           
 17299                           ; Vector 72 : TMR6
 17300  000098  1785               	dw	_Default_ISR shr (0+2)
 17301                           
 17302                           ; Vector 73 : CCP3
 17303  00009A  167A               	dw	_CCP3_CaptureISR shr (0+2)
 17304                           
 17305                           ; Vector 74 : CWG3
 17306  00009C  1785               	dw	_Default_ISR shr (0+2)
 17307                           
 17308                           ; Vector 75 : CLC3
 17309  00009E  1785               	dw	_Default_ISR shr (0+2)
 17310                           
 17311                           ; Vector 76 : Undefined
 17312  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17313                           
 17314                           ; Vector 77 : Undefined
 17315  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17316                           
 17317                           ; Vector 78 : Undefined
 17318  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17319                           
 17320                           ; Vector 79 : Undefined
 17321  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17322                           
 17323                           ; Vector 80 : CCP4
 17324  0000A8  1687               	dw	_CCP4_CaptureISR shr (0+2)
 17325                           
 17326                           ; Vector 81 : CLC4
 17327  0000AA  1785               	dw	_Default_ISR shr (0+2)
 17328  0000AC                     ivt0x8_undefint:
 17329                           	callstack 0
 17330  0000AC  00FF               	reset	
 17331                           
 17332                           	psect	text102
 17333  000000                     __ptext102:
 17334                           	callstack 0
 17335  000000                     
 17336                           	psect	rparam
 17337  0000                     
 17338                           	psect	idloc
 17339                           
 17340                           ;Config register IDLOC0 @ 0x200000
 17341                           ;	unspecified, using default values
 17342  200000                     	org	2097152
 17343  200000  0FFF               	dw	4095
 17344                           
 17345                           ;Config register IDLOC1 @ 0x200002
 17346                           ;	unspecified, using default values
 17347  200002                     	org	2097154
 17348  200002  0FFF               	dw	4095
 17349                           
 17350                           ;Config register IDLOC2 @ 0x200004
 17351                           ;	unspecified, using default values
 17352  200004                     	org	2097156
 17353  200004  0FFF               	dw	4095
 17354                           
 17355                           ;Config register IDLOC3 @ 0x200006
 17356                           ;	unspecified, using default values
 17357  200006                     	org	2097158
 17358  200006  0FFF               	dw	4095
 17359                           
 17360                           ;Config register IDLOC4 @ 0x200008
 17361                           ;	unspecified, using default values
 17362  200008                     	org	2097160
 17363  200008  0FFF               	dw	4095
 17364                           
 17365                           ;Config register IDLOC5 @ 0x20000A
 17366                           ;	unspecified, using default values
 17367  20000A                     	org	2097162
 17368  20000A  0FFF               	dw	4095
 17369                           
 17370                           ;Config register IDLOC6 @ 0x20000C
 17371                           ;	unspecified, using default values
 17372  20000C                     	org	2097164
 17373  20000C  0FFF               	dw	4095
 17374                           
 17375                           ;Config register IDLOC7 @ 0x20000E
 17376                           ;	unspecified, using default values
 17377  20000E                     	org	2097166
 17378  20000E  0FFF               	dw	4095
 17379                           
 17380                           	psect	config
 17381                           
 17382                           ;Config register CONFIG1L @ 0x300000
 17383                           ;	External Oscillator Selection
 17384                           ;	FEXTOSC = OFF, Oscillator not enabled
 17385                           ;	Reset Oscillator Selection
 17386                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17387  300000                     	org	3145728
 17388  300000  8C                 	db	140
 17389                           
 17390                           ;Config register CONFIG1H @ 0x300001
 17391                           ;	Clock out Enable bit
 17392                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17393                           ;	PRLOCKED One-Way Set Enable bit
 17394                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17395                           ;	Clock Switch Enable bit
 17396                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17397                           ;	Fail-Safe Clock Monitor Enable bit
 17398                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17399  300001                     	org	3145729
 17400  300001  FF                 	db	255
 17401                           
 17402                           ;Config register CONFIG2L @ 0x300002
 17403                           ;	MCLR Enable bit
 17404                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17405                           ;	Power-up timer selection bits
 17406                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17407                           ;	Multi-vector enable bit
 17408                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17409                           ;	IVTLOCK bit One-way set enable bit
 17410                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17411                           ;	Low Power BOR Enable bit
 17412                           ;	LPBOREN = OFF, ULPBOR disabled
 17413                           ;	Brown-out Reset Enable bits
 17414                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17415  300002                     	org	3145730
 17416  300002  FF                 	db	255
 17417                           
 17418                           ;Config register CONFIG2H @ 0x300003
 17419                           ;	Brown-out Reset Voltage Selection bits
 17420                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17421                           ;	ZCD Disable bit
 17422                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17423                           ;	PPSLOCK bit One-Way Set Enable bit
 17424                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17425                           ;	Stack Full/Underflow Reset Enable bit
 17426                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17427                           ;	Debugger Enable bit
 17428                           ;	DEBUG = OFF, Background debugger disabled
 17429                           ;	Extended Instruction Set Enable bit
 17430                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17431  300003                     	org	3145731
 17432  300003  FF                 	db	255
 17433                           
 17434                           ;Config register CONFIG3L @ 0x300004
 17435                           ;	WDT Period selection bits
 17436                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17437                           ;	WDT operating mode
 17438                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17439  300004                     	org	3145732
 17440  300004  9F                 	db	159
 17441                           
 17442                           ;Config register CONFIG3H @ 0x300005
 17443                           ;	WDT Window Select bits
 17444                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17445                           ;	WDT input clock selector
 17446                           ;	WDTCCS = SC, Software Control
 17447  300005                     	org	3145733
 17448  300005  FF                 	db	255
 17449                           
 17450                           ;Config register CONFIG4L @ 0x300006
 17451                           ;	Boot Block Size selection bits
 17452                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17453                           ;	Boot Block enable bit
 17454                           ;	BBEN = OFF, Boot block disabled
 17455                           ;	Storage Area Flash enable bit
 17456                           ;	SAFEN = OFF, SAF disabled
 17457                           ;	Application Block write protection bit
 17458                           ;	WRTAPP = OFF, Application Block not write protected
 17459  300006                     	org	3145734
 17460  300006  FF                 	db	255
 17461                           
 17462                           ;Config register CONFIG4H @ 0x300007
 17463                           ;	Configuration Register Write Protection bit
 17464                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17465                           ;	Boot Block Write Protection bit
 17466                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17467                           ;	Data EEPROM Write Protection bit
 17468                           ;	WRTD = OFF, Data EEPROM not write-protected
 17469                           ;	SAF Write protection bit
 17470                           ;	WRTSAF = OFF, SAF not Write Protected
 17471                           ;	Low Voltage Programming Enable bit
 17472                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17473  300007                     	org	3145735
 17474  300007  FF                 	db	255
 17475                           
 17476                           ;Config register CONFIG5L @ 0x300008
 17477                           ;	PFM and Data EEPROM Code Protection bit
 17478                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17479  300008                     	org	3145736
 17480  300008  FF                 	db	255
 17481                           
 17482                           ;Config register CONFIG5H @ 0x300009
 17483                           ;	unspecified, using default values
 17484  300009                     	org	3145737
 17485  300009  FF                 	db	255
 17486                           tosu	equ	0x3FFF
 17487                           tosh	equ	0x3FFE
 17488                           tosl	equ	0x3FFD
 17489                           stkptr	equ	0x3FFC
 17490                           pclatu	equ	0x3FFB
 17491                           pclath	equ	0x3FFA
 17492                           pcl	equ	0x3FF9
 17493                           tblptru	equ	0x3FF8
 17494                           tblptrh	equ	0x3FF7
 17495                           tblptrl	equ	0x3FF6
 17496                           tablat	equ	0x3FF5
 17497                           prodh	equ	0x3FF4
 17498                           prodl	equ	0x3FF3
 17499                           indf0	equ	0x3FEF
 17500                           postinc0	equ	0x3FEE
 17501                           postdec0	equ	0x3FED
 17502                           preinc0	equ	0x3FEC
 17503                           plusw0	equ	0x3FEB
 17504                           fsr0h	equ	0x3FEA
 17505                           fsr0l	equ	0x3FE9
 17506                           wreg	equ	0x3FE8
 17507                           indf1	equ	0x3FE7
 17508                           postinc1	equ	0x3FE6
 17509                           postdec1	equ	0x3FE5
 17510                           preinc1	equ	0x3FE4
 17511                           plusw1	equ	0x3FE3
 17512                           fsr1h	equ	0x3FE2
 17513                           fsr1l	equ	0x3FE1
 17514                           bsr	equ	0x3FE0
 17515                           indf2	equ	0x3FDF
 17516                           postinc2	equ	0x3FDE
 17517                           postdec2	equ	0x3FDD
 17518                           preinc2	equ	0x3FDC
 17519                           plusw2	equ	0x3FDB
 17520                           fsr2h	equ	0x3FDA
 17521                           fsr2l	equ	0x3FD9
 17522                           status	equ	0x3FD8

Data Sizes:
    Strings     203
    Constant    0
    Data        0
    BSS         182
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3443_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_15(CODE[14]), STR_14(CODE[13]), STR_13(CODE[14]), STR_12(CODE[10]), 
		 -> STR_11(CODE[12]), STR_10(CODE[15]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_7(CODE[11]), STR_6(CODE[9]), STR_5(CODE[15]), STR_4(CODE[22]), 
		 -> STR_3(CODE[14]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_15(CODE[14]), STR_14(CODE[13]), STR_13(CODE[14]), STR_12(CODE[10]), 
		 -> STR_11(CODE[12]), STR_10(CODE[15]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_7(CODE[11]), STR_6(CODE[9]), STR_5(CODE[15]), STR_4(CODE[22]), 
		 -> STR_3(CODE[14]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_15(CODE[14]), STR_14(CODE[13]), STR_13(CODE[14]), STR_12(CODE[10]), 
		 -> STR_11(CODE[12]), STR_10(CODE[15]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_7(CODE[11]), STR_6(CODE[9]), STR_5(CODE[15]), STR_4(CODE[22]), 
		 -> STR_3(CODE[14]), STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _checkBatt->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    ___fldiv->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _calcSteering->_setSteering
    _setSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getReverse->_printf
    _getCurve->_printf
    _checkBatt->_getBatteryVoltage
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  237632
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  236485
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   45034
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   45288
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   59635
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    4     4      0   49288
                                             14 BANK1      4     4      0
           _ADCC_GetSingleConversion
                            ___fldiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   45034
                                              6 BANK1      8     2      6
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   43585
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43079
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   31700
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1346
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    8028
                                             44 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    7895
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3083
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9600
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8359
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (2) _setMotor                                             4     2      2     906
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1106
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     787
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         ___fldiv
         ___xxtofl
         _printf
           ___xxtofl (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                 _strcpy
                 _tolower
                   _isupper
               _fputc
               _isupper
               _strncmp
               _tolower
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
     _getReverse
       _printf
     _setMotor
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19F      32        0.0%
DATA                 0      0     19F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 30 17:46:09 2024

                             _CCP4_Initialize 5AE6                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 006C                                  ___fldiv@bexp 006B  
                                ___fldiv@sign 0064                                            l72 5D88  
                                          l75 5C92                                            l69 553C  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 53F6  
                                         l404 54F2                                           l308 53AE  
                                         l309 53C8                                           l318 5DA0  
                                         l520 5586                                           l441 5B40  
                                         l362 5DBE                                           l371 5DAA  
                                         l188 4BEC                                           l284 5030  
                                         l365 5DD2                                           l359 5DC8  
                                         l368 5DB4                                           l712 59E4  
                                         l449 5DFA                                           l482 5B12  
                                         l723 5D28                                           l555 5DDC  
                                         l644 5B9A                                           l740 597C  
                                         l709 5D40                                           l581 5838  
                                         l726 59B0                                           l479 5DF0  
                                         l751 5D58                                           l737 5D70  
                                         l754 5948                                           l923 5D10  
                                         l695 5DE6                                           l795 5AE4  
                                         l893 5BC6                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 56A2                                           _pad 4CB2  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0019  
                             _TMR2_Initialize 5CF6                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 5DE8                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0066                            _UART1_Transmit_ISR 565E  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                       __end_of_CCP4_CaptureISR 5A50  
                                ___fltol@exp1 0082                                          l2000 2E58  
                                        l1042 5452                                          ?_abs 0026  
                                        l2022 2BB0                                          l1054 5A60  
                                        l1320 4418                                          l2025 2A42  
                                        l1401 3B4C                                          l1057 5A80  
                                        l2121 4CF6                                          l1305 3250  
                                        l2018 2828                                          l2035 2B72  
                                        l2027 2ABA                                          l1331 3D9E  
                                        l1235 44A8                                          l2028 2AA8  
                                        l2124 4D38                                          l2132 32F2  
                                        l1244 4534                                          l1228 4438  
                                        l1253 515A                                          l1261 51EC  
                                        l2062 3D00                                          l1326 3D14  
                                        l2126 4D72                                          l2134 32FA  
                                        l2303 57C8                                          l1319 4406  
                                        l4000 4BAA                                          l2152 3536  
                                        l2216 192A                                          l1256 5260  
                                        l2073 3C98                                          l1345 3EB0  
                                        l4002 4BAC                                          l2066 3C3C  
                                        l2170 1D7A                                          l2082 5C46  
                                        l2059 3BA4                                          l1531 419C  
                             _timer3ReloadVal 018C                                          l4004 4BAE  
                                        l2332 533A                                          l1284 3240  
                                        l1701 4748                                          l4006 5D72  
                                        l4030 5AB6                                          l1366 3956  
                                        l1390 398A                                          l1518 4038  
                                        l2318 50C6                                          l2326 565C  
                                        l2342 4A40                                          l2262 2198  
                                        l2254 229E                                          l1375 42E8  
                                        l1391 399E                                          l4040 5ADE  
                                        l4032 5AD4                                          l1384 4B22  
                                        l1392 3A12                                          l2352 5392  
                                        l4018 53F8                                          l4042 5AE0  
                                        l4034 5AD6                                          l4050 5D08  
                                        l2338 571A                                          l1298 31A2  
                                        l1635 4CB0                                          l1483 4640  
                                        l4052 5D42                                          l4044 5D12  
                                        l4036 5AD8                                          l1388 3966  
                                        l2284 56D8                                          l2188 14EC  
                                        l2268 52C8                                          l2293 374C  
                                        l2357 539A                                          l2269 52D0  
                                        l4038 5ADC                                          l4046 5CF6  
                                        l2287 56E0                                          l1663 4F8C  
                                        l2279 494C                                          l4064 5B9C  
                                        l4048 5D02                                          l1648 4EE2  
                                        l2296 3690                                          l4074 5D5A  
                                        l4090 5D2A                                          l1674 484E  
                                        l1932 2490                                          l1941 2760  
                                        l1933 247E                                          l1669 4808  
                                        l1934 2444                                          l1678 5800  
                                        l7010 5504                                          l7020 551C  
                                        l7012 5508                                          l1949 25AA  
                                        l7022 5524                                          l7014 5510  
                                        l1958 267A                                          l1974 5618  
                                        ?_pad 0026                                          l1959 2668  
                                        l1991 2D70                                          l7024 5528  
                                        l7016 5514                                          l7008 54F4  
                                        l8000 2B0E                                          l6400 4536  
                                        l7026 5530                                          l7018 5518  
                                        l8010 2B76                                          l8002 2B12  
                                        l6410 456A                                          l6402 453A  
                                        l1986 2F4C                                          l7028 5534  
                                        l8020 2BA0                                          l8012 2B86  
                                        l8004 2B2C                                          l6420 45AC  
                                        l6412 457A                                          l6404 4548  
                                        l1988 2DAC                                          l8100 4EBC  
                                        l1997 2DF2                                          l6510 5DF2  
                                        l3950 54A8                                          l8030 4BEE  
                                        l8014 2B94                                          l8006 2B40  
                                        l6430 45FE                                          l6422 45B8  
                                        l6414 457E                                          l6406 4558  
                                        l8102 4EC2                                          l8110 4EE4  
                                        l1999 2E6A                                          l6512 5DE8  
                                        l3960 54D4                                          l3952 54AA  
                                        l8040 4C1A                                          l8032 4BF2  
                                        l8016 2B96                                          l8008 2B5A  
                                        l6440 4630                                          l6432 4600  
                                        l6424 45C6                                          l6416 458E  
                                        l6408 455C                                          l6600 50C8  
                                        l8200 4CB2                                          l8104 4ED2  
                                        l8120 4F84                                          l8112 4F12  
                                        l8024 55D2                                          l9000 4356  
                                        l3970 54E8                                          l3962 54DE  
                                        l3954 54B2                                          l6530 5DDE  
                                        l6514 5DD4                                          l8050 4C48  
                                        l8042 4C22                                          l8034 4C00  
                                        l8018 2B9C                                          l6434 460A  
                                        l6426 45D0                                          l6418 45A4  
                                        l6610 5152                                          l6602 50D0  
                                        l8210 4D02                                          l8202 4CC0  
                                        l8106 4EDA                                          l8122 4F8A  
                                        l8114 4F22                                          l8130 478A  
                                        l8026 55E4                                          l9010 43AA  
                                        l9002 436A                                          l6620 5B3A  
                                        l3972 54EA                                          l3964 54E2  
                                        l3956 54BC                                          l3980 5C70  
                                        l6700 4FE8                                          l8060 4C82  
                                        l8052 4C50                                          l8044 4C26  
                                        l8036 4C08                                          l6428 45EE  
                                        l6436 4610                                          l6604 50E6  
                                        l6540 4A8E                                          l6532 4A42  
                                        l7500 23A6                                          l9100 3804  
                                        l6380 5916                                          l7420 539E  
                                        l8212 4D16                                          l8204 4CD4  
                                        l8300 32CC                                          l8116 4F50  
                                        l8140 47F6                                          l8132 47B8  
                                        l9012 43B8                                          l9004 437C  
                                        l6622 5B3E                                          l6614 5B14  
                                        l3974 54EC                                          l3966 54E4  
                                        l3958 54D2                                          l3990 4B9C  
                                        l3982 4B24                                          l6630 5B8A  
                                        l6702 4FEC                                          l8070 4CA8  
                                        l8062 4C84                                          l8054 4C5E  
                                        l8046 4C2E                                          l8038 4C0C  
                                        l6438 4620                                          l6606 50F6  
                                        l6374 59B2                                          l6550 4AEA  
                                        l6534 4A5E                                          l6542 4A9E  
                                        l7510 23BA                                          l7502 23AA  
                                        l9102 3896                                          l9030 3D30  
                                        l8222 56A2                                          l7430 53EE  
                                        l7422 53BE                                          l8214 4D1A  
                                        l8206 4CE2                                          l8310 3328  
                                        l8302 32E6                                          l8118 4F60  
                                        l8142 4846                                          l8134 47C8  
                                        l8126 474A                                          l8150 57E0  
                                        l8230 48AE                                          l9022 4400  
                                        l9006 4392                                          l9014 43BE  
                                        l6616 5B24                                          l6640 5B0C  
                                        l3976 54EE                                          l3968 54E6  
                                        l3992 4B9E                                          l3984 4B44  
                                        l6632 5B96                                          l6624 5B70  
                                        l6704 4FF8                                          l8064 4C8A  
                                        l8056 4C64                                          l8048 4C40  
                                        l6608 5126                                          l6376 597E  
                                        l6544 4ABA                                          l6552 4B0A  
                                        l6536 4A7A                                          l7600 25FE  
                                        l7520 23CE                                          l7512 23BE  
                                        l7504 23AE                                          l9120 392A  
                                        l9104 38A2                                          l9040 3DA2  
                                        l9032 3D3C                                          l8224 56BC  
                                        l7432 53F2                                          l7424 53CA  
                                        l7440 5044                                          l8216 4D46  
                                        l8208 4CEE                                          l8320 33CA  
                                        l8312 3330                                          l8304 3302  
                                        l8080 4E4E                                          l8144 484C  
                                        l8136 47D6                                          l8128 477A  
                                        l8152 57F0                                          l8240 4900  
                                        l8232 48D6                                          l8400 125C  
                                        l9016 43D4                                          l9008 43A0  
                                        l9200 5CBE                                          l6618 5B30  
                                        l6642 5B10                                          l6634 5AE6  
                                        l3978 54F0                                          l3994 4BA0  
                                        l3986 4B46                                          l6650 5834  
                                        l6626 5B84                                          l6490 5DAC  
                                        l6706 5004                                          l8058 4C7A  
                                        l8066 4C90                                          l8170 46AE  
                                        l8162 466E                                          l6546 4AD6  
                                        l6538 4A82                                          l9130 419E  
                                        l7602 260C                                          l7610 262A  
                                        l7522 23D2                                          l7514 23C2  
                                        l7506 23B2                                          l7530 23E2  
                                        l9122 3946                                          l9114 38BA  
                                        l6378 594A                                          l9050 3E04  
                                        l9042 3DB6                                          l9034 3D58  
                                        l9026 3D02                                          l7426 53DC  
                                        l7434 53F4                                          l7418 539E  
                                        l7442 5056                                          l8218 4D5A  
                                        l8330 3488                                          l8322 33D0  
                                        l8314 333A                                          l8306 3314  
                                        l8090 4E82                                          l8082 4E52  
                                        l8074 4E34                                          l8138 47E8  
                                        l8234 48E2                                          l8226 4850  
                                        l8250 52E2                                          l8410 12E6  
                                        l8402 1282                                          l9018 43F2  
                                        l9202 5CCC                                          l6636 5AF6  
                                        l3996 4BA2                                          l3988 4B4E  
                                        l6644 5802                                          l6628 5B88  
                                        l6660 5574                                          l6652 553E  
                                        l6492 5DA2                                          l6708 502C  
                                        l8068 4CA0                                          l8180 46DE  
                                        l8172 46BC                                          l8164 4698  
                                        l8156 4642                                          l6548 4ADE  
                                        l9140 4248                                          l9132 41AA  
                                        l7604 2614                                          l7612 2638  
                                        l7540 2452                                          l7532 23E6  
                                        l7524 23D6                                          l7516 23C6  
                                        l7508 23B6                                          l7460 22CE  
                                        l7452 22A0                                          l9124 394E  
                                        l9108 38AE                                          l9116 3904  
                                        l9052 3E18                                          l9044 3DCA  
                                        l9028 3D14                                          l7700 3F6E  
                                        l7428 53DE                                          l7436 5D9A  
                                        l7444 5060                                          l8340 34D6  
                                        l8332 34A2                                          l8316 3340  
                                        l8324 3434                                          l8308 3322  
                                        l8092 4E8A                                          l8084 4E60  
                                        l8076 4E38                                          l8148 57CA  
                                        l8244 4944                                          l8228 4870  
                                        l8252 533C                                          l8500 172C  
                                        l8420 134A                                          l8412 12FE  
                                        l6638 5B02                                          l3998 4BA8  
                                        l6646 5816                                          l6662 5576  
                                        l6654 5552                                          l6494 5DC0  
                                        l6670 4F9E                                          l8190 4708  
                                        l8182 46E8                                          l8166 469A  
                                        l8158 465A                                          l9150 4288  
                                        l9142 425C                                          l9134 41B8  
                                        l7622 268A                                          l7630 26E0  
                                        l7614 263C                                          l7606 2618  
                                        l7550 247C                                          l7542 245E  
                                        l7534 2410                                          l7526 23DA  
                                        l7518 23CA                                          l7470 2308  
                                        l7462 22DE                                          l7454 22AE  
                                        l9118 3922                                          l9054 3E2C  
                                        l9046 3DDE                                          l9062 3E66  
                                        l9038 3D64                                          l7710 3FE2  
                                        l7702 3F80                                          l7446 507E  
                                        l7438 5032                                          l8342 34E8  
                                        l8326 3450                                          l8334 34B0  
                                        l8318 33C2                                          l8094 4E98  
                                        l8086 4E68                                          l8078 4E46  
                                        l8238 48EE                                          l8270 35D2  
                                        l8262 3538                                          l8510 17F8  
                                        l8502 174A                                          l8430 1416  
                                        l8414 1308                                          l8406 12B8  
                                        l6648 581A                                          l6664 5582  
                                        l6656 5556                                          l6496 5DB6  
                                        l6680 4FC0                                          l6672 4FAE  
                                        l8192 4718                                          l8168 46AA  
                                        l9160 42E0                                          l9152 42A4  
                                        l9144 4264                                          l9136 41CC  
                                        l7640 2732                                          l7632 26F0  
                                        l7624 2696                                          l7616 264A  
                                        l7608 2628                                          l7560 24D2  
                                        l7552 249E                                          l7544 2462  
                                        l7536 242C                                          l7528 23DE  
                                        l7480 2336                                          l7472 230E  
                                        l7464 22EE                                          l7456 22BC  
                                        l9080 3772                                          l7800 2CAE  
                                        l9056 3E3E                                          l9048 3DF2  
                                        l7704 3FAE                                          l7712 3FE8  
                                        l7720 403A                                          l7448 50B4  
                                        l8344 34F4                                          l8336 34C2  
                                        l8328 346E                                          l8096 4EAE  
                                        l8088 4E7A                                          l8280 36F0  
                                        l8264 3558                                          l8248 52D2  
                                        l8256 5372                                          l8600 1BBA  
                                        l8520 18A8                                          l8512 1808  
                                        l8504 177E                                          l8440 149A  
                                        l8432 144A                                          l8424 1380  
                                        l8408 12CA                                          l8360 10FE  
                                        l8352 10CE                                          l6658 5570  
                                        l6498 5DCA                                          l6690 4FD4  
                                        l6682 4FC4                                          l6674 4FB4  
                                        l6666 4F8E                                          l8194 4728  
                                        l8178 46D4                                          l9154 42B0  
                                        l9146 4278                                          l9138 41CC  
                                        l7650 2750                                          l7642 2738  
                                        l7634 2700                                          l7626 26A4  
                                        l7618 2660                                          l7570 250C  
                                        l7562 24E0                                          l7554 24AE  
                                        l7546 2470                                          l7538 243C  
                                        l7490 236A                                          l7482 2338  
                                        l7474 2320                                          l7466 22F0  
                                        l7458 22BE                                          l9090 37BC  
                                        l9082 3776                                          l7810 2CD6  
                                        l7802 2CB2                                          l9058 3E52  
                                        l7714 3FF8                                          l7706 3FCE  
                                        l7730 407E                                          l7722 403E  
                                        l8346 34FC                                          l8338 34D0  
                                        l8290 3252                                          l8098 4EB6  
                                        l8282 3704                                          l8274 3644  
                                        l8266 35B0                                          l8258 5384  
                                        l8610 1BF0                                          l8602 1BCA  
                                        l8530 1916                                          l8522 18DC  
                                        l8514 1818                                          l8506 17B2  
                                        l8442 14AC                                          l8450 14F8  
                                        l8434 1452                                          l8426 13B4  
                                        l8418 1330                                          l8370 1154  
                                        l8362 1122                                          l8354 10D8  
                                        l9170 4460                                          l9162 441A  
                                        l6692 4FD8                                          l6684 4FC8  
                                        l6676 4FB8                                          l6668 4F92  
                                        l7900 2780                                          l8196 4738  
                                        l8188 46FC                                          l9156 42CC  
                                        l9148 427C                                          l7644 273A  
                                        l7636 2720                                          l7628 26DE  
                                        l7580 2578                                          l7572 250E  
                                        l7564 24EE                                          l7548 2472  
                                        l7484 2348                                          l7492 2372  
                                        l7476 2322                                          l7468 22F8  
                                        l9084 3792                                          l9092 37C8  
                                        l9076 374E                                          l7820 2D24  
                                        l7716 4018                                          l7708 3FD0  
                                        l7740 40E6                                          l7732 409E  
                                        l7724 404C                                          l7660 563C  
                                        l8348 350E                                          l8292 3272  
                                        l8284 372C                                          l8276 3680  
                                        l8268 35C4                                          l8620 1C4C  
                                        l8612 1BFC                                          l8604 1BD2  
                                        l8540 19CC                                          l8532 1922  
                                        l8524 18F0                                          l8516 184C  
                                        l8508 17C6                                          l8460 1538  
                                        l8444 14BE                                          l8428 13BA  
                                        l8436 1486                                          l8380 1182  
                                        l8372 1166                                          l8364 112C  
                                        l8356 10E8                                          l8700 1ECC  
                                        l9180 44E0                                          l9172 44B8  
                                        l9164 4446                                          l6694 4FDC  
                                        l6686 4FCC                                          l6678 4FBC  
                                        l7910 27C6                                          l7902 2790  
                                        l9158 42D4                                          l7646 2740  
                                        l7638 2724                                          l7590 25D0  
                                        l7582 257A                                          l7574 2518  
                                        l7566 24FA                                          l7558 24C2  
                                        l7494 2382                                          l7486 2358  
                                        l7478 2328                                          l9094 37D4  
                                        l9086 379A                                          l9078 375C  
                                        l7830 2D6E                                          l7822 2D34  
                                        l7814 2CEA                                          l7806 2CC6  
                                        l7750 415C                                          l7742 4114  
                                        l7734 40BC                                          l7726 406C  
                                        l7654 561A                                          l7662 56E2  
                                        l8294 329C                                          l8286 373C  
                                        l8278 36B4                                          l8630 1C96  
                                        l8614 1C02                                          l8622 1C52  
                                        l8606 1BE0                                          l8550 1A16  
                                        l8542 19DE                                          l8534 1946  
                                        l8518 18A4                                          l8526 18F4  
                                        l8470 1594                                          l8462 156E  
                                        l8446 14C6                                          l8438 1496  
                                        l8390 11F6                                          l8374 1172  
                                        l8382 1188                                          l8366 1134  
                                        l8358 10F6                                          l8710 1FA0  
                                        l8702 1EFA                                          l9190 4524  
                                        l9182 44F0                                          l9174 44BC  
                                        l9166 4458                                          l6696 4FE0  
                                        l6688 4FD0                                          l7920 27F2  
                                        l7912 27CC                                          l7904 27A0  
                                        l8800 3BE6                                          l7648 274E  
                                        l7584 258A                                          l7568 24FE  
                                        l7576 251E                                          l7496 2394  
                                        l7488 2368                                          l9096 37EA  
                                        l9088 37B0                                          l7840 2DBC  
                                        l7832 2D7A                                          l7824 2D3C  
                                        l7816 2D04                                          l7808 2CD6  
                                        l7760 2BCE                                          l7680 3EC4  
                                        l7752 417C                                          l7744 4134  
                                        l7736 40C4                                          l7728 4070  
                                        l7656 5626                                          l7664 56EE  
                                        l8296 32BC                                          l7672 5792  
                                        l8640 1CC8                                          l8632 1CA2  
                                        l8624 1C64                                          l8616 1C28  
                                        l8608 1BE8                                          l8560 1A4C  
                                        l8552 1A26                                          l8544 19EC  
                                        l8536 19AA                                          l8528 1904  
                                        l8480 15D8                                          l8472 15A6  
                                        l8464 1576                                          l8456 150A  
                                        l8448 14E0                                          l8392 1212  
                                        l8384 11AE                                          l8376 117A  
                                        l8368 1146                                          l8712 1FC2  
                                        l8720 2044                                          l8704 1F56  
                                        l9192 4528                                          l9184 4504  
                                        l9176 44CE                                          l9168 445C  
                                        l6698 4FE4                                          l7930 2848  
                                        l7922 2802                                          l7914 27D2  
                                        l7906 27B0                                          l8810 3C6E  
                                        l8802 3BF2                                          l7594 25E4  
                                        l7578 2544                                          l7586 259A  
                                        l7498 23A2                                          l9098 37EE  
                                        l7842 2DD2                                          l7850 2E02  
                                        l7834 2D98                                          l7826 2D4C  
                                        l7818 2D14                                          l7770 2C02  
                                        l7762 2BD0                                          l7690 3F1A  
                                        l7682 3EE4                                          l7746 4146  
                                        l7738 40D8                                          l7658 5638  
                                        l7666 56F2                                          l8298 32CA  
                                        l8650 1D22                                          l8634 1CAA  
                                        l8626 1C7E                                          l8618 1C44  
                                        l8570 1A80                                          l8562 1A50  
                                        l8554 1A2A                                          l8538 19B8  
                                        l8546 19F4                                          l8490 1622  
                                        l8482 15F0                                          l8474 15B4  
                                        l8458 151C                                          l8466 157A  
                                        l8394 122A                                          l8378 117E  
                                        l8730 2154                                          l8722 2072  
                                        l8714 1FD4                                          l9194 452C  
                                        l9178 44D2                                          l7940 2890  
                                        l7924 2812                                          l7916 27E0  
                                        l7908 27B6                                          l8820 3CAC  
                                        l8812 3C7A                                          l8804 3C24  
                                        l7596 25EE                                          l7588 25C0  
                                        l9380 38CE                                          l7852 2E10  
                                        l7844 2DD8                                          l7836 2D9A  
                                        l7828 2D60                                          l7780 2C34  
                                        l7764 2BE0                                          l7772 2C0A  
                                        l7756 2BB2                                          l7692 3F26  
                                        l7684 3EE8                                          l7676 3EB2  
                                        l7748 414C                                          l7668 570E  
                                        l8652 1D34                                          l8644 1CFC  
                                        l8636 1CBC                                          l8628 1C84  
                                        l8580 1B1E                                          l8572 1A84  
                                        l8564 1A56                                          l8556 1A30  
                                        l8548 1A08                                          l8492 1636  
                                        l8484 1602                                          l8476 15B8  
                                        l8468 1582                                          l8396 1234  
                                        l8388 11E4                                          l8660 494E  
                                        l8740 2218                                          l8732 21AC  
                                        l8716 2018                                          l8708 1F8E  
                                        l9372 321A                                          l8900 2F4E  
                                        l9188 451C                                          l9196 5CB8  
                                        l7950 28DE                                          l7942 289C  
                                        l7934 285C                                          l7926 2818  
                                        l7918 27E2                                          l8822 3CD0  
                                        l8814 3C88                                          l8806 3C26  
                                        l7598 25FC                                          l7862 2E7A  
                                        l7870 2EC2                                          l7854 2E14  
                                        l7846 2DE2                                          l7838 2DAA  
                                        l7790 2C68                                          l7782 2C36  
                                        l7774 2C1A                                          l7766 2BF0  
                                        l7758 2BC0                                          l9374 3D78  
                                        l7694 3F44                                          l7686 3EF6  
                                        l7678 3EB6                                          l8654 1D3A  
                                        l8646 1D0E                                          l8638 1CC2  
                                        l8590 1B7C                                          l8558 1A3C  
                                        l8566 1A5C                                          l8574 1A8A  
                                        l8582 1B22                                          l8494 169A  
                                        l8478 15CA                                          l8486 160A  
                                        l8670 49AE                                          l8662 4978  
                                        l8742 222C                                          l8726 20FA  
                                        l8910 2FD6                                          l8902 2F52  
                                        l9198 5CBC                                          l7960 293C  
                                        l7952 28EE                                          l7944 28B8  
                                        l7936 286C                                          l7928 2838  
                                        l8824 3CE0                                          l8816 3CA6  
                                        l8808 3C32                                          l7880 2F2C  
                                        l7872 2EDC                                          l7864 2E86  
                                        l7856 2E22                                          l7848 2DF0  
                                        l7784 2C46                                          l7792 2C70  
                                        l7776 2C20                                          l7768 2C00  
                                        l8840 3A2E                                          l8832 3958  
                                        l9376 3E7A                                          l7696 3F4C  
                                        l7688 3F16                                          l8648 1D1A  
                                        l8656 1D56                                          l8592 1B8C  
                                        l8584 1B40                                          l8576 1AE2  
                                        l8568 1A6E                                          l8496 16F2  
                                        l8488 1612                                          l8672 49D0  
                                        l8728 210C                                          l8736 21D8  
                                        l8752 225A                                          l8680 1D7C  
                                        l8760 5262                                          l8920 3042  
                                        l8912 2FD8                                          l8904 2F96  
                                        l7970 29C6                                          l7962 294C  
                                        l7954 28FE                                          l7946 28C4  
                                        l7938 2876                                          l8826 3CEE  
                                        l8818 3CA8                                          l7882 2F3A  
                                        l7874 2EF2                                          l7866 2E94  
                                        l7858 2E50                                          l7794 2C80  
                                        l7786 2C56                                          l7778 2C26  
                                        l8850 3AAE                                          l9378 3A62  
                                        l8842 3A3A                                          l8834 39A6  
                                        l8770 5A58                                          l7698 3F60  
                                        l8594 1B90                                          l8586 1B5C  
                                        l8578 1B16                                          l8498 1726  
                                        l8674 49E2                                          l8666 4984  
                                        l8754 2288                                          l8738 2206  
                                        l8746 223A                                          l8690 1DFE  
                                        l8682 1DAA                                          l8762 526A  
                                        l8930 3098                                          l8922 305A  
                                        l8914 2FF6                                          l8906 2FB2  
                                        l7980 2A40                                          l7972 29FC  
                                        l7964 296C                                          l7956 290E  
                                        l7948 28D0                                          l8828 3CF0  
                                        l7884 2F40                                          l7876 2F0C  
                                        l7868 2EBE                                          l7796 2C96  
                                        l7788 2C66                                          l8860 3B06  
                                        l8852 3ABA                                          l8836 3A1A  
                                        l8772 5A5C                                          l8596 1BA0  
                                        l8588 1B6E                                          l8676 4A14  
                                        l8668 4992                                          l8748 224C  
                                        l8692 1E0E                                          l8684 1DBC  
                                        l8764 5278                                          l8780 5C20  
                                        l8940 30DE                                          l8932 30AA  
                                        l8924 3066                                          l8908 2FCA  
                                        l8916 3008                                          l7990 2AA0  
                                        l7982 2A52                                          l7974 2A0A  
                                        l7966 297C                                          l7958 291E  
                                        l7894 2762                                          l8790 3B6E  
                                        l7886 2F42                                          l7878 2F28  
                                        l7798 2CA6                                          l8862 3B22  
                                        l8854 3AD6                                          l8838 3A26  
                                        l8846 3A4E                                          l8774 5A5E  
                                        l8598 1BB2                                          l8694 1E4E  
                                        l8686 1DCE                                          l8766 52A6  
                                        l8782 5C2A                                          l8950 3144  
                                        l8942 30F0                                          l8934 30B2  
                                        l8926 3068                                          l8918 3026  
                                        l7984 2A60                                          l7976 2A28  
                                        l7968 299C                                          l7896 2770  
                                        l8792 3BB4                                          l8864 3B2A  
                                        l8856 3ADE                                          l8848 3A90  
                                        l8776 5A6E                                          l8768 5A52  
                                        l8696 1E5E                                          l8688 1DD2  
                                        l8880 5162                                          l8960 31B6  
                                        l8952 315A                                          l8944 3106  
                                        l8936 30C4                                          l8928 3086  
                                        l7994 2ACA                                          l7986 2A64  
                                        l7978 2A32                                          l7898 277E  
                                        l8794 3BCA                                          l8786 3B50  
                                        l8866 3B3A                                          l8858 3AFA  
                                        l8698 1E9E                                          l8874 51EE  
                                        l8890 51D4                                          l8882 5178  
                                        l8970 31D6                                          l8962 31BC  
                                        l8954 316C                                          l8946 3118  
                                        l8938 30CC                                          l7996 2AD6  
                                        l7988 2A72                                          l8788 3B60  
                                        l8876 5242                                          l8892 51E4  
                                        l8884 5180                                          l8972 31E8  
                                        l8964 31C0                                          l8956 3182  
                                        l8948 312E                                          l8980 3202  
                                        l7998 2AE4                                          l8798 3BDE  
                                        l8886 5184                                          l8878 515C  
                                        l8974 31F0                                          l8966 31C4  
                                        l8958 3194                                          l8990 430C  
                                        STR_1 109B                                          l8888 51CC  
                                        l8896 51EA                                          l8992 431E  
                                        STR_2 1001                                          STR_3 1051  
                                        l8994 4330                                          l8986 42EA  
                                        STR_4 1001                                          STR_5 1026  
                                        l8996 433A                                          l8988 4302  
                                        STR_6 10B0                                          STR_7 1090  
                                        l8998 4352                                          STR_8 106C  
                                        STR_9 1078                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        u2805 54DC                                          u2806 54DE  
                                        u6105 596E                                          u6130 4548  
                                        u6131 4544                                          u6115 593A  
                                        u6140 456A                                          _PMD0 0039C0  
                                        u6141 4566                                          _PMD1 0039C1  
                                        u6150 45A4                                          u6310 4A5E  
                                        _PMD2 0039C2                                          u6151 45A0  
                                        u6311 4A5A                                          _PMD3 0039C3  
                                        u6160 45C6                                          u6400 50F6  
                                        u6320 4A7A                                          u8000 2E10  
                                        _PMD4 0039C4                                          u6161 45C2  
                                        u6401 50F2                                          u6321 4A76  
                                        u8001 2E0C                                          _PMD5 0039C5  
                                        u6170 45EE                                          u6330 4ABA  
                                        u8010 2E22                                          _PMD6 0039C6  
                                        u6171 45EA                                          u6331 4AB6  
                                        u8011 2E1E                                          _PMD7 0039C7  
                                        u8100 2790                                          u6180 4620  
                                        u6340 4AD6                                          u7300 22BC  
                                        u8020 2E50                                          u8101 278C  
                                        u6181 461C                                          u6085 59D6  
                                        u6341 4AD2                                          u7301 22B8  
                                        u8021 2E4C                                          u8110 27A0  
                                        u7310 22CE                                          u8030 2E66  
                                        u7230 53AE                                          u8111 279C  
                                        u6095 59A2                                          u7311 22CA  
                                        u8031 2E62                                          u7231 53AA  
                                        u8200 2A72                                          u8120 27E0  
                                        u7400 2428                                          u7320 22DE  
                                        u8040 2E7A                                          u7240 53BE  
                                        u9000 1154                                          u8201 2A6E  
                                        u8121 27DC                                          u7401 2422  
                                        u7321 22DA                                          u8041 2E76  
                                        u7241 53BA                                          u9001 1150  
                                        u8210 2AA0                                          u8130 27F2  
                                        u7410 242A                                          u7330 2320  
                                        u8050 2E94                                          u7250 53EE  
                                        u9010 1166                                          u8211 2A9C  
                                        u8131 27EE                                          u7331 231C  
                                        u8051 2E90                                          u7251 53EA  
                                        u9011 1162                                          u8300 4C40  
                                        u8220 2AB6                                          u8140 2802  
                                        u7500 2544                                          u7420 2452  
                                        u7340 2336                                          u8060 2EDC  
                                        u7260 5044                                          u9100 137C  
                                        u9020 11AE                                          u8301 4C3C  
                                        u8221 2AB2                                          u8141 27FE  
                                        u7501 2540                                          u7421 244E  
                                        u7341 2332                                          u8061 2ED8  
                                        u7261 5040                                          u9101 1378  
                                        u9021 11AA                                          u8310 4C5E  
                                        u8230 2ACA                                          u8150 2838  
                                        u6390 50E6                                          u7510 258A  
                                        u7430 2470                                          u7350 2348  
                                        u8070 2F0C                                          u7270 5056  
                                        u9110 1412                                          u9030 11DE  
                                        u8311 4C5A                                          u8231 2AC6  
                                        u8151 2834                                          u6391 50E2  
                                        u7511 2586                                          u7431 246C  
                                        u7351 2344                                          u8071 2F08  
                                        u7271 5052                                          u9111 140E  
                                        u9031 11D8                                          u8320 4C7A  
                                        u8240 2AE4                                          u8160 2848  
                                        u7600 2676                                          u7520 25C0  
                                        u7440 2490                                          u7360 2358  
                                        u8080 2F3A                                          u7280 507E  
                                        u8400 4F12                                          u9200 1594  
                                        u9120 1486                                          u9040 11E0  
                                        u8321 4C76                                          u8241 2AE0  
                                        u8161 2844                                          u7601 2672  
                                        u7521 25BC                                          u7441 248C  
                                        u7361 2354                                          u8081 2F36  
                                        u7281 507A                                          u8401 4F0E  
                                        u9201 1590                                          u9121 1482  
                                        u8330 4CA0                                          u8250 2B2C  
                                        u8170 29E6                                          u8090 277E  
                                        u7610 268A                                          u7530 25D0  
                                        u7450 249E                                          u7370 2394  
                                        u7290 50B4                                          u8410 4F50  
                                        u9210 15A6                                          u9130 14AC  
                                        u9050 11F6                                          u8331 4C9C  
                                        u8251 2B28                                          u8091 277A  
                                        u7611 2686                                          u7531 25CC  
                                        u7451 249A                                          u7371 2390  
                                        u7291 50B0                                          u8411 4F4C  
                                        u9211 15A2                                          u9131 14A8  
                                        u9051 11F2                                          u8260 2B5A  
                                        u8180 2A40                                          u8500 468E  
                                        u7620 26A4                                          u7540 25FC  
                                        u7460 24AE                                          u7380 23A2  
                                        u7700 570E                                          u8340 4E46  
                                        u8420 4F84                                          u9300 18A4  
                                        u9220 15B4                                          u9140 14BE  
                                        u9060 1282                                          u8261 2B56  
                                        u8181 2A3C                                          u7621 26A0  
                                        u7541 25F8                                          u7461 24AA  
                                        u7381 239E                                          u7701 570A  
                                        u8341 4E42                                          u8421 4F80  
                                        u9301 18A0                                          u9221 15B0  
                                        u9141 14BA                                          u9061 127E  
                                        u8270 2B94                                          u8190 2A60  
                                        u8510 46BC                                          u7630 26DE  
                                        u7550 260C                                          u7470 24E0  
                                        u7390 2410                                          u8350 4E60  
                                        u8430 477A                                          u7710 57C2  
                                        u9310 18F0                                          u9230 15CA  
                                        u9150 14E0                                          u9070 12B2  
                                        u8271 2B90                                          u8191 2A5C  
                                        u8175 29DC                                          u8511 46B8  
                                        u7631 26DA                                          u7551 2608  
                                        u7471 24DC                                          u7391 240C  
                                        u8351 4E5C                                          u8431 4776  
                                        u7711 57BC                                          u9311 18EC  
                                        u9231 15C6                                          u9151 14DC  
                                        u9071 12AC                                          u8280 4C00  
                                        u8520 46D0                                          u7640 26F0  
                                        u7560 2628                                          u7480 24EE  
                                        u7800 404C                                          u8600 56BC  
                                        u8360 4E7A                                          u8440 47B8  
                                        u7720 57C4                                          u9400 1B40  
                                        u9320 1916                                          u9240 15D8  
                                        u9160 1506                                          u9080 12B4  
                                        u8281 4BFC                                          u8521 46CC  
                                        u8505 4684                                          u7641 26EC  
                                        u7561 2624                                          u7481 24EA  
                                        u7801 4048                                          u8601 56B8  
                                        u8361 4E76                                          u8441 47B4  
                                        u9401 1B3C                                          u9321 1912  
                                        u9241 15D4                                          u9161 1502  
                                        u8290 4C1A                                          u8530 46F8  
                                        u7650 2700                                          u7570 2638  
                                        u7490 250C                                          u7730 3EC4  
                                        u7810 407E                                          u8370 4E98  
                                        u8450 47D6                                          u8610 4890  
                                        u9410 1B5C                                          u9330 19B8  
                                        u9250 1602                                          u9170 151C  
                                        u9090 12CA                                          u8291 4C16  
                                        u8531 46F4                                          u7651 26FC  
                                        u7571 2634                                          u7491 2508  
                                        u7731 3EC0                                          u7811 407A  
                                        u8371 4E94                                          u8451 47D2  
                                        u9411 1B58                                          u9331 19B4  
                                        u9251 15FE                                          u9171 1518  
                                        u9091 12C6                                          u8540 4718  
                                        u7660 2720                                          u7580 264A  
                                        u7900 2C46                                          u7740 3EF6  
                                        u7820 40BC                                          u8380 4EAE  
                                        u8460 47F6                                          u8620 48AE  
                                        u8700 536C                                          u9500 1CF8  
                                        u9420 1B6E                                          u9340 19CC  
                                        u9260 174A                                          u9180 1538  
                                        u8541 4714                                          u7661 271C  
                                        u7581 2646                                          u7901 2C42  
                                        u7741 3EF2                                          u7821 40B8  
                                        u8381 4EAA                                          u8461 47F2  
                                        u8621 48AA                                          u8701 5366  
                                        u9421 1B6A                                          u9341 19C8  
                                        u9261 1746                                          u9181 1534  
                                        u8550 4728                                          u7670 2732  
                                        u7590 2660                                          u7910 2C56  
                                        u7830 40E6                                          u8390 4ED2  
                                        u8470 4846                                          u8630 48D6  
                                        u8710 536E                                          u9510 1D0E  
                                        u9430 1B7C                                          u9350 19DE  
                                        u9270 17B2                                          u9190 156E  
                                        u8551 4724                                          u7671 272E  
                                        u7591 265C                                          u7911 2C52  
                                        u7751 3F20                                          u7831 40E2  
                                        u8391 4ECE                                          u8471 4842  
                                        u8631 48D2                                          u8615 4886  
                                        u9511 1D0A                                          u9431 1B78  
                                        u9351 19DA                                          u9271 17AE  
                                        u9191 156A                                          u7680 274E  
                                        u7920 2C96                                          u7760 3F44  
                                        u7840 4114                                          u8560 4CC0  
                                        u8480 57E0                                          u8640 4900  
                                        u8800 36D4                                          u8720 5384  
                                        u9440 1BB2                                          u9360 19EC  
                                        u9280 17F8                                          u9520 4978  
                                        u9600 1ECC                                          u7681 274A  
                                        u7921 2C92                                          u7761 3F40  
                                        u7841 4110                                          u8561 4CBC  
                                        u8481 57DC                                          u8641 48FC  
                                        u8721 5380                                          u9441 1BAE  
                                        u9361 19E8                                          u9281 17F4  
                                        u9521 4974                                          u9601 1EC8  
                                        u8490 465A                                          u7930 2CD6  
                                        u7770 3F6E                                          u7850 415C  
                                        u7690 565C                                          u8570 4CE2  
                                        u8810 36F0                                          u8730 3582  
                                        u9450 1BE0                                          u9370 1A08  
                                        u9290 1808                                          u9530 49AE  
                                        u9610 1EFA                                          u8491 4656  
                                        u7931 2CD2                                          u7771 3F6A  
                                        u7851 4158                                          u7691 5658  
                                        u8571 4CDE                                          u8811 36EC  
                                        u9451 1BDC                                          u9371 1A04  
                                        u9291 1804                                          u9531 49AA  
                                        u9611 1EF6                                          u9700 3B60  
                                        u7940 2D4C                                          u7860 2BCE  
                                        u7780 3FAE                                          u8580 4D38  
                                        u8900 3450                                          u8660 493A  
                                        u8820 372C                                          u8740 35B0  
                                        u9460 1C64                                          u9380 1A16  
                                        u9540 49D0                                          u9620 1FA0  
                                        u9701 3B5C                                          u7941 2D48  
                                        u7861 2BCA                                          u7781 3FAA  
                                        u8581 4D34                                          u8901 344C  
                                        u8661 4934                                          u8821 3728  
                                        u8805 36CA                                          u8741 35AC  
                                        u9461 1C60                                          u9381 1A12  
                                        u9541 49CC                                          u9621 1F9C  
                                        u9710 3B6E                                          u7950 2D6E  
                                        u7870 2BE0                                          u7790 3FF8  
                                        u8590 4D46                                          u8910 346E  
                                        u8830 3284                                          u8670 493C  
                                        u8750 35D2                                          u9470 1C7E  
                                        u9390 1A6E                                          u9550 49E2  
                                        u9630 2072                                          u9711 3B6A  
                                        u7951 2D6A                                          u7871 2BDC  
                                        u7791 3FF4                                          u8591 4D42  
                                        u8911 346A                                          u8831 327E  
                                        u8655 4912                                          u8751 35CE  
                                        u8735 3578                                          u9471 1C7A  
                                        u9391 1A6A                                          u9551 49DE  
                                        u9631 206E                                          u9720 3BCA  
                                        u7960 2D98                                          u7880 2BF0  
                                        u9800 3AAE                                          u8920 3488  
                                        u8840 3286                                          u8680 5328  
                                        u9480 1C96                                          u9560 4A14  
                                        u9640 20F4                                          u9721 3BC6  
                                        u7961 2D94                                          u7881 2BEC  
                                        u9801 3AAA                                          u8921 3484  
                                        u9481 1C92                                          u9561 4A10  
                                        u9641 20EE                                          u9730 3C20  
                                        u7970 2DBC                                          u7890 2C34  
                                        u9810 3AD6                                          u8930 34A2  
                                        u8850 329C                                          u8770 3640  
                                        u8690 533A                                          u9490 1CF6  
                                        u9650 20F6                                          u9570 1DAA  
                                        u9731 3C1C                                          u7971 2DB8  
                                        u7891 2C30                                          u9811 3AD2  
                                        u8931 349E                                          u8851 3298  
                                        u8771 363C                                          u8691 5336  
                                        u9491 1CF0                                          u9571 1DA6  
                                        u9740 3C6A                                          u7980 2DD2  
                                        u9820 3AFA                                          u8940 34B0  
                                        u8860 32CA                                          u8780 3664  
                                        u9660 210C                                          u9580 1E0E  
                                        u9900 3042                                          u9741 3C66  
                                        u7981 2DCE                                          u9821 3AF6  
                                        u8941 34AC                                          u8861 32C6  
                                        u8765 35E6                                          u9661 2108  
                                        u9581 1E0A                                          u9901 303E  
                                        u9750 3C88                                          u7990 2DF0  
                                        u9830 3B22                                          u8950 34C2  
                                        u8870 32E6                                          u8790 3680  
                                        u8766 35F0                                          u9670 2206  
                                        u9590 1E5E                                          u9910 305A  
                                        u9751 3C84                                          u7991 2DEC  
                                        u9831 3B1E                                          u8951 34BE  
                                        u8871 32E2                                          u8791 367C  
                                        u8767 3600                                          u8687 531A  
                                        u9671 2202                                          u9591 1E5A  
                                        u9911 3056                                          u9760 3C98  
                                        u8960 34D0                                          u8880 3314  
                                        u9680 52C8                                          u9840 5178  
                                        u9920 30AA                                          u9761 3C94  
                                        u8961 34CC                                          u8881 3310  
                                        u8785 365A                                          u9681 52C4  
                                        u9841 5174                                          u9921 30A6  
                                        u9770 3CA6                                          u9690 5A6E  
                                        u8970 34E8                                          u8890 3322  
                                        u9850 51CC                                          u9930 30DE  
                                        u9771 3CA2                                          u9691 5A6A  
                                        u8971 34E4                                          u8891 331E  
                                        u9851 51C8                                          u9931 30DA  
                                        u9780 3CE0                                          u8980 10F6  
                                        u9940 30F0                                          u9860 2F96  
                                        u9781 3CDC                                          u8981 10F2  
                                        u9941 30EC                                          u9861 2F92  
                                        u9790 3CEE                                          u8990 1146  
                                        u9950 3106                                          u9870 2FB2  
                                        u9791 3CEA                                          u8991 1142  
                                        u9951 3102                                          u9871 2FAE  
                                        u9960 3118                                          u9880 2FCA  
                                        u9961 3114                                          u9881 2FC6  
                                        u9970 312E                                          u9890 3026  
                                        _TMR2 003FAA                                          u9971 312A  
                                        u9891 3022                                          u9980 3144  
                                        _TMR4 003F9E                                          u9981 3140  
                                        u9990 315A                                          u9991 3156  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 013A  
                                        _main 5CB8                                          _dtoa 3252  
                                        _loop 441A                                          _prec 003A  
                                        _nout 0128                                          pad@i 002D  
                                        pad@p 002A                                          fsr0h 003FEA  
                                        fsr1h 003FE2                                          indf0 003FEF  
                                        fsr2h 003FDA                                          fsr0l 003FE9  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                               ___fpclassifyf 4850                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 0190                               ___fldiv@new_exp 0065  
                             _TMR3_Initialize 5802                               _PWM5_Initialize 5D5A  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                                _tolower$3686 0020                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 5758                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 597E                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 5D8A                                 ___fltol@sign1 0081  
                             __end_of___aldiv 4642                               __end_of___aodiv 403A  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 5B42                               __end_of___fladd 2762  
                                       ?_main 0001                                         ?_dtoa 0060  
                                       _ADCLK 003EFF                               __end_of___aomod 419E  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 2F4E                                         _ADREF 003EFD  
                             __end_of___awdiv 4CB2                               __end_of___flneg 5802  
                                       ?_loop 0001                                         STR_10 1017  
                                       STR_11 1084                                         STR_20 10BD  
                                       STR_12 10A6                                         STR_21 10C5  
                                       STR_13 1043                                         STR_14 105F  
                                       STR_15 1035                                         STR_24 10C9  
                                       STR_16 10B9                                         STR_17 10C1  
                                       STR_26 10C9                               __end_of___awmod 4EE4  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 2BB2                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___flsub 561A                               __end_of___fltol 474A  
                                       u10000 3182                                         u10001 317E  
                                       u10010 31E8                                         u10011 31E4  
                                       u10100 43F2                                         u10020 4302  
                                       u10101 43EE                                         u10021 42FE  
                                       u10110 3D30                                         u10030 431E  
                                       u10111 3D2C                                         u10031 431A  
                                       u10200 3922                                         u10120 3D58  
                                       u10040 4330                                         u10201 391E  
                                       u10121 3D54                                         u10041 432C  
                                       u10210 3946                                         u10130 3E04  
                                       u10050 4352                                         u10211 3942  
                                       u10131 3E00                                         u10051 434E  
                                       u10220 425C                                         u10140 3E3E  
                                       u10060 436A                                         u10300 44E0  
                                       u10221 4258                                         u10141 3E3A  
                                       u10061 4366                                         u10301 44DC  
                                       u10230 4278                                         u10150 3772  
                                       u10070 437C                                         u10310 4518  
                                       u10231 4274                                         u10151 376E  
                                       u10071 4378                                         u10311 4514  
                                       u10240 42A4                                         u10160 3792  
                                       u10080 4392                                         u10241 42A0  
                                       u10161 378E                                         u10081 438E  
                                       u10250 42CC                                         u10170 37B0  
                                       u10090 43D4                                         u10251 42C8  
                                       u10171 37AC                                         u10091 43D0  
                                       u10180 37EA                                         u10260 4446  
                                       u10181 37E6                                         u10261 4442  
                                       u10190 3804                                         u10270 4458  
                                       u10191 3800                                         u10271 4454  
                                       u10280 44A8                                         u10281 44A4  
                                       u10290 44CE                                         u10291 44CA  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 578A  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 574E                                         i1l333 569C  
                                       i1l350 5E0E                                         i1l343 4E32  
                                       i1l336 56A0                                         i1l353 5E0C  
                                       _U1TXB 003DEA                                         i1l347 5BF2  
                                       i1l356 5E0A                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 5E14  
                                       i1l692 5B6E                                         i2l534 5C1E  
                                       i2l438 58DE                                         i2l446 5A1A  
                                       i2l552 5AB4                                         i1l688 586C  
                                       i2l529 5CB6                                         i2l537 5D96  
                                       i1l698 5E10                                         i2l476 5914  
                                       i2l558 5CF4                                         i2l487 5A4E  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 54A6  
                                       i2l856 55D0                                         i2l868 5C6E  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 5E14                               _TMR4_Initialize 5B70  
                             _PWM6_Initialize 5D42                             _UART1_tx_vect_isr 571C  
                            __end_of_TMR4_ISR 5874                       setSteering@steeringMode 0085  
                                       _delay 00F7                                         _flags 003C  
                                       _fputc 5032                                         _fputs 561A  
                       __size_of_calcMotorPow 014C                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 00E5  
                                       _putch 5D98                                         dtoa@d 0062  
                                       dtoa@i 007A                                         dtoa@n 0072  
                                       dtoa@p 006C                                         dtoa@s 0070  
                                       dtoa@w 006E                              ?_SMT1_Initialize 0001  
                             __end_of_isupper 57CA                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 00E7  
                             _curveRightCount 00F8                         __size_of_calcSteering 01B0  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5DB6  
                 _UART1_SetRxInterruptHandler 5DAC                       __end_of_CCP4_Initialize 5B14  
                              ?___fpclassifyf 0014                               __end_of_tolower 539C  
                             __end_of_strncmp 4A42           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 5E10     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5E0E                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 5792                               _TMR5_Initialize 553E  
                             _PWM7_Initialize 5D2A                               __initialization 5874  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 5CD8                                  __end_of_dtoa 3538  
                                __end_of_loop 4536                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 5D12                                _roundTimeCount 003E  
                                ?_UART1_Write 0001                                        ??_main 003A  
                                      ??_dtoa 0031                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 419E  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 5756  
                             _PWM8_Initialize 5D12                              _UART1_Initialize 4F8E  
                                _calcSteering 3D02                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 597E  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1247 5E04                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 5D72                       __end_of_TMR3_Initialize 583A  
                                      i1l7006 5DFC                                        i1l7122 5B42  
                                      i1l7124 5B56                                        i1l6500 5BC8  
                                      i1l7060 5692                                        i1l7052 565E  
                                      i1l6502 5BDA                                        i1l7070 4DA4  
                                      i1l7062 5696                                        i1l7054 566E  
                                      i1l6504 5BDC                                        i1l7080 4E10  
                                      i1l7072 4DBC                                        i1l7064 4D74  
                                      i1l7056 5680                                        i1l6506 5BEC  
                                      i1l7082 4E2E                                        i1l7074 4DCC  
                                      i1l7066 4D84                                        i1l7170 5772  
                                      i1l7058 5682                                        i1l6508 5BF0  
                                      i1l7076 4DDC                                        i1l7068 4D94  
                                      i1l7164 5722                                        i1l7190 5846  
                                      i1l6710 5E06                                        i1l7078 4DF4  
                                      i1l7166 5736                                        i1l7192 5860  
                                      i1l7168 575E                                        i1l7194 5864  
                                      i1l7188 5842                                        i2l7100 5CD8  
                                      i2l7102 5CE4                                        i2l7200 559C  
                                      i2l7104 5CEC                                        _INLVLA 003A44  
                                      i2l7210 5472                                        i2l7202 55AC  
                                      i2l7106 5CF0                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        i2l7212 5482  
                                      i2l7204 55BE                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l7214 5494  
                                      i2l7206 5454                                        i2l7216 5C48  
                                      i2l7208 5458                                        i2l6520 5C04  
                                      i2l7218 5C4C                                        i2l6522 5C08  
                                      i2l7090 58D8                                        i2l6524 5C0E  
                                      i2l6516 5BF4                                        i2l7180 5A84  
                                      i2l7092 58E0                                        i2l7084 58AA  
                                      i2l7172 59E8                                        i2l6518 5C02  
                                      i2l6526 5C14                                        i2l7182 5A88  
                                      i2l7094 58EE                                        i2l7086 58B8  
                                      i2l7174 59F8                                        i2l6712 5C94  
                                      i2l6528 5C18                                        i2l6720 5D8A  
                                      i2l7184 5A9C                                        i2l7096 58FA  
                                      i2l7176 5A1C                                        i2l7088 58C4  
                                      i2l6714 5CA2                                        i2l7098 590E  
                                      i2l7178 5A2C                                        i2l7196 5588  
                                      i2l6716 5CAE                                        i2l7198 558C  
                                ?_setSteering 0083                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 515C                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 5DCA                              __end_of___xxtofl 3D02  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 3252  
                    __end_of_CCP3_SetCallBack 5DFC                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00E3  
                                      ___flge 474A                                        ___fleq 4EE4  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 0032                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                        _efgtoa 10CE  
                               _CCP3_CallBack 0194                                        _floorf 3538  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 5D5A  
                     __end_of_TMR4_Initialize 5B9C                                        clear_0 587A  
                                      clear_1 5886                                        clear_2 5892  
                            ___awdiv@quotient 001A                                        _motPow 012E  
                             ___awmod@divisor 0016                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                               ___awmod@counter 0018  
                               _CCP4_CallBack 0192                                        _smtWay 0120  
                                      _printf 5C20                                        pad@buf 0028  
                                      dtoa@fp 0060                              ?_CCP3_Initialize 0001  
                                      _strcpy 52D2                                        _strlen 56E2  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 4B24  
                             _ADCC_Initialize 53F8          __end_of_TMR4_DefaultInterruptHandler 5E12  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 5E10  
                                      fputc@c 0016                                _PMD_Initialize 5C70  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                               ___fpclassifyf@e 001C  
                             ___fpclassifyf@u 001E                               ___fpclassifyf@x 0014  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 5AB6  
                                      tblptrh 003FF7                                     ??_isupper 0016  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 52D2  
                   ?_ADCC_GetSingleConversion 0014      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 5DC0  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 5DB6  
                   _UART1_DefaultErrorHandler 5E06                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 01B0  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 5D42  
                     __end_of_TMR5_Initialize 5588                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 54F4  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 58A4                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 0083  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 5BF4                            __size_of_calcSpeed 020A  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 5DF2  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 5B70  
                          __size_of_checkBatt 0092                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 50C8                                 __end_of_fputs 565E  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 5DA2  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 5D2A  
                      __end_of_PMD_Initialize 5C94                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003A  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 019A  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                                     ??_fputc 001A                     __end_of_SYSTEM_Initialize 553E  
                                     ??_fputs 0023                               _CLC3_Initialize 5B9C  
                                     ??_putch 0015                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 00E5                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 004C                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 018A                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 5454  
                  __end_of_PWM6_LoadDutyValue 594A                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 5DDE         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 5DD4                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 0036                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0036                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01A6  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 4D74  
                                  _getReverse 42EA                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 005C                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 594A                                    _distRightM 0136  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 3958  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 0524  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 51EE                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 5C20                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01F6  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 5032                                       ___aldiv 4536  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 3EB2                                       ___fladd 22A0  
                                     ___aomod 403A                                       ___fldiv 2BB2  
                                     ___awdiv 4BEE                                       ___flneg 57CA  
                                     ___awmod 4E34                                       ___flmul 2762  
                                     ___flsub 55D2                                       ___fltol 4642  
                   __end_of_UART1_Receive_ISR 4E34                                     ?_vfprintf 01A0  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                             __size_of_efgtoa 0CAE                               __size_of_floorf 0216  
                                     __pcinit 5874                     _TMR5_GateInterruptHandler 018E  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0044                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 5CB8                                       __ptext1 441A  
                                     __ptext2 42EA                                       __ptext3 2F4E  
                                     __ptext4 515C                                       __ptext5 51EE  
                                     __ptext6 5C20                                       __ptext7 5262  
                                     __ptext8 1D7C                                       __ptext9 494E  
                             __size_of_printf 0028                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 5BC8                         _OSCILLATOR_Initialize 5D72  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                              ___awmod@dividend 0014  
               __size_of_CCP4_DefaultCallBack 0036                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                     _isupper 5792                                       efgtoa@c 0089  
                                     efgtoa@d 00A7                                       efgtoa@e 00BF  
                                     efgtoa@f 0085                                       efgtoa@g 00BB  
                                     efgtoa@h 00B1                                       efgtoa@i 00B9  
                                     efgtoa@l 00B5                                       efgtoa@m 00A1  
                                     efgtoa@n 00C1                                       efgtoa@p 00AB  
                                     efgtoa@t 009B                                       efgtoa@u 00C3  
                                     efgtoa@w 00AD                                     _IPR10bits 00398A  
                                     _smtDuty 0124                                     _T4HLTbits 003FA1  
                                  ??_getCurve 01AE                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                                       _tolower 533C  
                                     _strncmp 494E                          end_of_initialization 58A4  
                                     floorf@e 0077                                     _T2RSTbits 003FAF  
                                     floorf@m 0073                                       floorf@u 0079  
                                     floorf@x 0036                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 5DAC                   _UART1_SetTxInterruptHandler 5DA2  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 22A0                                    efgtoa@mode 00B0  
                           ?_CCP3_SetCallBack 0014                                    efgtoa@sign 00A9  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003A              __end_of_ADCC_GetSingleConversion 5A82  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 5BC8  
                                     strcpy@d 001C                                       strlen@a 0016  
                                     strcpy@s 001A                                       strlen@s 0014  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                                 ___fladd@grs 0078                            getCurve@deltaRight 01B2  
                               ___xxtofl@sign 0024                                   ___fldiv@grs 0067  
                                 ___fldiv@rem 0060                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0009                          setSteering@steeringB 008A  
                        setSteering@steeringF 0088                       TMR5_WriteTimer@timerVal 0009  
                                 ___flmul@grs 0062                                _curveLeftCount 00F9  
                    __size_of_CCP4_CaptureISR 0034             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 54F4  
                              __end_of___flge 4850                                __end_of___fleq 4F8E  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00CB  
                                 vfpfcnvrt@ct 00DF                                   vfpfcnvrt@fp 00C7  
                                 vfpfcnvrt@ll 00D1                                __end_of_efgtoa 1D7C  
                           __size_of_TMR4_ISR 0038                                __end_of_floorf 374E  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F527 0118  
                              __end_of_printf 5C48                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                __end_of_strcpy 533C  
                              __end_of_strlen 571C                                _TMR5_ReadTimer 5C94  
                         start_initialization 5874                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                                   __end_of_abs 56E2  
                                 __end_of_pad 4D74                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                   putch@txData 0015  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0108  
                                 _actMotorPow 00E9                         __end_of___fpclassifyf 494E  
                               _uart1TxBuffer 0110                           __size_of_getReverse 0130  
                        __end_of_TMR4_10msISR 5E06                                   vfprintf@fmt 01A2  
                                    ??___flge 0036                                      ??___fleq 001C  
                            ??_PMD_Initialize 0014                        __size_of_TMR5_GATE_ISR 0032  
                                _oldDistRight 00EF                      __size_of_CCP4_Initialize 002E  
                                    ??_efgtoa 008A                                      ??_floorf 006D  
                  __end_of_PWM7_LoadDutyValue 59E6                             ??_SMT1_Initialize 0014  
                                    ??_printf 003A                                      ??_strcpy 0018  
                                    ??_strlen 0016                        __end_of_TMR5_ReadTimer 5CB8  
                       CCP4_CaptureISR@module 0007                                     ___fladd@a 0071  
                                   ___fladd@b 006D                           calcMotorPow@addMPow 0089  
                    _ADCC_GetSingleConversion 5A50                                     ___fldiv@a 002E  
                                   ___fldiv@b 002A                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 0040                                     ___flmul@a 002E  
                                   ___flmul@b 002A                                   __pbssCOMRAM 003A  
                                   ___flsub@a 007D                                     ___flsub@b 0079  
                          _UART1_ErrorHandler 0196                                 __pcstackBANK0 0060  
                               __pcstackBANK1 01A0                             __size_of_actSpeed 0094  
                            ___aodiv@dividend 0014                            _PWM6_LoadDutyValue 5916  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 019E                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 58E0                        __size_of_TMR4_CallBack 002E  
                                   _calcSpeed 374E                             __size_of_getCurve 0304  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 515C  
                                _currentSpeed 00EB                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 018A                                   _efgtoa$3564 008F  
                                 _efgtoa$3573 0095                                   _efgtoa$3565 0091  
                                 _efgtoa$3574 0097                                   _efgtoa$3575 0099  
                                 _efgtoa$3569 0093                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 4B24                                     _dtoa$3540 006A  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5DCA  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 5DC0  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 006D  
                                    ?___aomod 0014                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 5DE8                                      ?___fldiv 002A  
                                    ?___awdiv 0014                                     __ptext100 5454  
                                   __ptext101 5C48                                     __ptext102 0000  
                            ___aodiv@quotient 0026                                      ?___flneg 0014  
           CCP3_DefaultCallBack@capturedValue 0001                                      ?___awmod 0014  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___flsub 0079                                      ?___fltol 0079  
                          ??_UART1_Initialize 0016                                     _distLeftM 0138  
                                   _distFront 00FD                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F3  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FA  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                                   __smallconst 1000  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 5E0E     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 5E0C                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 5588  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 5A84                                     _curveMode 00FB  
                                    ?_tolower 001A                                __size_of_fputc 0096  
                                    _T2CLKCON 003FAE                                __size_of_fputs 0044  
                                    ?_strncmp 0014                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 54A8  
                               ??_setSteering 0086                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 5454                               ___aldiv@counter 001C  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 5916  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u712_20 5860                                      i1u704_20 5736  
                                    i1u712_21 585C                                      i1u704_21 5732  
                                    i1u706_20 5772                                      i1u705_28 573C  
                                    i1u706_21 576E                                      i1u705_29 574E  
                                    i1u707_28 5778                                      i1u707_29 578A  
                                    i1u629_20 5BEC                                      i1u629_21 5BE8  
                                    _PIR1bits 0039A1                                      i1u691_20 4E10  
                                    i1u690_28 4DE2                                      i1u691_21 4E0C  
                                    i1u690_29 4DF4                                      i1u692_28 4E16  
                                    i1u685_20 566E                                      i1u692_29 4E2A  
                                    i1u685_21 566A                                      i1u686_20 5692  
                                    i1u686_21 568E                                      i2u630_40 5C02  
                                    i2u710_40 5A9C                                      i2u630_41 5BFE  
                                    i2u710_41 5A98                                      i1u687_20 4D94  
                                    i1u687_21 4D90                                      _PIR4bits 0039A4  
                                    i1u696_20 5B56                                      i1u696_21 5B52  
                                    i2u711_48 5AA2                                      i2u711_49 5AB4  
                                    i1u689_20 4DCC                                      i1u688_28 4DAA  
                                    i1u689_21 4DC8                                      i1u688_29 4DBC  
                                    i2u713_40 55AC                                      i2u713_41 55A8  
                                    i1u697_28 5B5C                                      i1u697_29 5B6E  
                                    i2u714_40 5482                                      i2u714_41 547E  
                                    _PIR6bits 0039A6                                      i2u708_48 5A06  
                                    i2u708_49 5A1A                                      _PIR7bits 0039A7  
                                    i2u709_48 5A3A                                      i2u709_49 5A4E  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    i2u693_40 58B8                                      i2u693_41 58B4  
                                    i2u694_40 58EE                                      i2u694_41 58EA  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 5C48  
                                    _TMR4_ISR 583C                    __end_of_UART1_Transmit_ISR 56A2  
                               _TMR4_CallBack 5B42                                     _smtPeriod 0048  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                                     _vfpfcnvrt 1D7C  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 51EE  
                                ??_getReverse 003A                                ??_calcMotorPow 0083  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 008C                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 53F8  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                                    vfpfcnvrt@c 00E2  
                                  vfpfcnvrt@f 00DB                           ??_getBatteryVoltage 003A  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 000A                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 004C                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 441A  
                                  _ADSTATbits 003EFC                                   _followCount 0130  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 5C70  
                         __end_of_setSteering 3B4E                                    vfprintf@ap 01A4  
                                    __Lrparam 0000                                    vfprintf@fp 01A0  
                                 _oldDistLeft 00F1                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 5262  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039C  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 58AA  
                     __end_of_SMT1_PR_ACQ_ISR 55D2                                    ?_vfpfcnvrt 00C7  
                             ___aodiv@divisor 001C                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                               ___aodiv@counter 0024  
                    _TMR4_SetInterruptHandler 5DDE                            ___fpclassifyf@F465 011C  
                                    _actSpeed 50C8          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 5DFC                                      ___xxtofl 3B4E  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 5D98  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 54A8                                      _getCurve 2F4E  
                                    __ptext10 10CE                                      __ptext11 533C  
                                    __ptext20 4E34                                      __ptext12 5792  
                                    __ptext21 3252                                      __ptext13 52D2  
                                    __ptext30 3EB2                                      __ptext22 4CB2  
                                    __ptext14 3538                                      __ptext31 5A50  
                                    __ptext23 56E2                                      __ptext15 4850  
                                    __ptext40 4A42                                      __ptext32 3D02  
                                    __ptext24 561A                                      __ptext16 55D2  
                                    __ptext41 597E                                      __ptext33 3958  
                                    __ptext25 5032                                      __ptext17 57CA  
                                    __ptext50 4F8E                                      __ptext42 59B2  
                                    __ptext34 2BB2                                      __ptext26 5D98  
                                    __ptext18 474A                                      __ptext51 5DA2  
                                    __ptext43 50C8                                      __ptext35 5916  
                                    __ptext27 539C                                      __ptext19 4EE4  
                                    __ptext60 5802                                      __ptext52 5DAC  
                                    __ptext44 4536                                      __ptext36 594A  
                                    __ptext28 56A2                                      __ptext61 5CF6  
                                    __ptext53 5DB6                                      __ptext45 3B4E  
                                    __ptext37 374E                                      __ptext29 403A  
                                    __ptext70 54A8                                      __ptext62 5AB6  
                                    __ptext54 5DC0                                      __ptext46 4642  
                                    __ptext38 22A0                                      __ptext71 5B9C  
                                    __ptext63 5D12                                      __ptext55 5DCA  
                                    __ptext47 2762                                      __ptext39 419E  
                                    __ptext80 4D74                                      __ptext72 5AE6  
                                    __ptext64 5D2A                                      __ptext56 553E  
                                    __ptext48 4BEE                                      __ptext81 5E0C  
                                    __ptext73 5DE8                                      __ptext65 5D42  
                                    __ptext57 5DD4                                      __ptext49 54F4  
                                    __ptext90 59E8                                      __ptext82 5E0E  
                                    __ptext74 5B14                                      __ptext66 5D5A  
                                    __ptext58 5B70                                      __ptext91 58AA  
                                    __ptext83 5E06                                      __ptext75 5DF2  
                                    __ptext67 5C70                                      __ptext59 5DDE  
                                    __ptext92 5A1C                                      __ptext84 5BC8  
                                    __ptext76 53F8                                      __ptext68 4B24  
                                    __ptext93 58E0                                      __ptext85 583C  
                                    __ptext77 571C                                      __ptext69 5D72  
                                    __ptext94 5A84                                      __ptext86 5B42  
                                    __ptext78 565E                                      __ptext95 5CD8  
                                    __ptext87 5DFC                                      __ptext79 5758  
                                    __ptext96 5D8A                                      __ptext88 5E10  
                                    __ptext97 5BF4                                      __ptext89 5E14  
                                    __ptext98 5C94                                      __ptext99 5588  
                            __size_of_isupper 0038                                      _distLeft 00F5  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 0083  
               __end_of_UART1_SetErrorHandler 5DD4                              __size_of_tolower 0060  
                                  _T3GCONbits 003FA7                                    strcpy@dest 0014  
                            __size_of_strncmp 00F4                                   ??_checkBatt 003A  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                 __size_of_dtoa 02E6  
                                    _oldSpeed 012C                                    _T5GCONbits 003F9B  
                               __size_of_loop 011C                               _SMT1_Initialize 5AB6  
                                 _IVTLOCKbits 003FD4                                      _setMotor 4A42  
                                    _setSpeed 00ED                      __size_of_TMR5_WriteTimer 002C  
                                    efgtoa@fp 0083                                      efgtoa@ne 009F  
                                    efgtoa@pp 009D                                      efgtoa@ou 00A3  
                   _UART1_OverrunErrorHandler 0198  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 5262  
                                   printf@fmt 01A6                    __end_of_PWM8_LoadDutyValue 59B2  
                             _CCP3_CaptureISR 59E8                                   _UART1_Write 539C  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 5CF6     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 5CD8                              ___aomod@dividend 0014  
                              _battCheckCount 0132                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0134  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3593 00D9  
                 __end_of_UART1_RxDataHandler 5BF4                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 58E0                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 59B2  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 3958  
                             _CCP4_CaptureISR 5A1C                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 42EA                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 3EB2  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01AC                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0074  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 5E0C                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012A  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 5D8A                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 5DF2  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 5B14                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 008E                        _getBatteryVoltage$4190 01AE  
                    _UART1_TxInterruptHandler 019C                                 ___fladd@signs 0075  
                         __end_of_Default_ISR 5E16                       __end_of_SMT1_Initialize 5AE6  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 4BEE  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 0076  
                                ___fladd@bexp 0077                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 5A1C  
