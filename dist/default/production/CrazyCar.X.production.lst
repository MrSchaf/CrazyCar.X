

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 01 13:11:10 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=4,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=4,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=4,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=4,class=CODE,delta=1
    76                           	psect	text63,global,reloc=4,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=4,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=4,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=4,class=CODE,delta=1
    86                           	psect	text73,global,reloc=4,class=CODE,delta=1
    87                           	psect	text74,global,reloc=4,class=CODE,delta=1
    88                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text75,global,reloc=4,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.20
    96                           ; Generated 05/05/2020 GMT
    97                           ; 
    98                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F46K42 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataCOMRAM
   131  002796                     __pidataCOMRAM:
   132                           	callstack 0
   133                           
   134                           ;initializer for _driveMode
   135  002796  01                 	db	1
   136                           
   137                           	psect	nvBANK0
   138  0000CC                     __pnvBANK0:
   139                           	callstack 0
   140  0000CC                     _TMR4_InterruptHandler:
   141                           	callstack 0
   142  0000CC                     	ds	2
   143  0000CE                     _timer3ReloadVal:
   144                           	callstack 0
   145  0000CE                     	ds	2
   146  0000D0                     _TMR5_GateInterruptHandler:
   147                           	callstack 0
   148  0000D0                     	ds	2
   149  0000D2                     _timer5ReloadVal:
   150                           	callstack 0
   151  0000D2                     	ds	2
   152  0000D4                     _CCP4_CallBack:
   153                           	callstack 0
   154  0000D4                     	ds	2
   155  0000D6                     _CCP3_CallBack:
   156                           	callstack 0
   157  0000D6                     	ds	2
   158  0000D8                     _UART1_ErrorHandler:
   159                           	callstack 0
   160  0000D8                     	ds	2
   161  0000DA                     _UART1_OverrunErrorHandler:
   162                           	callstack 0
   163  0000DA                     	ds	2
   164  0000DC                     _UART1_FramingErrorHandler:
   165                           	callstack 0
   166  0000DC                     	ds	2
   167  0000DE                     _UART1_TxInterruptHandler:
   168                           	callstack 0
   169  0000DE                     	ds	2
   170  0000E0                     _UART1_RxInterruptHandler:
   171                           	callstack 0
   172  0000E0                     	ds	2
   173  0000E2                     _uart1TxBufferRemaining:
   174                           	callstack 0
   175  0000E2                     	ds	1
   176  0000                     _PIR4bits	set	14756
   177  0000                     _PIR1bits	set	14753
   178  0000                     _PIE1bits	set	14737
   179  0000                     _PIE7bits	set	14743
   180  0000                     _PIR7bits	set	14759
   181  0000                     _PIR6bits	set	14758
   182  0000                     _PIE8bits	set	14744
   183  0000                     _PIR8bits	set	14760
   184  0000                     _PIE10bits	set	14746
   185  0000                     _PIR10bits	set	14762
   186  0000                     _PIE9bits	set	14745
   187  0000                     _PIR9bits	set	14761
   188  0000                     _IPR9bits	set	14729
   189  0000                     _IPR7bits	set	14727
   190  0000                     _IPR8bits	set	14728
   191  0000                     _IPR10bits	set	14730
   192  0000                     _IPR1bits	set	14721
   193  0000                     _IPR3bits	set	14723
   194  0000                     _PIE3bits	set	14739
   195  0000                     _PMD7	set	14791
   196  0000                     _PMD6	set	14790
   197  0000                     _PMD5	set	14789
   198  0000                     _PMD4	set	14788
   199  0000                     _PMD3	set	14787
   200  0000                     _PMD2	set	14786
   201  0000                     _PMD1	set	14785
   202  0000                     _PMD0	set	14784
   203  0000                     _OSCTUNE	set	14814
   204  0000                     _OSCFRQ	set	14815
   205  0000                     _OSCEN	set	14813
   206  0000                     _OSCCON3	set	14811
   207  0000                     _OSCCON1	set	14809
   208  0000                     _CCP4PPS	set	15056
   209  0000                     _SMT1SIGPPS	set	15058
   210  0000                     _CLCIN2PPS	set	15067
   211  0000                     _RB3PPS	set	14859
   212  0000                     _RA3PPS	set	14851
   213  0000                     _SMT1WINPPS	set	15057
   214  0000                     _CLCIN0PPS	set	15065
   215  0000                     _RA4PPS	set	14852
   216  0000                     _T5GPPS	set	15049
   217  0000                     _RA0PPS	set	14848
   218  0000                     _U1RXPPS	set	15077
   219  0000                     _RA1PPS	set	14849
   220  0000                     _CLCIN3PPS	set	15068
   221  0000                     _CCP3PPS	set	15055
   222  0000                     _INLVLE	set	14980
   223  0000                     _INLVLD	set	14964
   224  0000                     _INLVLC	set	14948
   225  0000                     _INLVLB	set	14932
   226  0000                     _INLVLA	set	14916
   227  0000                     _SLRCONE	set	14979
   228  0000                     _SLRCOND	set	14963
   229  0000                     _SLRCONC	set	14947
   230  0000                     _SLRCONB	set	14931
   231  0000                     _SLRCONA	set	14915
   232  0000                     _ODCOND	set	14962
   233  0000                     _ODCONC	set	14946
   234  0000                     _ODCONB	set	14930
   235  0000                     _ODCONA	set	14914
   236  0000                     _ODCONE	set	14978
   237  0000                     _RD1I2C	set	14971
   238  0000                     _RD0I2C	set	14970
   239  0000                     _RC4I2C	set	14955
   240  0000                     _RC3I2C	set	14954
   241  0000                     _RB2I2C	set	14939
   242  0000                     _RB1I2C	set	14938
   243  0000                     _WPUC	set	14945
   244  0000                     _WPUA	set	14913
   245  0000                     _WPUB	set	14929
   246  0000                     _WPUE	set	14977
   247  0000                     _WPUD	set	14961
   248  0000                     _ANSELA	set	14912
   249  0000                     _ANSELE	set	14976
   250  0000                     _ANSELB	set	14928
   251  0000                     _ANSELC	set	14944
   252  0000                     _ANSELD	set	14960
   253  0000                     _CLC3CON	set	15456
   254  0000                     _CLC3GLS3	set	15465
   255  0000                     _CLC3GLS2	set	15464
   256  0000                     _CLC3GLS1	set	15463
   257  0000                     _CLC3GLS0	set	15462
   258  0000                     _CLC3SEL3	set	15461
   259  0000                     _CLC3SEL2	set	15460
   260  0000                     _CLC3SEL1	set	15459
   261  0000                     _CLC3SEL0	set	15458
   262  0000                     _CLC3POL	set	15457
   263  0000                     _CLC3CONbits	set	15456
   264  0000                     _U1RXB	set	15848
   265  0000                     _U1TXB	set	15850
   266  0000                     _U1ERRIRbits	set	15865
   267  0000                     _U1ERRIE	set	15866
   268  0000                     _U1ERRIR	set	15865
   269  0000                     _U1UIR	set	15864
   270  0000                     _U1FIFO	set	15863
   271  0000                     _U1BRGH	set	15862
   272  0000                     _U1BRGL	set	15861
   273  0000                     _U1CON2	set	15860
   274  0000                     _U1CON1	set	15859
   275  0000                     _U1CON0	set	15858
   276  0000                     _U1P3H	set	15857
   277  0000                     _U1P3L	set	15856
   278  0000                     _U1P2H	set	15855
   279  0000                     _U1P2L	set	15854
   280  0000                     _U1P1H	set	15853
   281  0000                     _U1P1L	set	15852
   282  0000                     _ADCON1bits	set	16121
   283  0000                     _ADERRL	set	16098
   284  0000                     _ADERRH	set	16099
   285  0000                     _ADPREVL	set	16109
   286  0000                     _ADPREVH	set	16110
   287  0000                     _ADFLTRL	set	16102
   288  0000                     _ADFLTRH	set	16103
   289  0000                     _ADSTATbits	set	16124
   290  0000                     _ADACCL	set	16104
   291  0000                     _ADACCH	set	16105
   292  0000                     _ADCON2bits	set	16122
   293  0000                     _ADCNT	set	16107
   294  0000                     _ADCON3bits	set	16123
   295  0000                     _ADRESL	set	16111
   296  0000                     _ADRESH	set	16112
   297  0000                     _ADCON0bits	set	16120
   298  0000                     _ADCON0	set	16120
   299  0000                     _ADCLK	set	16127
   300  0000                     _ADACT	set	16126
   301  0000                     _ADREF	set	16125
   302  0000                     _ADSTAT	set	16124
   303  0000                     _ADCON3	set	16123
   304  0000                     _ADCON2	set	16122
   305  0000                     _ADCON1	set	16121
   306  0000                     _ADPREH	set	16119
   307  0000                     _ADPREL	set	16118
   308  0000                     _ADCAP	set	16117
   309  0000                     _ADACQH	set	16116
   310  0000                     _ADACQL	set	16115
   311  0000                     _ADPCH	set	16113
   312  0000                     _ADRPT	set	16108
   313  0000                     _ADACCU	set	16106
   314  0000                     _ADSTPTH	set	16101
   315  0000                     _ADSTPTL	set	16100
   316  0000                     _ADUTHH	set	16097
   317  0000                     _ADUTHL	set	16096
   318  0000                     _ADLTHH	set	16095
   319  0000                     _ADLTHL	set	16094
   320  0000                     _SMT1TMR	set	16146
   321  0000                     _SMT1CPR	set	16149
   322  0000                     _SMT1CPW	set	16152
   323  0000                     _SMT1PR	set	16155
   324  0000                     _SMT1STATbits	set	16160
   325  0000                     _SMT1CON0bits	set	16158
   326  0000                     _SMT1CON1bits	set	16159
   327  0000                     _SMT1PRL	set	16155
   328  0000                     _SMT1PRH	set	16156
   329  0000                     _SMT1PRU	set	16157
   330  0000                     _SMT1SIG	set	16162
   331  0000                     _SMT1WIN	set	16163
   332  0000                     _SMT1CLK	set	16161
   333  0000                     _SMT1STAT	set	16160
   334  0000                     _SMT1CON1	set	16159
   335  0000                     _SMT1CON0	set	16158
   336  0000                     _CCPTMRS1bits	set	16223
   337  0000                     _CCPTMRS0bits	set	16222
   338  0000                     _PORTBbits	set	16331
   339  0000                     _PR2	set	16299
   340  0000                     _TMR2	set	16298
   341  0000                     _T2CONbits	set	16300
   342  0000                     _T2RSTbits	set	16303
   343  0000                     _T2HLTbits	set	16301
   344  0000                     _T2CON	set	16300
   345  0000                     _T2TMR	set	16298
   346  0000                     _T2PR	set	16299
   347  0000                     _T2RST	set	16303
   348  0000                     _T2HLT	set	16301
   349  0000                     _T2CLKCON	set	16302
   350  0000                     _PWM6DCL	set	16232
   351  0000                     _PWM6DCH	set	16233
   352  0000                     _PWM6CON	set	16234
   353  0000                     _PWM5DCL	set	16236
   354  0000                     _PWM5DCH	set	16237
   355  0000                     _PWM5CON	set	16238
   356  0000                     _PWM8DCL	set	16224
   357  0000                     _PWM8DCH	set	16225
   358  0000                     _PWM8CON	set	16226
   359  0000                     _PWM7DCL	set	16228
   360  0000                     _PWM7DCH	set	16229
   361  0000                     _PWM7CON	set	16230
   362  0000                     _PR4	set	16287
   363  0000                     _TMR4	set	16286
   364  0000                     _T4CONbits	set	16288
   365  0000                     _T4RSTbits	set	16291
   366  0000                     _T4HLTbits	set	16289
   367  0000                     _T4CON	set	16288
   368  0000                     _T4TMR	set	16286
   369  0000                     _T4PR	set	16287
   370  0000                     _T4RST	set	16291
   371  0000                     _T4HLT	set	16289
   372  0000                     _T4CLKCON	set	16290
   373  0000                     _T3GCONbits	set	16295
   374  0000                     _T3CONbits	set	16294
   375  0000                     _T3CON	set	16294
   376  0000                     _TMR3L	set	16292
   377  0000                     _TMR3H	set	16293
   378  0000                     _T3CLK	set	16297
   379  0000                     _T3GATE	set	16296
   380  0000                     _T3GCON	set	16295
   381  0000                     _T5GCONbits	set	16283
   382  0000                     _T5CONbits	set	16282
   383  0000                     _T5CON	set	16282
   384  0000                     _TMR5L	set	16280
   385  0000                     _TMR5H	set	16281
   386  0000                     _T5CLK	set	16285
   387  0000                     _T5GATE	set	16284
   388  0000                     _T5GCON	set	16283
   389  0000                     _CCPR4L	set	16240
   390  0000                     _CCPR4H	set	16241
   391  0000                     _CCP4CAP	set	16243
   392  0000                     _CCP4CON	set	16242
   393  0000                     _CCPR3L	set	16244
   394  0000                     _CCPR3H	set	16245
   395  0000                     _CCP3CAP	set	16247
   396  0000                     _CCP3CON	set	16246
   397  0000                     _PORTDbits	set	16333
   398  0000                     _IVTBASEL	set	16341
   399  0000                     _IVTBASEH	set	16342
   400  0000                     _IVTBASEU	set	16343
   401  0000                     _IVTLOCKbits	set	16340
   402  0000                     _IVTLOCK	set	16340
   403  0000                     _INTCON0bits	set	16338
   404  0000                     _TRISD	set	16325
   405  0000                     _TRISC	set	16324
   406  0000                     _TRISB	set	16323
   407  0000                     _TRISA	set	16322
   408  0000                     _TRISE	set	16326
   409  0000                     _LATC	set	16316
   410  0000                     _LATB	set	16315
   411  0000                     _LATA	set	16314
   412  0000                     _LATD	set	16317
   413  0000                     _LATE	set	16318
   414  0000                     _GIE	set	130711
   415                           
   416                           ; #config settings
   417                           
   418                           	psect	cinit
   419  00216E                     __pcinit:
   420                           	callstack 0
   421  00216E                     start_initialization:
   422                           	callstack 0
   423  00216E                     __initialization:
   424                           	callstack 0
   425                           
   426                           ; Initialize objects allocated to COMRAM (1 bytes)
   427                           ; load TBLPTR registers with __pidataCOMRAM
   428  00216E  0E96               	movlw	low __pidataCOMRAM
   429  002170  6EF6               	movwf	tblptrl,c
   430  002172  0E27               	movlw	high __pidataCOMRAM
   431  002174  6EF7               	movwf	tblptrh,c
   432  002176  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   433  002178  6EF8               	movwf	tblptru,c
   434  00217A  0009               	tblrd		*+	;fetch initializer
   435  00217C  006F FFD4  F04C    	movff	tablat,__pdataCOMRAM
   436                           
   437                           ; Clear objects allocated to BANK0 (63 bytes)
   438  002182  EE00  F060         	lfsr	0,__pbssBANK0
   439  002186  0E3F               	movlw	63
   440  002188                     clear_0:
   441  002188  6AEE               	clrf	postinc0,c
   442  00218A  06E8               	decf	wreg,f,c
   443  00218C  E1FD               	bnz	clear_0
   444                           
   445                           ; Clear objects allocated to COMRAM (18 bytes)
   446  00218E  EE00  F03A         	lfsr	0,__pbssCOMRAM
   447  002192  0E12               	movlw	18
   448  002194                     clear_1:
   449  002194  6AEE               	clrf	postinc0,c
   450  002196  06E8               	decf	wreg,f,c
   451  002198  E1FD               	bnz	clear_1
   452                           
   453                           ;
   454                           ; Setup IVTBASE
   455                           ;
   456  00219A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   457  00219C  6ED5               	movwf	213,c
   458  00219E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   459  0021A0  6ED6               	movwf	214,c
   460  0021A2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   461  0021A4  6ED7               	movwf	215,c
   462  0021A6                     end_of_initialization:
   463                           	callstack 0
   464  0021A6                     __end_of__initialization:
   465                           	callstack 0
   466  0021A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   467  0021A8  6EF8               	movwf	tblptru,c
   468  0021AA  0100               	movlb	0
   469  0021AC  EF24  F013         	goto	_main	;jump to C main() function
   470                           
   471                           	psect	bssCOMRAM
   472  00003A                     __pbssCOMRAM:
   473                           	callstack 0
   474  00003A                     _oldDistLeft:
   475                           	callstack 0
   476  00003A                     	ds	2
   477  00003C                     TMR4_ISR@CountCallBack:
   478                           	callstack 0
   479  00003C                     	ds	2
   480  00003E                     _delay:
   481                           	callstack 0
   482  00003E                     	ds	1
   483  00003F                     _curveMode:
   484                           	callstack 0
   485  00003F                     	ds	1
   486  000040                     _uart1RxLastError:
   487                           	callstack 0
   488  000040                     	ds	1
   489  000041                     _uart1RxCount:
   490                           	callstack 0
   491  000041                     	ds	1
   492  000042                     _uart1RxTail:
   493                           	callstack 0
   494  000042                     	ds	1
   495  000043                     _uart1RxHead:
   496                           	callstack 0
   497  000043                     	ds	1
   498  000044                     _uart1TxTail:
   499                           	callstack 0
   500  000044                     	ds	1
   501  000045                     _uart1TxHead:
   502                           	callstack 0
   503  000045                     	ds	1
   504  000046                     _smtPeriod:
   505                           	callstack 0
   506  000046                     	ds	4
   507  00004A                     _distFront:
   508                           	callstack 0
   509  00004A                     	ds	2
   510                           
   511                           	psect	dataCOMRAM
   512  00004C                     __pdataCOMRAM:
   513                           	callstack 0
   514  00004C                     _driveMode:
   515                           	callstack 0
   516  00004C                     	ds	1
   517                           
   518                           	psect	bssBANK0
   519  000060                     __pbssBANK0:
   520                           	callstack 0
   521  000060                     _uart1RxStatusBuffer:
   522                           	callstack 0
   523  000060                     	ds	8
   524  000068                     _uart1RxBuffer:
   525                           	callstack 0
   526  000068                     	ds	8
   527  000070                     _uart1TxBuffer:
   528                           	callstack 0
   529  000070                     	ds	8
   530  000078                     _smtWay:
   531                           	callstack 0
   532  000078                     	ds	4
   533  00007C                     _smtDuty:
   534                           	callstack 0
   535  00007C                     	ds	4
   536  000080                     _BatteryVolt:
   537                           	callstack 0
   538  000080                     	ds	2
   539  000082                     _reverseTime:
   540                           	callstack 0
   541  000082                     	ds	2
   542  000084                     _actMotorPow:
   543                           	callstack 0
   544  000084                     	ds	2
   545  000086                     _oldSpeed:
   546                           	callstack 0
   547  000086                     	ds	2
   548  000088                     _currentSpeed:
   549                           	callstack 0
   550  000088                     	ds	2
   551  00008A                     _setSpeed:
   552                           	callstack 0
   553  00008A                     	ds	2
   554  00008C                     _motPow:
   555                           	callstack 0
   556  00008C                     	ds	2
   557  00008E                     _middleOffSet:
   558                           	callstack 0
   559  00008E                     	ds	2
   560  000090                     _battCheckCount:
   561                           	callstack 0
   562  000090                     	ds	2
   563  000092                     _oldDistRight:
   564                           	callstack 0
   565  000092                     	ds	2
   566  000094                     _reverseCount:
   567                           	callstack 0
   568  000094                     	ds	2
   569  000096                     _distRightM:
   570                           	callstack 0
   571  000096                     	ds	2
   572  000098                     _distRight:
   573                           	callstack 0
   574  000098                     	ds	2
   575  00009A                     _distLeftM:
   576                           	callstack 0
   577  00009A                     	ds	2
   578  00009C                     _distLeft:
   579                           	callstack 0
   580  00009C                     	ds	2
   581  00009E                     _cycle10ms:
   582                           	callstack 0
   583  00009E                     	ds	1
   584                           
   585                           	psect	cstackBANK0
   586  00009F                     __pcstackBANK0:
   587                           	callstack 0
   588  00009F                     ___flmul@sign:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x0
   592  00009F                     	ds	1
   593  0000A0                     ___flmul@aexp:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x1
   597  0000A0                     	ds	1
   598  0000A1                     ___flmul@grs:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x2
   602  0000A1                     	ds	4
   603  0000A5                     ___flmul@bexp:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x6
   607  0000A5                     	ds	1
   608  0000A6                     ___flmul@prod:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x7
   612  0000A6                     	ds	4
   613  0000AA                     ___flmul@temp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0xB
   617  0000AA                     	ds	2
   618  0000AC                     ?___fladd:
   619                           	callstack 0
   620  0000AC                     ___fladd@b:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0xD
   624  0000AC                     	ds	4
   625  0000B0                     ___fladd@a:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x11
   629  0000B0                     	ds	4
   630  0000B4                     ___fladd@signs:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x15
   634  0000B4                     	ds	1
   635  0000B5                     ___fladd@aexp:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x16
   639  0000B5                     	ds	1
   640  0000B6                     ___fladd@bexp:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x17
   644  0000B6                     	ds	1
   645  0000B7                     ___fladd@grs:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x18
   649  0000B7                     	ds	1
   650  0000B8                     ?___fltol:
   651                           	callstack 0
   652  0000B8                     ___fltol@f1:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x19
   656  0000B8                     	ds	4
   657  0000BC                     ??___fltol:
   658                           
   659                           ; 1 bytes @ 0x1D
   660  0000BC                     	ds	4
   661  0000C0                     ___fltol@sign1:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x21
   665  0000C0                     	ds	1
   666  0000C1                     ___fltol@exp1:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x22
   670  0000C1                     	ds	1
   671  0000C2                     ??_calcSteering:
   672  0000C2                     ??_calcSpeed:
   673  0000C2                     ??_calcMotorPow:
   674                           
   675                           ; 1 bytes @ 0x23
   676  0000C2                     	ds	2
   677  0000C4                     calcMotorPow@setSpeedDelta:
   678                           	callstack 0
   679  0000C4                     _calcSteering$3896:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x25
   683  0000C4                     	ds	2
   684  0000C6                     calcSteering@delta:
   685                           	callstack 0
   686  0000C6                     calcSpeed@speed:
   687                           	callstack 0
   688  0000C6                     calcMotorPow@oldSpeedDelta:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x27
   692  0000C6                     	ds	2
   693  0000C8                     calcMotorPow@addMPow:
   694                           	callstack 0
   695  0000C8                     startAccell@MPow:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x29
   699  0000C8                     	ds	4
   700                           
   701                           	psect	cstackCOMRAM
   702  000001                     __pcstackCOMRAM:
   703                           	callstack 0
   704  000001                     CCP3_DefaultCallBack@capturedValue:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x0
   708  000001                     	ds	2
   709  000003                     CCP3_CaptureISR@module:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x2
   713  000003                     	ds	2
   714  000005                     CCP4_DefaultCallBack@capturedValue:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x4
   718  000005                     	ds	2
   719  000007                     CCP4_CaptureISR@module:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x6
   723  000007                     	ds	2
   724  000009                     ?_TMR5_ReadTimer:
   725                           	callstack 0
   726  000009                     TMR5_WriteTimer@timerVal:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x8
   730  000009                     	ds	2
   731  00000B                     ??_TMR5_ReadTimer:
   732  00000B                     
   733                           ; 1 bytes @ 0xA
   734  00000B                     	ds	2
   735  00000D                     TMR5_ReadTimer@readVal:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0xC
   739  00000D                     	ds	2
   740  00000F                     TMR5_ReadTimer@readValHigh:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0xE
   744  00000F                     	ds	1
   745  000010                     TMR5_ReadTimer@readValLow:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0xF
   749  000010                     	ds	1
   750  000011                     ??_UART1_tx_vect_isr:
   751  000011                     
   752                           ; 1 bytes @ 0x10
   753  000011                     	ds	1
   754  000012                     ??_UART1_rx_vect_isr:
   755                           
   756                           ; 1 bytes @ 0x11
   757  000012                     	ds	1
   758  000013                     ??_TMR4_ISR:
   759                           
   760                           ; 1 bytes @ 0x12
   761  000013                     	ds	1
   762  000014                     ??_TMR3_Initialize:
   763  000014                     ??_getCurve:
   764  000014                     ?___awdiv:
   765                           	callstack 0
   766  000014                     ?___aldiv:
   767                           	callstack 0
   768  000014                     INTERRUPT_Initialize@state:
   769                           	callstack 0
   770  000014                     UART1_SetFramingErrorHandler@interruptHandler:
   771                           	callstack 0
   772  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
   773                           	callstack 0
   774  000014                     UART1_SetErrorHandler@interruptHandler:
   775                           	callstack 0
   776  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
   777                           	callstack 0
   778  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
   779                           	callstack 0
   780  000014                     CCP3_SetCallBack@customCallBack:
   781                           	callstack 0
   782  000014                     CCP4_SetCallBack@customCallBack:
   783                           	callstack 0
   784  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
   785                           	callstack 0
   786  000014                     TMR4_SetInterruptHandler@InterruptHandler:
   787                           	callstack 0
   788  000014                     PWM7_LoadDutyValue@dutyValue:
   789                           	callstack 0
   790  000014                     PWM8_LoadDutyValue@dutyValue:
   791                           	callstack 0
   792  000014                     PWM5_LoadDutyValue@dutyValue:
   793                           	callstack 0
   794  000014                     PWM6_LoadDutyValue@dutyValue:
   795                           	callstack 0
   796  000014                     ___awdiv@dividend:
   797                           	callstack 0
   798  000014                     ___aldiv@dividend:
   799                           	callstack 0
   800  000014                     ___flge@ff1:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x13
   804  000014                     	ds	2
   805  000016                     ??_TMR5_Initialize:
   806  000016                     ??_PWM7_LoadDutyValue:
   807  000016                     ??_PWM8_LoadDutyValue:
   808  000016                     ??_PWM5_LoadDutyValue:
   809  000016                     ??_PWM6_LoadDutyValue:
   810  000016                     getCurve@deltaRight:
   811                           	callstack 0
   812  000016                     ___awdiv@divisor:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x15
   816  000016                     	ds	2
   817  000018                     ___awdiv@counter:
   818                           	callstack 0
   819  000018                     getCurve@deltaLeft:
   820                           	callstack 0
   821  000018                     setMotor@motorPower:
   822                           	callstack 0
   823  000018                     ___aldiv@divisor:
   824                           	callstack 0
   825  000018                     ___flge@ff2:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x17
   829  000018                     	ds	1
   830  000019                     ___awdiv@sign:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x18
   834  000019                     	ds	1
   835  00001A                     ??_setMotor:
   836  00001A                     ___awdiv@quotient:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x19
   840  00001A                     	ds	2
   841  00001C                     ??___flge:
   842  00001C                     ?___xxtofl:
   843                           	callstack 0
   844  00001C                     ___aldiv@counter:
   845                           	callstack 0
   846  00001C                     setSteering@steering:
   847                           	callstack 0
   848  00001C                     ___xxtofl@val:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x1B
   852  00001C                     	ds	1
   853  00001D                     ___aldiv@sign:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x1C
   857  00001D                     	ds	1
   858  00001E                     setSteering@steeringMode:
   859                           	callstack 0
   860  00001E                     ___aldiv@quotient:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x1D
   864  00001E                     	ds	1
   865  00001F                     ??_setSteering:
   866                           
   867                           ; 1 bytes @ 0x1E
   868  00001F                     	ds	1
   869  000020                     ??___xxtofl:
   870                           
   871                           ; 1 bytes @ 0x1F
   872  000020                     	ds	1
   873  000021                     setSteering@steeringF:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x20
   877  000021                     	ds	1
   878  000022                     ?_actSpeed:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x21
   882  000022                     	ds	1
   883  000023                     setSteering@steeringB:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x22
   887  000023                     	ds	1
   888  000024                     ___xxtofl@sign:
   889                           	callstack 0
   890  000024                     actSpeed@speed:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x23
   894  000024                     	ds	1
   895  000025                     ___xxtofl@exp:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x24
   899  000025                     	ds	1
   900  000026                     ___xxtofl@arg:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0x25
   904  000026                     	ds	4
   905  00002A                     ?___flmul:
   906                           	callstack 0
   907  00002A                     ___flmul@b:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x29
   911  00002A                     	ds	4
   912  00002E                     ___flmul@a:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x2D
   916  00002E                     	ds	4
   917  000032                     ??___flmul:
   918                           
   919                           ; 1 bytes @ 0x31
   920  000032                     	ds	4
   921  000036                     ??___fladd:
   922                           
   923                           ; 1 bytes @ 0x35
   924  000036                     	ds	4
   925  00003A                     
   926                           ; 1 bytes @ 0x39
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 8 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels required when called: 13
   952 ;; This function calls:
   953 ;;		_SYSTEM_Initialize
   954 ;;		_TMR4_SetInterruptHandler
   955 ;;		_loop
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text0
   962  002648                     __ptext0:
   963                           	callstack 0
   964  002648                     _main:
   965                           	callstack 18
   966  002648                     
   967                           ;main.c: 9:     SYSTEM_Initialize();
   968  002648  EC24  F010         	call	_SYSTEM_Initialize	;wreg free
   969  00264C                     
   970                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
   971  00264C  8ED2               	bsf	210,7,c	;volatile
   972  00264E                     
   973                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
   974  00264E  8CD2               	bsf	210,6,c	;volatile
   975                           
   976                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
   977  002650  0E86               	movlw	low _TMR4_10msISR
   978  002652  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
   979  002654  0E27               	movlw	high _TMR4_10msISR
   980  002656  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
   981  002658  ECB1  F013         	call	_TMR4_SetInterruptHandler	;wreg free
   982  00265C                     l5831:
   983                           
   984                           ;main.c: 15:         loop();
   985  00265C  ECB1  F00E         	call	_loop	;wreg free
   986  002660  EF2E  F013         	goto	l5831
   987  002664  EF57  F000         	goto	start
   988  002668                     __end_of_main:
   989                           	callstack 0
   990                           
   991 ;; *************** function _loop *****************
   992 ;; Defined at:
   993 ;;		line 19 in file "main.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 12
  1014 ;; This function calls:
  1015 ;;		_calcMotorPow
  1016 ;;		_calcSpeed
  1017 ;;		_calcSteering
  1018 ;;		_getCurve
  1019 ;;		_getReverse
  1020 ;;		_setMotor
  1021 ;;		_setSteering
  1022 ;;		_startAccell
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text1
  1029  001D62                     __ptext1:
  1030                           	callstack 0
  1031  001D62                     _loop:
  1032                           	callstack 18
  1033  001D62                     
  1034                           ;main.c: 20:     setMotor(0);
  1035  001D62  0E00               	movlw	0
  1036  001D64  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1037  001D66  0E00               	movlw	0
  1038  001D68  6E18               	movwf	setMotor@motorPower^0,c
  1039  001D6A  EC16  F00D         	call	_setMotor	;wreg free
  1040                           
  1041                           ;main.c: 21:     setSteering(0, Front);
  1042  001D6E  0E00               	movlw	0
  1043  001D70  6E1D               	movwf	(setSteering@steering+1)^0,c
  1044  001D72  0E00               	movlw	0
  1045  001D74  6E1C               	movwf	setSteering@steering^0,c
  1046  001D76  0E03               	movlw	3
  1047  001D78  6E1E               	movwf	setSteering@steeringMode^0,c
  1048  001D7A  ECFF  F008         	call	_setSteering	;wreg free
  1049  001D7E                     l1218:
  1050  001D7E  B8CB               	btfsc	203,4,c	;volatile
  1051  001D80  EFC4  F00E         	goto	u4611
  1052  001D84  EFC6  F00E         	goto	u4610
  1053  001D88                     u4611:
  1054  001D88  EFBF  F00E         	goto	l1218
  1055  001D8C                     u4610:
  1056  001D8C                     
  1057                           ;main.c: 31:     startAccell();
  1058  001D8C  EC73  F00A         	call	_startAccell	;wreg free
  1059  001D90                     
  1060                           ;main.c: 33:     driveMode = Straight;
  1061  001D90  0E01               	movlw	1
  1062  001D92  6E4C               	movwf	_driveMode^0,c
  1063  001D94                     
  1064                           ;main.c: 34:     curveMode = OutCurve;
  1065  001D94  0E00               	movlw	0
  1066  001D96  6E3F               	movwf	_curveMode^0,c
  1067  001D98                     
  1068                           ;main.c: 35:     oldDistLeft = distLeft;
  1069  001D98  C09C  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  1070  001D9C  C09D  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1071  001DA0                     
  1072                           ;main.c: 36:     oldDistRight = distRight;
  1073  001DA0  C098  F092         	movff	_distRight,_oldDistRight	;volatile
  1074  001DA4  C099  F093         	movff	_distRight+1,_oldDistRight+1	;volatile
  1075  001DA8                     
  1076                           ;main.c: 37:     cycle10ms = 0;
  1077  001DA8  0E00               	movlw	0
  1078  001DAA  0100               	movlb	0	; () banked
  1079  001DAC  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1080  001DAE                     l5807:
  1081  001DAE  0100               	movlb	0	; () banked
  1082  001DB0  519E               	movf	_cycle10ms& (0+255),w,b	;volatile
  1083  001DB2  B4D8               	btfsc	status,2,c
  1084  001DB4  EFDE  F00E         	goto	u4621
  1085  001DB8  EFE0  F00E         	goto	u4620
  1086  001DBC                     u4621:
  1087  001DBC  EFD7  F00E         	goto	l5807
  1088  001DC0                     u4620:
  1089  001DC0                     
  1090                           ; BSR set to: 0
  1091                           ;main.c: 40:         cycle10ms = 0;
  1092  001DC0  0E00               	movlw	0
  1093  001DC2  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1094  001DC4                     
  1095                           ; BSR set to: 0
  1096                           ;main.c: 42:         if (!PORTBbits.RB5) {
  1097  001DC4  BACB               	btfsc	203,5,c	;volatile
  1098  001DC6  EFE7  F00E         	goto	u4631
  1099  001DCA  EFE9  F00E         	goto	u4630
  1100  001DCE                     u4631:
  1101  001DCE  EFFB  F00E         	goto	l5817
  1102  001DD2                     u4630:
  1103  001DD2                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 43:             setSpeed = 0;
  1106  001DD2  0E00               	movlw	0
  1107  001DD4  6F8B               	movwf	(_setSpeed+1)& (0+255),b
  1108  001DD6  0E00               	movlw	0
  1109  001DD8  6F8A               	movwf	_setSpeed& (0+255),b
  1110                           
  1111                           ;main.c: 44:             actMotorPow = 0;
  1112  001DDA  0E00               	movlw	0
  1113  001DDC  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1114  001DDE  0E00               	movlw	0
  1115  001DE0  6F84               	movwf	_actMotorPow& (0+255),b
  1116  001DE2                     
  1117                           ; BSR set to: 0
  1118                           ;main.c: 45:             setSteering(0, Front);
  1119  001DE2  0E00               	movlw	0
  1120  001DE4  6E1D               	movwf	(setSteering@steering+1)^0,c
  1121  001DE6  0E00               	movlw	0
  1122  001DE8  6E1C               	movwf	setSteering@steering^0,c
  1123  001DEA  0E03               	movlw	3
  1124  001DEC  6E1E               	movwf	setSteering@steeringMode^0,c
  1125  001DEE  ECFF  F008         	call	_setSteering	;wreg free
  1126                           
  1127                           ;main.c: 46:             break;
  1128  001DF2  EF07  F00F         	goto	l1228
  1129  001DF6                     l5817:
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;main.c: 55:         getCurve();
  1133  001DF6  ECE2  F004         	call	_getCurve	;wreg free
  1134                           
  1135                           ;main.c: 56:         getReverse();
  1136  001DFA  EC98  F00C         	call	_getReverse	;wreg free
  1137  001DFE                     
  1138                           ;main.c: 58:         calcSteering();
  1139  001DFE  EC08  F006         	call	_calcSteering	;wreg free
  1140  001E02                     
  1141                           ;main.c: 59:         calcSpeed();
  1142  001E02  EC20  F007         	call	_calcSpeed	;wreg free
  1143  001E06                     
  1144                           ;main.c: 60:         calcMotorPow();
  1145  001E06  ECD1  F009         	call	_calcMotorPow	;wreg free
  1146  001E0A  EFD7  F00E         	goto	l5807
  1147  001E0E                     l1228:
  1148  001E0E  0012               	return		;funcret
  1149  001E10                     __end_of_loop:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _startAccell *****************
  1153 ;; Defined at:
  1154 ;;		line 100 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  MPow            4   41[BANK0 ] float 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;Total ram usage:        4 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; Hardware stack levels required when called: 11
  1175 ;; This function calls:
  1176 ;;		___flge
  1177 ;;		___flmul
  1178 ;;		___fltol
  1179 ;;		___xxtofl
  1180 ;;		_calcSteering
  1181 ;;		_setMotor
  1182 ;;		_setSteering
  1183 ;; This function is called by:
  1184 ;;		_loop
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text2
  1189  0014E6                     __ptext2:
  1190                           	callstack 0
  1191  0014E6                     _startAccell:
  1192                           	callstack 18
  1193  0014E6                     
  1194                           ;main.c: 101:     setSteering(0, Front);
  1195  0014E6  0E00               	movlw	0
  1196  0014E8  6E1D               	movwf	(setSteering@steering+1)^0,c
  1197  0014EA  0E00               	movlw	0
  1198  0014EC  6E1C               	movwf	setSteering@steering^0,c
  1199  0014EE  0E03               	movlw	3
  1200  0014F0  6E1E               	movwf	setSteering@steeringMode^0,c
  1201  0014F2  ECFF  F008         	call	_setSteering	;wreg free
  1202  0014F6                     
  1203                           ;main.c: 102:     driveMode = Accel;
  1204  0014F6  0E00               	movlw	0
  1205  0014F8  6E4C               	movwf	_driveMode^0,c
  1206  0014FA                     
  1207                           ;main.c: 104:     actMotorPow = (40);
  1208  0014FA  0E00               	movlw	0
  1209  0014FC  0100               	movlb	0	; () banked
  1210  0014FE  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1211  001500  0E28               	movlw	40
  1212  001502  6F84               	movwf	_actMotorPow& (0+255),b
  1213                           
  1214                           ;main.c: 105:     float MPow = actMotorPow;
  1215  001504  C084  F01C         	movff	_actMotorPow,___xxtofl@val
  1216  001508  C085  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1217  00150C  0E00               	movlw	0
  1218  00150E  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1219  001510  0EFF               	movlw	-1
  1220  001512  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1221  001514  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1222  001516  0E01               	movlw	1
  1223  001518  EC25  F008         	call	___xxtofl
  1224  00151C  C01C  F0C8         	movff	?___xxtofl,startAccell@MPow
  1225  001520  C01D  F0C9         	movff	?___xxtofl+1,startAccell@MPow+1
  1226  001524  C01E  F0CA         	movff	?___xxtofl+2,startAccell@MPow+2
  1227  001528  C01F  F0CB         	movff	?___xxtofl+3,startAccell@MPow+3
  1228                           
  1229                           ;main.c: 107:     while (MPow < (250)) {
  1230  00152C  EFD3  F00A         	goto	l5689
  1231  001530                     l5679:
  1232                           
  1233                           ;main.c: 108:         MPow *= (1.1);
  1234  001530  C0C8  F02A         	movff	startAccell@MPow,___flmul@b
  1235  001534  C0C9  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  1236  001538  C0CA  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  1237  00153C  C0CB  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  1238  001540  0ECD               	movlw	205
  1239  001542  6E2E               	movwf	___flmul@a^0,c
  1240  001544  0ECC               	movlw	204
  1241  001546  6E2F               	movwf	(___flmul@a+1)^0,c
  1242  001548  0E8C               	movlw	140
  1243  00154A  6E30               	movwf	(___flmul@a+2)^0,c
  1244  00154C  0E3F               	movlw	63
  1245  00154E  6E31               	movwf	(___flmul@a+3)^0,c
  1246  001550  ECBA  F002         	call	___flmul	;wreg free
  1247  001554  C02A  F0C8         	movff	?___flmul,startAccell@MPow
  1248  001558  C02B  F0C9         	movff	?___flmul+1,startAccell@MPow+1
  1249  00155C  C02C  F0CA         	movff	?___flmul+2,startAccell@MPow+2
  1250  001560  C02D  F0CB         	movff	?___flmul+3,startAccell@MPow+3
  1251  001564                     
  1252                           ;main.c: 109:         actMotorPow = (int16_t) MPow;
  1253  001564  C0C8  F0B8         	movff	startAccell@MPow,___fltol@f1
  1254  001568  C0C9  F0B9         	movff	startAccell@MPow+1,___fltol@f1+1
  1255  00156C  C0CA  F0BA         	movff	startAccell@MPow+2,___fltol@f1+2
  1256  001570  C0CB  F0BB         	movff	startAccell@MPow+3,___fltol@f1+3
  1257  001574  EC92  F00B         	call	___fltol	;wreg free
  1258  001578  C0B8  F084         	movff	?___fltol,_actMotorPow
  1259  00157C  C0B9  F085         	movff	?___fltol+1,_actMotorPow+1
  1260  001580                     
  1261                           ;main.c: 110:         setMotor(actMotorPow);
  1262  001580  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1263  001584  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1264  001588  EC16  F00D         	call	_setMotor	;wreg free
  1265                           
  1266                           ;main.c: 112:         calcSteering();
  1267  00158C  EC08  F006         	call	_calcSteering	;wreg free
  1268  001590                     
  1269                           ;main.c: 114:         cycle10ms = 0;
  1270  001590  0E00               	movlw	0
  1271  001592  0100               	movlb	0	; () banked
  1272  001594  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1273  001596                     l5687:
  1274                           
  1275                           ; BSR set to: 0
  1276  001596  519E               	movf	_cycle10ms& (0+255),w,b	;volatile
  1277  001598  B4D8               	btfsc	status,2,c
  1278  00159A  EFD1  F00A         	goto	u4471
  1279  00159E  EFD3  F00A         	goto	u4470
  1280  0015A2                     u4471:
  1281  0015A2  EFCB  F00A         	goto	l5687
  1282  0015A6                     u4470:
  1283  0015A6                     l5689:
  1284                           
  1285                           ;main.c: 107:     while (MPow < (250)) {
  1286  0015A6  C0C8  F014         	movff	startAccell@MPow,___flge@ff1
  1287  0015AA  C0C9  F015         	movff	startAccell@MPow+1,___flge@ff1+1
  1288  0015AE  C0CA  F016         	movff	startAccell@MPow+2,___flge@ff1+2
  1289  0015B2  C0CB  F017         	movff	startAccell@MPow+3,___flge@ff1+3
  1290  0015B6  0E00               	movlw	0
  1291  0015B8  6E18               	movwf	___flge@ff2^0,c
  1292  0015BA  0E00               	movlw	0
  1293  0015BC  6E19               	movwf	(___flge@ff2+1)^0,c
  1294  0015BE  0E7A               	movlw	122
  1295  0015C0  6E1A               	movwf	(___flge@ff2+2)^0,c
  1296  0015C2  0E43               	movlw	67
  1297  0015C4  6E1B               	movwf	(___flge@ff2+3)^0,c
  1298  0015C6  EC16  F00C         	call	___flge	;wreg free
  1299  0015CA  A0D8               	btfss	status,0,c
  1300  0015CC  EFEA  F00A         	goto	u4481
  1301  0015D0  EFEC  F00A         	goto	u4480
  1302  0015D4                     u4481:
  1303  0015D4  EF98  F00A         	goto	l5679
  1304  0015D8                     u4480:
  1305  0015D8                     
  1306                           ;main.c: 118:     actMotorPow = (250);
  1307  0015D8  0E00               	movlw	0
  1308  0015DA  0100               	movlb	0	; () banked
  1309  0015DC  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1310  0015DE  0EFA               	movlw	250
  1311  0015E0  6F84               	movwf	_actMotorPow& (0+255),b
  1312  0015E2                     
  1313                           ; BSR set to: 0
  1314                           ;main.c: 119:     setMotor(actMotorPow);
  1315  0015E2  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1316  0015E6  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1317  0015EA  EC16  F00D         	call	_setMotor	;wreg free
  1318  0015EE                     
  1319                           ;main.c: 122:     cycle10ms = 0;
  1320  0015EE  0E00               	movlw	0
  1321  0015F0  0100               	movlb	0	; () banked
  1322  0015F2  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1323                           
  1324                           ;main.c: 123:     while (cycle10ms < ((50) - (20))){
  1325  0015F4  EFFE  F00A         	goto	l5699
  1326  0015F8                     l5697:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 124:         calcSteering();
  1330  0015F8  EC08  F006         	call	_calcSteering	;wreg free
  1331  0015FC                     l5699:
  1332                           
  1333                           ;main.c: 123:     while (cycle10ms < ((50) - (20))){
  1334  0015FC  0E1D               	movlw	29
  1335  0015FE  0100               	movlb	0	; () banked
  1336  001600  659E               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  1337  001602  EF05  F00B         	goto	u4491
  1338  001606  EF07  F00B         	goto	u4490
  1339  00160A                     u4491:
  1340  00160A  EFFC  F00A         	goto	l5697
  1341  00160E                     u4490:
  1342  00160E                     
  1343                           ; BSR set to: 0
  1344                           ;main.c: 126:     driveMode = Straight;
  1345  00160E  0E01               	movlw	1
  1346  001610  6E4C               	movwf	_driveMode^0,c
  1347  001612                     
  1348                           ; BSR set to: 0
  1349                           ;main.c: 127:     calcSteering();
  1350  001612  EC08  F006         	call	_calcSteering	;wreg free
  1351  001616  0012               	return		;funcret
  1352  001618                     __end_of_startAccell:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _calcSteering *****************
  1356 ;; Defined at:
  1357 ;;		line 235 in file "main.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  delta           2   39[BANK0 ] short 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;Total ram usage:        6 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 10
  1378 ;; This function calls:
  1379 ;;		___awdiv
  1380 ;;		___flmul
  1381 ;;		___fltol
  1382 ;;		___xxtofl
  1383 ;;		_setSteering
  1384 ;; This function is called by:
  1385 ;;		_loop
  1386 ;;		_startAccell
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text3
  1391  000C10                     __ptext3:
  1392                           	callstack 0
  1393  000C10                     _calcSteering:
  1394                           	callstack 18
  1395  000C10                     
  1396                           ;main.c: 236:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  1397  000C10  0EF3               	movlw	243
  1398  000C12  6E2E               	movwf	___flmul@a^0,c
  1399  000C14  0E04               	movlw	4
  1400  000C16  6E2F               	movwf	(___flmul@a+1)^0,c
  1401  000C18  0EB5               	movlw	181
  1402  000C1A  6E30               	movwf	(___flmul@a+2)^0,c
  1403  000C1C  0E3F               	movlw	63
  1404  000C1E  6E31               	movwf	(___flmul@a+3)^0,c
  1405  000C20  C08E  F01C         	movff	_middleOffSet,___xxtofl@val
  1406  000C24  C08F  F01D         	movff	_middleOffSet+1,___xxtofl@val+1
  1407  000C28  0E00               	movlw	0
  1408  000C2A  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1409  000C2C  0EFF               	movlw	-1
  1410  000C2E  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1411  000C30  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1412  000C32  0E01               	movlw	1
  1413  000C34  EC25  F008         	call	___xxtofl
  1414  000C38  C01C  F02A         	movff	?___xxtofl,___flmul@b
  1415  000C3C  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  1416  000C40  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  1417  000C44  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  1418  000C48  ECBA  F002         	call	___flmul	;wreg free
  1419  000C4C  C02A  F0B8         	movff	?___flmul,___fltol@f1
  1420  000C50  C02B  F0B9         	movff	?___flmul+1,___fltol@f1+1
  1421  000C54  C02C  F0BA         	movff	?___flmul+2,___fltol@f1+2
  1422  000C58  C02D  F0BB         	movff	?___flmul+3,___fltol@f1+3
  1423  000C5C  EC92  F00B         	call	___fltol	;wreg free
  1424  000C60  C098  F0C2         	movff	_distRight,??_calcSteering	;volatile
  1425  000C64  C099  F0C3         	movff	_distRight+1,??_calcSteering+1	;volatile
  1426  000C68  0100               	movlb	0	; () banked
  1427  000C6A  1FC2               	comf	??_calcSteering& (0+255),f,b
  1428  000C6C  1FC3               	comf	(??_calcSteering+1)& (0+255),f,b
  1429  000C6E  4BC2               	infsnz	??_calcSteering& (0+255),f,b
  1430  000C70  2BC3               	incf	(??_calcSteering+1)& (0+255),f,b
  1431  000C72  51B8               	movf	?___fltol& (0+255),w,b
  1432  000C74  5FC2               	subwf	??_calcSteering& (0+255),f,b
  1433  000C76  51B9               	movf	(?___fltol+1)& (0+255),w,b
  1434  000C78  5BC3               	subwfb	(??_calcSteering+1)& (0+255),f,b
  1435  000C7A  519C               	movf	_distLeft& (0+255),w,b	;volatile
  1436  000C7C  25C2               	addwf	??_calcSteering& (0+255),w,b
  1437  000C7E  6FC6               	movwf	calcSteering@delta& (0+255),b
  1438  000C80  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1439  000C82  21C3               	addwfc	(??_calcSteering+1)& (0+255),w,b
  1440  000C84  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1441                           
  1442                           ;main.c: 240:     switch (driveMode) {
  1443  000C86  EF6D  F006         	goto	l5431
  1444  000C8A                     l1307:
  1445  000C8A                     l5421:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 246:             if (delta > (30)) {
  1449  000C8A  BFC7               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  1450  000C8C  EF51  F006         	goto	u4041
  1451  000C90  51C7               	movf	(calcSteering@delta+1)& (0+255),w,b
  1452  000C92  E109               	bnz	u4040
  1453  000C94  0E1F               	movlw	31
  1454  000C96  5DC6               	subwf	calcSteering@delta& (0+255),w,b
  1455  000C98  A0D8               	btfss	status,0,c
  1456  000C9A  EF51  F006         	goto	u4041
  1457  000C9E  EF53  F006         	goto	u4040
  1458  000CA2                     u4041:
  1459  000CA2  EF59  F006         	goto	l5425
  1460  000CA6                     u4040:
  1461  000CA6                     
  1462                           ; BSR set to: 0
  1463                           ;main.c: 247:                 delta = (30);
  1464  000CA6  0E00               	movlw	0
  1465  000CA8  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1466  000CAA  0E1E               	movlw	30
  1467  000CAC  6FC6               	movwf	calcSteering@delta& (0+255),b
  1468                           
  1469                           ;main.c: 248:             } else if (delta < -(30)) {
  1470  000CAE  EFF6  F006         	goto	l5457
  1471  000CB2                     l5425:
  1472                           
  1473                           ; BSR set to: 0
  1474  000CB2  AFC7               	btfss	(calcSteering@delta+1)& (0+255),7,b
  1475  000CB4  EF65  F006         	goto	u4051
  1476  000CB8  0EE2               	movlw	226
  1477  000CBA  5DC6               	subwf	calcSteering@delta& (0+255),w,b
  1478  000CBC  0EFF               	movlw	255
  1479  000CBE  59C7               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  1480  000CC0  B0D8               	btfsc	status,0,c
  1481  000CC2  EF65  F006         	goto	u4051
  1482  000CC6  EF67  F006         	goto	u4050
  1483  000CCA                     u4051:
  1484  000CCA  EF8E  F006         	goto	l1312
  1485  000CCE                     u4050:
  1486  000CCE                     
  1487                           ; BSR set to: 0
  1488                           ;main.c: 249:                 delta = -(30);
  1489  000CCE  0EFF               	movlw	255
  1490  000CD0  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1491  000CD2  0EE2               	movlw	226
  1492  000CD4  6FC6               	movwf	calcSteering@delta& (0+255),b
  1493  000CD6  EFF6  F006         	goto	l5457
  1494  000CDA                     l5431:
  1495                           
  1496                           ; BSR set to: 0
  1497  000CDA  504C               	movf	_driveMode^0,w,c
  1498  000CDC  6FC2               	movwf	??_calcSteering& (0+255),b
  1499  000CDE  6BC3               	clrf	(??_calcSteering+1)& (0+255),b
  1500                           
  1501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1502                           ; Switch size 1, requested type "simple"
  1503                           ; Number of cases is 1, Range of values is 0 to 0
  1504                           ; switch strategies available:
  1505                           ; Name         Instructions Cycles
  1506                           ; simple_byte            4     3 (average)
  1507                           ;	Chosen strategy is simple_byte
  1508  000CE0  51C3               	movf	(??_calcSteering+1)& (0+255),w,b
  1509  000CE2  0A00               	xorlw	0	; case 0
  1510  000CE4  B4D8               	btfsc	status,2,c
  1511  000CE6  EF77  F006         	goto	l5983
  1512  000CEA  EFF6  F006         	goto	l5457
  1513  000CEE                     l5983:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ; Switch size 1, requested type "simple"
  1517                           ; Number of cases is 5, Range of values is 0 to 6
  1518                           ; switch strategies available:
  1519                           ; Name         Instructions Cycles
  1520                           ; simple_byte           16     9 (average)
  1521                           ;	Chosen strategy is simple_byte
  1522  000CEE  51C2               	movf	??_calcSteering& (0+255),w,b
  1523  000CF0  0A00               	xorlw	0	; case 0
  1524  000CF2  B4D8               	btfsc	status,2,c
  1525  000CF4  EF45  F006         	goto	l1307
  1526  000CF8  0A01               	xorlw	1	; case 1
  1527  000CFA  B4D8               	btfsc	status,2,c
  1528  000CFC  EF45  F006         	goto	l5421
  1529  000D00  0A03               	xorlw	3	; case 2
  1530  000D02  B4D8               	btfsc	status,2,c
  1531  000D04  EF45  F006         	goto	l5421
  1532  000D08  0A07               	xorlw	7	; case 5
  1533  000D0A  B4D8               	btfsc	status,2,c
  1534  000D0C  EF45  F006         	goto	l5421
  1535  000D10  0A03               	xorlw	3	; case 6
  1536  000D12  B4D8               	btfsc	status,2,c
  1537  000D14  EF45  F006         	goto	l5421
  1538  000D18  EFF6  F006         	goto	l5457
  1539  000D1C                     l1312:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;main.c: 256:     switch (driveMode) {
  1543  000D1C  EFF6  F006         	goto	l5457
  1544  000D20                     l5433:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 258:             setSteering(delta, Ratio);
  1548  000D20  C0C6  F01C         	movff	calcSteering@delta,setSteering@steering
  1549  000D24  C0C7  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1550  000D28  0E02               	movlw	2
  1551  000D2A  6E1E               	movwf	setSteering@steeringMode^0,c
  1552  000D2C  ECFF  F008         	call	_setSteering	;wreg free
  1553                           
  1554                           ;main.c: 259:             break;
  1555  000D30  EF1F  F007         	goto	l1327
  1556  000D34                     l5435:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;main.c: 261:             setSteering(delta, Front);
  1560  000D34  C0C6  F01C         	movff	calcSteering@delta,setSteering@steering
  1561  000D38  C0C7  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1562  000D3C  0E03               	movlw	3
  1563  000D3E  6E1E               	movwf	setSteering@steeringMode^0,c
  1564  000D40  ECFF  F008         	call	_setSteering	;wreg free
  1565                           
  1566                           ;main.c: 262:             break;
  1567  000D44  EF1F  F007         	goto	l1327
  1568  000D48                     l5437:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;main.c: 264:             setSteering(delta / (2), Front);
  1572  000D48  C0C6  F014         	movff	calcSteering@delta,___awdiv@dividend
  1573  000D4C  C0C7  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  1574  000D50  0E00               	movlw	0
  1575  000D52  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1576  000D54  0E02               	movlw	2
  1577  000D56  6E16               	movwf	___awdiv@divisor^0,c
  1578  000D58  EC4F  F00E         	call	___awdiv	;wreg free
  1579  000D5C  C014  F0C4         	movff	?___awdiv,_calcSteering$3896
  1580  000D60  C015  F0C5         	movff	?___awdiv+1,_calcSteering$3896+1
  1581                           
  1582                           ;main.c: 264:             setSteering(delta / (2), Front);
  1583  000D64  C0C4  F01C         	movff	_calcSteering$3896,setSteering@steering
  1584  000D68  C0C5  F01D         	movff	_calcSteering$3896+1,setSteering@steering+1
  1585  000D6C  0E03               	movlw	3
  1586  000D6E  6E1E               	movwf	setSteering@steeringMode^0,c
  1587  000D70  ECFF  F008         	call	_setSteering	;wreg free
  1588                           
  1589                           ;main.c: 266:             break;
  1590  000D74  EF1F  F007         	goto	l1327
  1591  000D78                     l5439:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 268:             setSteering(-(65), Inverted);
  1595  000D78  0EFF               	movlw	255
  1596  000D7A  6E1D               	movwf	(setSteering@steering+1)^0,c
  1597  000D7C  0EBF               	movlw	191
  1598  000D7E  6E1C               	movwf	setSteering@steering^0,c
  1599  000D80  0E00               	movlw	0
  1600  000D82  6E1E               	movwf	setSteering@steeringMode^0,c
  1601  000D84  ECFF  F008         	call	_setSteering	;wreg free
  1602                           
  1603                           ;main.c: 269:             break;
  1604  000D88  EF1F  F007         	goto	l1327
  1605  000D8C                     l5441:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 271:             setSteering((65), Inverted);
  1609  000D8C  0E00               	movlw	0
  1610  000D8E  6E1D               	movwf	(setSteering@steering+1)^0,c
  1611  000D90  0E41               	movlw	65
  1612  000D92  6E1C               	movwf	setSteering@steering^0,c
  1613  000D94  0E00               	movlw	0
  1614  000D96  6E1E               	movwf	setSteering@steeringMode^0,c
  1615  000D98  ECFF  F008         	call	_setSteering	;wreg free
  1616                           
  1617                           ;main.c: 272:             break;
  1618  000D9C  EF1F  F007         	goto	l1327
  1619  000DA0                     l5443:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;main.c: 274:             if (curveMode == InCurve) {
  1623  000DA0  0E02               	movlw	2
  1624  000DA2  183F               	xorwf	_curveMode^0,w,c
  1625  000DA4  A4D8               	btfss	status,2,c
  1626  000DA6  EFD7  F006         	goto	u4061
  1627  000DAA  EFD9  F006         	goto	u4060
  1628  000DAE                     u4061:
  1629  000DAE  EF90  F006         	goto	l5433
  1630  000DB2                     u4060:
  1631  000DB2                     
  1632                           ; BSR set to: 0
  1633                           ;main.c: 275:                 setSteering((65), Ratio);
  1634  000DB2  0E00               	movlw	0
  1635  000DB4  6E1D               	movwf	(setSteering@steering+1)^0,c
  1636  000DB6  0E41               	movlw	65
  1637  000DB8  6E1C               	movwf	setSteering@steering^0,c
  1638  000DBA  0E02               	movlw	2
  1639  000DBC  6E1E               	movwf	setSteering@steeringMode^0,c
  1640  000DBE  ECFF  F008         	call	_setSteering	;wreg free
  1641                           
  1642                           ;main.c: 276:             } else {
  1643  000DC2  EF1F  F007         	goto	l1327
  1644  000DC6                     l5449:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 281:             if (curveMode == InCurve) {
  1648  000DC6  0E02               	movlw	2
  1649  000DC8  183F               	xorwf	_curveMode^0,w,c
  1650  000DCA  A4D8               	btfss	status,2,c
  1651  000DCC  EFEA  F006         	goto	u4071
  1652  000DD0  EFEC  F006         	goto	u4070
  1653  000DD4                     u4071:
  1654  000DD4  EF90  F006         	goto	l5433
  1655  000DD8                     u4070:
  1656  000DD8                     
  1657                           ; BSR set to: 0
  1658                           ;main.c: 282:                 setSteering(-(65), Ratio);
  1659  000DD8  0EFF               	movlw	255
  1660  000DDA  6E1D               	movwf	(setSteering@steering+1)^0,c
  1661  000DDC  0EBF               	movlw	191
  1662  000DDE  6E1C               	movwf	setSteering@steering^0,c
  1663  000DE0  0E02               	movlw	2
  1664  000DE2  6E1E               	movwf	setSteering@steeringMode^0,c
  1665  000DE4  ECFF  F008         	call	_setSteering	;wreg free
  1666                           
  1667                           ;main.c: 283:             } else {
  1668  000DE8  EF1F  F007         	goto	l1327
  1669  000DEC                     l5457:
  1670                           
  1671                           ; BSR set to: 0
  1672  000DEC  504C               	movf	_driveMode^0,w,c
  1673  000DEE  6FC2               	movwf	??_calcSteering& (0+255),b
  1674  000DF0  6BC3               	clrf	(??_calcSteering+1)& (0+255),b
  1675                           
  1676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1677                           ; Switch size 1, requested type "simple"
  1678                           ; Number of cases is 1, Range of values is 0 to 0
  1679                           ; switch strategies available:
  1680                           ; Name         Instructions Cycles
  1681                           ; simple_byte            4     3 (average)
  1682                           ;	Chosen strategy is simple_byte
  1683  000DF2  51C3               	movf	(??_calcSteering+1)& (0+255),w,b
  1684  000DF4  0A00               	xorlw	0	; case 0
  1685  000DF6  B4D8               	btfsc	status,2,c
  1686  000DF8  EF00  F007         	goto	l5985
  1687  000DFC  EF1F  F007         	goto	l1327
  1688  000E00                     l5985:
  1689                           
  1690                           ; BSR set to: 0
  1691                           ; Switch size 1, requested type "simple"
  1692                           ; Number of cases is 7, Range of values is 0 to 6
  1693                           ; switch strategies available:
  1694                           ; Name         Instructions Cycles
  1695                           ; simple_byte           22    12 (average)
  1696                           ;	Chosen strategy is simple_byte
  1697  000E00  51C2               	movf	??_calcSteering& (0+255),w,b
  1698  000E02  0A00               	xorlw	0	; case 0
  1699  000E04  B4D8               	btfsc	status,2,c
  1700  000E06  EFA4  F006         	goto	l5437
  1701  000E0A  0A01               	xorlw	1	; case 1
  1702  000E0C  B4D8               	btfsc	status,2,c
  1703  000E0E  EF9A  F006         	goto	l5435
  1704  000E12  0A03               	xorlw	3	; case 2
  1705  000E14  B4D8               	btfsc	status,2,c
  1706  000E16  EF90  F006         	goto	l5433
  1707  000E1A  0A01               	xorlw	1	; case 3
  1708  000E1C  B4D8               	btfsc	status,2,c
  1709  000E1E  EFBC  F006         	goto	l5439
  1710  000E22  0A07               	xorlw	7	; case 4
  1711  000E24  B4D8               	btfsc	status,2,c
  1712  000E26  EFC6  F006         	goto	l5441
  1713  000E2A  0A01               	xorlw	1	; case 5
  1714  000E2C  B4D8               	btfsc	status,2,c
  1715  000E2E  EFD0  F006         	goto	l5443
  1716  000E32  0A03               	xorlw	3	; case 6
  1717  000E34  B4D8               	btfsc	status,2,c
  1718  000E36  EFE3  F006         	goto	l5449
  1719  000E3A  EF1F  F007         	goto	l1327
  1720  000E3E                     l1327:
  1721  000E3E  0012               	return		;funcret
  1722  000E40                     __end_of_calcSteering:
  1723                           	callstack 0
  1724                           
  1725 ;; *************** function _setSteering *****************
  1726 ;; Defined at:
  1727 ;;		line 398 in file "main.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  steering        2   27[COMRAM] short 
  1730 ;;  steeringMode    1   29[COMRAM] enum E17304
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  steeringB       2   34[COMRAM] short 
  1733 ;;  steeringF       2   32[COMRAM] short 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1743 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;Total ram usage:        9 bytes
  1748 ;; Hardware stack levels used: 1
  1749 ;; Hardware stack levels required when called: 9
  1750 ;; This function calls:
  1751 ;;		_PWM5_LoadDutyValue
  1752 ;;		_PWM6_LoadDutyValue
  1753 ;;		___awdiv
  1754 ;; This function is called by:
  1755 ;;		_loop
  1756 ;;		_startAccell
  1757 ;;		_calcSteering
  1758 ;;		_checkBatt
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text4
  1763  0011FE                     __ptext4:
  1764                           	callstack 0
  1765  0011FE                     _setSteering:
  1766                           	callstack 19
  1767  0011FE  0E00               	movlw	0
  1768  001200  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1769  001202  0E00               	movlw	0
  1770  001204  6E23               	movwf	setSteering@steeringB^0,c
  1771                           
  1772                           ;main.c: 400:     switch (steeringMode) {
  1773  001206  EF53  F009         	goto	l3851
  1774  00120A                     l1370:
  1775                           
  1776                           ;main.c: 402:             steeringF = (+steering);
  1777  00120A  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1778  00120E  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1779                           
  1780                           ;main.c: 403:             steeringB = -steering;
  1781  001212  C01C  F01F         	movff	setSteering@steering,??_setSteering
  1782  001216  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  1783  00121A  1E1F               	comf	??_setSteering^0,f,c
  1784  00121C  1E20               	comf	(??_setSteering+1)^0,f,c
  1785  00121E  4A1F               	infsnz	??_setSteering^0,f,c
  1786  001220  2A20               	incf	(??_setSteering+1)^0,f,c
  1787  001222  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  1788  001226  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  1789                           
  1790                           ;main.c: 404:             break;
  1791  00122A  EF74  F009         	goto	l3853
  1792  00122E                     l1372:
  1793                           
  1794                           ;main.c: 406:             steeringF = (+steering);
  1795  00122E  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1796  001232  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1797                           
  1798                           ;main.c: 407:             steeringB = (+steering);
  1799  001236  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1800  00123A  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1801                           
  1802                           ;main.c: 408:             break;
  1803  00123E  EF74  F009         	goto	l3853
  1804  001242                     l1373:
  1805                           
  1806                           ;main.c: 410:             steeringF = (+steering);
  1807  001242  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1808  001246  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1809  00124A                     
  1810                           ;main.c: 411:             steeringB = (-steering / (2));
  1811  00124A  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  1812  00124E  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  1813  001252  0EFF               	movlw	255
  1814  001254  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1815  001256  0EFE               	movlw	254
  1816  001258  6E16               	movwf	___awdiv@divisor^0,c
  1817  00125A  EC4F  F00E         	call	___awdiv	;wreg free
  1818  00125E  C014  F023         	movff	?___awdiv,setSteering@steeringB
  1819  001262  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  1820                           
  1821                           ;main.c: 412:             break;
  1822  001266  EF74  F009         	goto	l3853
  1823  00126A                     l1374:
  1824                           
  1825                           ;main.c: 414:             steeringF = (+steering);
  1826  00126A  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1827  00126E  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1828  001272                     
  1829                           ;main.c: 415:             steeringB = 0;
  1830  001272  0E00               	movlw	0
  1831  001274  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1832  001276  0E00               	movlw	0
  1833  001278  6E23               	movwf	setSteering@steeringB^0,c
  1834                           
  1835                           ;main.c: 416:             break;
  1836  00127A  EF74  F009         	goto	l3853
  1837  00127E                     l3843:
  1838                           
  1839                           ;main.c: 418:             steeringF = 0;
  1840  00127E  0E00               	movlw	0
  1841  001280  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1842  001282  0E00               	movlw	0
  1843  001284  6E21               	movwf	setSteering@steeringF^0,c
  1844  001286                     
  1845                           ;main.c: 419:             steeringB = (+steering);
  1846  001286  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1847  00128A  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1848                           
  1849                           ;main.c: 420:             break;
  1850  00128E  EF74  F009         	goto	l3853
  1851  001292                     l3847:
  1852                           
  1853                           ;main.c: 422:             steeringF = 0;
  1854  001292  0E00               	movlw	0
  1855  001294  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1856  001296  0E00               	movlw	0
  1857  001298  6E21               	movwf	setSteering@steeringF^0,c
  1858                           
  1859                           ;main.c: 423:             steeringB = 0;
  1860  00129A  0E00               	movlw	0
  1861  00129C  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1862  00129E  0E00               	movlw	0
  1863  0012A0  6E23               	movwf	setSteering@steeringB^0,c
  1864                           
  1865                           ;main.c: 424:             break;
  1866  0012A2  EF74  F009         	goto	l3853
  1867  0012A6                     l3851:
  1868  0012A6  501E               	movf	setSteering@steeringMode^0,w,c
  1869  0012A8  6E1F               	movwf	??_setSteering^0,c
  1870  0012AA  6A20               	clrf	(??_setSteering+1)^0,c
  1871                           
  1872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1873                           ; Switch size 1, requested type "simple"
  1874                           ; Number of cases is 1, Range of values is 0 to 0
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; simple_byte            4     3 (average)
  1878                           ;	Chosen strategy is simple_byte
  1879  0012AC  5020               	movf	(??_setSteering+1)^0,w,c
  1880  0012AE  0A00               	xorlw	0	; case 0
  1881  0012B0  B4D8               	btfsc	status,2,c
  1882  0012B2  EF5D  F009         	goto	l5987
  1883  0012B6  EF49  F009         	goto	l3847
  1884  0012BA                     l5987:
  1885                           
  1886                           ; Switch size 1, requested type "simple"
  1887                           ; Number of cases is 5, Range of values is 0 to 4
  1888                           ; switch strategies available:
  1889                           ; Name         Instructions Cycles
  1890                           ; simple_byte           16     9 (average)
  1891                           ;	Chosen strategy is simple_byte
  1892  0012BA  501F               	movf	??_setSteering^0,w,c
  1893  0012BC  0A00               	xorlw	0	; case 0
  1894  0012BE  B4D8               	btfsc	status,2,c
  1895  0012C0  EF05  F009         	goto	l1370
  1896  0012C4  0A01               	xorlw	1	; case 1
  1897  0012C6  B4D8               	btfsc	status,2,c
  1898  0012C8  EF17  F009         	goto	l1372
  1899  0012CC  0A03               	xorlw	3	; case 2
  1900  0012CE  B4D8               	btfsc	status,2,c
  1901  0012D0  EF21  F009         	goto	l1373
  1902  0012D4  0A01               	xorlw	1	; case 3
  1903  0012D6  B4D8               	btfsc	status,2,c
  1904  0012D8  EF35  F009         	goto	l1374
  1905  0012DC  0A07               	xorlw	7	; case 4
  1906  0012DE  B4D8               	btfsc	status,2,c
  1907  0012E0  EF3F  F009         	goto	l3843
  1908  0012E4  EF49  F009         	goto	l3847
  1909  0012E8                     l3853:
  1910                           
  1911                           ;main.c: 427:     if (steeringF > ((65))) {
  1912  0012E8  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  1913  0012EA  EF80  F009         	goto	u2011
  1914  0012EE  5022               	movf	(setSteering@steeringF+1)^0,w,c
  1915  0012F0  E109               	bnz	u2010
  1916  0012F2  0E42               	movlw	66
  1917  0012F4  5C21               	subwf	setSteering@steeringF^0,w,c
  1918  0012F6  A0D8               	btfss	status,0,c
  1919  0012F8  EF80  F009         	goto	u2011
  1920  0012FC  EF82  F009         	goto	u2010
  1921  001300                     u2011:
  1922  001300  EF88  F009         	goto	l3857
  1923  001304                     u2010:
  1924  001304                     
  1925                           ;main.c: 428:         steeringF = ((65));
  1926  001304  0E00               	movlw	0
  1927  001306  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1928  001308  0E41               	movlw	65
  1929  00130A  6E21               	movwf	setSteering@steeringF^0,c
  1930                           
  1931                           ;main.c: 429:     } else if (steeringF < (-(65))) {
  1932  00130C  EF9A  F009         	goto	l3861
  1933  001310                     l3857:
  1934  001310  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  1935  001312  EF94  F009         	goto	u2021
  1936  001316  0EBF               	movlw	191
  1937  001318  5C21               	subwf	setSteering@steeringF^0,w,c
  1938  00131A  0EFF               	movlw	255
  1939  00131C  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  1940  00131E  B0D8               	btfsc	status,0,c
  1941  001320  EF94  F009         	goto	u2021
  1942  001324  EF96  F009         	goto	u2020
  1943  001328                     u2021:
  1944  001328  EF9A  F009         	goto	l3861
  1945  00132C                     u2020:
  1946  00132C                     
  1947                           ;main.c: 430:         steeringF = (-(65));
  1948  00132C  0EFF               	movlw	255
  1949  00132E  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1950  001330  0EBF               	movlw	191
  1951  001332  6E21               	movwf	setSteering@steeringF^0,c
  1952  001334                     l3861:
  1953                           
  1954                           ;main.c: 433:     if (steeringB > ((40))) {
  1955  001334  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  1956  001336  EFA6  F009         	goto	u2031
  1957  00133A  5024               	movf	(setSteering@steeringB+1)^0,w,c
  1958  00133C  E109               	bnz	u2030
  1959  00133E  0E29               	movlw	41
  1960  001340  5C23               	subwf	setSteering@steeringB^0,w,c
  1961  001342  A0D8               	btfss	status,0,c
  1962  001344  EFA6  F009         	goto	u2031
  1963  001348  EFA8  F009         	goto	u2030
  1964  00134C                     u2031:
  1965  00134C  EFAE  F009         	goto	l3865
  1966  001350                     u2030:
  1967  001350                     
  1968                           ;main.c: 434:         steeringB = ((40));
  1969  001350  0E00               	movlw	0
  1970  001352  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1971  001354  0E28               	movlw	40
  1972  001356  6E23               	movwf	setSteering@steeringB^0,c
  1973                           
  1974                           ;main.c: 435:     } else if (steeringB < (-(40))) {
  1975  001358  EFC0  F009         	goto	l3869
  1976  00135C                     l3865:
  1977  00135C  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  1978  00135E  EFBA  F009         	goto	u2041
  1979  001362  0ED8               	movlw	216
  1980  001364  5C23               	subwf	setSteering@steeringB^0,w,c
  1981  001366  0EFF               	movlw	255
  1982  001368  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  1983  00136A  B0D8               	btfsc	status,0,c
  1984  00136C  EFBA  F009         	goto	u2041
  1985  001370  EFBC  F009         	goto	u2040
  1986  001374                     u2041:
  1987  001374  EFC0  F009         	goto	l3869
  1988  001378                     u2040:
  1989  001378                     
  1990                           ;main.c: 436:         steeringB = (-(40));
  1991  001378  0EFF               	movlw	255
  1992  00137A  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1993  00137C  0ED8               	movlw	216
  1994  00137E  6E23               	movwf	setSteering@steeringB^0,c
  1995  001380                     l3869:
  1996                           
  1997                           ;main.c: 440:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  1998  001380  0E60               	movlw	96
  1999  001382  2421               	addwf	setSteering@steeringF^0,w,c
  2000  001384  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  2001  001386  0E01               	movlw	1
  2002  001388  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  2003  00138A  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  2004  00138C  EC83  F011         	call	_PWM6_LoadDutyValue	;wreg free
  2005  001390                     
  2006                           ;main.c: 441:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  2007  001390  0E65               	movlw	101
  2008  001392  2423               	addwf	setSteering@steeringB^0,w,c
  2009  001394  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  2010  001396  0E01               	movlw	1
  2011  001398  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  2012  00139A  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  2013  00139C  EC9D  F011         	call	_PWM5_LoadDutyValue	;wreg free
  2014  0013A0  0012               	return		;funcret
  2015  0013A2                     __end_of_setSteering:
  2016                           	callstack 0
  2017                           
  2018 ;; *************** function _PWM6_LoadDutyValue *****************
  2019 ;; Defined at:
  2020 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;Total ram usage:        4 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; Hardware stack levels required when called: 8
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_setSteering
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text5
  2049  002306                     __ptext5:
  2050                           	callstack 0
  2051  002306                     _PWM6_LoadDutyValue:
  2052                           	callstack 19
  2053  002306                     
  2054                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2055  002306  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2056  00230A  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  2057  00230E  90D8               	bcf	status,0,c
  2058  002310  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2059  002312  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2060  002314  90D8               	bcf	status,0,c
  2061  002316  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2062  002318  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2063  00231A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2064  00231C  6E69               	movwf	105,c	;volatile
  2065                           
  2066                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  2067  00231E  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2068  002322  0E03               	movlw	3
  2069  002324  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  2070  002326  0E06               	movlw	6
  2071  002328  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  2072  00232A                     u1925:
  2073  00232A  90D8               	bcf	status,0,c
  2074  00232C  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  2075  00232E  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  2076  002330  EF95  F011         	goto	u1925
  2077  002334  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2078  002336  6E68               	movwf	104,c	;volatile
  2079  002338  0012               	return		;funcret
  2080  00233A                     __end_of_PWM6_LoadDutyValue:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _PWM5_LoadDutyValue *****************
  2084 ;; Defined at:
  2085 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;Total ram usage:        4 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 8
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_setSteering
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text6
  2114  00233A                     __ptext6:
  2115                           	callstack 0
  2116  00233A                     _PWM5_LoadDutyValue:
  2117                           	callstack 19
  2118  00233A                     
  2119                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2120  00233A  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2121  00233E  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  2122  002342  90D8               	bcf	status,0,c
  2123  002344  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2124  002346  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2125  002348  90D8               	bcf	status,0,c
  2126  00234A  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2127  00234C  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2128  00234E  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2129  002350  6E6D               	movwf	109,c	;volatile
  2130                           
  2131                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  2132  002352  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2133  002356  0E03               	movlw	3
  2134  002358  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  2135  00235A  0E06               	movlw	6
  2136  00235C  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  2137  00235E                     u1915:
  2138  00235E  90D8               	bcf	status,0,c
  2139  002360  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  2140  002362  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  2141  002364  EFAF  F011         	goto	u1915
  2142  002368  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2143  00236A  6E6C               	movwf	108,c	;volatile
  2144  00236C  0012               	return		;funcret
  2145  00236E                     __end_of_PWM5_LoadDutyValue:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function ___flge *****************
  2149 ;; Defined at:
  2150 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  ff1             4   19[COMRAM] void 
  2153 ;;  ff2             4   23[COMRAM] void 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;		None               void
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:       12 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 8
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_startAccell
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text7
  2180  00182C                     __ptext7:
  2181                           	callstack 0
  2182  00182C                     ___flge:
  2183                           	callstack 20
  2184  00182C  0E00               	movlw	0
  2185  00182E  1414               	andwf	___flge@ff1^0,w,c
  2186  001830  6E1C               	movwf	??___flge^0,c
  2187  001832  0E00               	movlw	0
  2188  001834  1415               	andwf	(___flge@ff1+1)^0,w,c
  2189  001836  6E1D               	movwf	(??___flge+1)^0,c
  2190  001838  0E80               	movlw	128
  2191  00183A  1416               	andwf	(___flge@ff1+2)^0,w,c
  2192  00183C  6E1E               	movwf	(??___flge+2)^0,c
  2193  00183E  0E7F               	movlw	127
  2194  001840  1417               	andwf	(___flge@ff1+3)^0,w,c
  2195  001842  6E1F               	movwf	(??___flge+3)^0,c
  2196  001844  501C               	movf	??___flge^0,w,c
  2197  001846  101D               	iorwf	(??___flge+1)^0,w,c
  2198  001848  101E               	iorwf	(??___flge+2)^0,w,c
  2199  00184A  101F               	iorwf	(??___flge+3)^0,w,c
  2200  00184C  A4D8               	btfss	status,2,c
  2201  00184E  EF2B  F00C         	goto	u2981
  2202  001852  EF2D  F00C         	goto	u2980
  2203  001856                     u2981:
  2204  001856  EF35  F00C         	goto	l4477
  2205  00185A                     u2980:
  2206  00185A  0E00               	movlw	0
  2207  00185C  6E14               	movwf	___flge@ff1^0,c
  2208  00185E  0E00               	movlw	0
  2209  001860  6E15               	movwf	(___flge@ff1+1)^0,c
  2210  001862  0E00               	movlw	0
  2211  001864  6E16               	movwf	(___flge@ff1+2)^0,c
  2212  001866  0E00               	movlw	0
  2213  001868  6E17               	movwf	(___flge@ff1+3)^0,c
  2214  00186A                     l4477:
  2215  00186A  0E00               	movlw	0
  2216  00186C  1418               	andwf	___flge@ff2^0,w,c
  2217  00186E  6E1C               	movwf	??___flge^0,c
  2218  001870  0E00               	movlw	0
  2219  001872  1419               	andwf	(___flge@ff2+1)^0,w,c
  2220  001874  6E1D               	movwf	(??___flge+1)^0,c
  2221  001876  0E80               	movlw	128
  2222  001878  141A               	andwf	(___flge@ff2+2)^0,w,c
  2223  00187A  6E1E               	movwf	(??___flge+2)^0,c
  2224  00187C  0E7F               	movlw	127
  2225  00187E  141B               	andwf	(___flge@ff2+3)^0,w,c
  2226  001880  6E1F               	movwf	(??___flge+3)^0,c
  2227  001882  501C               	movf	??___flge^0,w,c
  2228  001884  101D               	iorwf	(??___flge+1)^0,w,c
  2229  001886  101E               	iorwf	(??___flge+2)^0,w,c
  2230  001888  101F               	iorwf	(??___flge+3)^0,w,c
  2231  00188A  A4D8               	btfss	status,2,c
  2232  00188C  EF4A  F00C         	goto	u2991
  2233  001890  EF4C  F00C         	goto	u2990
  2234  001894                     u2991:
  2235  001894  EF54  F00C         	goto	l4481
  2236  001898                     u2990:
  2237  001898  0E00               	movlw	0
  2238  00189A  6E18               	movwf	___flge@ff2^0,c
  2239  00189C  0E00               	movlw	0
  2240  00189E  6E19               	movwf	(___flge@ff2+1)^0,c
  2241  0018A0  0E00               	movlw	0
  2242  0018A2  6E1A               	movwf	(___flge@ff2+2)^0,c
  2243  0018A4  0E00               	movlw	0
  2244  0018A6  6E1B               	movwf	(___flge@ff2+3)^0,c
  2245  0018A8                     l4481:
  2246  0018A8  AE17               	btfss	(___flge@ff1+3)^0,7,c
  2247  0018AA  EF59  F00C         	goto	u3001
  2248  0018AE  EF5B  F00C         	goto	u3000
  2249  0018B2                     u3001:
  2250  0018B2  EF64  F00C         	goto	l4485
  2251  0018B6                     u3000:
  2252  0018B6  6C14               	negf	___flge@ff1^0,c
  2253  0018B8  1E15               	comf	(___flge@ff1+1)^0,f,c
  2254  0018BA  B0D8               	btfsc	status,0,c
  2255  0018BC  2A15               	incf	(___flge@ff1+1)^0,f,c
  2256  0018BE  1E16               	comf	(___flge@ff1+2)^0,f,c
  2257  0018C0  B0D8               	btfsc	status,0,c
  2258  0018C2  2A16               	incf	(___flge@ff1+2)^0,f,c
  2259  0018C4  0E80               	movlw	128
  2260  0018C6  5617               	subfwb	(___flge@ff1+3)^0,f,c
  2261  0018C8                     l4485:
  2262  0018C8  AE1B               	btfss	(___flge@ff2+3)^0,7,c
  2263  0018CA  EF69  F00C         	goto	u3011
  2264  0018CE  EF6B  F00C         	goto	u3010
  2265  0018D2                     u3011:
  2266  0018D2  EF74  F00C         	goto	l1651
  2267  0018D6                     u3010:
  2268  0018D6  6C18               	negf	___flge@ff2^0,c
  2269  0018D8  1E19               	comf	(___flge@ff2+1)^0,f,c
  2270  0018DA  B0D8               	btfsc	status,0,c
  2271  0018DC  2A19               	incf	(___flge@ff2+1)^0,f,c
  2272  0018DE  1E1A               	comf	(___flge@ff2+2)^0,f,c
  2273  0018E0  B0D8               	btfsc	status,0,c
  2274  0018E2  2A1A               	incf	(___flge@ff2+2)^0,f,c
  2275  0018E4  0E80               	movlw	128
  2276  0018E6  561B               	subfwb	(___flge@ff2+3)^0,f,c
  2277  0018E8                     l1651:
  2278  0018E8  0E00               	movlw	0
  2279  0018EA  1A14               	xorwf	___flge@ff1^0,f,c
  2280  0018EC  0E00               	movlw	0
  2281  0018EE  1A15               	xorwf	(___flge@ff1+1)^0,f,c
  2282  0018F0  0E00               	movlw	0
  2283  0018F2  1A16               	xorwf	(___flge@ff1+2)^0,f,c
  2284  0018F4  0E80               	movlw	128
  2285  0018F6  1A17               	xorwf	(___flge@ff1+3)^0,f,c
  2286  0018F8  0E00               	movlw	0
  2287  0018FA  1A18               	xorwf	___flge@ff2^0,f,c
  2288  0018FC  0E00               	movlw	0
  2289  0018FE  1A19               	xorwf	(___flge@ff2+1)^0,f,c
  2290  001900  0E00               	movlw	0
  2291  001902  1A1A               	xorwf	(___flge@ff2+2)^0,f,c
  2292  001904  0E80               	movlw	128
  2293  001906  1A1B               	xorwf	(___flge@ff2+3)^0,f,c
  2294  001908  5018               	movf	___flge@ff2^0,w,c
  2295  00190A  5C14               	subwf	___flge@ff1^0,w,c
  2296  00190C  5019               	movf	(___flge@ff2+1)^0,w,c
  2297  00190E  5815               	subwfb	(___flge@ff1+1)^0,w,c
  2298  001910  501A               	movf	(___flge@ff2+2)^0,w,c
  2299  001912  5816               	subwfb	(___flge@ff1+2)^0,w,c
  2300  001914  501B               	movf	(___flge@ff2+3)^0,w,c
  2301  001916  5817               	subwfb	(___flge@ff1+3)^0,w,c
  2302  001918  B0D8               	btfsc	status,0,c
  2303  00191A  EF91  F00C         	goto	u3021
  2304  00191E  EF93  F00C         	goto	u3020
  2305  001922                     u3021:
  2306  001922  EF96  F00C         	goto	l4491
  2307  001926                     u3020:
  2308  001926  90D8               	bcf	status,0,c
  2309  001928  EF97  F00C         	goto	l1656
  2310  00192C                     l4491:
  2311  00192C  80D8               	bsf	status,0,c
  2312  00192E                     l1656:
  2313  00192E  0012               	return		;funcret
  2314  001930                     __end_of___flge:
  2315                           	callstack 0
  2316                           
  2317 ;; *************** function _getReverse *****************
  2318 ;; Defined at:
  2319 ;;		line 201 in file "main.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 8
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_loop
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text8
  2348  001930                     __ptext8:
  2349                           	callstack 0
  2350  001930                     _getReverse:
  2351                           	callstack 21
  2352  001930                     
  2353                           ;main.c: 202:     if (distFront < (15)) {
  2354  001930  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2355  001932  E107               	bnz	u3241
  2356  001934  0E0F               	movlw	15
  2357  001936  5C4A               	subwf	_distFront^0,w,c	;volatile
  2358  001938  B0D8               	btfsc	status,0,c
  2359  00193A  EFA1  F00C         	goto	u3241
  2360  00193E  EFA3  F00C         	goto	u3240
  2361  001942                     u3241:
  2362  001942  EFA8  F00C         	goto	l4719
  2363  001946                     u3240:
  2364  001946                     
  2365                           ;main.c: 203:         ++reverseCount;
  2366  001946  0100               	movlb	0	; () banked
  2367  001948  4B94               	infsnz	_reverseCount& (0+255),f,b
  2368  00194A  2B95               	incf	(_reverseCount+1)& (0+255),f,b
  2369                           
  2370                           ;main.c: 204:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2371  00194C  EFBF  F00C         	goto	l4725
  2372  001950                     l4719:
  2373  001950  0E03               	movlw	3
  2374  001952  184C               	xorwf	_driveMode^0,w,c
  2375  001954  B4D8               	btfsc	status,2,c
  2376  001956  EFAF  F00C         	goto	u3251
  2377  00195A  EFB1  F00C         	goto	u3250
  2378  00195E                     u3251:
  2379  00195E  EFBF  F00C         	goto	l4725
  2380  001962                     u3250:
  2381  001962  0E04               	movlw	4
  2382  001964  184C               	xorwf	_driveMode^0,w,c
  2383  001966  B4D8               	btfsc	status,2,c
  2384  001968  EFB8  F00C         	goto	u3261
  2385  00196C  EFBA  F00C         	goto	u3260
  2386  001970                     u3261:
  2387  001970  EFBF  F00C         	goto	l4725
  2388  001974                     u3260:
  2389  001974                     
  2390                           ;main.c: 205:         reverseCount = 0;
  2391  001974  0E00               	movlw	0
  2392  001976  0100               	movlb	0	; () banked
  2393  001978  6F95               	movwf	(_reverseCount+1)& (0+255),b
  2394  00197A  0E00               	movlw	0
  2395  00197C  6F94               	movwf	_reverseCount& (0+255),b
  2396  00197E                     l4725:
  2397                           
  2398                           ;main.c: 208:     if (reverseCount > (50)) {
  2399  00197E  0100               	movlb	0	; () banked
  2400  001980  5195               	movf	(_reverseCount+1)& (0+255),w,b
  2401  001982  E109               	bnz	u3270
  2402  001984  0E33               	movlw	51
  2403  001986  5D94               	subwf	_reverseCount& (0+255),w,b
  2404  001988  A0D8               	btfss	status,0,c
  2405  00198A  EFC9  F00C         	goto	u3271
  2406  00198E  EFCB  F00C         	goto	u3270
  2407  001992                     u3271:
  2408  001992  EF15  F00D         	goto	l1300
  2409  001996                     u3270:
  2410  001996                     
  2411                           ; BSR set to: 0
  2412                           ;main.c: 209:         ++reverseTime;
  2413  001996  4B82               	infsnz	_reverseTime& (0+255),f,b
  2414  001998  2B83               	incf	(_reverseTime+1)& (0+255),f,b
  2415  00199A                     
  2416                           ; BSR set to: 0
  2417                           ;main.c: 211:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2418  00199A  0E03               	movlw	3
  2419  00199C  184C               	xorwf	_driveMode^0,w,c
  2420  00199E  B4D8               	btfsc	status,2,c
  2421  0019A0  EFD4  F00C         	goto	u3281
  2422  0019A4  EFD6  F00C         	goto	u3280
  2423  0019A8                     u3281:
  2424  0019A8  EFF0  F00C         	goto	l4739
  2425  0019AC                     u3280:
  2426  0019AC                     
  2427                           ; BSR set to: 0
  2428  0019AC  0E04               	movlw	4
  2429  0019AE  184C               	xorwf	_driveMode^0,w,c
  2430  0019B0  B4D8               	btfsc	status,2,c
  2431  0019B2  EFDD  F00C         	goto	u3291
  2432  0019B6  EFDF  F00C         	goto	u3290
  2433  0019BA                     u3291:
  2434  0019BA  EFF0  F00C         	goto	l4739
  2435  0019BE                     u3290:
  2436  0019BE                     
  2437                           ; BSR set to: 0
  2438                           ;main.c: 212:             if (distLeft > distRight) {
  2439  0019BE  519C               	movf	_distLeft& (0+255),w,b	;volatile
  2440  0019C0  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2441  0019C2  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2442  0019C4  5999               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2443  0019C6  B0D8               	btfsc	status,0,c
  2444  0019C8  EFE8  F00C         	goto	u3301
  2445  0019CC  EFEA  F00C         	goto	u3300
  2446  0019D0                     u3301:
  2447  0019D0  EFEE  F00C         	goto	l4737
  2448  0019D4                     u3300:
  2449  0019D4                     
  2450                           ; BSR set to: 0
  2451                           ;main.c: 214:                 driveMode = ReverseRight;
  2452  0019D4  0E03               	movlw	3
  2453  0019D6  6E4C               	movwf	_driveMode^0,c
  2454                           
  2455                           ;main.c: 215:             } else {
  2456  0019D8  EFF0  F00C         	goto	l4739
  2457  0019DC                     l4737:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;main.c: 217:                 driveMode = ReverseLeft;
  2461  0019DC  0E04               	movlw	4
  2462  0019DE  6E4C               	movwf	_driveMode^0,c
  2463  0019E0                     l4739:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;main.c: 221:         if (distFront > (35) || reverseTime > (300)) {
  2467  0019E0  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2468  0019E2  E107               	bnz	u3311
  2469  0019E4  0E24               	movlw	36
  2470  0019E6  5C4A               	subwf	_distFront^0,w,c	;volatile
  2471  0019E8  B0D8               	btfsc	status,0,c
  2472  0019EA  EFF9  F00C         	goto	u3311
  2473  0019EE  EFFB  F00C         	goto	u3310
  2474  0019F2                     u3311:
  2475  0019F2  EF0B  F00D         	goto	l4743
  2476  0019F6                     u3310:
  2477  0019F6                     
  2478                           ; BSR set to: 0
  2479  0019F6  BF83               	btfsc	(_reverseTime+1)& (0+255),7,b
  2480  0019F8  EF07  F00D         	goto	u3321
  2481  0019FC  0E2D               	movlw	45
  2482  0019FE  5D82               	subwf	_reverseTime& (0+255),w,b
  2483  001A00  0E01               	movlw	1
  2484  001A02  5983               	subwfb	(_reverseTime+1)& (0+255),w,b
  2485  001A04  A0D8               	btfss	status,0,c
  2486  001A06  EF07  F00D         	goto	u3321
  2487  001A0A  EF09  F00D         	goto	u3320
  2488  001A0E                     u3321:
  2489  001A0E  EF15  F00D         	goto	l1300
  2490  001A12                     u3320:
  2491  001A12  EF0B  F00D         	goto	l4745
  2492  001A16                     l4743:
  2493  001A16                     l4745:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;main.c: 224:                 driveMode = Straight;
  2497  001A16  0E01               	movlw	1
  2498  001A18  6E4C               	movwf	_driveMode^0,c
  2499  001A1A                     
  2500                           ; BSR set to: 0
  2501                           ;main.c: 229:             reverseCount = 0;
  2502  001A1A  0E00               	movlw	0
  2503  001A1C  6F95               	movwf	(_reverseCount+1)& (0+255),b
  2504  001A1E  0E00               	movlw	0
  2505  001A20  6F94               	movwf	_reverseCount& (0+255),b
  2506                           
  2507                           ;main.c: 230:             reverseTime = 0;
  2508  001A22  0E00               	movlw	0
  2509  001A24  6F83               	movwf	(_reverseTime+1)& (0+255),b
  2510  001A26  0E00               	movlw	0
  2511  001A28  6F82               	movwf	_reverseTime& (0+255),b
  2512  001A2A                     l1300:
  2513                           
  2514                           ; BSR set to: 0
  2515  001A2A  0012               	return		;funcret
  2516  001A2C                     __end_of_getReverse:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _getCurve *****************
  2520 ;; Defined at:
  2521 ;;		line 130 in file "main.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  deltaLeft       2   23[COMRAM] short 
  2526 ;;  deltaRight      2   21[COMRAM] short 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;Total ram usage:        6 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 8
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_loop
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text9
  2551  0009C4                     __ptext9:
  2552                           	callstack 0
  2553  0009C4                     _getCurve:
  2554                           	callstack 21
  2555  0009C4                     
  2556                           ;main.c: 131:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2557  0009C4  503A               	movf	_oldDistLeft^0,w,c
  2558  0009C6  0100               	movlb	0	; () banked
  2559  0009C8  5D9C               	subwf	_distLeft& (0+255),w,b	;volatile
  2560  0009CA  6E18               	movwf	getCurve@deltaLeft^0,c
  2561  0009CC  503B               	movf	(_oldDistLeft+1)^0,w,c
  2562  0009CE  599D               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2563  0009D0  6E19               	movwf	(getCurve@deltaLeft+1)^0,c
  2564                           
  2565                           ;main.c: 132:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2566  0009D2  5192               	movf	_oldDistRight& (0+255),w,b
  2567  0009D4  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2568  0009D6  6E16               	movwf	getCurve@deltaRight^0,c
  2569  0009D8  5193               	movf	(_oldDistRight+1)& (0+255),w,b
  2570  0009DA  5999               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2571  0009DC  6E17               	movwf	(getCurve@deltaRight+1)^0,c
  2572                           
  2573                           ;main.c: 134:     switch (curveMode) {
  2574  0009DE  EFE2  F005         	goto	l4705
  2575  0009E2                     l4649:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;main.c: 136:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (17
      +                          5)) {
  2579  0009E2  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2580  0009E4  EFFD  F004         	goto	u3071
  2581  0009E8  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2582  0009EA  E109               	bnz	u3070
  2583  0009EC  0E1F               	movlw	31
  2584  0009EE  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2585  0009F0  A0D8               	btfss	status,0,c
  2586  0009F2  EFFD  F004         	goto	u3071
  2587  0009F6  EFFF  F004         	goto	u3070
  2588  0009FA                     u3071:
  2589  0009FA  EF20  F005         	goto	l4657
  2590  0009FE                     u3070:
  2591  0009FE                     
  2592                           ; BSR set to: 0
  2593  0009FE  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2594  000A00  EF0D  F005         	goto	u3080
  2595  000A04  0E2C               	movlw	44
  2596  000A06  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2597  000A08  0E01               	movlw	1
  2598  000A0A  5819               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2599  000A0C  B0D8               	btfsc	status,0,c
  2600  000A0E  EF0B  F005         	goto	u3081
  2601  000A12  EF0D  F005         	goto	u3080
  2602  000A16                     u3081:
  2603  000A16  EF20  F005         	goto	l4657
  2604  000A1A                     u3080:
  2605  000A1A                     
  2606                           ; BSR set to: 0
  2607  000A1A  503B               	movf	(_oldDistLeft+1)^0,w,c
  2608  000A1C  E107               	bnz	u3091
  2609  000A1E  0EAF               	movlw	175
  2610  000A20  5C3A               	subwf	_oldDistLeft^0,w,c
  2611  000A22  B0D8               	btfsc	status,0,c
  2612  000A24  EF16  F005         	goto	u3091
  2613  000A28  EF18  F005         	goto	u3090
  2614  000A2C                     u3091:
  2615  000A2C  EF20  F005         	goto	l4657
  2616  000A30                     u3090:
  2617  000A30                     
  2618                           ; BSR set to: 0
  2619                           ;main.c: 137:                 delay = 0;
  2620  000A30  0E00               	movlw	0
  2621  000A32  6E3E               	movwf	_delay^0,c
  2622                           
  2623                           ;main.c: 138:                 curveMode = BeforeCurve;
  2624  000A34  0E01               	movlw	1
  2625  000A36  6E3F               	movwf	_curveMode^0,c
  2626                           
  2627                           ;main.c: 139:                 driveMode = CurveLeft;
  2628  000A38  0E05               	movlw	5
  2629  000A3A  6E4C               	movwf	_driveMode^0,c
  2630                           
  2631                           ;main.c: 142:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (175)) {
  2632  000A3C  EFFF  F005         	goto	l1265
  2633  000A40                     l4657:
  2634                           
  2635                           ; BSR set to: 0
  2636  000A40  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2637  000A42  EF2C  F005         	goto	u3101
  2638  000A46  5017               	movf	(getCurve@deltaRight+1)^0,w,c
  2639  000A48  E109               	bnz	u3100
  2640  000A4A  0E1F               	movlw	31
  2641  000A4C  5C16               	subwf	getCurve@deltaRight^0,w,c
  2642  000A4E  A0D8               	btfss	status,0,c
  2643  000A50  EF2C  F005         	goto	u3101
  2644  000A54  EF2E  F005         	goto	u3100
  2645  000A58                     u3101:
  2646  000A58  EFFF  F005         	goto	l1265
  2647  000A5C                     u3100:
  2648  000A5C                     
  2649                           ; BSR set to: 0
  2650  000A5C  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2651  000A5E  EF3C  F005         	goto	u3110
  2652  000A62  0E2C               	movlw	44
  2653  000A64  5C16               	subwf	getCurve@deltaRight^0,w,c
  2654  000A66  0E01               	movlw	1
  2655  000A68  5817               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2656  000A6A  B0D8               	btfsc	status,0,c
  2657  000A6C  EF3A  F005         	goto	u3111
  2658  000A70  EF3C  F005         	goto	u3110
  2659  000A74                     u3111:
  2660  000A74  EFFF  F005         	goto	l1265
  2661  000A78                     u3110:
  2662  000A78                     
  2663                           ; BSR set to: 0
  2664  000A78  5193               	movf	(_oldDistRight+1)& (0+255),w,b
  2665  000A7A  E107               	bnz	u3121
  2666  000A7C  0EAF               	movlw	175
  2667  000A7E  5D92               	subwf	_oldDistRight& (0+255),w,b
  2668  000A80  B0D8               	btfsc	status,0,c
  2669  000A82  EF45  F005         	goto	u3121
  2670  000A86  EF47  F005         	goto	u3120
  2671  000A8A                     u3121:
  2672  000A8A  EFFF  F005         	goto	l1265
  2673  000A8E                     u3120:
  2674  000A8E                     
  2675                           ; BSR set to: 0
  2676                           ;main.c: 143:                 delay = 0;
  2677  000A8E  0E00               	movlw	0
  2678  000A90  6E3E               	movwf	_delay^0,c
  2679                           
  2680                           ;main.c: 144:                 curveMode = BeforeCurve;
  2681  000A92  0E01               	movlw	1
  2682  000A94  6E3F               	movwf	_curveMode^0,c
  2683                           
  2684                           ;main.c: 145:                 driveMode = CurveRight;
  2685  000A96  0E06               	movlw	6
  2686  000A98  6E4C               	movwf	_driveMode^0,c
  2687  000A9A  EFFF  F005         	goto	l1265
  2688  000A9E                     l4665:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;main.c: 152:             if (delay >= (18)) {
  2692  000A9E  0E11               	movlw	17
  2693  000AA0  643E               	cpfsgt	_delay^0,c
  2694  000AA2  EF55  F005         	goto	u3131
  2695  000AA6  EF57  F005         	goto	u3130
  2696  000AAA                     u3131:
  2697  000AAA  EF5D  F005         	goto	l4669
  2698  000AAE                     u3130:
  2699  000AAE                     
  2700                           ; BSR set to: 0
  2701                           ;main.c: 153:                 delay = 0;
  2702  000AAE  0E00               	movlw	0
  2703  000AB0  6E3E               	movwf	_delay^0,c
  2704                           
  2705                           ;main.c: 154:                 curveMode = InCurve;
  2706  000AB2  0E02               	movlw	2
  2707  000AB4  6E3F               	movwf	_curveMode^0,c
  2708                           
  2709                           ;main.c: 156:             } else {
  2710  000AB6  EFFF  F005         	goto	l1265
  2711  000ABA                     l4669:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;main.c: 157:                 ++delay;
  2715  000ABA  2A3E               	incf	_delay^0,f,c
  2716  000ABC  EFFF  F005         	goto	l1265
  2717  000AC0                     l4671:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;main.c: 161:             if (delay >= (25)) {
  2721  000AC0  0E18               	movlw	24
  2722  000AC2  643E               	cpfsgt	_delay^0,c
  2723  000AC4  EF66  F005         	goto	u3141
  2724  000AC8  EF68  F005         	goto	u3140
  2725  000ACC                     u3141:
  2726  000ACC  EF5D  F005         	goto	l4669
  2727  000AD0                     u3140:
  2728  000AD0                     
  2729                           ; BSR set to: 0
  2730                           ;main.c: 162:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (175)) {
  2731  000AD0  0E05               	movlw	5
  2732  000AD2  184C               	xorwf	_driveMode^0,w,c
  2733  000AD4  A4D8               	btfss	status,2,c
  2734  000AD6  EF6F  F005         	goto	u3151
  2735  000ADA  EF71  F005         	goto	u3150
  2736  000ADE                     u3151:
  2737  000ADE  EF7C  F005         	goto	l4677
  2738  000AE2                     u3150:
  2739  000AE2                     
  2740                           ; BSR set to: 0
  2741  000AE2  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2742  000AE4  E109               	bnz	u3160
  2743  000AE6  0E2D               	movlw	45
  2744  000AE8  5D9C               	subwf	_distLeft& (0+255),w,b	;volatile
  2745  000AEA  A0D8               	btfss	status,0,c
  2746  000AEC  EF7A  F005         	goto	u3161
  2747  000AF0  EF7C  F005         	goto	u3160
  2748  000AF4                     u3161:
  2749  000AF4  EF9B  F005         	goto	l4683
  2750  000AF8                     u3160:
  2751  000AF8                     l4677:
  2752                           
  2753                           ; BSR set to: 0
  2754  000AF8  0E06               	movlw	6
  2755  000AFA  184C               	xorwf	_driveMode^0,w,c
  2756  000AFC  A4D8               	btfss	status,2,c
  2757  000AFE  EF83  F005         	goto	u3171
  2758  000B02  EF85  F005         	goto	u3170
  2759  000B06                     u3171:
  2760  000B06  EF90  F005         	goto	l4681
  2761  000B0A                     u3170:
  2762  000B0A                     
  2763                           ; BSR set to: 0
  2764  000B0A  5199               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2765  000B0C  E109               	bnz	u3180
  2766  000B0E  0E2D               	movlw	45
  2767  000B10  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2768  000B12  A0D8               	btfss	status,0,c
  2769  000B14  EF8E  F005         	goto	u3181
  2770  000B18  EF90  F005         	goto	u3180
  2771  000B1C                     u3181:
  2772  000B1C  EF9B  F005         	goto	l4683
  2773  000B20                     u3180:
  2774  000B20                     l4681:
  2775                           
  2776                           ; BSR set to: 0
  2777  000B20  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2778  000B22  E109               	bnz	u3190
  2779  000B24  0EB0               	movlw	176
  2780  000B26  5C4A               	subwf	_distFront^0,w,c	;volatile
  2781  000B28  A0D8               	btfss	status,0,c
  2782  000B2A  EF99  F005         	goto	u3191
  2783  000B2E  EF9B  F005         	goto	u3190
  2784  000B32                     u3191:
  2785  000B32  EFB5  F005         	goto	l4689
  2786  000B36                     u3190:
  2787  000B36                     l4683:
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;main.c: 164:                     if (delay >= 70) {
  2791  000B36  0E45               	movlw	69
  2792  000B38  643E               	cpfsgt	_delay^0,c
  2793  000B3A  EFA1  F005         	goto	u3201
  2794  000B3E  EFA3  F005         	goto	u3200
  2795  000B42                     u3201:
  2796  000B42  EFA9  F005         	goto	l4687
  2797  000B46                     u3200:
  2798  000B46                     
  2799                           ; BSR set to: 0
  2800                           ;main.c: 166:                         middleOffSet = -10;
  2801  000B46  0EFF               	movlw	255
  2802  000B48  6F8F               	movwf	(_middleOffSet+1)& (0+255),b
  2803  000B4A  0EF6               	movlw	246
  2804  000B4C  6F8E               	movwf	_middleOffSet& (0+255),b
  2805                           
  2806                           ;main.c: 167:                     } else {
  2807  000B4E  EFAD  F005         	goto	l1279
  2808  000B52                     l4687:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;main.c: 169:                         middleOffSet = 10;
  2812  000B52  0E00               	movlw	0
  2813  000B54  6F8F               	movwf	(_middleOffSet+1)& (0+255),b
  2814  000B56  0E0A               	movlw	10
  2815  000B58  6F8E               	movwf	_middleOffSet& (0+255),b
  2816  000B5A                     l1279:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;main.c: 172:                     delay = 0;
  2820  000B5A  0E00               	movlw	0
  2821  000B5C  6E3E               	movwf	_delay^0,c
  2822                           
  2823                           ;main.c: 173:                     curveMode = AfterCurve;
  2824  000B5E  0E03               	movlw	3
  2825  000B60  6E3F               	movwf	_curveMode^0,c
  2826                           
  2827                           ;main.c: 174:                     driveMode = Straight;
  2828  000B62  0E01               	movlw	1
  2829  000B64  6E4C               	movwf	_driveMode^0,c
  2830                           
  2831                           ;main.c: 177:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  2832  000B66  EF5D  F005         	goto	l4669
  2833  000B6A                     l4689:
  2834                           
  2835                           ; BSR set to: 0
  2836  000B6A  0E06               	movlw	6
  2837  000B6C  184C               	xorwf	_driveMode^0,w,c
  2838  000B6E  A4D8               	btfss	status,2,c
  2839  000B70  EFBC  F005         	goto	u3211
  2840  000B74  EFBE  F005         	goto	u3210
  2841  000B78                     u3211:
  2842  000B78  EF5D  F005         	goto	l4669
  2843  000B7C                     u3210:
  2844  000B7C                     
  2845                           ; BSR set to: 0
  2846  000B7C  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2847  000B7E  EFCA  F005         	goto	u3221
  2848  000B82  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2849  000B84  E109               	bnz	u3220
  2850  000B86  0E1F               	movlw	31
  2851  000B88  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2852  000B8A  A0D8               	btfss	status,0,c
  2853  000B8C  EFCA  F005         	goto	u3221
  2854  000B90  EFCC  F005         	goto	u3220
  2855  000B94                     u3221:
  2856  000B94  EF5D  F005         	goto	l4669
  2857  000B98                     u3220:
  2858  000B98                     
  2859                           ; BSR set to: 0
  2860                           ;main.c: 179:                     delay = 0;
  2861  000B98  0E00               	movlw	0
  2862  000B9A  6E3E               	movwf	_delay^0,c
  2863                           
  2864                           ;main.c: 180:                     curveMode = BeforeCurve;
  2865  000B9C  0E01               	movlw	1
  2866  000B9E  6E3F               	movwf	_curveMode^0,c
  2867                           
  2868                           ;main.c: 181:                     driveMode = CurveLeft;
  2869  000BA0  0E05               	movlw	5
  2870  000BA2  6E4C               	movwf	_driveMode^0,c
  2871  000BA4  EF5D  F005         	goto	l4669
  2872  000BA8                     l4697:
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;main.c: 188:             if (delay >= (1)) {
  2876  000BA8  503E               	movf	_delay^0,w,c
  2877  000BAA  B4D8               	btfsc	status,2,c
  2878  000BAC  EFDA  F005         	goto	u3231
  2879  000BB0  EFDC  F005         	goto	u3230
  2880  000BB4                     u3231:
  2881  000BB4  EF5D  F005         	goto	l4669
  2882  000BB8                     u3230:
  2883  000BB8                     
  2884                           ; BSR set to: 0
  2885                           ;main.c: 189:                 delay = 0;
  2886  000BB8  0E00               	movlw	0
  2887  000BBA  6E3E               	movwf	_delay^0,c
  2888                           
  2889                           ;main.c: 190:                 curveMode = OutCurve;
  2890  000BBC  0E00               	movlw	0
  2891  000BBE  6E3F               	movwf	_curveMode^0,c
  2892                           
  2893                           ;main.c: 192:             } else {
  2894  000BC0  EFFF  F005         	goto	l1265
  2895  000BC4                     l4705:
  2896                           
  2897                           ; BSR set to: 0
  2898  000BC4  503F               	movf	_curveMode^0,w,c
  2899  000BC6  6E14               	movwf	??_getCurve^0,c
  2900  000BC8  6A15               	clrf	(??_getCurve+1)^0,c
  2901                           
  2902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2903                           ; Switch size 1, requested type "simple"
  2904                           ; Number of cases is 1, Range of values is 0 to 0
  2905                           ; switch strategies available:
  2906                           ; Name         Instructions Cycles
  2907                           ; simple_byte            4     3 (average)
  2908                           ;	Chosen strategy is simple_byte
  2909  000BCA  5015               	movf	(??_getCurve+1)^0,w,c
  2910  000BCC  0A00               	xorlw	0	; case 0
  2911  000BCE  B4D8               	btfsc	status,2,c
  2912  000BD0  EFEC  F005         	goto	l5989
  2913  000BD4  EFFF  F005         	goto	l1265
  2914  000BD8                     l5989:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ; Switch size 1, requested type "simple"
  2918                           ; Number of cases is 4, Range of values is 0 to 3
  2919                           ; switch strategies available:
  2920                           ; Name         Instructions Cycles
  2921                           ; simple_byte           13     7 (average)
  2922                           ;	Chosen strategy is simple_byte
  2923  000BD8  5014               	movf	??_getCurve^0,w,c
  2924  000BDA  0A00               	xorlw	0	; case 0
  2925  000BDC  B4D8               	btfsc	status,2,c
  2926  000BDE  EFF1  F004         	goto	l4649
  2927  000BE2  0A01               	xorlw	1	; case 1
  2928  000BE4  B4D8               	btfsc	status,2,c
  2929  000BE6  EF4F  F005         	goto	l4665
  2930  000BEA  0A03               	xorlw	3	; case 2
  2931  000BEC  B4D8               	btfsc	status,2,c
  2932  000BEE  EF60  F005         	goto	l4671
  2933  000BF2  0A01               	xorlw	1	; case 3
  2934  000BF4  B4D8               	btfsc	status,2,c
  2935  000BF6  EFD4  F005         	goto	l4697
  2936  000BFA  EFFF  F005         	goto	l1265
  2937  000BFE                     l1265:
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;main.c: 197:     oldDistLeft = distLeft;
  2941  000BFE  C09C  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  2942  000C02  C09D  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2943                           
  2944                           ;main.c: 198:     oldDistRight = distRight;
  2945  000C06  C098  F092         	movff	_distRight,_oldDistRight	;volatile
  2946  000C0A  C099  F093         	movff	_distRight+1,_oldDistRight+1	;volatile
  2947  000C0E                     
  2948                           ; BSR set to: 0
  2949  000C0E  0012               	return		;funcret
  2950  000C10                     __end_of_getCurve:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _calcSpeed *****************
  2954 ;; Defined at:
  2955 ;;		line 290 in file "main.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  speed           2   39[BANK0 ] short 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;Total ram usage:        6 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 9
  2976 ;; This function calls:
  2977 ;;		___fladd
  2978 ;;		___flmul
  2979 ;;		___fltol
  2980 ;;		___xxtofl
  2981 ;; This function is called by:
  2982 ;;		_loop
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text10
  2987  000E40                     __ptext10:
  2988                           	callstack 0
  2989  000E40                     _calcSpeed:
  2990                           	callstack 20
  2991  000E40                     
  2992                           ;main.c: 291:     int16_t speed = 0;
  2993  000E40  0E00               	movlw	0
  2994  000E42  0100               	movlb	0	; () banked
  2995  000E44  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  2996  000E46  0E00               	movlw	0
  2997  000E48  6FC6               	movwf	calcSpeed@speed& (0+255),b
  2998                           
  2999                           ;main.c: 293:     switch (driveMode) {
  3000  000E4A  EFD6  F007         	goto	l5743
  3001  000E4E                     l5707:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;main.c: 295:             if (distFront > (30)) {
  3005  000E4E  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3006  000E50  E109               	bnz	u4500
  3007  000E52  0E1F               	movlw	31
  3008  000E54  5C4A               	subwf	_distFront^0,w,c	;volatile
  3009  000E56  A0D8               	btfss	status,0,c
  3010  000E58  EF30  F007         	goto	u4501
  3011  000E5C  EF32  F007         	goto	u4500
  3012  000E60                     u4501:
  3013  000E60  EF34  F007         	goto	l5711
  3014  000E64                     u4500:
  3015  000E64                     
  3016                           ; BSR set to: 0
  3017                           ;main.c: 296:                 driveMode = Straight;
  3018  000E64  0E01               	movlw	1
  3019  000E66  6E4C               	movwf	_driveMode^0,c
  3020  000E68                     l5711:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;main.c: 298:             if (setSpeed > (100)) {
  3024  000E68  BF8B               	btfsc	(_setSpeed+1)& (0+255),7,b
  3025  000E6A  EF40  F007         	goto	u4511
  3026  000E6E  518B               	movf	(_setSpeed+1)& (0+255),w,b
  3027  000E70  E109               	bnz	u4510
  3028  000E72  0E65               	movlw	101
  3029  000E74  5D8A               	subwf	_setSpeed& (0+255),w,b
  3030  000E76  A0D8               	btfss	status,0,c
  3031  000E78  EF40  F007         	goto	u4511
  3032  000E7C  EF42  F007         	goto	u4510
  3033  000E80                     u4511:
  3034  000E80  EF5D  F007         	goto	l5721
  3035  000E84                     u4510:
  3036  000E84                     
  3037                           ; BSR set to: 0
  3038                           ;main.c: 299:                     speed = setSpeed;
  3039  000E84  C08A  F0C6         	movff	_setSpeed,calcSpeed@speed
  3040  000E88  C08B  F0C7         	movff	_setSpeed+1,calcSpeed@speed+1
  3041  000E8C                     
  3042                           ; BSR set to: 0
  3043                           ;main.c: 300:                 if (distFront < (15)) {
  3044  000E8C  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3045  000E8E  E107               	bnz	u4521
  3046  000E90  0E0F               	movlw	15
  3047  000E92  5C4A               	subwf	_distFront^0,w,c	;volatile
  3048  000E94  B0D8               	btfsc	status,0,c
  3049  000E96  EF4F  F007         	goto	u4521
  3050  000E9A  EF51  F007         	goto	u4520
  3051  000E9E                     u4521:
  3052  000E9E  EF57  F007         	goto	l5719
  3053  000EA2                     u4520:
  3054  000EA2                     
  3055                           ; BSR set to: 0
  3056                           ;main.c: 301:                     speed -= 4;
  3057  000EA2  0EFC               	movlw	252
  3058  000EA4  27C6               	addwf	calcSpeed@speed& (0+255),f,b
  3059  000EA6  0EFF               	movlw	255
  3060  000EA8  23C7               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3061                           
  3062                           ;main.c: 302:                 } else {
  3063  000EAA  EFFB  F007         	goto	l5745
  3064  000EAE                     l5719:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;main.c: 303:                     speed -= 2;
  3068  000EAE  0EFE               	movlw	254
  3069  000EB0  27C6               	addwf	calcSpeed@speed& (0+255),f,b
  3070  000EB2  0EFF               	movlw	255
  3071  000EB4  23C7               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3072  000EB6  EFFB  F007         	goto	l5745
  3073  000EBA                     l5721:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;main.c: 306:                 speed = (100);
  3077  000EBA  0E00               	movlw	0
  3078  000EBC  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3079  000EBE  0E64               	movlw	100
  3080  000EC0  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3081  000EC2  EFFB  F007         	goto	l5745
  3082  000EC6                     l5723:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;main.c: 310:             if (distFront < (30)) {
  3086  000EC6  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3087  000EC8  E107               	bnz	u4531
  3088  000ECA  0E1E               	movlw	30
  3089  000ECC  5C4A               	subwf	_distFront^0,w,c	;volatile
  3090  000ECE  B0D8               	btfsc	status,0,c
  3091  000ED0  EF6C  F007         	goto	u4531
  3092  000ED4  EF6E  F007         	goto	u4530
  3093  000ED8                     u4531:
  3094  000ED8  EF70  F007         	goto	l5727
  3095  000EDC                     u4530:
  3096  000EDC                     
  3097                           ; BSR set to: 0
  3098                           ;main.c: 311:                 driveMode = Brake;
  3099  000EDC  0E02               	movlw	2
  3100  000EDE  6E4C               	movwf	_driveMode^0,c
  3101  000EE0                     l5727:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;main.c: 314:             if (distFront >= (175)) {
  3105  000EE0  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3106  000EE2  E109               	bnz	u4540
  3107  000EE4  0EAF               	movlw	175
  3108  000EE6  5C4A               	subwf	_distFront^0,w,c	;volatile
  3109  000EE8  A0D8               	btfss	status,0,c
  3110  000EEA  EF79  F007         	goto	u4541
  3111  000EEE  EF7B  F007         	goto	u4540
  3112  000EF2                     u4541:
  3113  000EF2  EFC4  F007         	goto	l5731
  3114  000EF6                     u4540:
  3115  000EF6                     
  3116                           ; BSR set to: 0
  3117                           ;main.c: 315:                 speed = (int16_t) ((0.5) * (distFront - (175)) + (300));
  3118  000EF6  0E00               	movlw	0
  3119  000EF8  6FB0               	movwf	___fladd@a& (0+255),b
  3120  000EFA  0E00               	movlw	0
  3121  000EFC  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3122  000EFE  0E96               	movlw	150
  3123  000F00  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3124  000F02  0E43               	movlw	67
  3125  000F04  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3126  000F06  0E00               	movlw	0
  3127  000F08  6E2E               	movwf	___flmul@a^0,c
  3128  000F0A  0E00               	movlw	0
  3129  000F0C  6E2F               	movwf	(___flmul@a+1)^0,c
  3130  000F0E  0E00               	movlw	0
  3131  000F10  6E30               	movwf	(___flmul@a+2)^0,c
  3132  000F12  0E3F               	movlw	63
  3133  000F14  6E31               	movwf	(___flmul@a+3)^0,c
  3134  000F16  0E51               	movlw	81
  3135  000F18  6FC2               	movwf	??_calcSpeed& (0+255),b
  3136  000F1A  0EFF               	movlw	255
  3137  000F1C  6FC3               	movwf	(??_calcSpeed+1)& (0+255),b
  3138  000F1E  C04A  F0C4         	movff	_distFront,??_calcSpeed+2	;volatile
  3139  000F22  C04B  F0C5         	movff	_distFront+1,??_calcSpeed+3	;volatile
  3140  000F26  51C2               	movf	??_calcSpeed& (0+255),w,b
  3141  000F28  27C4               	addwf	(??_calcSpeed+2)& (0+255),f,b
  3142  000F2A  51C3               	movf	(??_calcSpeed+1)& (0+255),w,b
  3143  000F2C  23C5               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  3144  000F2E  C0C4  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  3145  000F32  C0C5  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  3146  000F36  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3147  000F38  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3148  000F3A  0E00               	movlw	0
  3149  000F3C  EC25  F008         	call	___xxtofl
  3150  000F40  C01C  F02A         	movff	?___xxtofl,___flmul@b
  3151  000F44  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  3152  000F48  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  3153  000F4C  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  3154  000F50  ECBA  F002         	call	___flmul	;wreg free
  3155  000F54  C02A  F0AC         	movff	?___flmul,___fladd@b
  3156  000F58  C02B  F0AD         	movff	?___flmul+1,___fladd@b+1
  3157  000F5C  C02C  F0AE         	movff	?___flmul+2,___fladd@b+2
  3158  000F60  C02D  F0AF         	movff	?___flmul+3,___fladd@b+3
  3159  000F64  EC59  F000         	call	___fladd	;wreg free
  3160  000F68  C0AC  F0B8         	movff	?___fladd,___fltol@f1
  3161  000F6C  C0AD  F0B9         	movff	?___fladd+1,___fltol@f1+1
  3162  000F70  C0AE  F0BA         	movff	?___fladd+2,___fltol@f1+2
  3163  000F74  C0AF  F0BB         	movff	?___fladd+3,___fltol@f1+3
  3164  000F78  EC92  F00B         	call	___fltol	;wreg free
  3165  000F7C  C0B8  F0C6         	movff	?___fltol,calcSpeed@speed
  3166  000F80  C0B9  F0C7         	movff	?___fltol+1,calcSpeed@speed+1
  3167                           
  3168                           ;main.c: 316:             } else {
  3169  000F84  EFFB  F007         	goto	l5745
  3170  000F88                     l5731:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;main.c: 317:                 speed = (300);
  3174  000F88  0E01               	movlw	1
  3175  000F8A  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3176  000F8C  0E2C               	movlw	44
  3177  000F8E  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3178  000F90  EFFB  F007         	goto	l5745
  3179  000F94                     l5733:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;main.c: 322:             speed = (-125);
  3183  000F94  0EFF               	movlw	255
  3184  000F96  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3185  000F98  0E83               	movlw	131
  3186  000F9A  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3187                           
  3188                           ;main.c: 323:             break;
  3189  000F9C  EFFB  F007         	goto	l5745
  3190  000FA0                     l5737:
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;main.c: 328:             speed = (160);
  3194  000FA0  0E00               	movlw	0
  3195  000FA2  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3196  000FA4  0EA0               	movlw	160
  3197  000FA6  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3198                           
  3199                           ;main.c: 329:             break;
  3200  000FA8  EFFB  F007         	goto	l5745
  3201  000FAC                     l5743:
  3202                           
  3203                           ; BSR set to: 0
  3204  000FAC  504C               	movf	_driveMode^0,w,c
  3205  000FAE  6FC2               	movwf	??_calcSpeed& (0+255),b
  3206  000FB0  6BC3               	clrf	(??_calcSpeed+1)& (0+255),b
  3207                           
  3208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3209                           ; Switch size 1, requested type "simple"
  3210                           ; Number of cases is 1, Range of values is 0 to 0
  3211                           ; switch strategies available:
  3212                           ; Name         Instructions Cycles
  3213                           ; simple_byte            4     3 (average)
  3214                           ;	Chosen strategy is simple_byte
  3215  000FB2  51C3               	movf	(??_calcSpeed+1)& (0+255),w,b
  3216  000FB4  0A00               	xorlw	0	; case 0
  3217  000FB6  B4D8               	btfsc	status,2,c
  3218  000FB8  EFE0  F007         	goto	l5991
  3219  000FBC  EFFB  F007         	goto	l5745
  3220  000FC0                     l5991:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ; Switch size 1, requested type "simple"
  3224                           ; Number of cases is 6, Range of values is 1 to 6
  3225                           ; switch strategies available:
  3226                           ; Name         Instructions Cycles
  3227                           ; simple_byte           19    10 (average)
  3228                           ;	Chosen strategy is simple_byte
  3229  000FC0  51C2               	movf	??_calcSpeed& (0+255),w,b
  3230  000FC2  0A01               	xorlw	1	; case 1
  3231  000FC4  B4D8               	btfsc	status,2,c
  3232  000FC6  EF63  F007         	goto	l5723
  3233  000FCA  0A03               	xorlw	3	; case 2
  3234  000FCC  B4D8               	btfsc	status,2,c
  3235  000FCE  EF27  F007         	goto	l5707
  3236  000FD2  0A01               	xorlw	1	; case 3
  3237  000FD4  B4D8               	btfsc	status,2,c
  3238  000FD6  EFCA  F007         	goto	l5733
  3239  000FDA  0A07               	xorlw	7	; case 4
  3240  000FDC  B4D8               	btfsc	status,2,c
  3241  000FDE  EFCA  F007         	goto	l5733
  3242  000FE2  0A01               	xorlw	1	; case 5
  3243  000FE4  B4D8               	btfsc	status,2,c
  3244  000FE6  EFD0  F007         	goto	l5737
  3245  000FEA  0A03               	xorlw	3	; case 6
  3246  000FEC  B4D8               	btfsc	status,2,c
  3247  000FEE  EFD0  F007         	goto	l5737
  3248  000FF2  EFFB  F007         	goto	l5745
  3249  000FF6                     l5745:
  3250                           
  3251                           ;main.c: 335:     if (speed > (550)) {
  3252  000FF6  0100               	movlb	0	; () banked
  3253  000FF8  BFC7               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  3254  000FFA  EF08  F008         	goto	u4551
  3255  000FFE  0E27               	movlw	39
  3256  001000  5DC6               	subwf	calcSpeed@speed& (0+255),w,b
  3257  001002  0E02               	movlw	2
  3258  001004  59C7               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3259  001006  A0D8               	btfss	status,0,c
  3260  001008  EF08  F008         	goto	u4551
  3261  00100C  EF0A  F008         	goto	u4550
  3262  001010                     u4551:
  3263  001010  EF0E  F008         	goto	l5749
  3264  001014                     u4550:
  3265  001014                     
  3266                           ; BSR set to: 0
  3267                           ;main.c: 336:         speed = (550);
  3268  001014  0E02               	movlw	2
  3269  001016  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3270  001018  0E26               	movlw	38
  3271  00101A  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3272  00101C                     l5749:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;main.c: 338:     if (speed < (-250)) {
  3276  00101C  AFC7               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  3277  00101E  EF1A  F008         	goto	u4561
  3278  001022  0E06               	movlw	6
  3279  001024  5DC6               	subwf	calcSpeed@speed& (0+255),w,b
  3280  001026  0EFF               	movlw	255
  3281  001028  59C7               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3282  00102A  B0D8               	btfsc	status,0,c
  3283  00102C  EF1A  F008         	goto	u4561
  3284  001030  EF1C  F008         	goto	u4560
  3285  001034                     u4561:
  3286  001034  EF20  F008         	goto	l5753
  3287  001038                     u4560:
  3288  001038                     
  3289                           ; BSR set to: 0
  3290                           ;main.c: 339:         speed = (-250);
  3291  001038  0EFF               	movlw	255
  3292  00103A  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3293  00103C  0E06               	movlw	6
  3294  00103E  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3295  001040                     l5753:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;main.c: 341:     setSpeed = speed;
  3299  001040  C0C6  F08A         	movff	calcSpeed@speed,_setSpeed
  3300  001044  C0C7  F08B         	movff	calcSpeed@speed+1,_setSpeed+1
  3301  001048                     
  3302                           ; BSR set to: 0
  3303  001048  0012               	return		;funcret
  3304  00104A                     __end_of_calcSpeed:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function ___fladd *****************
  3308 ;; Defined at:
  3309 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  b               4   13[BANK0 ] void 
  3312 ;;  a               4   17[BANK0 ] void 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  grs             1   24[BANK0 ] unsigned char 
  3315 ;;  bexp            1   23[BANK0 ] unsigned char 
  3316 ;;  aexp            1   22[BANK0 ] unsigned char 
  3317 ;;  signs           1   21[BANK0 ] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  4   13[BANK0 ] unsigned char 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3327 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;Total ram usage:       16 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; Hardware stack levels required when called: 8
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_calcSpeed
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text11
  3342  0000B2                     __ptext11:
  3343                           	callstack 0
  3344  0000B2                     ___fladd:
  3345                           	callstack 20
  3346  0000B2  0100               	movlb	0	; () banked
  3347  0000B4  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3348  0000B6  0B80               	andlw	128
  3349  0000B8  6FB4               	movwf	___fladd@signs& (0+255),b
  3350  0000BA  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3351  0000BC  25AF               	addwf	(___fladd@b+3)& (0+255),w,b
  3352  0000BE  6FB6               	movwf	___fladd@bexp& (0+255),b
  3353  0000C0                     
  3354                           ; BSR set to: 0
  3355  0000C0  AFAE               	btfss	(___fladd@b+2)& (0+255),7,b
  3356  0000C2  EF65  F000         	goto	u4081
  3357  0000C6  EF67  F000         	goto	u4080
  3358  0000CA                     u4081:
  3359  0000CA  EF68  F000         	goto	l5477
  3360  0000CE                     u4080:
  3361  0000CE                     
  3362                           ; BSR set to: 0
  3363  0000CE  81B6               	bsf	___fladd@bexp& (0+255),0,b
  3364  0000D0                     l5477:
  3365                           
  3366                           ; BSR set to: 0
  3367  0000D0  51B6               	movf	___fladd@bexp& (0+255),w,b
  3368  0000D2  B4D8               	btfsc	status,2,c
  3369  0000D4  EF6E  F000         	goto	u4091
  3370  0000D8  EF70  F000         	goto	u4090
  3371  0000DC                     u4091:
  3372  0000DC  EF85  F000         	goto	l5487
  3373  0000E0                     u4090:
  3374  0000E0                     
  3375                           ; BSR set to: 0
  3376  0000E0  29B6               	incf	___fladd@bexp& (0+255),w,b
  3377  0000E2  A4D8               	btfss	status,2,c
  3378  0000E4  EF76  F000         	goto	u4101
  3379  0000E8  EF78  F000         	goto	u4100
  3380  0000EC                     u4101:
  3381  0000EC  EF80  F000         	goto	l5483
  3382  0000F0                     u4100:
  3383  0000F0                     
  3384                           ; BSR set to: 0
  3385  0000F0  0E00               	movlw	0
  3386  0000F2  6FAC               	movwf	___fladd@b& (0+255),b
  3387  0000F4  0E00               	movlw	0
  3388  0000F6  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3389  0000F8  0E00               	movlw	0
  3390  0000FA  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3391  0000FC  0E00               	movlw	0
  3392  0000FE  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3393  000100                     l5483:
  3394                           
  3395                           ; BSR set to: 0
  3396  000100  8FAE               	bsf	(___fladd@b+2)& (0+255),7,b
  3397  000102                     
  3398                           ; BSR set to: 0
  3399  000102  0E00               	movlw	0
  3400  000104  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3401  000106  EF8D  F000         	goto	l5489
  3402  00010A                     l5487:
  3403                           
  3404                           ; BSR set to: 0
  3405  00010A  0E00               	movlw	0
  3406  00010C  6FAC               	movwf	___fladd@b& (0+255),b
  3407  00010E  0E00               	movlw	0
  3408  000110  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3409  000112  0E00               	movlw	0
  3410  000114  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3411  000116  0E00               	movlw	0
  3412  000118  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3413  00011A                     l5489:
  3414                           
  3415                           ; BSR set to: 0
  3416  00011A  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3417  00011C  0B80               	andlw	128
  3418  00011E  6FB5               	movwf	___fladd@aexp& (0+255),b
  3419  000120                     
  3420                           ; BSR set to: 0
  3421  000120  51B4               	movf	___fladd@signs& (0+255),w,b
  3422  000122  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  3423  000124  B4D8               	btfsc	status,2,c
  3424  000126  EF97  F000         	goto	u4111
  3425  00012A  EF99  F000         	goto	u4110
  3426  00012E                     u4111:
  3427  00012E  EF9A  F000         	goto	l5495
  3428  000132                     u4110:
  3429  000132                     
  3430                           ; BSR set to: 0
  3431  000132  8DB4               	bsf	___fladd@signs& (0+255),6,b
  3432  000134                     l5495:
  3433                           
  3434                           ; BSR set to: 0
  3435  000134  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3436  000136  25B3               	addwf	(___fladd@a+3)& (0+255),w,b
  3437  000138  6FB5               	movwf	___fladd@aexp& (0+255),b
  3438  00013A                     
  3439                           ; BSR set to: 0
  3440  00013A  AFB2               	btfss	(___fladd@a+2)& (0+255),7,b
  3441  00013C  EFA2  F000         	goto	u4121
  3442  000140  EFA4  F000         	goto	u4120
  3443  000144                     u4121:
  3444  000144  EFA5  F000         	goto	l5501
  3445  000148                     u4120:
  3446  000148                     
  3447                           ; BSR set to: 0
  3448  000148  81B5               	bsf	___fladd@aexp& (0+255),0,b
  3449  00014A                     l5501:
  3450                           
  3451                           ; BSR set to: 0
  3452  00014A  51B5               	movf	___fladd@aexp& (0+255),w,b
  3453  00014C  B4D8               	btfsc	status,2,c
  3454  00014E  EFAB  F000         	goto	u4131
  3455  000152  EFAD  F000         	goto	u4130
  3456  000156                     u4131:
  3457  000156  EFC2  F000         	goto	l5511
  3458  00015A                     u4130:
  3459  00015A                     
  3460                           ; BSR set to: 0
  3461  00015A  29B5               	incf	___fladd@aexp& (0+255),w,b
  3462  00015C  A4D8               	btfss	status,2,c
  3463  00015E  EFB3  F000         	goto	u4141
  3464  000162  EFB5  F000         	goto	u4140
  3465  000166                     u4141:
  3466  000166  EFBD  F000         	goto	l5507
  3467  00016A                     u4140:
  3468  00016A                     
  3469                           ; BSR set to: 0
  3470  00016A  0E00               	movlw	0
  3471  00016C  6FB0               	movwf	___fladd@a& (0+255),b
  3472  00016E  0E00               	movlw	0
  3473  000170  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3474  000172  0E00               	movlw	0
  3475  000174  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3476  000176  0E00               	movlw	0
  3477  000178  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3478  00017A                     l5507:
  3479                           
  3480                           ; BSR set to: 0
  3481  00017A  8FB2               	bsf	(___fladd@a+2)& (0+255),7,b
  3482  00017C                     
  3483                           ; BSR set to: 0
  3484  00017C  0E00               	movlw	0
  3485  00017E  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3486  000180  EFCA  F000         	goto	l5513
  3487  000184                     l5511:
  3488                           
  3489                           ; BSR set to: 0
  3490  000184  0E00               	movlw	0
  3491  000186  6FB0               	movwf	___fladd@a& (0+255),b
  3492  000188  0E00               	movlw	0
  3493  00018A  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3494  00018C  0E00               	movlw	0
  3495  00018E  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3496  000190  0E00               	movlw	0
  3497  000192  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3498  000194                     l5513:
  3499                           
  3500                           ; BSR set to: 0
  3501  000194  51B6               	movf	___fladd@bexp& (0+255),w,b
  3502  000196  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  3503  000198  B0D8               	btfsc	status,0,c
  3504  00019A  EFD1  F000         	goto	u4151
  3505  00019E  EFD3  F000         	goto	u4150
  3506  0001A2                     u4151:
  3507  0001A2  EFFA  F000         	goto	l5549
  3508  0001A6                     u4150:
  3509  0001A6                     
  3510                           ; BSR set to: 0
  3511  0001A6  ADB4               	btfss	___fladd@signs& (0+255),6,b
  3512  0001A8  EFD8  F000         	goto	u4161
  3513  0001AC  EFDA  F000         	goto	u4160
  3514  0001B0                     u4161:
  3515  0001B0  EFDC  F000         	goto	l5519
  3516  0001B4                     u4160:
  3517  0001B4                     
  3518                           ; BSR set to: 0
  3519  0001B4  0E80               	movlw	128
  3520  0001B6  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  3521  0001B8                     l5519:
  3522                           
  3523                           ; BSR set to: 0
  3524  0001B8  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  3525  0001BC                     
  3526                           ; BSR set to: 0
  3527  0001BC  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  3528  0001C0                     
  3529                           ; BSR set to: 0
  3530  0001C0  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  3531  0001C4                     
  3532                           ; BSR set to: 0
  3533  0001C4  C0AC  F0B7         	movff	___fladd@b,___fladd@grs
  3534  0001C8                     
  3535                           ; BSR set to: 0
  3536  0001C8  C0B0  F0AC         	movff	___fladd@a,___fladd@b
  3537  0001CC                     
  3538                           ; BSR set to: 0
  3539  0001CC  C0B7  F0B0         	movff	___fladd@grs,___fladd@a
  3540  0001D0                     
  3541                           ; BSR set to: 0
  3542  0001D0  C0AD  F0B7         	movff	___fladd@b+1,___fladd@grs
  3543  0001D4                     
  3544                           ; BSR set to: 0
  3545  0001D4  C0B1  F0AD         	movff	___fladd@a+1,___fladd@b+1
  3546  0001D8                     
  3547                           ; BSR set to: 0
  3548  0001D8  C0B7  F0B1         	movff	___fladd@grs,___fladd@a+1
  3549  0001DC                     
  3550                           ; BSR set to: 0
  3551  0001DC  C0AE  F0B7         	movff	___fladd@b+2,___fladd@grs
  3552  0001E0                     
  3553                           ; BSR set to: 0
  3554  0001E0  C0B2  F0AE         	movff	___fladd@a+2,___fladd@b+2
  3555  0001E4                     
  3556                           ; BSR set to: 0
  3557  0001E4  C0B7  F0B2         	movff	___fladd@grs,___fladd@a+2
  3558  0001E8                     
  3559                           ; BSR set to: 0
  3560  0001E8  C0AF  F0B7         	movff	___fladd@b+3,___fladd@grs
  3561  0001EC                     
  3562                           ; BSR set to: 0
  3563  0001EC  C0B3  F0AF         	movff	___fladd@a+3,___fladd@b+3
  3564  0001F0                     
  3565                           ; BSR set to: 0
  3566  0001F0  C0B7  F0B3         	movff	___fladd@grs,___fladd@a+3
  3567  0001F4                     l5549:
  3568                           
  3569                           ; BSR set to: 0
  3570  0001F4  0E00               	movlw	0
  3571  0001F6  6FB7               	movwf	___fladd@grs& (0+255),b
  3572  0001F8                     
  3573                           ; BSR set to: 0
  3574  0001F8  51B6               	movf	___fladd@bexp& (0+255),w,b
  3575  0001FA  C0B5  F036         	movff	___fladd@aexp,??___fladd
  3576  0001FE  6A37               	clrf	(??___fladd+1)^0,c
  3577  000200  5E36               	subwf	??___fladd^0,f,c
  3578  000202  0E00               	movlw	0
  3579  000204  5A37               	subwfb	(??___fladd+1)^0,f,c
  3580  000206  BE37               	btfsc	(??___fladd+1)^0,7,c
  3581  000208  EF0F  F001         	goto	u4171
  3582  00020C  5037               	movf	(??___fladd+1)^0,w,c
  3583  00020E  E109               	bnz	u4170
  3584  000210  0E1A               	movlw	26
  3585  000212  5C36               	subwf	??___fladd^0,w,c
  3586  000214  A0D8               	btfss	status,0,c
  3587  000216  EF0F  F001         	goto	u4171
  3588  00021A  EF11  F001         	goto	u4170
  3589  00021E                     u4171:
  3590  00021E  EF48  F001         	goto	l1915
  3591  000222                     u4170:
  3592  000222                     
  3593                           ; BSR set to: 0
  3594  000222  51AC               	movf	___fladd@b& (0+255),w,b
  3595  000224  11AD               	iorwf	(___fladd@b+1)& (0+255),w,b
  3596  000226  11AE               	iorwf	(___fladd@b+2)& (0+255),w,b
  3597  000228  11AF               	iorwf	(___fladd@b+3)& (0+255),w,b
  3598  00022A  A4D8               	btfss	status,2,c
  3599  00022C  EF1A  F001         	goto	u4181
  3600  000230  EF1D  F001         	goto	u4180
  3601  000234                     u4181:
  3602  000234  0E01               	movlw	1
  3603  000236  EF1E  F001         	goto	u4190
  3604  00023A                     u4180:
  3605  00023A  0E00               	movlw	0
  3606  00023C                     u4190:
  3607  00023C  6FB7               	movwf	___fladd@grs& (0+255),b
  3608  00023E                     
  3609                           ; BSR set to: 0
  3610  00023E  0E00               	movlw	0
  3611  000240  6FAC               	movwf	___fladd@b& (0+255),b
  3612  000242  0E00               	movlw	0
  3613  000244  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3614  000246  0E00               	movlw	0
  3615  000248  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3616  00024A  0E00               	movlw	0
  3617  00024C  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3618  00024E                     
  3619                           ; BSR set to: 0
  3620  00024E  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  3621  000252  EF51  F001         	goto	l1914
  3622  000256                     l1916:
  3623                           
  3624                           ; BSR set to: 0
  3625  000256  A1B7               	btfss	___fladd@grs& (0+255),0,b
  3626  000258  EF30  F001         	goto	u4201
  3627  00025C  EF32  F001         	goto	u4200
  3628  000260                     u4201:
  3629  000260  EF38  F001         	goto	l5561
  3630  000264                     u4200:
  3631  000264                     
  3632                           ; BSR set to: 0
  3633  000264  90D8               	bcf	status,0,c
  3634  000266  31B7               	rrcf	___fladd@grs& (0+255),w,b
  3635  000268  0901               	iorlw	1
  3636  00026A  6FB7               	movwf	___fladd@grs& (0+255),b
  3637  00026C  EF3A  F001         	goto	l5563
  3638  000270                     l5561:
  3639                           
  3640                           ; BSR set to: 0
  3641  000270  90D8               	bcf	status,0,c
  3642  000272  33B7               	rrcf	___fladd@grs& (0+255),f,b
  3643  000274                     l5563:
  3644                           
  3645                           ; BSR set to: 0
  3646  000274  A1AC               	btfss	___fladd@b& (0+255),0,b
  3647  000276  EF3F  F001         	goto	u4211
  3648  00027A  EF41  F001         	goto	u4210
  3649  00027E                     u4211:
  3650  00027E  EF42  F001         	goto	l5567
  3651  000282                     u4210:
  3652  000282                     
  3653                           ; BSR set to: 0
  3654  000282  8FB7               	bsf	___fladd@grs& (0+255),7,b
  3655  000284                     l5567:
  3656                           
  3657                           ; BSR set to: 0
  3658  000284  35AF               	rlcf	(___fladd@b+3)& (0+255),w,b
  3659  000286  33AF               	rrcf	(___fladd@b+3)& (0+255),f,b
  3660  000288  33AE               	rrcf	(___fladd@b+2)& (0+255),f,b
  3661  00028A  33AD               	rrcf	(___fladd@b+1)& (0+255),f,b
  3662  00028C  33AC               	rrcf	___fladd@b& (0+255),f,b
  3663  00028E                     
  3664                           ; BSR set to: 0
  3665  00028E  2BB6               	incf	___fladd@bexp& (0+255),f,b
  3666  000290                     l1915:
  3667                           
  3668                           ; BSR set to: 0
  3669  000290  51B5               	movf	___fladd@aexp& (0+255),w,b
  3670  000292  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  3671  000294  A0D8               	btfss	status,0,c
  3672  000296  EF4F  F001         	goto	u4221
  3673  00029A  EF51  F001         	goto	u4220
  3674  00029E                     u4221:
  3675  00029E  EF2B  F001         	goto	l1916
  3676  0002A2                     u4220:
  3677  0002A2                     l1914:
  3678                           
  3679                           ; BSR set to: 0
  3680  0002A2  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  3681  0002A4  EF56  F001         	goto	u4231
  3682  0002A8  EF58  F001         	goto	u4230
  3683  0002AC                     u4231:
  3684  0002AC  EF98  F001         	goto	l5595
  3685  0002B0                     u4230:
  3686  0002B0                     
  3687                           ; BSR set to: 0
  3688  0002B0  51B6               	movf	___fladd@bexp& (0+255),w,b
  3689  0002B2  A4D8               	btfss	status,2,c
  3690  0002B4  EF5E  F001         	goto	u4241
  3691  0002B8  EF60  F001         	goto	u4240
  3692  0002BC                     u4241:
  3693  0002BC  EF6A  F001         	goto	l5577
  3694  0002C0                     u4240:
  3695  0002C0                     
  3696                           ; BSR set to: 0
  3697  0002C0  0E00               	movlw	0
  3698  0002C2  6FAC               	movwf	?___fladd& (0+255),b
  3699  0002C4  0E00               	movlw	0
  3700  0002C6  6FAD               	movwf	(?___fladd+1)& (0+255),b
  3701  0002C8  0E00               	movlw	0
  3702  0002CA  6FAE               	movwf	(?___fladd+2)& (0+255),b
  3703  0002CC  0E00               	movlw	0
  3704  0002CE  6FAF               	movwf	(?___fladd+3)& (0+255),b
  3705  0002D0  EFB9  F002         	goto	l1923
  3706  0002D4                     l5577:
  3707                           
  3708                           ; BSR set to: 0
  3709  0002D4  51B0               	movf	___fladd@a& (0+255),w,b
  3710  0002D6  27AC               	addwf	___fladd@b& (0+255),f,b
  3711  0002D8  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  3712  0002DA  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  3713  0002DC  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  3714  0002DE  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  3715  0002E0  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3716  0002E2  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  3717  0002E4                     
  3718                           ; BSR set to: 0
  3719  0002E4  A1AF               	btfss	(___fladd@b+3)& (0+255),0,b
  3720  0002E6  EF77  F001         	goto	u4251
  3721  0002EA  EF79  F001         	goto	u4250
  3722  0002EE                     u4251:
  3723  0002EE  EF25  F002         	goto	l5631
  3724  0002F2                     u4250:
  3725  0002F2                     
  3726                           ; BSR set to: 0
  3727  0002F2  A1B7               	btfss	___fladd@grs& (0+255),0,b
  3728  0002F4  EF7E  F001         	goto	u4261
  3729  0002F8  EF80  F001         	goto	u4260
  3730  0002FC                     u4261:
  3731  0002FC  EF86  F001         	goto	l5585
  3732  000300                     u4260:
  3733  000300                     
  3734                           ; BSR set to: 0
  3735  000300  90D8               	bcf	status,0,c
  3736  000302  31B7               	rrcf	___fladd@grs& (0+255),w,b
  3737  000304  0901               	iorlw	1
  3738  000306  6FB7               	movwf	___fladd@grs& (0+255),b
  3739  000308  EF88  F001         	goto	l5587
  3740  00030C                     l5585:
  3741                           
  3742                           ; BSR set to: 0
  3743  00030C  90D8               	bcf	status,0,c
  3744  00030E  33B7               	rrcf	___fladd@grs& (0+255),f,b
  3745  000310                     l5587:
  3746                           
  3747                           ; BSR set to: 0
  3748  000310  A1AC               	btfss	___fladd@b& (0+255),0,b
  3749  000312  EF8D  F001         	goto	u4271
  3750  000316  EF8F  F001         	goto	u4270
  3751  00031A                     u4271:
  3752  00031A  EF90  F001         	goto	l5591
  3753  00031E                     u4270:
  3754  00031E                     
  3755                           ; BSR set to: 0
  3756  00031E  8FB7               	bsf	___fladd@grs& (0+255),7,b
  3757  000320                     l5591:
  3758                           
  3759                           ; BSR set to: 0
  3760  000320  35AF               	rlcf	(___fladd@b+3)& (0+255),w,b
  3761  000322  33AF               	rrcf	(___fladd@b+3)& (0+255),f,b
  3762  000324  33AE               	rrcf	(___fladd@b+2)& (0+255),f,b
  3763  000326  33AD               	rrcf	(___fladd@b+1)& (0+255),f,b
  3764  000328  33AC               	rrcf	___fladd@b& (0+255),f,b
  3765  00032A                     
  3766                           ; BSR set to: 0
  3767  00032A  2BB6               	incf	___fladd@bexp& (0+255),f,b
  3768  00032C  EF25  F002         	goto	l5631
  3769  000330                     l5595:
  3770                           
  3771                           ; BSR set to: 0
  3772  000330  51B0               	movf	___fladd@a& (0+255),w,b
  3773  000332  5DAC               	subwf	___fladd@b& (0+255),w,b
  3774  000334  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  3775  000336  59AD               	subwfb	(___fladd@b+1)& (0+255),w,b
  3776  000338  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  3777  00033A  59AE               	subwfb	(___fladd@b+2)& (0+255),w,b
  3778  00033C  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3779  00033E  0A80               	xorlw	128
  3780  000340  6E36               	movwf	??___fladd^0,c
  3781  000342  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3782  000344  0A80               	xorlw	128
  3783  000346  5836               	subwfb	??___fladd^0,w,c
  3784  000348  B0D8               	btfsc	status,0,c
  3785  00034A  EFA9  F001         	goto	u4281
  3786  00034E  EFAB  F001         	goto	u4280
  3787  000352                     u4281:
  3788  000352  EFD6  F001         	goto	l5605
  3789  000356                     u4280:
  3790  000356                     
  3791                           ; BSR set to: 0
  3792  000356  51AC               	movf	___fladd@b& (0+255),w,b
  3793  000358  5DB0               	subwf	___fladd@a& (0+255),w,b
  3794  00035A  6E36               	movwf	??___fladd^0,c
  3795  00035C  51AD               	movf	(___fladd@b+1)& (0+255),w,b
  3796  00035E  59B1               	subwfb	(___fladd@a+1)& (0+255),w,b
  3797  000360  6E37               	movwf	(??___fladd+1)^0,c
  3798  000362  51AE               	movf	(___fladd@b+2)& (0+255),w,b
  3799  000364  59B2               	subwfb	(___fladd@a+2)& (0+255),w,b
  3800  000366  6E38               	movwf	(??___fladd+2)^0,c
  3801  000368  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3802  00036A  59B3               	subwfb	(___fladd@a+3)& (0+255),w,b
  3803  00036C  6E39               	movwf	(??___fladd+3)^0,c
  3804  00036E  0EFF               	movlw	255
  3805  000370  2436               	addwf	??___fladd^0,w,c
  3806  000372  6FAC               	movwf	___fladd@b& (0+255),b
  3807  000374  0EFF               	movlw	255
  3808  000376  2037               	addwfc	(??___fladd+1)^0,w,c
  3809  000378  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3810  00037A  0EFF               	movlw	255
  3811  00037C  2038               	addwfc	(??___fladd+2)^0,w,c
  3812  00037E  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3813  000380  0EFF               	movlw	255
  3814  000382  2039               	addwfc	(??___fladd+3)^0,w,c
  3815  000384  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3816  000386  0E80               	movlw	128
  3817  000388  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  3818  00038A                     
  3819                           ; BSR set to: 0
  3820  00038A  6DB7               	negf	___fladd@grs& (0+255),b
  3821  00038C                     
  3822                           ; BSR set to: 0
  3823  00038C  51B7               	movf	___fladd@grs& (0+255),w,b
  3824  00038E  A4D8               	btfss	status,2,c
  3825  000390  EFCC  F001         	goto	u4291
  3826  000394  EFCE  F001         	goto	u4290
  3827  000398                     u4291:
  3828  000398  EFDE  F001         	goto	l1931
  3829  00039C                     u4290:
  3830  00039C                     
  3831                           ; BSR set to: 0
  3832  00039C  0E01               	movlw	1
  3833  00039E  27AC               	addwf	___fladd@b& (0+255),f,b
  3834  0003A0  0E00               	movlw	0
  3835  0003A2  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  3836  0003A4  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  3837  0003A6  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  3838  0003A8  EFDE  F001         	goto	l1931
  3839  0003AC                     l5605:
  3840                           
  3841                           ; BSR set to: 0
  3842  0003AC  51B0               	movf	___fladd@a& (0+255),w,b
  3843  0003AE  5FAC               	subwf	___fladd@b& (0+255),f,b
  3844  0003B0  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  3845  0003B2  5BAD               	subwfb	(___fladd@b+1)& (0+255),f,b
  3846  0003B4  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  3847  0003B6  5BAE               	subwfb	(___fladd@b+2)& (0+255),f,b
  3848  0003B8  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3849  0003BA  5BAF               	subwfb	(___fladd@b+3)& (0+255),f,b
  3850  0003BC                     l1931:
  3851                           
  3852                           ; BSR set to: 0
  3853  0003BC  51AC               	movf	___fladd@b& (0+255),w,b
  3854  0003BE  11AD               	iorwf	(___fladd@b+1)& (0+255),w,b
  3855  0003C0  11AE               	iorwf	(___fladd@b+2)& (0+255),w,b
  3856  0003C2  11AF               	iorwf	(___fladd@b+3)& (0+255),w,b
  3857  0003C4  A4D8               	btfss	status,2,c
  3858  0003C6  EFE7  F001         	goto	u4301
  3859  0003CA  EFE9  F001         	goto	u4300
  3860  0003CE                     u4301:
  3861  0003CE  EF1E  F002         	goto	l5629
  3862  0003D2                     u4300:
  3863  0003D2                     
  3864                           ; BSR set to: 0
  3865  0003D2  51B7               	movf	___fladd@grs& (0+255),w,b
  3866  0003D4  A4D8               	btfss	status,2,c
  3867  0003D6  EFEF  F001         	goto	u4311
  3868  0003DA  EFF1  F001         	goto	u4310
  3869  0003DE                     u4311:
  3870  0003DE  EF1E  F002         	goto	l5629
  3871  0003E2                     u4310:
  3872  0003E2                     
  3873                           ; BSR set to: 0
  3874  0003E2  0E00               	movlw	0
  3875  0003E4  6FAC               	movwf	?___fladd& (0+255),b
  3876  0003E6  0E00               	movlw	0
  3877  0003E8  6FAD               	movwf	(?___fladd+1)& (0+255),b
  3878  0003EA  0E00               	movlw	0
  3879  0003EC  6FAE               	movwf	(?___fladd+2)& (0+255),b
  3880  0003EE  0E00               	movlw	0
  3881  0003F0  6FAF               	movwf	(?___fladd+3)& (0+255),b
  3882  0003F2  EFB9  F002         	goto	l1923
  3883  0003F6                     l5613:
  3884                           
  3885                           ; BSR set to: 0
  3886  0003F6  90D8               	bcf	status,0,c
  3887  0003F8  37AC               	rlcf	___fladd@b& (0+255),f,b
  3888  0003FA  37AD               	rlcf	(___fladd@b+1)& (0+255),f,b
  3889  0003FC  37AE               	rlcf	(___fladd@b+2)& (0+255),f,b
  3890  0003FE  37AF               	rlcf	(___fladd@b+3)& (0+255),f,b
  3891  000400                     
  3892                           ; BSR set to: 0
  3893  000400  AFB7               	btfss	___fladd@grs& (0+255),7,b
  3894  000402  EF05  F002         	goto	u4321
  3895  000406  EF07  F002         	goto	u4320
  3896  00040A                     u4321:
  3897  00040A  EF08  F002         	goto	l5619
  3898  00040E                     u4320:
  3899  00040E                     
  3900                           ; BSR set to: 0
  3901  00040E  81AC               	bsf	___fladd@b& (0+255),0,b
  3902  000410                     l5619:
  3903                           
  3904                           ; BSR set to: 0
  3905  000410  A1B7               	btfss	___fladd@grs& (0+255),0,b
  3906  000412  EF0D  F002         	goto	u4331
  3907  000416  EF0F  F002         	goto	u4330
  3908  00041A                     u4331:
  3909  00041A  EF13  F002         	goto	l5623
  3910  00041E                     u4330:
  3911  00041E                     
  3912                           ; BSR set to: 0
  3913  00041E  80D8               	bsf	status,0,c
  3914  000420  37B7               	rlcf	___fladd@grs& (0+255),f,b
  3915  000422  EF15  F002         	goto	l5625
  3916  000426                     l5623:
  3917                           
  3918                           ; BSR set to: 0
  3919  000426  90D8               	bcf	status,0,c
  3920  000428  37B7               	rlcf	___fladd@grs& (0+255),f,b
  3921  00042A                     l5625:
  3922                           
  3923                           ; BSR set to: 0
  3924  00042A  51B6               	movf	___fladd@bexp& (0+255),w,b
  3925  00042C  B4D8               	btfsc	status,2,c
  3926  00042E  EF1B  F002         	goto	u4341
  3927  000432  EF1D  F002         	goto	u4340
  3928  000436                     u4341:
  3929  000436  EF1E  F002         	goto	l5629
  3930  00043A                     u4340:
  3931  00043A                     
  3932                           ; BSR set to: 0
  3933  00043A  07B6               	decf	___fladd@bexp& (0+255),f,b
  3934  00043C                     l5629:
  3935                           
  3936                           ; BSR set to: 0
  3937  00043C  AFAE               	btfss	(___fladd@b+2)& (0+255),7,b
  3938  00043E  EF23  F002         	goto	u4351
  3939  000442  EF25  F002         	goto	u4350
  3940  000446                     u4351:
  3941  000446  EFFB  F001         	goto	l5613
  3942  00044A                     u4350:
  3943  00044A                     l5631:
  3944                           
  3945                           ; BSR set to: 0
  3946  00044A  0E00               	movlw	0
  3947  00044C  6FB5               	movwf	___fladd@aexp& (0+255),b
  3948  00044E                     
  3949                           ; BSR set to: 0
  3950  00044E  AFB7               	btfss	___fladd@grs& (0+255),7,b
  3951  000450  EF2C  F002         	goto	u4361
  3952  000454  EF2E  F002         	goto	u4360
  3953  000458                     u4361:
  3954  000458  EF46  F002         	goto	l1940
  3955  00045C                     u4360:
  3956  00045C                     
  3957                           ; BSR set to: 0
  3958  00045C  C0B7  F036         	movff	___fladd@grs,??___fladd
  3959  000460  0E7F               	movlw	127
  3960  000462  1636               	andwf	??___fladd^0,f,c
  3961  000464  B4D8               	btfsc	status,2,c
  3962  000466  EF37  F002         	goto	u4371
  3963  00046A  EF39  F002         	goto	u4370
  3964  00046E                     u4371:
  3965  00046E  EF3D  F002         	goto	l1941
  3966  000472                     u4370:
  3967  000472                     l5637:
  3968                           
  3969                           ; BSR set to: 0
  3970  000472  0E01               	movlw	1
  3971  000474  6FB5               	movwf	___fladd@aexp& (0+255),b
  3972  000476  EF46  F002         	goto	l1940
  3973  00047A                     l1941:
  3974                           
  3975                           ; BSR set to: 0
  3976  00047A  A1AC               	btfss	___fladd@b& (0+255),0,b
  3977  00047C  EF42  F002         	goto	u4381
  3978  000480  EF44  F002         	goto	u4380
  3979  000484                     u4381:
  3980  000484  EF46  F002         	goto	l1940
  3981  000488                     u4380:
  3982  000488  EF39  F002         	goto	l5637
  3983  00048C                     l1940:
  3984                           
  3985                           ; BSR set to: 0
  3986  00048C  51B5               	movf	___fladd@aexp& (0+255),w,b
  3987  00048E  B4D8               	btfsc	status,2,c
  3988  000490  EF4C  F002         	goto	u4391
  3989  000494  EF4E  F002         	goto	u4390
  3990  000498                     u4391:
  3991  000498  EF79  F002         	goto	l5649
  3992  00049C                     u4390:
  3993  00049C                     
  3994                           ; BSR set to: 0
  3995  00049C  0E01               	movlw	1
  3996  00049E  27AC               	addwf	___fladd@b& (0+255),f,b
  3997  0004A0  0E00               	movlw	0
  3998  0004A2  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  3999  0004A4  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  4000  0004A6  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  4001  0004A8                     
  4002                           ; BSR set to: 0
  4003  0004A8  A1AF               	btfss	(___fladd@b+3)& (0+255),0,b
  4004  0004AA  EF59  F002         	goto	u4401
  4005  0004AE  EF5B  F002         	goto	u4400
  4006  0004B2                     u4401:
  4007  0004B2  EF79  F002         	goto	l5649
  4008  0004B6                     u4400:
  4009  0004B6                     
  4010                           ; BSR set to: 0
  4011  0004B6  C0AC  F036         	movff	___fladd@b,??___fladd
  4012  0004BA  C0AD  F037         	movff	___fladd@b+1,??___fladd+1
  4013  0004BE  C0AE  F038         	movff	___fladd@b+2,??___fladd+2
  4014  0004C2  C0AF  F039         	movff	___fladd@b+3,??___fladd+3
  4015  0004C6  3439               	rlcf	(??___fladd+3)^0,w,c
  4016  0004C8  3239               	rrcf	(??___fladd+3)^0,f,c
  4017  0004CA  3238               	rrcf	(??___fladd+2)^0,f,c
  4018  0004CC  3237               	rrcf	(??___fladd+1)^0,f,c
  4019  0004CE  3236               	rrcf	??___fladd^0,f,c
  4020  0004D0  C036  F0AC         	movff	??___fladd,___fladd@b
  4021  0004D4  C037  F0AD         	movff	??___fladd+1,___fladd@b+1
  4022  0004D8  C038  F0AE         	movff	??___fladd+2,___fladd@b+2
  4023  0004DC  C039  F0AF         	movff	??___fladd+3,___fladd@b+3
  4024  0004E0  29B6               	incf	___fladd@bexp& (0+255),w,b
  4025  0004E2  B4D8               	btfsc	status,2,c
  4026  0004E4  EF76  F002         	goto	u4411
  4027  0004E8  EF78  F002         	goto	u4410
  4028  0004EC                     u4411:
  4029  0004EC  EF79  F002         	goto	l5649
  4030  0004F0                     u4410:
  4031  0004F0                     
  4032                           ; BSR set to: 0
  4033  0004F0  2BB6               	incf	___fladd@bexp& (0+255),f,b
  4034  0004F2                     l5649:
  4035                           
  4036                           ; BSR set to: 0
  4037  0004F2  29B6               	incf	___fladd@bexp& (0+255),w,b
  4038  0004F4  B4D8               	btfsc	status,2,c
  4039  0004F6  EF7F  F002         	goto	u4421
  4040  0004FA  EF81  F002         	goto	u4420
  4041  0004FE                     u4421:
  4042  0004FE  EF89  F002         	goto	l5653
  4043  000502                     u4420:
  4044  000502                     
  4045                           ; BSR set to: 0
  4046  000502  51B6               	movf	___fladd@bexp& (0+255),w,b
  4047  000504  A4D8               	btfss	status,2,c
  4048  000506  EF87  F002         	goto	u4431
  4049  00050A  EF89  F002         	goto	u4430
  4050  00050E                     u4431:
  4051  00050E  EF9B  F002         	goto	l5657
  4052  000512                     u4430:
  4053  000512                     l5653:
  4054                           
  4055                           ; BSR set to: 0
  4056  000512  0E00               	movlw	0
  4057  000514  6FAC               	movwf	___fladd@b& (0+255),b
  4058  000516  0E00               	movlw	0
  4059  000518  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  4060  00051A  0E00               	movlw	0
  4061  00051C  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  4062  00051E  0E00               	movlw	0
  4063  000520  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  4064  000522  51B6               	movf	___fladd@bexp& (0+255),w,b
  4065  000524  A4D8               	btfss	status,2,c
  4066  000526  EF97  F002         	goto	u4441
  4067  00052A  EF99  F002         	goto	u4440
  4068  00052E                     u4441:
  4069  00052E  EF9B  F002         	goto	l5657
  4070  000532                     u4440:
  4071  000532                     
  4072                           ; BSR set to: 0
  4073  000532  0E00               	movlw	0
  4074  000534  6FB4               	movwf	___fladd@signs& (0+255),b
  4075  000536                     l5657:
  4076                           
  4077                           ; BSR set to: 0
  4078  000536  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  4079  000538  EFA0  F002         	goto	u4451
  4080  00053C  EFA2  F002         	goto	u4450
  4081  000540                     u4451:
  4082  000540  EFA5  F002         	goto	l5661
  4083  000544                     u4450:
  4084  000544                     
  4085                           ; BSR set to: 0
  4086  000544  8FAE               	bsf	(___fladd@b+2)& (0+255),7,b
  4087  000546  EFA6  F002         	goto	l5663
  4088  00054A                     l5661:
  4089                           
  4090                           ; BSR set to: 0
  4091  00054A  9FAE               	bcf	(___fladd@b+2)& (0+255),7,b
  4092  00054C                     l5663:
  4093                           
  4094                           ; BSR set to: 0
  4095  00054C  90D8               	bcf	status,0,c
  4096  00054E  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  4097  000550  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  4098  000552                     
  4099                           ; BSR set to: 0
  4100  000552  AFB4               	btfss	___fladd@signs& (0+255),7,b
  4101  000554  EFAE  F002         	goto	u4461
  4102  000558  EFB0  F002         	goto	u4460
  4103  00055C                     u4461:
  4104  00055C  EFB1  F002         	goto	l5669
  4105  000560                     u4460:
  4106  000560                     
  4107                           ; BSR set to: 0
  4108  000560  8FAF               	bsf	(___fladd@b+3)& (0+255),7,b
  4109  000562                     l5669:
  4110                           
  4111                           ; BSR set to: 0
  4112  000562  C0AC  F0AC         	movff	___fladd@b,?___fladd
  4113  000566  C0AD  F0AD         	movff	___fladd@b+1,?___fladd+1
  4114  00056A  C0AE  F0AE         	movff	___fladd@b+2,?___fladd+2
  4115  00056E  C0AF  F0AF         	movff	___fladd@b+3,?___fladd+3
  4116  000572                     l1923:
  4117                           
  4118                           ; BSR set to: 0
  4119  000572  0012               	return		;funcret
  4120  000574                     __end_of___fladd:
  4121                           	callstack 0
  4122                           
  4123 ;; *************** function _calcMotorPow *****************
  4124 ;; Defined at:
  4125 ;;		line 344 in file "main.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  oldSpeedDelt    2   39[BANK0 ] short 
  4130 ;;  setSpeedDelt    2   37[BANK0 ] short 
  4131 ;;  addMPow         1   41[BANK0 ] char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;Total ram usage:        7 bytes
  4146 ;; Hardware stack levels used: 1
  4147 ;; Hardware stack levels required when called: 10
  4148 ;; This function calls:
  4149 ;;		___awdiv
  4150 ;;		___flmul
  4151 ;;		___fltol
  4152 ;;		___xxtofl
  4153 ;;		_actSpeed
  4154 ;;		_setMotor
  4155 ;; This function is called by:
  4156 ;;		_loop
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text12
  4161  0013A2                     __ptext12:
  4162                           	callstack 0
  4163  0013A2                     _calcMotorPow:
  4164                           	callstack 19
  4165  0013A2                     
  4166                           ;main.c: 345:     currentSpeed = actSpeed();
  4167  0013A2  EC5B  F00F         	call	_actSpeed	;wreg free
  4168  0013A6  C022  F088         	movff	?_actSpeed,_currentSpeed
  4169  0013AA  C023  F089         	movff	?_actSpeed+1,_currentSpeed+1
  4170  0013AE                     
  4171                           ;main.c: 347:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  4172  0013AE  0100               	movlb	0	; () banked
  4173  0013B0  5188               	movf	_currentSpeed& (0+255),w,b
  4174  0013B2  5D8A               	subwf	_setSpeed& (0+255),w,b
  4175  0013B4  6FC4               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  4176  0013B6  5189               	movf	(_currentSpeed+1)& (0+255),w,b
  4177  0013B8  598B               	subwfb	(_setSpeed+1)& (0+255),w,b
  4178  0013BA  6FC5               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  4179  0013BC                     
  4180                           ; BSR set to: 0
  4181                           ;main.c: 348:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  4182  0013BC  5186               	movf	_oldSpeed& (0+255),w,b
  4183  0013BE  5D88               	subwf	_currentSpeed& (0+255),w,b
  4184  0013C0  6FC6               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  4185  0013C2  5187               	movf	(_oldSpeed+1)& (0+255),w,b
  4186  0013C4  5989               	subwfb	(_currentSpeed+1)& (0+255),w,b
  4187  0013C6  6FC7               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  4188  0013C8                     
  4189                           ; BSR set to: 0
  4190                           ;main.c: 354:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
  4191  0013C8  0E0A               	movlw	10
  4192  0013CA  6E2E               	movwf	___flmul@a^0,c
  4193  0013CC  0ED7               	movlw	215
  4194  0013CE  6E2F               	movwf	(___flmul@a+1)^0,c
  4195  0013D0  0EA3               	movlw	163
  4196  0013D2  6E30               	movwf	(___flmul@a+2)^0,c
  4197  0013D4  0E3C               	movlw	60
  4198  0013D6  6E31               	movwf	(___flmul@a+3)^0,c
  4199  0013D8  0E00               	movlw	0
  4200  0013DA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4201  0013DC  0E02               	movlw	2
  4202  0013DE  6E16               	movwf	___awdiv@divisor^0,c
  4203  0013E0  C0C6  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  4204  0013E4  C0C7  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  4205  0013E8  EC4F  F00E         	call	___awdiv	;wreg free
  4206  0013EC  C0C4  F0C2         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  4207  0013F0  C0C5  F0C3         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  4208  0013F4  5014               	movf	?___awdiv^0,w,c
  4209  0013F6  0100               	movlb	0	; () banked
  4210  0013F8  5FC2               	subwf	??_calcMotorPow& (0+255),f,b
  4211  0013FA  5015               	movf	(?___awdiv+1)^0,w,c
  4212  0013FC  5BC3               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  4213  0013FE  C0C2  F01C         	movff	??_calcMotorPow,___xxtofl@val
  4214  001402  C0C3  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
  4215  001406  0E00               	movlw	0
  4216  001408  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  4217  00140A  0EFF               	movlw	-1
  4218  00140C  6E1E               	movwf	(___xxtofl@val+2)^0,c
  4219  00140E  6E1F               	movwf	(___xxtofl@val+3)^0,c
  4220  001410  0E01               	movlw	1
  4221  001412  EC25  F008         	call	___xxtofl
  4222  001416  C01C  F02A         	movff	?___xxtofl,___flmul@b
  4223  00141A  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  4224  00141E  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  4225  001422  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  4226  001426  ECBA  F002         	call	___flmul	;wreg free
  4227  00142A  C02A  F0B8         	movff	?___flmul,___fltol@f1
  4228  00142E  C02B  F0B9         	movff	?___flmul+1,___fltol@f1+1
  4229  001432  C02C  F0BA         	movff	?___flmul+2,___fltol@f1+2
  4230  001436  C02D  F0BB         	movff	?___flmul+3,___fltol@f1+3
  4231  00143A  EC92  F00B         	call	___fltol	;wreg free
  4232  00143E  0100               	movlb	0	; () banked
  4233  001440  51B8               	movf	?___fltol& (0+255),w,b
  4234  001442  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4235  001444                     
  4236                           ; BSR set to: 0
  4237                           ;main.c: 356:     if (addMPow > (5)) {
  4238  001444  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4239  001446  0A80               	xorlw	128
  4240  001448  0F7A               	addlw	-134
  4241  00144A  A0D8               	btfss	status,0,c
  4242  00144C  EF2A  F00A         	goto	u4571
  4243  001450  EF2C  F00A         	goto	u4570
  4244  001454                     u4571:
  4245  001454  EF30  F00A         	goto	l5775
  4246  001458                     u4570:
  4247  001458                     
  4248                           ; BSR set to: 0
  4249                           ;main.c: 357:         addMPow = (5);
  4250  001458  0E05               	movlw	5
  4251  00145A  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4252                           
  4253                           ;main.c: 358:     } else if (addMPow < -(5)) {
  4254  00145C  EF3C  F00A         	goto	l5779
  4255  001460                     l5775:
  4256                           
  4257                           ; BSR set to: 0
  4258  001460  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4259  001462  0A80               	xorlw	128
  4260  001464  0F85               	addlw	133
  4261  001466  B0D8               	btfsc	status,0,c
  4262  001468  EF38  F00A         	goto	u4581
  4263  00146C  EF3A  F00A         	goto	u4580
  4264  001470                     u4581:
  4265  001470  EF3C  F00A         	goto	l5779
  4266  001474                     u4580:
  4267  001474                     
  4268                           ; BSR set to: 0
  4269                           ;main.c: 359:         addMPow = -(5);
  4270  001474  0EFB               	movlw	251
  4271  001476  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4272  001478                     l5779:
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;main.c: 362:     actMotorPow += addMPow;
  4276  001478  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4277  00147A  2784               	addwf	_actMotorPow& (0+255),f,b
  4278  00147C  0E00               	movlw	0
  4279  00147E  BFC8               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  4280  001480  0EFF               	movlw	255
  4281  001482  2385               	addwfc	(_actMotorPow+1)& (0+255),f,b
  4282  001484                     
  4283                           ; BSR set to: 0
  4284                           ;main.c: 364:     if (actMotorPow > (800)) {
  4285  001484  BF85               	btfsc	(_actMotorPow+1)& (0+255),7,b
  4286  001486  EF4E  F00A         	goto	u4591
  4287  00148A  0E21               	movlw	33
  4288  00148C  5D84               	subwf	_actMotorPow& (0+255),w,b
  4289  00148E  0E03               	movlw	3
  4290  001490  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4291  001492  A0D8               	btfss	status,0,c
  4292  001494  EF4E  F00A         	goto	u4591
  4293  001498  EF50  F00A         	goto	u4590
  4294  00149C                     u4591:
  4295  00149C  EF56  F00A         	goto	l5785
  4296  0014A0                     u4590:
  4297  0014A0                     
  4298                           ; BSR set to: 0
  4299                           ;main.c: 365:         actMotorPow = (800);
  4300  0014A0  0E03               	movlw	3
  4301  0014A2  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4302  0014A4  0E20               	movlw	32
  4303  0014A6  6F84               	movwf	_actMotorPow& (0+255),b
  4304                           
  4305                           ;main.c: 366:     } else if (actMotorPow < (-400)) {
  4306  0014A8  EF68  F00A         	goto	l5789
  4307  0014AC                     l5785:
  4308                           
  4309                           ; BSR set to: 0
  4310  0014AC  AF85               	btfss	(_actMotorPow+1)& (0+255),7,b
  4311  0014AE  EF62  F00A         	goto	u4601
  4312  0014B2  0E70               	movlw	112
  4313  0014B4  5D84               	subwf	_actMotorPow& (0+255),w,b
  4314  0014B6  0EFE               	movlw	254
  4315  0014B8  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4316  0014BA  B0D8               	btfsc	status,0,c
  4317  0014BC  EF62  F00A         	goto	u4601
  4318  0014C0  EF64  F00A         	goto	u4600
  4319  0014C4                     u4601:
  4320  0014C4  EF68  F00A         	goto	l5789
  4321  0014C8                     u4600:
  4322  0014C8                     
  4323                           ; BSR set to: 0
  4324                           ;main.c: 367:         actMotorPow = (-400);
  4325  0014C8  0EFE               	movlw	254
  4326  0014CA  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4327  0014CC  0E70               	movlw	112
  4328  0014CE  6F84               	movwf	_actMotorPow& (0+255),b
  4329  0014D0                     l5789:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;main.c: 370:     setMotor(actMotorPow);
  4333  0014D0  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  4334  0014D4  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  4335  0014D8  EC16  F00D         	call	_setMotor	;wreg free
  4336  0014DC                     
  4337                           ;main.c: 372:     oldSpeed = currentSpeed;
  4338  0014DC  C088  F086         	movff	_currentSpeed,_oldSpeed
  4339  0014E0  C089  F087         	movff	_currentSpeed+1,_oldSpeed+1
  4340  0014E4  0012               	return		;funcret
  4341  0014E6                     __end_of_calcMotorPow:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _setMotor *****************
  4345 ;; Defined at:
  4346 ;;		line 375 in file "main.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  motorPower      2   23[COMRAM] short 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;Total ram usage:        4 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 9
  4367 ;; This function calls:
  4368 ;;		_PWM7_LoadDutyValue
  4369 ;;		_PWM8_LoadDutyValue
  4370 ;; This function is called by:
  4371 ;;		_loop
  4372 ;;		_startAccell
  4373 ;;		_calcMotorPow
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text13
  4378  001A2C                     __ptext13:
  4379                           	callstack 0
  4380  001A2C                     _setMotor:
  4381                           	callstack 19
  4382  001A2C                     
  4383                           ;main.c: 376:     if (motorPower >= (40)) {
  4384  001A2C  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4385  001A2E  EF22  F00D         	goto	u2491
  4386  001A32  5019               	movf	(setMotor@motorPower+1)^0,w,c
  4387  001A34  E109               	bnz	u2490
  4388  001A36  0E28               	movlw	40
  4389  001A38  5C18               	subwf	setMotor@motorPower^0,w,c
  4390  001A3A  A0D8               	btfss	status,0,c
  4391  001A3C  EF22  F00D         	goto	u2491
  4392  001A40  EF24  F00D         	goto	u2490
  4393  001A44                     u2491:
  4394  001A44  EF44  F00D         	goto	l4193
  4395  001A48                     u2490:
  4396  001A48                     
  4397                           ;main.c: 377:         if (motorPower > (800)) {
  4398  001A48  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4399  001A4A  EF30  F00D         	goto	u2501
  4400  001A4E  0E21               	movlw	33
  4401  001A50  5C18               	subwf	setMotor@motorPower^0,w,c
  4402  001A52  0E03               	movlw	3
  4403  001A54  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4404  001A56  A0D8               	btfss	status,0,c
  4405  001A58  EF30  F00D         	goto	u2501
  4406  001A5C  EF32  F00D         	goto	u2500
  4407  001A60                     u2501:
  4408  001A60  EF36  F00D         	goto	l4189
  4409  001A64                     u2500:
  4410  001A64                     
  4411                           ;main.c: 378:             motorPower = (800);
  4412  001A64  0E03               	movlw	3
  4413  001A66  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4414  001A68  0E20               	movlw	32
  4415  001A6A  6E18               	movwf	setMotor@motorPower^0,c
  4416  001A6C                     l4189:
  4417                           
  4418                           ;main.c: 380:         PWM7_LoadDutyValue((uint16_t) (motorPower));
  4419  001A6C  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  4420  001A70  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  4421  001A74  ECD1  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4422  001A78                     
  4423                           ;main.c: 381:         PWM8_LoadDutyValue(0);
  4424  001A78  0E00               	movlw	0
  4425  001A7A  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4426  001A7C  0E00               	movlw	0
  4427  001A7E  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4428  001A80  ECB7  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4429                           
  4430                           ;main.c: 382:     } else if (motorPower <= -(40)) {
  4431  001A84  EF86  F00D         	goto	l1366
  4432  001A88                     l4193:
  4433  001A88  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4434  001A8A  EF50  F00D         	goto	u2511
  4435  001A8E  0ED9               	movlw	217
  4436  001A90  5C18               	subwf	setMotor@motorPower^0,w,c
  4437  001A92  0EFF               	movlw	255
  4438  001A94  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4439  001A96  B0D8               	btfsc	status,0,c
  4440  001A98  EF50  F00D         	goto	u2511
  4441  001A9C  EF52  F00D         	goto	u2510
  4442  001AA0                     u2511:
  4443  001AA0  EF7A  F00D         	goto	l4203
  4444  001AA4                     u2510:
  4445  001AA4                     
  4446                           ;main.c: 383:         if (motorPower < (-400)) {
  4447  001AA4  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4448  001AA6  EF5E  F00D         	goto	u2521
  4449  001AAA  0E70               	movlw	112
  4450  001AAC  5C18               	subwf	setMotor@motorPower^0,w,c
  4451  001AAE  0EFE               	movlw	254
  4452  001AB0  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4453  001AB2  B0D8               	btfsc	status,0,c
  4454  001AB4  EF5E  F00D         	goto	u2521
  4455  001AB8  EF60  F00D         	goto	u2520
  4456  001ABC                     u2521:
  4457  001ABC  EF64  F00D         	goto	l4199
  4458  001AC0                     u2520:
  4459  001AC0                     
  4460                           ;main.c: 384:             motorPower = (-400);
  4461  001AC0  0EFE               	movlw	254
  4462  001AC2  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4463  001AC4  0E70               	movlw	112
  4464  001AC6  6E18               	movwf	setMotor@motorPower^0,c
  4465  001AC8                     l4199:
  4466                           
  4467                           ;main.c: 386:         PWM7_LoadDutyValue(0);
  4468  001AC8  0E00               	movlw	0
  4469  001ACA  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4470  001ACC  0E00               	movlw	0
  4471  001ACE  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4472  001AD0  ECD1  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4473  001AD4                     
  4474                           ;main.c: 387:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
  4475  001AD4  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  4476  001AD8  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  4477  001ADC  1E1A               	comf	??_setMotor^0,f,c
  4478  001ADE  1E1B               	comf	(??_setMotor+1)^0,f,c
  4479  001AE0  4A1A               	infsnz	??_setMotor^0,f,c
  4480  001AE2  2A1B               	incf	(??_setMotor+1)^0,f,c
  4481  001AE4  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  4482  001AE8  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  4483  001AEC  ECB7  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4484                           
  4485                           ;main.c: 388:     } else {
  4486  001AF0  EF86  F00D         	goto	l1366
  4487  001AF4                     l4203:
  4488                           
  4489                           ;main.c: 390:         PWM7_LoadDutyValue(0);
  4490  001AF4  0E00               	movlw	0
  4491  001AF6  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4492  001AF8  0E00               	movlw	0
  4493  001AFA  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4494  001AFC  ECD1  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4495                           
  4496                           ;main.c: 391:         PWM8_LoadDutyValue(0);
  4497  001B00  0E00               	movlw	0
  4498  001B02  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4499  001B04  0E00               	movlw	0
  4500  001B06  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4501  001B08  ECB7  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4502  001B0C                     l1366:
  4503  001B0C  0012               	return		;funcret
  4504  001B0E                     __end_of_setMotor:
  4505                           	callstack 0
  4506                           
  4507 ;; *************** function _PWM8_LoadDutyValue *****************
  4508 ;; Defined at:
  4509 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;Total ram usage:        4 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; Hardware stack levels required when called: 8
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_setMotor
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text14
  4538  00236E                     __ptext14:
  4539                           	callstack 0
  4540  00236E                     _PWM8_LoadDutyValue:
  4541                           	callstack 19
  4542  00236E                     
  4543                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4544  00236E  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4545  002372  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  4546  002376  90D8               	bcf	status,0,c
  4547  002378  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4548  00237A  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4549  00237C  90D8               	bcf	status,0,c
  4550  00237E  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4551  002380  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4552  002382  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4553  002384  6E61               	movwf	97,c	;volatile
  4554                           
  4555                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  4556  002386  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4557  00238A  0E03               	movlw	3
  4558  00238C  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  4559  00238E  0E06               	movlw	6
  4560  002390  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  4561  002392                     u2005:
  4562  002392  90D8               	bcf	status,0,c
  4563  002394  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  4564  002396  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  4565  002398  EFC9  F011         	goto	u2005
  4566  00239C  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4567  00239E  6E60               	movwf	96,c	;volatile
  4568  0023A0  0012               	return		;funcret
  4569  0023A2                     __end_of_PWM8_LoadDutyValue:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _PWM7_LoadDutyValue *****************
  4573 ;; Defined at:
  4574 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;Total ram usage:        4 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; Hardware stack levels required when called: 8
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_setMotor
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text15
  4603  0023A2                     __ptext15:
  4604                           	callstack 0
  4605  0023A2                     _PWM7_LoadDutyValue:
  4606                           	callstack 19
  4607  0023A2                     
  4608                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4609  0023A2  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4610  0023A6  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  4611  0023AA  90D8               	bcf	status,0,c
  4612  0023AC  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4613  0023AE  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4614  0023B0  90D8               	bcf	status,0,c
  4615  0023B2  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4616  0023B4  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4617  0023B6  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4618  0023B8  6E65               	movwf	101,c	;volatile
  4619                           
  4620                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  4621  0023BA  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4622  0023BE  0E03               	movlw	3
  4623  0023C0  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  4624  0023C2  0E06               	movlw	6
  4625  0023C4  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  4626  0023C6                     u1995:
  4627  0023C6  90D8               	bcf	status,0,c
  4628  0023C8  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  4629  0023CA  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  4630  0023CC  EFE3  F011         	goto	u1995
  4631  0023D0  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4632  0023D2  6E64               	movwf	100,c	;volatile
  4633  0023D4  0012               	return		;funcret
  4634  0023D6                     __end_of_PWM7_LoadDutyValue:
  4635                           	callstack 0
  4636                           
  4637 ;; *************** function _actSpeed *****************
  4638 ;; Defined at:
  4639 ;;		line 68 in file "main.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;  speed           2   35[COMRAM] short 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  2   33[COMRAM] short 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0, cstack
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;Total ram usage:        4 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; Hardware stack levels required when called: 9
  4660 ;; This function calls:
  4661 ;;		___aldiv
  4662 ;; This function is called by:
  4663 ;;		_calcMotorPow
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text16
  4668  001EB6                     __ptext16:
  4669                           	callstack 0
  4670  001EB6                     _actSpeed:
  4671                           	callstack 19
  4672  001EB6                     
  4673                           ;main.c: 69:     int16_t speed = 0;
  4674  001EB6  0E00               	movlw	0
  4675  001EB8  6E25               	movwf	(actSpeed@speed+1)^0,c
  4676  001EBA  0E00               	movlw	0
  4677  001EBC  6E24               	movwf	actSpeed@speed^0,c
  4678  001EBE                     
  4679                           ;main.c: 70:     if (smtPeriod) {
  4680  001EBE  5046               	movf	_smtPeriod^0,w,c	;volatile
  4681  001EC0  1047               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  4682  001EC2  1048               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  4683  001EC4  1049               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  4684  001EC6  B4D8               	btfsc	status,2,c
  4685  001EC8  EF68  F00F         	goto	u2571
  4686  001ECC  EF6A  F00F         	goto	u2570
  4687  001ED0                     u2571:
  4688  001ED0  EFA0  F00F         	goto	l4267
  4689  001ED4                     u2570:
  4690  001ED4                     
  4691                           ;main.c: 71:         if (CLC3CONbits.LC3OUT) {
  4692  001ED4  013C               	movlb	60	; () banked
  4693  001ED6  AB60               	btfss	96,5,b	;volatile
  4694  001ED8  EF70  F00F         	goto	u2581
  4695  001EDC  EF72  F00F         	goto	u2580
  4696  001EE0                     u2581:
  4697  001EE0  EF8A  F00F         	goto	l4265
  4698  001EE4                     u2580:
  4699  001EE4                     
  4700                           ; BSR set to: 60
  4701                           ;main.c: 72:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
  4702  001EE4  0E20               	movlw	32
  4703  001EE6  6E14               	movwf	___aldiv@dividend^0,c
  4704  001EE8  0EA1               	movlw	161
  4705  001EEA  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4706  001EEC  0E07               	movlw	7
  4707  001EEE  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4708  001EF0  0E00               	movlw	0
  4709  001EF2  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4710  001EF4  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4711  001EF8  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4712  001EFC  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4713  001F00  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4714  001F04  EC0C  F00B         	call	___aldiv	;wreg free
  4715  001F08  C014  F024         	movff	?___aldiv,actSpeed@speed
  4716  001F0C  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4717                           
  4718                           ;main.c: 73:         } else {
  4719  001F10  EFA0  F00F         	goto	l4267
  4720  001F14                     l4265:
  4721                           
  4722                           ; BSR set to: 60
  4723                           ;main.c: 74:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
  4724  001F14  0EE0               	movlw	224
  4725  001F16  6E14               	movwf	___aldiv@dividend^0,c
  4726  001F18  0E5E               	movlw	94
  4727  001F1A  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4728  001F1C  0EF8               	movlw	248
  4729  001F1E  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4730  001F20  0EFF               	movlw	255
  4731  001F22  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4732  001F24  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4733  001F28  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4734  001F2C  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4735  001F30  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4736  001F34  EC0C  F00B         	call	___aldiv	;wreg free
  4737  001F38  C014  F024         	movff	?___aldiv,actSpeed@speed
  4738  001F3C  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4739  001F40                     l4267:
  4740                           
  4741                           ;main.c: 77:     return speed;
  4742  001F40  C024  F022         	movff	actSpeed@speed,?_actSpeed
  4743  001F44  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  4744  001F48  0012               	return		;funcret
  4745  001F4A                     __end_of_actSpeed:
  4746                           	callstack 0
  4747                           
  4748 ;; *************** function ___aldiv *****************
  4749 ;; Defined at:
  4750 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  dividend        4   19[COMRAM] long 
  4753 ;;  divisor         4   23[COMRAM] long 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  quotient        4   29[COMRAM] long 
  4756 ;;  sign            1   28[COMRAM] unsigned char 
  4757 ;;  counter         1   27[COMRAM] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  4   19[COMRAM] long 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4767 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;Total ram usage:       14 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 8
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_actSpeed
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text17
  4782  001618                     __ptext17:
  4783                           	callstack 0
  4784  001618                     ___aldiv:
  4785                           	callstack 19
  4786  001618  0E00               	movlw	0
  4787  00161A  6E1D               	movwf	___aldiv@sign^0,c
  4788  00161C  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  4789  00161E  EF15  F00B         	goto	u2050
  4790  001622  EF13  F00B         	goto	u2051
  4791  001626                     u2051:
  4792  001626  EF1F  F00B         	goto	l3885
  4793  00162A                     u2050:
  4794  00162A  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  4795  00162C  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  4796  00162E  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  4797  001630  6C18               	negf	___aldiv@divisor^0,c
  4798  001632  0E00               	movlw	0
  4799  001634  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  4800  001636  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  4801  001638  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  4802  00163A  0E01               	movlw	1
  4803  00163C  6E1D               	movwf	___aldiv@sign^0,c
  4804  00163E                     l3885:
  4805  00163E  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  4806  001640  EF26  F00B         	goto	u2060
  4807  001644  EF24  F00B         	goto	u2061
  4808  001648                     u2061:
  4809  001648  EF30  F00B         	goto	l3891
  4810  00164C                     u2060:
  4811  00164C  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  4812  00164E  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  4813  001650  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  4814  001652  6C14               	negf	___aldiv@dividend^0,c
  4815  001654  0E00               	movlw	0
  4816  001656  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  4817  001658  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  4818  00165A  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  4819  00165C  0E01               	movlw	1
  4820  00165E  1A1D               	xorwf	___aldiv@sign^0,f,c
  4821  001660                     l3891:
  4822  001660  0E00               	movlw	0
  4823  001662  6E1E               	movwf	___aldiv@quotient^0,c
  4824  001664  0E00               	movlw	0
  4825  001666  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  4826  001668  0E00               	movlw	0
  4827  00166A  6E20               	movwf	(___aldiv@quotient+2)^0,c
  4828  00166C  0E00               	movlw	0
  4829  00166E  6E21               	movwf	(___aldiv@quotient+3)^0,c
  4830  001670  5018               	movf	___aldiv@divisor^0,w,c
  4831  001672  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  4832  001674  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  4833  001676  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  4834  001678  B4D8               	btfsc	status,2,c
  4835  00167A  EF41  F00B         	goto	u2071
  4836  00167E  EF43  F00B         	goto	u2070
  4837  001682                     u2071:
  4838  001682  EF79  F00B         	goto	l3913
  4839  001686                     u2070:
  4840  001686  0E01               	movlw	1
  4841  001688  6E1C               	movwf	___aldiv@counter^0,c
  4842  00168A  EF4D  F00B         	goto	l3899
  4843  00168E                     l3897:
  4844  00168E  90D8               	bcf	status,0,c
  4845  001690  3618               	rlcf	___aldiv@divisor^0,f,c
  4846  001692  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  4847  001694  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  4848  001696  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  4849  001698  2A1C               	incf	___aldiv@counter^0,f,c
  4850  00169A                     l3899:
  4851  00169A  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  4852  00169C  EF52  F00B         	goto	u2081
  4853  0016A0  EF54  F00B         	goto	u2080
  4854  0016A4                     u2081:
  4855  0016A4  EF47  F00B         	goto	l3897
  4856  0016A8                     u2080:
  4857  0016A8                     l3901:
  4858  0016A8  90D8               	bcf	status,0,c
  4859  0016AA  361E               	rlcf	___aldiv@quotient^0,f,c
  4860  0016AC  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  4861  0016AE  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  4862  0016B0  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  4863  0016B2  5018               	movf	___aldiv@divisor^0,w,c
  4864  0016B4  5C14               	subwf	___aldiv@dividend^0,w,c
  4865  0016B6  5019               	movf	(___aldiv@divisor+1)^0,w,c
  4866  0016B8  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  4867  0016BA  501A               	movf	(___aldiv@divisor+2)^0,w,c
  4868  0016BC  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  4869  0016BE  501B               	movf	(___aldiv@divisor+3)^0,w,c
  4870  0016C0  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  4871  0016C2  A0D8               	btfss	status,0,c
  4872  0016C4  EF66  F00B         	goto	u2091
  4873  0016C8  EF68  F00B         	goto	u2090
  4874  0016CC                     u2091:
  4875  0016CC  EF71  F00B         	goto	l3909
  4876  0016D0                     u2090:
  4877  0016D0  5018               	movf	___aldiv@divisor^0,w,c
  4878  0016D2  5E14               	subwf	___aldiv@dividend^0,f,c
  4879  0016D4  5019               	movf	(___aldiv@divisor+1)^0,w,c
  4880  0016D6  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  4881  0016D8  501A               	movf	(___aldiv@divisor+2)^0,w,c
  4882  0016DA  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  4883  0016DC  501B               	movf	(___aldiv@divisor+3)^0,w,c
  4884  0016DE  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  4885  0016E0  801E               	bsf	___aldiv@quotient^0,0,c
  4886  0016E2                     l3909:
  4887  0016E2  90D8               	bcf	status,0,c
  4888  0016E4  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  4889  0016E6  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  4890  0016E8  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  4891  0016EA  3218               	rrcf	___aldiv@divisor^0,f,c
  4892  0016EC  2E1C               	decfsz	___aldiv@counter^0,f,c
  4893  0016EE  EF54  F00B         	goto	l3901
  4894  0016F2                     l3913:
  4895  0016F2  501D               	movf	___aldiv@sign^0,w,c
  4896  0016F4  B4D8               	btfsc	status,2,c
  4897  0016F6  EF7F  F00B         	goto	u2101
  4898  0016FA  EF81  F00B         	goto	u2100
  4899  0016FE                     u2101:
  4900  0016FE  EF89  F00B         	goto	l3917
  4901  001702                     u2100:
  4902  001702  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  4903  001704  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  4904  001706  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  4905  001708  6C1E               	negf	___aldiv@quotient^0,c
  4906  00170A  0E00               	movlw	0
  4907  00170C  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  4908  00170E  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  4909  001710  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  4910  001712                     l3917:
  4911  001712  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  4912  001716  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  4913  00171A  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  4914  00171E  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  4915  001722  0012               	return		;funcret
  4916  001724                     __end_of___aldiv:
  4917                           	callstack 0
  4918                           
  4919 ;; *************** function ___xxtofl *****************
  4920 ;; Defined at:
  4921 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  sign            1    wreg     unsigned char 
  4924 ;;  val             4   27[COMRAM] long 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  sign            1   35[COMRAM] unsigned char 
  4927 ;;  arg             4   37[COMRAM] unsigned long 
  4928 ;;  exp             1   36[COMRAM] unsigned char 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  4   27[COMRAM] unsigned char 
  4931 ;; Registers used:
  4932 ;;		wreg, status,2, status,0
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;Total ram usage:       14 bytes
  4943 ;; Hardware stack levels used: 1
  4944 ;; Hardware stack levels required when called: 8
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_startAccell
  4949 ;;		_calcSteering
  4950 ;;		_calcSpeed
  4951 ;;		_calcMotorPow
  4952 ;;		_checkBatt
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text18
  4957  00104A                     __ptext18:
  4958                           	callstack 0
  4959  00104A                     ___xxtofl:
  4960                           	callstack 19
  4961                           
  4962                           ;incstack = 0
  4963                           ;___xxtofl@sign stored from wreg
  4964  00104A  6E24               	movwf	___xxtofl@sign^0,c
  4965  00104C  5024               	movf	___xxtofl@sign^0,w,c
  4966  00104E  B4D8               	btfsc	status,2,c
  4967  001050  EF2C  F008         	goto	u2371
  4968  001054  EF2E  F008         	goto	u2370
  4969  001058                     u2371:
  4970  001058  EF50  F008         	goto	l2041
  4971  00105C                     u2370:
  4972  00105C  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  4973  00105E  EF35  F008         	goto	u2380
  4974  001062  EF33  F008         	goto	u2381
  4975  001066                     u2381:
  4976  001066  EF50  F008         	goto	l2041
  4977  00106A                     u2380:
  4978  00106A  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  4979  00106E  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  4980  001072  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  4981  001076  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  4982  00107A  1E20               	comf	??___xxtofl^0,f,c
  4983  00107C  1E21               	comf	(??___xxtofl+1)^0,f,c
  4984  00107E  1E22               	comf	(??___xxtofl+2)^0,f,c
  4985  001080  1E23               	comf	(??___xxtofl+3)^0,f,c
  4986  001082  2A20               	incf	??___xxtofl^0,f,c
  4987  001084  0E00               	movlw	0
  4988  001086  2221               	addwfc	(??___xxtofl+1)^0,f,c
  4989  001088  2222               	addwfc	(??___xxtofl+2)^0,f,c
  4990  00108A  2223               	addwfc	(??___xxtofl+3)^0,f,c
  4991  00108C  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  4992  001090  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  4993  001094  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  4994  001098  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  4995  00109C  EF58  F008         	goto	l4101
  4996  0010A0                     l2041:
  4997  0010A0  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  4998  0010A4  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4999  0010A8  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5000  0010AC  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5001  0010B0                     l4101:
  5002  0010B0  501C               	movf	___xxtofl@val^0,w,c
  5003  0010B2  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  5004  0010B4  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  5005  0010B6  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  5006  0010B8  A4D8               	btfss	status,2,c
  5007  0010BA  EF61  F008         	goto	u2391
  5008  0010BE  EF63  F008         	goto	u2390
  5009  0010C2                     u2391:
  5010  0010C2  EF6D  F008         	goto	l4107
  5011  0010C6                     u2390:
  5012  0010C6  0E00               	movlw	0
  5013  0010C8  6E1C               	movwf	?___xxtofl^0,c
  5014  0010CA  0E00               	movlw	0
  5015  0010CC  6E1D               	movwf	(?___xxtofl+1)^0,c
  5016  0010CE  0E00               	movlw	0
  5017  0010D0  6E1E               	movwf	(?___xxtofl+2)^0,c
  5018  0010D2  0E00               	movlw	0
  5019  0010D4  6E1F               	movwf	(?___xxtofl+3)^0,c
  5020  0010D6  EFFE  F008         	goto	l2044
  5021  0010DA                     l4107:
  5022  0010DA  0E96               	movlw	150
  5023  0010DC  6E25               	movwf	___xxtofl@exp^0,c
  5024  0010DE  EF77  F008         	goto	l4111
  5025  0010E2                     l4109:
  5026  0010E2  2A25               	incf	___xxtofl@exp^0,f,c
  5027  0010E4  90D8               	bcf	status,0,c
  5028  0010E6  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5029  0010E8  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5030  0010EA  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5031  0010EC  3226               	rrcf	___xxtofl@arg^0,f,c
  5032  0010EE                     l4111:
  5033  0010EE  0E00               	movlw	0
  5034  0010F0  1426               	andwf	___xxtofl@arg^0,w,c
  5035  0010F2  6E20               	movwf	??___xxtofl^0,c
  5036  0010F4  0E00               	movlw	0
  5037  0010F6  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5038  0010F8  6E21               	movwf	(??___xxtofl+1)^0,c
  5039  0010FA  0E00               	movlw	0
  5040  0010FC  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5041  0010FE  6E22               	movwf	(??___xxtofl+2)^0,c
  5042  001100  0EFE               	movlw	254
  5043  001102  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5044  001104  6E23               	movwf	(??___xxtofl+3)^0,c
  5045  001106  5020               	movf	??___xxtofl^0,w,c
  5046  001108  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5047  00110A  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5048  00110C  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5049  00110E  A4D8               	btfss	status,2,c
  5050  001110  EF8C  F008         	goto	u2401
  5051  001114  EF8E  F008         	goto	u2400
  5052  001118                     u2401:
  5053  001118  EF71  F008         	goto	l4109
  5054  00111C                     u2400:
  5055  00111C  EF9C  F008         	goto	l2048
  5056  001120                     l4113:
  5057  001120  2A25               	incf	___xxtofl@exp^0,f,c
  5058  001122  0E01               	movlw	1
  5059  001124  2626               	addwf	___xxtofl@arg^0,f,c
  5060  001126  0E00               	movlw	0
  5061  001128  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  5062  00112A  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  5063  00112C  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  5064  00112E  90D8               	bcf	status,0,c
  5065  001130  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5066  001132  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5067  001134  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5068  001136  3226               	rrcf	___xxtofl@arg^0,f,c
  5069  001138                     l2048:
  5070  001138  0E00               	movlw	0
  5071  00113A  1426               	andwf	___xxtofl@arg^0,w,c
  5072  00113C  6E20               	movwf	??___xxtofl^0,c
  5073  00113E  0E00               	movlw	0
  5074  001140  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5075  001142  6E21               	movwf	(??___xxtofl+1)^0,c
  5076  001144  0E00               	movlw	0
  5077  001146  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5078  001148  6E22               	movwf	(??___xxtofl+2)^0,c
  5079  00114A  0EFF               	movlw	255
  5080  00114C  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5081  00114E  6E23               	movwf	(??___xxtofl+3)^0,c
  5082  001150  5020               	movf	??___xxtofl^0,w,c
  5083  001152  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5084  001154  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5085  001156  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5086  001158  A4D8               	btfss	status,2,c
  5087  00115A  EFB1  F008         	goto	u2411
  5088  00115E  EFB3  F008         	goto	u2410
  5089  001162                     u2411:
  5090  001162  EF90  F008         	goto	l4113
  5091  001166                     u2410:
  5092  001166  EFBB  F008         	goto	l4121
  5093  00116A                     l4119:
  5094  00116A  0625               	decf	___xxtofl@exp^0,f,c
  5095  00116C  90D8               	bcf	status,0,c
  5096  00116E  3626               	rlcf	___xxtofl@arg^0,f,c
  5097  001170  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  5098  001172  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  5099  001174  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  5100  001176                     l4121:
  5101  001176  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  5102  001178  EFC0  F008         	goto	u2421
  5103  00117C  EFC2  F008         	goto	u2420
  5104  001180                     u2421:
  5105  001180  EFCA  F008         	goto	l2055
  5106  001184                     u2420:
  5107  001184  0E02               	movlw	2
  5108  001186  6025               	cpfslt	___xxtofl@exp^0,c
  5109  001188  EFC8  F008         	goto	u2431
  5110  00118C  EFCA  F008         	goto	u2430
  5111  001190                     u2431:
  5112  001190  EFB5  F008         	goto	l4119
  5113  001194                     u2430:
  5114  001194                     l2055:
  5115  001194  B025               	btfsc	___xxtofl@exp^0,0,c
  5116  001196  EFCF  F008         	goto	u2441
  5117  00119A  EFD1  F008         	goto	u2440
  5118  00119E                     u2441:
  5119  00119E  EFD2  F008         	goto	l4127
  5120  0011A2                     u2440:
  5121  0011A2  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  5122  0011A4                     l4127:
  5123  0011A4  90D8               	bcf	status,0,c
  5124  0011A6  3225               	rrcf	___xxtofl@exp^0,f,c
  5125  0011A8  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  5126  0011AC  6A21               	clrf	(??___xxtofl+1)^0,c
  5127  0011AE  6A22               	clrf	(??___xxtofl+2)^0,c
  5128  0011B0  6A23               	clrf	(??___xxtofl+3)^0,c
  5129  0011B2  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  5130  0011B6  6A22               	clrf	(??___xxtofl+2)^0,c
  5131  0011B8  6A21               	clrf	(??___xxtofl+1)^0,c
  5132  0011BA  6A20               	clrf	??___xxtofl^0,c
  5133  0011BC  5020               	movf	??___xxtofl^0,w,c
  5134  0011BE  1226               	iorwf	___xxtofl@arg^0,f,c
  5135  0011C0  5021               	movf	(??___xxtofl+1)^0,w,c
  5136  0011C2  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  5137  0011C4  5022               	movf	(??___xxtofl+2)^0,w,c
  5138  0011C6  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  5139  0011C8  5023               	movf	(??___xxtofl+3)^0,w,c
  5140  0011CA  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  5141  0011CC  5024               	movf	___xxtofl@sign^0,w,c
  5142  0011CE  B4D8               	btfsc	status,2,c
  5143  0011D0  EFEC  F008         	goto	u2451
  5144  0011D4  EFEE  F008         	goto	u2450
  5145  0011D8                     u2451:
  5146  0011D8  EFF6  F008         	goto	l4137
  5147  0011DC                     u2450:
  5148  0011DC  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  5149  0011DE  EFF5  F008         	goto	u2460
  5150  0011E2  EFF3  F008         	goto	u2461
  5151  0011E6                     u2461:
  5152  0011E6  EFF6  F008         	goto	l4137
  5153  0011EA                     u2460:
  5154  0011EA  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  5155  0011EC                     l4137:
  5156  0011EC  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  5157  0011F0  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5158  0011F4  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5159  0011F8  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5160  0011FC                     l2044:
  5161  0011FC  0012               	return		;funcret
  5162  0011FE                     __end_of___xxtofl:
  5163                           	callstack 0
  5164                           
  5165 ;; *************** function ___fltol *****************
  5166 ;; Defined at:
  5167 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  f1              4   25[BANK0 ] unsigned char 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  exp1            1   34[BANK0 ] unsigned char 
  5172 ;;  sign1           1   33[BANK0 ] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  4   25[BANK0 ] long 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;Total ram usage:       10 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; Hardware stack levels required when called: 8
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_startAccell
  5193 ;;		_calcSteering
  5194 ;;		_calcSpeed
  5195 ;;		_calcMotorPow
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text19
  5200  001724                     __ptext19:
  5201                           	callstack 0
  5202  001724                     ___fltol:
  5203                           	callstack 19
  5204  001724  0100               	movlb	0	; () banked
  5205  001726  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5206  001728  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5207  00172A  6FC1               	movwf	___fltol@exp1& (0+255),b
  5208  00172C  51C1               	movf	___fltol@exp1& (0+255),w,b
  5209  00172E  A4D8               	btfss	status,2,c
  5210  001730  EF9C  F00B         	goto	u3971
  5211  001734  EF9E  F00B         	goto	u3970
  5212  001738                     u3971:
  5213  001738  EFA8  F00B         	goto	l5381
  5214  00173C                     u3970:
  5215  00173C                     l5377:
  5216                           
  5217                           ; BSR set to: 0
  5218  00173C  0E00               	movlw	0
  5219  00173E  6FB8               	movwf	?___fltol& (0+255),b
  5220  001740  0E00               	movlw	0
  5221  001742  6FB9               	movwf	(?___fltol+1)& (0+255),b
  5222  001744  0E00               	movlw	0
  5223  001746  6FBA               	movwf	(?___fltol+2)& (0+255),b
  5224  001748  0E00               	movlw	0
  5225  00174A  6FBB               	movwf	(?___fltol+3)& (0+255),b
  5226  00174C  EF15  F00C         	goto	l1683
  5227  001750                     l5381:
  5228                           
  5229                           ; BSR set to: 0
  5230  001750  C0B8  F0BC         	movff	___fltol@f1,??___fltol
  5231  001754  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
  5232  001758  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
  5233  00175C  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
  5234  001760  0E20               	movlw	32
  5235  001762  EFB8  F00B         	goto	u3980
  5236  001766                     u3985:
  5237  001766  90D8               	bcf	status,0,c
  5238  001768  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
  5239  00176A  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
  5240  00176C  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
  5241  00176E  33BC               	rrcf	??___fltol& (0+255),f,b
  5242  001770                     u3980:
  5243  001770  2EE8               	decfsz	wreg,f,c
  5244  001772  EFB3  F00B         	goto	u3985
  5245  001776  51BC               	movf	??___fltol& (0+255),w,b
  5246  001778  6FC0               	movwf	___fltol@sign1& (0+255),b
  5247  00177A                     
  5248                           ; BSR set to: 0
  5249  00177A  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
  5250  00177C                     
  5251                           ; BSR set to: 0
  5252  00177C  0EFF               	movlw	255
  5253  00177E  17B8               	andwf	___fltol@f1& (0+255),f,b
  5254  001780  0EFF               	movlw	255
  5255  001782  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
  5256  001784  0EFF               	movlw	255
  5257  001786  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
  5258  001788  0E00               	movlw	0
  5259  00178A  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
  5260  00178C                     
  5261                           ; BSR set to: 0
  5262  00178C  0E96               	movlw	150
  5263  00178E  5FC1               	subwf	___fltol@exp1& (0+255),f,b
  5264  001790                     
  5265                           ; BSR set to: 0
  5266  001790  BFC1               	btfsc	___fltol@exp1& (0+255),7,b
  5267  001792  EFCF  F00B         	goto	u3990
  5268  001796  EFCD  F00B         	goto	u3991
  5269  00179A                     u3991:
  5270  00179A  EFE5  F00B         	goto	l5401
  5271  00179E                     u3990:
  5272  00179E                     
  5273                           ; BSR set to: 0
  5274  00179E  51C1               	movf	___fltol@exp1& (0+255),w,b
  5275  0017A0  0A80               	xorlw	128
  5276  0017A2  0F97               	addlw	151
  5277  0017A4  B0D8               	btfsc	status,0,c
  5278  0017A6  EFD7  F00B         	goto	u4001
  5279  0017AA  EFD9  F00B         	goto	u4000
  5280  0017AE                     u4001:
  5281  0017AE  EFDB  F00B         	goto	l5397
  5282  0017B2                     u4000:
  5283  0017B2  EF9E  F00B         	goto	l5377
  5284  0017B6                     l5397:
  5285                           
  5286                           ; BSR set to: 0
  5287  0017B6  90D8               	bcf	status,0,c
  5288  0017B8  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5289  0017BA  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5290  0017BC  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5291  0017BE  33B8               	rrcf	___fltol@f1& (0+255),f,b
  5292  0017C0                     
  5293                           ; BSR set to: 0
  5294  0017C0  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
  5295  0017C2  EFDB  F00B         	goto	l5397
  5296  0017C6  EFFD  F00B         	goto	l5411
  5297  0017CA                     l5401:
  5298                           
  5299                           ; BSR set to: 0
  5300  0017CA  0E1F               	movlw	31
  5301  0017CC  65C1               	cpfsgt	___fltol@exp1& (0+255),b
  5302  0017CE  EFEB  F00B         	goto	u4011
  5303  0017D2  EFED  F00B         	goto	u4010
  5304  0017D6                     u4011:
  5305  0017D6  EFF5  F00B         	goto	l5409
  5306  0017DA                     u4010:
  5307  0017DA  EF9E  F00B         	goto	l5377
  5308  0017DE                     l5407:
  5309                           
  5310                           ; BSR set to: 0
  5311  0017DE  90D8               	bcf	status,0,c
  5312  0017E0  37B8               	rlcf	___fltol@f1& (0+255),f,b
  5313  0017E2  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5314  0017E4  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5315  0017E6  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5316  0017E8  07C1               	decf	___fltol@exp1& (0+255),f,b
  5317  0017EA                     l5409:
  5318                           
  5319                           ; BSR set to: 0
  5320  0017EA  51C1               	movf	___fltol@exp1& (0+255),w,b
  5321  0017EC  A4D8               	btfss	status,2,c
  5322  0017EE  EFFB  F00B         	goto	u4021
  5323  0017F2  EFFD  F00B         	goto	u4020
  5324  0017F6                     u4021:
  5325  0017F6  EFEF  F00B         	goto	l5407
  5326  0017FA                     u4020:
  5327  0017FA                     l5411:
  5328                           
  5329                           ; BSR set to: 0
  5330  0017FA  51C0               	movf	___fltol@sign1& (0+255),w,b
  5331  0017FC  B4D8               	btfsc	status,2,c
  5332  0017FE  EF03  F00C         	goto	u4031
  5333  001802  EF05  F00C         	goto	u4030
  5334  001806                     u4031:
  5335  001806  EF0D  F00C         	goto	l5415
  5336  00180A                     u4030:
  5337  00180A                     
  5338                           ; BSR set to: 0
  5339  00180A  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
  5340  00180C  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
  5341  00180E  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
  5342  001810  6DB8               	negf	___fltol@f1& (0+255),b
  5343  001812  0E00               	movlw	0
  5344  001814  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5345  001816  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5346  001818  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5347  00181A                     l5415:
  5348                           
  5349                           ; BSR set to: 0
  5350  00181A  C0B8  F0B8         	movff	___fltol@f1,?___fltol
  5351  00181E  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
  5352  001822  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
  5353  001826  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
  5354  00182A                     l1683:
  5355                           
  5356                           ; BSR set to: 0
  5357  00182A  0012               	return		;funcret
  5358  00182C                     __end_of___fltol:
  5359                           	callstack 0
  5360                           
  5361 ;; *************** function ___flmul *****************
  5362 ;; Defined at:
  5363 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  b               4   41[COMRAM] long 
  5366 ;;  a               4   45[COMRAM] long 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  prod            4    7[BANK0 ] struct .
  5369 ;;  grs             4    2[BANK0 ] unsigned long 
  5370 ;;  temp            2   11[BANK0 ] struct .
  5371 ;;  bexp            1    6[BANK0 ] unsigned char 
  5372 ;;  aexp            1    1[BANK0 ] unsigned char 
  5373 ;;  sign            1    0[BANK0 ] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  4   41[COMRAM] unsigned char 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0, prodl, prodh
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5383 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;Total ram usage:       25 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; Hardware stack levels required when called: 8
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_startAccell
  5394 ;;		_calcSteering
  5395 ;;		_calcSpeed
  5396 ;;		_calcMotorPow
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text20
  5401  000574                     __ptext20:
  5402                           	callstack 0
  5403  000574                     ___flmul:
  5404                           	callstack 19
  5405  000574  502D               	movf	(___flmul@b+3)^0,w,c
  5406  000576  0B80               	andlw	128
  5407  000578  0100               	movlb	0	; () banked
  5408  00057A  6F9F               	movwf	___flmul@sign& (0+255),b
  5409  00057C  502D               	movf	(___flmul@b+3)^0,w,c
  5410  00057E  242D               	addwf	(___flmul@b+3)^0,w,c
  5411  000580  6FA5               	movwf	___flmul@bexp& (0+255),b
  5412  000582                     
  5413                           ; BSR set to: 0
  5414  000582  AE2C               	btfss	(___flmul@b+2)^0,7,c
  5415  000584  EFC6  F002         	goto	u3781
  5416  000588  EFC8  F002         	goto	u3780
  5417  00058C                     u3781:
  5418  00058C  EFC9  F002         	goto	l5251
  5419  000590                     u3780:
  5420  000590                     
  5421                           ; BSR set to: 0
  5422  000590  81A5               	bsf	___flmul@bexp& (0+255),0,b
  5423  000592                     l5251:
  5424                           
  5425                           ; BSR set to: 0
  5426  000592  51A5               	movf	___flmul@bexp& (0+255),w,b
  5427  000594  B4D8               	btfsc	status,2,c
  5428  000596  EFCF  F002         	goto	u3791
  5429  00059A  EFD1  F002         	goto	u3790
  5430  00059E                     u3791:
  5431  00059E  EFE4  F002         	goto	l5259
  5432  0005A2                     u3790:
  5433  0005A2                     
  5434                           ; BSR set to: 0
  5435  0005A2  29A5               	incf	___flmul@bexp& (0+255),w,b
  5436  0005A4  A4D8               	btfss	status,2,c
  5437  0005A6  EFD7  F002         	goto	u3801
  5438  0005AA  EFD9  F002         	goto	u3800
  5439  0005AE                     u3801:
  5440  0005AE  EFE1  F002         	goto	l5257
  5441  0005B2                     u3800:
  5442  0005B2                     
  5443                           ; BSR set to: 0
  5444  0005B2  0E00               	movlw	0
  5445  0005B4  6E2A               	movwf	___flmul@b^0,c
  5446  0005B6  0E00               	movlw	0
  5447  0005B8  6E2B               	movwf	(___flmul@b+1)^0,c
  5448  0005BA  0E00               	movlw	0
  5449  0005BC  6E2C               	movwf	(___flmul@b+2)^0,c
  5450  0005BE  0E00               	movlw	0
  5451  0005C0  6E2D               	movwf	(___flmul@b+3)^0,c
  5452  0005C2                     l5257:
  5453                           
  5454                           ; BSR set to: 0
  5455  0005C2  8E2C               	bsf	(___flmul@b+2)^0,7,c
  5456  0005C4  EFEC  F002         	goto	l5261
  5457  0005C8                     l5259:
  5458                           
  5459                           ; BSR set to: 0
  5460  0005C8  0E00               	movlw	0
  5461  0005CA  6E2A               	movwf	___flmul@b^0,c
  5462  0005CC  0E00               	movlw	0
  5463  0005CE  6E2B               	movwf	(___flmul@b+1)^0,c
  5464  0005D0  0E00               	movlw	0
  5465  0005D2  6E2C               	movwf	(___flmul@b+2)^0,c
  5466  0005D4  0E00               	movlw	0
  5467  0005D6  6E2D               	movwf	(___flmul@b+3)^0,c
  5468  0005D8                     l5261:
  5469                           
  5470                           ; BSR set to: 0
  5471  0005D8  5031               	movf	(___flmul@a+3)^0,w,c
  5472  0005DA  0B80               	andlw	128
  5473  0005DC  1B9F               	xorwf	___flmul@sign& (0+255),f,b
  5474  0005DE                     
  5475                           ; BSR set to: 0
  5476  0005DE  5031               	movf	(___flmul@a+3)^0,w,c
  5477  0005E0  2431               	addwf	(___flmul@a+3)^0,w,c
  5478  0005E2  6FA0               	movwf	___flmul@aexp& (0+255),b
  5479  0005E4                     
  5480                           ; BSR set to: 0
  5481  0005E4  AE30               	btfss	(___flmul@a+2)^0,7,c
  5482  0005E6  EFF7  F002         	goto	u3811
  5483  0005EA  EFF9  F002         	goto	u3810
  5484  0005EE                     u3811:
  5485  0005EE  EFFA  F002         	goto	l5269
  5486  0005F2                     u3810:
  5487  0005F2                     
  5488                           ; BSR set to: 0
  5489  0005F2  81A0               	bsf	___flmul@aexp& (0+255),0,b
  5490  0005F4                     l5269:
  5491                           
  5492                           ; BSR set to: 0
  5493  0005F4  51A0               	movf	___flmul@aexp& (0+255),w,b
  5494  0005F6  B4D8               	btfsc	status,2,c
  5495  0005F8  EF00  F003         	goto	u3821
  5496  0005FC  EF02  F003         	goto	u3820
  5497  000600                     u3821:
  5498  000600  EF15  F003         	goto	l5277
  5499  000604                     u3820:
  5500  000604                     
  5501                           ; BSR set to: 0
  5502  000604  29A0               	incf	___flmul@aexp& (0+255),w,b
  5503  000606  A4D8               	btfss	status,2,c
  5504  000608  EF08  F003         	goto	u3831
  5505  00060C  EF0A  F003         	goto	u3830
  5506  000610                     u3831:
  5507  000610  EF12  F003         	goto	l5275
  5508  000614                     u3830:
  5509  000614                     
  5510                           ; BSR set to: 0
  5511  000614  0E00               	movlw	0
  5512  000616  6E2E               	movwf	___flmul@a^0,c
  5513  000618  0E00               	movlw	0
  5514  00061A  6E2F               	movwf	(___flmul@a+1)^0,c
  5515  00061C  0E00               	movlw	0
  5516  00061E  6E30               	movwf	(___flmul@a+2)^0,c
  5517  000620  0E00               	movlw	0
  5518  000622  6E31               	movwf	(___flmul@a+3)^0,c
  5519  000624                     l5275:
  5520                           
  5521                           ; BSR set to: 0
  5522  000624  8E30               	bsf	(___flmul@a+2)^0,7,c
  5523  000626  EF1D  F003         	goto	l2000
  5524  00062A                     l5277:
  5525                           
  5526                           ; BSR set to: 0
  5527  00062A  0E00               	movlw	0
  5528  00062C  6E2E               	movwf	___flmul@a^0,c
  5529  00062E  0E00               	movlw	0
  5530  000630  6E2F               	movwf	(___flmul@a+1)^0,c
  5531  000632  0E00               	movlw	0
  5532  000634  6E30               	movwf	(___flmul@a+2)^0,c
  5533  000636  0E00               	movlw	0
  5534  000638  6E31               	movwf	(___flmul@a+3)^0,c
  5535  00063A                     l2000:
  5536                           
  5537                           ; BSR set to: 0
  5538  00063A  51A0               	movf	___flmul@aexp& (0+255),w,b
  5539  00063C  B4D8               	btfsc	status,2,c
  5540  00063E  EF23  F003         	goto	u3841
  5541  000642  EF25  F003         	goto	u3840
  5542  000646                     u3841:
  5543  000646  EF2D  F003         	goto	l5281
  5544  00064A                     u3840:
  5545  00064A                     
  5546                           ; BSR set to: 0
  5547  00064A  51A5               	movf	___flmul@bexp& (0+255),w,b
  5548  00064C  A4D8               	btfss	status,2,c
  5549  00064E  EF2B  F003         	goto	u3851
  5550  000652  EF2D  F003         	goto	u3850
  5551  000656                     u3851:
  5552  000656  EF37  F003         	goto	l5285
  5553  00065A                     u3850:
  5554  00065A                     l5281:
  5555                           
  5556                           ; BSR set to: 0
  5557  00065A  0E00               	movlw	0
  5558  00065C  6E2A               	movwf	?___flmul^0,c
  5559  00065E  0E00               	movlw	0
  5560  000660  6E2B               	movwf	(?___flmul+1)^0,c
  5561  000662  0E00               	movlw	0
  5562  000664  6E2C               	movwf	(?___flmul+2)^0,c
  5563  000666  0E00               	movlw	0
  5564  000668  6E2D               	movwf	(?___flmul+3)^0,c
  5565  00066A  EFE1  F004         	goto	l2004
  5566  00066E                     l5285:
  5567                           
  5568                           ; BSR set to: 0
  5569  00066E  5030               	movf	(___flmul@a+2)^0,w,c
  5570  000670  022A               	mulwf	___flmul@b^0,c
  5571  000672  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5572  000678  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5573  00067E                     
  5574                           ; BSR set to: 0
  5575  00067E  51AA               	movf	___flmul@temp& (0+255),w,b
  5576  000680  6FA1               	movwf	___flmul@grs& (0+255),b
  5577  000682  6BA2               	clrf	(___flmul@grs+1)& (0+255),b
  5578  000684  6BA3               	clrf	(___flmul@grs+2)& (0+255),b
  5579  000686  6BA4               	clrf	(___flmul@grs+3)& (0+255),b
  5580  000688                     
  5581                           ; BSR set to: 0
  5582  000688  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5583  00068A  6FA6               	movwf	___flmul@prod& (0+255),b
  5584  00068C  6BA7               	clrf	(___flmul@prod+1)& (0+255),b
  5585  00068E  6BA8               	clrf	(___flmul@prod+2)& (0+255),b
  5586  000690  6BA9               	clrf	(___flmul@prod+3)& (0+255),b
  5587  000692  502F               	movf	(___flmul@a+1)^0,w,c
  5588  000694  022B               	mulwf	(___flmul@b+1)^0,c
  5589  000696  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5590  00069C  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5591  0006A2                     
  5592                           ; BSR set to: 0
  5593  0006A2  51AA               	movf	___flmul@temp& (0+255),w,b
  5594  0006A4  27A1               	addwf	___flmul@grs& (0+255),f,b
  5595  0006A6  0E00               	movlw	0
  5596  0006A8  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5597  0006AA  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5598  0006AC  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5599  0006AE                     
  5600                           ; BSR set to: 0
  5601  0006AE  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5602  0006B0  27A6               	addwf	___flmul@prod& (0+255),f,b
  5603  0006B2  0E00               	movlw	0
  5604  0006B4  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5605  0006B6  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5606  0006B8  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5607  0006BA  502E               	movf	___flmul@a^0,w,c
  5608  0006BC  022C               	mulwf	(___flmul@b+2)^0,c
  5609  0006BE  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5610  0006C4  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5611  0006CA                     
  5612                           ; BSR set to: 0
  5613  0006CA  51AA               	movf	___flmul@temp& (0+255),w,b
  5614  0006CC  27A1               	addwf	___flmul@grs& (0+255),f,b
  5615  0006CE  0E00               	movlw	0
  5616  0006D0  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5617  0006D2  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5618  0006D4  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5619  0006D6                     
  5620                           ; BSR set to: 0
  5621  0006D6  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5622  0006D8  27A6               	addwf	___flmul@prod& (0+255),f,b
  5623  0006DA  0E00               	movlw	0
  5624  0006DC  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5625  0006DE  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5626  0006E0  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5627  0006E2                     
  5628                           ; BSR set to: 0
  5629  0006E2  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5630  0006E6  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5631  0006EA  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5632  0006EE  6BA1               	clrf	___flmul@grs& (0+255),b
  5633  0006F0                     
  5634                           ; BSR set to: 0
  5635  0006F0  502E               	movf	___flmul@a^0,w,c
  5636  0006F2  022B               	mulwf	(___flmul@b+1)^0,c
  5637  0006F4  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5638  0006FA  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5639  000700                     
  5640                           ; BSR set to: 0
  5641  000700  51AA               	movf	___flmul@temp& (0+255),w,b
  5642  000702  27A1               	addwf	___flmul@grs& (0+255),f,b
  5643  000704  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5644  000706  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5645  000708  0E00               	movlw	0
  5646  00070A  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5647  00070C  0E00               	movlw	0
  5648  00070E  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5649  000710                     
  5650                           ; BSR set to: 0
  5651  000710  502F               	movf	(___flmul@a+1)^0,w,c
  5652  000712  022A               	mulwf	___flmul@b^0,c
  5653  000714  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5654  00071A  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5655  000720                     
  5656                           ; BSR set to: 0
  5657  000720  51AA               	movf	___flmul@temp& (0+255),w,b
  5658  000722  27A1               	addwf	___flmul@grs& (0+255),f,b
  5659  000724  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5660  000726  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5661  000728  0E00               	movlw	0
  5662  00072A  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5663  00072C  0E00               	movlw	0
  5664  00072E  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5665  000730                     
  5666                           ; BSR set to: 0
  5667  000730  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5668  000734  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5669  000738  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5670  00073C  6BA1               	clrf	___flmul@grs& (0+255),b
  5671  00073E  502E               	movf	___flmul@a^0,w,c
  5672  000740  022A               	mulwf	___flmul@b^0,c
  5673  000742  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5674  000748  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5675  00074E                     
  5676                           ; BSR set to: 0
  5677  00074E  51AA               	movf	___flmul@temp& (0+255),w,b
  5678  000750  27A1               	addwf	___flmul@grs& (0+255),f,b
  5679  000752  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5680  000754  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5681  000756  0E00               	movlw	0
  5682  000758  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5683  00075A  0E00               	movlw	0
  5684  00075C  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5685  00075E                     
  5686                           ; BSR set to: 0
  5687  00075E  5030               	movf	(___flmul@a+2)^0,w,c
  5688  000760  022B               	mulwf	(___flmul@b+1)^0,c
  5689  000762  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5690  000768  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5691  00076E  51AA               	movf	___flmul@temp& (0+255),w,b
  5692  000770  27A6               	addwf	___flmul@prod& (0+255),f,b
  5693  000772  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5694  000774  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5695  000776  0E00               	movlw	0
  5696  000778  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5697  00077A  0E00               	movlw	0
  5698  00077C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5699  00077E                     
  5700                           ; BSR set to: 0
  5701  00077E  502F               	movf	(___flmul@a+1)^0,w,c
  5702  000780  022C               	mulwf	(___flmul@b+2)^0,c
  5703  000782  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5704  000788  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5705  00078E                     
  5706                           ; BSR set to: 0
  5707  00078E  51AA               	movf	___flmul@temp& (0+255),w,b
  5708  000790  27A6               	addwf	___flmul@prod& (0+255),f,b
  5709  000792  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5710  000794  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5711  000796  0E00               	movlw	0
  5712  000798  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5713  00079A  0E00               	movlw	0
  5714  00079C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5715  00079E  5030               	movf	(___flmul@a+2)^0,w,c
  5716  0007A0  022C               	mulwf	(___flmul@b+2)^0,c
  5717  0007A2  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5718  0007A8  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5719  0007AE                     
  5720                           ; BSR set to: 0
  5721  0007AE  51AA               	movf	___flmul@temp& (0+255),w,b
  5722  0007B0  6E32               	movwf	??___flmul^0,c
  5723  0007B2  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5724  0007B4  6E33               	movwf	(??___flmul+1)^0,c
  5725  0007B6  6A34               	clrf	(??___flmul+2)^0,c
  5726  0007B8  6A35               	clrf	(??___flmul+3)^0,c
  5727  0007BA  C034  F035         	movff	??___flmul+2,??___flmul+3
  5728  0007BE  C033  F034         	movff	??___flmul+1,??___flmul+2
  5729  0007C2  C032  F033         	movff	??___flmul,??___flmul+1
  5730  0007C6  6A32               	clrf	??___flmul^0,c
  5731  0007C8  5032               	movf	??___flmul^0,w,c
  5732  0007CA  27A6               	addwf	___flmul@prod& (0+255),f,b
  5733  0007CC  5033               	movf	(??___flmul+1)^0,w,c
  5734  0007CE  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5735  0007D0  5034               	movf	(??___flmul+2)^0,w,c
  5736  0007D2  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5737  0007D4  5035               	movf	(??___flmul+3)^0,w,c
  5738  0007D6  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5739  0007D8                     
  5740                           ; BSR set to: 0
  5741  0007D8  C0A1  F032         	movff	___flmul@grs,??___flmul
  5742  0007DC  C0A2  F033         	movff	___flmul@grs+1,??___flmul+1
  5743  0007E0  C0A3  F034         	movff	___flmul@grs+2,??___flmul+2
  5744  0007E4  C0A4  F035         	movff	___flmul@grs+3,??___flmul+3
  5745  0007E8  0E19               	movlw	25
  5746  0007EA  EFFC  F003         	goto	u3860
  5747  0007EE                     u3865:
  5748  0007EE  90D8               	bcf	status,0,c
  5749  0007F0  3235               	rrcf	(??___flmul+3)^0,f,c
  5750  0007F2  3234               	rrcf	(??___flmul+2)^0,f,c
  5751  0007F4  3233               	rrcf	(??___flmul+1)^0,f,c
  5752  0007F6  3232               	rrcf	??___flmul^0,f,c
  5753  0007F8                     u3860:
  5754  0007F8  2EE8               	decfsz	wreg,f,c
  5755  0007FA  EFF7  F003         	goto	u3865
  5756  0007FE  5032               	movf	??___flmul^0,w,c
  5757  000800  27A6               	addwf	___flmul@prod& (0+255),f,b
  5758  000802  5033               	movf	(??___flmul+1)^0,w,c
  5759  000804  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5760  000806  5034               	movf	(??___flmul+2)^0,w,c
  5761  000808  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5762  00080A  5035               	movf	(??___flmul+3)^0,w,c
  5763  00080C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5764  00080E                     
  5765                           ; BSR set to: 0
  5766  00080E  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5767  000812  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5768  000816  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5769  00081A  6BA1               	clrf	___flmul@grs& (0+255),b
  5770  00081C                     
  5771                           ; BSR set to: 0
  5772  00081C  51A0               	movf	___flmul@aexp& (0+255),w,b
  5773  00081E  C0A5  F032         	movff	___flmul@bexp,??___flmul
  5774  000822  6A33               	clrf	(??___flmul+1)^0,c
  5775  000824  2632               	addwf	??___flmul^0,f,c
  5776  000826  0E00               	movlw	0
  5777  000828  2233               	addwfc	(??___flmul+1)^0,f,c
  5778  00082A  0E82               	movlw	130
  5779  00082C  2432               	addwf	??___flmul^0,w,c
  5780  00082E  6FAA               	movwf	___flmul@temp& (0+255),b
  5781  000830  0EFF               	movlw	255
  5782  000832  2033               	addwfc	(??___flmul+1)^0,w,c
  5783  000834  6FAB               	movwf	(___flmul@temp+1)& (0+255),b
  5784  000836  EF32  F004         	goto	l5333
  5785  00083A                     l5327:
  5786                           
  5787                           ; BSR set to: 0
  5788  00083A  90D8               	bcf	status,0,c
  5789  00083C  37A6               	rlcf	___flmul@prod& (0+255),f,b
  5790  00083E  37A7               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5791  000840  37A8               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5792  000842  37A9               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5793  000844                     
  5794                           ; BSR set to: 0
  5795  000844  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  5796  000846  EF27  F004         	goto	u3871
  5797  00084A  EF29  F004         	goto	u3870
  5798  00084E                     u3871:
  5799  00084E  EF2A  F004         	goto	l2007
  5800  000852                     u3870:
  5801  000852                     
  5802                           ; BSR set to: 0
  5803  000852  81A6               	bsf	___flmul@prod& (0+255),0,b
  5804  000854                     l2007:
  5805                           
  5806                           ; BSR set to: 0
  5807  000854  90D8               	bcf	status,0,c
  5808  000856  37A1               	rlcf	___flmul@grs& (0+255),f,b
  5809  000858  37A2               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5810  00085A  37A3               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5811  00085C  37A4               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5812  00085E  07AA               	decf	___flmul@temp& (0+255),f,b
  5813  000860  A0D8               	btfss	status,0,c
  5814  000862  07AB               	decf	(___flmul@temp+1)& (0+255),f,b
  5815  000864                     l5333:
  5816                           
  5817                           ; BSR set to: 0
  5818  000864  AFA8               	btfss	(___flmul@prod+2)& (0+255),7,b
  5819  000866  EF37  F004         	goto	u3881
  5820  00086A  EF39  F004         	goto	u3880
  5821  00086E                     u3881:
  5822  00086E  EF1D  F004         	goto	l5327
  5823  000872                     u3880:
  5824  000872                     
  5825                           ; BSR set to: 0
  5826  000872  0E00               	movlw	0
  5827  000874  6FA0               	movwf	___flmul@aexp& (0+255),b
  5828  000876                     
  5829                           ; BSR set to: 0
  5830  000876  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  5831  000878  EF40  F004         	goto	u3891
  5832  00087C  EF42  F004         	goto	u3890
  5833  000880                     u3891:
  5834  000880  EF66  F004         	goto	l2009
  5835  000884                     u3890:
  5836  000884                     
  5837                           ; BSR set to: 0
  5838  000884  0EFF               	movlw	255
  5839  000886  15A1               	andwf	___flmul@grs& (0+255),w,b
  5840  000888  6E32               	movwf	??___flmul^0,c
  5841  00088A  0EFF               	movlw	255
  5842  00088C  15A2               	andwf	(___flmul@grs+1)& (0+255),w,b
  5843  00088E  6E33               	movwf	(??___flmul+1)^0,c
  5844  000890  0EFF               	movlw	255
  5845  000892  15A3               	andwf	(___flmul@grs+2)& (0+255),w,b
  5846  000894  6E34               	movwf	(??___flmul+2)^0,c
  5847  000896  0E7F               	movlw	127
  5848  000898  15A4               	andwf	(___flmul@grs+3)& (0+255),w,b
  5849  00089A  6E35               	movwf	(??___flmul+3)^0,c
  5850  00089C  5032               	movf	??___flmul^0,w,c
  5851  00089E  1033               	iorwf	(??___flmul+1)^0,w,c
  5852  0008A0  1034               	iorwf	(??___flmul+2)^0,w,c
  5853  0008A2  1035               	iorwf	(??___flmul+3)^0,w,c
  5854  0008A4  B4D8               	btfsc	status,2,c
  5855  0008A6  EF57  F004         	goto	u3901
  5856  0008AA  EF59  F004         	goto	u3900
  5857  0008AE                     u3901:
  5858  0008AE  EF5D  F004         	goto	l2010
  5859  0008B2                     u3900:
  5860  0008B2                     l5341:
  5861                           
  5862                           ; BSR set to: 0
  5863  0008B2  0E01               	movlw	1
  5864  0008B4  6FA0               	movwf	___flmul@aexp& (0+255),b
  5865  0008B6  EF66  F004         	goto	l2009
  5866  0008BA                     l2010:
  5867                           
  5868                           ; BSR set to: 0
  5869  0008BA  A1A6               	btfss	___flmul@prod& (0+255),0,b
  5870  0008BC  EF62  F004         	goto	u3911
  5871  0008C0  EF64  F004         	goto	u3910
  5872  0008C4                     u3911:
  5873  0008C4  EF66  F004         	goto	l2009
  5874  0008C8                     u3910:
  5875  0008C8  EF59  F004         	goto	l5341
  5876  0008CC                     l2009:
  5877                           
  5878                           ; BSR set to: 0
  5879  0008CC  51A0               	movf	___flmul@aexp& (0+255),w,b
  5880  0008CE  B4D8               	btfsc	status,2,c
  5881  0008D0  EF6C  F004         	goto	u3921
  5882  0008D4  EF6E  F004         	goto	u3920
  5883  0008D8                     u3921:
  5884  0008D8  EF92  F004         	goto	l5353
  5885  0008DC                     u3920:
  5886  0008DC                     
  5887                           ; BSR set to: 0
  5888  0008DC  0E01               	movlw	1
  5889  0008DE  27A6               	addwf	___flmul@prod& (0+255),f,b
  5890  0008E0  0E00               	movlw	0
  5891  0008E2  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5892  0008E4  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5893  0008E6  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5894  0008E8                     
  5895                           ; BSR set to: 0
  5896  0008E8  A1A9               	btfss	(___flmul@prod+3)& (0+255),0,b
  5897  0008EA  EF79  F004         	goto	u3931
  5898  0008EE  EF7B  F004         	goto	u3930
  5899  0008F2                     u3931:
  5900  0008F2  EF92  F004         	goto	l5353
  5901  0008F6                     u3930:
  5902  0008F6                     
  5903                           ; BSR set to: 0
  5904  0008F6  C0A6  F032         	movff	___flmul@prod,??___flmul
  5905  0008FA  C0A7  F033         	movff	___flmul@prod+1,??___flmul+1
  5906  0008FE  C0A8  F034         	movff	___flmul@prod+2,??___flmul+2
  5907  000902  C0A9  F035         	movff	___flmul@prod+3,??___flmul+3
  5908  000906  3435               	rlcf	(??___flmul+3)^0,w,c
  5909  000908  3235               	rrcf	(??___flmul+3)^0,f,c
  5910  00090A  3234               	rrcf	(??___flmul+2)^0,f,c
  5911  00090C  3233               	rrcf	(??___flmul+1)^0,f,c
  5912  00090E  3232               	rrcf	??___flmul^0,f,c
  5913  000910  C032  F0A6         	movff	??___flmul,___flmul@prod
  5914  000914  C033  F0A7         	movff	??___flmul+1,___flmul@prod+1
  5915  000918  C034  F0A8         	movff	??___flmul+2,___flmul@prod+2
  5916  00091C  C035  F0A9         	movff	??___flmul+3,___flmul@prod+3
  5917  000920                     
  5918                           ; BSR set to: 0
  5919  000920  4BAA               	infsnz	___flmul@temp& (0+255),f,b
  5920  000922  2BAB               	incf	(___flmul@temp+1)& (0+255),f,b
  5921  000924                     l5353:
  5922                           
  5923                           ; BSR set to: 0
  5924  000924  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5925  000926  EF9D  F004         	goto	u3941
  5926  00092A  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5927  00092C  E108               	bnz	u3940
  5928  00092E  29AA               	incf	___flmul@temp& (0+255),w,b
  5929  000930  A0D8               	btfss	status,0,c
  5930  000932  EF9D  F004         	goto	u3941
  5931  000936  EF9F  F004         	goto	u3940
  5932  00093A                     u3941:
  5933  00093A  EFA9  F004         	goto	l5357
  5934  00093E                     u3940:
  5935  00093E                     
  5936                           ; BSR set to: 0
  5937  00093E  0E00               	movlw	0
  5938  000940  6FA6               	movwf	___flmul@prod& (0+255),b
  5939  000942  0E00               	movlw	0
  5940  000944  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  5941  000946  0E80               	movlw	128
  5942  000948  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  5943  00094A  0E7F               	movlw	127
  5944  00094C  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  5945  00094E  EFD7  F004         	goto	l5369
  5946  000952                     l5357:
  5947                           
  5948                           ; BSR set to: 0
  5949  000952  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5950  000954  EFB6  F004         	goto	u3950
  5951  000958  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5952  00095A  E106               	bnz	u3951
  5953  00095C  05AA               	decf	___flmul@temp& (0+255),w,b
  5954  00095E  B0D8               	btfsc	status,0,c
  5955  000960  EFB4  F004         	goto	u3951
  5956  000964  EFB6  F004         	goto	u3950
  5957  000968                     u3951:
  5958  000968  EFC2  F004         	goto	l2017
  5959  00096C                     u3950:
  5960  00096C                     
  5961                           ; BSR set to: 0
  5962  00096C  0E00               	movlw	0
  5963  00096E  6FA6               	movwf	___flmul@prod& (0+255),b
  5964  000970  0E00               	movlw	0
  5965  000972  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  5966  000974  0E00               	movlw	0
  5967  000976  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  5968  000978  0E00               	movlw	0
  5969  00097A  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  5970  00097C  0E00               	movlw	0
  5971  00097E  6F9F               	movwf	___flmul@sign& (0+255),b
  5972  000980  EFD7  F004         	goto	l5369
  5973  000984                     l2017:
  5974                           
  5975                           ; BSR set to: 0
  5976  000984  C0AA  F0A5         	movff	___flmul@temp,___flmul@bexp
  5977  000988                     
  5978                           ; BSR set to: 0
  5979  000988  0EFF               	movlw	255
  5980  00098A  17A6               	andwf	___flmul@prod& (0+255),f,b
  5981  00098C  0EFF               	movlw	255
  5982  00098E  17A7               	andwf	(___flmul@prod+1)& (0+255),f,b
  5983  000990  0E7F               	movlw	127
  5984  000992  17A8               	andwf	(___flmul@prod+2)& (0+255),f,b
  5985  000994  0E00               	movlw	0
  5986  000996  17A9               	andwf	(___flmul@prod+3)& (0+255),f,b
  5987  000998                     
  5988                           ; BSR set to: 0
  5989  000998  A1A5               	btfss	___flmul@bexp& (0+255),0,b
  5990  00099A  EFD1  F004         	goto	u3961
  5991  00099E  EFD3  F004         	goto	u3960
  5992  0009A2                     u3961:
  5993  0009A2  EFD4  F004         	goto	l5367
  5994  0009A6                     u3960:
  5995  0009A6                     
  5996                           ; BSR set to: 0
  5997  0009A6  8FA8               	bsf	(___flmul@prod+2)& (0+255),7,b
  5998  0009A8                     l5367:
  5999                           
  6000                           ; BSR set to: 0
  6001  0009A8  90D8               	bcf	status,0,c
  6002  0009AA  31A5               	rrcf	___flmul@bexp& (0+255),w,b
  6003  0009AC  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  6004  0009AE                     l5369:
  6005                           
  6006                           ; BSR set to: 0
  6007  0009AE  519F               	movf	___flmul@sign& (0+255),w,b
  6008  0009B0  13A9               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6009  0009B2                     
  6010                           ; BSR set to: 0
  6011  0009B2  C0A6  F02A         	movff	___flmul@prod,?___flmul
  6012  0009B6  C0A7  F02B         	movff	___flmul@prod+1,?___flmul+1
  6013  0009BA  C0A8  F02C         	movff	___flmul@prod+2,?___flmul+2
  6014  0009BE  C0A9  F02D         	movff	___flmul@prod+3,?___flmul+3
  6015  0009C2                     l2004:
  6016                           
  6017                           ; BSR set to: 0
  6018  0009C2  0012               	return		;funcret
  6019  0009C4                     __end_of___flmul:
  6020                           	callstack 0
  6021                           
  6022 ;; *************** function ___awdiv *****************
  6023 ;; Defined at:
  6024 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  dividend        2   19[COMRAM] int 
  6027 ;;  divisor         2   21[COMRAM] int 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;  quotient        2   25[COMRAM] int 
  6030 ;;  sign            1   24[COMRAM] unsigned char 
  6031 ;;  counter         1   23[COMRAM] unsigned char 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  2   19[COMRAM] int 
  6034 ;; Registers used:
  6035 ;;		wreg, status,2, status,0
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;Total ram usage:        8 bytes
  6046 ;; Hardware stack levels used: 1
  6047 ;; Hardware stack levels required when called: 8
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_calcSteering
  6052 ;;		_calcMotorPow
  6053 ;;		_setSteering
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text21
  6058  001C9E                     __ptext21:
  6059                           	callstack 0
  6060  001C9E                     ___awdiv:
  6061                           	callstack 19
  6062  001C9E  0E00               	movlw	0
  6063  001CA0  6E19               	movwf	___awdiv@sign^0,c
  6064  001CA2  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  6065  001CA4  EF58  F00E         	goto	u1930
  6066  001CA8  EF56  F00E         	goto	u1931
  6067  001CAC                     u1931:
  6068  001CAC  EF5E  F00E         	goto	l3797
  6069  001CB0                     u1930:
  6070  001CB0  6C16               	negf	___awdiv@divisor^0,c
  6071  001CB2  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  6072  001CB4  B0D8               	btfsc	status,0,c
  6073  001CB6  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  6074  001CB8  0E01               	movlw	1
  6075  001CBA  6E19               	movwf	___awdiv@sign^0,c
  6076  001CBC                     l3797:
  6077  001CBC  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  6078  001CBE  EF65  F00E         	goto	u1940
  6079  001CC2  EF63  F00E         	goto	u1941
  6080  001CC6                     u1941:
  6081  001CC6  EF6B  F00E         	goto	l3803
  6082  001CCA                     u1940:
  6083  001CCA  6C14               	negf	___awdiv@dividend^0,c
  6084  001CCC  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  6085  001CCE  B0D8               	btfsc	status,0,c
  6086  001CD0  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  6087  001CD2  0E01               	movlw	1
  6088  001CD4  1A19               	xorwf	___awdiv@sign^0,f,c
  6089  001CD6                     l3803:
  6090  001CD6  0E00               	movlw	0
  6091  001CD8  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  6092  001CDA  0E00               	movlw	0
  6093  001CDC  6E1A               	movwf	___awdiv@quotient^0,c
  6094  001CDE  5016               	movf	___awdiv@divisor^0,w,c
  6095  001CE0  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  6096  001CE2  B4D8               	btfsc	status,2,c
  6097  001CE4  EF76  F00E         	goto	u1951
  6098  001CE8  EF78  F00E         	goto	u1950
  6099  001CEC                     u1951:
  6100  001CEC  EFA0  F00E         	goto	l3825
  6101  001CF0                     u1950:
  6102  001CF0  0E01               	movlw	1
  6103  001CF2  6E18               	movwf	___awdiv@counter^0,c
  6104  001CF4  EF80  F00E         	goto	l3811
  6105  001CF8                     l3809:
  6106  001CF8  90D8               	bcf	status,0,c
  6107  001CFA  3616               	rlcf	___awdiv@divisor^0,f,c
  6108  001CFC  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  6109  001CFE  2A18               	incf	___awdiv@counter^0,f,c
  6110  001D00                     l3811:
  6111  001D00  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  6112  001D02  EF85  F00E         	goto	u1961
  6113  001D06  EF87  F00E         	goto	u1960
  6114  001D0A                     u1961:
  6115  001D0A  EF7C  F00E         	goto	l3809
  6116  001D0E                     u1960:
  6117  001D0E                     l3813:
  6118  001D0E  90D8               	bcf	status,0,c
  6119  001D10  361A               	rlcf	___awdiv@quotient^0,f,c
  6120  001D12  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  6121  001D14  5016               	movf	___awdiv@divisor^0,w,c
  6122  001D16  5C14               	subwf	___awdiv@dividend^0,w,c
  6123  001D18  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6124  001D1A  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  6125  001D1C  A0D8               	btfss	status,0,c
  6126  001D1E  EF93  F00E         	goto	u1971
  6127  001D22  EF95  F00E         	goto	u1970
  6128  001D26                     u1971:
  6129  001D26  EF9A  F00E         	goto	l3821
  6130  001D2A                     u1970:
  6131  001D2A  5016               	movf	___awdiv@divisor^0,w,c
  6132  001D2C  5E14               	subwf	___awdiv@dividend^0,f,c
  6133  001D2E  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6134  001D30  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  6135  001D32  801A               	bsf	___awdiv@quotient^0,0,c
  6136  001D34                     l3821:
  6137  001D34  90D8               	bcf	status,0,c
  6138  001D36  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  6139  001D38  3216               	rrcf	___awdiv@divisor^0,f,c
  6140  001D3A  2E18               	decfsz	___awdiv@counter^0,f,c
  6141  001D3C  EF87  F00E         	goto	l3813
  6142  001D40                     l3825:
  6143  001D40  5019               	movf	___awdiv@sign^0,w,c
  6144  001D42  B4D8               	btfsc	status,2,c
  6145  001D44  EFA6  F00E         	goto	u1981
  6146  001D48  EFA8  F00E         	goto	u1980
  6147  001D4C                     u1981:
  6148  001D4C  EFAC  F00E         	goto	l3829
  6149  001D50                     u1980:
  6150  001D50  6C1A               	negf	___awdiv@quotient^0,c
  6151  001D52  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  6152  001D54  B0D8               	btfsc	status,0,c
  6153  001D56  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  6154  001D58                     l3829:
  6155  001D58  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  6156  001D5C  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  6157  001D60  0012               	return		;funcret
  6158  001D62                     __end_of___awdiv:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function _SYSTEM_Initialize *****************
  6162 ;; Defined at:
  6163 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;		None
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;Total ram usage:        0 bytes
  6182 ;; Hardware stack levels used: 1
  6183 ;; Hardware stack levels required when called: 10
  6184 ;; This function calls:
  6185 ;;		_ADCC_Initialize
  6186 ;;		_CCP3_Initialize
  6187 ;;		_CCP4_Initialize
  6188 ;;		_CLC3_Initialize
  6189 ;;		_INTERRUPT_Initialize
  6190 ;;		_OSCILLATOR_Initialize
  6191 ;;		_PIN_MANAGER_Initialize
  6192 ;;		_PMD_Initialize
  6193 ;;		_PWM5_Initialize
  6194 ;;		_PWM6_Initialize
  6195 ;;		_PWM7_Initialize
  6196 ;;		_PWM8_Initialize
  6197 ;;		_SMT1_Initialize
  6198 ;;		_TMR2_Initialize
  6199 ;;		_TMR3_Initialize
  6200 ;;		_TMR4_Initialize
  6201 ;;		_TMR5_Initialize
  6202 ;;		_UART1_Initialize
  6203 ;; This function is called by:
  6204 ;;		_main
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text22
  6209  002048                     __ptext22:
  6210                           	callstack 0
  6211  002048                     _SYSTEM_Initialize:
  6212                           	callstack 20
  6213  002048                     
  6214                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  6215  002048  ECFE  F00F         	call	_INTERRUPT_Initialize	;wreg free
  6216                           
  6217                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6218  00204C  EC00  F013         	call	_PMD_Initialize	;wreg free
  6219                           
  6220                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6221  002050  EC87  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6222                           
  6223                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6224  002054  EC80  F013         	call	_OSCILLATOR_Initialize	;wreg free
  6225  002058                     
  6226                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  6227  002058  EC7D  F012         	call	_CCP3_Initialize	;wreg free
  6228  00205C                     
  6229                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  6230  00205C  ECA5  F00F         	call	_ADCC_Initialize	;wreg free
  6231                           
  6232                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6233  002060  EC94  F012         	call	_TMR4_Initialize	;wreg free
  6234  002064                     
  6235                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  6236  002064  EC06  F012         	call	_SMT1_Initialize	;wreg free
  6237  002068                     
  6238                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  6239  002068  EC50  F013         	call	_PWM8_Initialize	;wreg free
  6240  00206C                     
  6241                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  6242  00206C  EC34  F013         	call	_TMR2_Initialize	;wreg free
  6243  002070                     
  6244                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  6245  002070  EC68  F013         	call	_PWM6_Initialize	;wreg free
  6246                           
  6247                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  6248  002074  EC66  F012         	call	_CCP4_Initialize	;wreg free
  6249  002078                     
  6250                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  6251  002078  ECAA  F012         	call	_CLC3_Initialize	;wreg free
  6252  00207C                     
  6253                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  6254  00207C  EC14  F011         	call	_TMR3_Initialize	;wreg free
  6255                           
  6256                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  6257  002080  EC74  F013         	call	_PWM5_Initialize	;wreg free
  6258  002084                     
  6259                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  6260  002084  EC49  F010         	call	_TMR5_Initialize	;wreg free
  6261  002088                     
  6262                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  6263  002088  EC5C  F013         	call	_PWM7_Initialize	;wreg free
  6264                           
  6265                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  6266  00208C  EC08  F00F         	call	_UART1_Initialize	;wreg free
  6267  002090  0012               	return		;funcret
  6268  002092                     __end_of_SYSTEM_Initialize:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function _UART1_Initialize *****************
  6272 ;; Defined at:
  6273 ;;		line 87 in file "mcc_generated_files/uart1.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;		None
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      void 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;Total ram usage:        0 bytes
  6292 ;; Hardware stack levels used: 1
  6293 ;; Hardware stack levels required when called: 9
  6294 ;; This function calls:
  6295 ;;		_UART1_SetErrorHandler
  6296 ;;		_UART1_SetFramingErrorHandler
  6297 ;;		_UART1_SetOverrunErrorHandler
  6298 ;;		_UART1_SetRxInterruptHandler
  6299 ;;		_UART1_SetTxInterruptHandler
  6300 ;; This function is called by:
  6301 ;;		_SYSTEM_Initialize
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text23
  6306  001E10                     __ptext23:
  6307                           	callstack 0
  6308  001E10                     _UART1_Initialize:
  6309                           	callstack 20
  6310  001E10                     
  6311                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  6312  001E10  0139               	movlb	57	; () banked
  6313  001E12  9793               	bcf	147,3,b	;volatile
  6314  001E14                     
  6315                           ; BSR set to: 57
  6316                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  6317  001E14  0ED8               	movlw	low _UART1_Receive_ISR
  6318  001E16  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  6319  001E18  0E1B               	movlw	high _UART1_Receive_ISR
  6320  001E1A  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  6321  001E1C  EC98  F013         	call	_UART1_SetRxInterruptHandler	;wreg free
  6322  001E20                     
  6323                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  6324  001E20  0139               	movlb	57	; () banked
  6325  001E22  9993               	bcf	147,4,b	;volatile
  6326                           
  6327                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  6328  001E24  0E26               	movlw	low _UART1_Transmit_ISR
  6329  001E26  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  6330  001E28  0E21               	movlw	high _UART1_Transmit_ISR
  6331  001E2A  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  6332  001E2C  EC93  F013         	call	_UART1_SetTxInterruptHandler	;wreg free
  6333  001E30                     
  6334                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  6335  001E30  0E00               	movlw	0
  6336  001E32  013D               	movlb	61	; () banked
  6337  001E34  6FEC               	movwf	236,b	;volatile
  6338  001E36                     
  6339                           ; BSR set to: 61
  6340                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  6341  001E36  0E00               	movlw	0
  6342  001E38  6FED               	movwf	237,b	;volatile
  6343  001E3A                     
  6344                           ; BSR set to: 61
  6345                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  6346  001E3A  0E00               	movlw	0
  6347  001E3C  6FEE               	movwf	238,b	;volatile
  6348  001E3E                     
  6349                           ; BSR set to: 61
  6350                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  6351  001E3E  0E00               	movlw	0
  6352  001E40  6FEF               	movwf	239,b	;volatile
  6353  001E42                     
  6354                           ; BSR set to: 61
  6355                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  6356  001E42  0E00               	movlw	0
  6357  001E44  6FF0               	movwf	240,b	;volatile
  6358  001E46                     
  6359                           ; BSR set to: 61
  6360                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  6361  001E46  0E00               	movlw	0
  6362  001E48  6FF1               	movwf	241,b	;volatile
  6363  001E4A                     
  6364                           ; BSR set to: 61
  6365                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  6366  001E4A  0EB0               	movlw	176
  6367  001E4C  6FF2               	movwf	242,b	;volatile
  6368  001E4E                     
  6369                           ; BSR set to: 61
  6370                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  6371  001E4E  0E80               	movlw	128
  6372  001E50  6FF3               	movwf	243,b	;volatile
  6373  001E52                     
  6374                           ; BSR set to: 61
  6375                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  6376  001E52  0E00               	movlw	0
  6377  001E54  6FF4               	movwf	244,b	;volatile
  6378  001E56                     
  6379                           ; BSR set to: 61
  6380                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  6381  001E56  0E8A               	movlw	138
  6382  001E58  6FF5               	movwf	245,b	;volatile
  6383  001E5A                     
  6384                           ; BSR set to: 61
  6385                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  6386  001E5A  0E00               	movlw	0
  6387  001E5C  6FF6               	movwf	246,b	;volatile
  6388  001E5E                     
  6389                           ; BSR set to: 61
  6390                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  6391  001E5E  0E00               	movlw	0
  6392  001E60  6FF7               	movwf	247,b	;volatile
  6393  001E62                     
  6394                           ; BSR set to: 61
  6395                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  6396  001E62  0E00               	movlw	0
  6397  001E64  6FF8               	movwf	248,b	;volatile
  6398  001E66                     
  6399                           ; BSR set to: 61
  6400                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  6401  001E66  0E00               	movlw	0
  6402  001E68  6FF9               	movwf	249,b	;volatile
  6403  001E6A                     
  6404                           ; BSR set to: 61
  6405                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  6406  001E6A  0E00               	movlw	0
  6407  001E6C  6FFA               	movwf	250,b	;volatile
  6408  001E6E                     
  6409                           ; BSR set to: 61
  6410                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  6411  001E6E  0E8E               	movlw	low _UART1_DefaultFramingErrorHandler
  6412  001E70  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  6413  001E72  0E27               	movlw	high _UART1_DefaultFramingErrorHandler
  6414  001E74  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6415  001E76  ECA2  F013         	call	_UART1_SetFramingErrorHandler	;wreg free
  6416  001E7A                     
  6417                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  6418  001E7A  0E8C               	movlw	low _UART1_DefaultOverrunErrorHandler
  6419  001E7C  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  6420  001E7E  0E27               	movlw	high _UART1_DefaultOverrunErrorHandler
  6421  001E80  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6422  001E82  EC9D  F013         	call	_UART1_SetOverrunErrorHandler	;wreg free
  6423  001E86                     
  6424                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  6425  001E86  0E80               	movlw	low _UART1_DefaultErrorHandler
  6426  001E88  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  6427  001E8A  0E27               	movlw	high _UART1_DefaultErrorHandler
  6428  001E8C  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  6429  001E8E  ECA7  F013         	call	_UART1_SetErrorHandler	;wreg free
  6430                           
  6431                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  6432  001E92  0E00               	movlw	0
  6433  001E94  6E40               	movwf	_uart1RxLastError^0,c	;volatile
  6434                           
  6435                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  6436  001E96  0E00               	movlw	0
  6437  001E98  6E45               	movwf	_uart1TxHead^0,c	;volatile
  6438                           
  6439                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  6440  001E9A  0E00               	movlw	0
  6441  001E9C  6E44               	movwf	_uart1TxTail^0,c	;volatile
  6442                           
  6443                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  6444  001E9E  0E08               	movlw	8
  6445  001EA0  0100               	movlb	0	; () banked
  6446  001EA2  6FE2               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  6447                           
  6448                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  6449  001EA4  0E00               	movlw	0
  6450  001EA6  6E43               	movwf	_uart1RxHead^0,c	;volatile
  6451                           
  6452                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  6453  001EA8  0E00               	movlw	0
  6454  001EAA  6E42               	movwf	_uart1RxTail^0,c	;volatile
  6455                           
  6456                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  6457  001EAC  0E00               	movlw	0
  6458  001EAE  6E41               	movwf	_uart1RxCount^0,c	;volatile
  6459  001EB0                     
  6460                           ; BSR set to: 0
  6461                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  6462  001EB0  0139               	movlb	57	; () banked
  6463  001EB2  8793               	bsf	147,3,b	;volatile
  6464  001EB4                     
  6465                           ; BSR set to: 57
  6466  001EB4  0012               	return		;funcret
  6467  001EB6                     __end_of_UART1_Initialize:
  6468                           	callstack 0
  6469                           
  6470 ;; *************** function _UART1_SetTxInterruptHandler *****************
  6471 ;; Defined at:
  6472 ;;		line 333 in file "mcc_generated_files/uart1.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6475 ;;		 -> UART1_Transmit_ISR(1), 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;Total ram usage:        2 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; Hardware stack levels required when called: 8
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_UART1_Initialize
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text24
  6502  002726                     __ptext24:
  6503                           	callstack 0
  6504  002726                     _UART1_SetTxInterruptHandler:
  6505                           	callstack 20
  6506  002726                     
  6507                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  6508  002726  C014  F0DE         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  6509  00272A  C015  F0DF         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  6510  00272E  0012               	return		;funcret
  6511  002730                     __end_of_UART1_SetTxInterruptHandler:
  6512                           	callstack 0
  6513                           
  6514 ;; *************** function _UART1_SetRxInterruptHandler *****************
  6515 ;; Defined at:
  6516 ;;		line 329 in file "mcc_generated_files/uart1.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6519 ;;		 -> UART1_Receive_ISR(1), 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2, status,0
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;Total ram usage:        2 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 8
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_UART1_Initialize
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text25
  6546  002730                     __ptext25:
  6547                           	callstack 0
  6548  002730                     _UART1_SetRxInterruptHandler:
  6549                           	callstack 20
  6550  002730                     
  6551                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  6552  002730  C014  F0E0         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  6553  002734  C015  F0E1         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  6554  002738  0012               	return		;funcret
  6555  00273A                     __end_of_UART1_SetRxInterruptHandler:
  6556                           	callstack 0
  6557                           
  6558 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  6559 ;; Defined at:
  6560 ;;		line 319 in file "mcc_generated_files/uart1.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6563 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;Total ram usage:        2 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 8
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_UART1_Initialize
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text26
  6590  00273A                     __ptext26:
  6591                           	callstack 0
  6592  00273A                     _UART1_SetOverrunErrorHandler:
  6593                           	callstack 20
  6594  00273A                     
  6595                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  6596  00273A  C014  F0DA         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  6597  00273E  C015  F0DB         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  6598  002742  0012               	return		;funcret
  6599  002744                     __end_of_UART1_SetOverrunErrorHandler:
  6600                           	callstack 0
  6601                           
  6602 ;; *************** function _UART1_SetFramingErrorHandler *****************
  6603 ;; Defined at:
  6604 ;;		line 315 in file "mcc_generated_files/uart1.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6607 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      void 
  6612 ;; Registers used:
  6613 ;;		wreg, status,2, status,0
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;Total ram usage:        2 bytes
  6624 ;; Hardware stack levels used: 1
  6625 ;; Hardware stack levels required when called: 8
  6626 ;; This function calls:
  6627 ;;		Nothing
  6628 ;; This function is called by:
  6629 ;;		_UART1_Initialize
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text27
  6634  002744                     __ptext27:
  6635                           	callstack 0
  6636  002744                     _UART1_SetFramingErrorHandler:
  6637                           	callstack 20
  6638  002744                     
  6639                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  6640  002744  C014  F0DC         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  6641  002748  C015  F0DD         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  6642  00274C  0012               	return		;funcret
  6643  00274E                     __end_of_UART1_SetFramingErrorHandler:
  6644                           	callstack 0
  6645                           
  6646 ;; *************** function _UART1_SetErrorHandler *****************
  6647 ;; Defined at:
  6648 ;;		line 323 in file "mcc_generated_files/uart1.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6651 ;;		 -> UART1_DefaultErrorHandler(1), 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;Total ram usage:        2 bytes
  6668 ;; Hardware stack levels used: 1
  6669 ;; Hardware stack levels required when called: 8
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_UART1_Initialize
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text28
  6678  00274E                     __ptext28:
  6679                           	callstack 0
  6680  00274E                     _UART1_SetErrorHandler:
  6681                           	callstack 20
  6682  00274E                     
  6683                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  6684  00274E  C014  F0D8         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  6685  002752  C015  F0D9         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  6686  002756  0012               	return		;funcret
  6687  002758                     __end_of_UART1_SetErrorHandler:
  6688                           	callstack 0
  6689                           
  6690 ;; *************** function _TMR5_Initialize *****************
  6691 ;; Defined at:
  6692 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;		None
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;Total ram usage:        2 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; Hardware stack levels required when called: 9
  6713 ;; This function calls:
  6714 ;;		_TMR5_SetGateInterruptHandler
  6715 ;; This function is called by:
  6716 ;;		_SYSTEM_Initialize
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text29
  6721  002092                     __ptext29:
  6722                           	callstack 0
  6723  002092                     _TMR5_Initialize:
  6724                           	callstack 20
  6725  002092                     
  6726                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  6727  002092  0EC0               	movlw	192
  6728  002094  6E9B               	movwf	155,c	;volatile
  6729                           
  6730                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  6731  002096  0E00               	movlw	0
  6732  002098  6E9C               	movwf	156,c	;volatile
  6733                           
  6734                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  6735  00209A  0E05               	movlw	5
  6736  00209C  6E9D               	movwf	157,c	;volatile
  6737                           
  6738                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  6739  00209E  0E00               	movlw	0
  6740  0020A0  6E99               	movwf	153,c	;volatile
  6741                           
  6742                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  6743  0020A2  0E00               	movlw	0
  6744  0020A4  6E98               	movwf	152,c	;volatile
  6745  0020A6                     
  6746                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  6747  0020A6  0139               	movlb	57	; () banked
  6748  0020A8  9DA8               	bcf	168,6,b	;volatile
  6749  0020AA                     
  6750                           ; BSR set to: 57
  6751                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  6752  0020AA  5098               	movf	152,w,c	;volatile
  6753  0020AC  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  6754  0020B2  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  6755  0020B4  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  6756  0020B8  6A16               	clrf	??_TMR5_Initialize^0,c
  6757  0020BA  1016               	iorwf	??_TMR5_Initialize^0,w,c
  6758  0020BC  0100               	movlb	0	; () banked
  6759  0020BE  6FD2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  6760  0020C0  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  6761  0020C2  6FD3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  6762  0020C4                     
  6763                           ; BSR set to: 0
  6764                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  6765  0020C4  0139               	movlb	57	; () banked
  6766  0020C6  9FA8               	bcf	168,7,b	;volatile
  6767  0020C8                     
  6768                           ; BSR set to: 57
  6769                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  6770  0020C8  8F98               	bsf	152,7,b	;volatile
  6771  0020CA                     
  6772                           ; BSR set to: 57
  6773                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  6774  0020CA  0E84               	movlw	low _TMR5_DefaultGateInterruptHandler
  6775  0020CC  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  6776  0020CE  0E26               	movlw	high _TMR5_DefaultGateInterruptHandler
  6777  0020D0  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  6778  0020D2  ECAC  F013         	call	_TMR5_SetGateInterruptHandler	;wreg free
  6779  0020D6                     
  6780                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  6781  0020D6  0E03               	movlw	3
  6782  0020D8  6E9A               	movwf	154,c	;volatile
  6783  0020DA  0012               	return		;funcret
  6784  0020DC                     __end_of_TMR5_Initialize:
  6785                           	callstack 0
  6786                           
  6787 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  6788 ;; Defined at:
  6789 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6792 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg, status,2, status,0
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;Total ram usage:        2 bytes
  6809 ;; Hardware stack levels used: 1
  6810 ;; Hardware stack levels required when called: 8
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_TMR5_Initialize
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text30
  6819  002758                     __ptext30:
  6820                           	callstack 0
  6821  002758                     _TMR5_SetGateInterruptHandler:
  6822                           	callstack 20
  6823  002758                     
  6824                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  6825  002758  C014  F0D0         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  6826  00275C  C015  F0D1         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  6827  002760  0012               	return		;funcret
  6828  002762                     __end_of_TMR5_SetGateInterruptHandler:
  6829                           	callstack 0
  6830                           
  6831 ;; *************** function _TMR4_Initialize *****************
  6832 ;; Defined at:
  6833 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;Total ram usage:        0 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 9
  6854 ;; This function calls:
  6855 ;;		_TMR4_SetInterruptHandler
  6856 ;; This function is called by:
  6857 ;;		_SYSTEM_Initialize
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text31
  6862  002528                     __ptext31:
  6863                           	callstack 0
  6864  002528                     _TMR4_Initialize:
  6865                           	callstack 20
  6866  002528                     
  6867                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  6868  002528  0E01               	movlw	1
  6869  00252A  6EA2               	movwf	162,c	;volatile
  6870                           
  6871                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  6872  00252C  0E00               	movlw	0
  6873  00252E  6EA1               	movwf	161,c	;volatile
  6874                           
  6875                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  6876  002530  0E00               	movlw	0
  6877  002532  6EA3               	movwf	163,c	;volatile
  6878                           
  6879                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  6880  002534  0EF9               	movlw	249
  6881  002536  6E9F               	movwf	159,c	;volatile
  6882                           
  6883                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  6884  002538  0E00               	movlw	0
  6885  00253A  6E9E               	movwf	158,c	;volatile
  6886  00253C                     
  6887                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  6888  00253C  0139               	movlb	57	; () banked
  6889  00253E  91A7               	bcf	167,0,b	;volatile
  6890  002540                     
  6891                           ; BSR set to: 57
  6892                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  6893  002540  8197               	bsf	151,0,b	;volatile
  6894  002542                     
  6895                           ; BSR set to: 57
  6896                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  6897  002542  0E90               	movlw	low _TMR4_DefaultInterruptHandler
  6898  002544  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  6899  002546  0E27               	movlw	high _TMR4_DefaultInterruptHandler
  6900  002548  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  6901  00254A  ECB1  F013         	call	_TMR4_SetInterruptHandler	;wreg free
  6902  00254E                     
  6903                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  6904  00254E  0EE0               	movlw	224
  6905  002550  6EA0               	movwf	160,c	;volatile
  6906  002552  0012               	return		;funcret
  6907  002554                     __end_of_TMR4_Initialize:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _TMR4_SetInterruptHandler *****************
  6911 ;; Defined at:
  6912 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6915 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;Total ram usage:        2 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 8
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_TMR4_Initialize
  6938 ;;		_main
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text32
  6943  002762                     __ptext32:
  6944                           	callstack 0
  6945  002762                     _TMR4_SetInterruptHandler:
  6946                           	callstack 22
  6947  002762                     
  6948                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  6949  002762  C014  F0CC         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  6950  002766  C015  F0CD         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  6951  00276A  0012               	return		;funcret
  6952  00276C                     __end_of_TMR4_SetInterruptHandler:
  6953                           	callstack 0
  6954                           
  6955 ;; *************** function _TMR3_Initialize *****************
  6956 ;; Defined at:
  6957 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;Total ram usage:        2 bytes
  6976 ;; Hardware stack levels used: 1
  6977 ;; Hardware stack levels required when called: 8
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_SYSTEM_Initialize
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text33
  6986  002228                     __ptext33:
  6987                           	callstack 0
  6988  002228                     _TMR3_Initialize:
  6989                           	callstack 21
  6990  002228                     
  6991                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  6992  002228  0E00               	movlw	0
  6993  00222A  6EA7               	movwf	167,c	;volatile
  6994                           
  6995                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  6996  00222C  0E00               	movlw	0
  6997  00222E  6EA8               	movwf	168,c	;volatile
  6998                           
  6999                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  7000  002230  0E05               	movlw	5
  7001  002232  6EA9               	movwf	169,c	;volatile
  7002                           
  7003                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  7004  002234  0E00               	movlw	0
  7005  002236  6EA5               	movwf	165,c	;volatile
  7006                           
  7007                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  7008  002238  0E00               	movlw	0
  7009  00223A  6EA4               	movwf	164,c	;volatile
  7010  00223C                     
  7011                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  7012  00223C  0139               	movlb	57	; () banked
  7013  00223E  9DA6               	bcf	166,6,b	;volatile
  7014  002240                     
  7015                           ; BSR set to: 57
  7016                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  7017  002240  50A4               	movf	164,w,c	;volatile
  7018  002242  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  7019  002248  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  7020  00224A  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  7021  00224E  6A14               	clrf	??_TMR3_Initialize^0,c
  7022  002250  1014               	iorwf	??_TMR3_Initialize^0,w,c
  7023  002252  0100               	movlb	0	; () banked
  7024  002254  6FCE               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  7025  002256  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  7026  002258  6FCF               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  7027  00225A                     
  7028                           ; BSR set to: 0
  7029                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  7030  00225A  0E01               	movlw	1
  7031  00225C  6EA6               	movwf	166,c	;volatile
  7032  00225E                     
  7033                           ; BSR set to: 0
  7034  00225E  0012               	return		;funcret
  7035  002260                     __end_of_TMR3_Initialize:
  7036                           	callstack 0
  7037                           
  7038 ;; *************** function _TMR2_Initialize *****************
  7039 ;; Defined at:
  7040 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;		None
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;		None
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      void 
  7047 ;; Registers used:
  7048 ;;		wreg, status,2
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;Total ram usage:        0 bytes
  7059 ;; Hardware stack levels used: 1
  7060 ;; Hardware stack levels required when called: 8
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_SYSTEM_Initialize
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text34
  7069  002668                     __ptext34:
  7070                           	callstack 0
  7071  002668                     _TMR2_Initialize:
  7072                           	callstack 21
  7073  002668                     
  7074                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  7075  002668  0E05               	movlw	5
  7076  00266A  6EAE               	movwf	174,c	;volatile
  7077                           
  7078                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7079  00266C  0E00               	movlw	0
  7080  00266E  6EAD               	movwf	173,c	;volatile
  7081                           
  7082                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7083  002670  0E00               	movlw	0
  7084  002672  6EAF               	movwf	175,c	;volatile
  7085  002674                     
  7086                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  7087  002674  68AB               	setf	171,c	;volatile
  7088                           
  7089                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7090  002676  0E00               	movlw	0
  7091  002678  6EAA               	movwf	170,c	;volatile
  7092  00267A                     
  7093                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7094  00267A  0139               	movlb	57	; () banked
  7095  00267C  95A4               	bcf	164,2,b	;volatile
  7096                           
  7097                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  7098  00267E  0EB0               	movlw	176
  7099  002680  6EAC               	movwf	172,c	;volatile
  7100  002682                     
  7101                           ; BSR set to: 57
  7102  002682  0012               	return		;funcret
  7103  002684                     __end_of_TMR2_Initialize:
  7104                           	callstack 0
  7105                           
  7106 ;; *************** function _SMT1_Initialize *****************
  7107 ;; Defined at:
  7108 ;;		line 60 in file "mcc_generated_files/smt1.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;		None
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used: 1
  7128 ;; Hardware stack levels required when called: 8
  7129 ;; This function calls:
  7130 ;;		Nothing
  7131 ;; This function is called by:
  7132 ;;		_SYSTEM_Initialize
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text35
  7137  00240C                     __ptext35:
  7138                           	callstack 0
  7139  00240C                     _SMT1_Initialize:
  7140                           	callstack 21
  7141  00240C                     
  7142                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  7143  00240C  0E80               	movlw	128
  7144  00240E  013F               	movlb	63	; () banked
  7145  002410  6F1E               	movwf	30,b	;volatile
  7146                           
  7147                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  7148  002412  0E42               	movlw	66
  7149  002414  6F1F               	movwf	31,b	;volatile
  7150                           
  7151                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  7152  002416  0E00               	movlw	0
  7153  002418  6F20               	movwf	32,b	;volatile
  7154                           
  7155                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  7156  00241A  0E04               	movlw	4
  7157  00241C  6F21               	movwf	33,b	;volatile
  7158                           
  7159                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  7160  00241E  0E00               	movlw	0
  7161  002420  6F23               	movwf	35,b	;volatile
  7162                           
  7163                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  7164  002422  0E00               	movlw	0
  7165  002424  6F22               	movwf	34,b	;volatile
  7166                           
  7167                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  7168  002426  0E01               	movlw	1
  7169  002428  6F1D               	movwf	29,b	;volatile
  7170  00242A                     
  7171                           ; BSR set to: 63
  7172                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  7173  00242A  691C               	setf	28,b	;volatile
  7174  00242C                     
  7175                           ; BSR set to: 63
  7176                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  7177  00242C  691B               	setf	27,b	;volatile
  7178  00242E                     
  7179                           ; BSR set to: 63
  7180                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  7181  00242E  0139               	movlb	57	; () banked
  7182  002430  8B91               	bsf	145,5,b	;volatile
  7183  002432                     
  7184                           ; BSR set to: 57
  7185                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  7186  002432  8F91               	bsf	145,7,b	;volatile
  7187  002434                     
  7188                           ; BSR set to: 57
  7189                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  7190  002434  8D91               	bsf	145,6,b	;volatile
  7191  002436                     
  7192                           ; BSR set to: 57
  7193                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  7194  002436  013F               	movlb	63	; () banked
  7195  002438  8F1F               	bsf	31,7,b	;volatile
  7196  00243A                     
  7197                           ; BSR set to: 63
  7198  00243A  0012               	return		;funcret
  7199  00243C                     __end_of_SMT1_Initialize:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _PWM8_Initialize *****************
  7203 ;; Defined at:
  7204 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 8
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_SYSTEM_Initialize
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text36
  7233  0026A0                     __ptext36:
  7234                           	callstack 0
  7235  0026A0                     _PWM8_Initialize:
  7236                           	callstack 21
  7237  0026A0                     
  7238                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  7239  0026A0  0E80               	movlw	128
  7240  0026A2  6E62               	movwf	98,c	;volatile
  7241                           
  7242                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  7243  0026A4  0E00               	movlw	0
  7244  0026A6  6E61               	movwf	97,c	;volatile
  7245                           
  7246                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  7247  0026A8  0E00               	movlw	0
  7248  0026AA  6E60               	movwf	96,c	;volatile
  7249                           
  7250                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  7251  0026AC  013F               	movlb	63	; () banked
  7252  0026AE  515F               	movf	95,w,b	;volatile
  7253  0026B0  0B3F               	andlw	-193
  7254  0026B2  0980               	iorlw	128
  7255  0026B4  6F5F               	movwf	95,b	;volatile
  7256  0026B6                     
  7257                           ; BSR set to: 63
  7258  0026B6  0012               	return		;funcret
  7259  0026B8                     __end_of_PWM8_Initialize:
  7260                           	callstack 0
  7261                           
  7262 ;; *************** function _PWM7_Initialize *****************
  7263 ;; Defined at:
  7264 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; Hardware stack levels required when called: 8
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_SYSTEM_Initialize
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text37
  7293  0026B8                     __ptext37:
  7294                           	callstack 0
  7295  0026B8                     _PWM7_Initialize:
  7296                           	callstack 21
  7297  0026B8                     
  7298                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  7299  0026B8  0E80               	movlw	128
  7300  0026BA  6E66               	movwf	102,c	;volatile
  7301                           
  7302                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  7303  0026BC  0E00               	movlw	0
  7304  0026BE  6E65               	movwf	101,c	;volatile
  7305                           
  7306                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  7307  0026C0  0E00               	movlw	0
  7308  0026C2  6E64               	movwf	100,c	;volatile
  7309                           
  7310                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  7311  0026C4  013F               	movlb	63	; () banked
  7312  0026C6  515F               	movf	95,w,b	;volatile
  7313  0026C8  0BCF               	andlw	-49
  7314  0026CA  0920               	iorlw	32
  7315  0026CC  6F5F               	movwf	95,b	;volatile
  7316  0026CE                     
  7317                           ; BSR set to: 63
  7318  0026CE  0012               	return		;funcret
  7319  0026D0                     __end_of_PWM7_Initialize:
  7320                           	callstack 0
  7321                           
  7322 ;; *************** function _PWM6_Initialize *****************
  7323 ;; Defined at:
  7324 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;		None
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;Total ram usage:        0 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; Hardware stack levels required when called: 8
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_SYSTEM_Initialize
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text38
  7353  0026D0                     __ptext38:
  7354                           	callstack 0
  7355  0026D0                     _PWM6_Initialize:
  7356                           	callstack 21
  7357  0026D0                     
  7358                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  7359  0026D0  0E80               	movlw	128
  7360  0026D2  6E6A               	movwf	106,c	;volatile
  7361                           
  7362                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  7363  0026D4  0E59               	movlw	89
  7364  0026D6  6E69               	movwf	105,c	;volatile
  7365                           
  7366                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  7367  0026D8  0E40               	movlw	64
  7368  0026DA  6E68               	movwf	104,c	;volatile
  7369                           
  7370                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  7371  0026DC  013F               	movlb	63	; () banked
  7372  0026DE  515F               	movf	95,w,b	;volatile
  7373  0026E0  0BF3               	andlw	-13
  7374  0026E2  0904               	iorlw	4
  7375  0026E4  6F5F               	movwf	95,b	;volatile
  7376  0026E6                     
  7377                           ; BSR set to: 63
  7378  0026E6  0012               	return		;funcret
  7379  0026E8                     __end_of_PWM6_Initialize:
  7380                           	callstack 0
  7381                           
  7382 ;; *************** function _PWM5_Initialize *****************
  7383 ;; Defined at:
  7384 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 8
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_SYSTEM_Initialize
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text39
  7413  0026E8                     __ptext39:
  7414                           	callstack 0
  7415  0026E8                     _PWM5_Initialize:
  7416                           	callstack 21
  7417  0026E8                     
  7418                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  7419  0026E8  0E80               	movlw	128
  7420  0026EA  6E6E               	movwf	110,c	;volatile
  7421                           
  7422                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  7423  0026EC  0E59               	movlw	89
  7424  0026EE  6E6D               	movwf	109,c	;volatile
  7425                           
  7426                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  7427  0026F0  0E40               	movlw	64
  7428  0026F2  6E6C               	movwf	108,c	;volatile
  7429                           
  7430                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  7431  0026F4  013F               	movlb	63	; () banked
  7432  0026F6  515F               	movf	95,w,b	;volatile
  7433  0026F8  0BFC               	andlw	-4
  7434  0026FA  0901               	iorlw	1
  7435  0026FC  6F5F               	movwf	95,b	;volatile
  7436  0026FE                     
  7437                           ; BSR set to: 63
  7438  0026FE  0012               	return		;funcret
  7439  002700                     __end_of_PWM5_Initialize:
  7440                           	callstack 0
  7441                           
  7442 ;; *************** function _PMD_Initialize *****************
  7443 ;; Defined at:
  7444 ;;		line 86 in file "mcc_generated_files/mcc.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;Total ram usage:        0 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 8
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_SYSTEM_Initialize
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text40
  7473  002600                     __ptext40:
  7474                           	callstack 0
  7475  002600                     _PMD_Initialize:
  7476                           	callstack 21
  7477  002600                     
  7478                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  7479  002600  0E00               	movlw	0
  7480  002602  0139               	movlb	57	; () banked
  7481  002604  6FC0               	movwf	192,b	;volatile
  7482                           
  7483                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  7484  002606  0E00               	movlw	0
  7485  002608  6FC1               	movwf	193,b	;volatile
  7486                           
  7487                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  7488  00260A  0E00               	movlw	0
  7489  00260C  6FC2               	movwf	194,b	;volatile
  7490                           
  7491                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  7492  00260E  0E00               	movlw	0
  7493  002610  6FC3               	movwf	195,b	;volatile
  7494                           
  7495                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  7496  002612  0E00               	movlw	0
  7497  002614  6FC4               	movwf	196,b	;volatile
  7498                           
  7499                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  7500  002616  0E00               	movlw	0
  7501  002618  6FC5               	movwf	197,b	;volatile
  7502                           
  7503                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  7504  00261A  0E00               	movlw	0
  7505  00261C  6FC6               	movwf	198,b	;volatile
  7506                           
  7507                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  7508  00261E  0E00               	movlw	0
  7509  002620  6FC7               	movwf	199,b	;volatile
  7510  002622                     
  7511                           ; BSR set to: 57
  7512  002622  0012               	return		;funcret
  7513  002624                     __end_of_PMD_Initialize:
  7514                           	callstack 0
  7515                           
  7516 ;; *************** function _PIN_MANAGER_Initialize *****************
  7517 ;; Defined at:
  7518 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;		None
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;		None
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  1    wreg      void 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;Total ram usage:        0 bytes
  7537 ;; Hardware stack levels used: 1
  7538 ;; Hardware stack levels required when called: 8
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_SYSTEM_Initialize
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text41
  7547  001B0E                     __ptext41:
  7548                           	callstack 0
  7549  001B0E                     _PIN_MANAGER_Initialize:
  7550                           	callstack 21
  7551  001B0E                     
  7552                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7553  001B0E  0E00               	movlw	0
  7554  001B10  6EBE               	movwf	190,c	;volatile
  7555                           
  7556                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7557  001B12  0E00               	movlw	0
  7558  001B14  6EBD               	movwf	189,c	;volatile
  7559                           
  7560                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  7561  001B16  0E24               	movlw	36
  7562  001B18  6EBA               	movwf	186,c	;volatile
  7563                           
  7564                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7565  001B1A  0E00               	movlw	0
  7566  001B1C  6EBB               	movwf	187,c	;volatile
  7567                           
  7568                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7569  001B1E  0E00               	movlw	0
  7570  001B20  6EBC               	movwf	188,c	;volatile
  7571                           
  7572                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7573  001B22  0E07               	movlw	7
  7574  001B24  6EC6               	movwf	198,c	;volatile
  7575                           
  7576                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  7577  001B26  0EC0               	movlw	192
  7578  001B28  6EC2               	movwf	194,c	;volatile
  7579                           
  7580                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  7581  001B2A  0EF7               	movlw	247
  7582  001B2C  6EC3               	movwf	195,c	;volatile
  7583  001B2E                     
  7584                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7585  001B2E  68C4               	setf	196,c	;volatile
  7586  001B30                     
  7587                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7588  001B30  68C5               	setf	197,c	;volatile
  7589                           
  7590                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  7591  001B32  0E1F               	movlw	31
  7592  001B34  013A               	movlb	58	; () banked
  7593  001B36  6F70               	movwf	112,b	;volatile
  7594  001B38                     
  7595                           ; BSR set to: 58
  7596                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  7597  001B38  6960               	setf	96,b	;volatile
  7598                           
  7599                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  7600  001B3A  0EC0               	movlw	192
  7601  001B3C  6F50               	movwf	80,b	;volatile
  7602                           
  7603                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7604  001B3E  0E07               	movlw	7
  7605  001B40  6F80               	movwf	128,b	;volatile
  7606                           
  7607                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  7608  001B42  0E7F               	movlw	127
  7609  001B44  6F40               	movwf	64,b	;volatile
  7610                           
  7611                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7612  001B46  0E00               	movlw	0
  7613  001B48  6F71               	movwf	113,b	;volatile
  7614                           
  7615                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7616  001B4A  0E00               	movlw	0
  7617  001B4C  6F81               	movwf	129,b	;volatile
  7618                           
  7619                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7620  001B4E  0E00               	movlw	0
  7621  001B50  6F51               	movwf	81,b	;volatile
  7622                           
  7623                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7624  001B52  0E00               	movlw	0
  7625  001B54  6F41               	movwf	65,b	;volatile
  7626                           
  7627                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7628  001B56  0E00               	movlw	0
  7629  001B58  6F61               	movwf	97,b	;volatile
  7630                           
  7631                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  7632  001B5A  0E00               	movlw	0
  7633  001B5C  6F5A               	movwf	90,b	;volatile
  7634                           
  7635                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  7636  001B5E  0E00               	movlw	0
  7637  001B60  6F5B               	movwf	91,b	;volatile
  7638                           
  7639                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  7640  001B62  0E00               	movlw	0
  7641  001B64  6F6A               	movwf	106,b	;volatile
  7642                           
  7643                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  7644  001B66  0E00               	movlw	0
  7645  001B68  6F6B               	movwf	107,b	;volatile
  7646                           
  7647                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  7648  001B6A  0E00               	movlw	0
  7649  001B6C  6F7A               	movwf	122,b	;volatile
  7650                           
  7651                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  7652  001B6E  0E00               	movlw	0
  7653  001B70  6F7B               	movwf	123,b	;volatile
  7654                           
  7655                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  7656  001B72  0E00               	movlw	0
  7657  001B74  6F82               	movwf	130,b	;volatile
  7658                           
  7659                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  7660  001B76  0E00               	movlw	0
  7661  001B78  6F42               	movwf	66,b	;volatile
  7662                           
  7663                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  7664  001B7A  0E00               	movlw	0
  7665  001B7C  6F52               	movwf	82,b	;volatile
  7666                           
  7667                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  7668  001B7E  0E00               	movlw	0
  7669  001B80  6F62               	movwf	98,b	;volatile
  7670                           
  7671                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  7672  001B82  0E00               	movlw	0
  7673  001B84  6F72               	movwf	114,b	;volatile
  7674  001B86                     
  7675                           ; BSR set to: 58
  7676                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  7677  001B86  6943               	setf	67,b	;volatile
  7678  001B88                     
  7679                           ; BSR set to: 58
  7680                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  7681  001B88  6953               	setf	83,b	;volatile
  7682  001B8A                     
  7683                           ; BSR set to: 58
  7684                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  7685  001B8A  6963               	setf	99,b	;volatile
  7686  001B8C                     
  7687                           ; BSR set to: 58
  7688                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  7689  001B8C  6973               	setf	115,b	;volatile
  7690                           
  7691                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  7692  001B8E  0E07               	movlw	7
  7693  001B90  6F83               	movwf	131,b	;volatile
  7694  001B92                     
  7695                           ; BSR set to: 58
  7696                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  7697  001B92  6944               	setf	68,b	;volatile
  7698  001B94                     
  7699                           ; BSR set to: 58
  7700                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  7701  001B94  6954               	setf	84,b	;volatile
  7702  001B96                     
  7703                           ; BSR set to: 58
  7704                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  7705  001B96  6964               	setf	100,b	;volatile
  7706  001B98                     
  7707                           ; BSR set to: 58
  7708                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  7709  001B98  6974               	setf	116,b	;volatile
  7710                           
  7711                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  7712  001B9A  0E0F               	movlw	15
  7713  001B9C  6F84               	movwf	132,b	;volatile
  7714                           
  7715                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  7716  001B9E  0E1F               	movlw	31
  7717  001BA0  6FCF               	movwf	207,b	;volatile
  7718                           
  7719                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  7720  001BA2  0E09               	movlw	9
  7721  001BA4  6FDC               	movwf	220,b	;volatile
  7722                           
  7723                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  7724  001BA6  0E0E               	movlw	14
  7725  001BA8  6F01               	movwf	1,b	;volatile
  7726                           
  7727                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  7728  001BAA  0E0A               	movlw	10
  7729  001BAC  6FE5               	movwf	229,b	;volatile
  7730                           
  7731                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  7732  001BAE  0E0D               	movlw	13
  7733  001BB0  6F00               	movwf	0,b	;volatile
  7734                           
  7735                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  7736  001BB2  0E1D               	movlw	29
  7737  001BB4  6FC9               	movwf	201,b	;volatile
  7738                           
  7739                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  7740  001BB6  0E10               	movlw	16
  7741  001BB8  6F04               	movwf	4,b	;volatile
  7742                           
  7743                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  7744  001BBA  0E07               	movlw	7
  7745  001BBC  6FD9               	movwf	217,b	;volatile
  7746                           
  7747                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  7748  001BBE  0E09               	movlw	9
  7749  001BC0  6FD1               	movwf	209,b	;volatile
  7750                           
  7751                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  7752  001BC2  0E0F               	movlw	15
  7753  001BC4  6F03               	movwf	3,b	;volatile
  7754                           
  7755                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  7756  001BC6  0E13               	movlw	19
  7757  001BC8  6F0B               	movwf	11,b	;volatile
  7758                           
  7759                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  7760  001BCA  0E08               	movlw	8
  7761  001BCC  6FDB               	movwf	219,b	;volatile
  7762                           
  7763                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  7764  001BCE  0E08               	movlw	8
  7765  001BD0  6FD2               	movwf	210,b	;volatile
  7766                           
  7767                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  7768  001BD2  0E1E               	movlw	30
  7769  001BD4  6FD0               	movwf	208,b	;volatile
  7770  001BD6                     
  7771                           ; BSR set to: 58
  7772  001BD6  0012               	return		;funcret
  7773  001BD8                     __end_of_PIN_MANAGER_Initialize:
  7774                           	callstack 0
  7775                           
  7776 ;; *************** function _OSCILLATOR_Initialize *****************
  7777 ;; Defined at:
  7778 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;		None
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;		None
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  1    wreg      void 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;Total ram usage:        0 bytes
  7797 ;; Hardware stack levels used: 1
  7798 ;; Hardware stack levels required when called: 8
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_SYSTEM_Initialize
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text42
  7807  002700                     __ptext42:
  7808                           	callstack 0
  7809  002700                     _OSCILLATOR_Initialize:
  7810                           	callstack 21
  7811  002700                     
  7812                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  7813  002700  0E60               	movlw	96
  7814  002702  0139               	movlb	57	; () banked
  7815  002704  6FD9               	movwf	217,b	;volatile
  7816                           
  7817                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  7818  002706  0E00               	movlw	0
  7819  002708  6FDB               	movwf	219,b	;volatile
  7820                           
  7821                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  7822  00270A  0E00               	movlw	0
  7823  00270C  6FDD               	movwf	221,b	;volatile
  7824                           
  7825                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  7826  00270E  0E08               	movlw	8
  7827  002710  6FDF               	movwf	223,b	;volatile
  7828                           
  7829                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  7830  002712  0E00               	movlw	0
  7831  002714  6FDE               	movwf	222,b	;volatile
  7832  002716                     
  7833                           ; BSR set to: 57
  7834  002716  0012               	return		;funcret
  7835  002718                     __end_of_OSCILLATOR_Initialize:
  7836                           	callstack 0
  7837                           
  7838 ;; *************** function _INTERRUPT_Initialize *****************
  7839 ;; Defined at:
  7840 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;		None
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  state           1   19[COMRAM] _Bool 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      void 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;Total ram usage:        1 bytes
  7859 ;; Hardware stack levels used: 1
  7860 ;; Hardware stack levels required when called: 8
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_SYSTEM_Initialize
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text43
  7869  001FFC                     __ptext43:
  7870                           	callstack 0
  7871  001FFC                     _INTERRUPT_Initialize:
  7872                           	callstack 21
  7873  001FFC                     
  7874                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  7875  001FFC  8AD2               	bsf	210,5,c	;volatile
  7876  001FFE                     
  7877                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  7878  001FFE  0E00               	movlw	0
  7879  002000  BED2               	btfsc	16338,7,c	;volatile
  7880  002002  0E01               	movlw	1
  7881  002004  6E14               	movwf	INTERRUPT_Initialize@state^0,c
  7882  002006                     
  7883                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  7884  002006  9ED2               	bcf	16338,7,c	;volatile
  7885                           
  7886                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  7887  002008  0E55               	movlw	85
  7888  00200A  6ED4               	movwf	212,c	;volatile
  7889                           
  7890                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  7891  00200C  0EAA               	movlw	170
  7892  00200E  6ED4               	movwf	212,c	;volatile
  7893  002010                     
  7894                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  7895  002010  90D4               	bcf	212,0,c	;volatile
  7896                           
  7897                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  7898  002012  0E00               	movlw	0
  7899  002014  6ED7               	movwf	215,c	;volatile
  7900                           
  7901                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  7902  002016  0E00               	movlw	0
  7903  002018  6ED6               	movwf	214,c	;volatile
  7904                           
  7905                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  7906  00201A  0E08               	movlw	8
  7907  00201C  6ED5               	movwf	213,c	;volatile
  7908                           
  7909                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  7910  00201E  0E55               	movlw	85
  7911  002020  6ED4               	movwf	212,c	;volatile
  7912                           
  7913                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  7914  002022  0EAA               	movlw	170
  7915  002024  6ED4               	movwf	212,c	;volatile
  7916  002026                     
  7917                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  7918  002026  80D4               	bsf	212,0,c	;volatile
  7919  002028                     
  7920                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  7921  002028  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
  7922  00202A  D002               	bra	u1135
  7923  00202C  9ED2               	bcf	16338,7,c	;volatile
  7924  00202E  D001               	bra	u1136
  7925  002030                     u1135:
  7926  002030  8ED2               	bsf	16338,7,c	;volatile
  7927  002032                     u1136:
  7928  002032                     
  7929                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  7930  002032  0139               	movlb	57	; () banked
  7931  002034  9983               	bcf	131,4,b	;volatile
  7932  002036                     
  7933                           ; BSR set to: 57
  7934                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  7935  002036  9783               	bcf	131,3,b	;volatile
  7936  002038                     
  7937                           ; BSR set to: 57
  7938                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  7939  002038  8F81               	bsf	129,7,b	;volatile
  7940  00203A                     
  7941                           ; BSR set to: 57
  7942                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  7943  00203A  8B81               	bsf	129,5,b	;volatile
  7944  00203C                     
  7945                           ; BSR set to: 57
  7946                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  7947  00203C  8D81               	bsf	129,6,b	;volatile
  7948  00203E                     
  7949                           ; BSR set to: 57
  7950                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
  7951  00203E  818A               	bsf	138,0,b	;volatile
  7952  002040                     
  7953                           ; BSR set to: 57
  7954                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
  7955  002040  8F88               	bsf	136,7,b	;volatile
  7956  002042                     
  7957                           ; BSR set to: 57
  7958                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  7959  002042  9187               	bcf	135,0,b	;volatile
  7960  002044                     
  7961                           ; BSR set to: 57
  7962                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  7963  002044  8389               	bsf	137,1,b	;volatile
  7964  002046                     
  7965                           ; BSR set to: 57
  7966  002046  0012               	return		;funcret
  7967  002048                     __end_of_INTERRUPT_Initialize:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function _CLC3_Initialize *****************
  7971 ;; Defined at:
  7972 ;;		line 58 in file "mcc_generated_files/clc3.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;		None
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      void 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;Total ram usage:        0 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 8
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_SYSTEM_Initialize
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text44
  8001  002554                     __ptext44:
  8002                           	callstack 0
  8003  002554                     _CLC3_Initialize:
  8004                           	callstack 21
  8005  002554                     
  8006                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  8007  002554  0E00               	movlw	0
  8008  002556  013C               	movlb	60	; () banked
  8009  002558  6F61               	movwf	97,b	;volatile
  8010                           
  8011                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
  8012  00255A  0E03               	movlw	3
  8013  00255C  6F62               	movwf	98,b	;volatile
  8014                           
  8015                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
  8016  00255E  0E02               	movlw	2
  8017  002560  6F63               	movwf	99,b	;volatile
  8018                           
  8019                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  8020  002562  0E00               	movlw	0
  8021  002564  6F64               	movwf	100,b	;volatile
  8022                           
  8023                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  8024  002566  0E00               	movlw	0
  8025  002568  6F65               	movwf	101,b	;volatile
  8026                           
  8027                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  8028  00256A  0E02               	movlw	2
  8029  00256C  6F66               	movwf	102,b	;volatile
  8030                           
  8031                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  8032  00256E  0E08               	movlw	8
  8033  002570  6F67               	movwf	103,b	;volatile
  8034                           
  8035                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  8036  002572  0E00               	movlw	0
  8037  002574  6F68               	movwf	104,b	;volatile
  8038                           
  8039                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  8040  002576  0E00               	movlw	0
  8041  002578  6F69               	movwf	105,b	;volatile
  8042                           
  8043                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
  8044  00257A  0E85               	movlw	133
  8045  00257C  6F60               	movwf	96,b	;volatile
  8046  00257E                     
  8047                           ; BSR set to: 60
  8048  00257E  0012               	return		;funcret
  8049  002580                     __end_of_CLC3_Initialize:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function _CCP4_Initialize *****************
  8053 ;; Defined at:
  8054 ;;		line 78 in file "mcc_generated_files/ccp4.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, status,0, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 9
  8075 ;; This function calls:
  8076 ;;		_CCP4_SetCallBack
  8077 ;; This function is called by:
  8078 ;;		_SYSTEM_Initialize
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text45
  8083  0024CC                     __ptext45:
  8084                           	callstack 0
  8085  0024CC                     _CCP4_Initialize:
  8086                           	callstack 20
  8087  0024CC                     
  8088                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
  8089  0024CC  0E83               	movlw	131
  8090  0024CE  6E72               	movwf	114,c	;volatile
  8091                           
  8092                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
  8093  0024D0  0E00               	movlw	0
  8094  0024D2  6E73               	movwf	115,c	;volatile
  8095                           
  8096                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
  8097  0024D4  0E00               	movlw	0
  8098  0024D6  6E71               	movwf	113,c	;volatile
  8099                           
  8100                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
  8101  0024D8  0E00               	movlw	0
  8102  0024DA  6E70               	movwf	112,c	;volatile
  8103  0024DC                     
  8104                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  8105  0024DC  0E9C               	movlw	low _CCP4_DefaultCallBack
  8106  0024DE  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
  8107  0024E0  0E24               	movlw	high _CCP4_DefaultCallBack
  8108  0024E2  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  8109  0024E4  ECB6  F013         	call	_CCP4_SetCallBack	;wreg free
  8110  0024E8                     
  8111                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
  8112  0024E8  013F               	movlb	63	; () banked
  8113  0024EA  515E               	movf	94,w,b	;volatile
  8114  0024EC  0B3F               	andlw	-193
  8115  0024EE  0980               	iorlw	128
  8116  0024F0  6F5E               	movwf	94,b	;volatile
  8117  0024F2                     
  8118                           ; BSR set to: 63
  8119                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
  8120  0024F2  0139               	movlb	57	; () banked
  8121  0024F4  91AA               	bcf	170,0,b	;volatile
  8122  0024F6                     
  8123                           ; BSR set to: 57
  8124                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
  8125  0024F6  819A               	bsf	154,0,b	;volatile
  8126  0024F8                     
  8127                           ; BSR set to: 57
  8128  0024F8  0012               	return		;funcret
  8129  0024FA                     __end_of_CCP4_Initialize:
  8130                           	callstack 0
  8131                           
  8132 ;; *************** function _CCP4_SetCallBack *****************
  8133 ;; Defined at:
  8134 ;;		line 75 in file "mcc_generated_files/ccp4.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8137 ;;		 -> CCP4_DefaultCallBack(1), 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;Total ram usage:        2 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; Hardware stack levels required when called: 8
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_CCP4_Initialize
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text46
  8164  00276C                     __ptext46:
  8165                           	callstack 0
  8166  00276C                     _CCP4_SetCallBack:
  8167                           	callstack 20
  8168  00276C                     
  8169                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
  8170  00276C  C014  F0D4         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
  8171  002770  C015  F0D5         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
  8172  002774  0012               	return		;funcret
  8173  002776                     __end_of_CCP4_SetCallBack:
  8174                           	callstack 0
  8175                           
  8176 ;; *************** function _CCP3_Initialize *****************
  8177 ;; Defined at:
  8178 ;;		line 75 in file "mcc_generated_files/ccp3.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2, status,0, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;Total ram usage:        0 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; Hardware stack levels required when called: 9
  8199 ;; This function calls:
  8200 ;;		_CCP3_SetCallBack
  8201 ;; This function is called by:
  8202 ;;		_SYSTEM_Initialize
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text47
  8207  0024FA                     __ptext47:
  8208                           	callstack 0
  8209  0024FA                     _CCP3_Initialize:
  8210                           	callstack 20
  8211  0024FA                     
  8212                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
  8213  0024FA  0E83               	movlw	131
  8214  0024FC  6E76               	movwf	118,c	;volatile
  8215                           
  8216                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
  8217  0024FE  0E00               	movlw	0
  8218  002500  6E77               	movwf	119,c	;volatile
  8219                           
  8220                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
  8221  002502  0E00               	movlw	0
  8222  002504  6E75               	movwf	117,c	;volatile
  8223                           
  8224                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
  8225  002506  0E00               	movlw	0
  8226  002508  6E74               	movwf	116,c	;volatile
  8227  00250A                     
  8228                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  8229  00250A  0E6C               	movlw	low _CCP3_DefaultCallBack
  8230  00250C  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
  8231  00250E  0E24               	movlw	high _CCP3_DefaultCallBack
  8232  002510  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
  8233  002512  ECBB  F013         	call	_CCP3_SetCallBack	;wreg free
  8234  002516                     
  8235                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
  8236  002516  013F               	movlb	63	; () banked
  8237  002518  515E               	movf	94,w,b	;volatile
  8238  00251A  0BCF               	andlw	-49
  8239  00251C  0920               	iorlw	32
  8240  00251E  6F5E               	movwf	94,b	;volatile
  8241  002520                     
  8242                           ; BSR set to: 63
  8243                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
  8244  002520  0139               	movlb	57	; () banked
  8245  002522  93A9               	bcf	169,1,b	;volatile
  8246  002524                     
  8247                           ; BSR set to: 57
  8248                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
  8249  002524  8399               	bsf	153,1,b	;volatile
  8250  002526                     
  8251                           ; BSR set to: 57
  8252  002526  0012               	return		;funcret
  8253  002528                     __end_of_CCP3_Initialize:
  8254                           	callstack 0
  8255                           
  8256 ;; *************** function _CCP3_SetCallBack *****************
  8257 ;; Defined at:
  8258 ;;		line 119 in file "mcc_generated_files/ccp3.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8261 ;;		 -> CCP3_DefaultCallBack(1), 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;Total ram usage:        2 bytes
  8278 ;; Hardware stack levels used: 1
  8279 ;; Hardware stack levels required when called: 8
  8280 ;; This function calls:
  8281 ;;		Nothing
  8282 ;; This function is called by:
  8283 ;;		_CCP3_Initialize
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           	psect	text48
  8288  002776                     __ptext48:
  8289                           	callstack 0
  8290  002776                     _CCP3_SetCallBack:
  8291                           	callstack 20
  8292  002776                     
  8293                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
  8294  002776  C014  F0D6         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
  8295  00277A  C015  F0D7         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
  8296  00277E  0012               	return		;funcret
  8297  002780                     __end_of_CCP3_SetCallBack:
  8298                           	callstack 0
  8299                           
  8300 ;; *************** function _ADCC_Initialize *****************
  8301 ;; Defined at:
  8302 ;;		line 62 in file "mcc_generated_files/adcc.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;		None
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, status,2
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;Total ram usage:        0 bytes
  8321 ;; Hardware stack levels used: 1
  8322 ;; Hardware stack levels required when called: 8
  8323 ;; This function calls:
  8324 ;;		Nothing
  8325 ;; This function is called by:
  8326 ;;		_SYSTEM_Initialize
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text49
  8331  001F4A                     __ptext49:
  8332                           	callstack 0
  8333  001F4A                     _ADCC_Initialize:
  8334                           	callstack 21
  8335  001F4A                     
  8336                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  8337  001F4A  0E00               	movlw	0
  8338  001F4C  013E               	movlb	62	; () banked
  8339  001F4E  6FDE               	movwf	222,b	;volatile
  8340                           
  8341                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  8342  001F50  0E00               	movlw	0
  8343  001F52  6FDF               	movwf	223,b	;volatile
  8344                           
  8345                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  8346  001F54  0E00               	movlw	0
  8347  001F56  6FE0               	movwf	224,b	;volatile
  8348                           
  8349                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  8350  001F58  0E00               	movlw	0
  8351  001F5A  6FE1               	movwf	225,b	;volatile
  8352                           
  8353                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  8354  001F5C  0E00               	movlw	0
  8355  001F5E  6FE4               	movwf	228,b	;volatile
  8356                           
  8357                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  8358  001F60  0E00               	movlw	0
  8359  001F62  6FE5               	movwf	229,b	;volatile
  8360                           
  8361                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  8362  001F64  0E00               	movlw	0
  8363  001F66  6FEA               	movwf	234,b	;volatile
  8364                           
  8365                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  8366  001F68  0E00               	movlw	0
  8367  001F6A  6FEC               	movwf	236,b	;volatile
  8368                           
  8369                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  8370  001F6C  0E00               	movlw	0
  8371  001F6E  6FF1               	movwf	241,b	;volatile
  8372                           
  8373                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
  8374  001F70  0E58               	movlw	88
  8375  001F72  6FF3               	movwf	243,b	;volatile
  8376                           
  8377                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
  8378  001F74  0E02               	movlw	2
  8379  001F76  6FF4               	movwf	244,b	;volatile
  8380                           
  8381                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  8382  001F78  0E00               	movlw	0
  8383  001F7A  6FF5               	movwf	245,b	;volatile
  8384                           
  8385                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  8386  001F7C  0E00               	movlw	0
  8387  001F7E  6FF6               	movwf	246,b	;volatile
  8388                           
  8389                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  8390  001F80  0E00               	movlw	0
  8391  001F82  6FF7               	movwf	247,b	;volatile
  8392                           
  8393                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  8394  001F84  0E00               	movlw	0
  8395  001F86  6FF9               	movwf	249,b	;volatile
  8396                           
  8397                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  8398  001F88  0E00               	movlw	0
  8399  001F8A  6FFA               	movwf	250,b	;volatile
  8400                           
  8401                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  8402  001F8C  0E00               	movlw	0
  8403  001F8E  6FFB               	movwf	251,b	;volatile
  8404                           
  8405                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  8406  001F90  0E00               	movlw	0
  8407  001F92  6FFC               	movwf	252,b	;volatile
  8408                           
  8409                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  8410  001F94  0E00               	movlw	0
  8411  001F96  6FFD               	movwf	253,b	;volatile
  8412                           
  8413                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  8414  001F98  0E00               	movlw	0
  8415  001F9A  6FFE               	movwf	254,b	;volatile
  8416                           
  8417                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  8418  001F9C  0E1F               	movlw	31
  8419  001F9E  6FFF               	movwf	255,b	;volatile
  8420                           
  8421                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  8422  001FA0  0E84               	movlw	132
  8423  001FA2  6FF8               	movwf	248,b	;volatile
  8424  001FA4                     
  8425                           ; BSR set to: 62
  8426  001FA4  0012               	return		;funcret
  8427  001FA6                     __end_of_ADCC_Initialize:
  8428                           	callstack 0
  8429                           
  8430 ;; *************** function _UART1_tx_vect_isr *****************
  8431 ;; Defined at:
  8432 ;;		line 235 in file "mcc_generated_files/uart1.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;Total ram usage:        1 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; Hardware stack levels required when called: 5
  8453 ;; This function calls:
  8454 ;;		Absolute function
  8455 ;;		_UART1_Transmit_ISR
  8456 ;; This function is called by:
  8457 ;;		Interrupt level 1
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text50
  8462  0021B0                     __ptext50:
  8463                           	callstack 0
  8464  0021B0                     _UART1_tx_vect_isr:
  8465                           	callstack 20
  8466                           
  8467                           ; BSR set to: 62
  8468                           ;incstack = 0
  8469  0021B0  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
  8470  0021B6                     
  8471                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
  8472  0021B6  0100               	movlb	0	; () banked
  8473  0021B8  51DE               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8474  0021BA  11DF               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8475  0021BC  B4D8               	btfsc	status,2,c
  8476  0021BE  EFE3  F010         	goto	i1u365_21
  8477  0021C2  EFE5  F010         	goto	i1u365_20
  8478  0021C6                     i1u365_21:
  8479  0021C6  EFF2  F010         	goto	i1l324
  8480  0021CA                     i1u365_20:
  8481  0021CA                     
  8482                           ; BSR set to: 0
  8483                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
  8484  0021CA  D802               	call	i1u366_28
  8485  0021CC  EFF2  F010         	goto	i1u366_29
  8486  0021D0                     i1u366_28:
  8487  0021D0  0005               	push	
  8488  0021D2  6EFA               	movwf	pclath,c
  8489  0021D4  51DE               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8490  0021D6  6EFD               	movwf	tosl,c
  8491  0021D8  51DF               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8492  0021DA  6EFE               	movwf	tosh,c
  8493  0021DC  50F8               	movf	tblptru,w,c
  8494  0021DE  6EFF               	movwf	tosu,c
  8495  0021E0  50FA               	movf	pclath,w,c
  8496  0021E2  0012               	return		;indir
  8497  0021E4                     i1u366_29:
  8498  0021E4                     i1l324:
  8499  0021E4  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
  8500  0021EA  0011               	retfie		f
  8501  0021EC                     __end_of_UART1_tx_vect_isr:
  8502                           	callstack 0
  8503                           
  8504 ;; *************** function _UART1_Transmit_ISR *****************
  8505 ;; Defined at:
  8506 ;;		line 253 in file "mcc_generated_files/uart1.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;		None
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;		None
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;Total ram usage:        0 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 4
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_UART1_Initialize
  8531 ;;		_UART1_tx_vect_isr
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text51
  8536  002126                     __ptext51:
  8537                           	callstack 0
  8538  002126                     _UART1_Transmit_ISR:
  8539                           	callstack 20
  8540  002126                     
  8541                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8542  002126  0E08               	movlw	8
  8543  002128  0100               	movlb	0	; () banked
  8544  00212A  61E2               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
  8545  00212C  EF9A  F010         	goto	i1u349_21
  8546  002130  EF9C  F010         	goto	i1u349_20
  8547  002134                     i1u349_21:
  8548  002134  EFB4  F010         	goto	i1l333
  8549  002138                     i1u349_20:
  8550  002138                     
  8551                           ; BSR set to: 0
  8552                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8553  002138  0E70               	movlw	low _uart1TxBuffer
  8554  00213A  2444               	addwf	_uart1TxTail^0,w,c	;volatile
  8555  00213C  6ED9               	movwf	fsr2l,c
  8556  00213E  6ADA               	clrf	fsr2h,c
  8557  002140  0E00               	movlw	high _uart1TxBuffer
  8558  002142  22DA               	addwfc	fsr2h,f,c
  8559  002144  50DF               	movf	indf2,w,c
  8560  002146  013D               	movlb	61	; () banked
  8561  002148  6FEA               	movwf	234,b	;volatile
  8562  00214A                     
  8563                           ; BSR set to: 61
  8564  00214A  2A44               	incf	_uart1TxTail^0,f,c	;volatile
  8565  00214C                     
  8566                           ; BSR set to: 61
  8567                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8568  00214C  0E07               	movlw	7
  8569  00214E  6444               	cpfsgt	_uart1TxTail^0,c	;volatile
  8570  002150  EFAC  F010         	goto	i1u350_21
  8571  002154  EFAE  F010         	goto	i1u350_20
  8572  002158                     i1u350_21:
  8573  002158  EFB0  F010         	goto	i1l4911
  8574  00215C                     i1u350_20:
  8575  00215C                     
  8576                           ; BSR set to: 61
  8577                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
  8578  00215C  0E00               	movlw	0
  8579  00215E  6E44               	movwf	_uart1TxTail^0,c	;volatile
  8580  002160                     i1l4911:
  8581                           
  8582                           ; BSR set to: 61
  8583                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
  8584  002160  0100               	movlb	0	; () banked
  8585  002162  2BE2               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8586                           
  8587                           ;mcc_generated_files/uart1.c: 264:     }
  8588  002164  EFB6  F010         	goto	i1l336
  8589  002168                     i1l333:
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
  8593  002168  0139               	movlb	57	; () banked
  8594  00216A  9993               	bcf	147,4,b	;volatile
  8595  00216C                     i1l336:
  8596  00216C  0012               	return		;funcret
  8597  00216E                     __end_of_UART1_Transmit_ISR:
  8598                           	callstack 0
  8599                           
  8600 ;; *************** function _UART1_rx_vect_isr *****************
  8601 ;; Defined at:
  8602 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;		None
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  1    wreg      void 
  8609 ;; Registers used:
  8610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;Total ram usage:        1 bytes
  8621 ;; Hardware stack levels used: 1
  8622 ;; Hardware stack levels required when called: 7
  8623 ;; This function calls:
  8624 ;;		Absolute function
  8625 ;;		_UART1_Receive_ISR
  8626 ;; This function is called by:
  8627 ;;		Interrupt level 1
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           	psect	text52
  8632  0021EC                     __ptext52:
  8633                           	callstack 0
  8634  0021EC                     _UART1_rx_vect_isr:
  8635                           	callstack 18
  8636                           
  8637                           ;incstack = 0
  8638  0021EC  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
  8639  0021F2                     
  8640                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
  8641  0021F2  0100               	movlb	0	; () banked
  8642  0021F4  51E0               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8643  0021F6  11E1               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8644  0021F8  B4D8               	btfsc	status,2,c
  8645  0021FA  EF01  F011         	goto	i1u367_21
  8646  0021FE  EF03  F011         	goto	i1u367_20
  8647  002202                     i1u367_21:
  8648  002202  EF10  F011         	goto	i1l330
  8649  002206                     i1u367_20:
  8650  002206                     
  8651                           ; BSR set to: 0
  8652                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
  8653  002206  D802               	call	i1u368_28
  8654  002208  EF10  F011         	goto	i1u368_29
  8655  00220C                     i1u368_28:
  8656  00220C  0005               	push	
  8657  00220E  6EFA               	movwf	pclath,c
  8658  002210  51E0               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8659  002212  6EFD               	movwf	tosl,c
  8660  002214  51E1               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8661  002216  6EFE               	movwf	tosh,c
  8662  002218  50F8               	movf	tblptru,w,c
  8663  00221A  6EFF               	movwf	tosu,c
  8664  00221C  50FA               	movf	pclath,w,c
  8665  00221E  0012               	return		;indir
  8666  002220                     i1u368_29:
  8667  002220                     i1l330:
  8668  002220  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
  8669  002226  0011               	retfie		f
  8670  002228                     __end_of_UART1_rx_vect_isr:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _UART1_Receive_ISR *****************
  8674 ;; Defined at:
  8675 ;;		line 273 in file "mcc_generated_files/uart1.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;		None
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      void 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;Total ram usage:        0 bytes
  8694 ;; Hardware stack levels used: 1
  8695 ;; Hardware stack levels required when called: 6
  8696 ;; This function calls:
  8697 ;;		Absolute function
  8698 ;;		_UART1_DefaultErrorHandler
  8699 ;;		_UART1_DefaultFramingErrorHandler
  8700 ;;		_UART1_DefaultOverrunErrorHandler
  8701 ;;		_UART1_RxDataHandler
  8702 ;; This function is called by:
  8703 ;;		_UART1_Initialize
  8704 ;;		_UART1_rx_vect_isr
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text53
  8709  001BD8                     __ptext53:
  8710                           	callstack 0
  8711  001BD8                     _UART1_Receive_ISR:
  8712                           	callstack 18
  8713  001BD8                     
  8714                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8715  001BD8  0E60               	movlw	low _uart1RxStatusBuffer
  8716  001BDA  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8717  001BDC  6ED9               	movwf	fsr2l,c
  8718  001BDE  6ADA               	clrf	fsr2h,c
  8719  001BE0  0E00               	movlw	high _uart1RxStatusBuffer
  8720  001BE2  22DA               	addwfc	fsr2h,f,c
  8721  001BE4  0E00               	movlw	0
  8722  001BE6  6EDF               	movwf	indf2,c
  8723  001BE8                     
  8724                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
  8725  001BE8  013D               	movlb	61	; () banked
  8726  001BEA  A7F9               	btfss	249,3,b	;volatile
  8727  001BEC  EFFA  F00D         	goto	i1u351_21
  8728  001BF0  EFFC  F00D         	goto	i1u351_20
  8729  001BF4                     i1u351_21:
  8730  001BF4  EF11  F00E         	goto	i1l4921
  8731  001BF8                     i1u351_20:
  8732  001BF8                     
  8733                           ; BSR set to: 61
  8734                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8735  001BF8  0E60               	movlw	low _uart1RxStatusBuffer
  8736  001BFA  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8737  001BFC  6ED9               	movwf	fsr2l,c
  8738  001BFE  6ADA               	clrf	fsr2h,c
  8739  001C00  0E00               	movlw	high _uart1RxStatusBuffer
  8740  001C02  22DA               	addwfc	fsr2h,f,c
  8741  001C04  0100               	movlb	0	; () banked
  8742  001C06  82DF               	bsf	indf2,1,c
  8743  001C08                     
  8744                           ; BSR set to: 0
  8745                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
  8746  001C08  D802               	call	i1u352_28
  8747  001C0A  EF11  F00E         	goto	i1u352_29
  8748  001C0E                     i1u352_28:
  8749  001C0E  0005               	push	
  8750  001C10  6EFA               	movwf	pclath,c
  8751  001C12  51DC               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8752  001C14  6EFD               	movwf	tosl,c
  8753  001C16  51DD               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8754  001C18  6EFE               	movwf	tosh,c
  8755  001C1A  50F8               	movf	tblptru,w,c
  8756  001C1C  6EFF               	movwf	tosu,c
  8757  001C1E  50FA               	movf	pclath,w,c
  8758  001C20  0012               	return		;indir
  8759  001C22                     i1u352_29:
  8760  001C22                     i1l4921:
  8761                           
  8762                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
  8763  001C22  013D               	movlb	61	; () banked
  8764  001C24  A3F9               	btfss	249,1,b	;volatile
  8765  001C26  EF17  F00E         	goto	i1u353_21
  8766  001C2A  EF19  F00E         	goto	i1u353_20
  8767  001C2E                     i1u353_21:
  8768  001C2E  EF2E  F00E         	goto	i1l4927
  8769  001C32                     i1u353_20:
  8770  001C32                     
  8771                           ; BSR set to: 61
  8772                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  8773  001C32  0E60               	movlw	low _uart1RxStatusBuffer
  8774  001C34  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8775  001C36  6ED9               	movwf	fsr2l,c
  8776  001C38  6ADA               	clrf	fsr2h,c
  8777  001C3A  0E00               	movlw	high _uart1RxStatusBuffer
  8778  001C3C  22DA               	addwfc	fsr2h,f,c
  8779  001C3E  0100               	movlb	0	; () banked
  8780  001C40  84DF               	bsf	indf2,2,c
  8781  001C42                     
  8782                           ; BSR set to: 0
  8783                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
  8784  001C42  D802               	call	i1u354_28
  8785  001C44  EF2E  F00E         	goto	i1u354_29
  8786  001C48                     i1u354_28:
  8787  001C48  0005               	push	
  8788  001C4A  6EFA               	movwf	pclath,c
  8789  001C4C  51DA               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  8790  001C4E  6EFD               	movwf	tosl,c
  8791  001C50  51DB               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  8792  001C52  6EFE               	movwf	tosh,c
  8793  001C54  50F8               	movf	tblptru,w,c
  8794  001C56  6EFF               	movwf	tosu,c
  8795  001C58  50FA               	movf	pclath,w,c
  8796  001C5A  0012               	return		;indir
  8797  001C5C                     i1u354_29:
  8798  001C5C                     i1l4927:
  8799                           
  8800                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
  8801  001C5C  0E60               	movlw	low _uart1RxStatusBuffer
  8802  001C5E  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8803  001C60  6ED9               	movwf	fsr2l,c
  8804  001C62  6ADA               	clrf	fsr2h,c
  8805  001C64  0E00               	movlw	high _uart1RxStatusBuffer
  8806  001C66  22DA               	addwfc	fsr2h,f,c
  8807  001C68  50DF               	movf	indf2,w,c
  8808  001C6A  B4D8               	btfsc	status,2,c
  8809  001C6C  EF3A  F00E         	goto	i1u355_21
  8810  001C70  EF3C  F00E         	goto	i1u355_20
  8811  001C74                     i1u355_21:
  8812  001C74  EF4C  F00E         	goto	i1l4931
  8813  001C78                     i1u355_20:
  8814  001C78                     
  8815                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
  8816  001C78  D802               	call	i1u356_28
  8817  001C7A  EF4A  F00E         	goto	i1u356_29
  8818  001C7E                     i1u356_28:
  8819  001C7E  0005               	push	
  8820  001C80  0100               	movlb	0	; () banked
  8821  001C82  6EFA               	movwf	pclath,c
  8822  001C84  51D8               	movf	_UART1_ErrorHandler& (0+255),w,b
  8823  001C86  6EFD               	movwf	tosl,c
  8824  001C88  51D9               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  8825  001C8A  6EFE               	movwf	tosh,c
  8826  001C8C  50F8               	movf	tblptru,w,c
  8827  001C8E  6EFF               	movwf	tosu,c
  8828  001C90  50FA               	movf	pclath,w,c
  8829  001C92  0012               	return		;indir
  8830  001C94                     i1u356_29:
  8831                           
  8832                           ;mcc_generated_files/uart1.c: 290:     } else {
  8833  001C94  EF4E  F00E         	goto	i1l343
  8834  001C98                     i1l4931:
  8835                           
  8836                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
  8837  001C98  ECC0  F012         	call	_UART1_RxDataHandler	;wreg free
  8838  001C9C                     i1l343:
  8839  001C9C  0012               	return		;funcret
  8840  001C9E                     __end_of_UART1_Receive_ISR:
  8841                           	callstack 0
  8842                           
  8843 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  8844 ;; Defined at:
  8845 ;;		line 309 in file "mcc_generated_files/uart1.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;		None
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      void 
  8852 ;; Registers used:
  8853 ;;		None
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;Total ram usage:        0 bytes
  8864 ;; Hardware stack levels used: 1
  8865 ;; Hardware stack levels required when called: 4
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_UART1_Initialize
  8870 ;;		_UART1_Receive_ISR
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text54
  8875  00278C                     __ptext54:
  8876                           	callstack 0
  8877  00278C                     _UART1_DefaultOverrunErrorHandler:
  8878                           	callstack 19
  8879  00278C  0012               	return		;funcret
  8880  00278E                     __end_of_UART1_DefaultOverrunErrorHandler:
  8881                           	callstack 0
  8882                           
  8883 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  8884 ;; Defined at:
  8885 ;;		line 307 in file "mcc_generated_files/uart1.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;		None
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;		None
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		None
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;Total ram usage:        0 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 4
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_UART1_Initialize
  8910 ;;		_UART1_Receive_ISR
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text55
  8915  00278E                     __ptext55:
  8916                           	callstack 0
  8917  00278E                     _UART1_DefaultFramingErrorHandler:
  8918                           	callstack 19
  8919  00278E  0012               	return		;funcret
  8920  002790                     __end_of_UART1_DefaultFramingErrorHandler:
  8921                           	callstack 0
  8922                           
  8923 ;; *************** function _UART1_DefaultErrorHandler *****************
  8924 ;; Defined at:
  8925 ;;		line 311 in file "mcc_generated_files/uart1.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used: 1
  8945 ;; Hardware stack levels required when called: 5
  8946 ;; This function calls:
  8947 ;;		_UART1_RxDataHandler
  8948 ;; This function is called by:
  8949 ;;		_UART1_Initialize
  8950 ;;		_UART1_Receive_ISR
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           	psect	text56
  8955  002780                     __ptext56:
  8956                           	callstack 0
  8957  002780                     _UART1_DefaultErrorHandler:
  8958                           	callstack 18
  8959  002780                     
  8960                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
  8961  002780  ECC0  F012         	call	_UART1_RxDataHandler	;wreg free
  8962  002784  0012               	return		;funcret
  8963  002786                     __end_of_UART1_DefaultErrorHandler:
  8964                           	callstack 0
  8965                           
  8966 ;; *************** function _UART1_RxDataHandler *****************
  8967 ;; Defined at:
  8968 ;;		line 297 in file "mcc_generated_files/uart1.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;Total ram usage:        0 bytes
  8987 ;; Hardware stack levels used: 1
  8988 ;; Hardware stack levels required when called: 4
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_UART1_Receive_ISR
  8993 ;;		_UART1_DefaultErrorHandler
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text57
  8998  002580                     __ptext57:
  8999                           	callstack 0
  9000  002580                     _UART1_RxDataHandler:
  9001                           	callstack 19
  9002  002580                     
  9003                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  9004  002580  0E68               	movlw	low _uart1RxBuffer
  9005  002582  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  9006  002584  6ED9               	movwf	fsr2l,c
  9007  002586  6ADA               	clrf	fsr2h,c
  9008  002588  0E00               	movlw	high _uart1RxBuffer
  9009  00258A  22DA               	addwfc	fsr2h,f,c
  9010  00258C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9011  002592  2A43               	incf	_uart1RxHead^0,f,c	;volatile
  9012  002594                     
  9013                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  9014  002594  0E07               	movlw	7
  9015  002596  6443               	cpfsgt	_uart1RxHead^0,c	;volatile
  9016  002598  EFD0  F012         	goto	i1u247_21
  9017  00259C  EFD2  F012         	goto	i1u247_20
  9018  0025A0                     i1u247_21:
  9019  0025A0  EFD4  F012         	goto	i1l4159
  9020  0025A4                     i1u247_20:
  9021  0025A4                     
  9022                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
  9023  0025A4  0E00               	movlw	0
  9024  0025A6  6E43               	movwf	_uart1RxHead^0,c	;volatile
  9025  0025A8                     i1l4159:
  9026                           
  9027                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
  9028  0025A8  2A41               	incf	_uart1RxCount^0,f,c	;volatile
  9029  0025AA  0012               	return		;funcret
  9030  0025AC                     __end_of_UART1_RxDataHandler:
  9031                           	callstack 0
  9032                           
  9033 ;; *************** function _TMR4_ISR *****************
  9034 ;; Defined at:
  9035 ;;		line 166 in file "mcc_generated_files/tmr4.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;		None
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;		None
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;Total ram usage:        1 bytes
  9054 ;; Hardware stack levels used: 1
  9055 ;; Hardware stack levels required when called: 6
  9056 ;; This function calls:
  9057 ;;		_TMR4_CallBack
  9058 ;; This function is called by:
  9059 ;;		Interrupt level 1
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text58
  9064  002260                     __ptext58:
  9065                           	callstack 0
  9066  002260                     _TMR4_ISR:
  9067                           	callstack 19
  9068                           
  9069                           ;incstack = 0
  9070  002260  006F FF60  F013    	movff	status,??_TMR4_ISR
  9071  002266                     
  9072                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
  9073  002266  0139               	movlb	57	; () banked
  9074  002268  91A7               	bcf	167,0,b	;volatile
  9075  00226A                     
  9076                           ; BSR set to: 57
  9077                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
  9078  00226A  4A3C               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
  9079  00226C  2A3D               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
  9080  00226E  503D               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
  9081  002270  E109               	bnz	i1u373_20
  9082  002272  0E0A               	movlw	10
  9083  002274  5C3C               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
  9084  002276  A0D8               	btfss	status,0,c
  9085  002278  EF40  F011         	goto	i1u373_21
  9086  00227C  EF42  F011         	goto	i1u373_20
  9087  002280                     i1u373_21:
  9088  002280  EF48  F011         	goto	i1l688
  9089  002284                     i1u373_20:
  9090  002284                     
  9091                           ; BSR set to: 57
  9092                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
  9093  002284  EC1E  F012         	call	_TMR4_CallBack	;wreg free
  9094  002288                     
  9095                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
  9096  002288  0E00               	movlw	0
  9097  00228A  6E3D               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
  9098  00228C  0E00               	movlw	0
  9099  00228E  6E3C               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
  9100  002290                     i1l688:
  9101  002290  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
  9102  002296  0011               	retfie		f
  9103  002298                     __end_of_TMR4_ISR:
  9104                           	callstack 0
  9105                           
  9106 ;; *************** function _TMR4_CallBack *****************
  9107 ;; Defined at:
  9108 ;;		line 184 in file "mcc_generated_files/tmr4.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;		None
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;Total ram usage:        0 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 5
  9129 ;; This function calls:
  9130 ;;		Absolute function
  9131 ;;		_TMR4_10msISR
  9132 ;;		_TMR4_DefaultInterruptHandler
  9133 ;; This function is called by:
  9134 ;;		_TMR4_ISR
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text59
  9139  00243C                     __ptext59:
  9140                           	callstack 0
  9141  00243C                     _TMR4_CallBack:
  9142                           	callstack 19
  9143  00243C                     
  9144                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
  9145  00243C  0100               	movlb	0	; () banked
  9146  00243E  51CC               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9147  002440  11CD               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9148  002442  B4D8               	btfsc	status,2,c
  9149  002444  EF26  F012         	goto	i1u360_21
  9150  002448  EF28  F012         	goto	i1u360_20
  9151  00244C                     i1u360_21:
  9152  00244C  EF35  F012         	goto	i1l692
  9153  002450                     i1u360_20:
  9154  002450                     
  9155                           ; BSR set to: 0
  9156                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
  9157  002450  D802               	call	i1u361_28
  9158  002452  EF35  F012         	goto	i1u361_29
  9159  002456                     i1u361_28:
  9160  002456  0005               	push	
  9161  002458  6EFA               	movwf	pclath,c
  9162  00245A  51CC               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9163  00245C  6EFD               	movwf	tosl,c
  9164  00245E  51CD               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9165  002460  6EFE               	movwf	tosh,c
  9166  002462  50F8               	movf	tblptru,w,c
  9167  002464  6EFF               	movwf	tosu,c
  9168  002466  50FA               	movf	pclath,w,c
  9169  002468  0012               	return		;indir
  9170  00246A                     i1u361_29:
  9171  00246A                     i1l692:
  9172  00246A  0012               	return		;funcret
  9173  00246C                     __end_of_TMR4_CallBack:
  9174                           	callstack 0
  9175                           
  9176 ;; *************** function _TMR4_10msISR *****************
  9177 ;; Defined at:
  9178 ;;		line 64 in file "main.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		status,2, status,0
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;Total ram usage:        0 bytes
  9197 ;; Hardware stack levels used: 1
  9198 ;; Hardware stack levels required when called: 4
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_main
  9203 ;;		_TMR4_CallBack
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text60
  9208  002786                     __ptext60:
  9209                           	callstack 0
  9210  002786                     _TMR4_10msISR:
  9211                           	callstack 19
  9212  002786                     
  9213                           ;main.c: 65:     ++cycle10ms;
  9214  002786  0100               	movlb	0	; () banked
  9215  002788  2B9E               	incf	_cycle10ms& (0+255),f,b	;volatile
  9216  00278A                     
  9217                           ; BSR set to: 0
  9218  00278A  0012               	return		;funcret
  9219  00278C                     __end_of_TMR4_10msISR:
  9220                           	callstack 0
  9221                           
  9222 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9223 ;; Defined at:
  9224 ;;		line 198 in file "mcc_generated_files/tmr4.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;		None
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;		None
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		None
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;Total ram usage:        0 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; Hardware stack levels required when called: 4
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_TMR4_Initialize
  9249 ;;		_TMR4_CallBack
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text61
  9254  002790                     __ptext61:
  9255                           	callstack 0
  9256  002790                     _TMR4_DefaultInterruptHandler:
  9257                           	callstack 19
  9258  002790  0012               	return		;funcret
  9259  002792                     __end_of_TMR4_DefaultInterruptHandler:
  9260                           	callstack 0
  9261                           
  9262 ;; *************** function _Default_ISR *****************
  9263 ;; Defined at:
  9264 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;		None
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;		None
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  1    wreg      void 
  9271 ;; Registers used:
  9272 ;;		None
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;Total ram usage:        0 bytes
  9283 ;; Hardware stack levels used: 1
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		Interrupt level 2
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text62
  9292  002794                     __ptext62:
  9293                           	callstack 0
  9294  002794                     _Default_ISR:
  9295                           	callstack 21
  9296  002794  0011               	retfie		f
  9297  002796                     __end_of_Default_ISR:
  9298                           	callstack 0
  9299                           
  9300 ;; *************** function _CCP3_CaptureISR *****************
  9301 ;; Defined at:
  9302 ;;		line 104 in file "mcc_generated_files/ccp3.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;Total ram usage:        2 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 1
  9323 ;; This function calls:
  9324 ;;		Absolute function
  9325 ;;		_CCP3_DefaultCallBack
  9326 ;; This function is called by:
  9327 ;;		Interrupt level 2
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text63
  9332  002298                     __ptext63:
  9333                           	callstack 0
  9334  002298                     _CCP3_CaptureISR:
  9335                           	callstack 20
  9336  002298                     
  9337                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
  9338  002298  0139               	movlb	57	; () banked
  9339  00229A  93A9               	bcf	169,1,b	;volatile
  9340                           
  9341                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
  9342  00229C  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
  9343                           
  9344                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
  9345  0022A2  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
  9346  0022A8                     
  9347                           ; BSR set to: 57
  9348                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
  9349  0022A8  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
  9350  0022AC  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
  9351  0022B0  D802               	call	i2u369_48
  9352  0022B2  EF66  F011         	goto	i2u369_49
  9353  0022B6                     i2u369_48:
  9354  0022B6  0005               	push	
  9355  0022B8  0100               	movlb	0	; () banked
  9356  0022BA  6EFA               	movwf	pclath,c
  9357  0022BC  51D6               	movf	_CCP3_CallBack& (0+255),w,b
  9358  0022BE  6EFD               	movwf	tosl,c
  9359  0022C0  51D7               	movf	(_CCP3_CallBack+1)& (0+255),w,b
  9360  0022C2  6EFE               	movwf	tosh,c
  9361  0022C4  50F8               	movf	tblptru,w,c
  9362  0022C6  6EFF               	movwf	tosu,c
  9363  0022C8  50FA               	movf	pclath,w,c
  9364  0022CA  0012               	return		;indir
  9365  0022CC                     i2u369_49:
  9366  0022CC  0011               	retfie		f
  9367  0022CE                     __end_of_CCP3_CaptureISR:
  9368                           	callstack 0
  9369                           
  9370 ;; *************** function _CCP3_DefaultCallBack *****************
  9371 ;; Defined at:
  9372 ;;		line 64 in file "mcc_generated_files/ccp3.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;  capturedValu    2    0[COMRAM] unsigned short 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      void 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;Total ram usage:        2 bytes
  9391 ;; Hardware stack levels used: 1
  9392 ;; This function calls:
  9393 ;;		Nothing
  9394 ;; This function is called by:
  9395 ;;		_CCP3_Initialize
  9396 ;;		_CCP3_CaptureISR
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           	psect	text64
  9401  00246C                     __ptext64:
  9402                           	callstack 0
  9403  00246C                     _CCP3_DefaultCallBack:
  9404                           	callstack 20
  9405  00246C                     
  9406                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
  9407  00246C  AECD               	btfss	205,7,c	;volatile
  9408  00246E  EF3B  F012         	goto	i2u357_41
  9409  002472  EF3D  F012         	goto	i2u357_40
  9410  002476                     i2u357_41:
  9411  002476  EF43  F012         	goto	i2l4937
  9412  00247A                     i2u357_40:
  9413  00247A                     
  9414                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
  9415  00247A  C001  F09A         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
  9416  00247E  C002  F09B         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
  9417                           
  9418                           ;mcc_generated_files/ccp3.c: 69:     } else {
  9419  002482  EF4D  F012         	goto	i2l438
  9420  002486                     i2l4937:
  9421                           
  9422                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
  9423  002486  0100               	movlb	0	; () banked
  9424  002488  519A               	movf	_distLeftM& (0+255),w,b
  9425  00248A  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
  9426  00248C  6F9C               	movwf	_distLeft& (0+255),b	;volatile
  9427  00248E  519B               	movf	(_distLeftM+1)& (0+255),w,b
  9428  002490  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
  9429  002492  6F9D               	movwf	(_distLeft+1)& (0+255),b	;volatile
  9430  002494                     
  9431                           ; BSR set to: 0
  9432                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
  9433  002494  90D8               	bcf	status,0,c
  9434  002496  339D               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
  9435  002498  339C               	rrcf	_distLeft& (0+255),f,b	;volatile
  9436  00249A                     i2l438:
  9437  00249A  0012               	return		;funcret
  9438  00249C                     __end_of_CCP3_DefaultCallBack:
  9439                           	callstack 0
  9440                           
  9441 ;; *************** function _CCP4_CaptureISR *****************
  9442 ;; Defined at:
  9443 ;;		line 107 in file "mcc_generated_files/ccp4.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;		None
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      void 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;Total ram usage:        2 bytes
  9462 ;; Hardware stack levels used: 1
  9463 ;; Hardware stack levels required when called: 1
  9464 ;; This function calls:
  9465 ;;		Absolute function
  9466 ;;		_CCP4_DefaultCallBack
  9467 ;; This function is called by:
  9468 ;;		Interrupt level 2
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text65
  9473  0022D0                     __ptext65:
  9474                           	callstack 0
  9475  0022D0                     _CCP4_CaptureISR:
  9476                           	callstack 20
  9477  0022D0                     
  9478                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
  9479  0022D0  0139               	movlb	57	; () banked
  9480  0022D2  91AA               	bcf	170,0,b	;volatile
  9481                           
  9482                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
  9483  0022D4  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
  9484                           
  9485                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
  9486  0022DA  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
  9487  0022E0                     
  9488                           ; BSR set to: 57
  9489                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
  9490  0022E0  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
  9491  0022E4  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
  9492  0022E8  D802               	call	i2u370_48
  9493  0022EA  EF82  F011         	goto	i2u370_49
  9494  0022EE                     i2u370_48:
  9495  0022EE  0005               	push	
  9496  0022F0  0100               	movlb	0	; () banked
  9497  0022F2  6EFA               	movwf	pclath,c
  9498  0022F4  51D4               	movf	_CCP4_CallBack& (0+255),w,b
  9499  0022F6  6EFD               	movwf	tosl,c
  9500  0022F8  51D5               	movf	(_CCP4_CallBack+1)& (0+255),w,b
  9501  0022FA  6EFE               	movwf	tosh,c
  9502  0022FC  50F8               	movf	tblptru,w,c
  9503  0022FE  6EFF               	movwf	tosu,c
  9504  002300  50FA               	movf	pclath,w,c
  9505  002302  0012               	return		;indir
  9506  002304                     i2u370_49:
  9507  002304  0011               	retfie		f
  9508  002306                     __end_of_CCP4_CaptureISR:
  9509                           	callstack 0
  9510                           
  9511 ;; *************** function _CCP4_DefaultCallBack *****************
  9512 ;; Defined at:
  9513 ;;		line 64 in file "mcc_generated_files/ccp4.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  capturedValu    2    4[COMRAM] unsigned short 
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;		None
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  1    wreg      void 
  9520 ;; Registers used:
  9521 ;;		wreg, status,2, status,0
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;Total ram usage:        2 bytes
  9532 ;; Hardware stack levels used: 1
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_CCP4_Initialize
  9537 ;;		_CCP4_CaptureISR
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text66
  9542  00249C                     __ptext66:
  9543                           	callstack 0
  9544  00249C                     _CCP4_DefaultCallBack:
  9545                           	callstack 20
  9546  00249C                     
  9547                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
  9548  00249C  ACCD               	btfss	205,6,c	;volatile
  9549  00249E  EF53  F012         	goto	i2u358_41
  9550  0024A2  EF55  F012         	goto	i2u358_40
  9551  0024A6                     i2u358_41:
  9552  0024A6  EF5B  F012         	goto	i2l4945
  9553  0024AA                     i2u358_40:
  9554  0024AA                     
  9555                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
  9556  0024AA  C005  F096         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
  9557  0024AE  C006  F097         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
  9558                           
  9559                           ;mcc_generated_files/ccp4.c: 70:     } else {
  9560  0024B2  EF65  F012         	goto	i2l476
  9561  0024B6                     i2l4945:
  9562                           
  9563                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
  9564  0024B6  0100               	movlb	0	; () banked
  9565  0024B8  5196               	movf	_distRightM& (0+255),w,b
  9566  0024BA  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
  9567  0024BC  6F98               	movwf	_distRight& (0+255),b	;volatile
  9568  0024BE  5197               	movf	(_distRightM+1)& (0+255),w,b
  9569  0024C0  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
  9570  0024C2  6F99               	movwf	(_distRight+1)& (0+255),b	;volatile
  9571  0024C4                     
  9572                           ; BSR set to: 0
  9573                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
  9574  0024C4  90D8               	bcf	status,0,c
  9575  0024C6  3399               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
  9576  0024C8  3398               	rrcf	_distRight& (0+255),f,b	;volatile
  9577  0024CA                     i2l476:
  9578  0024CA  0012               	return		;funcret
  9579  0024CC                     __end_of_CCP4_DefaultCallBack:
  9580                           	callstack 0
  9581                           
  9582 ;; *************** function _TMR5_GATE_ISR *****************
  9583 ;; Defined at:
  9584 ;;		line 175 in file "mcc_generated_files/tmr5.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      void 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used: 1
  9604 ;; Hardware stack levels required when called: 3
  9605 ;; This function calls:
  9606 ;;		Absolute function
  9607 ;;		_TMR5_DefaultGateInterruptHandler
  9608 ;; This function is called by:
  9609 ;;		Interrupt level 2
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text67
  9614  0023D8                     __ptext67:
  9615                           	callstack 0
  9616  0023D8                     _TMR5_GATE_ISR:
  9617                           	callstack 18
  9618  0023D8                     
  9619                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
  9620  0023D8  0139               	movlb	57	; () banked
  9621  0023DA  9FA8               	bcf	168,7,b	;volatile
  9622  0023DC                     
  9623                           ; BSR set to: 57
  9624                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
  9625  0023DC  0100               	movlb	0	; () banked
  9626  0023DE  51D0               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9627  0023E0  11D1               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9628  0023E2  B4D8               	btfsc	status,2,c
  9629  0023E4  EFF6  F011         	goto	i2u371_41
  9630  0023E8  EFF8  F011         	goto	i2u371_40
  9631  0023EC                     i2u371_41:
  9632  0023EC  EF05  F012         	goto	i2l552
  9633  0023F0                     i2u371_40:
  9634  0023F0                     
  9635                           ; BSR set to: 0
  9636                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
  9637  0023F0  D802               	call	i2u372_48
  9638  0023F2  EF05  F012         	goto	i2u372_49
  9639  0023F6                     i2u372_48:
  9640  0023F6  0005               	push	
  9641  0023F8  6EFA               	movwf	pclath,c
  9642  0023FA  51D0               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9643  0023FC  6EFD               	movwf	tosl,c
  9644  0023FE  51D1               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9645  002400  6EFE               	movwf	tosh,c
  9646  002402  50F8               	movf	tblptru,w,c
  9647  002404  6EFF               	movwf	tosu,c
  9648  002406  50FA               	movf	pclath,w,c
  9649  002408  0012               	return		;indir
  9650  00240A                     i2u372_49:
  9651  00240A                     i2l552:
  9652  00240A  0011               	retfie		f
  9653  00240C                     __end_of_TMR5_GATE_ISR:
  9654                           	callstack 0
  9655                           
  9656 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
  9657 ;; Defined at:
  9658 ;;		line 190 in file "mcc_generated_files/tmr5.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;		None
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;		None
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      void 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2, status,0, cstack
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;Total ram usage:        0 bytes
  9677 ;; Hardware stack levels used: 1
  9678 ;; Hardware stack levels required when called: 2
  9679 ;; This function calls:
  9680 ;;		_TMR5_ReadTimer
  9681 ;;		_TMR5_Reload
  9682 ;; This function is called by:
  9683 ;;		_TMR5_Initialize
  9684 ;;		_TMR5_GATE_ISR
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text68
  9689  002684                     __ptext68:
  9690                           	callstack 0
  9691  002684                     _TMR5_DefaultGateInterruptHandler:
  9692                           	callstack 18
  9693  002684                     
  9694                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
  9695  002684  EC12  F013         	call	_TMR5_ReadTimer	;wreg free
  9696  002688  C009  F04A         	movff	?_TMR5_ReadTimer,_distFront	;volatile
  9697  00268C  C00A  F04B         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
  9698  002690                     
  9699                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
  9700  002690  90D8               	bcf	status,0,c
  9701  002692  324B               	rrcf	(_distFront+1)^0,f,c	;volatile
  9702  002694  324A               	rrcf	_distFront^0,f,c	;volatile
  9703  002696                     
  9704                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
  9705  002696  EC8C  F013         	call	_TMR5_Reload	;wreg free
  9706  00269A                     
  9707                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
  9708  00269A  0139               	movlb	57	; () banked
  9709  00269C  9FA8               	bcf	168,7,b	;volatile
  9710  00269E                     
  9711                           ; BSR set to: 57
  9712  00269E  0012               	return		;funcret
  9713  0026A0                     __end_of_TMR5_DefaultGateInterruptHandler:
  9714                           	callstack 0
  9715                           
  9716 ;; *************** function _TMR5_Reload *****************
  9717 ;; Defined at:
  9718 ;;		line 155 in file "mcc_generated_files/tmr5.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, status,2, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;Total ram usage:        0 bytes
  9737 ;; Hardware stack levels used: 1
  9738 ;; Hardware stack levels required when called: 1
  9739 ;; This function calls:
  9740 ;;		_TMR5_WriteTimer
  9741 ;; This function is called by:
  9742 ;;		_TMR5_DefaultGateInterruptHandler
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text69
  9747  002718                     __ptext69:
  9748                           	callstack 0
  9749  002718                     _TMR5_Reload:
  9750                           	callstack 18
  9751  002718                     
  9752                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
  9753  002718  C0D2  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  9754  00271C  C0D3  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  9755  002720  ECD6  F012         	call	_TMR5_WriteTimer	;wreg free
  9756  002724  0012               	return		;funcret
  9757  002726                     __end_of_TMR5_Reload:
  9758                           	callstack 0
  9759                           
  9760 ;; *************** function _TMR5_WriteTimer *****************
  9761 ;; Defined at:
  9762 ;;		line 133 in file "mcc_generated_files/tmr5.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  timerVal        2    8[COMRAM] unsigned short 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;		None
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  1    wreg      void 
  9769 ;; Registers used:
  9770 ;;		wreg, status,2
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;Total ram usage:        2 bytes
  9781 ;; Hardware stack levels used: 1
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_TMR5_Reload
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text70
  9790  0025AC                     __ptext70:
  9791                           	callstack 0
  9792  0025AC                     _TMR5_WriteTimer:
  9793                           	callstack 18
  9794  0025AC                     
  9795                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
  9796  0025AC  A49A               	btfss	154,2,c	;volatile
  9797  0025AE  EFDB  F012         	goto	i2u248_41
  9798  0025B2  EFDD  F012         	goto	i2u248_40
  9799  0025B6                     i2u248_41:
  9800  0025B6  EFE6  F012         	goto	i2l4177
  9801  0025BA                     i2u248_40:
  9802  0025BA                     
  9803                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
  9804  0025BA  909A               	bcf	154,0,c	;volatile
  9805  0025BC                     
  9806                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
  9807  0025BC  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9808  0025BE  6E99               	movwf	153,c	;volatile
  9809  0025C0                     
  9810                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
  9811  0025C0  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9812  0025C6                     
  9813                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
  9814  0025C6  809A               	bsf	154,0,c	;volatile
  9815                           
  9816                           ;mcc_generated_files/tmr5.c: 146:     }
  9817  0025C8  EFEB  F012         	goto	i2l534
  9818  0025CC                     i2l4177:
  9819                           
  9820                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
  9821  0025CC  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9822  0025CE  6E99               	movwf	153,c	;volatile
  9823  0025D0                     
  9824                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
  9825  0025D0  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9826  0025D6                     i2l534:
  9827  0025D6  0012               	return		;funcret
  9828  0025D8                     __end_of_TMR5_WriteTimer:
  9829                           	callstack 0
  9830                           
  9831 ;; *************** function _TMR5_ReadTimer *****************
  9832 ;; Defined at:
  9833 ;;		line 117 in file "mcc_generated_files/tmr5.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;		None
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  readVal         2   12[COMRAM] unsigned short 
  9838 ;;  readValLow      1   15[COMRAM] unsigned char 
  9839 ;;  readValHigh     1   14[COMRAM] unsigned char 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  2    8[COMRAM] unsigned short 
  9842 ;; Registers used:
  9843 ;;		wreg, status,2
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9850 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9853 ;;Total ram usage:        8 bytes
  9854 ;; Hardware stack levels used: 1
  9855 ;; This function calls:
  9856 ;;		Nothing
  9857 ;; This function is called by:
  9858 ;;		_TMR5_DefaultGateInterruptHandler
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text71
  9863  002624                     __ptext71:
  9864                           	callstack 0
  9865  002624                     _TMR5_ReadTimer:
  9866                           	callstack 19
  9867  002624                     
  9868                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
  9869  002624  829A               	bsf	154,1,c	;volatile
  9870                           
  9871                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
  9872  002626  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
  9873                           
  9874                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
  9875  00262C  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
  9876  002632                     
  9877                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9878  002632  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
  9879  002634  6E0B               	movwf	??_TMR5_ReadTimer^0,c
  9880  002636  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
  9881  002638  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
  9882  00263A  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
  9883  00263E                     
  9884                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
  9885  00263E  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
  9886  002642  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
  9887  002646  0012               	return		;funcret
  9888  002648                     __end_of_TMR5_ReadTimer:
  9889                           	callstack 0
  9890                           
  9891 ;; *************** function _SMT1_PR_ACQ_ISR *****************
  9892 ;; Defined at:
  9893 ;;		line 192 in file "mcc_generated_files/smt1.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;		None
  9896 ;; Auto vars:     Size  Location     Type
  9897 ;;		None
  9898 ;; Return value:  Size  Location     Type
  9899 ;;                  1    wreg      void 
  9900 ;; Registers used:
  9901 ;;		wreg, status,2, status,0
  9902 ;; Tracked objects:
  9903 ;;		On entry : 0/0
  9904 ;;		On exit  : 0/0
  9905 ;;		Unchanged: 0/0
  9906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9911 ;;Total ram usage:        0 bytes
  9912 ;; Hardware stack levels used: 1
  9913 ;; This function calls:
  9914 ;;		Nothing
  9915 ;; This function is called by:
  9916 ;;		Interrupt level 2
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text72
  9921  0020DC                     __ptext72:
  9922                           	callstack 0
  9923  0020DC                     _SMT1_PR_ACQ_ISR:
  9924                           	callstack 21
  9925  0020DC                     
  9926                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
  9927  0020DC  0139               	movlb	57	; () banked
  9928  0020DE  9DA1               	bcf	161,6,b	;volatile
  9929  0020E0                     
  9930                           ; BSR set to: 57
  9931                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
  9932  0020E0  013F               	movlb	63	; () banked
  9933  0020E2  5115               	movf	21,w,b	;volatile
  9934  0020E4  6E46               	movwf	_smtPeriod^0,c	;volatile
  9935  0020E6  5116               	movf	22,w,b	;volatile
  9936  0020E8  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
  9937  0020EA  5117               	movf	23,w,b	;volatile
  9938  0020EC  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
  9939  0020EE  6A49               	clrf	(_smtPeriod+3)^0,c	;volatile
  9940  0020F0                     
  9941                           ; BSR set to: 63
  9942                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
  9943  0020F0  013C               	movlb	60	; () banked
  9944  0020F2  AB60               	btfss	96,5,b	;volatile
  9945  0020F4  EF7E  F010         	goto	i2u374_41
  9946  0020F8  EF80  F010         	goto	i2u374_40
  9947  0020FC                     i2u374_41:
  9948  0020FC  EF89  F010         	goto	i2l5055
  9949  002100                     i2u374_40:
  9950  002100                     
  9951                           ; BSR set to: 60
  9952  002100  0E01               	movlw	1
  9953  002102  0100               	movlb	0	; () banked
  9954  002104  2778               	addwf	_smtWay& (0+255),f,b	;volatile
  9955  002106  0E00               	movlw	0
  9956  002108  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
  9957  00210A  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
  9958  00210C  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
  9959  00210E  EF92  F010         	goto	i2l856
  9960  002112                     i2l5055:
  9961                           
  9962                           ; BSR set to: 60
  9963  002112  0EFF               	movlw	255
  9964  002114  0100               	movlb	0	; () banked
  9965  002116  2778               	addwf	_smtWay& (0+255),f,b	;volatile
  9966  002118  0EFF               	movlw	255
  9967  00211A  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
  9968  00211C  0EFF               	movlw	255
  9969  00211E  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
  9970  002120  0EFF               	movlw	255
  9971  002122  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
  9972  002124                     i2l856:
  9973                           
  9974                           ; BSR set to: 0
  9975  002124  0011               	retfie		f
  9976  002126                     __end_of_SMT1_PR_ACQ_ISR:
  9977                           	callstack 0
  9978                           
  9979 ;; *************** function _SMT1_PW_ACQ_ISR *****************
  9980 ;; Defined at:
  9981 ;;		line 203 in file "mcc_generated_files/smt1.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;		None
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;		None
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1    wreg      void 
  9988 ;; Registers used:
  9989 ;;		wreg, status,2, status,0
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9999 ;;Total ram usage:        0 bytes
 10000 ;; Hardware stack levels used: 1
 10001 ;; This function calls:
 10002 ;;		Nothing
 10003 ;; This function is called by:
 10004 ;;		Interrupt level 2
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text73
 10009  001FA8                     __ptext73:
 10010                           	callstack 0
 10011  001FA8                     _SMT1_PW_ACQ_ISR:
 10012                           	callstack 21
 10013  001FA8                     
 10014                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 10015  001FA8  0139               	movlb	57	; () banked
 10016  001FAA  9FA1               	bcf	161,7,b	;volatile
 10017  001FAC                     
 10018                           ; BSR set to: 57
 10019                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 10020  001FAC  013F               	movlb	63	; () banked
 10021  001FAE  5118               	movf	24,w,b	;volatile
 10022  001FB0  0100               	movlb	0	; () banked
 10023  001FB2  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10024  001FB4  013F               	movlb	63	; () banked
 10025  001FB6  5119               	movf	25,w,b	;volatile
 10026  001FB8  0100               	movlb	0	; () banked
 10027  001FBA  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10028  001FBC  013F               	movlb	63	; () banked
 10029  001FBE  511A               	movf	26,w,b	;volatile
 10030  001FC0  0100               	movlb	0	; () banked
 10031  001FC2  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10032  001FC4  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 10033  001FC6                     
 10034                           ; BSR set to: 0
 10035                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 10036  001FC6  013C               	movlb	60	; () banked
 10037  001FC8  AB60               	btfss	96,5,b	;volatile
 10038  001FCA  EFE9  F00F         	goto	i2u375_41
 10039  001FCE  EFEB  F00F         	goto	i2u375_40
 10040  001FD2                     i2u375_41:
 10041  001FD2  EFF4  F00F         	goto	i2l5065
 10042  001FD6                     i2u375_40:
 10043  001FD6                     
 10044                           ; BSR set to: 60
 10045  001FD6  0E01               	movlw	1
 10046  001FD8  0100               	movlb	0	; () banked
 10047  001FDA  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10048  001FDC  0E00               	movlw	0
 10049  001FDE  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10050  001FE0  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10051  001FE2  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10052  001FE4  EFFD  F00F         	goto	i2l863
 10053  001FE8                     i2l5065:
 10054                           
 10055                           ; BSR set to: 60
 10056  001FE8  0EFF               	movlw	255
 10057  001FEA  0100               	movlb	0	; () banked
 10058  001FEC  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10059  001FEE  0EFF               	movlw	255
 10060  001FF0  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10061  001FF2  0EFF               	movlw	255
 10062  001FF4  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10063  001FF6  0EFF               	movlw	255
 10064  001FF8  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10065  001FFA                     i2l863:
 10066                           
 10067                           ; BSR set to: 0
 10068  001FFA  0011               	retfie		f
 10069  001FFC                     __end_of_SMT1_PW_ACQ_ISR:
 10070                           	callstack 0
 10071                           
 10072 ;; *************** function _SMT1_Overflow_ISR *****************
 10073 ;; Defined at:
 10074 ;;		line 213 in file "mcc_generated_files/smt1.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;		None
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;		None
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		wreg, status,2
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10092 ;;Total ram usage:        0 bytes
 10093 ;; Hardware stack levels used: 1
 10094 ;; This function calls:
 10095 ;;		Nothing
 10096 ;; This function is called by:
 10097 ;;		Interrupt level 2
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text74
 10102  0025D8                     __ptext74:
 10103                           	callstack 0
 10104  0025D8                     _SMT1_Overflow_ISR:
 10105                           	callstack 21
 10106  0025D8                     
 10107                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 10108  0025D8  0139               	movlb	57	; () banked
 10109  0025DA  9BA1               	bcf	161,5,b	;volatile
 10110  0025DC                     
 10111                           ; BSR set to: 57
 10112                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 10113  0025DC  0E00               	movlw	0
 10114  0025DE  6E46               	movwf	_smtPeriod^0,c	;volatile
 10115  0025E0  0E00               	movlw	0
 10116  0025E2  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 10117  0025E4  0E00               	movlw	0
 10118  0025E6  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 10119  0025E8  0E00               	movlw	0
 10120  0025EA  6E49               	movwf	(_smtPeriod+3)^0,c	;volatile
 10121                           
 10122                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 10123  0025EC  0E00               	movlw	0
 10124  0025EE  0100               	movlb	0	; () banked
 10125  0025F0  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10126  0025F2  0E00               	movlw	0
 10127  0025F4  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10128  0025F6  0E00               	movlw	0
 10129  0025F8  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10130  0025FA  0E00               	movlw	0
 10131  0025FC  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 10132  0025FE                     
 10133                           ; BSR set to: 0
 10134  0025FE  0011               	retfie		f
 10135  002600                     __end_of_SMT1_Overflow_ISR:
 10136                           	callstack 0
 10137                           
 10138                           ;
 10139                           ; Interrupt Vector Table @ 0x8
 10140                           ;
 10141                           
 10142                           	psect	ivt0x8
 10143  000008                     __pivt0x8:
 10144                           	callstack 0
 10145  000008                     ivt0x8_base:
 10146                           	callstack 0
 10147                           
 10148                           ; Vector 0 : SWINT
 10149  000008  09E5               	dw	_Default_ISR shr (0+2)
 10150                           
 10151                           ; Vector 1 : HLVD
 10152  00000A  09E5               	dw	_Default_ISR shr (0+2)
 10153                           
 10154                           ; Vector 2 : OSF
 10155  00000C  09E5               	dw	_Default_ISR shr (0+2)
 10156                           
 10157                           ; Vector 3 : CSW
 10158  00000E  09E5               	dw	_Default_ISR shr (0+2)
 10159                           
 10160                           ; Vector 4 : NVM
 10161  000010  09E5               	dw	_Default_ISR shr (0+2)
 10162                           
 10163                           ; Vector 5 : SCAN
 10164  000012  09E5               	dw	_Default_ISR shr (0+2)
 10165                           
 10166                           ; Vector 6 : CRC
 10167  000014  09E5               	dw	_Default_ISR shr (0+2)
 10168                           
 10169                           ; Vector 7 : IOC
 10170  000016  09E5               	dw	_Default_ISR shr (0+2)
 10171                           
 10172                           ; Vector 8 : INT0
 10173  000018  09E5               	dw	_Default_ISR shr (0+2)
 10174                           
 10175                           ; Vector 9 : ZCD
 10176  00001A  09E5               	dw	_Default_ISR shr (0+2)
 10177                           
 10178                           ; Vector 10 : AD
 10179  00001C  09E5               	dw	_Default_ISR shr (0+2)
 10180                           
 10181                           ; Vector 11 : ADT
 10182  00001E  09E5               	dw	_Default_ISR shr (0+2)
 10183                           
 10184                           ; Vector 12 : CMP1
 10185  000020  09E5               	dw	_Default_ISR shr (0+2)
 10186                           
 10187                           ; Vector 13 : SMT1
 10188  000022  0976               	dw	_SMT1_Overflow_ISR shr (0+2)
 10189                           
 10190                           ; Vector 14 : SMT1PRA
 10191  000024  0837               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 10192                           
 10193                           ; Vector 15 : SMT1PRW
 10194  000026  07EA               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 10195                           
 10196                           ; Vector 16 : DMA1SCNT
 10197  000028  09E5               	dw	_Default_ISR shr (0+2)
 10198                           
 10199                           ; Vector 17 : DMA1DCNT
 10200  00002A  09E5               	dw	_Default_ISR shr (0+2)
 10201                           
 10202                           ; Vector 18 : DMA1OR
 10203  00002C  09E5               	dw	_Default_ISR shr (0+2)
 10204                           
 10205                           ; Vector 19 : DMA1A
 10206  00002E  09E5               	dw	_Default_ISR shr (0+2)
 10207                           
 10208                           ; Vector 20 : SPI1RX
 10209  000030  09E5               	dw	_Default_ISR shr (0+2)
 10210                           
 10211                           ; Vector 21 : SPI1TX
 10212  000032  09E5               	dw	_Default_ISR shr (0+2)
 10213                           
 10214                           ; Vector 22 : SPI1
 10215  000034  09E5               	dw	_Default_ISR shr (0+2)
 10216                           
 10217                           ; Vector 23 : I2C1RX
 10218  000036  09E5               	dw	_Default_ISR shr (0+2)
 10219                           
 10220                           ; Vector 24 : I2C1TX
 10221  000038  09E5               	dw	_Default_ISR shr (0+2)
 10222                           
 10223                           ; Vector 25 : I2C1
 10224  00003A  09E5               	dw	_Default_ISR shr (0+2)
 10225                           
 10226                           ; Vector 26 : I2C1E
 10227  00003C  09E5               	dw	_Default_ISR shr (0+2)
 10228                           
 10229                           ; Vector 27 : U1RX
 10230  00003E  087B               	dw	_UART1_rx_vect_isr shr (0+2)
 10231                           
 10232                           ; Vector 28 : U1TX
 10233  000040  086C               	dw	_UART1_tx_vect_isr shr (0+2)
 10234                           
 10235                           ; Vector 29 : U1E
 10236  000042  09E5               	dw	_Default_ISR shr (0+2)
 10237                           
 10238                           ; Vector 30 : U1
 10239  000044  09E5               	dw	_Default_ISR shr (0+2)
 10240                           
 10241                           ; Vector 31 : TMR0
 10242  000046  09E5               	dw	_Default_ISR shr (0+2)
 10243                           
 10244                           ; Vector 32 : TMR1
 10245  000048  09E5               	dw	_Default_ISR shr (0+2)
 10246                           
 10247                           ; Vector 33 : TMR1G
 10248  00004A  09E5               	dw	_Default_ISR shr (0+2)
 10249                           
 10250                           ; Vector 34 : TMR2
 10251  00004C  09E5               	dw	_Default_ISR shr (0+2)
 10252                           
 10253                           ; Vector 35 : CCP1
 10254  00004E  09E5               	dw	_Default_ISR shr (0+2)
 10255                           
 10256                           ; Vector 36 : Undefined
 10257  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10258                           
 10259                           ; Vector 37 : NCO1
 10260  000052  09E5               	dw	_Default_ISR shr (0+2)
 10261                           
 10262                           ; Vector 38 : CWG1
 10263  000054  09E5               	dw	_Default_ISR shr (0+2)
 10264                           
 10265                           ; Vector 39 : CLC1
 10266  000056  09E5               	dw	_Default_ISR shr (0+2)
 10267                           
 10268                           ; Vector 40 : INT1
 10269  000058  09E5               	dw	_Default_ISR shr (0+2)
 10270                           
 10271                           ; Vector 41 : CMP2
 10272  00005A  09E5               	dw	_Default_ISR shr (0+2)
 10273                           
 10274                           ; Vector 42 : DMA2SCNT
 10275  00005C  09E5               	dw	_Default_ISR shr (0+2)
 10276                           
 10277                           ; Vector 43 : DMA2DCNT
 10278  00005E  09E5               	dw	_Default_ISR shr (0+2)
 10279                           
 10280                           ; Vector 44 : DMA2OR
 10281  000060  09E5               	dw	_Default_ISR shr (0+2)
 10282                           
 10283                           ; Vector 45 : DMA2A
 10284  000062  09E5               	dw	_Default_ISR shr (0+2)
 10285                           
 10286                           ; Vector 46 : I2C2RX
 10287  000064  09E5               	dw	_Default_ISR shr (0+2)
 10288                           
 10289                           ; Vector 47 : I2C2TX
 10290  000066  09E5               	dw	_Default_ISR shr (0+2)
 10291                           
 10292                           ; Vector 48 : I2C2
 10293  000068  09E5               	dw	_Default_ISR shr (0+2)
 10294                           
 10295                           ; Vector 49 : I2C2E
 10296  00006A  09E5               	dw	_Default_ISR shr (0+2)
 10297                           
 10298                           ; Vector 50 : U2RX
 10299  00006C  09E5               	dw	_Default_ISR shr (0+2)
 10300                           
 10301                           ; Vector 51 : U2TX
 10302  00006E  09E5               	dw	_Default_ISR shr (0+2)
 10303                           
 10304                           ; Vector 52 : U2E
 10305  000070  09E5               	dw	_Default_ISR shr (0+2)
 10306                           
 10307                           ; Vector 53 : U2
 10308  000072  09E5               	dw	_Default_ISR shr (0+2)
 10309                           
 10310                           ; Vector 54 : TMR3
 10311  000074  09E5               	dw	_Default_ISR shr (0+2)
 10312                           
 10313                           ; Vector 55 : TMR3G
 10314  000076  09E5               	dw	_Default_ISR shr (0+2)
 10315                           
 10316                           ; Vector 56 : TMR4
 10317  000078  0898               	dw	_TMR4_ISR shr (0+2)
 10318                           
 10319                           ; Vector 57 : CCP2
 10320  00007A  09E5               	dw	_Default_ISR shr (0+2)
 10321                           
 10322                           ; Vector 58 : Undefined
 10323  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10324                           
 10325                           ; Vector 59 : CWG2
 10326  00007E  09E5               	dw	_Default_ISR shr (0+2)
 10327                           
 10328                           ; Vector 60 : CLC2
 10329  000080  09E5               	dw	_Default_ISR shr (0+2)
 10330                           
 10331                           ; Vector 61 : INT2
 10332  000082  09E5               	dw	_Default_ISR shr (0+2)
 10333                           
 10334                           ; Vector 62 : Undefined
 10335  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10336                           
 10337                           ; Vector 63 : Undefined
 10338  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10339                           
 10340                           ; Vector 64 : Undefined
 10341  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10342                           
 10343                           ; Vector 65 : Undefined
 10344  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10345                           
 10346                           ; Vector 66 : Undefined
 10347  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10348                           
 10349                           ; Vector 67 : Undefined
 10350  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10351                           
 10352                           ; Vector 68 : Undefined
 10353  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10354                           
 10355                           ; Vector 69 : Undefined
 10356  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10357                           
 10358                           ; Vector 70 : TMR5
 10359  000094  09E5               	dw	_Default_ISR shr (0+2)
 10360                           
 10361                           ; Vector 71 : TMR5G
 10362  000096  08F6               	dw	_TMR5_GATE_ISR shr (0+2)
 10363                           
 10364                           ; Vector 72 : TMR6
 10365  000098  09E5               	dw	_Default_ISR shr (0+2)
 10366                           
 10367                           ; Vector 73 : CCP3
 10368  00009A  08A6               	dw	_CCP3_CaptureISR shr (0+2)
 10369                           
 10370                           ; Vector 74 : CWG3
 10371  00009C  09E5               	dw	_Default_ISR shr (0+2)
 10372                           
 10373                           ; Vector 75 : CLC3
 10374  00009E  09E5               	dw	_Default_ISR shr (0+2)
 10375                           
 10376                           ; Vector 76 : Undefined
 10377  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10378                           
 10379                           ; Vector 77 : Undefined
 10380  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10381                           
 10382                           ; Vector 78 : Undefined
 10383  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10384                           
 10385                           ; Vector 79 : Undefined
 10386  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10387                           
 10388                           ; Vector 80 : CCP4
 10389  0000A8  08B4               	dw	_CCP4_CaptureISR shr (0+2)
 10390                           
 10391                           ; Vector 81 : CLC4
 10392  0000AA  09E5               	dw	_Default_ISR shr (0+2)
 10393  0000AC                     ivt0x8_undefint:
 10394                           	callstack 0
 10395  0000AC  00FF               	reset	
 10396  0000                     
 10397                           	psect	text75
 10398  000000                     __ptext75:
 10399                           	callstack 0
 10400  000000                     
 10401                           	psect	rparam
 10402  0000                     
 10403                           	psect	idloc
 10404                           
 10405                           ;Config register IDLOC0 @ 0x200000
 10406                           ;	unspecified, using default values
 10407  200000                     	org	2097152
 10408  200000  0FFF               	dw	4095
 10409                           
 10410                           ;Config register IDLOC1 @ 0x200002
 10411                           ;	unspecified, using default values
 10412  200002                     	org	2097154
 10413  200002  0FFF               	dw	4095
 10414                           
 10415                           ;Config register IDLOC2 @ 0x200004
 10416                           ;	unspecified, using default values
 10417  200004                     	org	2097156
 10418  200004  0FFF               	dw	4095
 10419                           
 10420                           ;Config register IDLOC3 @ 0x200006
 10421                           ;	unspecified, using default values
 10422  200006                     	org	2097158
 10423  200006  0FFF               	dw	4095
 10424                           
 10425                           ;Config register IDLOC4 @ 0x200008
 10426                           ;	unspecified, using default values
 10427  200008                     	org	2097160
 10428  200008  0FFF               	dw	4095
 10429                           
 10430                           ;Config register IDLOC5 @ 0x20000A
 10431                           ;	unspecified, using default values
 10432  20000A                     	org	2097162
 10433  20000A  0FFF               	dw	4095
 10434                           
 10435                           ;Config register IDLOC6 @ 0x20000C
 10436                           ;	unspecified, using default values
 10437  20000C                     	org	2097164
 10438  20000C  0FFF               	dw	4095
 10439                           
 10440                           ;Config register IDLOC7 @ 0x20000E
 10441                           ;	unspecified, using default values
 10442  20000E                     	org	2097166
 10443  20000E  0FFF               	dw	4095
 10444                           
 10445                           	psect	config
 10446                           
 10447                           ;Config register CONFIG1L @ 0x300000
 10448                           ;	External Oscillator Selection
 10449                           ;	FEXTOSC = OFF, Oscillator not enabled
 10450                           ;	Reset Oscillator Selection
 10451                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 10452  300000                     	org	3145728
 10453  300000  8C                 	db	140
 10454                           
 10455                           ;Config register CONFIG1H @ 0x300001
 10456                           ;	Clock out Enable bit
 10457                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10458                           ;	PRLOCKED One-Way Set Enable bit
 10459                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 10460                           ;	Clock Switch Enable bit
 10461                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10462                           ;	Fail-Safe Clock Monitor Enable bit
 10463                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10464  300001                     	org	3145729
 10465  300001  FF                 	db	255
 10466                           
 10467                           ;Config register CONFIG2L @ 0x300002
 10468                           ;	MCLR Enable bit
 10469                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10470                           ;	Power-up timer selection bits
 10471                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10472                           ;	Multi-vector enable bit
 10473                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 10474                           ;	IVTLOCK bit One-way set enable bit
 10475                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 10476                           ;	Low Power BOR Enable bit
 10477                           ;	LPBOREN = OFF, ULPBOR disabled
 10478                           ;	Brown-out Reset Enable bits
 10479                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10480  300002                     	org	3145730
 10481  300002  FF                 	db	255
 10482                           
 10483                           ;Config register CONFIG2H @ 0x300003
 10484                           ;	Brown-out Reset Voltage Selection bits
 10485                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 10486                           ;	ZCD Disable bit
 10487                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10488                           ;	PPSLOCK bit One-Way Set Enable bit
 10489                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10490                           ;	Stack Full/Underflow Reset Enable bit
 10491                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10492                           ;	Debugger Enable bit
 10493                           ;	DEBUG = OFF, Background debugger disabled
 10494                           ;	Extended Instruction Set Enable bit
 10495                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10496  300003                     	org	3145731
 10497  300003  FF                 	db	255
 10498                           
 10499                           ;Config register CONFIG3L @ 0x300004
 10500                           ;	WDT Period selection bits
 10501                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10502                           ;	WDT operating mode
 10503                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10504  300004                     	org	3145732
 10505  300004  9F                 	db	159
 10506                           
 10507                           ;Config register CONFIG3H @ 0x300005
 10508                           ;	WDT Window Select bits
 10509                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10510                           ;	WDT input clock selector
 10511                           ;	WDTCCS = SC, Software Control
 10512  300005                     	org	3145733
 10513  300005  FF                 	db	255
 10514                           
 10515                           ;Config register CONFIG4L @ 0x300006
 10516                           ;	Boot Block Size selection bits
 10517                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10518                           ;	Boot Block enable bit
 10519                           ;	BBEN = OFF, Boot block disabled
 10520                           ;	Storage Area Flash enable bit
 10521                           ;	SAFEN = OFF, SAF disabled
 10522                           ;	Application Block write protection bit
 10523                           ;	WRTAPP = OFF, Application Block not write protected
 10524  300006                     	org	3145734
 10525  300006  FF                 	db	255
 10526                           
 10527                           ;Config register CONFIG4H @ 0x300007
 10528                           ;	Configuration Register Write Protection bit
 10529                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 10530                           ;	Boot Block Write Protection bit
 10531                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 10532                           ;	Data EEPROM Write Protection bit
 10533                           ;	WRTD = OFF, Data EEPROM not write-protected
 10534                           ;	SAF Write protection bit
 10535                           ;	WRTSAF = OFF, SAF not Write Protected
 10536                           ;	Low Voltage Programming Enable bit
 10537                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10538  300007                     	org	3145735
 10539  300007  FF                 	db	255
 10540                           
 10541                           ;Config register CONFIG5L @ 0x300008
 10542                           ;	PFM and Data EEPROM Code Protection bit
 10543                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10544  300008                     	org	3145736
 10545  300008  FF                 	db	255
 10546                           
 10547                           ;Config register CONFIG5H @ 0x300009
 10548                           ;	unspecified, using default values
 10549  300009                     	org	3145737
 10550  300009  FF                 	db	255
 10551                           tosu	equ	0x3FFF
 10552                           tosh	equ	0x3FFE
 10553                           tosl	equ	0x3FFD
 10554                           stkptr	equ	0x3FFC
 10555                           pclatu	equ	0x3FFB
 10556                           pclath	equ	0x3FFA
 10557                           pcl	equ	0x3FF9
 10558                           tblptru	equ	0x3FF8
 10559                           tblptrh	equ	0x3FF7
 10560                           tblptrl	equ	0x3FF6
 10561                           tablat	equ	0x3FF5
 10562                           prodh	equ	0x3FF4
 10563                           prodl	equ	0x3FF3
 10564                           indf0	equ	0x3FEF
 10565                           postinc0	equ	0x3FEE
 10566                           postdec0	equ	0x3FED
 10567                           preinc0	equ	0x3FEC
 10568                           plusw0	equ	0x3FEB
 10569                           fsr0h	equ	0x3FEA
 10570                           fsr0l	equ	0x3FE9
 10571                           wreg	equ	0x3FE8
 10572                           indf1	equ	0x3FE7
 10573                           postinc1	equ	0x3FE6
 10574                           postdec1	equ	0x3FE5
 10575                           preinc1	equ	0x3FE4
 10576                           plusw1	equ	0x3FE3
 10577                           fsr1h	equ	0x3FE2
 10578                           fsr1l	equ	0x3FE1
 10579                           bsr	equ	0x3FE0
 10580                           indf2	equ	0x3FDF
 10581                           postinc2	equ	0x3FDE
 10582                           postdec2	equ	0x3FDD
 10583                           preinc2	equ	0x3FDC
 10584                           plusw2	equ	0x3FDB
 10585                           fsr2h	equ	0x3FDA
 10586                           fsr2l	equ	0x3FD9
 10587                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         81
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160     45     131
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _setSteering->___awdiv
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_startAccell
    _startAccell->_calcSteering
    _calcSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   47302
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   46155
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   17975
                                             41 BANK0      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0    8788
                                             35 BANK0      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3320
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     112
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    7986
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    6992
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     982
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     702
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     697
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3053
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     756
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_tx_vect_isr                                    1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_rx_vect_isr                                    1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_10msISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (12) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getCurve
     _getReverse
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      83       5       81.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF      32        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 01 13:11:10 2024

                             _CCP4_Initialize 24CC                        ??_CCP3_DefaultCallBack 0003  
                                 _startAccell 14E6                                            l72 2716  
                                          l75 2622                                            l69 2090  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l404 2046  
                                         l520 20DA                                           l441 2526  
                                         l362 2742                                           l371 272E  
                                         l188 1BD6                                           l284 1EB4  
                                         l365 2756                                           l359 274C  
                                         l368 2738                                           l712 23D4  
                                         l449 277E                                           l482 24F8  
                                         l723 26B6                                           l555 2760  
                                         l644 2552                                           l740 236C  
                                         l709 26CE                                           l581 225E  
                                         l726 23A0                                           l479 2774  
                                         l751 26E6                                           l737 26FE  
                                         l754 2338                                           l923 2682  
                                         l695 276A                                           l795 243A  
                                         l893 257E                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 2668  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 276C  
                                ___flmul@aexp 00A0                                  ___flmul@bexp 00A5  
                          _UART1_Transmit_ISR 2126                                  ___flmul@sign 009F  
                                ___flmul@temp 00AA                                  ___flmul@prod 00A6  
                     __end_of_CCP4_CaptureISR 2306                                  ___fltol@exp1 00C1  
                                        l2000 063A                                          l1042 1FA4  
                                        l2010 08BA                                          l2004 09C2  
                                        l1300 1A2A                                          l2007 0854  
                                        l1312 0D1C                                          l2017 0984  
                                        l2009 08CC                                          l2041 10A0  
                                        l1218 1D7E                                          l1307 0C8A  
                                        l2044 11FC                                          l1228 1E0E  
                                        l1237 1F48                                          l2055 1194  
                                        l1327 0E3E                                          l2048 1138  
                                        l1265 0BFE                                          l1257 1616  
                                        l1370 120A                               _timer3ReloadVal 00CE  
                                        l1348 1048                                          l1372 122E  
                                        l4101 10B0                                          l1357 14E4  
                                        l1285 0C0E                                          l1373 1242  
                                        l1366 1B0C                                          l1374 126A  
                                        l4111 10EE                                          l4103 10C6  
                                        l1279 0B5A                                          l1383 13A0  
                                        l1617 1D60                                          l4121 1176  
                                        l4113 1120                                          l1465 1722  
                                        l4201 1AD4                                          l4131 11CC  
                                        l4123 1184                                          l4115 1122  
                                        l4107 10DA                                          l4203 1AF4  
                                        l1299 1A1A                                          l1651 18E8  
                                        l4141 2730                                          l4133 11DC  
                                        l4125 11A2                                          l4117 112E  
                                        l4109 10E2                                          l4143 2726  
                                        l4135 11EA                                          l4127 11A4  
                                        l4119 116A                                          l1656 192E  
                                        l4161 2776                                          l2801 1B30  
                                        l4145 2744                                          l4137 11EC  
                                        l4129 11A8                                          l1914 02A2  
                                        l4163 276C                                          l2811 1B8C  
                                        l2803 1B38                                          l4147 273A  
                                        l1683 182A                                          l1931 03BC  
                                        l1923 0572                                          l1915 0290  
                                        l1940 048C                                          l1916 0256  
                                        l4501 2520                                          l2821 2700  
                                        l2813 1B92                                          l2805 1B86  
                                        l4181 2762                                          l4165 2758  
                                        l4149 274E                                          l5301 06F0  
                                        l4261 1ED4                                          l1941 047A  
                                        l4503 2524                                          l2815 1B94  
                                        l2807 1B88                                          l4511 2542  
                                        l5311 074E                                          l5303 0700  
                                        l4095 104C                                          l4263 1EE4  
                                        l4191 1A78                                          l4183 1A2C  
                                        l2833 1F4A                                          l4521 24F2  
                                        l2817 1B96                                          l2809 1B8A  
                                        l2905 26B8                                          l4513 254E  
                                        l4505 2528                                          l3801 1CD2  
                                        l5321 07D8                                          l5313 075E  
                                        l5305 0710                                          l5401 17CA  
                                        l4097 105C                                          l4265 1F14  
                                        l4257 1EB6                                          l4185 1A48  
                                        l4193 1A88                                          l4523 24F6  
                                        l4515 24CC                                          l2771 2010  
                                        l2819 1B98                                          l2851 242E  
                                        l4531 225A                                          l4507 253C  
                                        l3811 1D00                                          l3803 1CD6  
                                        l5331 0852                                          l5323 080E  
                                        l5315 077E                                          l5307 0720  
                                        l5251 0592                                          l5411 17FA  
                                        l4099 106A                                          l4267 1F40  
                                        l4259 1EBE                                          l4195 1AA4  
                                        l4187 1A64                                          l4517 24DC  
                                        l2781 2038                                          l2773 2026  
                                        l2765 1FFC                                          l2853 2432  
                                        l2845 240C                                          l2861 2668  
                                        l4525 2228                                          l4509 2540  
                                        l4541 20C8                                          l4533 2092  
                                        l3821 1D34                                          l3813 1D0E  
                                        l3805 1CDE                                          l5341 08B2  
                                        l5333 0864                                          l5325 081C  
                                        l5317 078E                                          l5309 0730  
                                        l5261 05D8                                          l5253 05A2  
                                        l5245 0574                                          l5413 180A  
                                        l3901 16A8                                          l4197 1AC0  
                                        l4189 1A6C                                          l5501 014A  
                                        l5421 0C8A                                          l4519 24E8  
                                        l2791 2042                                          l2783 203A  
                                        l2775 2028                                          l2767 1FFE  
                                        l2855 2434                                          l2847 242A  
                                        l2863 2674                                          l4527 223C  
                                        l4543 20CA                                          l4535 20A6  
                                        l4551 1E20                                          l3823 1D3A  
                                        l3815 1D14                                          l3807 1CF0  
                                        l5351 0920                                          l5335 0872  
                                        l5327 083A                                          l5319 07AE  
                                        l5271 0604                                          l5263 05DE  
                                        l5255 05B2                                          l5247 0582  
                                        l5415 181A                                          l5407 17DE  
                                        l3911 16EC                                          l3903 16B2  
                                        l4199 1AC8                                          l5503 015A  
                                        l5511 0184                                          l5423 0CA6  
                                        l5431 0CDA                                          l2793 2044  
                                        l2785 203C                                          l2777 2032  
                                        l2769 2006                                          l2857 2436  
                                        l2849 242C                                          l2865 267A  
                                        l4529 2240                                          l4545 20D6  
                                        l4537 20AA                                          l4561 1E42  
                                        l4553 1E30                                          l3817 1D2A  
                                        l3809 1CF8                                          l3825 1D40  
                                        l5361 0988                                          l5345 08DC  
                                        l5353 0924                                          l5337 0876  
                                        l5329 0844                                          l5281 065A  
                                        l5273 0614                                          l5265 05E4  
                                        l5257 05C2                                          l5249 0590  
                                        l5409 17EA                                          l3905 16D0  
                                        l3913 16F2                                          l3833 23A2  
                                        l5601 038C                                          l5521 01BC  
                                        l5513 0194                                          l5505 016A  
                                        l4705 0BC4                                          l4721 1962  
                                        l4481 18A8                                          l4473 182C  
                                        l3841 1272                                          l5441 0D8C  
                                        l5433 0D20                                          l5425 0CB2  
                                        l2787 203E                                          l2779 2036  
                                        l2795 2600                                          l2867 26D0  
                                        l2859 26A0                                          l4539 20C4  
                                        l4571 1E56                                          l4563 1E46  
                                        l4555 1E36                                          l4547 1E10  
                                        l3827 1D50                                          l3819 1D32  
                                        l5371 09B2                                          l5363 0998  
                                        l5355 093E                                          l5347 08E8  
                                        l5339 0884                                          l5291 06A2  
                                        l5275 0624                                          l5267 05F2  
                                        l5259 05C8                                          l3915 1702  
                                        l3907 16E0                                          l3835 236E  
                                        l5603 039C                                          l5531 01D0  
                                        l5523 01C0                                          l5515 01A6  
                                        l5507 017A                                          l4651 09FE  
                                        l4731 19AC                                          l4723 1974  
                                        l4715 1930                                          l4491 192C  
                                        l4483 18B6                                          l4475 185A  
                                        l3843 127E                                          l3851 12A6  
                                        l5451 0DD8                                          l5443 0DA0  
                                        l5435 0D34                                          l5427 0CCE  
                                        l5419 0C10                                          l2789 2040  
                                        l2797 1B0E                                          l4581 1E6A  
                                        l4573 1E5A                                          l4565 1E4A  
                                        l4557 1E3A                                          l4549 1E14  
                                        l3829 1D58                                          l5365 09A6  
                                        l5357 0952                                          l5349 08F6  
                                        l5293 06AE                                          l5285 066E  
                                        l5277 062A                                          l5269 05F4  
                                        l5381 1750                                          l3917 1712  
                                        l3909 16E2                                          l5621 041E  
                                        l5613 03F6                                          l5605 03AC  
                                        l5541 01E4                                          l5533 01D4  
                                        l5525 01C4                                          l5517 01B4  
                                        l5509 017C                                          l4661 0A78  
                                        l4653 0A1A                                          l4741 19F6  
                                        l4733 19BE                                          l4725 197E  
                                        l4717 1946                                          l4485 18C8  
                                        l4477 186A                                          l3861 1334  
                                        l3845 1286                                          l3853 12E8  
                                        l3837 11FE                                          l5445 0DB2  
                                        l5437 0D48                                          l5701 160E  
                                        l4495 24FA                                          l2879 2554  
                                        l2799 1B2E                                          l4583 1E6E  
                                        l4575 1E5E                                          l4567 1E4E  
                                        l4559 1E3E                                          l3791 1CA2  
                                        l5367 09A8                                          l5359 096C  
                                        l5295 06CA                                          l5287 067E  
                                        l5279 064A                                          l5391 179E  
                                        l5383 177A                                          l5375 1724  
                                        l5623 0426                                          l5615 0400  
                                        l5607 03D2                                          l5631 044A  
                                        l5551 01F8                                          l5543 01E8  
                                        l5535 01D8                                          l5527 01C8  
                                        l5519 01B8                                          l5471 00B2  
                                        l5711 0E68                                          l4671 0AC0  
                                        l4663 0A8E                                          l4655 0A30  
                                        l4647 09C4                                          l4743 1A16  
                                        l4735 19D4                                          l4727 1996  
                                        l4719 1950                                          l4487 18D6  
                                        l4479 1898                                          l3871 1390  
                                        l3863 1350                                          l3855 1304  
                                        l3847 1292                                          l3839 124A  
                                        l5439 0D78                                          l5703 1612  
                                        l4497 250A                                          l2889 26E8  
                                        l4585 1E7A                                          l4577 1E62  
                                        l4569 1E52                                          l4841 2058  
                                        l3793 1CB0                                          l5369 09AE  
                                        l5297 06D6                                          l5289 0688  
                                        l5385 177C                                          l5377 173C  
                                        l3881 162A                                          l5641 049C  
                                        l5633 044E                                          l5625 042A  
                                        l5617 040E                                          l5609 03E2  
                                        l5561 0270                                          l5553 0222  
                                        l5545 01EC                                          l5537 01DC  
                                        l5529 01CC                                          l5481 00F0  
                                        l5473 00C0                                          l5713 0E84  
                                        l5721 0EBA                                          l5705 0E40  
                                        l4681 0B20                                          l4673 0AD0  
                                        l4665 0A9E                                          l4657 0A40  
                                        l4649 09E2                                          l4745 1A16  
                                        l4737 19DC                                          l4729 199A  
                                        l4489 1926                                          l3785 233A  
                                        l3865 135C                                          l3857 1310  
                                        l5449 0DC6                                          l5457 0DEC  
                                        l5801 1D98                                          l4499 2516  
                                        l4587 1E86                                          l4579 1E66  
                                        l4851 2070                                          l4843 205C  
                                        l3795 1CB8                                          l5299 06E2  
                                        l5387 178C                                          l3891 1660  
                                        l3883 163A                                          l5651 0502  
                                        l5643 04A8                                          l5635 045C  
                                        l5627 043A                                          l5619 0410  
                                        l5571 02B0                                          l5563 0274  
                                        l5555 023E                                          l5547 01F0  
                                        l5539 01E0                                          l5491 0120  
                                        l5483 0100                                          l5475 00CE  
                                        l5731 0F88                                          l5723 0EC6  
                                        l5715 0E8C                                          l5707 0E4E  
                                        l4691 0B7C                                          l4683 0B36  
                                        l4675 0AE2                                          l4667 0AAE  
                                        l4659 0A5C                                          l4739 19E0  
                                        l3787 2306                                          l3867 1378  
                                        l3859 132C                                          l5811 1DC4  
                                        l5803 1DA0                                          l4589 1EB0  
                                        l4853 2078                                          l4845 2064  
                                        l3797 1CBC                                          l3789 1C9E  
                                        l5397 17B6                                          l5389 1790  
                                        l3893 1670                                          l3885 163E  
                                        l3877 1618                                          l5661 054A  
                                        l5653 0512                                          l5645 04B6  
                                        l5637 0472                                          l5629 043C  
                                        l5581 02F2                                          l5573 02C0  
                                        l5565 0282                                          l5557 024E  
                                        l5549 01F4                                          l5493 0132  
                                        l5485 0102                                          l5477 00D0  
                                        l5733 0F94                                          l5725 0EDC  
                                        l5717 0EA2                                          l5709 0E64  
                                        l4693 0B98                                          l4685 0B46  
                                        l4677 0AF8                                          l4669 0ABA  
                                        l3869 1380                                          l5821 1E02  
                                        l5813 1DD2                                          l5805 1DA8  
                                        l4855 207C                                          l4847 2068  
                                        l4839 2048                                          l3799 1CCA  
                                        l5399 17C0                                          l3895 1686  
                                        l3887 164C                                          l3879 161C  
                                        l5663 054C                                          l5655 0532  
                                        l5647 04F0                                          l5591 0320  
                                        l5583 0300                                          l5567 0284  
                                        l5559 0264                                          l5495 0134  
                                        l5479 00E0                                          l5487 010A  
                                        l5751 1038                                          l5727 0EE0  
                                        l5719 0EAE                                          l5743 0FAC  
                                        l4687 0B52                                          l4679 0B0A  
                                        l5823 1E06                                          l5815 1DE2  
                                        l5807 1DAE                                          l5831 265C  
                                        l4857 2084                                          l4849 206C  
                                        l3897 168E                                          l3889 165C  
                                        l5761 13A2                                          l5665 0552  
                                        l5657 0536                                          l5649 04F2  
                                        l5593 032A                                          l5585 030C  
                                        l5577 02D4                                          l5569 028E  
                                        l5497 013A                                          l5489 011A  
                                        l5753 1040                                          l5737 0FA0  
                                        l5729 0EF6                                          l5745 0FF6  
                                        l4697 0BA8                                          l4689 0B6A  
                                        l5681 1564                                          l5673 14E6  
                                        l5817 1DF6                                          l5809 1DC0  
                                        l5825 2648                                          l4859 2088  
                                        l3899 169A                                          l5771 1444  
                                        l5763 13AE                                          l5667 0560  
                                        l5659 0544                                          l5587 0310  
                                        l5579 02E4                                          l5595 0330  
                                        l5499 0148                                          l5747 1014  
                                        l4699 0BB8                                          l5691 15D8  
                                        l5683 1580                                          l5675 14F6  
                                        l5819 1DFE                                          l5827 264C  
                                        l5781 1484                                          l5773 1458  
                                        l5765 13BC                                          l5669 0562  
                                        l5597 0356                                          l5589 031E  
                                        l5749 101C                                          l5693 15E2  
                                        l5685 1590                                          l5677 14FA  
                                        l5829 264E                                          l5791 14DC  
                                        l5783 14A0                                          l5775 1460  
                                        l5767 13C8                                          l5599 038A  
                                        l5695 15EE                                          l5687 1596  
                                        l5679 1530                                          l5785 14AC  
                                        l5777 1474                                          l5769 13C8  
                                        l5697 15F8                                          l5689 15A6  
                                        l5793 1D62                                          l5787 14C8  
                                        l5779 1478                                          l5699 15FC  
                                        l5795 1D8C                                          l5789 14D0  
                                        l5797 1D90                                          l5991 0FC0  
                                        l5983 0CEE                                          l5799 1D94  
                                        l5985 0E00                                          l5987 12BA  
                                        l5989 0BD8                                          u2010 1304  
                                        u2011 1300                                          u2100 1702  
                                        u2020 132C                                          u2101 16FE  
                                        u2005 2392                                          u2021 1328  
                                        u2030 1350                                          u1135 2030  
                                        u2031 134C                                          u1136 2032  
                                        u3000 18B6                                          u2040 1378  
                                        u3001 18B2                                          u2041 1374  
                                        u2050 162A                                          u3010 18D6  
                                        u2051 1626                                          u3011 18D2  
                                        u2060 164C                                          u3100 0A5C  
                                        u3020 1926                                          u2061 1648  
                                        u3101 0A58                                          u3021 1922  
                                        _LATA 003FBA                                          u2070 1686  
                                        u3110 0A78                                          _LATB 003FBB  
                                        u2071 1682                                          u3111 0A74  
                                        _LATC 003FBC                                          u4000 17B2  
                                        u2400 111C                                          u2080 16A8  
                                        u3200 0B46                                          u3120 0A8E  
                                        _LATD 003FBD                                          u4001 17AE  
                                        u2401 1118                                          u2081 16A4  
                                        u3201 0B42                                          u3121 0A8A  
                                        _LATE 003FBE                                          u4010 17DA  
                                        u2410 1166                                          u2090 16D0  
                                        u3210 0B7C                                          u3130 0AAE  
                                        u4011 17D6                                          u2411 1162  
                                        u2091 16CC                                          u3211 0B78  
                                        u3131 0AAA                                          u4020 17FA  
                                        u2420 1184                                          u2500 1A64  
                                        u4100 00F0                                          u3220 0B98  
                                        u3140 0AD0                                          u3300 19D4  
                                        u4021 17F6                                          u2421 1180  
                                        u2501 1A60                                          u4101 00EC  
                                        u3221 0B94                                          u3141 0ACC  
                                        u3301 19D0                                          u4030 180A  
                                        u2430 1194                                          u2510 1AA4  
                                        u4110 0132                                          u3230 0BB8  
                                        u3150 0AE2                                          u3070 09FE  
                                        u3310 19F6                                          u4031 1806  
                                        u2431 1190                                          u2511 1AA0  
                                        u4111 012E                                          u3231 0BB4  
                                        u3151 0ADE                                          u3071 09FA  
                                        u3311 19F2                                          u2440 11A2  
                                        u2520 1AC0                                          u4200 0264  
                                        u4120 0148                                          u3160 0AF8  
                                        u3080 0A1A                                          u3320 1A12  
                                        u3240 1946                                          u4040 0CA6  
                                        u2441 119E                                          u2521 1ABC  
                                        u4201 0260                                          u4121 0144  
                                        u3161 0AF4                                          u3081 0A16  
                                        u3321 1A0E                                          u3241 1942  
                                        u4041 0CA2                                          u2450 11DC  
                                        u2370 105C                                          u4210 0282  
                                        u4130 015A                                          u3170 0B0A  
                                        u3090 0A30                                          u3250 1962  
                                        u4050 0CCE                                          _T2PR 003FAB  
                                        u2451 11D8                                          u2371 1058  
                                        u4211 027E                                          u4131 0156  
                                        u3171 0B06                                          u3091 0A2C  
                                        u3251 195E                                          u4051 0CCA  
                                        u2460 11EA                                          u2380 106A  
                                        u4300 03D2                                          u4220 02A2  
                                        u4140 016A                                          u3180 0B20  
                                        u3260 1974                                          u4060 0DB2  
                                        u2461 11E6                                          u2381 1066  
                                        u4301 03CE                                          u4221 029E  
                                        u4141 0166                                          u3181 0B1C  
                                        u3261 1970                                          u4061 0DAE  
                                        u2390 10C6                                          u4310 03E2  
                                        u4230 02B0                                          u4150 01A6  
                                        u3190 0B36                                          u3270 1996  
                                        u4070 0DD8                                          u2391 10C2  
                                        u4311 03DE                                          u4231 02AC  
                                        u4151 01A2                                          u3191 0B32  
                                        u3271 1992                                          u4071 0DD4  
                                        u4400 04B6                                          u4320 040E  
                                        u4240 02C0                                          u4160 01B4  
                                        u4080 00CE                                          u3280 19AC  
                                        u4401 04B2                                          u4321 040A  
                                        u4241 02BC                                          u4161 01B0  
                                        u4081 00CA                                          u3281 19A8  
                                        u1930 1CB0                                          u2570 1ED4  
                                        u2490 1A48                                          u4410 04F0  
                                        u4330 041E                                          u4250 02F2  
                                        u4170 0222                                          u4090 00E0  
                                        u3290 19BE                                          _T4PR 003F9F  
                                        u1931 1CAC                                          u2571 1ED0  
                                        u2491 1A44                                          u4411 04EC  
                                        u4331 041A                                          u4251 02EE  
                                        u4171 021E                                          u4091 00DC  
                                        u3291 19BA                                          u1915 235E  
                                        u1940 1CCA                                          u2580 1EE4  
                                        u4420 0502                                          u4340 043A  
                                        u4260 0300                                          u4180 023A  
                                        u4500 0E64                                          u1941 1CC6  
                                        u2581 1EE0                                          u4421 04FE  
                                        u4341 0436                                          u4261 02FC  
                                        u4181 0234                                          u4501 0E60  
                                        u1925 232A                                          u1950 1CF0  
                                        u4430 0512                                          u4350 044A  
                                        u4270 031E                                          u4190 023C  
                                        u4510 0E84                                          u1951 1CEC  
                                        u4431 050E                                          u4351 0446  
                                        u4271 031A                                          u4511 0E80  
                                        u1960 1D0E                                          u3800 05B2  
                                        u4600 14C8                                          u4440 0532  
                                        u4360 045C                                          u4280 0356  
                                        u4520 0EA2                                          u1961 1D0A  
                                        u3801 05AE                                          u4601 14C4  
                                        u4441 052E                                          u4361 0458  
                                        u4281 0352                                          u4521 0E9E  
                                        u1970 1D2A                                          u3810 05F2  
                                        u4450 0544                                          u4370 0472  
                                        u4290 039C                                          u4530 0EDC  
                                        u4610 1D8C                                          u1971 1D26  
                                        u3811 05EE                                          u4451 0540  
                                        u4371 046E                                          u4291 0398  
                                        u4531 0ED8                                          u4611 1D88  
                                        u1980 1D50                                          u3900 08B2  
                                        u3820 0604                                          u4460 0560  
                                        u4380 0488                                          u4540 0EF6  
                                        u4620 1DC0                                          _PMD0 0039C0  
                                        u1981 1D4C                                          u3901 08AE  
                                        u3821 0600                                          u4461 055C  
                                        u4381 0484                                          u4541 0EF2  
                                        u4621 1DBC                                          _PMD1 0039C1  
                                        u3910 08C8                                          u3830 0614  
                                        u4390 049C                                          u4550 1014  
                                        u4470 15A6                                          u4630 1DD2  
                                        _PMD2 0039C2                                          u3911 08C4  
                                        u3831 0610                                          u4391 0498  
                                        u4551 1010                                          u4471 15A2  
                                        u4631 1DCE                                          _PMD3 0039C3  
                                        u3920 08DC                                          u3840 064A  
                                        u4560 1038                                          u4480 15D8  
                                        _PMD4 0039C4                                          u3921 08D8  
                                        u3841 0646                                          u4561 1034  
                                        u4481 15D4                                          _PMD5 0039C5  
                                        u3930 08F6                                          u3850 065A  
                                        u4570 1458                                          u4490 160E  
                                        _PMD6 0039C6                                          u3931 08F2  
                                        u3851 0656                                          u1995 23C6  
                                        u4571 1454                                          u4491 160A  
                                        _PMD7 0039C7                                          u3940 093E  
                                        u3860 07F8                                          u3780 0590  
                                        u4580 1474                                          u2980 185A  
                                        u3941 093A                                          u3781 058C  
                                        u4581 1470                                          u2981 1856  
                                        u3950 096C                                          u3870 0852  
                                        u3790 05A2                                          u4590 14A0  
                                        u2990 1898                                          u3951 0968  
                                        u3871 084E                                          u3791 059E  
                                        u4591 149C                                          u2991 1894  
                                        u3960 09A6                                          u3880 0872  
                                        u3961 09A2                                          u3881 086E  
                                        u3865 07EE                                          u3890 0884  
                                        u3970 173C                                          u3891 0880  
                                        u3971 1738                                          u3980 1770  
                                        u3990 179E                                          u3991 179A  
                                        u3985 1766                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          _main 2648  
                                        _loop 1D62                                          indf2 003FDF  
                                        fsr2l 003FD9                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 00D2                               _TMR3_Initialize 2228  
                             _PWM5_Initialize 26E8                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 21EC                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 236E                            ?_UART1_rx_vect_isr 0001  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 2718                                 ___fltol@sign1 00C0  
                             __end_of___aldiv 1724                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 2528  
                             __end_of___fladd 0574                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 1D62                                         ?_loop 0001  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 09C4                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___fltol 182C                               ___awdiv@divisor 0016  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T3CLK 003FA9                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 2220                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 21E4  
                                       i1l333 2168                                         i1l350 278E  
                                       i1l343 1C9C                                         i1l336 216C  
                                       i1l353 278C                                         _U1TXB 003DEA  
                                       i1l347 25AA                                         i1l356 2784  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 2794                                         i1l692 246A  
                                       i2l534 25D6                                         i2l438 249A  
                                       i2l446 22CC                                         i2l552 240A  
                                       i1l688 2290                                         i2l529 2646  
                                       i2l537 2724                                         i1l698 2790  
                                       i2l476 24CA                                         i2l558 269E  
                                       i2l487 2304                           ??_UART1_rx_vect_isr 0012  
                                       i2l863 1FFA                                         i2l856 2124  
                                       i2l868 25FE                               ___awdiv@counter 0018  
                                       _OSCEN 0039DD                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 2794                               _TMR4_Initialize 2528  
                             _PWM6_Initialize 26D0                             _UART1_tx_vect_isr 21B0  
                            __end_of_TMR4_ISR 2298                       setSteering@steeringMode 001E  
                                       _delay 003E                         __size_of_calcMotorPow 0144  
                          ?_UART1_tx_vect_isr 0001                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 0080                         __size_of_calcSteering 0230  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 273A  
                 _UART1_SetRxInterruptHandler 2730                       __end_of_CCP4_Initialize 24FA  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 2790  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 278E  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 2228  
                             _TMR5_Initialize 2092                               _PWM7_Initialize 26B8  
                             __initialization 216E                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 2668  
                                __end_of_loop 1E10                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 2684                                        ??_main 003A  
                                      ??_loop 003A                                 __activetblptr 000002  
                                _calcMotorPow 13A2          __size_of_UART1_SetTxInterruptHandler 000A  
                   __end_of_UART1_tx_vect_isr 21EC                               _PWM8_Initialize 26A0  
                            _UART1_Initialize 1E10                                  _calcSteering 0C10  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 236E                                        _ANSELA 003A40  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1231 278A                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i1l5021 2206                                        i1l4151 2580  
                                      i1l5015 21B6                                        i1l5041 226A  
                                      i1l4153 2592                                        i1l5017 21CA  
                                      i1l5043 2284                                        i1l4155 2594  
                                      i1l5019 21F2                       __end_of_PWM5_Initialize 2700  
                     __end_of_TMR3_Initialize 2260                                        i1l5045 2288  
                                      i1l4157 25A4                                        i1l5039 2266  
                                      i1l4159 25A8                                        i1l4901 2126  
                                      i1l4591 2780                                        i1l4911 2160  
                                      i1l4903 2138                                        i1l4921 1C22  
                                      i1l4913 1BD8                                        i1l4905 214A  
                                      i1l4931 1C98                                        i1l4923 1C32  
                                      i1l4915 1BE8                                        i1l4907 214C  
                                      i1l4837 2786                                        i1l4925 1C42  
                                      i1l4917 1BF8                                        i1l4909 215C  
                                      i2l5031 23D8                                        i2l5023 2298  
                                      i1l4927 1C5C                                        i1l4919 1C08  
                                      i2l5033 23DC                                        i2l5025 22A8  
                                      i1l4929 1C78                                        i2l5051 20F0  
                                      i2l4171 25BC                                        i2l5035 23F0  
                                      i2l5027 22D0                                        i1l4971 243C  
                                      i2l5061 1FC6                                        i2l5053 2100  
                                      i2l4173 25C0                                        i2l5029 22E0  
                                      i1l4973 2450                                        i2l5063 1FD6  
                                      i2l5055 2112                                        i2l5047 20DC  
                                      i2l4175 25C6                                        i2l4167 25AC  
                                      i2l5065 1FE8                                        i2l5057 1FA8  
                                      i2l5049 20E0                                        i2l4169 25BA  
                                      i2l4177 25CC                                        i2l4601 2718  
                                      i2l5067 25D8                                        i2l5059 1FAC  
                                      i2l4179 25D0                                        i2l5069 25DC  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l4593 2624  
                                      i2l4595 2632                                        i2l4597 263E  
                                      i2l4941 249C                                        i2l4933 246C  
                                      i2l4951 2690                                        i2l4943 24AA  
                                      i2l4935 247A                                        i2l4953 2696  
                                      i2l4945 24B6                                        i2l4937 2486  
                                      i2l4955 269A                                        i2l4947 24C4  
                                      i2l4939 2494                                        i2l4949 2684  
                                ?_setSteering 001C                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 1F4A                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 274E                              __end_of___xxtofl 11FE  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 0C10  
                    __end_of_CCP3_SetCallBack 2780                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                        ___flge 182C  
                                   ??___aldiv 001C                                     ??___fladd 0036  
                                   ??___awdiv 0018                                     ??___flmul 0032  
                                   ??___fltol 00BC                                 _CCP3_CallBack 00D6  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 26E8  
                     __end_of_TMR4_Initialize 2554                                        clear_0 2188  
                                      clear_1 2194                              ___awdiv@quotient 001A  
                                      _motPow 008C                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00D4  
                                      _smtWay 0078                              ?_CCP3_Initialize 0001  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 1B0E  
                             _ADCC_Initialize 1F4A          __end_of_TMR4_DefaultInterruptHandler 2792  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 2790  
                              _PMD_Initialize 2600                                  __pdataCOMRAM 004C  
                       __end_of_TMR5_GATE_ISR 240C                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 2744         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 273A                     _UART1_DefaultErrorHandler 2780  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 0018                                    ___flge@ff1 0014  
                                  ___flge@ff2 0018                       __end_of_PWM7_Initialize 26D0  
                     __end_of_TMR5_Initialize 20DC                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 2048  
                                ___xxtofl@val 001C                                    __accesstop 0060  
                     __end_of__initialization 21A6                              ?_CCP4_Initialize 0001  
                         setSteering@steering 001C                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003C  
                                  ___fltol@f1 00B8                               _TMR5_WriteTimer 25AC  
                          __size_of_calcSpeed 020A                     calcMotorPow@setSpeedDelta 00C4  
                    __end_of_CCP4_SetCallBack 2776                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 246C                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                             startAccell@MPow 00C8                                ivt0x8_undefint 00AC  
                             fp__TMR4_10msISR 0000                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 26B8                        __end_of_PMD_Initialize 2624  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003C                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 00DC               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                             _calcSteering$3896 00C4  
                   __end_of_SYSTEM_Initialize 2092                               _CLC3_Initialize 2554  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 0060  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 00CC  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 1FA6  
                  __end_of_PWM6_LoadDutyValue 233A          __end_of_TMR5_SetGateInterruptHandler 2762  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 2758  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 1BD8                                    _getReverse 1930  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 233A                                    _distRightM 0096  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 104A  
                                     _IVTLOCK 003FD4                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 25D8                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01A4  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 1EB6                                       ___aldiv 1618  
                             __size_of___flge 0104                                       ___fladd 00B2  
                                     ___awdiv 1C9E                                       ___flmul 0574  
                                     ___fltol 1724                     __end_of_UART1_Receive_ISR 1C9E  
                        ??_PWM5_LoadDutyValue 0016                                       __pcinit 216E  
                   _TMR5_GateInterruptHandler 00D0                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0048  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 2648  
                                     __ptext1 1D62                                       __ptext2 14E6  
                                     __ptext3 0C10                                       __ptext4 11FE  
                                     __ptext5 2306                                       __ptext6 233A  
                                     __ptext7 182C                                       __ptext8 1930  
                                     __ptext9 09C4                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                     __end_of_CLC3_Initialize 2580                         _OSCILLATOR_Initialize 2700  
                                   _T2CONbits 003FAC                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                     _IPR10bits 00398A  
                                     _smtDuty 007C                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0014                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                          end_of_initialization 21A6  
                                   _T2RSTbits 003FAF                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                           ??_SMT1_PR_ACQ_ISR 0011                                 __Lmediumconst 0000  
         __end_of_UART1_SetTxInterruptHandler 2730                   _UART1_SetTxInterruptHandler 2726  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             ?_CCP3_SetCallBack 0014  
                            ___aldiv@quotient 001E                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                           _UART1_RxDataHandler 2580  
                        __size_of_startAccell 0132                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0036                                   ___fladd@grs 00B7  
                          getCurve@deltaRight 0016                                 ___xxtofl@sign 0024  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 00A1  
                    __size_of_CCP4_CaptureISR 0036             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 2048  
                              __end_of___flge 1930                    __size_of_UART1_Receive_ISR 00C6  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                               __pidataCOMRAM 2796                             __size_of_TMR4_ISR 0038  
                      ?_OSCILLATOR_Initialize 0001                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                _TMR5_ReadTimer 2624  
                         start_initialization 216E                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0068                                   _actMotorPow 0084  
                               _uart1TxBuffer 0070                           __size_of_getReverse 00FC  
                        __end_of_TMR4_10msISR 278C                                  _middleOffSet 008E  
                                    ??___flge 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0034                                  _oldDistRight 0092  
                    __size_of_CCP4_Initialize 002E                    __end_of_PWM7_LoadDutyValue 23D6  
                           ??_SMT1_Initialize 0014                        __end_of_TMR5_ReadTimer 2648  
                       CCP4_CaptureISR@module 0007                                     ___fladd@a 00B0  
                                   ___fladd@b 00AC                           calcMotorPow@addMPow 00C8  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 003C  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                            _UART1_ErrorHandler 00D8  
                               __pcstackBANK0 009F                             __size_of_actSpeed 0094  
                          _PWM6_LoadDutyValue 2306                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 00E0  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 249C  
                      __size_of_TMR4_CallBack 0030                                     _calcSpeed 0E40  
                           __size_of_getCurve 024C                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 0088                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK0 00CC                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 1B0E                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 274E         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 2744                                      ?___aldiv 0014  
                                    ?___fladd 00AC                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 276C                                      ?___awdiv 0014  
           CCP3_DefaultCallBack@capturedValue 0001                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___fltol 00B8  
                          ??_UART1_Initialize 0016                                     _distLeftM 009A  
                                   _distFront 004A                              _uart1RxLastError 0040  
                                   _distRight 0098                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 009E                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 004C  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 278E  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 278C  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 20DC                                 ?_calcSteering 0001  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 23D8                                     _curveMode 003F  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 1FFC                                 ??_setSteering 001F  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 1FA8  
                             ___aldiv@counter 001C         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 24CC  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u350_20 215C  
                                    i1u350_21 2158                                      i1u247_20 25A4  
                                    i1u351_20 1BF8                                      i1u247_21 25A0  
                                    i1u351_21 1BF4                                      i1u360_20 2450  
                                    i1u360_21 244C                                      i1u353_20 1C32  
                                    i1u352_28 1C0E                                      i1u353_21 1C2E  
                                    i1u352_29 1C22                                      i1u361_28 2456  
                                    i1u361_29 246A                                      i1u355_20 1C78  
                                    i1u354_28 1C48                                      i1u355_21 1C74  
                                    i1u354_29 1C5C                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u373_20 2284                                      i1u356_28 1C7E  
                                    i1u349_20 2138                                      i1u365_20 21CA  
                                    i1u373_21 2280                                      i1u356_29 1C94  
                                    i1u349_21 2134                                      i1u365_21 21C6  
                                    i1u367_20 2206                                      i1u366_28 21D0  
                                    i1u367_21 2202                                      i1u366_29 21E4  
                                    i1u368_28 220C                                      i1u368_29 2220  
                                    i2u248_40 25BA                                      i2u248_41 25B6  
                                    _PIR1bits 0039A1                                      i2u371_40 23F0  
                                    i2u370_48 22EE                                      i2u371_41 23EC  
                                    i2u370_49 2304                                      i2u372_48 23F6  
                                    i2u357_40 247A                                      i2u372_49 240A  
                                    i2u357_41 2476                                      i2u374_40 2100  
                                    i2u358_40 24AA                                      i2u374_41 20FC  
                                    i2u358_41 24A6                                      i2u375_40 1FD6  
                                    i2u375_41 1FD2                                      _PIR4bits 0039A4  
                                    i2u369_48 22B6                                      i2u369_49 22CC  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 25D8  
                                    _TMR4_ISR 2260                    __end_of_UART1_Transmit_ISR 216E  
                               _TMR4_CallBack 243C                                     _smtPeriod 0046  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                            ?_SMT1_Overflow_ISR 0001  
                                ??_getReverse 0014                                ??_calcMotorPow 00C2  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 00C2  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 00E2  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0041  
                          __end_of_getReverse 1A2C                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 2600  
                         __end_of_setSteering 13A2                                      __Lrparam 0000  
                                 _oldDistLeft 003A                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00C6  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___fladd 04C2                              __size_of___awdiv 00C4  
                            __size_of___flmul 0450                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 246C  
                     __end_of_SMT1_PR_ACQ_ISR 2126                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                      _TMR4_SetInterruptHandler 2762  
                                    _actSpeed 1EB6          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 2786                                      ___xxtofl 104A  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 2726  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 1FFC                                      _getCurve 09C4  
                                    __ptext10 0E40                                      __ptext11 00B2  
                                    __ptext20 0574                                      __ptext12 13A2  
                                    __ptext21 1C9E                                      __ptext13 1A2C  
                                    __ptext30 2758                                      __ptext22 2048  
                                    __ptext14 236E                                      __ptext31 2528  
                                    __ptext23 1E10                                      __ptext15 23A2  
                                    __ptext40 2600                                      __ptext32 2762  
                                    __ptext24 2726                                      __ptext16 1EB6  
                                    __ptext41 1B0E                                      __ptext33 2228  
                                    __ptext25 2730                                      __ptext17 1618  
                                    __ptext50 21B0                                      __ptext42 2700  
                                    __ptext34 2668                                      __ptext26 273A  
                                    __ptext18 104A                                      __ptext51 2126  
                                    __ptext43 1FFC                                      __ptext35 240C  
                                    __ptext27 2744                                      __ptext19 1724  
                                    __ptext60 2786                                      __ptext52 21EC  
                                    __ptext44 2554                                      __ptext36 26A0  
                                    __ptext28 274E                                      __ptext61 2790  
                                    __ptext53 1BD8                                      __ptext45 24CC  
                                    __ptext37 26B8                                      __ptext29 2092  
                                    __ptext70 25AC                                      __ptext62 2794  
                                    __ptext54 278C                                      __ptext46 276C  
                                    __ptext38 26D0                                      __ptext71 2624  
                                    __ptext63 2298                                      __ptext55 278E  
                                    __ptext47 24FA                                      __ptext39 26E8  
                                    __ptext72 20DC                                      __ptext64 246C  
                                    __ptext56 2780                                      __ptext48 2776  
                                    __ptext73 1FA8                                      __ptext65 22D0  
                                    __ptext57 2580                                      __ptext49 1F4A  
                                    __ptext74 25D8                                      __ptext66 249C  
                                    __ptext58 2260                                      __ptext75 0000  
                                    __ptext67 23D8                                      __ptext59 243C  
                                    __ptext68 2684                                      __ptext69 2718  
                                    _distLeft 009C                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 00C2                 __end_of_UART1_SetErrorHandler 2758  
                                  _T3GCONbits 003FA7                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                                    _oldSpeed 0086                                    _T5GCONbits 003F9B  
                               __size_of_loop 00AE                               _SMT1_Initialize 240C  
                                 _IVTLOCKbits 003FD4                                      _setMotor 1A2C  
                                    _setSpeed 008A                      __size_of_TMR5_WriteTimer 002C  
                   _UART1_OverrunErrorHandler 00DA  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                  __end_of_PWM8_LoadDutyValue 23A2                               _CCP3_CaptureISR 2298  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 26A0     __size_of_TMR5_DefaultGateInterruptHandler 001C  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 2684                           __end_of_startAccell 1618  
                              _battCheckCount 0090                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0094  
                             ??_TMR5_GATE_ISR 0011                   __end_of_UART1_RxDataHandler 25AC  
                                 _uart1RxHead 0043                          _CCP4_DefaultCallBack 249C  
                                 _uart1TxHead 0045                                   _uart1RxTail 0042  
                                 _uart1TxTail 0044                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 23A2                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 11FE                               _CCP4_CaptureISR 22D0  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 14E6  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 0E40                           _uart1RxStatusBuffer 0060  
                            ??_TMR5_ReadTimer 000B  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 2786                                   _reverseTime 0082  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 2718  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                 actSpeed@speed 0024  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 00C6  
                            _CCP3_SetCallBack 2776                     __size_of_UART1_Initialize 00A6  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 24FA                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 00C6                      _UART1_TxInterruptHandler 00DE  
                               ___fladd@signs 00B4                           __end_of_Default_ISR 2796  
                     __end_of_SMT1_Initialize 243C                __end_of_PIN_MANAGER_Initialize 1BD8  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 00B5  
                                ___fladd@bexp 00B6                  ?_UART1_SetTxInterruptHandler 0014  
                     __end_of_CCP3_CaptureISR 22CE  
