

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jan 26 08:32:49 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=4,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=4,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=4,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=4,class=CODE,delta=1
    92                           	psect	text78,global,reloc=4,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=4,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=4,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=4,class=CODE,delta=1
   102                           	psect	text88,global,reloc=4,class=CODE,delta=1
   103                           	psect	text89,global,reloc=4,class=CODE,delta=1
   104                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   106                           	psect	text90,global,reloc=4,class=CODE,delta=1
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109  0000                     
   110                           ; Version 2.20
   111                           ; Generated 05/05/2020 GMT
   112                           ; 
   113                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F46K42 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     _ADERRL	set	16098
   145  0000                     _ADERRH	set	16099
   146  0000                     _ADPREVL	set	16109
   147  0000                     _ADPREVH	set	16110
   148  0000                     _ADFLTRL	set	16102
   149  0000                     _ADFLTRH	set	16103
   150  0000                     _ADACCL	set	16104
   151  0000                     _ADACCH	set	16105
   152  0000                     _ADCNT	set	16107
   153  0000                     _ADRESL	set	16111
   154  0000                     _ADRESH	set	16112
   155  0000                     _ADCON0	set	16120
   156  0000                     _ADCON1	set	16121
   157  0000                     _ADPREH	set	16119
   158  0000                     _ADPREL	set	16118
   159  0000                     _ADCAP	set	16117
   160  0000                     _ADACQH	set	16116
   161  0000                     _ADPCH	set	16113
   162  0000                     _ADRPT	set	16108
   163  0000                     _ADACCU	set	16106
   164  0000                     _ADSTPTH	set	16101
   165  0000                     _ADSTPTL	set	16100
   166  0000                     _ADUTHH	set	16097
   167  0000                     _ADUTHL	set	16096
   168  0000                     _ADLTHH	set	16095
   169  0000                     _T2CON	set	16300
   170  0000                     _T2TMR	set	16298
   171  0000                     _T2PR	set	16299
   172  0000                     _T2HLT	set	16301
   173  0000                     _T2CLKCON	set	16302
   174  0000                     _SMT1SIG	set	16162
   175  0000                     _SMT1WIN	set	16163
   176  0000                     _SMT1CLK	set	16161
   177  0000                     _SMT1STAT	set	16160
   178  0000                     _SMT1CON1	set	16159
   179  0000                     _PWM8DCL	set	16224
   180  0000                     _PWM8DCH	set	16225
   181  0000                     _PWM8CON	set	16226
   182  0000                     _CCPTMRS1bits	set	16223
   183  0000                     _PWM7DCL	set	16228
   184  0000                     _PWM7DCH	set	16229
   185  0000                     _PWM7CON	set	16230
   186  0000                     _T4CON	set	16288
   187  0000                     _PIR7bits	set	14759
   188  0000                     _T4TMR	set	16286
   189  0000                     _T4PR	set	16287
   190  0000                     _T4RST	set	16291
   191  0000                     _T4HLT	set	16289
   192  0000                     _T4CLKCON	set	16290
   193  0000                     _T3CON	set	16294
   194  0000                     _TMR3L	set	16292
   195  0000                     _TMR3H	set	16293
   196  0000                     _T3CLK	set	16297
   197  0000                     _T3GATE	set	16296
   198  0000                     _T3GCON	set	16295
   199  0000                     _T5CON	set	16282
   200  0000                     _T5CLK	set	16285
   201  0000                     _T5GATE	set	16284
   202  0000                     _CCPR4L	set	16240
   203  0000                     _CCPR4H	set	16241
   204  0000                     _CCP4CAP	set	16243
   205  0000                     _CCP4CON	set	16242
   206  0000                     _IPR9bits	set	14729
   207  0000                     _IVTBASEL	set	16341
   208  0000                     _IVTBASEH	set	16342
   209  0000                     _IVTBASEU	set	16343
   210  0000                     _CCP4PPS	set	15056
   211  0000                     _SMT1WINPPS	set	15057
   212  0000                     _CLCIN0PPS	set	15065
   213  0000                     _CLCIN3PPS	set	15068
   214  0000                     _TRISD	set	16325
   215  0000                     _TRISC	set	16324
   216  0000                     _TRISB	set	16323
   217  0000                     _LATC	set	16316
   218  0000                     _LATB	set	16315
   219  0000                     _OSCTUNE	set	14814
   220  0000                     _OSCFRQ	set	14815
   221                           
   222                           	psect	nvBANK0
   223  0000E9                     __pnvBANK0:
   224                           	callstack 0
   225  0000E9                     _TMR4_InterruptHandler:
   226                           	callstack 0
   227  0000E9                     	ds	2
   228  0000EB                     _timer3ReloadVal:
   229                           	callstack 0
   230  0000EB                     	ds	2
   231  0000ED                     _TMR5_GateInterruptHandler:
   232                           	callstack 0
   233  0000ED                     	ds	2
   234  0000EF                     _timer5ReloadVal:
   235                           	callstack 0
   236  0000EF                     	ds	2
   237  0000F1                     _CCP4_CallBack:
   238                           	callstack 0
   239  0000F1                     	ds	2
   240  0000F3                     _CCP3_CallBack:
   241                           	callstack 0
   242  0000F3                     	ds	2
   243  0000F5                     _UART1_ErrorHandler:
   244                           	callstack 0
   245  0000F5                     	ds	2
   246  0000F7                     _UART1_OverrunErrorHandler:
   247                           	callstack 0
   248  0000F7                     	ds	2
   249  0000F9                     _UART1_FramingErrorHandler:
   250                           	callstack 0
   251  0000F9                     	ds	2
   252  0000FB                     _UART1_TxInterruptHandler:
   253                           	callstack 0
   254  0000FB                     	ds	2
   255  0000FD                     _UART1_RxInterruptHandler:
   256                           	callstack 0
   257  0000FD                     	ds	2
   258  0000FF                     _uart1TxBufferRemaining:
   259                           	callstack 0
   260  0000FF                     	ds	1
   261  0000                     _CLC3CON	set	15456
   262  0000                     _U1ERRIRbits	set	15865
   263  0000                     _ADCON1bits	set	16121
   264  0000                     _ADSTATbits	set	16124
   265  0000                     _ADCON2bits	set	16122
   266  0000                     _ADCON3bits	set	16123
   267  0000                     _ADCON0bits	set	16120
   268  0000                     _SMT1PR	set	16155
   269  0000                     _SMT1STATbits	set	16160
   270  0000                     _SMT1CON0bits	set	16158
   271  0000                     _SMT1CON1bits	set	16159
   272  0000                     _PR2	set	16299
   273  0000                     _TMR2	set	16298
   274  0000                     _T2CONbits	set	16300
   275  0000                     _T2RSTbits	set	16303
   276  0000                     _T2HLTbits	set	16301
   277  0000                     _PR4	set	16287
   278  0000                     _TMR4	set	16286
   279  0000                     _T4CONbits	set	16288
   280  0000                     _T4RSTbits	set	16291
   281  0000                     _T4HLTbits	set	16289
   282  0000                     _T3GCONbits	set	16295
   283  0000                     _T3CONbits	set	16294
   284  0000                     _T5GCONbits	set	16283
   285  0000                     _T5CONbits	set	16282
   286  0000                     _IVTLOCKbits	set	16340
   287  0000                     _GIE	set	130711
   288  0000                     _IPR1bits	set	14721
   289  0000                     _IPR3bits	set	14723
   290  0000                     _PIE3bits	set	14739
   291  0000                     _PMD0	set	14784
   292  0000                     _OSCCON1	set	14809
   293  0000                     _OSCCON3	set	14811
   294  0000                     _OSCEN	set	14813
   295  0000                     _RA0PPS	set	14848
   296  0000                     _RA1PPS	set	14849
   297  0000                     _ANSELA	set	14912
   298  0000                     _ANSELB	set	14928
   299  0000                     _ANSELC	set	14944
   300  0000                     _ANSELD	set	14960
   301  0000                     _LATA	set	16314
   302  0000                     _LATD	set	16317
   303  0000                     _LATE	set	16318
   304  0000                     _PMD7	set	14791
   305  0000                     _PMD6	set	14790
   306  0000                     _PMD5	set	14789
   307  0000                     _PMD4	set	14788
   308  0000                     _PMD3	set	14787
   309  0000                     _PMD2	set	14786
   310  0000                     _PMD1	set	14785
   311  0000                     _TRISA	set	16322
   312  0000                     _TRISE	set	16326
   313  0000                     _PORTBbits	set	16331
   314  0000                     _PORTDbits	set	16333
   315  0000                     _INTCON0bits	set	16338
   316  0000                     _INLVLD	set	14964
   317  0000                     _SLRCOND	set	14963
   318  0000                     _ODCOND	set	14962
   319  0000                     _RD0I2C	set	14970
   320  0000                     _WPUD	set	14961
   321  0000                     _ANSELE	set	14976
   322  0000                     _INLVLC	set	14948
   323  0000                     _SLRCONC	set	14947
   324  0000                     _ODCONC	set	14946
   325  0000                     _RC3I2C	set	14954
   326  0000                     _WPUC	set	14945
   327  0000                     _INLVLB	set	14932
   328  0000                     _SLRCONB	set	14931
   329  0000                     _ODCONB	set	14930
   330  0000                     _RB1I2C	set	14938
   331  0000                     _WPUB	set	14929
   332  0000                     _T5GPPS	set	15049
   333  0000                     _CCP3PPS	set	15055
   334  0000                     _INLVLE	set	14980
   335  0000                     _SLRCONE	set	14979
   336  0000                     _ODCONE	set	14978
   337  0000                     _WPUE	set	14977
   338  0000                     _INLVLA	set	14916
   339  0000                     _SLRCONA	set	14915
   340  0000                     _ODCONA	set	14914
   341  0000                     _WPUA	set	14913
   342  0000                     _RB2I2C	set	14939
   343  0000                     _RC4I2C	set	14955
   344  0000                     _RD1I2C	set	14971
   345  0000                     _U1RXPPS	set	15077
   346  0000                     _RA3PPS	set	14851
   347  0000                     _RA4PPS	set	14852
   348  0000                     _CLC3CONbits	set	15456
   349  0000                     _U1RXB	set	15848
   350  0000                     _U1TXB	set	15850
   351  0000                     _U1P1L	set	15852
   352  0000                     _RB3PPS	set	14859
   353  0000                     _CLCIN2PPS	set	15067
   354  0000                     _SMT1SIGPPS	set	15058
   355  0000                     _PIE7bits	set	14743
   356  0000                     _PIE8bits	set	14744
   357  0000                     _PIE9bits	set	14745
   358  0000                     _PIR9bits	set	14761
   359  0000                     _SMT1TMR	set	16146
   360  0000                     _SMT1CPR	set	16149
   361  0000                     _SMT1CPW	set	16152
   362  0000                     _ADLTHL	set	16094
   363  0000                     _SMT1PRL	set	16155
   364  0000                     _SMT1PRH	set	16156
   365  0000                     _SMT1PRU	set	16157
   366  0000                     _SMT1CON0	set	16158
   367  0000                     _CCPTMRS0bits	set	16222
   368  0000                     _CCPR3L	set	16244
   369  0000                     _CCPR3H	set	16245
   370  0000                     _CCP3CON	set	16246
   371  0000                     _U1ERRIE	set	15866
   372  0000                     _U1ERRIR	set	15865
   373  0000                     _U1UIR	set	15864
   374  0000                     _U1FIFO	set	15863
   375  0000                     _U1BRGH	set	15862
   376  0000                     _U1BRGL	set	15861
   377  0000                     _U1CON2	set	15860
   378  0000                     _U1CON1	set	15859
   379  0000                     _U1CON0	set	15858
   380  0000                     _U1P3H	set	15857
   381  0000                     _U1P3L	set	15856
   382  0000                     _U1P2H	set	15855
   383  0000                     _U1P2L	set	15854
   384  0000                     _U1P1H	set	15853
   385  0000                     _IVTLOCK	set	16340
   386  0000                     _IPR7bits	set	14727
   387  0000                     _IPR8bits	set	14728
   388  0000                     _IPR10bits	set	14730
   389  0000                     _PIE1bits	set	14737
   390  0000                     _TMR5L	set	16280
   391  0000                     _TMR5H	set	16281
   392  0000                     _T5GCON	set	16283
   393  0000                     _CCP3CAP	set	16247
   394  0000                     _PIR10bits	set	14762
   395  0000                     _PIR1bits	set	14753
   396  0000                     _PIR6bits	set	14758
   397  0000                     _PIR8bits	set	14760
   398  0000                     _PIE10bits	set	14746
   399  0000                     _PWM6DCL	set	16232
   400  0000                     _PWM6DCH	set	16233
   401  0000                     _PWM6CON	set	16234
   402  0000                     _PWM5DCL	set	16236
   403  0000                     _PWM5DCH	set	16237
   404  0000                     _PWM5CON	set	16238
   405  0000                     _PIR4bits	set	14756
   406  0000                     _CLC3GLS3	set	15465
   407  0000                     _CLC3GLS2	set	15464
   408  0000                     _CLC3GLS1	set	15463
   409  0000                     _CLC3GLS0	set	15462
   410  0000                     _CLC3SEL3	set	15461
   411  0000                     _CLC3SEL2	set	15460
   412  0000                     _CLC3SEL1	set	15459
   413  0000                     _CLC3SEL0	set	15458
   414  0000                     _CLC3POL	set	15457
   415  0000                     _T2RST	set	16303
   416  0000                     _ADACQL	set	16115
   417  0000                     _ADCLK	set	16127
   418  0000                     _ADACT	set	16126
   419  0000                     _ADREF	set	16125
   420  0000                     _ADSTAT	set	16124
   421  0000                     _ADCON3	set	16123
   422  0000                     _ADCON2	set	16122
   423                           
   424                           	psect	smallconst
   425  001000                     __psmallconst:
   426                           	callstack 0
   427  001000  00                 	db	0
   428  001001                     STR_1:
   429                           
   430                           ; BSR set to: 0
   431  001001  74                 	db	116	;'t'
   432  001002  65                 	db	101	;'e'
   433  001003  6D                 	db	109	;'m'
   434  001004  70                 	db	112	;'p'
   435  001005  43                 	db	67	;'C'
   436  001006  4E                 	db	78	;'N'
   437  001007  54                 	db	84	;'T'
   438  001008  20                 	db	32
   439  001009  4F                 	db	79	;'O'
   440  00100A  76                 	db	118	;'v'
   441  00100B  65                 	db	101	;'e'
   442  00100C  72                 	db	114	;'r'
   443  00100D  66                 	db	102	;'f'
   444  00100E  6C                 	db	108	;'l'
   445  00100F  6F                 	db	111	;'o'
   446  001010  77                 	db	119	;'w'
   447  001011  00                 	db	0
   448  001012                     STR_2:
   449                           
   450                           ; BSR set to: 0
   451  001012  42                 	db	66	;'B'
   452  001013  56                 	db	86	;'V'
   453  001014  6F                 	db	111	;'o'
   454  001015  6C                 	db	108	;'l'
   455  001016  74                 	db	116	;'t'
   456  001017  3A                 	db	58	;':'
   457  001018  20                 	db	32
   458  001019  25                 	db	37
   459  00101A  75                 	db	117	;'u'
   460  00101B  0A                 	db	10
   461  00101C  00                 	db	0
   462  00101D  00                 	db	0	; dummy byte at the end
   463  0000                     
   464                           ; #config settings
   465                           
   466                           	psect	cinit
   467  003A80                     __pcinit:
   468                           	callstack 0
   469  003A80                     start_initialization:
   470                           	callstack 0
   471  003A80                     __initialization:
   472                           	callstack 0
   473                           
   474                           ; Clear objects allocated to BANK1 (32 bytes)
   475  003A80  EE00  F100         	lfsr	0,__pbssBANK1
   476  003A84  0E20               	movlw	32
   477  003A86                     clear_0:
   478  003A86  6AEE               	clrf	postinc0,c
   479  003A88  06E8               	decf	wreg,f,c
   480  003A8A  E1FD               	bnz	clear_0
   481                           
   482                           ; Clear objects allocated to BANK0 (58 bytes)
   483  003A8C  EE00  F0AF         	lfsr	0,__pbssBANK0
   484  003A90  0E3A               	movlw	58
   485  003A92                     clear_1:
   486  003A92  6AEE               	clrf	postinc0,c
   487  003A94  06E8               	decf	wreg,f,c
   488  003A96  E1FD               	bnz	clear_1
   489                           
   490                           ; Clear objects allocated to COMRAM (31 bytes)
   491  003A98  EE00  F022         	lfsr	0,__pbssCOMRAM
   492  003A9C  0E1F               	movlw	31
   493  003A9E                     clear_2:
   494  003A9E  6AEE               	clrf	postinc0,c
   495  003AA0  06E8               	decf	wreg,f,c
   496  003AA2  E1FD               	bnz	clear_2
   497                           
   498                           ;
   499                           ; Setup IVTBASE
   500                           ;
   501  003AA4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   502  003AA6  6ED5               	movwf	213,c
   503  003AA8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   504  003AAA  6ED6               	movwf	214,c
   505  003AAC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   506  003AAE  6ED7               	movwf	215,c
   507  003AB0                     end_of_initialization:
   508                           	callstack 0
   509  003AB0                     __end_of__initialization:
   510                           	callstack 0
   511  003AB0  0100               	movlb	0
   512  003AB2  EF0B  F01F         	goto	_main	;jump to C main() function
   513                           
   514                           	psect	bssCOMRAM
   515  000022                     __pbssCOMRAM:
   516                           	callstack 0
   517  000022                     _flags:
   518                           	callstack 0
   519  000022                     	ds	2
   520  000024                     _BatteryVolt:
   521                           	callstack 0
   522  000024                     	ds	2
   523  000026                     _actMotorPow:
   524                           	callstack 0
   525  000026                     	ds	2
   526  000028                     _oldDistRight:
   527                           	callstack 0
   528  000028                     	ds	2
   529  00002A                     _oldDistLeft:
   530                           	callstack 0
   531  00002A                     	ds	2
   532  00002C                     TMR4_ISR@CountCallBack:
   533                           	callstack 0
   534  00002C                     	ds	2
   535  00002E                     _distRight:
   536                           	callstack 0
   537  00002E                     	ds	2
   538  000030                     _distLeft:
   539                           	callstack 0
   540  000030                     	ds	2
   541  000032                     _reverseCount:
   542                           	callstack 0
   543  000032                     	ds	1
   544  000033                     _delay:
   545                           	callstack 0
   546  000033                     	ds	1
   547  000034                     _cycle10ms:
   548                           	callstack 0
   549  000034                     	ds	1
   550  000035                     _curveMode:
   551                           	callstack 0
   552  000035                     	ds	1
   553  000036                     _driveMode:
   554                           	callstack 0
   555  000036                     	ds	1
   556  000037                     _uart1RxLastError:
   557                           	callstack 0
   558  000037                     	ds	1
   559  000038                     _uart1RxCount:
   560                           	callstack 0
   561  000038                     	ds	1
   562  000039                     _uart1RxTail:
   563                           	callstack 0
   564  000039                     	ds	1
   565  00003A                     _uart1RxHead:
   566                           	callstack 0
   567  00003A                     	ds	1
   568  00003B                     _uart1TxTail:
   569                           	callstack 0
   570  00003B                     	ds	1
   571  00003C                     _uart1TxHead:
   572                           	callstack 0
   573  00003C                     	ds	1
   574  00003D                     _smtPeriod:
   575                           	callstack 0
   576  00003D                     	ds	4
   577                           
   578                           	psect	bssBANK0
   579  0000AF                     __pbssBANK0:
   580                           	callstack 0
   581  0000AF                     _uart1RxStatusBuffer:
   582                           	callstack 0
   583  0000AF                     	ds	8
   584  0000B7                     _uart1RxBuffer:
   585                           	callstack 0
   586  0000B7                     	ds	8
   587  0000BF                     _uart1TxBuffer:
   588                           	callstack 0
   589  0000BF                     	ds	8
   590  0000C7                     _smtWay:
   591                           	callstack 0
   592  0000C7                     	ds	4
   593  0000CB                     _smtDuty:
   594                           	callstack 0
   595  0000CB                     	ds	4
   596  0000CF                     _nout:
   597                           	callstack 0
   598  0000CF                     	ds	2
   599  0000D1                     _width:
   600                           	callstack 0
   601  0000D1                     	ds	2
   602  0000D3                     _prec:
   603                           	callstack 0
   604  0000D3                     	ds	2
   605  0000D5                     _tempCNT:
   606                           	callstack 0
   607  0000D5                     	ds	2
   608  0000D7                     _reverseTime:
   609                           	callstack 0
   610  0000D7                     	ds	2
   611  0000D9                     _oldSpeed:
   612                           	callstack 0
   613  0000D9                     	ds	2
   614  0000DB                     _currentSpeed:
   615                           	callstack 0
   616  0000DB                     	ds	2
   617  0000DD                     _setSpeed:
   618                           	callstack 0
   619  0000DD                     	ds	2
   620  0000DF                     _motPow:
   621                           	callstack 0
   622  0000DF                     	ds	2
   623  0000E1                     _battCheckCount:
   624                           	callstack 0
   625  0000E1                     	ds	2
   626  0000E3                     _distRightM:
   627                           	callstack 0
   628  0000E3                     	ds	2
   629  0000E5                     _distLeftM:
   630                           	callstack 0
   631  0000E5                     	ds	2
   632  0000E7                     _distFront:
   633                           	callstack 0
   634  0000E7                     	ds	2
   635                           
   636                           	psect	bssBANK1
   637  000100                     __pbssBANK1:
   638                           	callstack 0
   639  000100                     _dbuf:
   640                           	callstack 0
   641  000100                     	ds	32
   642                           
   643                           	psect	cstackBANK1
   644  000120                     __pcstackBANK1:
   645                           	callstack 0
   646  000120                     ?_vfprintf:
   647                           	callstack 0
   648  000120                     vfprintf@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x0
   652  000120                     	ds	2
   653  000122                     vfprintf@fmt:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657  000122                     	ds	2
   658  000124                     vfprintf@ap:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x4
   662  000124                     	ds	2
   663  000126                     ?_printf:
   664                           	callstack 0
   665  000126                     printf@fmt:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x6
   669  000126                     	ds	4
   670  00012A                     printf@ap:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0xA
   674  00012A                     	ds	2
   675                           
   676                           	psect	cstackBANK0
   677  000060                     __pcstackBANK0:
   678                           	callstack 0
   679  000060                     ??_TMR5_Initialize:
   680  000060                     ??_PWM7_LoadDutyValue:
   681  000060                     ??_PWM8_LoadDutyValue:
   682  000060                     ??_PWM5_LoadDutyValue:
   683  000060                     ??_PWM6_LoadDutyValue:
   684  000060                     ??_ADCC_GetSingleConversion:
   685  000060                     ?___awdiv:
   686                           	callstack 0
   687  000060                     ?___aldiv:
   688                           	callstack 0
   689  000060                     ?___lodiv:
   690                           	callstack 0
   691  000060                     ?___lomod:
   692                           	callstack 0
   693  000060                     getCurve@deltaLeft:
   694                           	callstack 0
   695  000060                     ___awdiv@dividend:
   696                           	callstack 0
   697  000060                     fputc@c:
   698                           	callstack 0
   699  000060                     strlen@a:
   700                           	callstack 0
   701  000060                     ___aldiv@dividend:
   702                           	callstack 0
   703  000060                     ___lodiv@dividend:
   704                           	callstack 0
   705  000060                     ___lomod@dividend:
   706                           	callstack 0
   707                           
   708                           ; 8 bytes @ 0x0
   709  000060                     	ds	2
   710  000062                     ADCC_GetSingleConversion@channel:
   711                           	callstack 0
   712  000062                     getCurve@deltaRight:
   713                           	callstack 0
   714  000062                     setMotor@motorPower:
   715                           	callstack 0
   716  000062                     ___awdiv@divisor:
   717                           	callstack 0
   718  000062                     fputc@fp:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x2
   722  000062                     	ds	2
   723  000064                     ??_setMotor:
   724  000064                     ??_fputc:
   725  000064                     ___awdiv@counter:
   726                           	callstack 0
   727  000064                     ___aldiv@divisor:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x4
   731  000064                     	ds	1
   732  000065                     ___awdiv@sign:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x5
   736  000065                     	ds	1
   737  000066                     ___awdiv@quotient:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x6
   741  000066                     	ds	2
   742  000068                     ?___xxtofl:
   743                           	callstack 0
   744  000068                     ___aldiv@counter:
   745                           	callstack 0
   746  000068                     setSteering@steering:
   747                           	callstack 0
   748  000068                     ___xxtofl@val:
   749                           	callstack 0
   750  000068                     ___lodiv@divisor:
   751                           	callstack 0
   752  000068                     ___lomod@divisor:
   753                           	callstack 0
   754                           
   755                           ; 8 bytes @ 0x8
   756  000068                     	ds	1
   757  000069                     ___aldiv@sign:
   758                           	callstack 0
   759  000069                     fputs@s:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x9
   763  000069                     	ds	1
   764  00006A                     setSteering@steeringMode:
   765                           	callstack 0
   766  00006A                     ___aldiv@quotient:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0xA
   770  00006A                     	ds	1
   771  00006B                     ??_setSteering:
   772  00006B                     fputs@fp:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0xB
   776  00006B                     	ds	1
   777  00006C                     ??___xxtofl:
   778                           
   779                           ; 1 bytes @ 0xC
   780  00006C                     	ds	1
   781  00006D                     fputs@c:
   782                           	callstack 0
   783  00006D                     setSteering@steeringF:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0xD
   787  00006D                     	ds	1
   788  00006E                     actSpeed@speed:
   789                           	callstack 0
   790  00006E                     fputs@i:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0xE
   794  00006E                     	ds	1
   795  00006F                     setSteering@steeringB:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0xF
   799  00006F                     	ds	1
   800  000070                     ?_pad:
   801                           	callstack 0
   802  000070                     ___xxtofl@sign:
   803                           	callstack 0
   804  000070                     pad@fp:
   805                           	callstack 0
   806  000070                     ___lodiv@quotient:
   807                           	callstack 0
   808                           
   809                           ; 8 bytes @ 0x10
   810  000070                     	ds	1
   811  000071                     ??_calcSteering:
   812  000071                     ___xxtofl@exp:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x11
   816  000071                     	ds	1
   817  000072                     pad@buf:
   818                           	callstack 0
   819  000072                     ___xxtofl@arg:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x12
   823  000072                     	ds	1
   824  000073                     calcSteering@delta:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x13
   828  000073                     	ds	1
   829  000074                     pad@p:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x14
   833  000074                     	ds	2
   834  000076                     ??_pad:
   835  000076                     ?___flmul:
   836                           	callstack 0
   837  000076                     ___flge@ff1:
   838                           	callstack 0
   839  000076                     ___flmul@b:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x16
   843  000076                     	ds	1
   844  000077                     pad@i:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x17
   848  000077                     	ds	1
   849  000078                     ___lodiv@counter:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x18
   853  000078                     	ds	1
   854  000079                     pad@w:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x19
   858  000079                     	ds	1
   859  00007A                     ___flge@ff2:
   860                           	callstack 0
   861  00007A                     ___flmul@a:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x1A
   865  00007A                     	ds	1
   866  00007B                     ?_utoa:
   867                           	callstack 0
   868  00007B                     utoa@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x1B
   872  00007B                     	ds	2
   873  00007D                     utoa@d:
   874                           	callstack 0
   875                           
   876                           ; 8 bytes @ 0x1D
   877  00007D                     	ds	1
   878  00007E                     ??___flmul:
   879  00007E                     ??___flge:
   880                           
   881                           ; 1 bytes @ 0x1E
   882  00007E                     	ds	4
   883  000082                     ___flmul@sign:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x22
   887  000082                     	ds	1
   888  000083                     ___flmul@aexp:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x23
   892  000083                     	ds	1
   893  000084                     ___flmul@grs:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x24
   897  000084                     	ds	1
   898  000085                     ??_utoa:
   899                           
   900                           ; 1 bytes @ 0x25
   901  000085                     	ds	3
   902  000088                     ___flmul@bexp:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x28
   906  000088                     	ds	1
   907  000089                     ___flmul@prod:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x29
   911  000089                     	ds	4
   912  00008D                     ___flmul@temp:
   913                           	callstack 0
   914  00008D                     utoa@p:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x2D
   918  00008D                     	ds	2
   919  00008F                     ?___fladd:
   920                           	callstack 0
   921  00008F                     utoa@w:
   922                           	callstack 0
   923  00008F                     ___fladd@b:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x2F
   927  00008F                     	ds	2
   928  000091                     utoa@n:
   929                           	callstack 0
   930                           
   931                           ; 8 bytes @ 0x31
   932  000091                     	ds	2
   933  000093                     ___fladd@a:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x33
   937  000093                     	ds	4
   938  000097                     ??___fladd:
   939                           
   940                           ; 1 bytes @ 0x37
   941  000097                     	ds	2
   942  000099                     utoa@i:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x39
   946  000099                     	ds	2
   947  00009B                     ?_vfpfcnvrt:
   948                           	callstack 0
   949  00009B                     ___fladd@signs:
   950                           	callstack 0
   951  00009B                     vfpfcnvrt@fp:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x3B
   955  00009B                     	ds	1
   956  00009C                     ___fladd@aexp:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x3C
   960  00009C                     	ds	1
   961  00009D                     ___fladd@bexp:
   962                           	callstack 0
   963  00009D                     vfpfcnvrt@fmt:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x3D
   967  00009D                     	ds	1
   968  00009E                     ___fladd@grs:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x3E
   972  00009E                     	ds	1
   973  00009F                     ?___fltol:
   974                           	callstack 0
   975  00009F                     vfpfcnvrt@ap:
   976                           	callstack 0
   977  00009F                     ___fltol@f1:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x3F
   981  00009F                     	ds	2
   982  0000A1                     ??_vfpfcnvrt:
   983                           
   984                           ; 1 bytes @ 0x41
   985  0000A1                     	ds	2
   986  0000A3                     ??___fltol:
   987                           
   988                           ; 1 bytes @ 0x43
   989  0000A3                     	ds	2
   990  0000A5                     vfpfcnvrt@llu:
   991                           	callstack 0
   992                           
   993                           ; 8 bytes @ 0x45
   994  0000A5                     	ds	2
   995  0000A7                     ??_calcSpeed:
   996  0000A7                     ??_calcMotorPow:
   997                           
   998                           ; 1 bytes @ 0x47
   999  0000A7                     	ds	2
  1000  0000A9                     calcMotorPow@setSpeedDelta:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x49
  1004  0000A9                     	ds	2
  1005  0000AB                     calcSpeed@speed:
  1006                           	callstack 0
  1007  0000AB                     calcMotorPow@oldSpeedDelta:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x4B
  1011  0000AB                     	ds	2
  1012  0000AD                     calcMotorPow@addMPow:
  1013                           	callstack 0
  1014  0000AD                     vfprintf@cfmt:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x4D
  1018  0000AD                     	ds	2
  1019                           
  1020                           	psect	cstackCOMRAM
  1021  000001                     __pcstackCOMRAM:
  1022                           	callstack 0
  1023  000001                     CCP3_DefaultCallBack@capturedValue:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x0
  1027  000001                     	ds	2
  1028  000003                     ??_CCP3_CaptureISR:
  1029                           
  1030                           ; 1 bytes @ 0x2
  1031  000003                     	ds	2
  1032  000005                     CCP3_CaptureISR@module:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x4
  1036  000005                     	ds	2
  1037  000007                     CCP4_DefaultCallBack@capturedValue:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x6
  1041  000007                     	ds	2
  1042  000009                     ??_CCP4_CaptureISR:
  1043                           
  1044                           ; 1 bytes @ 0x8
  1045  000009                     	ds	2
  1046  00000B                     CCP4_CaptureISR@module:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0xA
  1050  00000B                     	ds	2
  1051  00000D                     ?_TMR5_ReadTimer:
  1052                           	callstack 0
  1053  00000D                     TMR5_WriteTimer@timerVal:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0xC
  1057  00000D                     	ds	2
  1058  00000F                     ??_TMR5_ReadTimer:
  1059  00000F                     
  1060                           ; 1 bytes @ 0xE
  1061  00000F                     	ds	2
  1062  000011                     TMR5_ReadTimer@readVal:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x10
  1066  000011                     	ds	2
  1067  000013                     TMR5_ReadTimer@readValHigh:
  1068                           	callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x12
  1071  000013                     	ds	1
  1072  000014                     TMR5_ReadTimer@readValLow:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x13
  1076  000014                     	ds	1
  1077  000015                     ??_TMR5_GATE_ISR:
  1078                           
  1079                           ; 1 bytes @ 0x14
  1080  000015                     	ds	2
  1081  000017                     ??_UART1_tx_vect_isr:
  1082  000017                     
  1083                           ; 1 bytes @ 0x16
  1084  000017                     	ds	3
  1085  00001A                     ??_UART1_rx_vect_isr:
  1086                           
  1087                           ; 1 bytes @ 0x19
  1088  00001A                     	ds	3
  1089  00001D                     ??_TMR4_ISR:
  1090                           
  1091                           ; 1 bytes @ 0x1C
  1092  00001D                     	ds	3
  1093  000020                     ??_TMR3_Initialize:
  1094  000020                     ??_getCurve:
  1095  000020                     ?_strlen:
  1096                           	callstack 0
  1097  000020                     ?_ADCC_GetSingleConversion:
  1098                           	callstack 0
  1099  000020                     ?_actSpeed:
  1100                           	callstack 0
  1101  000020                     UART1_Write@txData:
  1102                           	callstack 0
  1103  000020                     INTERRUPT_Initialize@state:
  1104                           	callstack 0
  1105  000020                     ___fltol@sign1:
  1106                           	callstack 0
  1107  000020                     ___lomod@counter:
  1108                           	callstack 0
  1109  000020                     UART1_SetFramingErrorHandler@interruptHandler:
  1110                           	callstack 0
  1111  000020                     UART1_SetOverrunErrorHandler@interruptHandler:
  1112                           	callstack 0
  1113  000020                     UART1_SetErrorHandler@interruptHandler:
  1114                           	callstack 0
  1115  000020                     UART1_SetRxInterruptHandler@InterruptHandler:
  1116                           	callstack 0
  1117  000020                     UART1_SetTxInterruptHandler@InterruptHandler:
  1118                           	callstack 0
  1119  000020                     CCP3_SetCallBack@customCallBack:
  1120                           	callstack 0
  1121  000020                     CCP4_SetCallBack@customCallBack:
  1122                           	callstack 0
  1123  000020                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1124                           	callstack 0
  1125  000020                     TMR4_SetInterruptHandler@InterruptHandler:
  1126                           	callstack 0
  1127  000020                     PWM7_LoadDutyValue@dutyValue:
  1128                           	callstack 0
  1129  000020                     PWM8_LoadDutyValue@dutyValue:
  1130                           	callstack 0
  1131  000020                     PWM5_LoadDutyValue@dutyValue:
  1132                           	callstack 0
  1133  000020                     PWM6_LoadDutyValue@dutyValue:
  1134                           	callstack 0
  1135  000020                     strlen@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x1F
  1139  000020                     	ds	1
  1140  000021                     putch@txData:
  1141                           	callstack 0
  1142  000021                     ___fltol@exp1:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x20
  1146  000021                     	ds	1
  1147  000022                     
  1148                           ; 1 bytes @ 0x21
  1149 ;;
  1150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1151 ;;
  1152 ;; *************** function _main *****************
  1153 ;; Defined at:
  1154 ;;		line 9 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels required when called: 20
  1174 ;; This function calls:
  1175 ;;		_SYSTEM_Initialize
  1176 ;;		_TMR4_SetInterruptHandler
  1177 ;;		_loop
  1178 ;; This function is called by:
  1179 ;;		Startup code after reset
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text0
  1184  003E16                     __ptext0:
  1185                           	callstack 0
  1186  003E16                     _main:
  1187                           	callstack 11
  1188  003E16                     
  1189                           ;main.c: 10:     SYSTEM_Initialize();
  1190  003E16  ECEC  F01B         	call	_SYSTEM_Initialize	;wreg free
  1191  003E1A                     
  1192                           ;main.c: 11:     (INTCON0bits.GIEH = 1);
  1193  003E1A  8ED2               	bsf	210,7,c	;volatile
  1194  003E1C                     
  1195                           ;main.c: 12:     (INTCON0bits.GIEL = 1);
  1196  003E1C  8CD2               	bsf	210,6,c	;volatile
  1197                           
  1198                           ;main.c: 13:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1199  003E1E  0E60               	movlw	low _TMR4_10msISR
  1200  003E20  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1201  003E22  0E3F               	movlw	high _TMR4_10msISR
  1202  003E24  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1203  003E26  EC9E  F01F         	call	_TMR4_SetInterruptHandler	;wreg free
  1204  003E2A                     l6492:
  1205                           
  1206                           ;main.c: 16:         loop();
  1207  003E2A  ECEE  F012         	call	_loop	;wreg free
  1208  003E2E  EF15  F01F         	goto	l6492
  1209  003E32  EF57  F000         	goto	start
  1210  003E36                     __end_of_main:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _loop *****************
  1214 ;; Defined at:
  1215 ;;		line 20 in file "main.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 19
  1236 ;; This function calls:
  1237 ;;		___flge
  1238 ;;		___xxtofl
  1239 ;;		_calcMotorPow
  1240 ;;		_calcSpeed
  1241 ;;		_calcSteering
  1242 ;;		_checkBatt
  1243 ;;		_getBatteryVoltage
  1244 ;;		_getCurve
  1245 ;;		_getReverse
  1246 ;;		_printf
  1247 ;;		_setMotor
  1248 ;;		_setSteering
  1249 ;;		_startAccell
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text1
  1256  0025DC                     __ptext1:
  1257                           	callstack 0
  1258  0025DC                     _loop:
  1259                           	callstack 11
  1260  0025DC                     
  1261                           ;main.c: 21:     setMotor(0);
  1262  0025DC  0E00               	movlw	0
  1263  0025DE  0100               	movlb	0	; () banked
  1264  0025E0  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  1265  0025E2  0E00               	movlw	0
  1266  0025E4  6F62               	movwf	setMotor@motorPower& (0+255),b
  1267  0025E6  EC47  F016         	call	_setMotor	;wreg free
  1268                           
  1269                           ;main.c: 22:     setSteering(0,Front);
  1270  0025EA  0E00               	movlw	0
  1271  0025EC  0100               	movlb	0	; () banked
  1272  0025EE  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1273  0025F0  0E00               	movlw	0
  1274  0025F2  6F68               	movwf	setSteering@steering& (0+255),b
  1275  0025F4  0E03               	movlw	3
  1276  0025F6  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1277  0025F8  EC5F  F011         	call	_setSteering	;wreg free
  1278  0025FC                     l1224:
  1279  0025FC  B8CB               	btfsc	203,4,c	;volatile
  1280  0025FE  EF03  F013         	goto	u5491
  1281  002602  EF05  F013         	goto	u5490
  1282  002606                     u5491:
  1283  002606  EFFE  F012         	goto	l1224
  1284  00260A                     u5490:
  1285  00260A                     l6442:
  1286  00260A  5034               	movf	_cycle10ms^0,w,c	;volatile
  1287  00260C  B4D8               	btfsc	status,2,c
  1288  00260E  EF0B  F013         	goto	u5501
  1289  002612  EF0D  F013         	goto	u5500
  1290  002616                     u5501:
  1291  002616  EF05  F013         	goto	l6442
  1292  00261A                     u5500:
  1293  00261A                     
  1294                           ;main.c: 27:         cycle10ms = 0;
  1295  00261A  0E00               	movlw	0
  1296  00261C  6E34               	movwf	_cycle10ms^0,c	;volatile
  1297  00261E                     
  1298                           ;main.c: 28:         getBatteryVoltage();
  1299  00261E  ECD4  F01E         	call	_getBatteryVoltage	;wreg free
  1300  002622                     
  1301                           ;main.c: 30:     }while(BatteryVolt < ((3) * 409.6));
  1302  002622  C024  F068         	movff	_BatteryVolt,___xxtofl@val
  1303  002626  C025  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  1304  00262A  0100               	movlb	0	; () banked
  1305  00262C  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  1306  00262E  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  1307  002630  0E00               	movlw	0
  1308  002632  ECAB  F00F         	call	___xxtofl
  1309  002636  C068  F076         	movff	?___xxtofl,___flge@ff1
  1310  00263A  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  1311  00263E  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  1312  002642  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  1313  002646  0E9A               	movlw	154
  1314  002648  0100               	movlb	0	; () banked
  1315  00264A  6F7A               	movwf	___flge@ff2& (0+255),b
  1316  00264C  0E99               	movlw	153
  1317  00264E  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  1318  002650  0E99               	movlw	153
  1319  002652  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  1320  002654  0E44               	movlw	68
  1321  002656  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  1322  002658  EC4B  F015         	call	___flge	;wreg free
  1323  00265C  0100               	movlb	0	; () banked
  1324  00265E  A0D8               	btfss	status,0,c
  1325  002660  EF34  F013         	goto	u5511
  1326  002664  EF36  F013         	goto	u5510
  1327  002668                     u5511:
  1328  002668  EF05  F013         	goto	l6442
  1329  00266C                     u5510:
  1330  00266C                     
  1331                           ; BSR set to: 0
  1332                           ;main.c: 32:     startAccell();
  1333  00266C  ECE8  F01C         	call	_startAccell	;wreg free
  1334  002670                     
  1335                           ;main.c: 34:     oldDistLeft = distLeft;
  1336  002670  C030  F02A         	movff	_distLeft,_oldDistLeft	;volatile
  1337  002674  C031  F02B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1338  002678                     
  1339                           ;main.c: 35:     oldDistRight = distRight;
  1340  002678  C02E  F028         	movff	_distRight,_oldDistRight	;volatile
  1341  00267C  C02F  F029         	movff	_distRight+1,_oldDistRight+1	;volatile
  1342  002680                     
  1343                           ;main.c: 36:     cycle10ms = 0;
  1344  002680  0E00               	movlw	0
  1345  002682  6E34               	movwf	_cycle10ms^0,c	;volatile
  1346  002684                     l6458:
  1347  002684  5034               	movf	_cycle10ms^0,w,c	;volatile
  1348  002686  B4D8               	btfsc	status,2,c
  1349  002688  EF48  F013         	goto	u5521
  1350  00268C  EF4A  F013         	goto	u5520
  1351  002690                     u5521:
  1352  002690  EF42  F013         	goto	l6458
  1353  002694                     u5520:
  1354  002694                     
  1355                           ;main.c: 39:         cycle10ms = 0;
  1356  002694  0E00               	movlw	0
  1357  002696  6E34               	movwf	_cycle10ms^0,c	;volatile
  1358  002698                     
  1359                           ;main.c: 41:         if(!PORTBbits.RB5){
  1360  002698  BACB               	btfsc	203,5,c	;volatile
  1361  00269A  EF51  F013         	goto	u5531
  1362  00269E  EF53  F013         	goto	u5530
  1363  0026A2                     u5531:
  1364  0026A2  EF66  F013         	goto	l6468
  1365  0026A6                     u5530:
  1366  0026A6                     
  1367                           ;main.c: 42:             setSpeed = 0;
  1368  0026A6  0E00               	movlw	0
  1369  0026A8  0100               	movlb	0	; () banked
  1370  0026AA  6FDE               	movwf	(_setSpeed+1)& (0+255),b
  1371  0026AC  0E00               	movlw	0
  1372  0026AE  6FDD               	movwf	_setSpeed& (0+255),b
  1373                           
  1374                           ;main.c: 43:             actMotorPow = 0;
  1375  0026B0  0E00               	movlw	0
  1376  0026B2  6E27               	movwf	(_actMotorPow+1)^0,c
  1377  0026B4  0E00               	movlw	0
  1378  0026B6  6E26               	movwf	_actMotorPow^0,c
  1379  0026B8                     
  1380                           ; BSR set to: 0
  1381                           ;main.c: 44:             setSteering(0,Front);
  1382  0026B8  0E00               	movlw	0
  1383  0026BA  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1384  0026BC  0E00               	movlw	0
  1385  0026BE  6F68               	movwf	setSteering@steering& (0+255),b
  1386  0026C0  0E03               	movlw	3
  1387  0026C2  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1388  0026C4  EC5F  F011         	call	_setSteering	;wreg free
  1389                           
  1390                           ;main.c: 45:             break;
  1391  0026C8  EF9A  F013         	goto	l1241
  1392  0026CC                     l6468:
  1393                           
  1394                           ;main.c: 48:         ++tempCNT;
  1395  0026CC  0100               	movlb	0	; () banked
  1396  0026CE  4BD5               	infsnz	_tempCNT& (0+255),f,b
  1397  0026D0  2BD6               	incf	(_tempCNT+1)& (0+255),f,b
  1398  0026D2                     
  1399                           ; BSR set to: 0
  1400                           ;main.c: 49:         if(tempCNT > 1000){
  1401  0026D2  BFD6               	btfsc	(_tempCNT+1)& (0+255),7,b
  1402  0026D4  EF75  F013         	goto	u5541
  1403  0026D8  0EE9               	movlw	233
  1404  0026DA  5DD5               	subwf	_tempCNT& (0+255),w,b
  1405  0026DC  0E03               	movlw	3
  1406  0026DE  59D6               	subwfb	(_tempCNT+1)& (0+255),w,b
  1407  0026E0  A0D8               	btfss	status,0,c
  1408  0026E2  EF75  F013         	goto	u5541
  1409  0026E6  EF77  F013         	goto	u5540
  1410  0026EA                     u5541:
  1411  0026EA  EF82  F013         	goto	l6476
  1412  0026EE                     u5540:
  1413  0026EE                     
  1414                           ; BSR set to: 0
  1415                           ;main.c: 50:             tempCNT = 0;
  1416  0026EE  0E00               	movlw	0
  1417  0026F0  6FD6               	movwf	(_tempCNT+1)& (0+255),b
  1418  0026F2  0E00               	movlw	0
  1419  0026F4  6FD5               	movwf	_tempCNT& (0+255),b
  1420  0026F6                     
  1421                           ; BSR set to: 0
  1422                           ;main.c: 51:             printf("tempCNT Overflow");
  1423  0026F6  0E01               	movlw	low STR_1
  1424  0026F8  0101               	movlb	1	; () banked
  1425  0026FA  6F26               	movwf	printf@fmt& (0+255),b
  1426  0026FC  0E10               	movlw	high STR_1
  1427  0026FE  6F27               	movwf	(printf@fmt+1)& (0+255),b
  1428  002700  ECAC  F01E         	call	_printf	;wreg free
  1429  002704                     l6476:
  1430                           
  1431                           ;main.c: 54:         if(checkBatt()){
  1432  002704  ECF7  F019         	call	_checkBatt	;wreg free
  1433  002708  0900               	iorlw	0
  1434  00270A  B4D8               	btfsc	status,2,c
  1435  00270C  EF8A  F013         	goto	u5551
  1436  002710  EF8C  F013         	goto	u5550
  1437  002714                     u5551:
  1438  002714  EF8E  F013         	goto	l6480
  1439  002718                     u5550:
  1440  002718  EF9A  F013         	goto	l1241
  1441  00271C                     l6480:
  1442                           
  1443                           ;main.c: 58:         getCurve();
  1444  00271C  EC87  F010         	call	_getCurve	;wreg free
  1445                           
  1446                           ;main.c: 59:         getReverse();
  1447  002720  ECAF  F018         	call	_getReverse	;wreg free
  1448                           
  1449                           ;main.c: 61:         calcSteering();
  1450  002724  EC34  F012         	call	_calcSteering	;wreg free
  1451  002728                     
  1452                           ;main.c: 62:         calcSpeed();
  1453  002728  EC98  F00C         	call	_calcSpeed	;wreg free
  1454  00272C                     
  1455                           ;main.c: 63:         calcMotorPow();
  1456  00272C  EC9B  F013         	call	_calcMotorPow	;wreg free
  1457  002730  EF42  F013         	goto	l6458
  1458  002734                     l1241:
  1459  002734  0012               	return		;funcret
  1460  002736                     __end_of_loop:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function _startAccell *****************
  1464 ;; Defined at:
  1465 ;;		line 102 in file "main.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;Total ram usage:        0 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 10
  1486 ;; This function calls:
  1487 ;;		_setMotor
  1488 ;;		_setSteering
  1489 ;; This function is called by:
  1490 ;;		_loop
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text2
  1495  0039D0                     __ptext2:
  1496                           	callstack 0
  1497  0039D0                     _startAccell:
  1498                           	callstack 19
  1499  0039D0                     
  1500                           ;main.c: 103:     actMotorPow = (250);
  1501  0039D0  0E00               	movlw	0
  1502  0039D2  6E27               	movwf	(_actMotorPow+1)^0,c
  1503  0039D4  0EFA               	movlw	250
  1504  0039D6  6E26               	movwf	_actMotorPow^0,c
  1505  0039D8                     
  1506                           ;main.c: 104:     setMotor(actMotorPow);
  1507  0039D8  C026  F062         	movff	_actMotorPow,setMotor@motorPower
  1508  0039DC  C027  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  1509  0039E0  EC47  F016         	call	_setMotor	;wreg free
  1510  0039E4                     
  1511                           ;main.c: 105:     setSteering(0,Front);
  1512  0039E4  0E00               	movlw	0
  1513  0039E6  0100               	movlb	0	; () banked
  1514  0039E8  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  1515  0039EA  0E00               	movlw	0
  1516  0039EC  6F68               	movwf	setSteering@steering& (0+255),b
  1517  0039EE  0E03               	movlw	3
  1518  0039F0  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  1519  0039F2  EC5F  F011         	call	_setSteering	;wreg free
  1520                           
  1521                           ;main.c: 106:     cycle10ms = 0;
  1522  0039F6  0E00               	movlw	0
  1523  0039F8  6E34               	movwf	_cycle10ms^0,c	;volatile
  1524  0039FA                     l6202:
  1525  0039FA  0E18               	movlw	24
  1526  0039FC  6434               	cpfsgt	_cycle10ms^0,c	;volatile
  1527  0039FE  EF03  F01D         	goto	u5181
  1528  003A02  EF05  F01D         	goto	u5180
  1529  003A06                     u5181:
  1530  003A06  EFFD  F01C         	goto	l6202
  1531  003A0A                     u5180:
  1532  003A0A  0012               	return		;funcret
  1533  003A0C                     __end_of_startAccell:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _getReverse *****************
  1537 ;; Defined at:
  1538 ;;		line 177 in file "main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 8
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_loop
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text3
  1567  00315E                     __ptext3:
  1568                           	callstack 0
  1569  00315E                     _getReverse:
  1570                           	callstack 21
  1571  00315E                     
  1572                           ;main.c: 178:     if(distFront < (15)){
  1573  00315E  0100               	movlb	0	; () banked
  1574  003160  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1575  003162  E107               	bnz	u3691
  1576  003164  0E0F               	movlw	15
  1577  003166  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  1578  003168  B0D8               	btfsc	status,0,c
  1579  00316A  EFB9  F018         	goto	u3691
  1580  00316E  EFBB  F018         	goto	u3690
  1581  003172                     u3691:
  1582  003172  EFBC  F018         	goto	l5104
  1583  003176                     u3690:
  1584  003176                     
  1585                           ; BSR set to: 0
  1586                           ;main.c: 179:         ++reverseCount;
  1587  003176  2A32               	incf	_reverseCount^0,f,c
  1588  003178                     l5104:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;main.c: 182:     if(reverseCount > (50)){
  1592  003178  0E32               	movlw	50
  1593  00317A  6432               	cpfsgt	_reverseCount^0,c
  1594  00317C  EFC2  F018         	goto	u3701
  1595  003180  EFC4  F018         	goto	u3700
  1596  003184                     u3701:
  1597  003184  EF0A  F019         	goto	l1299
  1598  003188                     u3700:
  1599  003188                     
  1600                           ; BSR set to: 0
  1601                           ;main.c: 183:         ++reverseTime;
  1602  003188  4BD7               	infsnz	_reverseTime& (0+255),f,b
  1603  00318A  2BD8               	incf	(_reverseTime+1)& (0+255),f,b
  1604  00318C                     
  1605                           ; BSR set to: 0
  1606                           ;main.c: 185:         if(driveMode != ReverseRight && driveMode != ReverseLeft){
  1607  00318C  0E02               	movlw	2
  1608  00318E  1836               	xorwf	_driveMode^0,w,c
  1609  003190  B4D8               	btfsc	status,2,c
  1610  003192  EFCD  F018         	goto	u3711
  1611  003196  EFCF  F018         	goto	u3710
  1612  00319A                     u3711:
  1613  00319A  EFE9  F018         	goto	l5118
  1614  00319E                     u3710:
  1615  00319E                     
  1616                           ; BSR set to: 0
  1617  00319E  0E03               	movlw	3
  1618  0031A0  1836               	xorwf	_driveMode^0,w,c
  1619  0031A2  B4D8               	btfsc	status,2,c
  1620  0031A4  EFD6  F018         	goto	u3721
  1621  0031A8  EFD8  F018         	goto	u3720
  1622  0031AC                     u3721:
  1623  0031AC  EFE9  F018         	goto	l5118
  1624  0031B0                     u3720:
  1625  0031B0                     
  1626                           ; BSR set to: 0
  1627                           ;main.c: 186:             if(distLeft > distRight){
  1628  0031B0  5030               	movf	_distLeft^0,w,c	;volatile
  1629  0031B2  5C2E               	subwf	_distRight^0,w,c	;volatile
  1630  0031B4  5031               	movf	(_distLeft+1)^0,w,c	;volatile
  1631  0031B6  582F               	subwfb	(_distRight+1)^0,w,c	;volatile
  1632  0031B8  B0D8               	btfsc	status,0,c
  1633  0031BA  EFE1  F018         	goto	u3731
  1634  0031BE  EFE3  F018         	goto	u3730
  1635  0031C2                     u3731:
  1636  0031C2  EFE7  F018         	goto	l5116
  1637  0031C6                     u3730:
  1638  0031C6                     
  1639                           ; BSR set to: 0
  1640                           ;main.c: 188:                 driveMode = ReverseRight;
  1641  0031C6  0E02               	movlw	2
  1642  0031C8  6E36               	movwf	_driveMode^0,c
  1643                           
  1644                           ;main.c: 189:             }else{
  1645  0031CA  EFE9  F018         	goto	l5118
  1646  0031CE                     l5116:
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;main.c: 191:                 driveMode = ReverseLeft;
  1650  0031CE  0E03               	movlw	3
  1651  0031D0  6E36               	movwf	_driveMode^0,c
  1652  0031D2                     l5118:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 195:         if(distFront > (30) || reverseTime > (300)){
  1656  0031D2  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1657  0031D4  E107               	bnz	u3741
  1658  0031D6  0E1F               	movlw	31
  1659  0031D8  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  1660  0031DA  B0D8               	btfsc	status,0,c
  1661  0031DC  EFF2  F018         	goto	u3741
  1662  0031E0  EFF4  F018         	goto	u3740
  1663  0031E4                     u3741:
  1664  0031E4  EF02  F019         	goto	l5122
  1665  0031E8                     u3740:
  1666  0031E8                     
  1667                           ; BSR set to: 0
  1668  0031E8  BFD8               	btfsc	(_reverseTime+1)& (0+255),7,b
  1669  0031EA  EF00  F019         	goto	u3751
  1670  0031EE  0E2D               	movlw	45
  1671  0031F0  5DD7               	subwf	_reverseTime& (0+255),w,b
  1672  0031F2  0E01               	movlw	1
  1673  0031F4  59D8               	subwfb	(_reverseTime+1)& (0+255),w,b
  1674  0031F6  A0D8               	btfss	status,0,c
  1675  0031F8  EF00  F019         	goto	u3751
  1676  0031FC  EF02  F019         	goto	u3750
  1677  003200                     u3751:
  1678  003200  EF0A  F019         	goto	l1299
  1679  003204                     u3750:
  1680  003204                     l5122:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;main.c: 197:              driveMode = Straight;
  1684  003204  0E00               	movlw	0
  1685  003206  6E36               	movwf	_driveMode^0,c
  1686                           
  1687                           ;main.c: 198:              reverseCount = 0;
  1688  003208  0E00               	movlw	0
  1689  00320A  6E32               	movwf	_reverseCount^0,c
  1690                           
  1691                           ;main.c: 199:              reverseTime = 0;
  1692  00320C  0E00               	movlw	0
  1693  00320E  6FD8               	movwf	(_reverseTime+1)& (0+255),b
  1694  003210  0E00               	movlw	0
  1695  003212  6FD7               	movwf	_reverseTime& (0+255),b
  1696  003214                     l1299:
  1697                           
  1698                           ; BSR set to: 0
  1699  003214  0012               	return		;funcret
  1700  003216                     __end_of_getReverse:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _getCurve *****************
  1704 ;; Defined at:
  1705 ;;		line 110 in file "main.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  deltaRight      2    2[BANK0 ] short 
  1710 ;;  deltaLeft       2    0[BANK0 ] short 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;Total ram usage:        6 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 8
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_loop
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text4
  1735  00210E                     __ptext4:
  1736                           	callstack 0
  1737  00210E                     _getCurve:
  1738                           	callstack 21
  1739  00210E                     
  1740                           ;main.c: 111:     int16_t deltaLeft;;main.c: 112:     int16_t deltaRight;;main.c: 114:  
      +                             switch (curveMode){
  1741  00210E  EF39  F011         	goto	l6274
  1742  002112                     l6228:
  1743                           
  1744                           ;main.c: 116:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1745  002112  502A               	movf	_oldDistLeft^0,w,c
  1746  002114  5C30               	subwf	_distLeft^0,w,c	;volatile
  1747  002116  0100               	movlb	0	; () banked
  1748  002118  6F60               	movwf	getCurve@deltaLeft& (0+255),b
  1749  00211A  502B               	movf	(_oldDistLeft+1)^0,w,c
  1750  00211C  5831               	subwfb	(_distLeft+1)^0,w,c	;volatile
  1751  00211E  6F61               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1752                           
  1753                           ;main.c: 117:             deltaRight = (int16_t)(distRight - oldDistRight);
  1754  002120  5028               	movf	_oldDistRight^0,w,c
  1755  002122  5C2E               	subwf	_distRight^0,w,c	;volatile
  1756  002124  6F62               	movwf	getCurve@deltaRight& (0+255),b
  1757  002126  5029               	movf	(_oldDistRight+1)^0,w,c
  1758  002128  582F               	subwfb	(_distRight+1)^0,w,c	;volatile
  1759  00212A  6F63               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1760                           
  1761                           ;main.c: 120:             if(deltaLeft > (40) && deltaLeft < (300) && oldDistLeft < (150
      +                          )){
  1762  00212C  BF61               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1763  00212E  EFA2  F010         	goto	u5211
  1764  002132  5161               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1765  002134  E109               	bnz	u5210
  1766  002136  0E29               	movlw	41
  1767  002138  5D60               	subwf	getCurve@deltaLeft& (0+255),w,b
  1768  00213A  A0D8               	btfss	status,0,c
  1769  00213C  EFA2  F010         	goto	u5211
  1770  002140  EFA4  F010         	goto	u5210
  1771  002144                     u5211:
  1772  002144  EFC5  F010         	goto	l6236
  1773  002148                     u5210:
  1774  002148                     
  1775                           ; BSR set to: 0
  1776  002148  BF61               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1777  00214A  EFB2  F010         	goto	u5220
  1778  00214E  0E2C               	movlw	44
  1779  002150  5D60               	subwf	getCurve@deltaLeft& (0+255),w,b
  1780  002152  0E01               	movlw	1
  1781  002154  5961               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  1782  002156  B0D8               	btfsc	status,0,c
  1783  002158  EFB0  F010         	goto	u5221
  1784  00215C  EFB2  F010         	goto	u5220
  1785  002160                     u5221:
  1786  002160  EFC5  F010         	goto	l6236
  1787  002164                     u5220:
  1788  002164                     
  1789                           ; BSR set to: 0
  1790  002164  502B               	movf	(_oldDistLeft+1)^0,w,c
  1791  002166  E107               	bnz	u5231
  1792  002168  0E96               	movlw	150
  1793  00216A  5C2A               	subwf	_oldDistLeft^0,w,c
  1794  00216C  B0D8               	btfsc	status,0,c
  1795  00216E  EFBB  F010         	goto	u5231
  1796  002172  EFBD  F010         	goto	u5230
  1797  002176                     u5231:
  1798  002176  EFC5  F010         	goto	l6236
  1799  00217A                     u5230:
  1800  00217A                     
  1801                           ; BSR set to: 0
  1802                           ;main.c: 121:                 delay = 0;
  1803  00217A  0E00               	movlw	0
  1804  00217C  6E33               	movwf	_delay^0,c
  1805                           
  1806                           ;main.c: 122:                 curveMode = BeforeCurve;
  1807  00217E  0E01               	movlw	1
  1808  002180  6E35               	movwf	_curveMode^0,c
  1809                           
  1810                           ;main.c: 123:                 driveMode = CurveLeft;
  1811  002182  0E04               	movlw	4
  1812  002184  6E36               	movwf	_driveMode^0,c
  1813                           
  1814                           ;main.c: 126:             } else if(deltaRight > (40) && deltaRight < (300) && oldDistRi
      +                          ght < (150)){
  1815  002186  EF56  F011         	goto	l1272
  1816  00218A                     l6236:
  1817                           
  1818                           ; BSR set to: 0
  1819  00218A  BF63               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1820  00218C  EFD1  F010         	goto	u5241
  1821  002190  5163               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1822  002192  E109               	bnz	u5240
  1823  002194  0E29               	movlw	41
  1824  002196  5D62               	subwf	getCurve@deltaRight& (0+255),w,b
  1825  002198  A0D8               	btfss	status,0,c
  1826  00219A  EFD1  F010         	goto	u5241
  1827  00219E  EFD3  F010         	goto	u5240
  1828  0021A2                     u5241:
  1829  0021A2  EF56  F011         	goto	l1272
  1830  0021A6                     u5240:
  1831  0021A6                     
  1832                           ; BSR set to: 0
  1833  0021A6  BF63               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1834  0021A8  EFE1  F010         	goto	u5250
  1835  0021AC  0E2C               	movlw	44
  1836  0021AE  5D62               	subwf	getCurve@deltaRight& (0+255),w,b
  1837  0021B0  0E01               	movlw	1
  1838  0021B2  5963               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  1839  0021B4  B0D8               	btfsc	status,0,c
  1840  0021B6  EFDF  F010         	goto	u5251
  1841  0021BA  EFE1  F010         	goto	u5250
  1842  0021BE                     u5251:
  1843  0021BE  EF56  F011         	goto	l1272
  1844  0021C2                     u5250:
  1845  0021C2                     
  1846                           ; BSR set to: 0
  1847  0021C2  5029               	movf	(_oldDistRight+1)^0,w,c
  1848  0021C4  E107               	bnz	u5261
  1849  0021C6  0E96               	movlw	150
  1850  0021C8  5C28               	subwf	_oldDistRight^0,w,c
  1851  0021CA  B0D8               	btfsc	status,0,c
  1852  0021CC  EFEA  F010         	goto	u5261
  1853  0021D0  EFEC  F010         	goto	u5260
  1854  0021D4                     u5261:
  1855  0021D4  EF56  F011         	goto	l1272
  1856  0021D8                     u5260:
  1857  0021D8                     
  1858                           ; BSR set to: 0
  1859                           ;main.c: 127:                 delay = 0;
  1860  0021D8  0E00               	movlw	0
  1861  0021DA  6E33               	movwf	_delay^0,c
  1862                           
  1863                           ;main.c: 128:                 curveMode = BeforeCurve;
  1864  0021DC  0E01               	movlw	1
  1865  0021DE  6E35               	movwf	_curveMode^0,c
  1866                           
  1867                           ;main.c: 129:                 driveMode = CurveRight;
  1868  0021E0  0E05               	movlw	5
  1869  0021E2  6E36               	movwf	_driveMode^0,c
  1870  0021E4  EF56  F011         	goto	l1272
  1871  0021E8                     l6244:
  1872                           
  1873                           ;main.c: 137:             if(delay > (20)){
  1874  0021E8  0E14               	movlw	20
  1875  0021EA  6433               	cpfsgt	_delay^0,c
  1876  0021EC  EFFA  F010         	goto	u5271
  1877  0021F0  EFFC  F010         	goto	u5270
  1878  0021F4                     u5271:
  1879  0021F4  EF02  F011         	goto	l6248
  1880  0021F8                     u5270:
  1881  0021F8                     
  1882                           ;main.c: 138:                 delay = 0;
  1883  0021F8  0E00               	movlw	0
  1884  0021FA  6E33               	movwf	_delay^0,c
  1885                           
  1886                           ;main.c: 139:                 curveMode = InCurve;
  1887  0021FC  0E02               	movlw	2
  1888  0021FE  6E35               	movwf	_curveMode^0,c
  1889                           
  1890                           ;main.c: 141:             } else {
  1891  002200  EF56  F011         	goto	l1272
  1892  002204                     l6248:
  1893                           
  1894                           ;main.c: 142:                 delay++;
  1895  002204  2A33               	incf	_delay^0,f,c
  1896  002206  EF56  F011         	goto	l1272
  1897  00220A                     l6250:
  1898                           
  1899                           ;main.c: 146:             if(delay > (25)){
  1900  00220A  0E19               	movlw	25
  1901  00220C  6433               	cpfsgt	_delay^0,c
  1902  00220E  EF0B  F011         	goto	u5281
  1903  002212  EF0D  F011         	goto	u5280
  1904  002216                     u5281:
  1905  002216  EF02  F011         	goto	l6248
  1906  00221A                     u5280:
  1907  00221A                     
  1908                           ;main.c: 153:                 if(distLeft < (35) || distRight < (35)){
  1909  00221A  5031               	movf	(_distLeft+1)^0,w,c	;volatile
  1910  00221C  E109               	bnz	u5290
  1911  00221E  0E23               	movlw	35
  1912  002220  5C30               	subwf	_distLeft^0,w,c	;volatile
  1913  002222  A0D8               	btfss	status,0,c
  1914  002224  EF16  F011         	goto	u5291
  1915  002228  EF18  F011         	goto	u5290
  1916  00222C                     u5291:
  1917  00222C  EF23  F011         	goto	l6262
  1918  002230                     u5290:
  1919  002230  502F               	movf	(_distRight+1)^0,w,c	;volatile
  1920  002232  E107               	bnz	u5301
  1921  002234  0E23               	movlw	35
  1922  002236  5C2E               	subwf	_distRight^0,w,c	;volatile
  1923  002238  B0D8               	btfsc	status,0,c
  1924  00223A  EF21  F011         	goto	u5301
  1925  00223E  EF23  F011         	goto	u5300
  1926  002242                     u5301:
  1927  002242  EF56  F011         	goto	l1272
  1928  002246                     u5300:
  1929  002246                     l6262:
  1930                           
  1931                           ;main.c: 154:                     delay = 0;
  1932  002246  0E00               	movlw	0
  1933  002248  6E33               	movwf	_delay^0,c
  1934                           
  1935                           ;main.c: 155:                     curveMode = AfterCurve;
  1936  00224A  0E03               	movlw	3
  1937  00224C  6E35               	movwf	_curveMode^0,c
  1938                           
  1939                           ;main.c: 156:                     driveMode = Straight;
  1940  00224E  0E00               	movlw	0
  1941  002250  6E36               	movwf	_driveMode^0,c
  1942  002252  EF56  F011         	goto	l1272
  1943  002256                     l6266:
  1944                           
  1945                           ;main.c: 164:             if(delay > (5)){
  1946  002256  0E05               	movlw	5
  1947  002258  6433               	cpfsgt	_delay^0,c
  1948  00225A  EF31  F011         	goto	u5311
  1949  00225E  EF33  F011         	goto	u5310
  1950  002262                     u5311:
  1951  002262  EF02  F011         	goto	l6248
  1952  002266                     u5310:
  1953  002266                     
  1954                           ;main.c: 165:                 delay = 0;
  1955  002266  0E00               	movlw	0
  1956  002268  6E33               	movwf	_delay^0,c
  1957                           
  1958                           ;main.c: 166:                 curveMode = OutCurve;
  1959  00226A  0E00               	movlw	0
  1960  00226C  6E35               	movwf	_curveMode^0,c
  1961                           
  1962                           ;main.c: 168:             } else {
  1963  00226E  EF56  F011         	goto	l1272
  1964  002272                     l6274:
  1965  002272  5035               	movf	_curveMode^0,w,c
  1966  002274  6E20               	movwf	??_getCurve^0,c
  1967  002276  6A21               	clrf	(??_getCurve+1)^0,c
  1968                           
  1969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1970                           ; Switch size 1, requested type "simple"
  1971                           ; Number of cases is 1, Range of values is 0 to 0
  1972                           ; switch strategies available:
  1973                           ; Name         Instructions Cycles
  1974                           ; simple_byte            4     3 (average)
  1975                           ;	Chosen strategy is simple_byte
  1976  002278  5021               	movf	(??_getCurve+1)^0,w,c
  1977  00227A  0A00               	xorlw	0	; case 0
  1978  00227C  B4D8               	btfsc	status,2,c
  1979  00227E  EF43  F011         	goto	l6624
  1980  002282  EF56  F011         	goto	l1272
  1981  002286                     l6624:
  1982                           
  1983                           ; Switch size 1, requested type "simple"
  1984                           ; Number of cases is 4, Range of values is 0 to 3
  1985                           ; switch strategies available:
  1986                           ; Name         Instructions Cycles
  1987                           ; simple_byte           13     7 (average)
  1988                           ;	Chosen strategy is simple_byte
  1989  002286  5020               	movf	??_getCurve^0,w,c
  1990  002288  0A00               	xorlw	0	; case 0
  1991  00228A  B4D8               	btfsc	status,2,c
  1992  00228C  EF89  F010         	goto	l6228
  1993  002290  0A01               	xorlw	1	; case 1
  1994  002292  B4D8               	btfsc	status,2,c
  1995  002294  EFF4  F010         	goto	l6244
  1996  002298  0A03               	xorlw	3	; case 2
  1997  00229A  B4D8               	btfsc	status,2,c
  1998  00229C  EF05  F011         	goto	l6250
  1999  0022A0  0A01               	xorlw	1	; case 3
  2000  0022A2  B4D8               	btfsc	status,2,c
  2001  0022A4  EF2B  F011         	goto	l6266
  2002  0022A8  EF56  F011         	goto	l1272
  2003  0022AC                     l1272:
  2004                           
  2005                           ;main.c: 173:     oldDistLeft = distLeft;
  2006  0022AC  C030  F02A         	movff	_distLeft,_oldDistLeft	;volatile
  2007  0022B0  C031  F02B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2008                           
  2009                           ;main.c: 174:     oldDistRight = distRight;
  2010  0022B4  C02E  F028         	movff	_distRight,_oldDistRight	;volatile
  2011  0022B8  C02F  F029         	movff	_distRight+1,_oldDistRight+1	;volatile
  2012  0022BC  0012               	return		;funcret
  2013  0022BE                     __end_of_getCurve:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function _checkBatt *****************
  2017 ;; Defined at:
  2018 ;;		line 88 in file "main.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      _Bool 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 18
  2039 ;; This function calls:
  2040 ;;		___flge
  2041 ;;		___xxtofl
  2042 ;;		_getBatteryVoltage
  2043 ;;		_setSteering
  2044 ;; This function is called by:
  2045 ;;		_loop
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text5
  2050  0033EE                     __ptext5:
  2051                           	callstack 0
  2052  0033EE                     _checkBatt:
  2053                           	callstack 11
  2054  0033EE                     
  2055                           ;main.c: 89:     ++battCheckCount;
  2056  0033EE  0100               	movlb	0	; () banked
  2057  0033F0  4BE1               	infsnz	_battCheckCount& (0+255),f,b
  2058  0033F2  2BE2               	incf	(_battCheckCount+1)& (0+255),f,b
  2059  0033F4                     
  2060                           ; BSR set to: 0
  2061                           ;main.c: 90:     if(battCheckCount > (100)){
  2062  0033F4  51E2               	movf	(_battCheckCount+1)& (0+255),w,b
  2063  0033F6  E109               	bnz	u5190
  2064  0033F8  0E65               	movlw	101
  2065  0033FA  5DE1               	subwf	_battCheckCount& (0+255),w,b
  2066  0033FC  A0D8               	btfss	status,0,c
  2067  0033FE  EF03  F01A         	goto	u5191
  2068  003402  EF05  F01A         	goto	u5190
  2069  003406                     u5191:
  2070  003406  EF3F  F01A         	goto	l6222
  2071  00340A                     u5190:
  2072  00340A                     
  2073                           ; BSR set to: 0
  2074                           ;main.c: 91:         battCheckCount = 0;
  2075  00340A  0E00               	movlw	0
  2076  00340C  6FE2               	movwf	(_battCheckCount+1)& (0+255),b
  2077  00340E  0E00               	movlw	0
  2078  003410  6FE1               	movwf	_battCheckCount& (0+255),b
  2079  003412                     
  2080                           ; BSR set to: 0
  2081                           ;main.c: 92:         getBatteryVoltage();
  2082  003412  ECD4  F01E         	call	_getBatteryVoltage	;wreg free
  2083  003416                     
  2084                           ;main.c: 93:         if(BatteryVolt < (3) * 409.6){
  2085  003416  C024  F068         	movff	_BatteryVolt,___xxtofl@val
  2086  00341A  C025  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  2087  00341E  0100               	movlb	0	; () banked
  2088  003420  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  2089  003422  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  2090  003424  0E00               	movlw	0
  2091  003426  ECAB  F00F         	call	___xxtofl
  2092  00342A  C068  F076         	movff	?___xxtofl,___flge@ff1
  2093  00342E  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  2094  003432  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  2095  003436  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  2096  00343A  0E9A               	movlw	154
  2097  00343C  0100               	movlb	0	; () banked
  2098  00343E  6F7A               	movwf	___flge@ff2& (0+255),b
  2099  003440  0E99               	movlw	153
  2100  003442  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  2101  003444  0E99               	movlw	153
  2102  003446  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  2103  003448  0E44               	movlw	68
  2104  00344A  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  2105  00344C  EC4B  F015         	call	___flge	;wreg free
  2106  003450  0100               	movlb	0	; () banked
  2107  003452  B0D8               	btfsc	status,0,c
  2108  003454  EF2E  F01A         	goto	u5201
  2109  003458  EF30  F01A         	goto	u5200
  2110  00345C                     u5201:
  2111  00345C  EF3F  F01A         	goto	l6222
  2112  003460                     u5200:
  2113  003460                     
  2114                           ; BSR set to: 0
  2115                           ;main.c: 94:             setSpeed = 0;
  2116  003460  0E00               	movlw	0
  2117  003462  6FDE               	movwf	(_setSpeed+1)& (0+255),b
  2118  003464  0E00               	movlw	0
  2119  003466  6FDD               	movwf	_setSpeed& (0+255),b
  2120  003468                     
  2121                           ; BSR set to: 0
  2122                           ;main.c: 95:             setSteering(0,Front);
  2123  003468  0E00               	movlw	0
  2124  00346A  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  2125  00346C  0E00               	movlw	0
  2126  00346E  6F68               	movwf	setSteering@steering& (0+255),b
  2127  003470  0E03               	movlw	3
  2128  003472  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  2129  003474  EC5F  F011         	call	_setSteering	;wreg free
  2130  003478                     
  2131                           ;main.c: 96:             return 1;
  2132  003478  0E01               	movlw	1
  2133  00347A  EF40  F01A         	goto	l1258
  2134  00347E                     l6222:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;main.c: 99:     return 0;
  2138  00347E  0E00               	movlw	0
  2139  003480                     l1258:
  2140  003480  0012               	return		;funcret
  2141  003482                     __end_of_checkBatt:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _getBatteryVoltage *****************
  2145 ;; Defined at:
  2146 ;;		line 83 in file "main.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 17
  2167 ;; This function calls:
  2168 ;;		_ADCC_GetSingleConversion
  2169 ;;		_printf
  2170 ;; This function is called by:
  2171 ;;		_loop
  2172 ;;		_checkBatt
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text6
  2177  003DA8                     __ptext6:
  2178                           	callstack 0
  2179  003DA8                     _getBatteryVoltage:
  2180                           	callstack 12
  2181  003DA8                     
  2182                           ;main.c: 84:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2183  003DA8  0E22               	movlw	34
  2184  003DAA  ECC9  F01C         	call	_ADCC_GetSingleConversion
  2185  003DAE  C020  F024         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2186  003DB2  C021  F025         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2187  003DB6                     
  2188                           ;main.c: 85:     printf("BVolt: %u\n", (uint16_t) BatteryVolt);
  2189  003DB6  0E12               	movlw	low STR_2
  2190  003DB8  0101               	movlb	1	; () banked
  2191  003DBA  6F26               	movwf	printf@fmt& (0+255),b
  2192  003DBC  0E10               	movlw	high STR_2
  2193  003DBE  6F27               	movwf	(printf@fmt+1)& (0+255),b
  2194  003DC0  C024  F128         	movff	_BatteryVolt,?_printf+2
  2195  003DC4  C025  F129         	movff	_BatteryVolt+1,?_printf+3
  2196  003DC8  ECAC  F01E         	call	_printf	;wreg free
  2197  003DCC  0012               	return		;funcret
  2198  003DCE                     __end_of_getBatteryVoltage:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _printf *****************
  2202 ;; Defined at:
  2203 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  2206 ;;		 -> STR_2(11), STR_1(17), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  ap              2   10[BANK1 ] PTR void [1]
  2209 ;;		 -> ?_printf(2), 
  2210 ;;  ret             2    0        int 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  2    6[BANK1 ] int 
  2213 ;; Registers used:
  2214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2220 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;Total ram usage:        6 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; Hardware stack levels required when called: 16
  2227 ;; This function calls:
  2228 ;;		_vfprintf
  2229 ;; This function is called by:
  2230 ;;		_loop
  2231 ;;		_getBatteryVoltage
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text7
  2236  003D58                     __ptext7:
  2237                           	callstack 0
  2238  003D58                     _printf:
  2239                           	callstack 13
  2240  003D58  0E28               	movlw	low (?_printf+2)
  2241  003D5A  0101               	movlb	1	; () banked
  2242  003D5C  6F2A               	movwf	printf@ap& (0+255),b
  2243  003D5E  0E01               	movlw	high (?_printf+2)
  2244  003D60  6F2B               	movwf	(printf@ap+1)& (0+255),b
  2245  003D62                     
  2246                           ; BSR set to: 1
  2247  003D62  0E00               	movlw	0
  2248  003D64  6F20               	movwf	vfprintf@fp& (0+255),b
  2249  003D66  0E00               	movlw	0
  2250  003D68  6F21               	movwf	(vfprintf@fp+1)& (0+255),b
  2251  003D6A  C126  F122         	movff	printf@fmt,vfprintf@fmt
  2252  003D6E  C127  F123         	movff	printf@fmt+1,vfprintf@fmt+1
  2253  003D72  0E2A               	movlw	low printf@ap
  2254  003D74  6F24               	movwf	vfprintf@ap& (0+255),b
  2255  003D76  0E01               	movlw	high printf@ap
  2256  003D78  6F25               	movwf	(vfprintf@ap+1)& (0+255),b
  2257  003D7A  EC41  F01A         	call	_vfprintf	;wreg free
  2258  003D7E  0012               	return		;funcret
  2259  003D80                     __end_of_printf:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _vfprintf *****************
  2263 ;; Defined at:
  2264 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2267 ;;		 -> NULL(0), 
  2268 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2269 ;;		 -> STR_2(11), STR_1(17), 
  2270 ;;  ap              2    4[BANK1 ] PTR PTR void 
  2271 ;;		 -> printf@ap(2), 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  cfmt            2   77[BANK0 ] PTR unsigned char 
  2274 ;;		 -> STR_2(11), STR_1(17), 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2    0[BANK1 ] int 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2284 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;Total ram usage:        8 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 15
  2291 ;; This function calls:
  2292 ;;		_vfpfcnvrt
  2293 ;; This function is called by:
  2294 ;;		_printf
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text8
  2299  003482                     __ptext8:
  2300                           	callstack 0
  2301  003482                     _vfprintf:
  2302                           	callstack 13
  2303  003482                     
  2304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2305  003482  C122  F0AD         	movff	vfprintf@fmt,vfprintf@cfmt
  2306  003486  C123  F0AE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2307  00348A                     
  2308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2309  00348A  0E00               	movlw	0
  2310  00348C  0100               	movlb	0	; () banked
  2311  00348E  6FD0               	movwf	(_nout+1)& (0+255),b
  2312  003490  0E00               	movlw	0
  2313  003492  6FCF               	movwf	_nout& (0+255),b
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2316  003494  EF5F  F01A         	goto	l5786
  2317  003498                     l5784:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2321  003498  C120  F09B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2322  00349C  C121  F09C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2323  0034A0  0EAD               	movlw	low vfprintf@cfmt
  2324  0034A2  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2325  0034A4  0E00               	movlw	high vfprintf@cfmt
  2326  0034A6  6F9E               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2327  0034A8  C124  F09F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2328  0034AC  C125  F0A0         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2329  0034B0  ECBA  F00E         	call	_vfpfcnvrt	;wreg free
  2330  0034B4  0100               	movlb	0	; () banked
  2331  0034B6  519B               	movf	?_vfpfcnvrt& (0+255),w,b
  2332  0034B8  27CF               	addwf	_nout& (0+255),f,b
  2333  0034BA  519C               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2334  0034BC  23D0               	addwfc	(_nout+1)& (0+255),f,b
  2335  0034BE                     l5786:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2339  0034BE  0060  F2B7  FFF6   	movff	vfprintf@cfmt,tblptrl
  2340  0034C4  0060  F2BB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2341  0034CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2342  0034CA  6AF8               	clrf	tblptru,c
  2343  0034CC                     	endif
  2344  0034CC                     	if	0	;tblptru may be non-zero
  2345  0034CC                     	endif
  2346  0034CC  0008               	tblrd		*
  2347  0034CE  50F5               	movf	tablat,w,c
  2348  0034D0  0900               	iorlw	0
  2349  0034D2  A4D8               	btfss	status,2,c
  2350  0034D4  EF6E  F01A         	goto	u4561
  2351  0034D8  EF70  F01A         	goto	u4560
  2352  0034DC                     u4561:
  2353  0034DC  EF4C  F01A         	goto	l5784
  2354  0034E0                     u4560:
  2355  0034E0                     
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2358  0034E0  C0CF  F120         	movff	_nout,?_vfprintf
  2359  0034E4  C0D0  F121         	movff	_nout+1,?_vfprintf+1
  2360  0034E8                     
  2361                           ; BSR set to: 0
  2362  0034E8  0012               	return		;funcret
  2363  0034EA                     __end_of_vfprintf:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _vfpfcnvrt *****************
  2367 ;; Defined at:
  2368 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  2371 ;;		 -> NULL(0), 
  2372 ;;  fmt             2   61[BANK0 ] PTR PTR unsigned char 
  2373 ;;		 -> vfprintf@cfmt(2), 
  2374 ;;  ap              2   63[BANK0 ] PTR PTR void 
  2375 ;;		 -> printf@ap(2), 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  llu             8   69[BANK0 ] unsigned long long 
  2378 ;;  ll              8    0        long long 
  2379 ;;  f               4    0        long long 
  2380 ;;  vp              3    0        PTR void 
  2381 ;;  ct              3    0        unsigned char [3]
  2382 ;;  cp              3    0        PTR unsigned char 
  2383 ;;  i               2    0        int 
  2384 ;;  done            2    0        int 
  2385 ;;  c               1    0        unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2   59[BANK0 ] int 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2395 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;Total ram usage:       18 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 14
  2402 ;; This function calls:
  2403 ;;		_fputc
  2404 ;;		_utoa
  2405 ;; This function is called by:
  2406 ;;		_vfprintf
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text9
  2411  001D74                     __ptext9:
  2412                           	callstack 0
  2413  001D74                     _vfpfcnvrt:
  2414                           	callstack 13
  2415  001D74                     
  2416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2417  001D74  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2418  001D7A  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2419  001D80  006F FF7B FFF6     	movff	postinc2,tblptrl
  2420  001D86  006F FF77 FFF7     	movff	postdec2,tblptrh
  2421  001D8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2422  001D8C  6AF8               	clrf	tblptru,c
  2423  001D8E                     	endif
  2424  001D8E                     	if	0	;tblptru may be non-zero
  2425  001D8E                     	endif
  2426  001D8E  0008               	tblrd		*
  2427  001D90  50F5               	movf	tablat,w,c
  2428  001D92  0A25               	xorlw	37
  2429  001D94  A4D8               	btfss	status,2,c
  2430  001D96  EFCF  F00E         	goto	u4531
  2431  001D9A  EFD1  F00E         	goto	u4530
  2432  001D9E                     u4531:
  2433  001D9E  EF87  F00F         	goto	l5772
  2434  001DA2                     u4530:
  2435  001DA2                     
  2436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2437  001DA2  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2438  001DA8  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2439  001DAE  2ADE               	incf	postinc2,f,c
  2440  001DB0  0E00               	movlw	0
  2441  001DB2  22DD               	addwfc	postdec2,f,c
  2442  001DB4                     
  2443                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2444  001DB4  0E00               	movlw	0
  2445  001DB6  0100               	movlb	0	; () banked
  2446  001DB8  6FD2               	movwf	(_width+1)& (0+255),b
  2447  001DBA  0E00               	movlw	0
  2448  001DBC  6FD1               	movwf	_width& (0+255),b
  2449  001DBE  C0D1  F022         	movff	_width,_flags
  2450  001DC2  C0D2  F023         	movff	_width+1,_flags+1
  2451  001DC6                     
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2454  001DC6  69D3               	setf	_prec& (0+255),b
  2455  001DC8  69D4               	setf	(_prec+1)& (0+255),b
  2456  001DCA                     
  2457                           ; BSR set to: 0
  2458                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2459  001DCA  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2460  001DD0  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2461  001DD6  006F FF7B FFF6     	movff	postinc2,tblptrl
  2462  001DDC  006F FF77 FFF7     	movff	postdec2,tblptrh
  2463  001DE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2464  001DE2  6AF8               	clrf	tblptru,c
  2465  001DE4                     	endif
  2466  001DE4                     	if	0	;tblptru may be non-zero
  2467  001DE4                     	endif
  2468  001DE4  0008               	tblrd		*
  2469  001DE6  50F5               	movf	tablat,w,c
  2470  001DE8  0A75               	xorlw	117
  2471  001DEA  A4D8               	btfss	status,2,c
  2472  001DEC  EFFA  F00E         	goto	u4541
  2473  001DF0  EFFC  F00E         	goto	u4540
  2474  001DF4                     u4541:
  2475  001DF4  EF47  F00F         	goto	l5756
  2476  001DF8                     u4540:
  2477  001DF8                     
  2478                           ; BSR set to: 0
  2479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2480  001DF8  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2481  001DFE  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2482  001E04  2ADE               	incf	postinc2,f,c
  2483  001E06  0E00               	movlw	0
  2484  001E08  22DD               	addwfc	postdec2,f,c
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2487  001E0A  0060  F27F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2488  001E10  0060  F283  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2489  001E16  006F FF7C  F0A1    	movff	indf2,??_vfpfcnvrt
  2490  001E1C  0E02               	movlw	2
  2491  001E1E  26DE               	addwf	postinc2,f,c
  2492  001E20  006F FF7C  F0A2    	movff	indf2,??_vfpfcnvrt+1
  2493  001E26  0E00               	movlw	0
  2494  001E28  22DD               	addwfc	postdec2,f,c
  2495  001E2A  0060  F287  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2496  001E30  0060  F28B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2497  001E36  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt+2
  2498  001E3C  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+3
  2499  001E42  C0A3  F0A5         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2500  001E46  C0A4  F0A6         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2501  001E4A  6BA7               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2502  001E4C  6BA8               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2503  001E4E  6BA9               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2504  001E50  6BAA               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2505  001E52  6BAB               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2506  001E54  6BAC               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2507  001E56                     
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2510  001E56  C09B  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  2511  001E5A  C09C  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2512  001E5E  C0A5  F07D         	movff	vfpfcnvrt@llu,utoa@d
  2513  001E62  C0A6  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2514  001E66  C0A7  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2515  001E6A  C0A8  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2516  001E6E  C0A9  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2517  001E72  C0AA  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2518  001E76  C0AB  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2519  001E7A  C0AC  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2520  001E7E  ECB7  F00D         	call	_utoa	;wreg free
  2521  001E82  C07B  F09B         	movff	?_utoa,?_vfpfcnvrt
  2522  001E86  C07C  F09C         	movff	?_utoa+1,?_vfpfcnvrt+1
  2523  001E8A  EFAA  F00F         	goto	l2111
  2524  001E8E                     l5756:
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2528  001E8E  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2529  001E94  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2530  001E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2531  001EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2532  001EA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2533  001EA6  6AF8               	clrf	tblptru,c
  2534  001EA8                     	endif
  2535  001EA8                     	if	0	;tblptru may be non-zero
  2536  001EA8                     	endif
  2537  001EA8  0008               	tblrd		*
  2538  001EAA  50F5               	movf	tablat,w,c
  2539  001EAC  0A25               	xorlw	37
  2540  001EAE  A4D8               	btfss	status,2,c
  2541  001EB0  EF5C  F00F         	goto	u4551
  2542  001EB4  EF5E  F00F         	goto	u4550
  2543  001EB8                     u4551:
  2544  001EB8  EF78  F00F         	goto	l5766
  2545  001EBC                     u4550:
  2546  001EBC                     
  2547                           ; BSR set to: 0
  2548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2549  001EBC  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2550  001EC2  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2551  001EC8  2ADE               	incf	postinc2,f,c
  2552  001ECA  0E00               	movlw	0
  2553  001ECC  22DD               	addwfc	postdec2,f,c
  2554  001ECE                     
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2557  001ECE  0E00               	movlw	0
  2558  001ED0  6F61               	movwf	(fputc@c+1)& (0+255),b
  2559  001ED2  0E25               	movlw	37
  2560  001ED4  6F60               	movwf	fputc@c& (0+255),b
  2561  001ED6  C09B  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2562  001EDA  C09C  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2563  001EDE  ECAB  F019         	call	_fputc	;wreg free
  2564  001EE2                     l5762:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2567  001EE2  0E00               	movlw	0
  2568  001EE4  0100               	movlb	0	; () banked
  2569  001EE6  6F9C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2570  001EE8  0E01               	movlw	1
  2571  001EEA  6F9B               	movwf	?_vfpfcnvrt& (0+255),b
  2572  001EEC  EFAA  F00F         	goto	l2111
  2573  001EF0                     l5766:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2577  001EF0  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2578  001EF6  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2579  001EFC  2ADE               	incf	postinc2,f,c
  2580  001EFE  0E00               	movlw	0
  2581  001F00  22DD               	addwfc	postdec2,f,c
  2582  001F02                     
  2583                           ; BSR set to: 0
  2584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2585  001F02  0E00               	movlw	0
  2586  001F04  6F9C               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2587  001F06  0E00               	movlw	0
  2588  001F08  6F9B               	movwf	?_vfpfcnvrt& (0+255),b
  2589  001F0A  EFAA  F00F         	goto	l2111
  2590  001F0E                     l5772:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2593  001F0E  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2594  001F14  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2595  001F1A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2596  001F20  006F FF77 FFF7     	movff	postdec2,tblptrh
  2597  001F26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2598  001F26  6AF8               	clrf	tblptru,c
  2599  001F28                     	endif
  2600  001F28                     	if	0	;tblptru may be non-zero
  2601  001F28                     	endif
  2602  001F28  0008               	tblrd		*
  2603  001F2A  50F5               	movf	tablat,w,c
  2604  001F2C  0100               	movlb	0	; () banked
  2605  001F2E  6F60               	movwf	fputc@c& (0+255),b
  2606  001F30  6B61               	clrf	(fputc@c+1)& (0+255),b
  2607  001F32  C09B  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2608  001F36  C09C  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2609  001F3A  ECAB  F019         	call	_fputc	;wreg free
  2610  001F3E                     
  2611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2612  001F3E  0060  F277  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2613  001F44  0060  F27B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2614  001F4A  2ADE               	incf	postinc2,f,c
  2615  001F4C  0E00               	movlw	0
  2616  001F4E  22DD               	addwfc	postdec2,f,c
  2617  001F50  EF71  F00F         	goto	l5762
  2618  001F54                     l2111:
  2619  001F54  0012               	return		;funcret
  2620  001F56                     __end_of_vfpfcnvrt:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _utoa *****************
  2624 ;; Defined at:
  2625 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2628 ;;		 -> NULL(0), 
  2629 ;;  d               8   29[BANK0 ] unsigned long long 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  n               8   49[BANK0 ] unsigned long long 
  2632 ;;  i               2   57[BANK0 ] int 
  2633 ;;  w               2   47[BANK0 ] int 
  2634 ;;  p               2   45[BANK0 ] int 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  2   27[BANK0 ] int 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2644 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;Total ram usage:       32 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 13
  2651 ;; This function calls:
  2652 ;;		___lodiv
  2653 ;;		___lomod
  2654 ;;		_pad
  2655 ;; This function is called by:
  2656 ;;		_vfpfcnvrt
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text10
  2661  001B6E                     __ptext10:
  2662                           	callstack 0
  2663  001B6E                     _utoa:
  2664                           	callstack 13
  2665  001B6E                     
  2666                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2667  001B6E  0100               	movlb	0	; () banked
  2668  001B70  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  2669  001B72  EFBD  F00D         	goto	u4461
  2670  001B76  EFBF  F00D         	goto	u4460
  2671  001B7A                     u4461:
  2672  001B7A  EFC0  F00D         	goto	l5708
  2673  001B7E                     u4460:
  2674  001B7E                     
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2677  001B7E  9222               	bcf	_flags^0,1,c
  2678  001B80                     l5708:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2682  001B80  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  2683  001B82  EFCD  F00D         	goto	u4470
  2684  001B86  51D4               	movf	(_prec+1)& (0+255),w,b
  2685  001B88  E106               	bnz	u4471
  2686  001B8A  05D3               	decf	_prec& (0+255),w,b
  2687  001B8C  B0D8               	btfsc	status,0,c
  2688  001B8E  EFCB  F00D         	goto	u4471
  2689  001B92  EFCD  F00D         	goto	u4470
  2690  001B96                     u4471:
  2691  001B96  EFD3  F00D         	goto	l2096
  2692  001B9A                     u4470:
  2693  001B9A                     
  2694                           ; BSR set to: 0
  2695  001B9A  0E00               	movlw	0
  2696  001B9C  6F8E               	movwf	(utoa@p+1)& (0+255),b
  2697  001B9E  0E01               	movlw	1
  2698  001BA0  6F8D               	movwf	utoa@p& (0+255),b
  2699  001BA2  EFD7  F00D         	goto	l2098
  2700  001BA6                     l2096:
  2701                           
  2702                           ; BSR set to: 0
  2703  001BA6  C0D3  F08D         	movff	_prec,utoa@p
  2704  001BAA  C0D4  F08E         	movff	_prec+1,utoa@p+1
  2705  001BAE                     l2098:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2709  001BAE  C0D1  F08F         	movff	_width,utoa@w
  2710  001BB2  C0D2  F090         	movff	_width+1,utoa@w+1
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2713  001BB6  C07D  F091         	movff	utoa@d,utoa@n
  2714  001BBA  C07E  F092         	movff	utoa@d+1,utoa@n+1
  2715  001BBE  C07F  F093         	movff	utoa@d+2,utoa@n+2
  2716  001BC2  C080  F094         	movff	utoa@d+3,utoa@n+3
  2717  001BC6  C081  F095         	movff	utoa@d+4,utoa@n+4
  2718  001BCA  C082  F096         	movff	utoa@d+5,utoa@n+5
  2719  001BCE  C083  F097         	movff	utoa@d+6,utoa@n+6
  2720  001BD2  C084  F098         	movff	utoa@d+7,utoa@n+7
  2721  001BD6                     
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2724  001BD6  0E00               	movlw	0
  2725  001BD8  6F9A               	movwf	(utoa@i+1)& (0+255),b
  2726  001BDA  0E1F               	movlw	31
  2727  001BDC  6F99               	movwf	utoa@i& (0+255),b
  2728  001BDE                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2731  001BDE  0E00               	movlw	0
  2732  001BE0  0101               	movlb	1	; () banked
  2733  001BE2  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2736  001BE4  EF6B  F00E         	goto	l5726
  2737  001BE8                     l5716:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  2741  001BE8  0799               	decf	utoa@i& (0+255),f,b
  2742  001BEA  A0D8               	btfss	status,0,c
  2743  001BEC  079A               	decf	(utoa@i+1)& (0+255),f,b
  2744  001BEE                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2747  001BEE  0E00               	movlw	low _dbuf
  2748  001BF0  2599               	addwf	utoa@i& (0+255),w,b
  2749  001BF2  6ED9               	movwf	fsr2l,c
  2750  001BF4  0E01               	movlw	high _dbuf
  2751  001BF6  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  2752  001BF8  6EDA               	movwf	fsr2h,c
  2753  001BFA  C091  F060         	movff	utoa@n,___lomod@dividend
  2754  001BFE  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  2755  001C02  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  2756  001C06  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  2757  001C0A  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  2758  001C0E  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  2759  001C12  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  2760  001C16  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  2761  001C1A  0E0A               	movlw	10
  2762  001C1C  6F68               	movwf	___lomod@divisor& (0+255),b
  2763  001C1E  0E00               	movlw	0
  2764  001C20  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  2765  001C22  0E00               	movlw	0
  2766  001C24  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  2767  001C26  0E00               	movlw	0
  2768  001C28  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  2769  001C2A  0E00               	movlw	0
  2770  001C2C  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  2771  001C2E  0E00               	movlw	0
  2772  001C30  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  2773  001C32  0E00               	movlw	0
  2774  001C34  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  2775  001C36  0E00               	movlw	0
  2776  001C38  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  2777  001C3A  ECBA  F016         	call	___lomod	;wreg free
  2778  001C3E  C060  F085         	movff	?___lomod,??_utoa
  2779  001C42  C061  F086         	movff	?___lomod+1,??_utoa+1
  2780  001C46  C062  F087         	movff	?___lomod+2,??_utoa+2
  2781  001C4A  C063  F088         	movff	?___lomod+3,??_utoa+3
  2782  001C4E  C064  F089         	movff	?___lomod+4,??_utoa+4
  2783  001C52  C065  F08A         	movff	?___lomod+5,??_utoa+5
  2784  001C56  C066  F08B         	movff	?___lomod+6,??_utoa+6
  2785  001C5A  C067  F08C         	movff	?___lomod+7,??_utoa+7
  2786  001C5E  0100               	movlb	0	; () banked
  2787  001C60  5185               	movf	??_utoa& (0+255),w,b
  2788  001C62  0F30               	addlw	48
  2789  001C64  6EDF               	movwf	indf2,c
  2790  001C66                     
  2791                           ; BSR set to: 0
  2792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  2793  001C66  078D               	decf	utoa@p& (0+255),f,b
  2794  001C68  A0D8               	btfss	status,0,c
  2795  001C6A  078E               	decf	(utoa@p+1)& (0+255),f,b
  2796  001C6C                     
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  2799  001C6C  078F               	decf	utoa@w& (0+255),f,b
  2800  001C6E  A0D8               	btfss	status,0,c
  2801  001C70  0790               	decf	(utoa@w+1)& (0+255),f,b
  2802  001C72                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2805  001C72  C091  F060         	movff	utoa@n,___lodiv@dividend
  2806  001C76  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  2807  001C7A  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  2808  001C7E  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  2809  001C82  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  2810  001C86  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  2811  001C8A  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  2812  001C8E  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  2813  001C92  0E0A               	movlw	10
  2814  001C94  6F68               	movwf	___lodiv@divisor& (0+255),b
  2815  001C96  0E00               	movlw	0
  2816  001C98  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  2817  001C9A  0E00               	movlw	0
  2818  001C9C  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  2819  001C9E  0E00               	movlw	0
  2820  001CA0  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  2821  001CA2  0E00               	movlw	0
  2822  001CA4  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  2823  001CA6  0E00               	movlw	0
  2824  001CA8  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  2825  001CAA  0E00               	movlw	0
  2826  001CAC  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  2827  001CAE  0E00               	movlw	0
  2828  001CB0  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  2829  001CB2  ECCE  F015         	call	___lodiv	;wreg free
  2830  001CB6  C060  F091         	movff	?___lodiv,utoa@n
  2831  001CBA  C061  F092         	movff	?___lodiv+1,utoa@n+1
  2832  001CBE  C062  F093         	movff	?___lodiv+2,utoa@n+2
  2833  001CC2  C063  F094         	movff	?___lodiv+3,utoa@n+3
  2834  001CC6  C064  F095         	movff	?___lodiv+4,utoa@n+4
  2835  001CCA  C065  F096         	movff	?___lodiv+5,utoa@n+5
  2836  001CCE  C066  F097         	movff	?___lodiv+6,utoa@n+6
  2837  001CD2  C067  F098         	movff	?___lodiv+7,utoa@n+7
  2838  001CD6                     l5726:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2841  001CD6  0100               	movlb	0	; () banked
  2842  001CD8  5199               	movf	utoa@i& (0+255),w,b
  2843  001CDA  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  2844  001CDC  B4D8               	btfsc	status,2,c
  2845  001CDE  EF73  F00E         	goto	u4481
  2846  001CE2  EF75  F00E         	goto	u4480
  2847  001CE6                     u4481:
  2848  001CE6  EFA5  F00E         	goto	l5736
  2849  001CEA                     u4480:
  2850  001CEA                     
  2851                           ; BSR set to: 0
  2852  001CEA  5191               	movf	utoa@n& (0+255),w,b
  2853  001CEC  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  2854  001CEE  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  2855  001CF0  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  2856  001CF2  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  2857  001CF4  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  2858  001CF6  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  2859  001CF8  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  2860  001CFA  A4D8               	btfss	status,2,c
  2861  001CFC  EF82  F00E         	goto	u4491
  2862  001D00  EF84  F00E         	goto	u4490
  2863  001D04                     u4491:
  2864  001D04  EFF4  F00D         	goto	l5716
  2865  001D08                     u4490:
  2866  001D08                     
  2867                           ; BSR set to: 0
  2868  001D08  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  2869  001D0A  EF91  F00E         	goto	u4500
  2870  001D0E  518E               	movf	(utoa@p+1)& (0+255),w,b
  2871  001D10  E106               	bnz	u4501
  2872  001D12  058D               	decf	utoa@p& (0+255),w,b
  2873  001D14  B0D8               	btfsc	status,0,c
  2874  001D16  EF8F  F00E         	goto	u4501
  2875  001D1A  EF91  F00E         	goto	u4500
  2876  001D1E                     u4501:
  2877  001D1E  EFF4  F00D         	goto	l5716
  2878  001D22                     u4500:
  2879  001D22                     
  2880                           ; BSR set to: 0
  2881  001D22  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  2882  001D24  EF9C  F00E         	goto	u4511
  2883  001D28  5190               	movf	(utoa@w+1)& (0+255),w,b
  2884  001D2A  E108               	bnz	u4510
  2885  001D2C  058F               	decf	utoa@w& (0+255),w,b
  2886  001D2E  A0D8               	btfss	status,0,c
  2887  001D30  EF9C  F00E         	goto	u4511
  2888  001D34  EF9E  F00E         	goto	u4510
  2889  001D38                     u4511:
  2890  001D38  EFA5  F00E         	goto	l5736
  2891  001D3C                     u4510:
  2892  001D3C                     
  2893                           ; BSR set to: 0
  2894  001D3C  B222               	btfsc	_flags^0,1,c
  2895  001D3E  EFA3  F00E         	goto	u4521
  2896  001D42  EFA5  F00E         	goto	u4520
  2897  001D46                     u4521:
  2898  001D46  EFF4  F00D         	goto	l5716
  2899  001D4A                     u4520:
  2900  001D4A                     l5736:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2904  001D4A  C07B  F070         	movff	utoa@fp,pad@fp
  2905  001D4E  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  2906  001D52  0E00               	movlw	low _dbuf
  2907  001D54  2599               	addwf	utoa@i& (0+255),w,b
  2908  001D56  6F72               	movwf	pad@buf& (0+255),b
  2909  001D58  0E01               	movlw	high _dbuf
  2910  001D5A  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  2911  001D5C  6F73               	movwf	(pad@buf+1)& (0+255),b
  2912  001D5E  C08F  F074         	movff	utoa@w,pad@p
  2913  001D62  C090  F075         	movff	utoa@w+1,pad@p+1
  2914  001D66  EC88  F017         	call	_pad	;wreg free
  2915  001D6A  C070  F07B         	movff	?_pad,?_utoa
  2916  001D6E  C071  F07C         	movff	?_pad+1,?_utoa+1
  2917  001D72  0012               	return		;funcret
  2918  001D74                     __end_of_utoa:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _pad *****************
  2922 ;; Defined at:
  2923 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2926 ;;		 -> NULL(0), 
  2927 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2928 ;;		 -> dbuf(32), 
  2929 ;;  p               2   20[BANK0 ] int 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  w               2   25[BANK0 ] int 
  2932 ;;  i               2   23[BANK0 ] int 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  2   16[BANK0 ] int 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2942 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;Total ram usage:       11 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 12
  2949 ;; This function calls:
  2950 ;;		_fputc
  2951 ;;		_fputs
  2952 ;;		_strlen
  2953 ;; This function is called by:
  2954 ;;		_utoa
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text11
  2959  002F10                     __ptext11:
  2960                           	callstack 0
  2961  002F10                     _pad:
  2962                           	callstack 13
  2963  002F10                     
  2964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2965  002F10  A022               	btfss	_flags^0,0,c
  2966  002F12  EF8D  F017         	goto	u4421
  2967  002F16  EF8F  F017         	goto	u4420
  2968  002F1A                     u4421:
  2969  002F1A  EF99  F017         	goto	l5686
  2970  002F1E                     u4420:
  2971  002F1E                     
  2972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2973  002F1E  C072  F069         	movff	pad@buf,fputs@s
  2974  002F22  C073  F06A         	movff	pad@buf+1,fputs@s+1
  2975  002F26  C070  F06B         	movff	pad@fp,fputs@fp
  2976  002F2A  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  2977  002F2E  EC81  F01C         	call	_fputs	;wreg free
  2978  002F32                     l5686:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2981  002F32  0100               	movlb	0	; () banked
  2982  002F34  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  2983  002F36  EF9F  F017         	goto	u4431
  2984  002F3A  EFA1  F017         	goto	u4430
  2985  002F3E                     u4431:
  2986  002F3E  EFA7  F017         	goto	l5690
  2987  002F42                     u4430:
  2988  002F42                     
  2989                           ; BSR set to: 0
  2990  002F42  C074  F079         	movff	pad@p,pad@w
  2991  002F46  C075  F07A         	movff	pad@p+1,pad@w+1
  2992  002F4A  EFAB  F017         	goto	l2086
  2993  002F4E                     l5690:
  2994                           
  2995                           ; BSR set to: 0
  2996  002F4E  0E00               	movlw	0
  2997  002F50  6F7A               	movwf	(pad@w+1)& (0+255),b
  2998  002F52  0E00               	movlw	0
  2999  002F54  6F79               	movwf	pad@w& (0+255),b
  3000  002F56                     l2086:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3004  002F56  0E00               	movlw	0
  3005  002F58  6F78               	movwf	(pad@i+1)& (0+255),b
  3006  002F5A  0E00               	movlw	0
  3007  002F5C  6F77               	movwf	pad@i& (0+255),b
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3010  002F5E  EFBE  F017         	goto	l5696
  3011  002F62                     l5692:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3015  002F62  0E00               	movlw	0
  3016  002F64  6F61               	movwf	(fputc@c+1)& (0+255),b
  3017  002F66  0E20               	movlw	32
  3018  002F68  6F60               	movwf	fputc@c& (0+255),b
  3019  002F6A  C070  F062         	movff	pad@fp,fputc@fp
  3020  002F6E  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3021  002F72  ECAB  F019         	call	_fputc	;wreg free
  3022  002F76                     
  3023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3024  002F76  0100               	movlb	0	; () banked
  3025  002F78  4B77               	infsnz	pad@i& (0+255),f,b
  3026  002F7A  2B78               	incf	(pad@i+1)& (0+255),f,b
  3027  002F7C                     l5696:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3031  002F7C  5179               	movf	pad@w& (0+255),w,b
  3032  002F7E  5D77               	subwf	pad@i& (0+255),w,b
  3033  002F80  5178               	movf	(pad@i+1)& (0+255),w,b
  3034  002F82  0A80               	xorlw	128
  3035  002F84  6F76               	movwf	??_pad& (0+255),b
  3036  002F86  517A               	movf	(pad@w+1)& (0+255),w,b
  3037  002F88  0A80               	xorlw	128
  3038  002F8A  5976               	subwfb	??_pad& (0+255),w,b
  3039  002F8C  A0D8               	btfss	status,0,c
  3040  002F8E  EFCB  F017         	goto	u4441
  3041  002F92  EFCD  F017         	goto	u4440
  3042  002F96                     u4441:
  3043  002F96  EFB1  F017         	goto	l5692
  3044  002F9A                     u4440:
  3045  002F9A                     
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3048  002F9A  B022               	btfsc	_flags^0,0,c
  3049  002F9C  EFD2  F017         	goto	u4451
  3050  002FA0  EFD4  F017         	goto	u4450
  3051  002FA4                     u4451:
  3052  002FA4  EFDE  F017         	goto	l5700
  3053  002FA8                     u4450:
  3054  002FA8                     
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3057  002FA8  C072  F069         	movff	pad@buf,fputs@s
  3058  002FAC  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3059  002FB0  C070  F06B         	movff	pad@fp,fputs@fp
  3060  002FB4  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3061  002FB8  EC81  F01C         	call	_fputs	;wreg free
  3062  002FBC                     l5700:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3065  002FBC  C072  F020         	movff	pad@buf,strlen@s
  3066  002FC0  C073  F021         	movff	pad@buf+1,strlen@s+1
  3067  002FC4  EC06  F01D         	call	_strlen	;wreg free
  3068  002FC8  0100               	movlb	0	; () banked
  3069  002FCA  5179               	movf	pad@w& (0+255),w,b
  3070  002FCC  2420               	addwf	?_strlen^0,w,c
  3071  002FCE  6F70               	movwf	?_pad& (0+255),b
  3072  002FD0  517A               	movf	(pad@w+1)& (0+255),w,b
  3073  002FD2  2021               	addwfc	(?_strlen+1)^0,w,c
  3074  002FD4  6F71               	movwf	(?_pad+1)& (0+255),b
  3075  002FD6                     
  3076                           ; BSR set to: 0
  3077  002FD6  0012               	return		;funcret
  3078  002FD8                     __end_of_pad:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function _strlen *****************
  3082 ;; Defined at:
  3083 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3086 ;;		 -> dbuf(32), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  3089 ;;		 -> dbuf(32), 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  2   31[COMRAM] unsigned int 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;Total ram usage:        4 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 8
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_pad
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text12
  3114  003A0C                     __ptext12:
  3115                           	callstack 0
  3116  003A0C                     _strlen:
  3117                           	callstack 16
  3118  003A0C  C020  F060         	movff	strlen@s,strlen@a
  3119  003A10  C021  F061         	movff	strlen@s+1,strlen@a+1
  3120  003A14  EF0E  F01D         	goto	l5638
  3121  003A18                     l5636:
  3122  003A18  4A20               	infsnz	strlen@s^0,f,c
  3123  003A1A  2A21               	incf	(strlen@s+1)^0,f,c
  3124  003A1C                     l5638:
  3125  003A1C  0060  F083  FFD9   	movff	strlen@s,fsr2l
  3126  003A22  0060  F087  FFDA   	movff	strlen@s+1,fsr2h
  3127  003A28  50DF               	movf	indf2,w,c
  3128  003A2A  A4D8               	btfss	status,2,c
  3129  003A2C  EF1A  F01D         	goto	u4341
  3130  003A30  EF1C  F01D         	goto	u4340
  3131  003A34                     u4341:
  3132  003A34  EF0C  F01D         	goto	l5636
  3133  003A38                     u4340:
  3134  003A38  0100               	movlb	0	; () banked
  3135  003A3A  5160               	movf	strlen@a& (0+255),w,b
  3136  003A3C  5C20               	subwf	strlen@s^0,w,c
  3137  003A3E  6E20               	movwf	?_strlen^0,c
  3138  003A40  5161               	movf	(strlen@a+1)& (0+255),w,b
  3139  003A42  5821               	subwfb	(strlen@s+1)^0,w,c
  3140  003A44  6E21               	movwf	(?_strlen+1)^0,c
  3141  003A46                     
  3142                           ; BSR set to: 0
  3143  003A46  0012               	return		;funcret
  3144  003A48                     __end_of_strlen:
  3145                           	callstack 0
  3146                           
  3147 ;; *************** function _fputs *****************
  3148 ;; Defined at:
  3149 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3152 ;;		 -> dbuf(32), 
  3153 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3154 ;;		 -> NULL(0), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  i               2   14[BANK0 ] int 
  3157 ;;  c               1   13[BANK0 ] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  2    9[BANK0 ] int 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3167 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;Total ram usage:        7 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 11
  3174 ;; This function calls:
  3175 ;;		_fputc
  3176 ;; This function is called by:
  3177 ;;		_pad
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text13
  3182  003902                     __ptext13:
  3183                           	callstack 0
  3184  003902                     _fputs:
  3185                           	callstack 13
  3186  003902  0E00               	movlw	0
  3187  003904  0100               	movlb	0	; () banked
  3188  003906  6F6F               	movwf	(fputs@i+1)& (0+255),b
  3189  003908  0E00               	movlw	0
  3190  00390A  6F6E               	movwf	fputs@i& (0+255),b
  3191  00390C  EF94  F01C         	goto	l5632
  3192  003910                     l5628:
  3193                           
  3194                           ; BSR set to: 0
  3195  003910  C06D  F060         	movff	fputs@c,fputc@c
  3196  003914  6B61               	clrf	(fputc@c+1)& (0+255),b
  3197  003916  C06B  F062         	movff	fputs@fp,fputc@fp
  3198  00391A  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  3199  00391E  ECAB  F019         	call	_fputc	;wreg free
  3200  003922  0100               	movlb	0	; () banked
  3201  003924  4B6E               	infsnz	fputs@i& (0+255),f,b
  3202  003926  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  3203  003928                     l5632:
  3204                           
  3205                           ; BSR set to: 0
  3206  003928  516E               	movf	fputs@i& (0+255),w,b
  3207  00392A  2569               	addwf	fputs@s& (0+255),w,b
  3208  00392C  6ED9               	movwf	fsr2l,c
  3209  00392E  516F               	movf	(fputs@i+1)& (0+255),w,b
  3210  003930  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  3211  003932  6EDA               	movwf	fsr2h,c
  3212  003934  50DF               	movf	indf2,w,c
  3213  003936  6F6D               	movwf	fputs@c& (0+255),b
  3214  003938  516D               	movf	fputs@c& (0+255),w,b
  3215  00393A  A4D8               	btfss	status,2,c
  3216  00393C  EFA2  F01C         	goto	u4331
  3217  003940  EFA4  F01C         	goto	u4330
  3218  003944                     u4331:
  3219  003944  EF88  F01C         	goto	l5628
  3220  003948                     u4330:
  3221  003948                     
  3222                           ; BSR set to: 0
  3223  003948  0012               	return		;funcret
  3224  00394A                     __end_of_fputs:
  3225                           	callstack 0
  3226                           
  3227 ;; *************** function _fputc *****************
  3228 ;; Defined at:
  3229 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  c               2    0[BANK0 ] int 
  3232 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3233 ;;		 -> NULL(0), 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  2    0[BANK0 ] int 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:        9 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 10
  3252 ;; This function calls:
  3253 ;;		_putch
  3254 ;; This function is called by:
  3255 ;;		_pad
  3256 ;;		_vfpfcnvrt
  3257 ;;		_fputs
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text14
  3262  003356                     __ptext14:
  3263                           	callstack 0
  3264  003356                     _fputc:
  3265                           	callstack 13
  3266  003356  0100               	movlb	0	; () banked
  3267  003358  5162               	movf	fputc@fp& (0+255),w,b
  3268  00335A  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3269  00335C  B4D8               	btfsc	status,2,c
  3270  00335E  EFB3  F019         	goto	u4291
  3271  003362  EFB5  F019         	goto	u4290
  3272  003366                     u4291:
  3273  003366  EFBE  F019         	goto	l5616
  3274  00336A                     u4290:
  3275  00336A                     
  3276                           ; BSR set to: 0
  3277  00336A  5162               	movf	fputc@fp& (0+255),w,b
  3278  00336C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3279  00336E  A4D8               	btfss	status,2,c
  3280  003370  EFBC  F019         	goto	u4301
  3281  003374  EFBE  F019         	goto	u4300
  3282  003378                     u4301:
  3283  003378  EFC3  F019         	goto	l5618
  3284  00337C                     u4300:
  3285  00337C                     l5616:
  3286                           
  3287                           ; BSR set to: 0
  3288  00337C  5160               	movf	fputc@c& (0+255),w,b
  3289  00337E  EC7B  F01F         	call	_putch
  3290  003382  EFF6  F019         	goto	l2130
  3291  003386                     l5618:
  3292                           
  3293                           ; BSR set to: 0
  3294  003386  EE20 F009          	lfsr	2,9
  3295  00338A  5162               	movf	fputc@fp& (0+255),w,b
  3296  00338C  26D9               	addwf	fsr2l,f,c
  3297  00338E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3298  003390  22DA               	addwfc	fsr2h,f,c
  3299  003392  50DE               	movf	postinc2,w,c
  3300  003394  10DE               	iorwf	postinc2,w,c
  3301  003396  B4D8               	btfsc	status,2,c
  3302  003398  EFD0  F019         	goto	u4311
  3303  00339C  EFD2  F019         	goto	u4310
  3304  0033A0                     u4311:
  3305  0033A0  EFED  F019         	goto	l5622
  3306  0033A4                     u4310:
  3307  0033A4                     
  3308                           ; BSR set to: 0
  3309  0033A4  EE20 F009          	lfsr	2,9
  3310  0033A8  5162               	movf	fputc@fp& (0+255),w,b
  3311  0033AA  26D9               	addwf	fsr2l,f,c
  3312  0033AC  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3313  0033AE  22DA               	addwfc	fsr2h,f,c
  3314  0033B0  EE10 F003          	lfsr	1,3
  3315  0033B4  5162               	movf	fputc@fp& (0+255),w,b
  3316  0033B6  26E1               	addwf	fsr1l,f,c
  3317  0033B8  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3318  0033BA  22E2               	addwfc	fsr1h,f,c
  3319  0033BC  50DE               	movf	postinc2,w,c
  3320  0033BE  5CE6               	subwf	postinc1,w,c
  3321  0033C0  50E6               	movf	postinc1,w,c
  3322  0033C2  0A80               	xorlw	128
  3323  0033C4  6F68               	movwf	(??_fputc+4)& (0+255),b
  3324  0033C6  50DE               	movf	postinc2,w,c
  3325  0033C8  0A80               	xorlw	128
  3326  0033CA  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  3327  0033CC  B0D8               	btfsc	status,0,c
  3328  0033CE  EFEB  F019         	goto	u4321
  3329  0033D2  EFED  F019         	goto	u4320
  3330  0033D6                     u4321:
  3331  0033D6  EFF6  F019         	goto	l2130
  3332  0033DA                     u4320:
  3333  0033DA                     l5622:
  3334                           
  3335                           ; BSR set to: 0
  3336  0033DA  EE20 F003          	lfsr	2,3
  3337  0033DE  5162               	movf	fputc@fp& (0+255),w,b
  3338  0033E0  26D9               	addwf	fsr2l,f,c
  3339  0033E2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3340  0033E4  22DA               	addwfc	fsr2h,f,c
  3341  0033E6  2ADE               	incf	postinc2,f,c
  3342  0033E8  0E00               	movlw	0
  3343  0033EA  22DD               	addwfc	postdec2,f,c
  3344  0033EC                     l2130:
  3345  0033EC  0012               	return		;funcret
  3346  0033EE                     __end_of_fputc:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _putch *****************
  3350 ;; Defined at:
  3351 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  txData          1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  txData          1   32[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;Total ram usage:        1 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; Hardware stack levels required when called: 9
  3372 ;; This function calls:
  3373 ;;		_UART1_Write
  3374 ;; This function is called by:
  3375 ;;		_fputc
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text15
  3380  003EF6                     __ptext15:
  3381                           	callstack 0
  3382  003EF6                     _putch:
  3383                           	callstack 13
  3384                           
  3385                           ;incstack = 0
  3386                           ;putch@txData stored from wreg
  3387  003EF6  6E21               	movwf	putch@txData^0,c
  3388  003EF8                     
  3389                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3390  003EF8  5021               	movf	putch@txData^0,w,c
  3391  003EFA  EC75  F01A         	call	_UART1_Write
  3392  003EFE  0012               	return		;funcret
  3393  003F00                     __end_of_putch:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _UART1_Write *****************
  3397 ;; Defined at:
  3398 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  txData          1    wreg     unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  txData          1   31[COMRAM] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;Total ram usage:        1 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; Hardware stack levels required when called: 8
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_putch
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text16
  3427  0034EA                     __ptext16:
  3428                           	callstack 0
  3429  0034EA                     _UART1_Write:
  3430                           	callstack 13
  3431                           
  3432                           ;incstack = 0
  3433                           ;UART1_Write@txData stored from wreg
  3434  0034EA  6E20               	movwf	UART1_Write@txData^0,c
  3435  0034EC                     l5594:
  3436                           
  3437                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3438  0034EC  0100               	movlb	0	; () banked
  3439  0034EE  51FF               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
  3440  0034F0  B4D8               	btfsc	status,2,c
  3441  0034F2  EF7D  F01A         	goto	u4261
  3442  0034F6  EF7F  F01A         	goto	u4260
  3443  0034FA                     u4261:
  3444  0034FA  EF76  F01A         	goto	l5594
  3445  0034FE                     u4260:
  3446  0034FE                     
  3447                           ; BSR set to: 0
  3448                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3449  0034FE  0139               	movlb	57	; () banked
  3450  003500  B993               	btfsc	147,4,b	;volatile
  3451  003502  EF85  F01A         	goto	u4271
  3452  003506  EF87  F01A         	goto	u4270
  3453  00350A                     u4271:
  3454  00350A  EF8C  F01A         	goto	l309
  3455  00350E                     u4270:
  3456  00350E                     
  3457                           ; BSR set to: 57
  3458                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3459  00350E  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3460                           
  3461                           ;mcc_generated_files/uart1.c: 211:     }
  3462  003514  EFA3  F01A         	goto	l5608
  3463  003518                     l309:
  3464                           
  3465                           ; BSR set to: 57
  3466                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3467  003518  9993               	bcf	147,4,b	;volatile
  3468  00351A                     
  3469                           ; BSR set to: 57
  3470                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3471  00351A  0EBF               	movlw	low _uart1TxBuffer
  3472  00351C  243C               	addwf	_uart1TxHead^0,w,c	;volatile
  3473  00351E  6ED9               	movwf	fsr2l,c
  3474  003520  6ADA               	clrf	fsr2h,c
  3475  003522  0E00               	movlw	high _uart1TxBuffer
  3476  003524  22DA               	addwfc	fsr2h,f,c
  3477  003526  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
  3478  00352C                     
  3479                           ; BSR set to: 57
  3480  00352C  2A3C               	incf	_uart1TxHead^0,f,c	;volatile
  3481  00352E                     
  3482                           ; BSR set to: 57
  3483                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3484  00352E  0E07               	movlw	7
  3485  003530  643C               	cpfsgt	_uart1TxHead^0,c	;volatile
  3486  003532  EF9D  F01A         	goto	u4281
  3487  003536  EF9F  F01A         	goto	u4280
  3488  00353A                     u4281:
  3489  00353A  EFA1  F01A         	goto	l5606
  3490  00353E                     u4280:
  3491  00353E                     
  3492                           ; BSR set to: 57
  3493                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3494  00353E  0E00               	movlw	0
  3495  003540  6E3C               	movwf	_uart1TxHead^0,c	;volatile
  3496  003542                     l5606:
  3497                           
  3498                           ; BSR set to: 57
  3499                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3500  003542  0100               	movlb	0	; () banked
  3501  003544  07FF               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  3502  003546                     l5608:
  3503                           
  3504                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3505  003546  0139               	movlb	57	; () banked
  3506  003548  8993               	bsf	147,4,b	;volatile
  3507  00354A                     
  3508                           ; BSR set to: 57
  3509  00354A  0012               	return		;funcret
  3510  00354C                     __end_of_UART1_Write:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function ___lomod *****************
  3514 ;; Defined at:
  3515 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3518 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  counter         1   31[COMRAM] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  8    0[BANK0 ] unsigned long long 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3530 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;Total ram usage:       17 bytes
  3535 ;; Hardware stack levels used: 1
  3536 ;; Hardware stack levels required when called: 8
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_utoa
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text17
  3545  002D74                     __ptext17:
  3546                           	callstack 0
  3547  002D74                     ___lomod:
  3548                           	callstack 17
  3549  002D74  0100               	movlb	0	; () banked
  3550  002D76  5168               	movf	___lomod@divisor& (0+255),w,b
  3551  002D78  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  3552  002D7A  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  3553  002D7C  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  3554  002D7E  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  3555  002D80  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  3556  002D82  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  3557  002D84  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  3558  002D86  B4D8               	btfsc	status,2,c
  3559  002D88  EFC8  F016         	goto	u4391
  3560  002D8C  EFCA  F016         	goto	u4390
  3561  002D90                     u4391:
  3562  002D90  EF12  F017         	goto	l1831
  3563  002D94                     u4390:
  3564  002D94                     
  3565                           ; BSR set to: 0
  3566  002D94  0E01               	movlw	1
  3567  002D96  6E20               	movwf	___lomod@counter^0,c
  3568  002D98  EFD8  F016         	goto	l5672
  3569  002D9C                     l5670:
  3570                           
  3571                           ; BSR set to: 0
  3572  002D9C  90D8               	bcf	status,0,c
  3573  002D9E  3768               	rlcf	___lomod@divisor& (0+255),f,b
  3574  002DA0  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  3575  002DA2  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  3576  002DA4  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  3577  002DA6  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  3578  002DA8  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  3579  002DAA  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  3580  002DAC  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  3581  002DAE  2A20               	incf	___lomod@counter^0,f,c
  3582  002DB0                     l5672:
  3583                           
  3584                           ; BSR set to: 0
  3585  002DB0  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  3586  002DB2  EFDD  F016         	goto	u4401
  3587  002DB6  EFDF  F016         	goto	u4400
  3588  002DBA                     u4401:
  3589  002DBA  EFCE  F016         	goto	l5670
  3590  002DBE                     u4400:
  3591  002DBE                     l5674:
  3592                           
  3593                           ; BSR set to: 0
  3594  002DBE  5168               	movf	___lomod@divisor& (0+255),w,b
  3595  002DC0  5D60               	subwf	___lomod@dividend& (0+255),w,b
  3596  002DC2  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3597  002DC4  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  3598  002DC6  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3599  002DC8  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  3600  002DCA  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3601  002DCC  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  3602  002DCE  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3603  002DD0  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  3604  002DD2  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3605  002DD4  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  3606  002DD6  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3607  002DD8  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  3608  002DDA  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3609  002DDC  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  3610  002DDE  A0D8               	btfss	status,0,c
  3611  002DE0  EFF4  F016         	goto	u4411
  3612  002DE4  EFF6  F016         	goto	u4410
  3613  002DE8                     u4411:
  3614  002DE8  EF06  F017         	goto	l5678
  3615  002DEC                     u4410:
  3616  002DEC                     
  3617                           ; BSR set to: 0
  3618  002DEC  5168               	movf	___lomod@divisor& (0+255),w,b
  3619  002DEE  5F60               	subwf	___lomod@dividend& (0+255),f,b
  3620  002DF0  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  3621  002DF2  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  3622  002DF4  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  3623  002DF6  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  3624  002DF8  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  3625  002DFA  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  3626  002DFC  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  3627  002DFE  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  3628  002E00  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  3629  002E02  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  3630  002E04  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  3631  002E06  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  3632  002E08  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  3633  002E0A  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  3634  002E0C                     l5678:
  3635                           
  3636                           ; BSR set to: 0
  3637  002E0C  90D8               	bcf	status,0,c
  3638  002E0E  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  3639  002E10  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  3640  002E12  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  3641  002E14  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  3642  002E16  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  3643  002E18  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  3644  002E1A  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  3645  002E1C  3368               	rrcf	___lomod@divisor& (0+255),f,b
  3646  002E1E                     
  3647                           ; BSR set to: 0
  3648  002E1E  2E20               	decfsz	___lomod@counter^0,f,c
  3649  002E20  EFDF  F016         	goto	l5674
  3650  002E24                     l1831:
  3651                           
  3652                           ; BSR set to: 0
  3653  002E24  C060  F060         	movff	___lomod@dividend,?___lomod
  3654  002E28  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  3655  002E2C  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  3656  002E30  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  3657  002E34  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  3658  002E38  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  3659  002E3C  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  3660  002E40  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  3661  002E44                     
  3662                           ; BSR set to: 0
  3663  002E44  0012               	return		;funcret
  3664  002E46                     __end_of___lomod:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function ___lodiv *****************
  3668 ;; Defined at:
  3669 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  dividend        8    0[BANK0 ] unsigned long long 
  3672 ;;  divisor         8    8[BANK0 ] unsigned long long 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  quotient        8   16[BANK0 ] unsigned long long 
  3675 ;;  counter         1   24[BANK0 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  8    0[BANK0 ] unsigned long long 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:       25 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 8
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_utoa
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text18
  3700  002B9C                     __ptext18:
  3701                           	callstack 0
  3702  002B9C                     ___lodiv:
  3703                           	callstack 17
  3704  002B9C  EE20  F070         	lfsr	2,___lodiv@quotient
  3705  002BA0  0E07               	movlw	7
  3706  002BA2                     u4351:
  3707  002BA2  6ADE               	clrf	postinc2,c
  3708  002BA4  06E8               	decf	wreg,f,c
  3709  002BA6  E2FD               	bc	u4351
  3710  002BA8  0100               	movlb	0	; () banked
  3711  002BAA  5168               	movf	___lodiv@divisor& (0+255),w,b
  3712  002BAC  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  3713  002BAE  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  3714  002BB0  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  3715  002BB2  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  3716  002BB4  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  3717  002BB6  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  3718  002BB8  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  3719  002BBA  B4D8               	btfsc	status,2,c
  3720  002BBC  EFE2  F015         	goto	u4361
  3721  002BC0  EFE4  F015         	goto	u4360
  3722  002BC4                     u4361:
  3723  002BC4  EF36  F016         	goto	l1821
  3724  002BC8                     u4360:
  3725  002BC8                     
  3726                           ; BSR set to: 0
  3727  002BC8  0E01               	movlw	1
  3728  002BCA  6F78               	movwf	___lodiv@counter& (0+255),b
  3729  002BCC  EFF2  F015         	goto	l5652
  3730  002BD0                     l5650:
  3731                           
  3732                           ; BSR set to: 0
  3733  002BD0  90D8               	bcf	status,0,c
  3734  002BD2  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  3735  002BD4  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  3736  002BD6  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  3737  002BD8  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  3738  002BDA  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  3739  002BDC  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  3740  002BDE  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  3741  002BE0  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  3742  002BE2  2B78               	incf	___lodiv@counter& (0+255),f,b
  3743  002BE4                     l5652:
  3744                           
  3745                           ; BSR set to: 0
  3746  002BE4  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  3747  002BE6  EFF7  F015         	goto	u4371
  3748  002BEA  EFF9  F015         	goto	u4370
  3749  002BEE                     u4371:
  3750  002BEE  EFE8  F015         	goto	l5650
  3751  002BF2                     u4370:
  3752  002BF2                     l5654:
  3753                           
  3754                           ; BSR set to: 0
  3755  002BF2  90D8               	bcf	status,0,c
  3756  002BF4  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  3757  002BF6  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  3758  002BF8  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  3759  002BFA  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  3760  002BFC  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  3761  002BFE  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  3762  002C00  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  3763  002C02  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  3764  002C04                     
  3765                           ; BSR set to: 0
  3766  002C04  5168               	movf	___lodiv@divisor& (0+255),w,b
  3767  002C06  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  3768  002C08  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3769  002C0A  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  3770  002C0C  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3771  002C0E  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  3772  002C10  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3773  002C12  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  3774  002C14  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3775  002C16  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  3776  002C18  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3777  002C1A  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  3778  002C1C  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3779  002C1E  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  3780  002C20  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3781  002C22  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  3782  002C24  A0D8               	btfss	status,0,c
  3783  002C26  EF17  F016         	goto	u4381
  3784  002C2A  EF19  F016         	goto	u4380
  3785  002C2E                     u4381:
  3786  002C2E  EF2A  F016         	goto	l5662
  3787  002C32                     u4380:
  3788  002C32                     
  3789                           ; BSR set to: 0
  3790  002C32  5168               	movf	___lodiv@divisor& (0+255),w,b
  3791  002C34  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  3792  002C36  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  3793  002C38  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  3794  002C3A  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  3795  002C3C  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  3796  002C3E  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  3797  002C40  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  3798  002C42  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  3799  002C44  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  3800  002C46  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  3801  002C48  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  3802  002C4A  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  3803  002C4C  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  3804  002C4E  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  3805  002C50  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  3806  002C52                     
  3807                           ; BSR set to: 0
  3808  002C52  8170               	bsf	___lodiv@quotient& (0+255),0,b
  3809  002C54                     l5662:
  3810                           
  3811                           ; BSR set to: 0
  3812  002C54  90D8               	bcf	status,0,c
  3813  002C56  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  3814  002C58  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  3815  002C5A  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  3816  002C5C  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  3817  002C5E  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  3818  002C60  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  3819  002C62  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  3820  002C64  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  3821  002C66                     
  3822                           ; BSR set to: 0
  3823  002C66  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  3824  002C68  EFF9  F015         	goto	l5654
  3825  002C6C                     l1821:
  3826                           
  3827                           ; BSR set to: 0
  3828  002C6C  C070  F060         	movff	___lodiv@quotient,?___lodiv
  3829  002C70  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  3830  002C74  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  3831  002C78  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  3832  002C7C  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  3833  002C80  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  3834  002C84  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  3835  002C88  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  3836  002C8C                     
  3837                           ; BSR set to: 0
  3838  002C8C  0012               	return		;funcret
  3839  002C8E                     __end_of___lodiv:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function _ADCC_GetSingleConversion *****************
  3843 ;; Defined at:
  3844 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  channel         1    wreg     enum E16067
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  channel         1    2[BANK0 ] enum E16067
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  2   31[COMRAM] unsigned short 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;Total ram usage:        5 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 8
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_getBatteryVoltage
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text19
  3873  003992                     __ptext19:
  3874                           	callstack 0
  3875  003992                     _ADCC_GetSingleConversion:
  3876                           	callstack 20
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;incstack = 0
  3880                           ;ADCC_GetSingleConversion@channel stored from wreg
  3881  003992  0100               	movlb	0	; () banked
  3882  003994  6F62               	movwf	ADCC_GetSingleConversion@channel& (0+255),b
  3883  003996                     
  3884                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  3885  003996  0060  F18B  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  3886  00399C                     
  3887                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  3888  00399C  013E               	movlb	62	; () banked
  3889  00399E  8FF8               	bsf	248,7,b	;volatile
  3890  0039A0                     
  3891                           ; BSR set to: 62
  3892                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  3893  0039A0  9DF8               	bcf	248,6,b	;volatile
  3894  0039A2                     
  3895                           ; BSR set to: 62
  3896                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  3897  0039A2  81F8               	bsf	248,0,b	;volatile
  3898  0039A4                     l1054:
  3899                           
  3900                           ; BSR set to: 62
  3901                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  3902  0039A4  B1F8               	btfsc	248,0,b	;volatile
  3903  0039A6  EFD7  F01C         	goto	u4611
  3904  0039AA  EFD9  F01C         	goto	u4610
  3905  0039AE                     u4611:
  3906  0039AE  EFD2  F01C         	goto	l1054
  3907  0039B2                     u4610:
  3908  0039B2                     
  3909                           ; BSR set to: 62
  3910                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3911  0039B2  51F0               	movf	240,w,b	;volatile
  3912  0039B4  0100               	movlb	0	; () banked
  3913  0039B6  6F61               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  3914  0039B8  6B60               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  3915  0039BA  013E               	movlb	62	; () banked
  3916  0039BC  51EF               	movf	239,w,b	;volatile
  3917  0039BE  0100               	movlb	0	; () banked
  3918  0039C0  2560               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  3919  0039C2  6E20               	movwf	?_ADCC_GetSingleConversion^0,c
  3920  0039C4  013E               	movlb	62	; () banked
  3921  0039C6  0E00               	movlw	0
  3922  0039C8  0100               	movlb	0	; () banked
  3923  0039CA  2161               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  3924  0039CC  6E21               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  3925  0039CE                     
  3926                           ; BSR set to: 0
  3927  0039CE  0012               	return		;funcret
  3928  0039D0                     __end_of_ADCC_GetSingleConversion:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function ___flge *****************
  3932 ;; Defined at:
  3933 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  ff1             4   22[BANK0 ] unsigned short 
  3936 ;;  ff2             4   26[BANK0 ] unsigned short 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;		None               void
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3948 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;Total ram usage:       12 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 8
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_loop
  3959 ;;		_checkBatt
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text20
  3964  002A96                     __ptext20:
  3965                           	callstack 0
  3966  002A96                     ___flge:
  3967                           	callstack 20
  3968  002A96  0E00               	movlw	0
  3969  002A98  0100               	movlb	0	; () banked
  3970  002A9A  1576               	andwf	___flge@ff1& (0+255),w,b
  3971  002A9C  6F7E               	movwf	??___flge& (0+255),b
  3972  002A9E  0E00               	movlw	0
  3973  002AA0  1577               	andwf	(___flge@ff1+1)& (0+255),w,b
  3974  002AA2  6F7F               	movwf	(??___flge+1)& (0+255),b
  3975  002AA4  0E80               	movlw	128
  3976  002AA6  1578               	andwf	(___flge@ff1+2)& (0+255),w,b
  3977  002AA8  6F80               	movwf	(??___flge+2)& (0+255),b
  3978  002AAA  0E7F               	movlw	127
  3979  002AAC  1579               	andwf	(___flge@ff1+3)& (0+255),w,b
  3980  002AAE  6F81               	movwf	(??___flge+3)& (0+255),b
  3981  002AB0  517E               	movf	??___flge& (0+255),w,b
  3982  002AB2  117F               	iorwf	(??___flge+1)& (0+255),w,b
  3983  002AB4  1180               	iorwf	(??___flge+2)& (0+255),w,b
  3984  002AB6  1181               	iorwf	(??___flge+3)& (0+255),w,b
  3985  002AB8  A4D8               	btfss	status,2,c
  3986  002ABA  EF61  F015         	goto	u5031
  3987  002ABE  EF63  F015         	goto	u5030
  3988  002AC2                     u5031:
  3989  002AC2  EF6B  F015         	goto	l6118
  3990  002AC6                     u5030:
  3991  002AC6                     
  3992                           ; BSR set to: 0
  3993  002AC6  0E00               	movlw	0
  3994  002AC8  6F76               	movwf	___flge@ff1& (0+255),b
  3995  002ACA  0E00               	movlw	0
  3996  002ACC  6F77               	movwf	(___flge@ff1+1)& (0+255),b
  3997  002ACE  0E00               	movlw	0
  3998  002AD0  6F78               	movwf	(___flge@ff1+2)& (0+255),b
  3999  002AD2  0E00               	movlw	0
  4000  002AD4  6F79               	movwf	(___flge@ff1+3)& (0+255),b
  4001  002AD6                     l6118:
  4002                           
  4003                           ; BSR set to: 0
  4004  002AD6  0E00               	movlw	0
  4005  002AD8  157A               	andwf	___flge@ff2& (0+255),w,b
  4006  002ADA  6F7E               	movwf	??___flge& (0+255),b
  4007  002ADC  0E00               	movlw	0
  4008  002ADE  157B               	andwf	(___flge@ff2+1)& (0+255),w,b
  4009  002AE0  6F7F               	movwf	(??___flge+1)& (0+255),b
  4010  002AE2  0E80               	movlw	128
  4011  002AE4  157C               	andwf	(___flge@ff2+2)& (0+255),w,b
  4012  002AE6  6F80               	movwf	(??___flge+2)& (0+255),b
  4013  002AE8  0E7F               	movlw	127
  4014  002AEA  157D               	andwf	(___flge@ff2+3)& (0+255),w,b
  4015  002AEC  6F81               	movwf	(??___flge+3)& (0+255),b
  4016  002AEE  517E               	movf	??___flge& (0+255),w,b
  4017  002AF0  117F               	iorwf	(??___flge+1)& (0+255),w,b
  4018  002AF2  1180               	iorwf	(??___flge+2)& (0+255),w,b
  4019  002AF4  1181               	iorwf	(??___flge+3)& (0+255),w,b
  4020  002AF6  A4D8               	btfss	status,2,c
  4021  002AF8  EF80  F015         	goto	u5041
  4022  002AFC  EF82  F015         	goto	u5040
  4023  002B00                     u5041:
  4024  002B00  EF8A  F015         	goto	l6122
  4025  002B04                     u5040:
  4026  002B04                     
  4027                           ; BSR set to: 0
  4028  002B04  0E00               	movlw	0
  4029  002B06  6F7A               	movwf	___flge@ff2& (0+255),b
  4030  002B08  0E00               	movlw	0
  4031  002B0A  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  4032  002B0C  0E00               	movlw	0
  4033  002B0E  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  4034  002B10  0E00               	movlw	0
  4035  002B12  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  4036  002B14                     l6122:
  4037                           
  4038                           ; BSR set to: 0
  4039  002B14  AF79               	btfss	(___flge@ff1+3)& (0+255),7,b
  4040  002B16  EF8F  F015         	goto	u5051
  4041  002B1A  EF91  F015         	goto	u5050
  4042  002B1E                     u5051:
  4043  002B1E  EF9A  F015         	goto	l6126
  4044  002B22                     u5050:
  4045  002B22                     
  4046                           ; BSR set to: 0
  4047  002B22  6D76               	negf	___flge@ff1& (0+255),b
  4048  002B24  1F77               	comf	(___flge@ff1+1)& (0+255),f,b
  4049  002B26  B0D8               	btfsc	status,0,c
  4050  002B28  2B77               	incf	(___flge@ff1+1)& (0+255),f,b
  4051  002B2A  1F78               	comf	(___flge@ff1+2)& (0+255),f,b
  4052  002B2C  B0D8               	btfsc	status,0,c
  4053  002B2E  2B78               	incf	(___flge@ff1+2)& (0+255),f,b
  4054  002B30  0E80               	movlw	128
  4055  002B32  5779               	subfwb	(___flge@ff1+3)& (0+255),f,b
  4056  002B34                     l6126:
  4057                           
  4058                           ; BSR set to: 0
  4059  002B34  AF7D               	btfss	(___flge@ff2+3)& (0+255),7,b
  4060  002B36  EF9F  F015         	goto	u5061
  4061  002B3A  EFA1  F015         	goto	u5060
  4062  002B3E                     u5061:
  4063  002B3E  EFAA  F015         	goto	l1648
  4064  002B42                     u5060:
  4065  002B42                     
  4066                           ; BSR set to: 0
  4067  002B42  6D7A               	negf	___flge@ff2& (0+255),b
  4068  002B44  1F7B               	comf	(___flge@ff2+1)& (0+255),f,b
  4069  002B46  B0D8               	btfsc	status,0,c
  4070  002B48  2B7B               	incf	(___flge@ff2+1)& (0+255),f,b
  4071  002B4A  1F7C               	comf	(___flge@ff2+2)& (0+255),f,b
  4072  002B4C  B0D8               	btfsc	status,0,c
  4073  002B4E  2B7C               	incf	(___flge@ff2+2)& (0+255),f,b
  4074  002B50  0E80               	movlw	128
  4075  002B52  577D               	subfwb	(___flge@ff2+3)& (0+255),f,b
  4076  002B54                     l1648:
  4077                           
  4078                           ; BSR set to: 0
  4079  002B54  0E00               	movlw	0
  4080  002B56  1B76               	xorwf	___flge@ff1& (0+255),f,b
  4081  002B58  0E00               	movlw	0
  4082  002B5A  1B77               	xorwf	(___flge@ff1+1)& (0+255),f,b
  4083  002B5C  0E00               	movlw	0
  4084  002B5E  1B78               	xorwf	(___flge@ff1+2)& (0+255),f,b
  4085  002B60  0E80               	movlw	128
  4086  002B62  1B79               	xorwf	(___flge@ff1+3)& (0+255),f,b
  4087  002B64  0E00               	movlw	0
  4088  002B66  1B7A               	xorwf	___flge@ff2& (0+255),f,b
  4089  002B68  0E00               	movlw	0
  4090  002B6A  1B7B               	xorwf	(___flge@ff2+1)& (0+255),f,b
  4091  002B6C  0E00               	movlw	0
  4092  002B6E  1B7C               	xorwf	(___flge@ff2+2)& (0+255),f,b
  4093  002B70  0E80               	movlw	128
  4094  002B72  1B7D               	xorwf	(___flge@ff2+3)& (0+255),f,b
  4095  002B74  517A               	movf	___flge@ff2& (0+255),w,b
  4096  002B76  5D76               	subwf	___flge@ff1& (0+255),w,b
  4097  002B78  517B               	movf	(___flge@ff2+1)& (0+255),w,b
  4098  002B7A  5977               	subwfb	(___flge@ff1+1)& (0+255),w,b
  4099  002B7C  517C               	movf	(___flge@ff2+2)& (0+255),w,b
  4100  002B7E  5978               	subwfb	(___flge@ff1+2)& (0+255),w,b
  4101  002B80  517D               	movf	(___flge@ff2+3)& (0+255),w,b
  4102  002B82  5979               	subwfb	(___flge@ff1+3)& (0+255),w,b
  4103  002B84  B0D8               	btfsc	status,0,c
  4104  002B86  EFC7  F015         	goto	u5071
  4105  002B8A  EFC9  F015         	goto	u5070
  4106  002B8E                     u5071:
  4107  002B8E  EFCC  F015         	goto	l6132
  4108  002B92                     u5070:
  4109  002B92                     
  4110                           ; BSR set to: 0
  4111  002B92  90D8               	bcf	status,0,c
  4112  002B94  EFCD  F015         	goto	l1653
  4113  002B98                     l6132:
  4114                           
  4115                           ; BSR set to: 0
  4116  002B98  80D8               	bsf	status,0,c
  4117  002B9A                     l1653:
  4118                           
  4119                           ; BSR set to: 0
  4120  002B9A  0012               	return		;funcret
  4121  002B9C                     __end_of___flge:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _calcSteering *****************
  4125 ;; Defined at:
  4126 ;;		line 204 in file "main.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  delta           2   19[BANK0 ] short 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;Total ram usage:        4 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 10
  4147 ;; This function calls:
  4148 ;;		_setSteering
  4149 ;; This function is called by:
  4150 ;;		_loop
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text21
  4155  002468                     __ptext21:
  4156                           	callstack 0
  4157  002468                     _calcSteering:
  4158                           	callstack 19
  4159  002468                     
  4160                           ;main.c: 205:     int16_t delta = (int16_t)(distLeft - distRight ) - (int16_t)((0) * 1.4
      +                          142135);
  4161  002468  502E               	movf	_distRight^0,w,c	;volatile
  4162  00246A  5C30               	subwf	_distLeft^0,w,c	;volatile
  4163  00246C  0100               	movlb	0	; () banked
  4164  00246E  6F73               	movwf	calcSteering@delta& (0+255),b
  4165  002470  502F               	movf	(_distRight+1)^0,w,c	;volatile
  4166  002472  5831               	subwfb	(_distLeft+1)^0,w,c	;volatile
  4167  002474  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4168                           
  4169                           ;main.c: 209:     switch (driveMode){
  4170  002476  EF65  F012         	goto	l6292
  4171  00247A                     l1305:
  4172  00247A                     l6282:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;main.c: 214:             if(delta > (40)){
  4176  00247A  BF74               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  4177  00247C  EF49  F012         	goto	u5321
  4178  002480  5174               	movf	(calcSteering@delta+1)& (0+255),w,b
  4179  002482  E109               	bnz	u5320
  4180  002484  0E29               	movlw	41
  4181  002486  5D73               	subwf	calcSteering@delta& (0+255),w,b
  4182  002488  A0D8               	btfss	status,0,c
  4183  00248A  EF49  F012         	goto	u5321
  4184  00248E  EF4B  F012         	goto	u5320
  4185  002492                     u5321:
  4186  002492  EF51  F012         	goto	l6286
  4187  002496                     u5320:
  4188  002496                     
  4189                           ; BSR set to: 0
  4190                           ;main.c: 215:                 delta = (40);
  4191  002496  0E00               	movlw	0
  4192  002498  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4193  00249A  0E28               	movlw	40
  4194  00249C  6F73               	movwf	calcSteering@delta& (0+255),b
  4195                           
  4196                           ;main.c: 216:             }else if(delta < -(40)){
  4197  00249E  EFC8  F012         	goto	l6316
  4198  0024A2                     l6286:
  4199                           
  4200                           ; BSR set to: 0
  4201  0024A2  AF74               	btfss	(calcSteering@delta+1)& (0+255),7,b
  4202  0024A4  EF5D  F012         	goto	u5331
  4203  0024A8  0ED8               	movlw	216
  4204  0024AA  5D73               	subwf	calcSteering@delta& (0+255),w,b
  4205  0024AC  0EFF               	movlw	255
  4206  0024AE  5974               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  4207  0024B0  B0D8               	btfsc	status,0,c
  4208  0024B2  EF5D  F012         	goto	u5331
  4209  0024B6  EF5F  F012         	goto	u5330
  4210  0024BA                     u5331:
  4211  0024BA  EF82  F012         	goto	l1310
  4212  0024BE                     u5330:
  4213  0024BE                     
  4214                           ; BSR set to: 0
  4215                           ;main.c: 217:                 delta = -(40);
  4216  0024BE  0EFF               	movlw	255
  4217  0024C0  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4218  0024C2  0ED8               	movlw	216
  4219  0024C4  6F73               	movwf	calcSteering@delta& (0+255),b
  4220  0024C6  EFC8  F012         	goto	l6316
  4221  0024CA                     l6292:
  4222                           
  4223                           ; BSR set to: 0
  4224  0024CA  5036               	movf	_driveMode^0,w,c
  4225  0024CC  6F71               	movwf	??_calcSteering& (0+255),b
  4226  0024CE  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  4227                           
  4228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4229                           ; Switch size 1, requested type "simple"
  4230                           ; Number of cases is 1, Range of values is 0 to 0
  4231                           ; switch strategies available:
  4232                           ; Name         Instructions Cycles
  4233                           ; simple_byte            4     3 (average)
  4234                           ;	Chosen strategy is simple_byte
  4235  0024D0  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  4236  0024D2  0A00               	xorlw	0	; case 0
  4237  0024D4  B4D8               	btfsc	status,2,c
  4238  0024D6  EF6F  F012         	goto	l6626
  4239  0024DA  EFC8  F012         	goto	l6316
  4240  0024DE                     l6626:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ; Switch size 1, requested type "simple"
  4244                           ; Number of cases is 4, Range of values is 0 to 5
  4245                           ; switch strategies available:
  4246                           ; Name         Instructions Cycles
  4247                           ; simple_byte           13     7 (average)
  4248                           ;	Chosen strategy is simple_byte
  4249  0024DE  5171               	movf	??_calcSteering& (0+255),w,b
  4250  0024E0  0A00               	xorlw	0	; case 0
  4251  0024E2  B4D8               	btfsc	status,2,c
  4252  0024E4  EF3D  F012         	goto	l6282
  4253  0024E8  0A01               	xorlw	1	; case 1
  4254  0024EA  B4D8               	btfsc	status,2,c
  4255  0024EC  EF3D  F012         	goto	l1305
  4256  0024F0  0A05               	xorlw	5	; case 4
  4257  0024F2  B4D8               	btfsc	status,2,c
  4258  0024F4  EF3D  F012         	goto	l6282
  4259  0024F8  0A01               	xorlw	1	; case 5
  4260  0024FA  B4D8               	btfsc	status,2,c
  4261  0024FC  EF3D  F012         	goto	l6282
  4262  002500  EFC8  F012         	goto	l6316
  4263  002504                     l1310:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;main.c: 224:     switch (driveMode){
  4267  002504  EFC8  F012         	goto	l6316
  4268  002508                     l6294:
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;main.c: 226:             setSteering(delta, Ratio);
  4272  002508  C073  F068         	movff	calcSteering@delta,setSteering@steering
  4273  00250C  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4274  002510  0E02               	movlw	2
  4275  002512  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4276  002514  EC5F  F011         	call	_setSteering	;wreg free
  4277                           
  4278                           ;main.c: 227:             break;
  4279  002518  EFED  F012         	goto	l1324
  4280  00251C                     l6296:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;main.c: 229:             setSteering(delta, Front);
  4284  00251C  C073  F068         	movff	calcSteering@delta,setSteering@steering
  4285  002520  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4286  002524  0E03               	movlw	3
  4287  002526  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4288  002528  EC5F  F011         	call	_setSteering	;wreg free
  4289                           
  4290                           ;main.c: 230:             break;
  4291  00252C  EFED  F012         	goto	l1324
  4292  002530                     l6298:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;main.c: 232:             setSteering((65), Inverted);
  4296  002530  0E00               	movlw	0
  4297  002532  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4298  002534  0E41               	movlw	65
  4299  002536  6F68               	movwf	setSteering@steering& (0+255),b
  4300  002538  0E00               	movlw	0
  4301  00253A  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4302  00253C  EC5F  F011         	call	_setSteering	;wreg free
  4303                           
  4304                           ;main.c: 233:             break;
  4305  002540  EFED  F012         	goto	l1324
  4306  002544                     l6302:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;main.c: 238:             if(curveMode == InCurve){
  4310  002544  0E02               	movlw	2
  4311  002546  1835               	xorwf	_curveMode^0,w,c
  4312  002548  A4D8               	btfss	status,2,c
  4313  00254A  EFA9  F012         	goto	u5341
  4314  00254E  EFAB  F012         	goto	u5340
  4315  002552                     u5341:
  4316  002552  EF8E  F012         	goto	l6296
  4317  002556                     u5340:
  4318  002556                     
  4319                           ; BSR set to: 0
  4320                           ;main.c: 239:                 setSteering((55), Ratio);
  4321  002556  0E00               	movlw	0
  4322  002558  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4323  00255A  0E37               	movlw	55
  4324  00255C  6F68               	movwf	setSteering@steering& (0+255),b
  4325  00255E  0E02               	movlw	2
  4326  002560  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4327  002562  EC5F  F011         	call	_setSteering	;wreg free
  4328                           
  4329                           ;main.c: 240:             } else {
  4330  002566  EFED  F012         	goto	l1324
  4331  00256A                     l6308:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;main.c: 245:             if(curveMode == InCurve){
  4335  00256A  0E02               	movlw	2
  4336  00256C  1835               	xorwf	_curveMode^0,w,c
  4337  00256E  A4D8               	btfss	status,2,c
  4338  002570  EFBC  F012         	goto	u5351
  4339  002574  EFBE  F012         	goto	u5350
  4340  002578                     u5351:
  4341  002578  EF8E  F012         	goto	l6296
  4342  00257C                     u5350:
  4343  00257C                     
  4344                           ; BSR set to: 0
  4345                           ;main.c: 246:                 setSteering(-(55), Ratio);
  4346  00257C  0EFF               	movlw	255
  4347  00257E  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4348  002580  0EC9               	movlw	201
  4349  002582  6F68               	movwf	setSteering@steering& (0+255),b
  4350  002584  0E02               	movlw	2
  4351  002586  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4352  002588  EC5F  F011         	call	_setSteering	;wreg free
  4353                           
  4354                           ;main.c: 247:             } else {
  4355  00258C  EFED  F012         	goto	l1324
  4356  002590                     l6316:
  4357                           
  4358                           ; BSR set to: 0
  4359  002590  5036               	movf	_driveMode^0,w,c
  4360  002592  6F71               	movwf	??_calcSteering& (0+255),b
  4361  002594  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  4362                           
  4363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4364                           ; Switch size 1, requested type "simple"
  4365                           ; Number of cases is 1, Range of values is 0 to 0
  4366                           ; switch strategies available:
  4367                           ; Name         Instructions Cycles
  4368                           ; simple_byte            4     3 (average)
  4369                           ;	Chosen strategy is simple_byte
  4370  002596  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  4371  002598  0A00               	xorlw	0	; case 0
  4372  00259A  B4D8               	btfsc	status,2,c
  4373  00259C  EFD2  F012         	goto	l6628
  4374  0025A0  EFED  F012         	goto	l1324
  4375  0025A4                     l6628:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ; Switch size 1, requested type "simple"
  4379                           ; Number of cases is 6, Range of values is 0 to 5
  4380                           ; switch strategies available:
  4381                           ; Name         Instructions Cycles
  4382                           ; simple_byte           19    10 (average)
  4383                           ;	Chosen strategy is simple_byte
  4384  0025A4  5171               	movf	??_calcSteering& (0+255),w,b
  4385  0025A6  0A00               	xorlw	0	; case 0
  4386  0025A8  B4D8               	btfsc	status,2,c
  4387  0025AA  EF8E  F012         	goto	l6296
  4388  0025AE  0A01               	xorlw	1	; case 1
  4389  0025B0  B4D8               	btfsc	status,2,c
  4390  0025B2  EF84  F012         	goto	l6294
  4391  0025B6  0A03               	xorlw	3	; case 2
  4392  0025B8  B4D8               	btfsc	status,2,c
  4393  0025BA  EF98  F012         	goto	l6298
  4394  0025BE  0A01               	xorlw	1	; case 3
  4395  0025C0  B4D8               	btfsc	status,2,c
  4396  0025C2  EF98  F012         	goto	l6298
  4397  0025C6  0A07               	xorlw	7	; case 4
  4398  0025C8  B4D8               	btfsc	status,2,c
  4399  0025CA  EFA2  F012         	goto	l6302
  4400  0025CE  0A01               	xorlw	1	; case 5
  4401  0025D0  B4D8               	btfsc	status,2,c
  4402  0025D2  EFB5  F012         	goto	l6308
  4403  0025D6  EFED  F012         	goto	l1324
  4404  0025DA                     l1324:
  4405  0025DA  0012               	return		;funcret
  4406  0025DC                     __end_of_calcSteering:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _setSteering *****************
  4410 ;; Defined at:
  4411 ;;		line 360 in file "main.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  steering        2    8[BANK0 ] short 
  4414 ;;  steeringMode    1   10[BANK0 ] enum E17299
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  steeringB       2   15[BANK0 ] short 
  4417 ;;  steeringF       2   13[BANK0 ] short 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4427 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;Total ram usage:        9 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 9
  4434 ;; This function calls:
  4435 ;;		_PWM5_LoadDutyValue
  4436 ;;		_PWM6_LoadDutyValue
  4437 ;;		___awdiv
  4438 ;; This function is called by:
  4439 ;;		_loop
  4440 ;;		_checkBatt
  4441 ;;		_startAccell
  4442 ;;		_calcSteering
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text22
  4447  0022BE                     __ptext22:
  4448                           	callstack 0
  4449  0022BE                     _setSteering:
  4450                           	callstack 19
  4451  0022BE  0E00               	movlw	0
  4452  0022C0  0100               	movlb	0	; () banked
  4453  0022C2  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4454  0022C4  0E00               	movlw	0
  4455  0022C6  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4456                           
  4457                           ;main.c: 362:     switch(steeringMode){
  4458  0022C8  EFB4  F011         	goto	l5938
  4459  0022CC                     l1367:
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;main.c: 364:             steeringF = (+steering);
  4463  0022CC  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4464  0022D0  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4465                           
  4466                           ;main.c: 365:             steeringB = -steering;
  4467  0022D4  C068  F06B         	movff	setSteering@steering,??_setSteering
  4468  0022D8  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4469  0022DC  1F6B               	comf	??_setSteering& (0+255),f,b
  4470  0022DE  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4471  0022E0  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4472  0022E2  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4473  0022E4  C06B  F06F         	movff	??_setSteering,setSteering@steeringB
  4474  0022E8  C06C  F070         	movff	??_setSteering+1,setSteering@steeringB+1
  4475                           
  4476                           ;main.c: 366:             break;
  4477  0022EC  EFD5  F011         	goto	l5940
  4478  0022F0                     l1369:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;main.c: 368:             steeringF = (+steering);
  4482  0022F0  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4483  0022F4  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4484                           
  4485                           ;main.c: 369:             steeringB = (+steering);
  4486  0022F8  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4487  0022FC  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4488                           
  4489                           ;main.c: 370:             break;
  4490  002300  EFD5  F011         	goto	l5940
  4491  002304                     l1370:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;main.c: 372:             steeringF = (+steering);
  4495  002304  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4496  002308  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4497  00230C                     
  4498                           ; BSR set to: 0
  4499                           ;main.c: 373:             steeringB = (-steering / (2));
  4500  00230C  C068  F060         	movff	setSteering@steering,___awdiv@dividend
  4501  002310  C069  F061         	movff	setSteering@steering+1,___awdiv@dividend+1
  4502  002314  0EFF               	movlw	255
  4503  002316  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4504  002318  0EFE               	movlw	254
  4505  00231A  6F62               	movwf	___awdiv@divisor& (0+255),b
  4506  00231C  ECEC  F017         	call	___awdiv	;wreg free
  4507  002320  C060  F06F         	movff	?___awdiv,setSteering@steeringB
  4508  002324  C061  F070         	movff	?___awdiv+1,setSteering@steeringB+1
  4509                           
  4510                           ;main.c: 374:             break;
  4511  002328  EFD5  F011         	goto	l5940
  4512  00232C                     l1371:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;main.c: 376:             steeringF = (+steering);
  4516  00232C  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4517  002330  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4518  002334                     
  4519                           ; BSR set to: 0
  4520                           ;main.c: 377:             steeringB = 0;
  4521  002334  0E00               	movlw	0
  4522  002336  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4523  002338  0E00               	movlw	0
  4524  00233A  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4525                           
  4526                           ;main.c: 378:             break;
  4527  00233C  EFD5  F011         	goto	l5940
  4528  002340                     l5930:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;main.c: 380:             steeringF = 0;
  4532  002340  0E00               	movlw	0
  4533  002342  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4534  002344  0E00               	movlw	0
  4535  002346  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4536  002348                     
  4537                           ; BSR set to: 0
  4538                           ;main.c: 381:             steeringB = (+steering);
  4539  002348  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4540  00234C  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4541                           
  4542                           ;main.c: 382:             break;
  4543  002350  EFD5  F011         	goto	l5940
  4544  002354                     l5934:
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;main.c: 384:             steeringF = 0;
  4548  002354  0E00               	movlw	0
  4549  002356  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4550  002358  0E00               	movlw	0
  4551  00235A  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4552                           
  4553                           ;main.c: 385:             steeringB = 0;
  4554  00235C  0E00               	movlw	0
  4555  00235E  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4556  002360  0E00               	movlw	0
  4557  002362  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4558                           
  4559                           ;main.c: 386:             break;
  4560  002364  EFD5  F011         	goto	l5940
  4561  002368                     l5938:
  4562                           
  4563                           ; BSR set to: 0
  4564  002368  516A               	movf	setSteering@steeringMode& (0+255),w,b
  4565  00236A  6F6B               	movwf	??_setSteering& (0+255),b
  4566  00236C  6B6C               	clrf	(??_setSteering+1)& (0+255),b
  4567                           
  4568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4569                           ; Switch size 1, requested type "simple"
  4570                           ; Number of cases is 1, Range of values is 0 to 0
  4571                           ; switch strategies available:
  4572                           ; Name         Instructions Cycles
  4573                           ; simple_byte            4     3 (average)
  4574                           ;	Chosen strategy is simple_byte
  4575  00236E  516C               	movf	(??_setSteering+1)& (0+255),w,b
  4576  002370  0A00               	xorlw	0	; case 0
  4577  002372  B4D8               	btfsc	status,2,c
  4578  002374  EFBE  F011         	goto	l6630
  4579  002378  EFAA  F011         	goto	l5934
  4580  00237C                     l6630:
  4581                           
  4582                           ; BSR set to: 0
  4583                           ; Switch size 1, requested type "simple"
  4584                           ; Number of cases is 5, Range of values is 0 to 4
  4585                           ; switch strategies available:
  4586                           ; Name         Instructions Cycles
  4587                           ; simple_byte           16     9 (average)
  4588                           ;	Chosen strategy is simple_byte
  4589  00237C  516B               	movf	??_setSteering& (0+255),w,b
  4590  00237E  0A00               	xorlw	0	; case 0
  4591  002380  B4D8               	btfsc	status,2,c
  4592  002382  EF66  F011         	goto	l1367
  4593  002386  0A01               	xorlw	1	; case 1
  4594  002388  B4D8               	btfsc	status,2,c
  4595  00238A  EF78  F011         	goto	l1369
  4596  00238E  0A03               	xorlw	3	; case 2
  4597  002390  B4D8               	btfsc	status,2,c
  4598  002392  EF82  F011         	goto	l1370
  4599  002396  0A01               	xorlw	1	; case 3
  4600  002398  B4D8               	btfsc	status,2,c
  4601  00239A  EF96  F011         	goto	l1371
  4602  00239E  0A07               	xorlw	7	; case 4
  4603  0023A0  B4D8               	btfsc	status,2,c
  4604  0023A2  EFA0  F011         	goto	l5930
  4605  0023A6  EFAA  F011         	goto	l5934
  4606  0023AA                     l5940:
  4607                           
  4608                           ;main.c: 389:     if(steeringF > ((65))){
  4609  0023AA  0100               	movlb	0	; () banked
  4610  0023AC  BF6E               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  4611  0023AE  EFE2  F011         	goto	u4781
  4612  0023B2  516E               	movf	(setSteering@steeringF+1)& (0+255),w,b
  4613  0023B4  E109               	bnz	u4780
  4614  0023B6  0E42               	movlw	66
  4615  0023B8  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4616  0023BA  A0D8               	btfss	status,0,c
  4617  0023BC  EFE2  F011         	goto	u4781
  4618  0023C0  EFE4  F011         	goto	u4780
  4619  0023C4                     u4781:
  4620  0023C4  EFEA  F011         	goto	l5944
  4621  0023C8                     u4780:
  4622  0023C8                     
  4623                           ; BSR set to: 0
  4624                           ;main.c: 390:         steeringF = ((65));
  4625  0023C8  0E00               	movlw	0
  4626  0023CA  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4627  0023CC  0E41               	movlw	65
  4628  0023CE  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4629                           
  4630                           ;main.c: 391:     } else if(steeringF < (-(65))){
  4631  0023D0  EFFC  F011         	goto	l5948
  4632  0023D4                     l5944:
  4633                           
  4634                           ; BSR set to: 0
  4635  0023D4  AF6E               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  4636  0023D6  EFF6  F011         	goto	u4791
  4637  0023DA  0EBF               	movlw	191
  4638  0023DC  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4639  0023DE  0EFF               	movlw	255
  4640  0023E0  596E               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  4641  0023E2  B0D8               	btfsc	status,0,c
  4642  0023E4  EFF6  F011         	goto	u4791
  4643  0023E8  EFF8  F011         	goto	u4790
  4644  0023EC                     u4791:
  4645  0023EC  EFFC  F011         	goto	l5948
  4646  0023F0                     u4790:
  4647  0023F0                     
  4648                           ; BSR set to: 0
  4649                           ;main.c: 392:         steeringF = (-(65));
  4650  0023F0  0EFF               	movlw	255
  4651  0023F2  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4652  0023F4  0EBF               	movlw	191
  4653  0023F6  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4654  0023F8                     l5948:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;main.c: 395:     if(steeringB > ((40))){
  4658  0023F8  BF70               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  4659  0023FA  EF08  F012         	goto	u4801
  4660  0023FE  5170               	movf	(setSteering@steeringB+1)& (0+255),w,b
  4661  002400  E109               	bnz	u4800
  4662  002402  0E29               	movlw	41
  4663  002404  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4664  002406  A0D8               	btfss	status,0,c
  4665  002408  EF08  F012         	goto	u4801
  4666  00240C  EF0A  F012         	goto	u4800
  4667  002410                     u4801:
  4668  002410  EF10  F012         	goto	l5952
  4669  002414                     u4800:
  4670  002414                     
  4671                           ; BSR set to: 0
  4672                           ;main.c: 396:         steeringB = ((40));
  4673  002414  0E00               	movlw	0
  4674  002416  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4675  002418  0E28               	movlw	40
  4676  00241A  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4677                           
  4678                           ;main.c: 397:     } else if(steeringB < (-(40))){
  4679  00241C  EF22  F012         	goto	l5956
  4680  002420                     l5952:
  4681                           
  4682                           ; BSR set to: 0
  4683  002420  AF70               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  4684  002422  EF1C  F012         	goto	u4811
  4685  002426  0ED8               	movlw	216
  4686  002428  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4687  00242A  0EFF               	movlw	255
  4688  00242C  5970               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  4689  00242E  B0D8               	btfsc	status,0,c
  4690  002430  EF1C  F012         	goto	u4811
  4691  002434  EF1E  F012         	goto	u4810
  4692  002438                     u4811:
  4693  002438  EF22  F012         	goto	l5956
  4694  00243C                     u4810:
  4695  00243C                     
  4696                           ; BSR set to: 0
  4697                           ;main.c: 398:         steeringB = (-(40));
  4698  00243C  0EFF               	movlw	255
  4699  00243E  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4700  002440  0ED8               	movlw	216
  4701  002442  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4702  002444                     l5956:
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;main.c: 402:     PWM6_LoadDutyValue((uint16_t)((352) + steeringF));
  4706  002444  0E60               	movlw	96
  4707  002446  256D               	addwf	setSteering@steeringF& (0+255),w,b
  4708  002448  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  4709  00244A  0E01               	movlw	1
  4710  00244C  216E               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  4711  00244E  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  4712  002450  EC5B  F01D         	call	_PWM6_LoadDutyValue	;wreg free
  4713  002454                     
  4714                           ;main.c: 403:     PWM5_LoadDutyValue((uint16_t)((357) + steeringB));
  4715  002454  0E65               	movlw	101
  4716  002456  0100               	movlb	0	; () banked
  4717  002458  256F               	addwf	setSteering@steeringB& (0+255),w,b
  4718  00245A  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  4719  00245C  0E01               	movlw	1
  4720  00245E  2170               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  4721  002460  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  4722  002462  EC76  F01D         	call	_PWM5_LoadDutyValue	;wreg free
  4723  002466  0012               	return		;funcret
  4724  002468                     __end_of_setSteering:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _PWM6_LoadDutyValue *****************
  4728 ;; Defined at:
  4729 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;Total ram usage:        4 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 8
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_setSteering
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text23
  4758  003AB6                     __ptext23:
  4759                           	callstack 0
  4760  003AB6                     _PWM6_LoadDutyValue:
  4761                           	callstack 19
  4762  003AB6                     
  4763                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4764  003AB6  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4765  003ABA  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  4766  003ABE  0100               	movlb	0	; () banked
  4767  003AC0  90D8               	bcf	status,0,c
  4768  003AC2  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4769  003AC4  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4770  003AC6  90D8               	bcf	status,0,c
  4771  003AC8  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4772  003ACA  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4773  003ACC  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  4774  003ACE  6E69               	movwf	105,c	;volatile
  4775                           
  4776                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  4777  003AD0  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4778  003AD4  0E03               	movlw	3
  4779  003AD6  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
  4780  003AD8  0E06               	movlw	6
  4781  003ADA  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
  4782  003ADC                     u4605:
  4783  003ADC  90D8               	bcf	status,0,c
  4784  003ADE  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4785  003AE0  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4786  003AE2  EF6E  F01D         	goto	u4605
  4787  003AE6  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  4788  003AE8  6E68               	movwf	104,c	;volatile
  4789  003AEA                     
  4790                           ; BSR set to: 0
  4791  003AEA  0012               	return		;funcret
  4792  003AEC                     __end_of_PWM6_LoadDutyValue:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function _PWM5_LoadDutyValue *****************
  4796 ;; Defined at:
  4797 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;Total ram usage:        4 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 8
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_setSteering
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text24
  4826  003AEC                     __ptext24:
  4827                           	callstack 0
  4828  003AEC                     _PWM5_LoadDutyValue:
  4829                           	callstack 19
  4830  003AEC                     
  4831                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4832  003AEC  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4833  003AF0  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  4834  003AF4  0100               	movlb	0	; () banked
  4835  003AF6  90D8               	bcf	status,0,c
  4836  003AF8  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4837  003AFA  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4838  003AFC  90D8               	bcf	status,0,c
  4839  003AFE  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4840  003B00  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4841  003B02  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  4842  003B04  6E6D               	movwf	109,c	;volatile
  4843                           
  4844                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  4845  003B06  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4846  003B0A  0E03               	movlw	3
  4847  003B0C  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
  4848  003B0E  0E06               	movlw	6
  4849  003B10  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
  4850  003B12                     u4595:
  4851  003B12  90D8               	bcf	status,0,c
  4852  003B14  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4853  003B16  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4854  003B18  EF89  F01D         	goto	u4595
  4855  003B1C  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  4856  003B1E  6E6C               	movwf	108,c	;volatile
  4857  003B20                     
  4858                           ; BSR set to: 0
  4859  003B20  0012               	return		;funcret
  4860  003B22                     __end_of_PWM5_LoadDutyValue:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _calcSpeed *****************
  4864 ;; Defined at:
  4865 ;;		line 254 in file "main.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  speed           2   75[BANK0 ] short 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;Total ram usage:        6 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 9
  4886 ;; This function calls:
  4887 ;;		___fladd
  4888 ;;		___flmul
  4889 ;;		___fltol
  4890 ;;		___xxtofl
  4891 ;; This function is called by:
  4892 ;;		_loop
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text25
  4897  001930                     __ptext25:
  4898                           	callstack 0
  4899  001930                     _calcSpeed:
  4900                           	callstack 20
  4901  001930                     
  4902                           ;main.c: 255:     int16_t speed = 0;
  4903  001930  0E00               	movlw	0
  4904  001932  0100               	movlb	0	; () banked
  4905  001934  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  4906  001936  0E00               	movlw	0
  4907  001938  6FAB               	movwf	calcSpeed@speed& (0+255),b
  4908                           
  4909                           ;main.c: 257:     switch (driveMode){
  4910  00193A  EF68  F00D         	goto	l6372
  4911  00193E                     l6332:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;main.c: 259:             if(distFront > (40)) {
  4915  00193E  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4916  001940  E109               	bnz	u5360
  4917  001942  0E29               	movlw	41
  4918  001944  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  4919  001946  A0D8               	btfss	status,0,c
  4920  001948  EFA8  F00C         	goto	u5361
  4921  00194C  EFAA  F00C         	goto	u5360
  4922  001950                     u5361:
  4923  001950  EFAC  F00C         	goto	l6336
  4924  001954                     u5360:
  4925  001954                     
  4926                           ; BSR set to: 0
  4927                           ;main.c: 260:                 driveMode = Straight;
  4928  001954  0E00               	movlw	0
  4929  001956  6E36               	movwf	_driveMode^0,c
  4930  001958                     l6336:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;main.c: 262:             if(setSpeed > (125)){
  4934  001958  BFDE               	btfsc	(_setSpeed+1)& (0+255),7,b
  4935  00195A  EFB8  F00C         	goto	u5371
  4936  00195E  51DE               	movf	(_setSpeed+1)& (0+255),w,b
  4937  001960  E109               	bnz	u5370
  4938  001962  0E7E               	movlw	126
  4939  001964  5DDD               	subwf	_setSpeed& (0+255),w,b
  4940  001966  A0D8               	btfss	status,0,c
  4941  001968  EFB8  F00C         	goto	u5371
  4942  00196C  EFBA  F00C         	goto	u5370
  4943  001970                     u5371:
  4944  001970  EF8D  F00D         	goto	l6374
  4945  001974                     u5370:
  4946  001974                     
  4947                           ; BSR set to: 0
  4948                           ;main.c: 263:                 if(setSpeed > 0 ){
  4949  001974  BFDE               	btfsc	(_setSpeed+1)& (0+255),7,b
  4950  001976  EFC5  F00C         	goto	u5381
  4951  00197A  51DE               	movf	(_setSpeed+1)& (0+255),w,b
  4952  00197C  E108               	bnz	u5380
  4953  00197E  05DD               	decf	_setSpeed& (0+255),w,b
  4954  001980  A0D8               	btfss	status,0,c
  4955  001982  EFC5  F00C         	goto	u5381
  4956  001986  EFC7  F00C         	goto	u5380
  4957  00198A                     u5381:
  4958  00198A  EFD1  F00C         	goto	l6344
  4959  00198E                     u5380:
  4960  00198E                     
  4961                           ; BSR set to: 0
  4962                           ;main.c: 264:                     speed = setSpeed;
  4963  00198E  C0DD  F0AB         	movff	_setSpeed,calcSpeed@speed
  4964  001992  C0DE  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  4965  001996                     
  4966                           ; BSR set to: 0
  4967                           ;main.c: 265:                     speed -= 2;
  4968  001996  0EFE               	movlw	254
  4969  001998  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  4970  00199A  0EFF               	movlw	255
  4971  00199C  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  4972                           
  4973                           ;main.c: 266:                 }else if( setSpeed > 0 && distFront < (20)){
  4974  00199E  EF8D  F00D         	goto	l6374
  4975  0019A2                     l6344:
  4976                           
  4977                           ; BSR set to: 0
  4978  0019A2  BFDE               	btfsc	(_setSpeed+1)& (0+255),7,b
  4979  0019A4  EFDC  F00C         	goto	u5391
  4980  0019A8  51DE               	movf	(_setSpeed+1)& (0+255),w,b
  4981  0019AA  E108               	bnz	u5390
  4982  0019AC  05DD               	decf	_setSpeed& (0+255),w,b
  4983  0019AE  A0D8               	btfss	status,0,c
  4984  0019B0  EFDC  F00C         	goto	u5391
  4985  0019B4  EFDE  F00C         	goto	u5390
  4986  0019B8                     u5391:
  4987  0019B8  EFF3  F00C         	goto	l1330
  4988  0019BC                     u5390:
  4989  0019BC                     
  4990                           ; BSR set to: 0
  4991  0019BC  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  4992  0019BE  E107               	bnz	u5401
  4993  0019C0  0E14               	movlw	20
  4994  0019C2  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  4995  0019C4  B0D8               	btfsc	status,0,c
  4996  0019C6  EFE7  F00C         	goto	u5401
  4997  0019CA  EFE9  F00C         	goto	u5400
  4998  0019CE                     u5401:
  4999  0019CE  EFF3  F00C         	goto	l1330
  5000  0019D2                     u5400:
  5001  0019D2                     
  5002                           ; BSR set to: 0
  5003                           ;main.c: 267:                     speed = setSpeed;
  5004  0019D2  C0DD  F0AB         	movff	_setSpeed,calcSpeed@speed
  5005  0019D6  C0DE  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5006  0019DA                     
  5007                           ; BSR set to: 0
  5008                           ;main.c: 268:                     speed -= 4;
  5009  0019DA  0EFC               	movlw	252
  5010  0019DC  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5011  0019DE  0EFF               	movlw	255
  5012  0019E0  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5013  0019E2  EF8D  F00D         	goto	l6374
  5014  0019E6                     l1330:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;main.c: 271:             break;
  5018  0019E6  EF8D  F00D         	goto	l6374
  5019  0019EA                     l6352:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;main.c: 273:             if(distFront < (40)) {
  5023  0019EA  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5024  0019EC  E107               	bnz	u5411
  5025  0019EE  0E28               	movlw	40
  5026  0019F0  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  5027  0019F2  B0D8               	btfsc	status,0,c
  5028  0019F4  EFFE  F00C         	goto	u5411
  5029  0019F8  EF00  F00D         	goto	u5410
  5030  0019FC                     u5411:
  5031  0019FC  EF02  F00D         	goto	l6356
  5032  001A00                     u5410:
  5033  001A00                     
  5034                           ; BSR set to: 0
  5035                           ;main.c: 274:                 driveMode = Brake;
  5036  001A00  0E01               	movlw	1
  5037  001A02  6E36               	movwf	_driveMode^0,c
  5038  001A04                     l6356:
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;main.c: 277:             if(distFront > (150)){
  5042  001A04  51E8               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5043  001A06  E109               	bnz	u5420
  5044  001A08  0E97               	movlw	151
  5045  001A0A  5DE7               	subwf	_distFront& (0+255),w,b	;volatile
  5046  001A0C  A0D8               	btfss	status,0,c
  5047  001A0E  EF0B  F00D         	goto	u5421
  5048  001A12  EF0D  F00D         	goto	u5420
  5049  001A16                     u5421:
  5050  001A16  EF56  F00D         	goto	l6360
  5051  001A1A                     u5420:
  5052  001A1A                     
  5053                           ; BSR set to: 0
  5054                           ;main.c: 278:                 speed = (int16_t)((0.75) * (distFront - (150)) + (225));
  5055  001A1A  0E00               	movlw	0
  5056  001A1C  6F93               	movwf	___fladd@a& (0+255),b
  5057  001A1E  0E00               	movlw	0
  5058  001A20  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5059  001A22  0E61               	movlw	97
  5060  001A24  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5061  001A26  0E43               	movlw	67
  5062  001A28  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5063  001A2A  0E00               	movlw	0
  5064  001A2C  6F7A               	movwf	___flmul@a& (0+255),b
  5065  001A2E  0E00               	movlw	0
  5066  001A30  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  5067  001A32  0E40               	movlw	64
  5068  001A34  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  5069  001A36  0E3F               	movlw	63
  5070  001A38  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  5071  001A3A  0E6A               	movlw	106
  5072  001A3C  6FA7               	movwf	??_calcSpeed& (0+255),b
  5073  001A3E  0EFF               	movlw	255
  5074  001A40  6FA8               	movwf	(??_calcSpeed+1)& (0+255),b
  5075  001A42  C0E7  F0A9         	movff	_distFront,??_calcSpeed+2	;volatile
  5076  001A46  C0E8  F0AA         	movff	_distFront+1,??_calcSpeed+3	;volatile
  5077  001A4A  51A7               	movf	??_calcSpeed& (0+255),w,b
  5078  001A4C  27A9               	addwf	(??_calcSpeed+2)& (0+255),f,b
  5079  001A4E  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  5080  001A50  23AA               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  5081  001A52  C0A9  F068         	movff	??_calcSpeed+2,___xxtofl@val
  5082  001A56  C0AA  F069         	movff	??_calcSpeed+3,___xxtofl@val+1
  5083  001A5A  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  5084  001A5C  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  5085  001A5E  0E00               	movlw	0
  5086  001A60  ECAB  F00F         	call	___xxtofl
  5087  001A64  C068  F076         	movff	?___xxtofl,___flmul@b
  5088  001A68  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  5089  001A6C  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  5090  001A70  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  5091  001A74  EC70  F00A         	call	___flmul	;wreg free
  5092  001A78  C076  F08F         	movff	?___flmul,___fladd@b
  5093  001A7C  C077  F090         	movff	?___flmul+1,___fladd@b+1
  5094  001A80  C078  F091         	movff	?___flmul+2,___fladd@b+2
  5095  001A84  C079  F092         	movff	?___flmul+3,___fladd@b+3
  5096  001A88  EC0F  F008         	call	___fladd	;wreg free
  5097  001A8C  C08F  F09F         	movff	?___fladd,___fltol@f1
  5098  001A90  C090  F0A0         	movff	?___fladd+1,___fltol@f1+1
  5099  001A94  C091  F0A1         	movff	?___fladd+2,___fltol@f1+2
  5100  001A98  C092  F0A2         	movff	?___fladd+3,___fltol@f1+3
  5101  001A9C  ECC7  F014         	call	___fltol	;wreg free
  5102  001AA0  C09F  F0AB         	movff	?___fltol,calcSpeed@speed
  5103  001AA4  C0A0  F0AC         	movff	?___fltol+1,calcSpeed@speed+1
  5104                           
  5105                           ;main.c: 279:             }else{
  5106  001AA8  EF8D  F00D         	goto	l6374
  5107  001AAC                     l6360:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;main.c: 280:                 speed = (225);
  5111  001AAC  0E00               	movlw	0
  5112  001AAE  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5113  001AB0  0EE1               	movlw	225
  5114  001AB2  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5115  001AB4  EF8D  F00D         	goto	l6374
  5116  001AB8                     l6362:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;main.c: 286:             speed = (-150);
  5120  001AB8  0EFF               	movlw	255
  5121  001ABA  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5122  001ABC  0E6A               	movlw	106
  5123  001ABE  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5124                           
  5125                           ;main.c: 287:             break;
  5126  001AC0  EF8D  F00D         	goto	l6374
  5127  001AC4                     l6366:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;main.c: 292:             speed = (200);
  5131  001AC4  0E00               	movlw	0
  5132  001AC6  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5133  001AC8  0EC8               	movlw	200
  5134  001ACA  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5135                           
  5136                           ;main.c: 293:             break;
  5137  001ACC  EF8D  F00D         	goto	l6374
  5138  001AD0                     l6372:
  5139                           
  5140                           ; BSR set to: 0
  5141  001AD0  5036               	movf	_driveMode^0,w,c
  5142  001AD2  6FA7               	movwf	??_calcSpeed& (0+255),b
  5143  001AD4  6BA8               	clrf	(??_calcSpeed+1)& (0+255),b
  5144                           
  5145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5146                           ; Switch size 1, requested type "simple"
  5147                           ; Number of cases is 1, Range of values is 0 to 0
  5148                           ; switch strategies available:
  5149                           ; Name         Instructions Cycles
  5150                           ; simple_byte            4     3 (average)
  5151                           ;	Chosen strategy is simple_byte
  5152  001AD6  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  5153  001AD8  0A00               	xorlw	0	; case 0
  5154  001ADA  B4D8               	btfsc	status,2,c
  5155  001ADC  EF72  F00D         	goto	l6632
  5156  001AE0  EF8D  F00D         	goto	l6374
  5157  001AE4                     l6632:
  5158                           
  5159                           ; BSR set to: 0
  5160                           ; Switch size 1, requested type "simple"
  5161                           ; Number of cases is 6, Range of values is 0 to 5
  5162                           ; switch strategies available:
  5163                           ; Name         Instructions Cycles
  5164                           ; simple_byte           19    10 (average)
  5165                           ;	Chosen strategy is simple_byte
  5166  001AE4  51A7               	movf	??_calcSpeed& (0+255),w,b
  5167  001AE6  0A00               	xorlw	0	; case 0
  5168  001AE8  B4D8               	btfsc	status,2,c
  5169  001AEA  EFF5  F00C         	goto	l6352
  5170  001AEE  0A01               	xorlw	1	; case 1
  5171  001AF0  B4D8               	btfsc	status,2,c
  5172  001AF2  EF9F  F00C         	goto	l6332
  5173  001AF6  0A03               	xorlw	3	; case 2
  5174  001AF8  B4D8               	btfsc	status,2,c
  5175  001AFA  EF5C  F00D         	goto	l6362
  5176  001AFE  0A01               	xorlw	1	; case 3
  5177  001B00  B4D8               	btfsc	status,2,c
  5178  001B02  EF5C  F00D         	goto	l6362
  5179  001B06  0A07               	xorlw	7	; case 4
  5180  001B08  B4D8               	btfsc	status,2,c
  5181  001B0A  EF62  F00D         	goto	l6366
  5182  001B0E  0A01               	xorlw	1	; case 5
  5183  001B10  B4D8               	btfsc	status,2,c
  5184  001B12  EF62  F00D         	goto	l6366
  5185  001B16  EF8D  F00D         	goto	l6374
  5186  001B1A                     l6374:
  5187                           
  5188                           ;main.c: 299:     if(speed > (400)){
  5189  001B1A  0100               	movlb	0	; () banked
  5190  001B1C  BFAC               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  5191  001B1E  EF9A  F00D         	goto	u5431
  5192  001B22  0E91               	movlw	145
  5193  001B24  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  5194  001B26  0E01               	movlw	1
  5195  001B28  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5196  001B2A  A0D8               	btfss	status,0,c
  5197  001B2C  EF9A  F00D         	goto	u5431
  5198  001B30  EF9C  F00D         	goto	u5430
  5199  001B34                     u5431:
  5200  001B34  EFA0  F00D         	goto	l6378
  5201  001B38                     u5430:
  5202  001B38                     
  5203                           ; BSR set to: 0
  5204                           ;main.c: 300:         speed = (400);
  5205  001B38  0E01               	movlw	1
  5206  001B3A  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5207  001B3C  0E90               	movlw	144
  5208  001B3E  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5209  001B40                     l6378:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;main.c: 302:     if(speed < (-250)){
  5213  001B40  AFAC               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  5214  001B42  EFAC  F00D         	goto	u5441
  5215  001B46  0E06               	movlw	6
  5216  001B48  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  5217  001B4A  0EFF               	movlw	255
  5218  001B4C  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5219  001B4E  B0D8               	btfsc	status,0,c
  5220  001B50  EFAC  F00D         	goto	u5441
  5221  001B54  EFAE  F00D         	goto	u5440
  5222  001B58                     u5441:
  5223  001B58  EFB2  F00D         	goto	l6382
  5224  001B5C                     u5440:
  5225  001B5C                     
  5226                           ; BSR set to: 0
  5227                           ;main.c: 303:         speed = (-250);
  5228  001B5C  0EFF               	movlw	255
  5229  001B5E  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5230  001B60  0E06               	movlw	6
  5231  001B62  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5232  001B64                     l6382:
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;main.c: 305:     setSpeed = speed;
  5236  001B64  C0AB  F0DD         	movff	calcSpeed@speed,_setSpeed
  5237  001B68  C0AC  F0DE         	movff	calcSpeed@speed+1,_setSpeed+1
  5238  001B6C                     
  5239                           ; BSR set to: 0
  5240  001B6C  0012               	return		;funcret
  5241  001B6E                     __end_of_calcSpeed:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function ___fladd *****************
  5245 ;; Defined at:
  5246 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  b               4   47[BANK0 ] void 
  5249 ;;  a               4   51[BANK0 ] void 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  grs             1   62[BANK0 ] unsigned char 
  5252 ;;  bexp            1   61[BANK0 ] unsigned char 
  5253 ;;  aexp            1   60[BANK0 ] unsigned char 
  5254 ;;  signs           1   59[BANK0 ] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  4   47[BANK0 ] unsigned char 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5264 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;Total ram usage:       16 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 8
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_calcSpeed
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text26
  5279  00101E                     __ptext26:
  5280                           	callstack 0
  5281  00101E                     ___fladd:
  5282                           	callstack 20
  5283  00101E  0100               	movlb	0	; () banked
  5284  001020  5192               	movf	(___fladd@b+3)& (0+255),w,b
  5285  001022  0B80               	andlw	128
  5286  001024  6F9B               	movwf	___fladd@signs& (0+255),b
  5287  001026  5192               	movf	(___fladd@b+3)& (0+255),w,b
  5288  001028  2592               	addwf	(___fladd@b+3)& (0+255),w,b
  5289  00102A  6F9D               	movwf	___fladd@bexp& (0+255),b
  5290  00102C                     
  5291                           ; BSR set to: 0
  5292  00102C  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  5293  00102E  EF1B  F008         	goto	u2751
  5294  001032  EF1D  F008         	goto	u2750
  5295  001036                     u2751:
  5296  001036  EF1E  F008         	goto	l4470
  5297  00103A                     u2750:
  5298  00103A                     
  5299                           ; BSR set to: 0
  5300  00103A  819D               	bsf	___fladd@bexp& (0+255),0,b
  5301  00103C                     l4470:
  5302                           
  5303                           ; BSR set to: 0
  5304  00103C  519D               	movf	___fladd@bexp& (0+255),w,b
  5305  00103E  B4D8               	btfsc	status,2,c
  5306  001040  EF24  F008         	goto	u2761
  5307  001044  EF26  F008         	goto	u2760
  5308  001048                     u2761:
  5309  001048  EF3B  F008         	goto	l4480
  5310  00104C                     u2760:
  5311  00104C                     
  5312                           ; BSR set to: 0
  5313  00104C  299D               	incf	___fladd@bexp& (0+255),w,b
  5314  00104E  A4D8               	btfss	status,2,c
  5315  001050  EF2C  F008         	goto	u2771
  5316  001054  EF2E  F008         	goto	u2770
  5317  001058                     u2771:
  5318  001058  EF36  F008         	goto	l4476
  5319  00105C                     u2770:
  5320  00105C                     
  5321                           ; BSR set to: 0
  5322  00105C  0E00               	movlw	0
  5323  00105E  6F8F               	movwf	___fladd@b& (0+255),b
  5324  001060  0E00               	movlw	0
  5325  001062  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5326  001064  0E00               	movlw	0
  5327  001066  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5328  001068  0E00               	movlw	0
  5329  00106A  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5330  00106C                     l4476:
  5331                           
  5332                           ; BSR set to: 0
  5333  00106C  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  5334  00106E                     
  5335                           ; BSR set to: 0
  5336  00106E  0E00               	movlw	0
  5337  001070  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5338  001072  EF43  F008         	goto	l4482
  5339  001076                     l4480:
  5340                           
  5341                           ; BSR set to: 0
  5342  001076  0E00               	movlw	0
  5343  001078  6F8F               	movwf	___fladd@b& (0+255),b
  5344  00107A  0E00               	movlw	0
  5345  00107C  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5346  00107E  0E00               	movlw	0
  5347  001080  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5348  001082  0E00               	movlw	0
  5349  001084  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5350  001086                     l4482:
  5351                           
  5352                           ; BSR set to: 0
  5353  001086  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5354  001088  0B80               	andlw	128
  5355  00108A  6F9C               	movwf	___fladd@aexp& (0+255),b
  5356  00108C                     
  5357                           ; BSR set to: 0
  5358  00108C  519B               	movf	___fladd@signs& (0+255),w,b
  5359  00108E  199C               	xorwf	___fladd@aexp& (0+255),w,b
  5360  001090  B4D8               	btfsc	status,2,c
  5361  001092  EF4D  F008         	goto	u2781
  5362  001096  EF4F  F008         	goto	u2780
  5363  00109A                     u2781:
  5364  00109A  EF50  F008         	goto	l4488
  5365  00109E                     u2780:
  5366  00109E                     
  5367                           ; BSR set to: 0
  5368  00109E  8D9B               	bsf	___fladd@signs& (0+255),6,b
  5369  0010A0                     l4488:
  5370                           
  5371                           ; BSR set to: 0
  5372  0010A0  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5373  0010A2  2596               	addwf	(___fladd@a+3)& (0+255),w,b
  5374  0010A4  6F9C               	movwf	___fladd@aexp& (0+255),b
  5375  0010A6                     
  5376                           ; BSR set to: 0
  5377  0010A6  AF95               	btfss	(___fladd@a+2)& (0+255),7,b
  5378  0010A8  EF58  F008         	goto	u2791
  5379  0010AC  EF5A  F008         	goto	u2790
  5380  0010B0                     u2791:
  5381  0010B0  EF5B  F008         	goto	l4494
  5382  0010B4                     u2790:
  5383  0010B4                     
  5384                           ; BSR set to: 0
  5385  0010B4  819C               	bsf	___fladd@aexp& (0+255),0,b
  5386  0010B6                     l4494:
  5387                           
  5388                           ; BSR set to: 0
  5389  0010B6  519C               	movf	___fladd@aexp& (0+255),w,b
  5390  0010B8  B4D8               	btfsc	status,2,c
  5391  0010BA  EF61  F008         	goto	u2801
  5392  0010BE  EF63  F008         	goto	u2800
  5393  0010C2                     u2801:
  5394  0010C2  EF78  F008         	goto	l4504
  5395  0010C6                     u2800:
  5396  0010C6                     
  5397                           ; BSR set to: 0
  5398  0010C6  299C               	incf	___fladd@aexp& (0+255),w,b
  5399  0010C8  A4D8               	btfss	status,2,c
  5400  0010CA  EF69  F008         	goto	u2811
  5401  0010CE  EF6B  F008         	goto	u2810
  5402  0010D2                     u2811:
  5403  0010D2  EF73  F008         	goto	l4500
  5404  0010D6                     u2810:
  5405  0010D6                     
  5406                           ; BSR set to: 0
  5407  0010D6  0E00               	movlw	0
  5408  0010D8  6F93               	movwf	___fladd@a& (0+255),b
  5409  0010DA  0E00               	movlw	0
  5410  0010DC  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5411  0010DE  0E00               	movlw	0
  5412  0010E0  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5413  0010E2  0E00               	movlw	0
  5414  0010E4  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5415  0010E6                     l4500:
  5416                           
  5417                           ; BSR set to: 0
  5418  0010E6  8F95               	bsf	(___fladd@a+2)& (0+255),7,b
  5419  0010E8                     
  5420                           ; BSR set to: 0
  5421  0010E8  0E00               	movlw	0
  5422  0010EA  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5423  0010EC  EF80  F008         	goto	l4506
  5424  0010F0                     l4504:
  5425                           
  5426                           ; BSR set to: 0
  5427  0010F0  0E00               	movlw	0
  5428  0010F2  6F93               	movwf	___fladd@a& (0+255),b
  5429  0010F4  0E00               	movlw	0
  5430  0010F6  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5431  0010F8  0E00               	movlw	0
  5432  0010FA  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5433  0010FC  0E00               	movlw	0
  5434  0010FE  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5435  001100                     l4506:
  5436                           
  5437                           ; BSR set to: 0
  5438  001100  519D               	movf	___fladd@bexp& (0+255),w,b
  5439  001102  5D9C               	subwf	___fladd@aexp& (0+255),w,b
  5440  001104  B0D8               	btfsc	status,0,c
  5441  001106  EF87  F008         	goto	u2821
  5442  00110A  EF89  F008         	goto	u2820
  5443  00110E                     u2821:
  5444  00110E  EFB0  F008         	goto	l4542
  5445  001112                     u2820:
  5446  001112                     
  5447                           ; BSR set to: 0
  5448  001112  AD9B               	btfss	___fladd@signs& (0+255),6,b
  5449  001114  EF8E  F008         	goto	u2831
  5450  001118  EF90  F008         	goto	u2830
  5451  00111C                     u2831:
  5452  00111C  EF92  F008         	goto	l4512
  5453  001120                     u2830:
  5454  001120                     
  5455                           ; BSR set to: 0
  5456  001120  0E80               	movlw	128
  5457  001122  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  5458  001124                     l4512:
  5459                           
  5460                           ; BSR set to: 0
  5461  001124  C09D  F09E         	movff	___fladd@bexp,___fladd@grs
  5462  001128                     
  5463                           ; BSR set to: 0
  5464  001128  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  5465  00112C                     
  5466                           ; BSR set to: 0
  5467  00112C  C09E  F09C         	movff	___fladd@grs,___fladd@aexp
  5468  001130                     
  5469                           ; BSR set to: 0
  5470  001130  C08F  F09E         	movff	___fladd@b,___fladd@grs
  5471  001134                     
  5472                           ; BSR set to: 0
  5473  001134  C093  F08F         	movff	___fladd@a,___fladd@b
  5474  001138                     
  5475                           ; BSR set to: 0
  5476  001138  C09E  F093         	movff	___fladd@grs,___fladd@a
  5477  00113C                     
  5478                           ; BSR set to: 0
  5479  00113C  C090  F09E         	movff	___fladd@b+1,___fladd@grs
  5480  001140                     
  5481                           ; BSR set to: 0
  5482  001140  C094  F090         	movff	___fladd@a+1,___fladd@b+1
  5483  001144                     
  5484                           ; BSR set to: 0
  5485  001144  C09E  F094         	movff	___fladd@grs,___fladd@a+1
  5486  001148                     
  5487                           ; BSR set to: 0
  5488  001148  C091  F09E         	movff	___fladd@b+2,___fladd@grs
  5489  00114C                     
  5490                           ; BSR set to: 0
  5491  00114C  C095  F091         	movff	___fladd@a+2,___fladd@b+2
  5492  001150                     
  5493                           ; BSR set to: 0
  5494  001150  C09E  F095         	movff	___fladd@grs,___fladd@a+2
  5495  001154                     
  5496                           ; BSR set to: 0
  5497  001154  C092  F09E         	movff	___fladd@b+3,___fladd@grs
  5498  001158                     
  5499                           ; BSR set to: 0
  5500  001158  C096  F092         	movff	___fladd@a+3,___fladd@b+3
  5501  00115C                     
  5502                           ; BSR set to: 0
  5503  00115C  C09E  F096         	movff	___fladd@grs,___fladd@a+3
  5504  001160                     l4542:
  5505                           
  5506                           ; BSR set to: 0
  5507  001160  0E00               	movlw	0
  5508  001162  6F9E               	movwf	___fladd@grs& (0+255),b
  5509  001164                     
  5510                           ; BSR set to: 0
  5511  001164  519D               	movf	___fladd@bexp& (0+255),w,b
  5512  001166  C09C  F097         	movff	___fladd@aexp,??___fladd
  5513  00116A  6B98               	clrf	(??___fladd+1)& (0+255),b
  5514  00116C  5F97               	subwf	??___fladd& (0+255),f,b
  5515  00116E  0E00               	movlw	0
  5516  001170  5B98               	subwfb	(??___fladd+1)& (0+255),f,b
  5517  001172  BF98               	btfsc	(??___fladd+1)& (0+255),7,b
  5518  001174  EFC5  F008         	goto	u2841
  5519  001178  5198               	movf	(??___fladd+1)& (0+255),w,b
  5520  00117A  E109               	bnz	u2840
  5521  00117C  0E1A               	movlw	26
  5522  00117E  5D97               	subwf	??___fladd& (0+255),w,b
  5523  001180  A0D8               	btfss	status,0,c
  5524  001182  EFC5  F008         	goto	u2841
  5525  001186  EFC7  F008         	goto	u2840
  5526  00118A                     u2841:
  5527  00118A  EFFE  F008         	goto	l1912
  5528  00118E                     u2840:
  5529  00118E                     
  5530                           ; BSR set to: 0
  5531  00118E  518F               	movf	___fladd@b& (0+255),w,b
  5532  001190  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  5533  001192  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  5534  001194  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  5535  001196  A4D8               	btfss	status,2,c
  5536  001198  EFD0  F008         	goto	u2851
  5537  00119C  EFD3  F008         	goto	u2850
  5538  0011A0                     u2851:
  5539  0011A0  0E01               	movlw	1
  5540  0011A2  EFD4  F008         	goto	u2860
  5541  0011A6                     u2850:
  5542  0011A6  0E00               	movlw	0
  5543  0011A8                     u2860:
  5544  0011A8  6F9E               	movwf	___fladd@grs& (0+255),b
  5545  0011AA                     
  5546                           ; BSR set to: 0
  5547  0011AA  0E00               	movlw	0
  5548  0011AC  6F8F               	movwf	___fladd@b& (0+255),b
  5549  0011AE  0E00               	movlw	0
  5550  0011B0  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5551  0011B2  0E00               	movlw	0
  5552  0011B4  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5553  0011B6  0E00               	movlw	0
  5554  0011B8  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5555  0011BA                     
  5556                           ; BSR set to: 0
  5557  0011BA  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  5558  0011BE  EF07  F009         	goto	l1911
  5559  0011C2                     l1913:
  5560                           
  5561                           ; BSR set to: 0
  5562  0011C2  A19E               	btfss	___fladd@grs& (0+255),0,b
  5563  0011C4  EFE6  F008         	goto	u2871
  5564  0011C8  EFE8  F008         	goto	u2870
  5565  0011CC                     u2871:
  5566  0011CC  EFEE  F008         	goto	l4554
  5567  0011D0                     u2870:
  5568  0011D0                     
  5569                           ; BSR set to: 0
  5570  0011D0  90D8               	bcf	status,0,c
  5571  0011D2  319E               	rrcf	___fladd@grs& (0+255),w,b
  5572  0011D4  0901               	iorlw	1
  5573  0011D6  6F9E               	movwf	___fladd@grs& (0+255),b
  5574  0011D8  EFF0  F008         	goto	l4556
  5575  0011DC                     l4554:
  5576                           
  5577                           ; BSR set to: 0
  5578  0011DC  90D8               	bcf	status,0,c
  5579  0011DE  339E               	rrcf	___fladd@grs& (0+255),f,b
  5580  0011E0                     l4556:
  5581                           
  5582                           ; BSR set to: 0
  5583  0011E0  A18F               	btfss	___fladd@b& (0+255),0,b
  5584  0011E2  EFF5  F008         	goto	u2881
  5585  0011E6  EFF7  F008         	goto	u2880
  5586  0011EA                     u2881:
  5587  0011EA  EFF8  F008         	goto	l4560
  5588  0011EE                     u2880:
  5589  0011EE                     
  5590                           ; BSR set to: 0
  5591  0011EE  8F9E               	bsf	___fladd@grs& (0+255),7,b
  5592  0011F0                     l4560:
  5593                           
  5594                           ; BSR set to: 0
  5595  0011F0  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  5596  0011F2  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  5597  0011F4  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  5598  0011F6  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  5599  0011F8  338F               	rrcf	___fladd@b& (0+255),f,b
  5600  0011FA                     
  5601                           ; BSR set to: 0
  5602  0011FA  2B9D               	incf	___fladd@bexp& (0+255),f,b
  5603  0011FC                     l1912:
  5604                           
  5605                           ; BSR set to: 0
  5606  0011FC  519C               	movf	___fladd@aexp& (0+255),w,b
  5607  0011FE  5D9D               	subwf	___fladd@bexp& (0+255),w,b
  5608  001200  A0D8               	btfss	status,0,c
  5609  001202  EF05  F009         	goto	u2891
  5610  001206  EF07  F009         	goto	u2890
  5611  00120A                     u2891:
  5612  00120A  EFE1  F008         	goto	l1913
  5613  00120E                     u2890:
  5614  00120E                     l1911:
  5615                           
  5616                           ; BSR set to: 0
  5617  00120E  BD9B               	btfsc	___fladd@signs& (0+255),6,b
  5618  001210  EF0C  F009         	goto	u2901
  5619  001214  EF0E  F009         	goto	u2900
  5620  001218                     u2901:
  5621  001218  EF4E  F009         	goto	l4588
  5622  00121C                     u2900:
  5623  00121C                     
  5624                           ; BSR set to: 0
  5625  00121C  519D               	movf	___fladd@bexp& (0+255),w,b
  5626  00121E  A4D8               	btfss	status,2,c
  5627  001220  EF14  F009         	goto	u2911
  5628  001224  EF16  F009         	goto	u2910
  5629  001228                     u2911:
  5630  001228  EF20  F009         	goto	l4570
  5631  00122C                     u2910:
  5632  00122C                     
  5633                           ; BSR set to: 0
  5634  00122C  0E00               	movlw	0
  5635  00122E  6F8F               	movwf	?___fladd& (0+255),b
  5636  001230  0E00               	movlw	0
  5637  001232  6F90               	movwf	(?___fladd+1)& (0+255),b
  5638  001234  0E00               	movlw	0
  5639  001236  6F91               	movwf	(?___fladd+2)& (0+255),b
  5640  001238  0E00               	movlw	0
  5641  00123A  6F92               	movwf	(?___fladd+3)& (0+255),b
  5642  00123C  EF6F  F00A         	goto	l1920
  5643  001240                     l4570:
  5644                           
  5645                           ; BSR set to: 0
  5646  001240  5193               	movf	___fladd@a& (0+255),w,b
  5647  001242  278F               	addwf	___fladd@b& (0+255),f,b
  5648  001244  5194               	movf	(___fladd@a+1)& (0+255),w,b
  5649  001246  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  5650  001248  5195               	movf	(___fladd@a+2)& (0+255),w,b
  5651  00124A  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  5652  00124C  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5653  00124E  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  5654  001250                     
  5655                           ; BSR set to: 0
  5656  001250  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  5657  001252  EF2D  F009         	goto	u2921
  5658  001256  EF2F  F009         	goto	u2920
  5659  00125A                     u2921:
  5660  00125A  EFDB  F009         	goto	l4624
  5661  00125E                     u2920:
  5662  00125E                     
  5663                           ; BSR set to: 0
  5664  00125E  A19E               	btfss	___fladd@grs& (0+255),0,b
  5665  001260  EF34  F009         	goto	u2931
  5666  001264  EF36  F009         	goto	u2930
  5667  001268                     u2931:
  5668  001268  EF3C  F009         	goto	l4578
  5669  00126C                     u2930:
  5670  00126C                     
  5671                           ; BSR set to: 0
  5672  00126C  90D8               	bcf	status,0,c
  5673  00126E  319E               	rrcf	___fladd@grs& (0+255),w,b
  5674  001270  0901               	iorlw	1
  5675  001272  6F9E               	movwf	___fladd@grs& (0+255),b
  5676  001274  EF3E  F009         	goto	l4580
  5677  001278                     l4578:
  5678                           
  5679                           ; BSR set to: 0
  5680  001278  90D8               	bcf	status,0,c
  5681  00127A  339E               	rrcf	___fladd@grs& (0+255),f,b
  5682  00127C                     l4580:
  5683                           
  5684                           ; BSR set to: 0
  5685  00127C  A18F               	btfss	___fladd@b& (0+255),0,b
  5686  00127E  EF43  F009         	goto	u2941
  5687  001282  EF45  F009         	goto	u2940
  5688  001286                     u2941:
  5689  001286  EF46  F009         	goto	l4584
  5690  00128A                     u2940:
  5691  00128A                     
  5692                           ; BSR set to: 0
  5693  00128A  8F9E               	bsf	___fladd@grs& (0+255),7,b
  5694  00128C                     l4584:
  5695                           
  5696                           ; BSR set to: 0
  5697  00128C  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  5698  00128E  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  5699  001290  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  5700  001292  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  5701  001294  338F               	rrcf	___fladd@b& (0+255),f,b
  5702  001296                     
  5703                           ; BSR set to: 0
  5704  001296  2B9D               	incf	___fladd@bexp& (0+255),f,b
  5705  001298  EFDB  F009         	goto	l4624
  5706  00129C                     l4588:
  5707                           
  5708                           ; BSR set to: 0
  5709  00129C  5193               	movf	___fladd@a& (0+255),w,b
  5710  00129E  5D8F               	subwf	___fladd@b& (0+255),w,b
  5711  0012A0  5194               	movf	(___fladd@a+1)& (0+255),w,b
  5712  0012A2  5990               	subwfb	(___fladd@b+1)& (0+255),w,b
  5713  0012A4  5195               	movf	(___fladd@a+2)& (0+255),w,b
  5714  0012A6  5991               	subwfb	(___fladd@b+2)& (0+255),w,b
  5715  0012A8  5192               	movf	(___fladd@b+3)& (0+255),w,b
  5716  0012AA  0A80               	xorlw	128
  5717  0012AC  6F97               	movwf	??___fladd& (0+255),b
  5718  0012AE  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5719  0012B0  0A80               	xorlw	128
  5720  0012B2  5997               	subwfb	??___fladd& (0+255),w,b
  5721  0012B4  B0D8               	btfsc	status,0,c
  5722  0012B6  EF5F  F009         	goto	u2951
  5723  0012BA  EF61  F009         	goto	u2950
  5724  0012BE                     u2951:
  5725  0012BE  EF8C  F009         	goto	l4598
  5726  0012C2                     u2950:
  5727  0012C2                     
  5728                           ; BSR set to: 0
  5729  0012C2  518F               	movf	___fladd@b& (0+255),w,b
  5730  0012C4  5D93               	subwf	___fladd@a& (0+255),w,b
  5731  0012C6  6F97               	movwf	??___fladd& (0+255),b
  5732  0012C8  5190               	movf	(___fladd@b+1)& (0+255),w,b
  5733  0012CA  5994               	subwfb	(___fladd@a+1)& (0+255),w,b
  5734  0012CC  6F98               	movwf	(??___fladd+1)& (0+255),b
  5735  0012CE  5191               	movf	(___fladd@b+2)& (0+255),w,b
  5736  0012D0  5995               	subwfb	(___fladd@a+2)& (0+255),w,b
  5737  0012D2  6F99               	movwf	(??___fladd+2)& (0+255),b
  5738  0012D4  5192               	movf	(___fladd@b+3)& (0+255),w,b
  5739  0012D6  5996               	subwfb	(___fladd@a+3)& (0+255),w,b
  5740  0012D8  6F9A               	movwf	(??___fladd+3)& (0+255),b
  5741  0012DA  0EFF               	movlw	255
  5742  0012DC  2597               	addwf	??___fladd& (0+255),w,b
  5743  0012DE  6F8F               	movwf	___fladd@b& (0+255),b
  5744  0012E0  0EFF               	movlw	255
  5745  0012E2  2198               	addwfc	(??___fladd+1)& (0+255),w,b
  5746  0012E4  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5747  0012E6  0EFF               	movlw	255
  5748  0012E8  2199               	addwfc	(??___fladd+2)& (0+255),w,b
  5749  0012EA  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5750  0012EC  0EFF               	movlw	255
  5751  0012EE  219A               	addwfc	(??___fladd+3)& (0+255),w,b
  5752  0012F0  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5753  0012F2  0E80               	movlw	128
  5754  0012F4  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  5755  0012F6                     
  5756                           ; BSR set to: 0
  5757  0012F6  6D9E               	negf	___fladd@grs& (0+255),b
  5758  0012F8                     
  5759                           ; BSR set to: 0
  5760  0012F8  519E               	movf	___fladd@grs& (0+255),w,b
  5761  0012FA  A4D8               	btfss	status,2,c
  5762  0012FC  EF82  F009         	goto	u2961
  5763  001300  EF84  F009         	goto	u2960
  5764  001304                     u2961:
  5765  001304  EF94  F009         	goto	l1928
  5766  001308                     u2960:
  5767  001308                     
  5768                           ; BSR set to: 0
  5769  001308  0E01               	movlw	1
  5770  00130A  278F               	addwf	___fladd@b& (0+255),f,b
  5771  00130C  0E00               	movlw	0
  5772  00130E  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  5773  001310  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  5774  001312  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  5775  001314  EF94  F009         	goto	l1928
  5776  001318                     l4598:
  5777                           
  5778                           ; BSR set to: 0
  5779  001318  5193               	movf	___fladd@a& (0+255),w,b
  5780  00131A  5F8F               	subwf	___fladd@b& (0+255),f,b
  5781  00131C  5194               	movf	(___fladd@a+1)& (0+255),w,b
  5782  00131E  5B90               	subwfb	(___fladd@b+1)& (0+255),f,b
  5783  001320  5195               	movf	(___fladd@a+2)& (0+255),w,b
  5784  001322  5B91               	subwfb	(___fladd@b+2)& (0+255),f,b
  5785  001324  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5786  001326  5B92               	subwfb	(___fladd@b+3)& (0+255),f,b
  5787  001328                     l1928:
  5788                           
  5789                           ; BSR set to: 0
  5790  001328  518F               	movf	___fladd@b& (0+255),w,b
  5791  00132A  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  5792  00132C  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  5793  00132E  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  5794  001330  A4D8               	btfss	status,2,c
  5795  001332  EF9D  F009         	goto	u2971
  5796  001336  EF9F  F009         	goto	u2970
  5797  00133A                     u2971:
  5798  00133A  EFD4  F009         	goto	l4622
  5799  00133E                     u2970:
  5800  00133E                     
  5801                           ; BSR set to: 0
  5802  00133E  519E               	movf	___fladd@grs& (0+255),w,b
  5803  001340  A4D8               	btfss	status,2,c
  5804  001342  EFA5  F009         	goto	u2981
  5805  001346  EFA7  F009         	goto	u2980
  5806  00134A                     u2981:
  5807  00134A  EFD4  F009         	goto	l4622
  5808  00134E                     u2980:
  5809  00134E                     
  5810                           ; BSR set to: 0
  5811  00134E  0E00               	movlw	0
  5812  001350  6F8F               	movwf	?___fladd& (0+255),b
  5813  001352  0E00               	movlw	0
  5814  001354  6F90               	movwf	(?___fladd+1)& (0+255),b
  5815  001356  0E00               	movlw	0
  5816  001358  6F91               	movwf	(?___fladd+2)& (0+255),b
  5817  00135A  0E00               	movlw	0
  5818  00135C  6F92               	movwf	(?___fladd+3)& (0+255),b
  5819  00135E  EF6F  F00A         	goto	l1920
  5820  001362                     l4606:
  5821                           
  5822                           ; BSR set to: 0
  5823  001362  90D8               	bcf	status,0,c
  5824  001364  378F               	rlcf	___fladd@b& (0+255),f,b
  5825  001366  3790               	rlcf	(___fladd@b+1)& (0+255),f,b
  5826  001368  3791               	rlcf	(___fladd@b+2)& (0+255),f,b
  5827  00136A  3792               	rlcf	(___fladd@b+3)& (0+255),f,b
  5828  00136C                     
  5829                           ; BSR set to: 0
  5830  00136C  AF9E               	btfss	___fladd@grs& (0+255),7,b
  5831  00136E  EFBB  F009         	goto	u2991
  5832  001372  EFBD  F009         	goto	u2990
  5833  001376                     u2991:
  5834  001376  EFBE  F009         	goto	l4612
  5835  00137A                     u2990:
  5836  00137A                     
  5837                           ; BSR set to: 0
  5838  00137A  818F               	bsf	___fladd@b& (0+255),0,b
  5839  00137C                     l4612:
  5840                           
  5841                           ; BSR set to: 0
  5842  00137C  A19E               	btfss	___fladd@grs& (0+255),0,b
  5843  00137E  EFC3  F009         	goto	u3001
  5844  001382  EFC5  F009         	goto	u3000
  5845  001386                     u3001:
  5846  001386  EFC9  F009         	goto	l4616
  5847  00138A                     u3000:
  5848  00138A                     
  5849                           ; BSR set to: 0
  5850  00138A  80D8               	bsf	status,0,c
  5851  00138C  379E               	rlcf	___fladd@grs& (0+255),f,b
  5852  00138E  EFCB  F009         	goto	l4618
  5853  001392                     l4616:
  5854                           
  5855                           ; BSR set to: 0
  5856  001392  90D8               	bcf	status,0,c
  5857  001394  379E               	rlcf	___fladd@grs& (0+255),f,b
  5858  001396                     l4618:
  5859                           
  5860                           ; BSR set to: 0
  5861  001396  519D               	movf	___fladd@bexp& (0+255),w,b
  5862  001398  B4D8               	btfsc	status,2,c
  5863  00139A  EFD1  F009         	goto	u3011
  5864  00139E  EFD3  F009         	goto	u3010
  5865  0013A2                     u3011:
  5866  0013A2  EFD4  F009         	goto	l4622
  5867  0013A6                     u3010:
  5868  0013A6                     
  5869                           ; BSR set to: 0
  5870  0013A6  079D               	decf	___fladd@bexp& (0+255),f,b
  5871  0013A8                     l4622:
  5872                           
  5873                           ; BSR set to: 0
  5874  0013A8  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  5875  0013AA  EFD9  F009         	goto	u3021
  5876  0013AE  EFDB  F009         	goto	u3020
  5877  0013B2                     u3021:
  5878  0013B2  EFB1  F009         	goto	l4606
  5879  0013B6                     u3020:
  5880  0013B6                     l4624:
  5881                           
  5882                           ; BSR set to: 0
  5883  0013B6  0E00               	movlw	0
  5884  0013B8  6F9C               	movwf	___fladd@aexp& (0+255),b
  5885  0013BA                     
  5886                           ; BSR set to: 0
  5887  0013BA  AF9E               	btfss	___fladd@grs& (0+255),7,b
  5888  0013BC  EFE2  F009         	goto	u3031
  5889  0013C0  EFE4  F009         	goto	u3030
  5890  0013C4                     u3031:
  5891  0013C4  EFFC  F009         	goto	l1937
  5892  0013C8                     u3030:
  5893  0013C8                     
  5894                           ; BSR set to: 0
  5895  0013C8  C09E  F097         	movff	___fladd@grs,??___fladd
  5896  0013CC  0E7F               	movlw	127
  5897  0013CE  1797               	andwf	??___fladd& (0+255),f,b
  5898  0013D0  B4D8               	btfsc	status,2,c
  5899  0013D2  EFED  F009         	goto	u3041
  5900  0013D6  EFEF  F009         	goto	u3040
  5901  0013DA                     u3041:
  5902  0013DA  EFF3  F009         	goto	l1938
  5903  0013DE                     u3040:
  5904  0013DE                     l4630:
  5905                           
  5906                           ; BSR set to: 0
  5907  0013DE  0E01               	movlw	1
  5908  0013E0  6F9C               	movwf	___fladd@aexp& (0+255),b
  5909  0013E2  EFFC  F009         	goto	l1937
  5910  0013E6                     l1938:
  5911                           
  5912                           ; BSR set to: 0
  5913  0013E6  A18F               	btfss	___fladd@b& (0+255),0,b
  5914  0013E8  EFF8  F009         	goto	u3051
  5915  0013EC  EFFA  F009         	goto	u3050
  5916  0013F0                     u3051:
  5917  0013F0  EFFC  F009         	goto	l1937
  5918  0013F4                     u3050:
  5919  0013F4  EFEF  F009         	goto	l4630
  5920  0013F8                     l1937:
  5921                           
  5922                           ; BSR set to: 0
  5923  0013F8  519C               	movf	___fladd@aexp& (0+255),w,b
  5924  0013FA  B4D8               	btfsc	status,2,c
  5925  0013FC  EF02  F00A         	goto	u3061
  5926  001400  EF04  F00A         	goto	u3060
  5927  001404                     u3061:
  5928  001404  EF2F  F00A         	goto	l4642
  5929  001408                     u3060:
  5930  001408                     
  5931                           ; BSR set to: 0
  5932  001408  0E01               	movlw	1
  5933  00140A  278F               	addwf	___fladd@b& (0+255),f,b
  5934  00140C  0E00               	movlw	0
  5935  00140E  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  5936  001410  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  5937  001412  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  5938  001414                     
  5939                           ; BSR set to: 0
  5940  001414  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  5941  001416  EF0F  F00A         	goto	u3071
  5942  00141A  EF11  F00A         	goto	u3070
  5943  00141E                     u3071:
  5944  00141E  EF2F  F00A         	goto	l4642
  5945  001422                     u3070:
  5946  001422                     
  5947                           ; BSR set to: 0
  5948  001422  C08F  F097         	movff	___fladd@b,??___fladd
  5949  001426  C090  F098         	movff	___fladd@b+1,??___fladd+1
  5950  00142A  C091  F099         	movff	___fladd@b+2,??___fladd+2
  5951  00142E  C092  F09A         	movff	___fladd@b+3,??___fladd+3
  5952  001432  359A               	rlcf	(??___fladd+3)& (0+255),w,b
  5953  001434  339A               	rrcf	(??___fladd+3)& (0+255),f,b
  5954  001436  3399               	rrcf	(??___fladd+2)& (0+255),f,b
  5955  001438  3398               	rrcf	(??___fladd+1)& (0+255),f,b
  5956  00143A  3397               	rrcf	??___fladd& (0+255),f,b
  5957  00143C  C097  F08F         	movff	??___fladd,___fladd@b
  5958  001440  C098  F090         	movff	??___fladd+1,___fladd@b+1
  5959  001444  C099  F091         	movff	??___fladd+2,___fladd@b+2
  5960  001448  C09A  F092         	movff	??___fladd+3,___fladd@b+3
  5961  00144C  299D               	incf	___fladd@bexp& (0+255),w,b
  5962  00144E  B4D8               	btfsc	status,2,c
  5963  001450  EF2C  F00A         	goto	u3081
  5964  001454  EF2E  F00A         	goto	u3080
  5965  001458                     u3081:
  5966  001458  EF2F  F00A         	goto	l4642
  5967  00145C                     u3080:
  5968  00145C                     
  5969                           ; BSR set to: 0
  5970  00145C  2B9D               	incf	___fladd@bexp& (0+255),f,b
  5971  00145E                     l4642:
  5972                           
  5973                           ; BSR set to: 0
  5974  00145E  299D               	incf	___fladd@bexp& (0+255),w,b
  5975  001460  B4D8               	btfsc	status,2,c
  5976  001462  EF35  F00A         	goto	u3091
  5977  001466  EF37  F00A         	goto	u3090
  5978  00146A                     u3091:
  5979  00146A  EF3F  F00A         	goto	l4646
  5980  00146E                     u3090:
  5981  00146E                     
  5982                           ; BSR set to: 0
  5983  00146E  519D               	movf	___fladd@bexp& (0+255),w,b
  5984  001470  A4D8               	btfss	status,2,c
  5985  001472  EF3D  F00A         	goto	u3101
  5986  001476  EF3F  F00A         	goto	u3100
  5987  00147A                     u3101:
  5988  00147A  EF51  F00A         	goto	l4650
  5989  00147E                     u3100:
  5990  00147E                     l4646:
  5991                           
  5992                           ; BSR set to: 0
  5993  00147E  0E00               	movlw	0
  5994  001480  6F8F               	movwf	___fladd@b& (0+255),b
  5995  001482  0E00               	movlw	0
  5996  001484  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5997  001486  0E00               	movlw	0
  5998  001488  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5999  00148A  0E00               	movlw	0
  6000  00148C  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6001  00148E  519D               	movf	___fladd@bexp& (0+255),w,b
  6002  001490  A4D8               	btfss	status,2,c
  6003  001492  EF4D  F00A         	goto	u3111
  6004  001496  EF4F  F00A         	goto	u3110
  6005  00149A                     u3111:
  6006  00149A  EF51  F00A         	goto	l4650
  6007  00149E                     u3110:
  6008  00149E                     
  6009                           ; BSR set to: 0
  6010  00149E  0E00               	movlw	0
  6011  0014A0  6F9B               	movwf	___fladd@signs& (0+255),b
  6012  0014A2                     l4650:
  6013                           
  6014                           ; BSR set to: 0
  6015  0014A2  A19D               	btfss	___fladd@bexp& (0+255),0,b
  6016  0014A4  EF56  F00A         	goto	u3121
  6017  0014A8  EF58  F00A         	goto	u3120
  6018  0014AC                     u3121:
  6019  0014AC  EF5B  F00A         	goto	l4654
  6020  0014B0                     u3120:
  6021  0014B0                     
  6022                           ; BSR set to: 0
  6023  0014B0  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  6024  0014B2  EF5C  F00A         	goto	l4656
  6025  0014B6                     l4654:
  6026                           
  6027                           ; BSR set to: 0
  6028  0014B6  9F91               	bcf	(___fladd@b+2)& (0+255),7,b
  6029  0014B8                     l4656:
  6030                           
  6031                           ; BSR set to: 0
  6032  0014B8  90D8               	bcf	status,0,c
  6033  0014BA  319D               	rrcf	___fladd@bexp& (0+255),w,b
  6034  0014BC  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6035  0014BE                     
  6036                           ; BSR set to: 0
  6037  0014BE  AF9B               	btfss	___fladd@signs& (0+255),7,b
  6038  0014C0  EF64  F00A         	goto	u3131
  6039  0014C4  EF66  F00A         	goto	u3130
  6040  0014C8                     u3131:
  6041  0014C8  EF67  F00A         	goto	l4662
  6042  0014CC                     u3130:
  6043  0014CC                     
  6044                           ; BSR set to: 0
  6045  0014CC  8F92               	bsf	(___fladd@b+3)& (0+255),7,b
  6046  0014CE                     l4662:
  6047                           
  6048                           ; BSR set to: 0
  6049  0014CE  C08F  F08F         	movff	___fladd@b,?___fladd
  6050  0014D2  C090  F090         	movff	___fladd@b+1,?___fladd+1
  6051  0014D6  C091  F091         	movff	___fladd@b+2,?___fladd+2
  6052  0014DA  C092  F092         	movff	___fladd@b+3,?___fladd+3
  6053  0014DE                     l1920:
  6054                           
  6055                           ; BSR set to: 0
  6056  0014DE  0012               	return		;funcret
  6057  0014E0                     __end_of___fladd:
  6058                           	callstack 0
  6059                           
  6060 ;; *************** function _calcMotorPow *****************
  6061 ;; Defined at:
  6062 ;;		line 308 in file "main.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;		None
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  oldSpeedDelt    2   75[BANK0 ] short 
  6067 ;;  setSpeedDelt    2   73[BANK0 ] short 
  6068 ;;  addMPow         1   77[BANK0 ] char 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;Total ram usage:        7 bytes
  6083 ;; Hardware stack levels used: 1
  6084 ;; Hardware stack levels required when called: 10
  6085 ;; This function calls:
  6086 ;;		___awdiv
  6087 ;;		___flmul
  6088 ;;		___fltol
  6089 ;;		___xxtofl
  6090 ;;		_actSpeed
  6091 ;;		_setMotor
  6092 ;; This function is called by:
  6093 ;;		_loop
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text27
  6098  002736                     __ptext27:
  6099                           	callstack 0
  6100  002736                     _calcMotorPow:
  6101                           	callstack 19
  6102  002736                     
  6103                           ;main.c: 309:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6104  002736  0100               	movlb	0	; () banked
  6105  002738  51DB               	movf	_currentSpeed& (0+255),w,b
  6106  00273A  5DDD               	subwf	_setSpeed& (0+255),w,b
  6107  00273C  6FA9               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6108  00273E  51DC               	movf	(_currentSpeed+1)& (0+255),w,b
  6109  002740  59DE               	subwfb	(_setSpeed+1)& (0+255),w,b
  6110  002742  6FAA               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6111                           
  6112                           ;main.c: 310:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6113  002744  51D9               	movf	_oldSpeed& (0+255),w,b
  6114  002746  5DDB               	subwf	_currentSpeed& (0+255),w,b
  6115  002748  6FAB               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6116  00274A  51DA               	movf	(_oldSpeed+1)& (0+255),w,b
  6117  00274C  59DC               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6118  00274E  6FAC               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6119  002750                     
  6120                           ; BSR set to: 0
  6121                           ;main.c: 313:     currentSpeed = actSpeed();
  6122  002750  EC5E  F019         	call	_actSpeed	;wreg free
  6123  002754  C020  F0DB         	movff	?_actSpeed,_currentSpeed
  6124  002758  C021  F0DC         	movff	?_actSpeed+1,_currentSpeed+1
  6125  00275C                     
  6126                           ;main.c: 317:  addMPow = (int8_t)((0.025) * (setSpeedDelta - (oldSpeedDelta / (2))));
  6127  00275C  0ECD               	movlw	205
  6128  00275E  0100               	movlb	0	; () banked
  6129  002760  6F7A               	movwf	___flmul@a& (0+255),b
  6130  002762  0ECC               	movlw	204
  6131  002764  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  6132  002766  0ECC               	movlw	204
  6133  002768  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  6134  00276A  0E3C               	movlw	60
  6135  00276C  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  6136  00276E  0E00               	movlw	0
  6137  002770  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6138  002772  0E02               	movlw	2
  6139  002774  6F62               	movwf	___awdiv@divisor& (0+255),b
  6140  002776  C0AB  F060         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  6141  00277A  C0AC  F061         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  6142  00277E  ECEC  F017         	call	___awdiv	;wreg free
  6143  002782  C0A9  F0A7         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  6144  002786  C0AA  F0A8         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  6145  00278A  0100               	movlb	0	; () banked
  6146  00278C  5160               	movf	?___awdiv& (0+255),w,b
  6147  00278E  5FA7               	subwf	??_calcMotorPow& (0+255),f,b
  6148  002790  5161               	movf	(?___awdiv+1)& (0+255),w,b
  6149  002792  5BA8               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  6150  002794  C0A7  F068         	movff	??_calcMotorPow,___xxtofl@val
  6151  002798  C0A8  F069         	movff	??_calcMotorPow+1,___xxtofl@val+1
  6152  00279C  0E00               	movlw	0
  6153  00279E  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  6154  0027A0  0EFF               	movlw	-1
  6155  0027A2  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  6156  0027A4  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  6157  0027A6  0E01               	movlw	1
  6158  0027A8  ECAB  F00F         	call	___xxtofl
  6159  0027AC  C068  F076         	movff	?___xxtofl,___flmul@b
  6160  0027B0  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  6161  0027B4  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  6162  0027B8  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  6163  0027BC  EC70  F00A         	call	___flmul	;wreg free
  6164  0027C0  C076  F09F         	movff	?___flmul,___fltol@f1
  6165  0027C4  C077  F0A0         	movff	?___flmul+1,___fltol@f1+1
  6166  0027C8  C078  F0A1         	movff	?___flmul+2,___fltol@f1+2
  6167  0027CC  C079  F0A2         	movff	?___flmul+3,___fltol@f1+3
  6168  0027D0  ECC7  F014         	call	___fltol	;wreg free
  6169  0027D4  0100               	movlb	0	; () banked
  6170  0027D6  519F               	movf	?___fltol& (0+255),w,b
  6171  0027D8  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  6172  0027DA                     
  6173                           ; BSR set to: 0
  6174                           ;main.c: 319:     if(addMPow > (4)){
  6175  0027DA  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  6176  0027DC  0A80               	xorlw	128
  6177  0027DE  0F7B               	addlw	-133
  6178  0027E0  A0D8               	btfss	status,0,c
  6179  0027E2  EFF5  F013         	goto	u5451
  6180  0027E6  EFF7  F013         	goto	u5450
  6181  0027EA                     u5451:
  6182  0027EA  EFFB  F013         	goto	l6400
  6183  0027EE                     u5450:
  6184  0027EE                     
  6185                           ; BSR set to: 0
  6186                           ;main.c: 320:         addMPow = (4);
  6187  0027EE  0E04               	movlw	4
  6188  0027F0  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  6189                           
  6190                           ;main.c: 321:     }else if(addMPow < -(4)){
  6191  0027F2  EF07  F014         	goto	l6404
  6192  0027F6                     l6400:
  6193                           
  6194                           ; BSR set to: 0
  6195  0027F6  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  6196  0027F8  0A80               	xorlw	128
  6197  0027FA  0F84               	addlw	132
  6198  0027FC  B0D8               	btfsc	status,0,c
  6199  0027FE  EF03  F014         	goto	u5461
  6200  002802  EF05  F014         	goto	u5460
  6201  002806                     u5461:
  6202  002806  EF07  F014         	goto	l6404
  6203  00280A                     u5460:
  6204  00280A                     
  6205                           ; BSR set to: 0
  6206                           ;main.c: 322:         addMPow = -(4);
  6207  00280A  0EFC               	movlw	252
  6208  00280C  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  6209  00280E                     l6404:
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;main.c: 325:  actMotorPow = actMotorPow + addMPow;
  6213  00280E  5026               	movf	_actMotorPow^0,w,c
  6214  002810  25AD               	addwf	calcMotorPow@addMPow& (0+255),w,b
  6215  002812  6E26               	movwf	_actMotorPow^0,c
  6216  002814  0E00               	movlw	0
  6217  002816  BFAD               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  6218  002818  0EFF               	movlw	255
  6219  00281A  2027               	addwfc	(_actMotorPow+1)^0,w,c
  6220  00281C  6E27               	movwf	(_actMotorPow+1)^0,c
  6221  00281E                     
  6222                           ; BSR set to: 0
  6223                           ;main.c: 327:  if(actMotorPow > (600)){
  6224  00281E  BE27               	btfsc	(_actMotorPow+1)^0,7,c
  6225  002820  EF1B  F014         	goto	u5471
  6226  002824  0E59               	movlw	89
  6227  002826  5C26               	subwf	_actMotorPow^0,w,c
  6228  002828  0E02               	movlw	2
  6229  00282A  5827               	subwfb	(_actMotorPow+1)^0,w,c
  6230  00282C  A0D8               	btfss	status,0,c
  6231  00282E  EF1B  F014         	goto	u5471
  6232  002832  EF1D  F014         	goto	u5470
  6233  002836                     u5471:
  6234  002836  EF23  F014         	goto	l6410
  6235  00283A                     u5470:
  6236  00283A                     
  6237                           ; BSR set to: 0
  6238                           ;main.c: 328:   actMotorPow = (600);
  6239  00283A  0E02               	movlw	2
  6240  00283C  6E27               	movwf	(_actMotorPow+1)^0,c
  6241  00283E  0E58               	movlw	88
  6242  002840  6E26               	movwf	_actMotorPow^0,c
  6243                           
  6244                           ;main.c: 329:  }else if(actMotorPow < (-400)){
  6245  002842  EF35  F014         	goto	l6414
  6246  002846                     l6410:
  6247                           
  6248                           ; BSR set to: 0
  6249  002846  AE27               	btfss	(_actMotorPow+1)^0,7,c
  6250  002848  EF2F  F014         	goto	u5481
  6251  00284C  0E70               	movlw	112
  6252  00284E  5C26               	subwf	_actMotorPow^0,w,c
  6253  002850  0EFE               	movlw	254
  6254  002852  5827               	subwfb	(_actMotorPow+1)^0,w,c
  6255  002854  B0D8               	btfsc	status,0,c
  6256  002856  EF2F  F014         	goto	u5481
  6257  00285A  EF31  F014         	goto	u5480
  6258  00285E                     u5481:
  6259  00285E  EF35  F014         	goto	l6414
  6260  002862                     u5480:
  6261  002862                     
  6262                           ; BSR set to: 0
  6263                           ;main.c: 330:   actMotorPow = (-400);
  6264  002862  0EFE               	movlw	254
  6265  002864  6E27               	movwf	(_actMotorPow+1)^0,c
  6266  002866  0E70               	movlw	112
  6267  002868  6E26               	movwf	_actMotorPow^0,c
  6268  00286A                     l6414:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;main.c: 333:     setMotor(actMotorPow);
  6272  00286A  C026  F062         	movff	_actMotorPow,setMotor@motorPower
  6273  00286E  C027  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  6274  002872  EC47  F016         	call	_setMotor	;wreg free
  6275  002876                     
  6276                           ;main.c: 335:     oldSpeed = currentSpeed;
  6277  002876  C0DB  F0D9         	movff	_currentSpeed,_oldSpeed
  6278  00287A  C0DC  F0DA         	movff	_currentSpeed+1,_oldSpeed+1
  6279  00287E  0012               	return		;funcret
  6280  002880                     __end_of_calcMotorPow:
  6281                           	callstack 0
  6282                           
  6283 ;; *************** function _setMotor *****************
  6284 ;; Defined at:
  6285 ;;		line 338 in file "main.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  motorPower      2    2[BANK0 ] short 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;Total ram usage:        4 bytes
  6304 ;; Hardware stack levels used: 1
  6305 ;; Hardware stack levels required when called: 9
  6306 ;; This function calls:
  6307 ;;		_PWM7_LoadDutyValue
  6308 ;;		_PWM8_LoadDutyValue
  6309 ;; This function is called by:
  6310 ;;		_loop
  6311 ;;		_startAccell
  6312 ;;		_calcMotorPow
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text28
  6317  002C8E                     __ptext28:
  6318                           	callstack 0
  6319  002C8E                     _setMotor:
  6320                           	callstack 19
  6321  002C8E                     
  6322                           ;main.c: 339:     if(motorPower > (100)){
  6323  002C8E  0100               	movlb	0	; () banked
  6324  002C90  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6325  002C92  EF54  F016         	goto	u4741
  6326  002C96  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  6327  002C98  E109               	bnz	u4740
  6328  002C9A  0E65               	movlw	101
  6329  002C9C  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6330  002C9E  A0D8               	btfss	status,0,c
  6331  002CA0  EF54  F016         	goto	u4741
  6332  002CA4  EF56  F016         	goto	u4740
  6333  002CA8                     u4741:
  6334  002CA8  EF76  F016         	goto	l5912
  6335  002CAC                     u4740:
  6336  002CAC                     
  6337                           ; BSR set to: 0
  6338                           ;main.c: 340:        if(motorPower > (600)){
  6339  002CAC  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6340  002CAE  EF62  F016         	goto	u4751
  6341  002CB2  0E59               	movlw	89
  6342  002CB4  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6343  002CB6  0E02               	movlw	2
  6344  002CB8  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6345  002CBA  A0D8               	btfss	status,0,c
  6346  002CBC  EF62  F016         	goto	u4751
  6347  002CC0  EF64  F016         	goto	u4750
  6348  002CC4                     u4751:
  6349  002CC4  EF68  F016         	goto	l5908
  6350  002CC8                     u4750:
  6351  002CC8                     
  6352                           ; BSR set to: 0
  6353                           ;main.c: 341:             motorPower = (600);
  6354  002CC8  0E02               	movlw	2
  6355  002CCA  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  6356  002CCC  0E58               	movlw	88
  6357  002CCE  6F62               	movwf	setMotor@motorPower& (0+255),b
  6358  002CD0                     l5908:
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;main.c: 343:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  6362  002CD0  C062  F020         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  6363  002CD4  C063  F021         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  6364  002CD8  ECAC  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6365  002CDC                     
  6366                           ;main.c: 344:         PWM8_LoadDutyValue(0);
  6367  002CDC  0E00               	movlw	0
  6368  002CDE  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6369  002CE0  0E00               	movlw	0
  6370  002CE2  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6371  002CE4  EC91  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6372                           
  6373                           ;main.c: 345:     } else if(motorPower < -(100)){
  6374  002CE8  EFB9  F016         	goto	l1363
  6375  002CEC                     l5912:
  6376                           
  6377                           ; BSR set to: 0
  6378  002CEC  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  6379  002CEE  EF82  F016         	goto	u4761
  6380  002CF2  0E9C               	movlw	156
  6381  002CF4  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6382  002CF6  0EFF               	movlw	255
  6383  002CF8  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6384  002CFA  B0D8               	btfsc	status,0,c
  6385  002CFC  EF82  F016         	goto	u4761
  6386  002D00  EF84  F016         	goto	u4760
  6387  002D04                     u4761:
  6388  002D04  EFAD  F016         	goto	l5922
  6389  002D08                     u4760:
  6390  002D08                     
  6391                           ; BSR set to: 0
  6392                           ;main.c: 346:         if(motorPower < (-400)){
  6393  002D08  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  6394  002D0A  EF90  F016         	goto	u4771
  6395  002D0E  0E70               	movlw	112
  6396  002D10  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6397  002D12  0EFE               	movlw	254
  6398  002D14  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6399  002D16  B0D8               	btfsc	status,0,c
  6400  002D18  EF90  F016         	goto	u4771
  6401  002D1C  EF92  F016         	goto	u4770
  6402  002D20                     u4771:
  6403  002D20  EF96  F016         	goto	l5918
  6404  002D24                     u4770:
  6405  002D24                     
  6406                           ; BSR set to: 0
  6407                           ;main.c: 347:             motorPower = (-400);
  6408  002D24  0EFE               	movlw	254
  6409  002D26  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  6410  002D28  0E70               	movlw	112
  6411  002D2A  6F62               	movwf	setMotor@motorPower& (0+255),b
  6412  002D2C                     l5918:
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;main.c: 349:         PWM7_LoadDutyValue(0);
  6416  002D2C  0E00               	movlw	0
  6417  002D2E  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6418  002D30  0E00               	movlw	0
  6419  002D32  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6420  002D34  ECAC  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6421  002D38                     
  6422                           ;main.c: 350:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  6423  002D38  C062  F064         	movff	setMotor@motorPower,??_setMotor
  6424  002D3C  C063  F065         	movff	setMotor@motorPower+1,??_setMotor+1
  6425  002D40  0100               	movlb	0	; () banked
  6426  002D42  1F64               	comf	??_setMotor& (0+255),f,b
  6427  002D44  1F65               	comf	(??_setMotor+1)& (0+255),f,b
  6428  002D46  4B64               	infsnz	??_setMotor& (0+255),f,b
  6429  002D48  2B65               	incf	(??_setMotor+1)& (0+255),f,b
  6430  002D4A  C064  F020         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  6431  002D4E  C065  F021         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  6432  002D52  EC91  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6433                           
  6434                           ;main.c: 351:     } else {
  6435  002D56  EFB9  F016         	goto	l1363
  6436  002D5A                     l5922:
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;main.c: 352:         PWM7_LoadDutyValue(0);
  6440  002D5A  0E00               	movlw	0
  6441  002D5C  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6442  002D5E  0E00               	movlw	0
  6443  002D60  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6444  002D62  ECAC  F01D         	call	_PWM7_LoadDutyValue	;wreg free
  6445                           
  6446                           ;main.c: 353:         PWM8_LoadDutyValue(0);
  6447  002D66  0E00               	movlw	0
  6448  002D68  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6449  002D6A  0E00               	movlw	0
  6450  002D6C  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6451  002D6E  EC91  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  6452  002D72                     l1363:
  6453  002D72  0012               	return		;funcret
  6454  002D74                     __end_of_setMotor:
  6455                           	callstack 0
  6456                           
  6457 ;; *************** function _PWM8_LoadDutyValue *****************
  6458 ;; Defined at:
  6459 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  dutyValue       2   31[COMRAM] unsigned short 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;Total ram usage:        4 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; Hardware stack levels required when called: 8
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_setMotor
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text29
  6488  003B22                     __ptext29:
  6489                           	callstack 0
  6490  003B22                     _PWM8_LoadDutyValue:
  6491                           	callstack 19
  6492  003B22                     
  6493                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6494  003B22  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6495  003B26  C021  F061         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  6496  003B2A  0100               	movlb	0	; () banked
  6497  003B2C  90D8               	bcf	status,0,c
  6498  003B2E  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6499  003B30  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6500  003B32  90D8               	bcf	status,0,c
  6501  003B34  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6502  003B36  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6503  003B38  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  6504  003B3A  6E61               	movwf	97,c	;volatile
  6505                           
  6506                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  6507  003B3C  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6508  003B40  0E03               	movlw	3
  6509  003B42  1760               	andwf	??_PWM8_LoadDutyValue& (0+255),f,b
  6510  003B44  0E06               	movlw	6
  6511  003B46  6F61               	movwf	(??_PWM8_LoadDutyValue+1)& (0+255),b
  6512  003B48                     u4585:
  6513  003B48  90D8               	bcf	status,0,c
  6514  003B4A  3760               	rlcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6515  003B4C  2F61               	decfsz	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6516  003B4E  EFA4  F01D         	goto	u4585
  6517  003B52  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  6518  003B54  6E60               	movwf	96,c	;volatile
  6519  003B56                     
  6520                           ; BSR set to: 0
  6521  003B56  0012               	return		;funcret
  6522  003B58                     __end_of_PWM8_LoadDutyValue:
  6523                           	callstack 0
  6524                           
  6525 ;; *************** function _PWM7_LoadDutyValue *****************
  6526 ;; Defined at:
  6527 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  dutyValue       2   31[COMRAM] unsigned short 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;Total ram usage:        4 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 8
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_setMotor
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text30
  6556  003B58                     __ptext30:
  6557                           	callstack 0
  6558  003B58                     _PWM7_LoadDutyValue:
  6559                           	callstack 19
  6560  003B58                     
  6561                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6562  003B58  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6563  003B5C  C021  F061         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  6564  003B60  0100               	movlb	0	; () banked
  6565  003B62  90D8               	bcf	status,0,c
  6566  003B64  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6567  003B66  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6568  003B68  90D8               	bcf	status,0,c
  6569  003B6A  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6570  003B6C  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6571  003B6E  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  6572  003B70  6E65               	movwf	101,c	;volatile
  6573                           
  6574                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  6575  003B72  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6576  003B76  0E03               	movlw	3
  6577  003B78  1760               	andwf	??_PWM7_LoadDutyValue& (0+255),f,b
  6578  003B7A  0E06               	movlw	6
  6579  003B7C  6F61               	movwf	(??_PWM7_LoadDutyValue+1)& (0+255),b
  6580  003B7E                     u4575:
  6581  003B7E  90D8               	bcf	status,0,c
  6582  003B80  3760               	rlcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6583  003B82  2F61               	decfsz	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6584  003B84  EFBF  F01D         	goto	u4575
  6585  003B88  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  6586  003B8A  6E64               	movwf	100,c	;volatile
  6587  003B8C                     
  6588                           ; BSR set to: 0
  6589  003B8C  0012               	return		;funcret
  6590  003B8E                     __end_of_PWM7_LoadDutyValue:
  6591                           	callstack 0
  6592                           
  6593 ;; *************** function _actSpeed *****************
  6594 ;; Defined at:
  6595 ;;		line 71 in file "main.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  speed           2   14[BANK0 ] short 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  2   31[COMRAM] short 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;Total ram usage:        4 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 9
  6616 ;; This function calls:
  6617 ;;		___aldiv
  6618 ;; This function is called by:
  6619 ;;		_calcMotorPow
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text31
  6624  0032BC                     __ptext31:
  6625                           	callstack 0
  6626  0032BC                     _actSpeed:
  6627                           	callstack 19
  6628  0032BC                     
  6629                           ;main.c: 72:     int16_t speed = 0;
  6630  0032BC  0E00               	movlw	0
  6631  0032BE  0100               	movlb	0	; () banked
  6632  0032C0  6F6F               	movwf	(actSpeed@speed+1)& (0+255),b
  6633  0032C2  0E00               	movlw	0
  6634  0032C4  6F6E               	movwf	actSpeed@speed& (0+255),b
  6635  0032C6                     
  6636                           ; BSR set to: 0
  6637                           ;main.c: 73:     if(smtPeriod){
  6638  0032C6  503D               	movf	_smtPeriod^0,w,c	;volatile
  6639  0032C8  103E               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  6640  0032CA  103F               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  6641  0032CC  1040               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  6642  0032CE  B4D8               	btfsc	status,2,c
  6643  0032D0  EF6C  F019         	goto	u4821
  6644  0032D4  EF6E  F019         	goto	u4820
  6645  0032D8                     u4821:
  6646  0032D8  EFA6  F019         	goto	l5980
  6647  0032DC                     u4820:
  6648  0032DC                     
  6649                           ; BSR set to: 0
  6650                           ;main.c: 74:         if(CLC3CONbits.LC3OUT){
  6651  0032DC  013C               	movlb	60	; () banked
  6652  0032DE  AB60               	btfss	96,5,b	;volatile
  6653  0032E0  EF74  F019         	goto	u4831
  6654  0032E4  EF76  F019         	goto	u4830
  6655  0032E8                     u4831:
  6656  0032E8  EF8F  F019         	goto	l5978
  6657  0032EC                     u4830:
  6658  0032EC                     
  6659                           ; BSR set to: 60
  6660                           ;main.c: 75:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  6661  0032EC  0E20               	movlw	32
  6662  0032EE  0100               	movlb	0	; () banked
  6663  0032F0  6F60               	movwf	___aldiv@dividend& (0+255),b
  6664  0032F2  0EA1               	movlw	161
  6665  0032F4  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  6666  0032F6  0E07               	movlw	7
  6667  0032F8  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  6668  0032FA  0E00               	movlw	0
  6669  0032FC  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  6670  0032FE  C03D  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6671  003302  C03E  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6672  003306  C03F  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6673  00330A  C040  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6674  00330E  EC40  F014         	call	___aldiv	;wreg free
  6675  003312  C060  F06E         	movff	?___aldiv,actSpeed@speed
  6676  003316  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  6677                           
  6678                           ;main.c: 76:         } else {
  6679  00331A  EFA6  F019         	goto	l5980
  6680  00331E                     l5978:
  6681                           
  6682                           ; BSR set to: 60
  6683                           ;main.c: 77:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  6684  00331E  0EE0               	movlw	224
  6685  003320  0100               	movlb	0	; () banked
  6686  003322  6F60               	movwf	___aldiv@dividend& (0+255),b
  6687  003324  0E5E               	movlw	94
  6688  003326  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  6689  003328  0EF8               	movlw	248
  6690  00332A  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  6691  00332C  0EFF               	movlw	255
  6692  00332E  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  6693  003330  C03D  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6694  003334  C03E  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6695  003338  C03F  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6696  00333C  C040  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6697  003340  EC40  F014         	call	___aldiv	;wreg free
  6698  003344  C060  F06E         	movff	?___aldiv,actSpeed@speed
  6699  003348  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  6700  00334C                     l5980:
  6701                           
  6702                           ;main.c: 80:     return speed;
  6703  00334C  C06E  F020         	movff	actSpeed@speed,?_actSpeed
  6704  003350  C06F  F021         	movff	actSpeed@speed+1,?_actSpeed+1
  6705  003354  0012               	return		;funcret
  6706  003356                     __end_of_actSpeed:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function ___aldiv *****************
  6710 ;; Defined at:
  6711 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  dividend        4    0[BANK0 ] long 
  6714 ;;  divisor         4    4[BANK0 ] long 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  quotient        4   10[BANK0 ] long 
  6717 ;;  sign            1    9[BANK0 ] unsigned char 
  6718 ;;  counter         1    8[BANK0 ] unsigned char 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  4    0[BANK0 ] long 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6728 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;Total ram usage:       14 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; Hardware stack levels required when called: 8
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_actSpeed
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text32
  6743  002880                     __ptext32:
  6744                           	callstack 0
  6745  002880                     ___aldiv:
  6746                           	callstack 19
  6747  002880  0E00               	movlw	0
  6748  002882  0100               	movlb	0	; () banked
  6749  002884  6F69               	movwf	___aldiv@sign& (0+255),b
  6750  002886                     
  6751                           ; BSR set to: 0
  6752  002886  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6753  002888  EF4A  F014         	goto	u4620
  6754  00288C  EF48  F014         	goto	u4621
  6755  002890                     u4621:
  6756  002890  EF54  F014         	goto	l5822
  6757  002894                     u4620:
  6758  002894                     
  6759                           ; BSR set to: 0
  6760  002894  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6761  002896  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6762  002898  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6763  00289A  6D64               	negf	___aldiv@divisor& (0+255),b
  6764  00289C  0E00               	movlw	0
  6765  00289E  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6766  0028A0  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6767  0028A2  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6768  0028A4                     
  6769                           ; BSR set to: 0
  6770  0028A4  0E01               	movlw	1
  6771  0028A6  6F69               	movwf	___aldiv@sign& (0+255),b
  6772  0028A8                     l5822:
  6773                           
  6774                           ; BSR set to: 0
  6775  0028A8  BF63               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  6776  0028AA  EF5B  F014         	goto	u4630
  6777  0028AE  EF59  F014         	goto	u4631
  6778  0028B2                     u4631:
  6779  0028B2  EF65  F014         	goto	l5828
  6780  0028B6                     u4630:
  6781  0028B6                     
  6782                           ; BSR set to: 0
  6783  0028B6  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6784  0028B8  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6785  0028BA  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6786  0028BC  6D60               	negf	___aldiv@dividend& (0+255),b
  6787  0028BE  0E00               	movlw	0
  6788  0028C0  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6789  0028C2  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6790  0028C4  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6791  0028C6                     
  6792                           ; BSR set to: 0
  6793  0028C6  0E01               	movlw	1
  6794  0028C8  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  6795  0028CA                     l5828:
  6796                           
  6797                           ; BSR set to: 0
  6798  0028CA  0E00               	movlw	0
  6799  0028CC  6F6A               	movwf	___aldiv@quotient& (0+255),b
  6800  0028CE  0E00               	movlw	0
  6801  0028D0  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6802  0028D2  0E00               	movlw	0
  6803  0028D4  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6804  0028D6  0E00               	movlw	0
  6805  0028D8  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6806  0028DA                     
  6807                           ; BSR set to: 0
  6808  0028DA  5164               	movf	___aldiv@divisor& (0+255),w,b
  6809  0028DC  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6810  0028DE  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6811  0028E0  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6812  0028E2  B4D8               	btfsc	status,2,c
  6813  0028E4  EF76  F014         	goto	u4641
  6814  0028E8  EF78  F014         	goto	u4640
  6815  0028EC                     u4641:
  6816  0028EC  EFAE  F014         	goto	l5850
  6817  0028F0                     u4640:
  6818  0028F0                     
  6819                           ; BSR set to: 0
  6820  0028F0  0E01               	movlw	1
  6821  0028F2  6F68               	movwf	___aldiv@counter& (0+255),b
  6822  0028F4  EF82  F014         	goto	l5836
  6823  0028F8                     l5834:
  6824                           
  6825                           ; BSR set to: 0
  6826  0028F8  90D8               	bcf	status,0,c
  6827  0028FA  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  6828  0028FC  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6829  0028FE  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6830  002900  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6831  002902  2B68               	incf	___aldiv@counter& (0+255),f,b
  6832  002904                     l5836:
  6833                           
  6834                           ; BSR set to: 0
  6835  002904  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6836  002906  EF87  F014         	goto	u4651
  6837  00290A  EF89  F014         	goto	u4650
  6838  00290E                     u4651:
  6839  00290E  EF7C  F014         	goto	l5834
  6840  002912                     u4650:
  6841  002912                     l5838:
  6842                           
  6843                           ; BSR set to: 0
  6844  002912  90D8               	bcf	status,0,c
  6845  002914  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  6846  002916  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6847  002918  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6848  00291A  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6849  00291C                     
  6850                           ; BSR set to: 0
  6851  00291C  5164               	movf	___aldiv@divisor& (0+255),w,b
  6852  00291E  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  6853  002920  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6854  002922  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6855  002924  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6856  002926  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6857  002928  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6858  00292A  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6859  00292C  A0D8               	btfss	status,0,c
  6860  00292E  EF9B  F014         	goto	u4661
  6861  002932  EF9D  F014         	goto	u4660
  6862  002936                     u4661:
  6863  002936  EFA6  F014         	goto	l5846
  6864  00293A                     u4660:
  6865  00293A                     
  6866                           ; BSR set to: 0
  6867  00293A  5164               	movf	___aldiv@divisor& (0+255),w,b
  6868  00293C  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  6869  00293E  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6870  002940  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6871  002942  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6872  002944  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6873  002946  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6874  002948  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6875  00294A                     
  6876                           ; BSR set to: 0
  6877  00294A  816A               	bsf	___aldiv@quotient& (0+255),0,b
  6878  00294C                     l5846:
  6879                           
  6880                           ; BSR set to: 0
  6881  00294C  90D8               	bcf	status,0,c
  6882  00294E  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6883  002950  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6884  002952  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6885  002954  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  6886  002956                     
  6887                           ; BSR set to: 0
  6888  002956  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  6889  002958  EF89  F014         	goto	l5838
  6890  00295C                     l5850:
  6891                           
  6892                           ; BSR set to: 0
  6893  00295C  5169               	movf	___aldiv@sign& (0+255),w,b
  6894  00295E  B4D8               	btfsc	status,2,c
  6895  002960  EFB4  F014         	goto	u4671
  6896  002964  EFB6  F014         	goto	u4670
  6897  002968                     u4671:
  6898  002968  EFBE  F014         	goto	l5854
  6899  00296C                     u4670:
  6900  00296C                     
  6901                           ; BSR set to: 0
  6902  00296C  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6903  00296E  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6904  002970  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6905  002972  6D6A               	negf	___aldiv@quotient& (0+255),b
  6906  002974  0E00               	movlw	0
  6907  002976  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6908  002978  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6909  00297A  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6910  00297C                     l5854:
  6911                           
  6912                           ; BSR set to: 0
  6913  00297C  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  6914  002980  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  6915  002984  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  6916  002988  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  6917  00298C                     
  6918                           ; BSR set to: 0
  6919  00298C  0012               	return		;funcret
  6920  00298E                     __end_of___aldiv:
  6921                           	callstack 0
  6922                           
  6923 ;; *************** function ___xxtofl *****************
  6924 ;; Defined at:
  6925 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  sign            1    wreg     unsigned char 
  6928 ;;  val             4    8[BANK0 ] long 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  sign            1   16[BANK0 ] unsigned char 
  6931 ;;  arg             4   18[BANK0 ] unsigned long 
  6932 ;;  exp             1   17[BANK0 ] unsigned char 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  4    8[BANK0 ] unsigned char 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;Total ram usage:       14 bytes
  6947 ;; Hardware stack levels used: 1
  6948 ;; Hardware stack levels required when called: 8
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_loop
  6953 ;;		_checkBatt
  6954 ;;		_calcSpeed
  6955 ;;		_calcMotorPow
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text33
  6960  001F56                     __ptext33:
  6961                           	callstack 0
  6962  001F56                     ___xxtofl:
  6963                           	callstack 20
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;incstack = 0
  6967                           ;___xxtofl@sign stored from wreg
  6968  001F56  0100               	movlb	0	; () banked
  6969  001F58  6F70               	movwf	___xxtofl@sign& (0+255),b
  6970  001F5A  0100               	movlb	0	; () banked
  6971  001F5C  5170               	movf	___xxtofl@sign& (0+255),w,b
  6972  001F5E  B4D8               	btfsc	status,2,c
  6973  001F60  EFB4  F00F         	goto	u5081
  6974  001F64  EFB6  F00F         	goto	u5080
  6975  001F68                     u5081:
  6976  001F68  EFD8  F00F         	goto	l2038
  6977  001F6C                     u5080:
  6978  001F6C                     
  6979                           ; BSR set to: 0
  6980  001F6C  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  6981  001F6E  EFBD  F00F         	goto	u5090
  6982  001F72  EFBB  F00F         	goto	u5091
  6983  001F76                     u5091:
  6984  001F76  EFD8  F00F         	goto	l2038
  6985  001F7A                     u5090:
  6986  001F7A                     
  6987                           ; BSR set to: 0
  6988  001F7A  C068  F06C         	movff	___xxtofl@val,??___xxtofl
  6989  001F7E  C069  F06D         	movff	___xxtofl@val+1,??___xxtofl+1
  6990  001F82  C06A  F06E         	movff	___xxtofl@val+2,??___xxtofl+2
  6991  001F86  C06B  F06F         	movff	___xxtofl@val+3,??___xxtofl+3
  6992  001F8A  1F6C               	comf	??___xxtofl& (0+255),f,b
  6993  001F8C  1F6D               	comf	(??___xxtofl+1)& (0+255),f,b
  6994  001F8E  1F6E               	comf	(??___xxtofl+2)& (0+255),f,b
  6995  001F90  1F6F               	comf	(??___xxtofl+3)& (0+255),f,b
  6996  001F92  2B6C               	incf	??___xxtofl& (0+255),f,b
  6997  001F94  0E00               	movlw	0
  6998  001F96  236D               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6999  001F98  236E               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7000  001F9A  236F               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7001  001F9C  C06C  F072         	movff	??___xxtofl,___xxtofl@arg
  7002  001FA0  C06D  F073         	movff	??___xxtofl+1,___xxtofl@arg+1
  7003  001FA4  C06E  F074         	movff	??___xxtofl+2,___xxtofl@arg+2
  7004  001FA8  C06F  F075         	movff	??___xxtofl+3,___xxtofl@arg+3
  7005  001FAC  EFE0  F00F         	goto	l6142
  7006  001FB0                     l2038:
  7007                           
  7008                           ; BSR set to: 0
  7009  001FB0  C068  F072         	movff	___xxtofl@val,___xxtofl@arg
  7010  001FB4  C069  F073         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7011  001FB8  C06A  F074         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7012  001FBC  C06B  F075         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7013  001FC0                     l6142:
  7014                           
  7015                           ; BSR set to: 0
  7016  001FC0  5168               	movf	___xxtofl@val& (0+255),w,b
  7017  001FC2  1169               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7018  001FC4  116A               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7019  001FC6  116B               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7020  001FC8  A4D8               	btfss	status,2,c
  7021  001FCA  EFE9  F00F         	goto	u5101
  7022  001FCE  EFEB  F00F         	goto	u5100
  7023  001FD2                     u5101:
  7024  001FD2  EFF5  F00F         	goto	l6148
  7025  001FD6                     u5100:
  7026  001FD6                     
  7027                           ; BSR set to: 0
  7028  001FD6  0E00               	movlw	0
  7029  001FD8  6F68               	movwf	?___xxtofl& (0+255),b
  7030  001FDA  0E00               	movlw	0
  7031  001FDC  6F69               	movwf	(?___xxtofl+1)& (0+255),b
  7032  001FDE  0E00               	movlw	0
  7033  001FE0  6F6A               	movwf	(?___xxtofl+2)& (0+255),b
  7034  001FE2  0E00               	movlw	0
  7035  001FE4  6F6B               	movwf	(?___xxtofl+3)& (0+255),b
  7036  001FE6  EF86  F010         	goto	l2041
  7037  001FEA                     l6148:
  7038                           
  7039                           ; BSR set to: 0
  7040  001FEA  0E96               	movlw	150
  7041  001FEC  6F71               	movwf	___xxtofl@exp& (0+255),b
  7042  001FEE  EFFF  F00F         	goto	l6152
  7043  001FF2                     l6150:
  7044                           
  7045                           ; BSR set to: 0
  7046  001FF2  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7047  001FF4  90D8               	bcf	status,0,c
  7048  001FF6  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7049  001FF8  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7050  001FFA  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7051  001FFC  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7052  001FFE                     l6152:
  7053                           
  7054                           ; BSR set to: 0
  7055  001FFE  0E00               	movlw	0
  7056  002000  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7057  002002  6F6C               	movwf	??___xxtofl& (0+255),b
  7058  002004  0E00               	movlw	0
  7059  002006  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7060  002008  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7061  00200A  0E00               	movlw	0
  7062  00200C  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7063  00200E  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7064  002010  0EFE               	movlw	254
  7065  002012  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7066  002014  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7067  002016  516C               	movf	??___xxtofl& (0+255),w,b
  7068  002018  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7069  00201A  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7070  00201C  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7071  00201E  A4D8               	btfss	status,2,c
  7072  002020  EF14  F010         	goto	u5111
  7073  002024  EF16  F010         	goto	u5110
  7074  002028                     u5111:
  7075  002028  EFF9  F00F         	goto	l6150
  7076  00202C                     u5110:
  7077  00202C  EF24  F010         	goto	l2045
  7078  002030                     l6154:
  7079                           
  7080                           ; BSR set to: 0
  7081  002030  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7082  002032                     
  7083                           ; BSR set to: 0
  7084  002032  0E01               	movlw	1
  7085  002034  2772               	addwf	___xxtofl@arg& (0+255),f,b
  7086  002036  0E00               	movlw	0
  7087  002038  2373               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7088  00203A  2374               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7089  00203C  2375               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7090  00203E                     
  7091                           ; BSR set to: 0
  7092  00203E  90D8               	bcf	status,0,c
  7093  002040  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7094  002042  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7095  002044  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7096  002046  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7097  002048                     l2045:
  7098                           
  7099                           ; BSR set to: 0
  7100  002048  0E00               	movlw	0
  7101  00204A  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7102  00204C  6F6C               	movwf	??___xxtofl& (0+255),b
  7103  00204E  0E00               	movlw	0
  7104  002050  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7105  002052  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7106  002054  0E00               	movlw	0
  7107  002056  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7108  002058  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7109  00205A  0EFF               	movlw	255
  7110  00205C  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7111  00205E  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7112  002060  516C               	movf	??___xxtofl& (0+255),w,b
  7113  002062  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7114  002064  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7115  002066  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7116  002068  A4D8               	btfss	status,2,c
  7117  00206A  EF39  F010         	goto	u5121
  7118  00206E  EF3B  F010         	goto	u5120
  7119  002072                     u5121:
  7120  002072  EF18  F010         	goto	l6154
  7121  002076                     u5120:
  7122  002076  EF43  F010         	goto	l6162
  7123  00207A                     l6160:
  7124                           
  7125                           ; BSR set to: 0
  7126  00207A  0771               	decf	___xxtofl@exp& (0+255),f,b
  7127  00207C  90D8               	bcf	status,0,c
  7128  00207E  3772               	rlcf	___xxtofl@arg& (0+255),f,b
  7129  002080  3773               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7130  002082  3774               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7131  002084  3775               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7132  002086                     l6162:
  7133                           
  7134                           ; BSR set to: 0
  7135  002086  BF74               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7136  002088  EF48  F010         	goto	u5131
  7137  00208C  EF4A  F010         	goto	u5130
  7138  002090                     u5131:
  7139  002090  EF52  F010         	goto	l2052
  7140  002094                     u5130:
  7141  002094                     
  7142                           ; BSR set to: 0
  7143  002094  0E02               	movlw	2
  7144  002096  6171               	cpfslt	___xxtofl@exp& (0+255),b
  7145  002098  EF50  F010         	goto	u5141
  7146  00209C  EF52  F010         	goto	u5140
  7147  0020A0                     u5141:
  7148  0020A0  EF3D  F010         	goto	l6160
  7149  0020A4                     u5140:
  7150  0020A4                     l2052:
  7151                           
  7152                           ; BSR set to: 0
  7153  0020A4  B171               	btfsc	___xxtofl@exp& (0+255),0,b
  7154  0020A6  EF57  F010         	goto	u5151
  7155  0020AA  EF59  F010         	goto	u5150
  7156  0020AE                     u5151:
  7157  0020AE  EF5A  F010         	goto	l6168
  7158  0020B2                     u5150:
  7159  0020B2                     
  7160                           ; BSR set to: 0
  7161  0020B2  9F74               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  7162  0020B4                     l6168:
  7163                           
  7164                           ; BSR set to: 0
  7165  0020B4  90D8               	bcf	status,0,c
  7166  0020B6  3371               	rrcf	___xxtofl@exp& (0+255),f,b
  7167  0020B8                     
  7168                           ; BSR set to: 0
  7169  0020B8  C071  F06C         	movff	___xxtofl@exp,??___xxtofl
  7170  0020BC  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  7171  0020BE  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  7172  0020C0  6B6F               	clrf	(??___xxtofl+3)& (0+255),b
  7173  0020C2  C06C  F06F         	movff	??___xxtofl,??___xxtofl+3
  7174  0020C6  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  7175  0020C8  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  7176  0020CA  6B6C               	clrf	??___xxtofl& (0+255),b
  7177  0020CC  516C               	movf	??___xxtofl& (0+255),w,b
  7178  0020CE  1372               	iorwf	___xxtofl@arg& (0+255),f,b
  7179  0020D0  516D               	movf	(??___xxtofl+1)& (0+255),w,b
  7180  0020D2  1373               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7181  0020D4  516E               	movf	(??___xxtofl+2)& (0+255),w,b
  7182  0020D6  1374               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7183  0020D8  516F               	movf	(??___xxtofl+3)& (0+255),w,b
  7184  0020DA  1375               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7185  0020DC                     
  7186                           ; BSR set to: 0
  7187  0020DC  5170               	movf	___xxtofl@sign& (0+255),w,b
  7188  0020DE  B4D8               	btfsc	status,2,c
  7189  0020E0  EF74  F010         	goto	u5161
  7190  0020E4  EF76  F010         	goto	u5160
  7191  0020E8                     u5161:
  7192  0020E8  EF7E  F010         	goto	l6178
  7193  0020EC                     u5160:
  7194  0020EC                     
  7195                           ; BSR set to: 0
  7196  0020EC  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7197  0020EE  EF7D  F010         	goto	u5170
  7198  0020F2  EF7B  F010         	goto	u5171
  7199  0020F6                     u5171:
  7200  0020F6  EF7E  F010         	goto	l6178
  7201  0020FA                     u5170:
  7202  0020FA                     
  7203                           ; BSR set to: 0
  7204  0020FA  8F75               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7205  0020FC                     l6178:
  7206                           
  7207                           ; BSR set to: 0
  7208  0020FC  C072  F068         	movff	___xxtofl@arg,?___xxtofl
  7209  002100  C073  F069         	movff	___xxtofl@arg+1,?___xxtofl+1
  7210  002104  C074  F06A         	movff	___xxtofl@arg+2,?___xxtofl+2
  7211  002108  C075  F06B         	movff	___xxtofl@arg+3,?___xxtofl+3
  7212  00210C                     l2041:
  7213                           
  7214                           ; BSR set to: 0
  7215  00210C  0012               	return		;funcret
  7216  00210E                     __end_of___xxtofl:
  7217                           	callstack 0
  7218                           
  7219 ;; *************** function ___fltol *****************
  7220 ;; Defined at:
  7221 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  f1              4   63[BANK0 ] unsigned char 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  exp1            1   32[COMRAM] unsigned char 
  7226 ;;  sign1           1   31[COMRAM] unsigned char 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  4   63[BANK0 ] long 
  7229 ;; Registers used:
  7230 ;;		wreg, status,2, status,0
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7236 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;Total ram usage:       10 bytes
  7241 ;; Hardware stack levels used: 1
  7242 ;; Hardware stack levels required when called: 8
  7243 ;; This function calls:
  7244 ;;		Nothing
  7245 ;; This function is called by:
  7246 ;;		_calcSpeed
  7247 ;;		_calcMotorPow
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text34
  7252  00298E                     __ptext34:
  7253                           	callstack 0
  7254  00298E                     ___fltol:
  7255                           	callstack 20
  7256  00298E  0100               	movlb	0	; () banked
  7257  002990  35A1               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7258  002992  35A2               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7259  002994  6E21               	movwf	___fltol@exp1^0,c
  7260  002996  5021               	movf	___fltol@exp1^0,w,c
  7261  002998  A4D8               	btfss	status,2,c
  7262  00299A  EFD1  F014         	goto	u3381
  7263  00299E  EFD3  F014         	goto	u3380
  7264  0029A2                     u3381:
  7265  0029A2  EFDD  F014         	goto	l4824
  7266  0029A6                     u3380:
  7267  0029A6                     l4820:
  7268                           
  7269                           ; BSR set to: 0
  7270  0029A6  0E00               	movlw	0
  7271  0029A8  6F9F               	movwf	?___fltol& (0+255),b
  7272  0029AA  0E00               	movlw	0
  7273  0029AC  6FA0               	movwf	(?___fltol+1)& (0+255),b
  7274  0029AE  0E00               	movlw	0
  7275  0029B0  6FA1               	movwf	(?___fltol+2)& (0+255),b
  7276  0029B2  0E00               	movlw	0
  7277  0029B4  6FA2               	movwf	(?___fltol+3)& (0+255),b
  7278  0029B6  EF4A  F015         	goto	l1680
  7279  0029BA                     l4824:
  7280                           
  7281                           ; BSR set to: 0
  7282  0029BA  C09F  F0A3         	movff	___fltol@f1,??___fltol
  7283  0029BE  C0A0  F0A4         	movff	___fltol@f1+1,??___fltol+1
  7284  0029C2  C0A1  F0A5         	movff	___fltol@f1+2,??___fltol+2
  7285  0029C6  C0A2  F0A6         	movff	___fltol@f1+3,??___fltol+3
  7286  0029CA  0E20               	movlw	32
  7287  0029CC  EFED  F014         	goto	u3390
  7288  0029D0                     u3395:
  7289  0029D0  90D8               	bcf	status,0,c
  7290  0029D2  33A6               	rrcf	(??___fltol+3)& (0+255),f,b
  7291  0029D4  33A5               	rrcf	(??___fltol+2)& (0+255),f,b
  7292  0029D6  33A4               	rrcf	(??___fltol+1)& (0+255),f,b
  7293  0029D8  33A3               	rrcf	??___fltol& (0+255),f,b
  7294  0029DA                     u3390:
  7295  0029DA  2EE8               	decfsz	wreg,f,c
  7296  0029DC  EFE8  F014         	goto	u3395
  7297  0029E0  51A3               	movf	??___fltol& (0+255),w,b
  7298  0029E2  6E20               	movwf	___fltol@sign1^0,c
  7299  0029E4                     
  7300                           ; BSR set to: 0
  7301  0029E4  8FA1               	bsf	(___fltol@f1+2)& (0+255),7,b
  7302  0029E6                     
  7303                           ; BSR set to: 0
  7304  0029E6  0EFF               	movlw	255
  7305  0029E8  179F               	andwf	___fltol@f1& (0+255),f,b
  7306  0029EA  0EFF               	movlw	255
  7307  0029EC  17A0               	andwf	(___fltol@f1+1)& (0+255),f,b
  7308  0029EE  0EFF               	movlw	255
  7309  0029F0  17A1               	andwf	(___fltol@f1+2)& (0+255),f,b
  7310  0029F2  0E00               	movlw	0
  7311  0029F4  17A2               	andwf	(___fltol@f1+3)& (0+255),f,b
  7312  0029F6                     
  7313                           ; BSR set to: 0
  7314  0029F6  0E96               	movlw	150
  7315  0029F8  5E21               	subwf	___fltol@exp1^0,f,c
  7316  0029FA                     
  7317                           ; BSR set to: 0
  7318  0029FA  BE21               	btfsc	___fltol@exp1^0,7,c
  7319  0029FC  EF04  F015         	goto	u3400
  7320  002A00  EF02  F015         	goto	u3401
  7321  002A04                     u3401:
  7322  002A04  EF1A  F015         	goto	l4844
  7323  002A08                     u3400:
  7324  002A08                     
  7325                           ; BSR set to: 0
  7326  002A08  5021               	movf	___fltol@exp1^0,w,c
  7327  002A0A  0A80               	xorlw	128
  7328  002A0C  0F97               	addlw	151
  7329  002A0E  B0D8               	btfsc	status,0,c
  7330  002A10  EF0C  F015         	goto	u3411
  7331  002A14  EF0E  F015         	goto	u3410
  7332  002A18                     u3411:
  7333  002A18  EF10  F015         	goto	l4840
  7334  002A1C                     u3410:
  7335  002A1C  EFD3  F014         	goto	l4820
  7336  002A20                     l4840:
  7337                           
  7338                           ; BSR set to: 0
  7339  002A20  90D8               	bcf	status,0,c
  7340  002A22  33A2               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7341  002A24  33A1               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7342  002A26  33A0               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7343  002A28  339F               	rrcf	___fltol@f1& (0+255),f,b
  7344  002A2A                     
  7345                           ; BSR set to: 0
  7346  002A2A  3E21               	incfsz	___fltol@exp1^0,f,c
  7347  002A2C  EF10  F015         	goto	l4840
  7348  002A30  EF32  F015         	goto	l4854
  7349  002A34                     l4844:
  7350                           
  7351                           ; BSR set to: 0
  7352  002A34  0E1F               	movlw	31
  7353  002A36  6421               	cpfsgt	___fltol@exp1^0,c
  7354  002A38  EF20  F015         	goto	u3421
  7355  002A3C  EF22  F015         	goto	u3420
  7356  002A40                     u3421:
  7357  002A40  EF2A  F015         	goto	l4852
  7358  002A44                     u3420:
  7359  002A44  EFD3  F014         	goto	l4820
  7360  002A48                     l4850:
  7361                           
  7362                           ; BSR set to: 0
  7363  002A48  90D8               	bcf	status,0,c
  7364  002A4A  379F               	rlcf	___fltol@f1& (0+255),f,b
  7365  002A4C  37A0               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7366  002A4E  37A1               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7367  002A50  37A2               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7368  002A52  0621               	decf	___fltol@exp1^0,f,c
  7369  002A54                     l4852:
  7370                           
  7371                           ; BSR set to: 0
  7372  002A54  5021               	movf	___fltol@exp1^0,w,c
  7373  002A56  A4D8               	btfss	status,2,c
  7374  002A58  EF30  F015         	goto	u3431
  7375  002A5C  EF32  F015         	goto	u3430
  7376  002A60                     u3431:
  7377  002A60  EF24  F015         	goto	l4850
  7378  002A64                     u3430:
  7379  002A64                     l4854:
  7380                           
  7381                           ; BSR set to: 0
  7382  002A64  5020               	movf	___fltol@sign1^0,w,c
  7383  002A66  B4D8               	btfsc	status,2,c
  7384  002A68  EF38  F015         	goto	u3441
  7385  002A6C  EF3A  F015         	goto	u3440
  7386  002A70                     u3441:
  7387  002A70  EF42  F015         	goto	l4858
  7388  002A74                     u3440:
  7389  002A74                     
  7390                           ; BSR set to: 0
  7391  002A74  1FA2               	comf	(___fltol@f1+3)& (0+255),f,b
  7392  002A76  1FA1               	comf	(___fltol@f1+2)& (0+255),f,b
  7393  002A78  1FA0               	comf	(___fltol@f1+1)& (0+255),f,b
  7394  002A7A  6D9F               	negf	___fltol@f1& (0+255),b
  7395  002A7C  0E00               	movlw	0
  7396  002A7E  23A0               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7397  002A80  23A1               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7398  002A82  23A2               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7399  002A84                     l4858:
  7400                           
  7401                           ; BSR set to: 0
  7402  002A84  C09F  F09F         	movff	___fltol@f1,?___fltol
  7403  002A88  C0A0  F0A0         	movff	___fltol@f1+1,?___fltol+1
  7404  002A8C  C0A1  F0A1         	movff	___fltol@f1+2,?___fltol+2
  7405  002A90  C0A2  F0A2         	movff	___fltol@f1+3,?___fltol+3
  7406  002A94                     l1680:
  7407                           
  7408                           ; BSR set to: 0
  7409  002A94  0012               	return		;funcret
  7410  002A96                     __end_of___fltol:
  7411                           	callstack 0
  7412                           
  7413 ;; *************** function ___flmul *****************
  7414 ;; Defined at:
  7415 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  b               4   22[BANK0 ] long 
  7418 ;;  a               4   26[BANK0 ] long 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;  prod            4   41[BANK0 ] struct .
  7421 ;;  grs             4   36[BANK0 ] unsigned long 
  7422 ;;  temp            2   45[BANK0 ] struct .
  7423 ;;  bexp            1   40[BANK0 ] unsigned char 
  7424 ;;  aexp            1   35[BANK0 ] unsigned char 
  7425 ;;  sign            1   34[BANK0 ] unsigned char 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  4   22[BANK0 ] unsigned char 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0, prodl, prodh
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7435 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;Total ram usage:       25 bytes
  7440 ;; Hardware stack levels used: 1
  7441 ;; Hardware stack levels required when called: 8
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_calcSpeed
  7446 ;;		_calcMotorPow
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text35
  7451  0014E0                     __ptext35:
  7452                           	callstack 0
  7453  0014E0                     ___flmul:
  7454                           	callstack 20
  7455  0014E0  0100               	movlb	0	; () banked
  7456  0014E2  5179               	movf	(___flmul@b+3)& (0+255),w,b
  7457  0014E4  0B80               	andlw	128
  7458  0014E6  6F82               	movwf	___flmul@sign& (0+255),b
  7459  0014E8  5179               	movf	(___flmul@b+3)& (0+255),w,b
  7460  0014EA  2579               	addwf	(___flmul@b+3)& (0+255),w,b
  7461  0014EC  6F88               	movwf	___flmul@bexp& (0+255),b
  7462  0014EE                     
  7463                           ; BSR set to: 0
  7464  0014EE  AF78               	btfss	(___flmul@b+2)& (0+255),7,b
  7465  0014F0  EF7C  F00A         	goto	u4841
  7466  0014F4  EF7E  F00A         	goto	u4840
  7467  0014F8                     u4841:
  7468  0014F8  EF7F  F00A         	goto	l5990
  7469  0014FC                     u4840:
  7470  0014FC                     
  7471                           ; BSR set to: 0
  7472  0014FC  8188               	bsf	___flmul@bexp& (0+255),0,b
  7473  0014FE                     l5990:
  7474                           
  7475                           ; BSR set to: 0
  7476  0014FE  5188               	movf	___flmul@bexp& (0+255),w,b
  7477  001500  B4D8               	btfsc	status,2,c
  7478  001502  EF85  F00A         	goto	u4851
  7479  001506  EF87  F00A         	goto	u4850
  7480  00150A                     u4851:
  7481  00150A  EF9A  F00A         	goto	l5998
  7482  00150E                     u4850:
  7483  00150E                     
  7484                           ; BSR set to: 0
  7485  00150E  2988               	incf	___flmul@bexp& (0+255),w,b
  7486  001510  A4D8               	btfss	status,2,c
  7487  001512  EF8D  F00A         	goto	u4861
  7488  001516  EF8F  F00A         	goto	u4860
  7489  00151A                     u4861:
  7490  00151A  EF97  F00A         	goto	l5996
  7491  00151E                     u4860:
  7492  00151E                     
  7493                           ; BSR set to: 0
  7494  00151E  0E00               	movlw	0
  7495  001520  6F76               	movwf	___flmul@b& (0+255),b
  7496  001522  0E00               	movlw	0
  7497  001524  6F77               	movwf	(___flmul@b+1)& (0+255),b
  7498  001526  0E00               	movlw	0
  7499  001528  6F78               	movwf	(___flmul@b+2)& (0+255),b
  7500  00152A  0E00               	movlw	0
  7501  00152C  6F79               	movwf	(___flmul@b+3)& (0+255),b
  7502  00152E                     l5996:
  7503                           
  7504                           ; BSR set to: 0
  7505  00152E  8F78               	bsf	(___flmul@b+2)& (0+255),7,b
  7506  001530  EFA2  F00A         	goto	l6000
  7507  001534                     l5998:
  7508                           
  7509                           ; BSR set to: 0
  7510  001534  0E00               	movlw	0
  7511  001536  6F76               	movwf	___flmul@b& (0+255),b
  7512  001538  0E00               	movlw	0
  7513  00153A  6F77               	movwf	(___flmul@b+1)& (0+255),b
  7514  00153C  0E00               	movlw	0
  7515  00153E  6F78               	movwf	(___flmul@b+2)& (0+255),b
  7516  001540  0E00               	movlw	0
  7517  001542  6F79               	movwf	(___flmul@b+3)& (0+255),b
  7518  001544                     l6000:
  7519                           
  7520                           ; BSR set to: 0
  7521  001544  517D               	movf	(___flmul@a+3)& (0+255),w,b
  7522  001546  0B80               	andlw	128
  7523  001548  1B82               	xorwf	___flmul@sign& (0+255),f,b
  7524  00154A                     
  7525                           ; BSR set to: 0
  7526  00154A  517D               	movf	(___flmul@a+3)& (0+255),w,b
  7527  00154C  257D               	addwf	(___flmul@a+3)& (0+255),w,b
  7528  00154E  6F83               	movwf	___flmul@aexp& (0+255),b
  7529  001550                     
  7530                           ; BSR set to: 0
  7531  001550  AF7C               	btfss	(___flmul@a+2)& (0+255),7,b
  7532  001552  EFAD  F00A         	goto	u4871
  7533  001556  EFAF  F00A         	goto	u4870
  7534  00155A                     u4871:
  7535  00155A  EFB0  F00A         	goto	l6008
  7536  00155E                     u4870:
  7537  00155E                     
  7538                           ; BSR set to: 0
  7539  00155E  8183               	bsf	___flmul@aexp& (0+255),0,b
  7540  001560                     l6008:
  7541                           
  7542                           ; BSR set to: 0
  7543  001560  5183               	movf	___flmul@aexp& (0+255),w,b
  7544  001562  B4D8               	btfsc	status,2,c
  7545  001564  EFB6  F00A         	goto	u4881
  7546  001568  EFB8  F00A         	goto	u4880
  7547  00156C                     u4881:
  7548  00156C  EFCB  F00A         	goto	l6016
  7549  001570                     u4880:
  7550  001570                     
  7551                           ; BSR set to: 0
  7552  001570  2983               	incf	___flmul@aexp& (0+255),w,b
  7553  001572  A4D8               	btfss	status,2,c
  7554  001574  EFBE  F00A         	goto	u4891
  7555  001578  EFC0  F00A         	goto	u4890
  7556  00157C                     u4891:
  7557  00157C  EFC8  F00A         	goto	l6014
  7558  001580                     u4890:
  7559  001580                     
  7560                           ; BSR set to: 0
  7561  001580  0E00               	movlw	0
  7562  001582  6F7A               	movwf	___flmul@a& (0+255),b
  7563  001584  0E00               	movlw	0
  7564  001586  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  7565  001588  0E00               	movlw	0
  7566  00158A  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  7567  00158C  0E00               	movlw	0
  7568  00158E  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  7569  001590                     l6014:
  7570                           
  7571                           ; BSR set to: 0
  7572  001590  8F7C               	bsf	(___flmul@a+2)& (0+255),7,b
  7573  001592  EFD3  F00A         	goto	l1997
  7574  001596                     l6016:
  7575                           
  7576                           ; BSR set to: 0
  7577  001596  0E00               	movlw	0
  7578  001598  6F7A               	movwf	___flmul@a& (0+255),b
  7579  00159A  0E00               	movlw	0
  7580  00159C  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  7581  00159E  0E00               	movlw	0
  7582  0015A0  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  7583  0015A2  0E00               	movlw	0
  7584  0015A4  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  7585  0015A6                     l1997:
  7586                           
  7587                           ; BSR set to: 0
  7588  0015A6  5183               	movf	___flmul@aexp& (0+255),w,b
  7589  0015A8  B4D8               	btfsc	status,2,c
  7590  0015AA  EFD9  F00A         	goto	u4901
  7591  0015AE  EFDB  F00A         	goto	u4900
  7592  0015B2                     u4901:
  7593  0015B2  EFE3  F00A         	goto	l6020
  7594  0015B6                     u4900:
  7595  0015B6                     
  7596                           ; BSR set to: 0
  7597  0015B6  5188               	movf	___flmul@bexp& (0+255),w,b
  7598  0015B8  A4D8               	btfss	status,2,c
  7599  0015BA  EFE1  F00A         	goto	u4911
  7600  0015BE  EFE3  F00A         	goto	u4910
  7601  0015C2                     u4911:
  7602  0015C2  EFED  F00A         	goto	l6024
  7603  0015C6                     u4910:
  7604  0015C6                     l6020:
  7605                           
  7606                           ; BSR set to: 0
  7607  0015C6  0E00               	movlw	0
  7608  0015C8  6F76               	movwf	?___flmul& (0+255),b
  7609  0015CA  0E00               	movlw	0
  7610  0015CC  6F77               	movwf	(?___flmul+1)& (0+255),b
  7611  0015CE  0E00               	movlw	0
  7612  0015D0  6F78               	movwf	(?___flmul+2)& (0+255),b
  7613  0015D2  0E00               	movlw	0
  7614  0015D4  6F79               	movwf	(?___flmul+3)& (0+255),b
  7615  0015D6  EF97  F00C         	goto	l2001
  7616  0015DA                     l6024:
  7617                           
  7618                           ; BSR set to: 0
  7619  0015DA  517C               	movf	(___flmul@a+2)& (0+255),w,b
  7620  0015DC  0376               	mulwf	___flmul@b& (0+255),b
  7621  0015DE  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7622  0015E4  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7623  0015EA                     
  7624                           ; BSR set to: 0
  7625  0015EA  518D               	movf	___flmul@temp& (0+255),w,b
  7626  0015EC  6F84               	movwf	___flmul@grs& (0+255),b
  7627  0015EE  6B85               	clrf	(___flmul@grs+1)& (0+255),b
  7628  0015F0  6B86               	clrf	(___flmul@grs+2)& (0+255),b
  7629  0015F2  6B87               	clrf	(___flmul@grs+3)& (0+255),b
  7630  0015F4                     
  7631                           ; BSR set to: 0
  7632  0015F4  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7633  0015F6  6F89               	movwf	___flmul@prod& (0+255),b
  7634  0015F8  6B8A               	clrf	(___flmul@prod+1)& (0+255),b
  7635  0015FA  6B8B               	clrf	(___flmul@prod+2)& (0+255),b
  7636  0015FC  6B8C               	clrf	(___flmul@prod+3)& (0+255),b
  7637  0015FE  517B               	movf	(___flmul@a+1)& (0+255),w,b
  7638  001600  0377               	mulwf	(___flmul@b+1)& (0+255),b
  7639  001602  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7640  001608  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7641  00160E                     
  7642                           ; BSR set to: 0
  7643  00160E  518D               	movf	___flmul@temp& (0+255),w,b
  7644  001610  2784               	addwf	___flmul@grs& (0+255),f,b
  7645  001612  0E00               	movlw	0
  7646  001614  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7647  001616  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7648  001618  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7649  00161A                     
  7650                           ; BSR set to: 0
  7651  00161A  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7652  00161C  2789               	addwf	___flmul@prod& (0+255),f,b
  7653  00161E  0E00               	movlw	0
  7654  001620  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7655  001622  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7656  001624  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7657  001626  517A               	movf	___flmul@a& (0+255),w,b
  7658  001628  0378               	mulwf	(___flmul@b+2)& (0+255),b
  7659  00162A  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7660  001630  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7661  001636                     
  7662                           ; BSR set to: 0
  7663  001636  518D               	movf	___flmul@temp& (0+255),w,b
  7664  001638  2784               	addwf	___flmul@grs& (0+255),f,b
  7665  00163A  0E00               	movlw	0
  7666  00163C  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7667  00163E  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7668  001640  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7669  001642                     
  7670                           ; BSR set to: 0
  7671  001642  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7672  001644  2789               	addwf	___flmul@prod& (0+255),f,b
  7673  001646  0E00               	movlw	0
  7674  001648  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7675  00164A  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7676  00164C  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7677  00164E                     
  7678                           ; BSR set to: 0
  7679  00164E  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  7680  001652  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  7681  001656  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  7682  00165A  6B84               	clrf	___flmul@grs& (0+255),b
  7683  00165C                     
  7684                           ; BSR set to: 0
  7685  00165C  517A               	movf	___flmul@a& (0+255),w,b
  7686  00165E  0377               	mulwf	(___flmul@b+1)& (0+255),b
  7687  001660  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7688  001666  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7689  00166C                     
  7690                           ; BSR set to: 0
  7691  00166C  518D               	movf	___flmul@temp& (0+255),w,b
  7692  00166E  2784               	addwf	___flmul@grs& (0+255),f,b
  7693  001670  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7694  001672  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7695  001674  0E00               	movlw	0
  7696  001676  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7697  001678  0E00               	movlw	0
  7698  00167A  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7699  00167C                     
  7700                           ; BSR set to: 0
  7701  00167C  517B               	movf	(___flmul@a+1)& (0+255),w,b
  7702  00167E  0376               	mulwf	___flmul@b& (0+255),b
  7703  001680  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7704  001686  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7705  00168C                     
  7706                           ; BSR set to: 0
  7707  00168C  518D               	movf	___flmul@temp& (0+255),w,b
  7708  00168E  2784               	addwf	___flmul@grs& (0+255),f,b
  7709  001690  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7710  001692  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7711  001694  0E00               	movlw	0
  7712  001696  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7713  001698  0E00               	movlw	0
  7714  00169A  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7715  00169C                     
  7716                           ; BSR set to: 0
  7717  00169C  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  7718  0016A0  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  7719  0016A4  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  7720  0016A8  6B84               	clrf	___flmul@grs& (0+255),b
  7721  0016AA  517A               	movf	___flmul@a& (0+255),w,b
  7722  0016AC  0376               	mulwf	___flmul@b& (0+255),b
  7723  0016AE  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7724  0016B4  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7725  0016BA                     
  7726                           ; BSR set to: 0
  7727  0016BA  518D               	movf	___flmul@temp& (0+255),w,b
  7728  0016BC  2784               	addwf	___flmul@grs& (0+255),f,b
  7729  0016BE  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7730  0016C0  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7731  0016C2  0E00               	movlw	0
  7732  0016C4  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7733  0016C6  0E00               	movlw	0
  7734  0016C8  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7735  0016CA                     
  7736                           ; BSR set to: 0
  7737  0016CA  517C               	movf	(___flmul@a+2)& (0+255),w,b
  7738  0016CC  0377               	mulwf	(___flmul@b+1)& (0+255),b
  7739  0016CE  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7740  0016D4  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7741  0016DA  518D               	movf	___flmul@temp& (0+255),w,b
  7742  0016DC  2789               	addwf	___flmul@prod& (0+255),f,b
  7743  0016DE  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7744  0016E0  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7745  0016E2  0E00               	movlw	0
  7746  0016E4  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7747  0016E6  0E00               	movlw	0
  7748  0016E8  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7749  0016EA                     
  7750                           ; BSR set to: 0
  7751  0016EA  517B               	movf	(___flmul@a+1)& (0+255),w,b
  7752  0016EC  0378               	mulwf	(___flmul@b+2)& (0+255),b
  7753  0016EE  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7754  0016F4  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7755  0016FA                     
  7756                           ; BSR set to: 0
  7757  0016FA  518D               	movf	___flmul@temp& (0+255),w,b
  7758  0016FC  2789               	addwf	___flmul@prod& (0+255),f,b
  7759  0016FE  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7760  001700  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7761  001702  0E00               	movlw	0
  7762  001704  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7763  001706  0E00               	movlw	0
  7764  001708  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7765  00170A  517C               	movf	(___flmul@a+2)& (0+255),w,b
  7766  00170C  0378               	mulwf	(___flmul@b+2)& (0+255),b
  7767  00170E  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7768  001714  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7769  00171A                     
  7770                           ; BSR set to: 0
  7771  00171A  518D               	movf	___flmul@temp& (0+255),w,b
  7772  00171C  6F7E               	movwf	??___flmul& (0+255),b
  7773  00171E  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7774  001720  6F7F               	movwf	(??___flmul+1)& (0+255),b
  7775  001722  6B80               	clrf	(??___flmul+2)& (0+255),b
  7776  001724  6B81               	clrf	(??___flmul+3)& (0+255),b
  7777  001726  C080  F081         	movff	??___flmul+2,??___flmul+3
  7778  00172A  C07F  F080         	movff	??___flmul+1,??___flmul+2
  7779  00172E  C07E  F07F         	movff	??___flmul,??___flmul+1
  7780  001732  6B7E               	clrf	??___flmul& (0+255),b
  7781  001734  517E               	movf	??___flmul& (0+255),w,b
  7782  001736  2789               	addwf	___flmul@prod& (0+255),f,b
  7783  001738  517F               	movf	(??___flmul+1)& (0+255),w,b
  7784  00173A  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7785  00173C  5180               	movf	(??___flmul+2)& (0+255),w,b
  7786  00173E  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7787  001740  5181               	movf	(??___flmul+3)& (0+255),w,b
  7788  001742  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7789  001744                     
  7790                           ; BSR set to: 0
  7791  001744  C084  F07E         	movff	___flmul@grs,??___flmul
  7792  001748  C085  F07F         	movff	___flmul@grs+1,??___flmul+1
  7793  00174C  C086  F080         	movff	___flmul@grs+2,??___flmul+2
  7794  001750  C087  F081         	movff	___flmul@grs+3,??___flmul+3
  7795  001754  0E19               	movlw	25
  7796  001756  EFB2  F00B         	goto	u4920
  7797  00175A                     u4925:
  7798  00175A  90D8               	bcf	status,0,c
  7799  00175C  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  7800  00175E  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  7801  001760  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  7802  001762  337E               	rrcf	??___flmul& (0+255),f,b
  7803  001764                     u4920:
  7804  001764  2EE8               	decfsz	wreg,f,c
  7805  001766  EFAD  F00B         	goto	u4925
  7806  00176A  517E               	movf	??___flmul& (0+255),w,b
  7807  00176C  2789               	addwf	___flmul@prod& (0+255),f,b
  7808  00176E  517F               	movf	(??___flmul+1)& (0+255),w,b
  7809  001770  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7810  001772  5180               	movf	(??___flmul+2)& (0+255),w,b
  7811  001774  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7812  001776  5181               	movf	(??___flmul+3)& (0+255),w,b
  7813  001778  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7814  00177A                     
  7815                           ; BSR set to: 0
  7816  00177A  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  7817  00177E  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  7818  001782  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  7819  001786  6B84               	clrf	___flmul@grs& (0+255),b
  7820  001788                     
  7821                           ; BSR set to: 0
  7822  001788  5183               	movf	___flmul@aexp& (0+255),w,b
  7823  00178A  C088  F07E         	movff	___flmul@bexp,??___flmul
  7824  00178E  6B7F               	clrf	(??___flmul+1)& (0+255),b
  7825  001790  277E               	addwf	??___flmul& (0+255),f,b
  7826  001792  0E00               	movlw	0
  7827  001794  237F               	addwfc	(??___flmul+1)& (0+255),f,b
  7828  001796  0E82               	movlw	130
  7829  001798  257E               	addwf	??___flmul& (0+255),w,b
  7830  00179A  6F8D               	movwf	___flmul@temp& (0+255),b
  7831  00179C  0EFF               	movlw	255
  7832  00179E  217F               	addwfc	(??___flmul+1)& (0+255),w,b
  7833  0017A0  6F8E               	movwf	(___flmul@temp+1)& (0+255),b
  7834  0017A2  EFE8  F00B         	goto	l6072
  7835  0017A6                     l6066:
  7836                           
  7837                           ; BSR set to: 0
  7838  0017A6  90D8               	bcf	status,0,c
  7839  0017A8  3789               	rlcf	___flmul@prod& (0+255),f,b
  7840  0017AA  378A               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7841  0017AC  378B               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7842  0017AE  378C               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7843  0017B0                     
  7844                           ; BSR set to: 0
  7845  0017B0  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  7846  0017B2  EFDD  F00B         	goto	u4931
  7847  0017B6  EFDF  F00B         	goto	u4930
  7848  0017BA                     u4931:
  7849  0017BA  EFE0  F00B         	goto	l2004
  7850  0017BE                     u4930:
  7851  0017BE                     
  7852                           ; BSR set to: 0
  7853  0017BE  8189               	bsf	___flmul@prod& (0+255),0,b
  7854  0017C0                     l2004:
  7855                           
  7856                           ; BSR set to: 0
  7857  0017C0  90D8               	bcf	status,0,c
  7858  0017C2  3784               	rlcf	___flmul@grs& (0+255),f,b
  7859  0017C4  3785               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7860  0017C6  3786               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7861  0017C8  3787               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7862  0017CA  078D               	decf	___flmul@temp& (0+255),f,b
  7863  0017CC  A0D8               	btfss	status,0,c
  7864  0017CE  078E               	decf	(___flmul@temp+1)& (0+255),f,b
  7865  0017D0                     l6072:
  7866                           
  7867                           ; BSR set to: 0
  7868  0017D0  AF8B               	btfss	(___flmul@prod+2)& (0+255),7,b
  7869  0017D2  EFED  F00B         	goto	u4941
  7870  0017D6  EFEF  F00B         	goto	u4940
  7871  0017DA                     u4941:
  7872  0017DA  EFD3  F00B         	goto	l6066
  7873  0017DE                     u4940:
  7874  0017DE                     
  7875                           ; BSR set to: 0
  7876  0017DE  0E00               	movlw	0
  7877  0017E0  6F83               	movwf	___flmul@aexp& (0+255),b
  7878  0017E2                     
  7879                           ; BSR set to: 0
  7880  0017E2  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  7881  0017E4  EFF6  F00B         	goto	u4951
  7882  0017E8  EFF8  F00B         	goto	u4950
  7883  0017EC                     u4951:
  7884  0017EC  EF1C  F00C         	goto	l2006
  7885  0017F0                     u4950:
  7886  0017F0                     
  7887                           ; BSR set to: 0
  7888  0017F0  0EFF               	movlw	255
  7889  0017F2  1584               	andwf	___flmul@grs& (0+255),w,b
  7890  0017F4  6F7E               	movwf	??___flmul& (0+255),b
  7891  0017F6  0EFF               	movlw	255
  7892  0017F8  1585               	andwf	(___flmul@grs+1)& (0+255),w,b
  7893  0017FA  6F7F               	movwf	(??___flmul+1)& (0+255),b
  7894  0017FC  0EFF               	movlw	255
  7895  0017FE  1586               	andwf	(___flmul@grs+2)& (0+255),w,b
  7896  001800  6F80               	movwf	(??___flmul+2)& (0+255),b
  7897  001802  0E7F               	movlw	127
  7898  001804  1587               	andwf	(___flmul@grs+3)& (0+255),w,b
  7899  001806  6F81               	movwf	(??___flmul+3)& (0+255),b
  7900  001808  517E               	movf	??___flmul& (0+255),w,b
  7901  00180A  117F               	iorwf	(??___flmul+1)& (0+255),w,b
  7902  00180C  1180               	iorwf	(??___flmul+2)& (0+255),w,b
  7903  00180E  1181               	iorwf	(??___flmul+3)& (0+255),w,b
  7904  001810  B4D8               	btfsc	status,2,c
  7905  001812  EF0D  F00C         	goto	u4961
  7906  001816  EF0F  F00C         	goto	u4960
  7907  00181A                     u4961:
  7908  00181A  EF13  F00C         	goto	l2007
  7909  00181E                     u4960:
  7910  00181E                     l6080:
  7911                           
  7912                           ; BSR set to: 0
  7913  00181E  0E01               	movlw	1
  7914  001820  6F83               	movwf	___flmul@aexp& (0+255),b
  7915  001822  EF1C  F00C         	goto	l2006
  7916  001826                     l2007:
  7917                           
  7918                           ; BSR set to: 0
  7919  001826  A189               	btfss	___flmul@prod& (0+255),0,b
  7920  001828  EF18  F00C         	goto	u4971
  7921  00182C  EF1A  F00C         	goto	u4970
  7922  001830                     u4971:
  7923  001830  EF1C  F00C         	goto	l2006
  7924  001834                     u4970:
  7925  001834  EF0F  F00C         	goto	l6080
  7926  001838                     l2006:
  7927                           
  7928                           ; BSR set to: 0
  7929  001838  5183               	movf	___flmul@aexp& (0+255),w,b
  7930  00183A  B4D8               	btfsc	status,2,c
  7931  00183C  EF22  F00C         	goto	u4981
  7932  001840  EF24  F00C         	goto	u4980
  7933  001844                     u4981:
  7934  001844  EF48  F00C         	goto	l6092
  7935  001848                     u4980:
  7936  001848                     
  7937                           ; BSR set to: 0
  7938  001848  0E01               	movlw	1
  7939  00184A  2789               	addwf	___flmul@prod& (0+255),f,b
  7940  00184C  0E00               	movlw	0
  7941  00184E  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7942  001850  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7943  001852  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7944  001854                     
  7945                           ; BSR set to: 0
  7946  001854  A18C               	btfss	(___flmul@prod+3)& (0+255),0,b
  7947  001856  EF2F  F00C         	goto	u4991
  7948  00185A  EF31  F00C         	goto	u4990
  7949  00185E                     u4991:
  7950  00185E  EF48  F00C         	goto	l6092
  7951  001862                     u4990:
  7952  001862                     
  7953                           ; BSR set to: 0
  7954  001862  C089  F07E         	movff	___flmul@prod,??___flmul
  7955  001866  C08A  F07F         	movff	___flmul@prod+1,??___flmul+1
  7956  00186A  C08B  F080         	movff	___flmul@prod+2,??___flmul+2
  7957  00186E  C08C  F081         	movff	___flmul@prod+3,??___flmul+3
  7958  001872  3581               	rlcf	(??___flmul+3)& (0+255),w,b
  7959  001874  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  7960  001876  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  7961  001878  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  7962  00187A  337E               	rrcf	??___flmul& (0+255),f,b
  7963  00187C  C07E  F089         	movff	??___flmul,___flmul@prod
  7964  001880  C07F  F08A         	movff	??___flmul+1,___flmul@prod+1
  7965  001884  C080  F08B         	movff	??___flmul+2,___flmul@prod+2
  7966  001888  C081  F08C         	movff	??___flmul+3,___flmul@prod+3
  7967  00188C                     
  7968                           ; BSR set to: 0
  7969  00188C  4B8D               	infsnz	___flmul@temp& (0+255),f,b
  7970  00188E  2B8E               	incf	(___flmul@temp+1)& (0+255),f,b
  7971  001890                     l6092:
  7972                           
  7973                           ; BSR set to: 0
  7974  001890  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7975  001892  EF53  F00C         	goto	u5001
  7976  001896  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7977  001898  E108               	bnz	u5000
  7978  00189A  298D               	incf	___flmul@temp& (0+255),w,b
  7979  00189C  A0D8               	btfss	status,0,c
  7980  00189E  EF53  F00C         	goto	u5001
  7981  0018A2  EF55  F00C         	goto	u5000
  7982  0018A6                     u5001:
  7983  0018A6  EF5F  F00C         	goto	l6096
  7984  0018AA                     u5000:
  7985  0018AA                     
  7986                           ; BSR set to: 0
  7987  0018AA  0E00               	movlw	0
  7988  0018AC  6F89               	movwf	___flmul@prod& (0+255),b
  7989  0018AE  0E00               	movlw	0
  7990  0018B0  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  7991  0018B2  0E80               	movlw	128
  7992  0018B4  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  7993  0018B6  0E7F               	movlw	127
  7994  0018B8  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  7995  0018BA  EF8D  F00C         	goto	l6108
  7996  0018BE                     l6096:
  7997                           
  7998                           ; BSR set to: 0
  7999  0018BE  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8000  0018C0  EF6C  F00C         	goto	u5010
  8001  0018C4  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8002  0018C6  E106               	bnz	u5011
  8003  0018C8  058D               	decf	___flmul@temp& (0+255),w,b
  8004  0018CA  B0D8               	btfsc	status,0,c
  8005  0018CC  EF6A  F00C         	goto	u5011
  8006  0018D0  EF6C  F00C         	goto	u5010
  8007  0018D4                     u5011:
  8008  0018D4  EF78  F00C         	goto	l2014
  8009  0018D8                     u5010:
  8010  0018D8                     
  8011                           ; BSR set to: 0
  8012  0018D8  0E00               	movlw	0
  8013  0018DA  6F89               	movwf	___flmul@prod& (0+255),b
  8014  0018DC  0E00               	movlw	0
  8015  0018DE  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8016  0018E0  0E00               	movlw	0
  8017  0018E2  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8018  0018E4  0E00               	movlw	0
  8019  0018E6  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8020  0018E8  0E00               	movlw	0
  8021  0018EA  6F82               	movwf	___flmul@sign& (0+255),b
  8022  0018EC  EF8D  F00C         	goto	l6108
  8023  0018F0                     l2014:
  8024                           
  8025                           ; BSR set to: 0
  8026  0018F0  C08D  F088         	movff	___flmul@temp,___flmul@bexp
  8027  0018F4                     
  8028                           ; BSR set to: 0
  8029  0018F4  0EFF               	movlw	255
  8030  0018F6  1789               	andwf	___flmul@prod& (0+255),f,b
  8031  0018F8  0EFF               	movlw	255
  8032  0018FA  178A               	andwf	(___flmul@prod+1)& (0+255),f,b
  8033  0018FC  0E7F               	movlw	127
  8034  0018FE  178B               	andwf	(___flmul@prod+2)& (0+255),f,b
  8035  001900  0E00               	movlw	0
  8036  001902  178C               	andwf	(___flmul@prod+3)& (0+255),f,b
  8037  001904                     
  8038                           ; BSR set to: 0
  8039  001904  A188               	btfss	___flmul@bexp& (0+255),0,b
  8040  001906  EF87  F00C         	goto	u5021
  8041  00190A  EF89  F00C         	goto	u5020
  8042  00190E                     u5021:
  8043  00190E  EF8A  F00C         	goto	l6106
  8044  001912                     u5020:
  8045  001912                     
  8046                           ; BSR set to: 0
  8047  001912  8F8B               	bsf	(___flmul@prod+2)& (0+255),7,b
  8048  001914                     l6106:
  8049                           
  8050                           ; BSR set to: 0
  8051  001914  90D8               	bcf	status,0,c
  8052  001916  3188               	rrcf	___flmul@bexp& (0+255),w,b
  8053  001918  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8054  00191A                     l6108:
  8055                           
  8056                           ; BSR set to: 0
  8057  00191A  5182               	movf	___flmul@sign& (0+255),w,b
  8058  00191C  138C               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8059  00191E                     
  8060                           ; BSR set to: 0
  8061  00191E  C089  F076         	movff	___flmul@prod,?___flmul
  8062  001922  C08A  F077         	movff	___flmul@prod+1,?___flmul+1
  8063  001926  C08B  F078         	movff	___flmul@prod+2,?___flmul+2
  8064  00192A  C08C  F079         	movff	___flmul@prod+3,?___flmul+3
  8065  00192E                     l2001:
  8066                           
  8067                           ; BSR set to: 0
  8068  00192E  0012               	return		;funcret
  8069  001930                     __end_of___flmul:
  8070                           	callstack 0
  8071                           
  8072 ;; *************** function ___awdiv *****************
  8073 ;; Defined at:
  8074 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  dividend        2    0[BANK0 ] int 
  8077 ;;  divisor         2    2[BANK0 ] int 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  quotient        2    6[BANK0 ] int 
  8080 ;;  sign            1    5[BANK0 ] unsigned char 
  8081 ;;  counter         1    4[BANK0 ] unsigned char 
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  2    0[BANK0 ] int 
  8084 ;; Registers used:
  8085 ;;		wreg, status,2, status,0
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8094 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8095 ;;Total ram usage:        8 bytes
  8096 ;; Hardware stack levels used: 1
  8097 ;; Hardware stack levels required when called: 8
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_calcMotorPow
  8102 ;;		_setSteering
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text36
  8107  002FD8                     __ptext36:
  8108                           	callstack 0
  8109  002FD8                     ___awdiv:
  8110                           	callstack 19
  8111  002FD8  0E00               	movlw	0
  8112  002FDA  0100               	movlb	0	; () banked
  8113  002FDC  6F65               	movwf	___awdiv@sign& (0+255),b
  8114  002FDE                     
  8115                           ; BSR set to: 0
  8116  002FDE  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  8117  002FE0  EFF6  F017         	goto	u4680
  8118  002FE4  EFF4  F017         	goto	u4681
  8119  002FE8                     u4681:
  8120  002FE8  EFFC  F017         	goto	l5866
  8121  002FEC                     u4680:
  8122  002FEC                     
  8123                           ; BSR set to: 0
  8124  002FEC  6D62               	negf	___awdiv@divisor& (0+255),b
  8125  002FEE  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8126  002FF0  B0D8               	btfsc	status,0,c
  8127  002FF2  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8128  002FF4                     
  8129                           ; BSR set to: 0
  8130  002FF4  0E01               	movlw	1
  8131  002FF6  6F65               	movwf	___awdiv@sign& (0+255),b
  8132  002FF8                     l5866:
  8133                           
  8134                           ; BSR set to: 0
  8135  002FF8  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  8136  002FFA  EF03  F018         	goto	u4690
  8137  002FFE  EF01  F018         	goto	u4691
  8138  003002                     u4691:
  8139  003002  EF09  F018         	goto	l5872
  8140  003006                     u4690:
  8141  003006                     
  8142                           ; BSR set to: 0
  8143  003006  6D60               	negf	___awdiv@dividend& (0+255),b
  8144  003008  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8145  00300A  B0D8               	btfsc	status,0,c
  8146  00300C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8147  00300E                     
  8148                           ; BSR set to: 0
  8149  00300E  0E01               	movlw	1
  8150  003010  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8151  003012                     l5872:
  8152                           
  8153                           ; BSR set to: 0
  8154  003012  0E00               	movlw	0
  8155  003014  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8156  003016  0E00               	movlw	0
  8157  003018  6F66               	movwf	___awdiv@quotient& (0+255),b
  8158  00301A                     
  8159                           ; BSR set to: 0
  8160  00301A  5162               	movf	___awdiv@divisor& (0+255),w,b
  8161  00301C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8162  00301E  B4D8               	btfsc	status,2,c
  8163  003020  EF14  F018         	goto	u4701
  8164  003024  EF16  F018         	goto	u4700
  8165  003028                     u4701:
  8166  003028  EF3E  F018         	goto	l5894
  8167  00302C                     u4700:
  8168  00302C                     
  8169                           ; BSR set to: 0
  8170  00302C  0E01               	movlw	1
  8171  00302E  6F64               	movwf	___awdiv@counter& (0+255),b
  8172  003030  EF1E  F018         	goto	l5880
  8173  003034                     l5878:
  8174                           
  8175                           ; BSR set to: 0
  8176  003034  90D8               	bcf	status,0,c
  8177  003036  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8178  003038  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8179  00303A  2B64               	incf	___awdiv@counter& (0+255),f,b
  8180  00303C                     l5880:
  8181                           
  8182                           ; BSR set to: 0
  8183  00303C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8184  00303E  EF23  F018         	goto	u4711
  8185  003042  EF25  F018         	goto	u4710
  8186  003046                     u4711:
  8187  003046  EF1A  F018         	goto	l5878
  8188  00304A                     u4710:
  8189  00304A                     l5882:
  8190                           
  8191                           ; BSR set to: 0
  8192  00304A  90D8               	bcf	status,0,c
  8193  00304C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8194  00304E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8195  003050                     
  8196                           ; BSR set to: 0
  8197  003050  5162               	movf	___awdiv@divisor& (0+255),w,b
  8198  003052  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8199  003054  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8200  003056  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8201  003058  A0D8               	btfss	status,0,c
  8202  00305A  EF31  F018         	goto	u4721
  8203  00305E  EF33  F018         	goto	u4720
  8204  003062                     u4721:
  8205  003062  EF38  F018         	goto	l5890
  8206  003066                     u4720:
  8207  003066                     
  8208                           ; BSR set to: 0
  8209  003066  5162               	movf	___awdiv@divisor& (0+255),w,b
  8210  003068  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8211  00306A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8212  00306C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8213  00306E                     
  8214                           ; BSR set to: 0
  8215  00306E  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8216  003070                     l5890:
  8217                           
  8218                           ; BSR set to: 0
  8219  003070  90D8               	bcf	status,0,c
  8220  003072  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8221  003074  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8222  003076                     
  8223                           ; BSR set to: 0
  8224  003076  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8225  003078  EF25  F018         	goto	l5882
  8226  00307C                     l5894:
  8227                           
  8228                           ; BSR set to: 0
  8229  00307C  5165               	movf	___awdiv@sign& (0+255),w,b
  8230  00307E  B4D8               	btfsc	status,2,c
  8231  003080  EF44  F018         	goto	u4731
  8232  003084  EF46  F018         	goto	u4730
  8233  003088                     u4731:
  8234  003088  EF4A  F018         	goto	l5898
  8235  00308C                     u4730:
  8236  00308C                     
  8237                           ; BSR set to: 0
  8238  00308C  6D66               	negf	___awdiv@quotient& (0+255),b
  8239  00308E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8240  003090  B0D8               	btfsc	status,0,c
  8241  003092  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8242  003094                     l5898:
  8243                           
  8244                           ; BSR set to: 0
  8245  003094  C066  F060         	movff	___awdiv@quotient,?___awdiv
  8246  003098  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  8247  00309C                     
  8248                           ; BSR set to: 0
  8249  00309C  0012               	return		;funcret
  8250  00309E                     __end_of___awdiv:
  8251                           	callstack 0
  8252                           
  8253 ;; *************** function _SYSTEM_Initialize *****************
  8254 ;; Defined at:
  8255 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;		None
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      void 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;Total ram usage:        0 bytes
  8274 ;; Hardware stack levels used: 1
  8275 ;; Hardware stack levels required when called: 10
  8276 ;; This function calls:
  8277 ;;		_ADCC_Initialize
  8278 ;;		_CCP3_Initialize
  8279 ;;		_CCP4_Initialize
  8280 ;;		_CLC3_Initialize
  8281 ;;		_INTERRUPT_Initialize
  8282 ;;		_OSCILLATOR_Initialize
  8283 ;;		_PIN_MANAGER_Initialize
  8284 ;;		_PMD_Initialize
  8285 ;;		_PWM5_Initialize
  8286 ;;		_PWM6_Initialize
  8287 ;;		_PWM7_Initialize
  8288 ;;		_PWM8_Initialize
  8289 ;;		_SMT1_Initialize
  8290 ;;		_TMR2_Initialize
  8291 ;;		_TMR3_Initialize
  8292 ;;		_TMR4_Initialize
  8293 ;;		_TMR5_Initialize
  8294 ;;		_UART1_Initialize
  8295 ;; This function is called by:
  8296 ;;		_main
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text37
  8301  0037D8                     __ptext37:
  8302                           	callstack 0
  8303  0037D8                     _SYSTEM_Initialize:
  8304                           	callstack 20
  8305  0037D8                     
  8306                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8307  0037D8  EC7A  F01B         	call	_INTERRUPT_Initialize	;wreg free
  8308                           
  8309                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8310  0037DC  ECE7  F01E         	call	_PMD_Initialize	;wreg free
  8311                           
  8312                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8313  0037E0  EC23  F017         	call	_PIN_MANAGER_Initialize	;wreg free
  8314                           
  8315                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8316  0037E4  EC68  F01F         	call	_OSCILLATOR_Initialize	;wreg free
  8317  0037E8                     
  8318                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  8319  0037E8  EC26  F01E         	call	_CCP3_Initialize	;wreg free
  8320  0037EC                     
  8321                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  8322  0037EC  ECA6  F01A         	call	_ADCC_Initialize	;wreg free
  8323                           
  8324                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  8325  0037F0  EC54  F01E         	call	_TMR4_Initialize	;wreg free
  8326  0037F4                     
  8327                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  8328  0037F4  ECC7  F01D         	call	_SMT1_Initialize	;wreg free
  8329  0037F8                     
  8330                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  8331  0037F8  EC38  F01F         	call	_PWM8_Initialize	;wreg free
  8332  0037FC                     
  8333                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8334  0037FC  EC2A  F01F         	call	_TMR2_Initialize	;wreg free
  8335  003800                     
  8336                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  8337  003800  EC50  F01F         	call	_PWM6_Initialize	;wreg free
  8338                           
  8339                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  8340  003804  EC0F  F01E         	call	_CCP4_Initialize	;wreg free
  8341  003808                     
  8342                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  8343  003808  EC6A  F01E         	call	_CLC3_Initialize	;wreg free
  8344  00380C                     
  8345                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  8346  00380C  EC24  F01D         	call	_TMR3_Initialize	;wreg free
  8347                           
  8348                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  8349  003810  EC5C  F01F         	call	_PWM5_Initialize	;wreg free
  8350  003814                     
  8351                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  8352  003814  EC11  F01C         	call	_TMR5_Initialize	;wreg free
  8353  003818                     
  8354                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  8355  003818  EC44  F01F         	call	_PWM7_Initialize	;wreg free
  8356                           
  8357                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  8358  00381C  EC0B  F019         	call	_UART1_Initialize	;wreg free
  8359  003820  0012               	return		;funcret
  8360  003822                     __end_of_SYSTEM_Initialize:
  8361                           	callstack 0
  8362                           
  8363 ;; *************** function _UART1_Initialize *****************
  8364 ;; Defined at:
  8365 ;;		line 87 in file "mcc_generated_files/uart1.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 9
  8386 ;; This function calls:
  8387 ;;		_UART1_SetErrorHandler
  8388 ;;		_UART1_SetFramingErrorHandler
  8389 ;;		_UART1_SetOverrunErrorHandler
  8390 ;;		_UART1_SetRxInterruptHandler
  8391 ;;		_UART1_SetTxInterruptHandler
  8392 ;; This function is called by:
  8393 ;;		_SYSTEM_Initialize
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text38
  8398  003216                     __ptext38:
  8399                           	callstack 0
  8400  003216                     _UART1_Initialize:
  8401                           	callstack 20
  8402  003216                     
  8403                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  8404  003216  0139               	movlb	57	; () banked
  8405  003218  9793               	bcf	147,3,b	;volatile
  8406  00321A                     
  8407                           ; BSR set to: 57
  8408                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  8409  00321A  0E9E               	movlw	low _UART1_Receive_ISR
  8410  00321C  6E20               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  8411  00321E  0E30               	movlw	high _UART1_Receive_ISR
  8412  003220  6E21               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  8413  003222  EC85  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  8414  003226                     
  8415                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  8416  003226  0139               	movlb	57	; () banked
  8417  003228  9993               	bcf	147,4,b	;volatile
  8418                           
  8419                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  8420  00322A  0E4A               	movlw	low _UART1_Transmit_ISR
  8421  00322C  6E20               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  8422  00322E  0E39               	movlw	high _UART1_Transmit_ISR
  8423  003230  6E21               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  8424  003232  EC80  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  8425  003236                     
  8426                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  8427  003236  0E00               	movlw	0
  8428  003238  013D               	movlb	61	; () banked
  8429  00323A  6FEC               	movwf	236,b	;volatile
  8430  00323C                     
  8431                           ; BSR set to: 61
  8432                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  8433  00323C  0E00               	movlw	0
  8434  00323E  6FED               	movwf	237,b	;volatile
  8435  003240                     
  8436                           ; BSR set to: 61
  8437                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  8438  003240  0E00               	movlw	0
  8439  003242  6FEE               	movwf	238,b	;volatile
  8440  003244                     
  8441                           ; BSR set to: 61
  8442                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  8443  003244  0E00               	movlw	0
  8444  003246  6FEF               	movwf	239,b	;volatile
  8445  003248                     
  8446                           ; BSR set to: 61
  8447                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  8448  003248  0E00               	movlw	0
  8449  00324A  6FF0               	movwf	240,b	;volatile
  8450  00324C                     
  8451                           ; BSR set to: 61
  8452                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  8453  00324C  0E00               	movlw	0
  8454  00324E  6FF1               	movwf	241,b	;volatile
  8455  003250                     
  8456                           ; BSR set to: 61
  8457                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  8458  003250  0EB0               	movlw	176
  8459  003252  6FF2               	movwf	242,b	;volatile
  8460  003254                     
  8461                           ; BSR set to: 61
  8462                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  8463  003254  0E80               	movlw	128
  8464  003256  6FF3               	movwf	243,b	;volatile
  8465  003258                     
  8466                           ; BSR set to: 61
  8467                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  8468  003258  0E00               	movlw	0
  8469  00325A  6FF4               	movwf	244,b	;volatile
  8470  00325C                     
  8471                           ; BSR set to: 61
  8472                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  8473  00325C  0E8A               	movlw	138
  8474  00325E  6FF5               	movwf	245,b	;volatile
  8475  003260                     
  8476                           ; BSR set to: 61
  8477                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  8478  003260  0E00               	movlw	0
  8479  003262  6FF6               	movwf	246,b	;volatile
  8480  003264                     
  8481                           ; BSR set to: 61
  8482                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  8483  003264  0E00               	movlw	0
  8484  003266  6FF7               	movwf	247,b	;volatile
  8485  003268                     
  8486                           ; BSR set to: 61
  8487                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  8488  003268  0E00               	movlw	0
  8489  00326A  6FF8               	movwf	248,b	;volatile
  8490  00326C                     
  8491                           ; BSR set to: 61
  8492                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  8493  00326C  0E00               	movlw	0
  8494  00326E  6FF9               	movwf	249,b	;volatile
  8495  003270                     
  8496                           ; BSR set to: 61
  8497                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  8498  003270  0E00               	movlw	0
  8499  003272  6FFA               	movwf	250,b	;volatile
  8500  003274                     
  8501                           ; BSR set to: 61
  8502                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  8503  003274  0E66               	movlw	low _UART1_DefaultFramingErrorHandler
  8504  003276  6E20               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  8505  003278  0E3F               	movlw	high _UART1_DefaultFramingErrorHandler
  8506  00327A  6E21               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8507  00327C  EC8F  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  8508  003280                     
  8509                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  8510  003280  0E64               	movlw	low _UART1_DefaultOverrunErrorHandler
  8511  003282  6E20               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  8512  003284  0E3F               	movlw	high _UART1_DefaultOverrunErrorHandler
  8513  003286  6E21               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8514  003288  EC8A  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  8515  00328C                     
  8516                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  8517  00328C  0E5A               	movlw	low _UART1_DefaultErrorHandler
  8518  00328E  6E20               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  8519  003290  0E3F               	movlw	high _UART1_DefaultErrorHandler
  8520  003292  6E21               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  8521  003294  EC94  F01F         	call	_UART1_SetErrorHandler	;wreg free
  8522                           
  8523                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  8524  003298  0E00               	movlw	0
  8525  00329A  6E37               	movwf	_uart1RxLastError^0,c	;volatile
  8526                           
  8527                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  8528  00329C  0E00               	movlw	0
  8529  00329E  6E3C               	movwf	_uart1TxHead^0,c	;volatile
  8530                           
  8531                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  8532  0032A0  0E00               	movlw	0
  8533  0032A2  6E3B               	movwf	_uart1TxTail^0,c	;volatile
  8534                           
  8535                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  8536  0032A4  0E08               	movlw	8
  8537  0032A6  0100               	movlb	0	; () banked
  8538  0032A8  6FFF               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  8539                           
  8540                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  8541  0032AA  0E00               	movlw	0
  8542  0032AC  6E3A               	movwf	_uart1RxHead^0,c	;volatile
  8543                           
  8544                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  8545  0032AE  0E00               	movlw	0
  8546  0032B0  6E39               	movwf	_uart1RxTail^0,c	;volatile
  8547                           
  8548                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  8549  0032B2  0E00               	movlw	0
  8550  0032B4  6E38               	movwf	_uart1RxCount^0,c	;volatile
  8551  0032B6                     
  8552                           ; BSR set to: 0
  8553                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  8554  0032B6  0139               	movlb	57	; () banked
  8555  0032B8  8793               	bsf	147,3,b	;volatile
  8556  0032BA                     
  8557                           ; BSR set to: 57
  8558  0032BA  0012               	return		;funcret
  8559  0032BC                     __end_of_UART1_Initialize:
  8560                           	callstack 0
  8561                           
  8562 ;; *************** function _UART1_SetTxInterruptHandler *****************
  8563 ;; Defined at:
  8564 ;;		line 333 in file "mcc_generated_files/uart1.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8567 ;;		 -> UART1_Transmit_ISR(1), 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  1    wreg      void 
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;Total ram usage:        2 bytes
  8584 ;; Hardware stack levels used: 1
  8585 ;; Hardware stack levels required when called: 8
  8586 ;; This function calls:
  8587 ;;		Nothing
  8588 ;; This function is called by:
  8589 ;;		_UART1_Initialize
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text39
  8594  003F00                     __ptext39:
  8595                           	callstack 0
  8596  003F00                     _UART1_SetTxInterruptHandler:
  8597                           	callstack 20
  8598  003F00                     
  8599                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  8600  003F00  C020  F0FB         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  8601  003F04  C021  F0FC         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  8602  003F08  0012               	return		;funcret
  8603  003F0A                     __end_of_UART1_SetTxInterruptHandler:
  8604                           	callstack 0
  8605                           
  8606 ;; *************** function _UART1_SetRxInterruptHandler *****************
  8607 ;; Defined at:
  8608 ;;		line 329 in file "mcc_generated_files/uart1.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8611 ;;		 -> UART1_Receive_ISR(1), 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;		None
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg, status,2, status,0
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;Total ram usage:        2 bytes
  8628 ;; Hardware stack levels used: 1
  8629 ;; Hardware stack levels required when called: 8
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_UART1_Initialize
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text40
  8638  003F0A                     __ptext40:
  8639                           	callstack 0
  8640  003F0A                     _UART1_SetRxInterruptHandler:
  8641                           	callstack 20
  8642  003F0A                     
  8643                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  8644  003F0A  C020  F0FD         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  8645  003F0E  C021  F0FE         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  8646  003F12  0012               	return		;funcret
  8647  003F14                     __end_of_UART1_SetRxInterruptHandler:
  8648                           	callstack 0
  8649                           
  8650 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  8651 ;; Defined at:
  8652 ;;		line 319 in file "mcc_generated_files/uart1.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8655 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;		None
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  1    wreg      void 
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, status,0
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;Total ram usage:        2 bytes
  8672 ;; Hardware stack levels used: 1
  8673 ;; Hardware stack levels required when called: 8
  8674 ;; This function calls:
  8675 ;;		Nothing
  8676 ;; This function is called by:
  8677 ;;		_UART1_Initialize
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681                           	psect	text41
  8682  003F14                     __ptext41:
  8683                           	callstack 0
  8684  003F14                     _UART1_SetOverrunErrorHandler:
  8685                           	callstack 20
  8686  003F14                     
  8687                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  8688  003F14  C020  F0F7         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  8689  003F18  C021  F0F8         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  8690  003F1C  0012               	return		;funcret
  8691  003F1E                     __end_of_UART1_SetOverrunErrorHandler:
  8692                           	callstack 0
  8693                           
  8694 ;; *************** function _UART1_SetFramingErrorHandler *****************
  8695 ;; Defined at:
  8696 ;;		line 315 in file "mcc_generated_files/uart1.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8699 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;		None
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  1    wreg      void 
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;Total ram usage:        2 bytes
  8716 ;; Hardware stack levels used: 1
  8717 ;; Hardware stack levels required when called: 8
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_UART1_Initialize
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text42
  8726  003F1E                     __ptext42:
  8727                           	callstack 0
  8728  003F1E                     _UART1_SetFramingErrorHandler:
  8729                           	callstack 20
  8730  003F1E                     
  8731                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  8732  003F1E  C020  F0F9         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  8733  003F22  C021  F0FA         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  8734  003F26  0012               	return		;funcret
  8735  003F28                     __end_of_UART1_SetFramingErrorHandler:
  8736                           	callstack 0
  8737                           
  8738 ;; *************** function _UART1_SetErrorHandler *****************
  8739 ;; Defined at:
  8740 ;;		line 323 in file "mcc_generated_files/uart1.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8743 ;;		 -> UART1_DefaultErrorHandler(1), 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;Total ram usage:        2 bytes
  8760 ;; Hardware stack levels used: 1
  8761 ;; Hardware stack levels required when called: 8
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_UART1_Initialize
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           	psect	text43
  8770  003F28                     __ptext43:
  8771                           	callstack 0
  8772  003F28                     _UART1_SetErrorHandler:
  8773                           	callstack 20
  8774  003F28                     
  8775                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  8776  003F28  C020  F0F5         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  8777  003F2C  C021  F0F6         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  8778  003F30  0012               	return		;funcret
  8779  003F32                     __end_of_UART1_SetErrorHandler:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function _TMR5_Initialize *****************
  8783 ;; Defined at:
  8784 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;		None
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, status,0, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;Total ram usage:        2 bytes
  8803 ;; Hardware stack levels used: 1
  8804 ;; Hardware stack levels required when called: 9
  8805 ;; This function calls:
  8806 ;;		_TMR5_SetGateInterruptHandler
  8807 ;; This function is called by:
  8808 ;;		_SYSTEM_Initialize
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           	psect	text44
  8813  003822                     __ptext44:
  8814                           	callstack 0
  8815  003822                     _TMR5_Initialize:
  8816                           	callstack 20
  8817  003822                     
  8818                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  8819  003822  0EC0               	movlw	192
  8820  003824  6E9B               	movwf	155,c	;volatile
  8821                           
  8822                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  8823  003826  0E00               	movlw	0
  8824  003828  6E9C               	movwf	156,c	;volatile
  8825                           
  8826                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  8827  00382A  0E05               	movlw	5
  8828  00382C  6E9D               	movwf	157,c	;volatile
  8829                           
  8830                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  8831  00382E  0E00               	movlw	0
  8832  003830  6E99               	movwf	153,c	;volatile
  8833                           
  8834                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  8835  003832  0E00               	movlw	0
  8836  003834  6E98               	movwf	152,c	;volatile
  8837  003836                     
  8838                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  8839  003836  0139               	movlb	57	; () banked
  8840  003838  9DA8               	bcf	168,6,b	;volatile
  8841  00383A                     
  8842                           ; BSR set to: 57
  8843                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  8844  00383A  5098               	movf	152,w,c	;volatile
  8845  00383C  006F FE64  F060    	movff	16281,??_TMR5_Initialize	;volatile
  8846  003842  0100               	movlb	0	; () banked
  8847  003844  6B61               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  8848  003846  C060  F061         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  8849  00384A  6B60               	clrf	??_TMR5_Initialize& (0+255),b
  8850  00384C  1160               	iorwf	??_TMR5_Initialize& (0+255),w,b
  8851  00384E  6FEF               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  8852  003850  5161               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  8853  003852  6FF0               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  8854  003854                     
  8855                           ; BSR set to: 0
  8856                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  8857  003854  0139               	movlb	57	; () banked
  8858  003856  9FA8               	bcf	168,7,b	;volatile
  8859  003858                     
  8860                           ; BSR set to: 57
  8861                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  8862  003858  8F98               	bsf	152,7,b	;volatile
  8863  00385A                     
  8864                           ; BSR set to: 57
  8865                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  8866  00385A  0E36               	movlw	low _TMR5_DefaultGateInterruptHandler
  8867  00385C  6E20               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  8868  00385E  0E3E               	movlw	high _TMR5_DefaultGateInterruptHandler
  8869  003860  6E21               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  8870  003862  EC99  F01F         	call	_TMR5_SetGateInterruptHandler	;wreg free
  8871  003866                     
  8872                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  8873  003866  0E03               	movlw	3
  8874  003868  6E9A               	movwf	154,c	;volatile
  8875  00386A  0012               	return		;funcret
  8876  00386C                     __end_of_TMR5_Initialize:
  8877                           	callstack 0
  8878                           
  8879 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  8880 ;; Defined at:
  8881 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8884 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;		None
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      void 
  8889 ;; Registers used:
  8890 ;;		wreg, status,2, status,0
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;Total ram usage:        2 bytes
  8901 ;; Hardware stack levels used: 1
  8902 ;; Hardware stack levels required when called: 8
  8903 ;; This function calls:
  8904 ;;		Nothing
  8905 ;; This function is called by:
  8906 ;;		_TMR5_Initialize
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910                           	psect	text45
  8911  003F32                     __ptext45:
  8912                           	callstack 0
  8913  003F32                     _TMR5_SetGateInterruptHandler:
  8914                           	callstack 20
  8915  003F32                     
  8916                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  8917  003F32  C020  F0ED         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  8918  003F36  C021  F0EE         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  8919  003F3A  0012               	return		;funcret
  8920  003F3C                     __end_of_TMR5_SetGateInterruptHandler:
  8921                           	callstack 0
  8922                           
  8923 ;; *************** function _TMR4_Initialize *****************
  8924 ;; Defined at:
  8925 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      void 
  8932 ;; Registers used:
  8933 ;;		wreg, status,2, status,0, cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used: 1
  8945 ;; Hardware stack levels required when called: 9
  8946 ;; This function calls:
  8947 ;;		_TMR4_SetInterruptHandler
  8948 ;; This function is called by:
  8949 ;;		_SYSTEM_Initialize
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text46
  8954  003CA8                     __ptext46:
  8955                           	callstack 0
  8956  003CA8                     _TMR4_Initialize:
  8957                           	callstack 20
  8958  003CA8                     
  8959                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  8960  003CA8  0E01               	movlw	1
  8961  003CAA  6EA2               	movwf	162,c	;volatile
  8962                           
  8963                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  8964  003CAC  0E00               	movlw	0
  8965  003CAE  6EA1               	movwf	161,c	;volatile
  8966                           
  8967                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  8968  003CB0  0E00               	movlw	0
  8969  003CB2  6EA3               	movwf	163,c	;volatile
  8970                           
  8971                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  8972  003CB4  0EF9               	movlw	249
  8973  003CB6  6E9F               	movwf	159,c	;volatile
  8974                           
  8975                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  8976  003CB8  0E00               	movlw	0
  8977  003CBA  6E9E               	movwf	158,c	;volatile
  8978  003CBC                     
  8979                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  8980  003CBC  0139               	movlb	57	; () banked
  8981  003CBE  91A7               	bcf	167,0,b	;volatile
  8982  003CC0                     
  8983                           ; BSR set to: 57
  8984                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  8985  003CC0  8197               	bsf	151,0,b	;volatile
  8986  003CC2                     
  8987                           ; BSR set to: 57
  8988                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  8989  003CC2  0E68               	movlw	low _TMR4_DefaultInterruptHandler
  8990  003CC4  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  8991  003CC6  0E3F               	movlw	high _TMR4_DefaultInterruptHandler
  8992  003CC8  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  8993  003CCA  EC9E  F01F         	call	_TMR4_SetInterruptHandler	;wreg free
  8994  003CCE                     
  8995                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  8996  003CCE  0EE0               	movlw	224
  8997  003CD0  6EA0               	movwf	160,c	;volatile
  8998  003CD2  0012               	return		;funcret
  8999  003CD4                     __end_of_TMR4_Initialize:
  9000                           	callstack 0
  9001                           
  9002 ;; *************** function _TMR4_SetInterruptHandler *****************
  9003 ;; Defined at:
  9004 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9007 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;Total ram usage:        2 bytes
  9024 ;; Hardware stack levels used: 1
  9025 ;; Hardware stack levels required when called: 8
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_TMR4_Initialize
  9030 ;;		_main
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text47
  9035  003F3C                     __ptext47:
  9036                           	callstack 0
  9037  003F3C                     _TMR4_SetInterruptHandler:
  9038                           	callstack 22
  9039  003F3C                     
  9040                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  9041  003F3C  C020  F0E9         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  9042  003F40  C021  F0EA         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  9043  003F44  0012               	return		;funcret
  9044  003F46                     __end_of_TMR4_SetInterruptHandler:
  9045                           	callstack 0
  9046                           
  9047 ;; *************** function _TMR3_Initialize *****************
  9048 ;; Defined at:
  9049 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, status,2, status,0
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;Total ram usage:        2 bytes
  9068 ;; Hardware stack levels used: 1
  9069 ;; Hardware stack levels required when called: 8
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_SYSTEM_Initialize
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text48
  9078  003A48                     __ptext48:
  9079                           	callstack 0
  9080  003A48                     _TMR3_Initialize:
  9081                           	callstack 21
  9082  003A48                     
  9083                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  9084  003A48  0E00               	movlw	0
  9085  003A4A  6EA7               	movwf	167,c	;volatile
  9086                           
  9087                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  9088  003A4C  0E00               	movlw	0
  9089  003A4E  6EA8               	movwf	168,c	;volatile
  9090                           
  9091                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  9092  003A50  0E05               	movlw	5
  9093  003A52  6EA9               	movwf	169,c	;volatile
  9094                           
  9095                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  9096  003A54  0E00               	movlw	0
  9097  003A56  6EA5               	movwf	165,c	;volatile
  9098                           
  9099                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  9100  003A58  0E00               	movlw	0
  9101  003A5A  6EA4               	movwf	164,c	;volatile
  9102  003A5C                     
  9103                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  9104  003A5C  0139               	movlb	57	; () banked
  9105  003A5E  9DA6               	bcf	166,6,b	;volatile
  9106  003A60                     
  9107                           ; BSR set to: 57
  9108                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9109  003A60  50A4               	movf	164,w,c	;volatile
  9110  003A62  006F FE94  F020    	movff	16293,??_TMR3_Initialize	;volatile
  9111  003A68  6A21               	clrf	(??_TMR3_Initialize+1)^0,c
  9112  003A6A  C020  F021         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  9113  003A6E  6A20               	clrf	??_TMR3_Initialize^0,c
  9114  003A70  1020               	iorwf	??_TMR3_Initialize^0,w,c
  9115  003A72  0100               	movlb	0	; () banked
  9116  003A74  6FEB               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  9117  003A76  5021               	movf	(??_TMR3_Initialize+1)^0,w,c
  9118  003A78  6FEC               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  9119  003A7A                     
  9120                           ; BSR set to: 0
  9121                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  9122  003A7A  0E01               	movlw	1
  9123  003A7C  6EA6               	movwf	166,c	;volatile
  9124  003A7E                     
  9125                           ; BSR set to: 0
  9126  003A7E  0012               	return		;funcret
  9127  003A80                     __end_of_TMR3_Initialize:
  9128                           	callstack 0
  9129                           
  9130 ;; *************** function _TMR2_Initialize *****************
  9131 ;; Defined at:
  9132 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;		None
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg, status,2
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;Total ram usage:        0 bytes
  9151 ;; Hardware stack levels used: 1
  9152 ;; Hardware stack levels required when called: 8
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_SYSTEM_Initialize
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text49
  9161  003E54                     __ptext49:
  9162                           	callstack 0
  9163  003E54                     _TMR2_Initialize:
  9164                           	callstack 21
  9165  003E54                     
  9166                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  9167  003E54  0E05               	movlw	5
  9168  003E56  6EAE               	movwf	174,c	;volatile
  9169                           
  9170                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  9171  003E58  0E00               	movlw	0
  9172  003E5A  6EAD               	movwf	173,c	;volatile
  9173                           
  9174                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  9175  003E5C  0E00               	movlw	0
  9176  003E5E  6EAF               	movwf	175,c	;volatile
  9177  003E60                     
  9178                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  9179  003E60  68AB               	setf	171,c	;volatile
  9180                           
  9181                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  9182  003E62  0E00               	movlw	0
  9183  003E64  6EAA               	movwf	170,c	;volatile
  9184  003E66                     
  9185                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  9186  003E66  0139               	movlb	57	; () banked
  9187  003E68  95A4               	bcf	164,2,b	;volatile
  9188                           
  9189                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  9190  003E6A  0EB0               	movlw	176
  9191  003E6C  6EAC               	movwf	172,c	;volatile
  9192  003E6E                     
  9193                           ; BSR set to: 57
  9194  003E6E  0012               	return		;funcret
  9195  003E70                     __end_of_TMR2_Initialize:
  9196                           	callstack 0
  9197                           
  9198 ;; *************** function _SMT1_Initialize *****************
  9199 ;; Defined at:
  9200 ;;		line 60 in file "mcc_generated_files/smt1.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      void 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9218 ;;Total ram usage:        0 bytes
  9219 ;; Hardware stack levels used: 1
  9220 ;; Hardware stack levels required when called: 8
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_SYSTEM_Initialize
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           	psect	text50
  9229  003B8E                     __ptext50:
  9230                           	callstack 0
  9231  003B8E                     _SMT1_Initialize:
  9232                           	callstack 21
  9233  003B8E                     
  9234                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  9235  003B8E  0E80               	movlw	128
  9236  003B90  013F               	movlb	63	; () banked
  9237  003B92  6F1E               	movwf	30,b	;volatile
  9238                           
  9239                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  9240  003B94  0E42               	movlw	66
  9241  003B96  6F1F               	movwf	31,b	;volatile
  9242                           
  9243                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  9244  003B98  0E00               	movlw	0
  9245  003B9A  6F20               	movwf	32,b	;volatile
  9246                           
  9247                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  9248  003B9C  0E04               	movlw	4
  9249  003B9E  6F21               	movwf	33,b	;volatile
  9250                           
  9251                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  9252  003BA0  0E00               	movlw	0
  9253  003BA2  6F23               	movwf	35,b	;volatile
  9254                           
  9255                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  9256  003BA4  0E00               	movlw	0
  9257  003BA6  6F22               	movwf	34,b	;volatile
  9258                           
  9259                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  9260  003BA8  0E01               	movlw	1
  9261  003BAA  6F1D               	movwf	29,b	;volatile
  9262  003BAC                     
  9263                           ; BSR set to: 63
  9264                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  9265  003BAC  691C               	setf	28,b	;volatile
  9266  003BAE                     
  9267                           ; BSR set to: 63
  9268                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  9269  003BAE  691B               	setf	27,b	;volatile
  9270  003BB0                     
  9271                           ; BSR set to: 63
  9272                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  9273  003BB0  0139               	movlb	57	; () banked
  9274  003BB2  8B91               	bsf	145,5,b	;volatile
  9275  003BB4                     
  9276                           ; BSR set to: 57
  9277                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  9278  003BB4  8F91               	bsf	145,7,b	;volatile
  9279  003BB6                     
  9280                           ; BSR set to: 57
  9281                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  9282  003BB6  8D91               	bsf	145,6,b	;volatile
  9283  003BB8                     
  9284                           ; BSR set to: 57
  9285                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  9286  003BB8  013F               	movlb	63	; () banked
  9287  003BBA  8F1F               	bsf	31,7,b	;volatile
  9288  003BBC                     
  9289                           ; BSR set to: 63
  9290  003BBC  0012               	return		;funcret
  9291  003BBE                     __end_of_SMT1_Initialize:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _PWM8_Initialize *****************
  9295 ;; Defined at:
  9296 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      void 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;Total ram usage:        0 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 8
  9317 ;; This function calls:
  9318 ;;		Nothing
  9319 ;; This function is called by:
  9320 ;;		_SYSTEM_Initialize
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text51
  9325  003E70                     __ptext51:
  9326                           	callstack 0
  9327  003E70                     _PWM8_Initialize:
  9328                           	callstack 21
  9329  003E70                     
  9330                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  9331  003E70  0E80               	movlw	128
  9332  003E72  6E62               	movwf	98,c	;volatile
  9333                           
  9334                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  9335  003E74  0E00               	movlw	0
  9336  003E76  6E61               	movwf	97,c	;volatile
  9337                           
  9338                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  9339  003E78  0E00               	movlw	0
  9340  003E7A  6E60               	movwf	96,c	;volatile
  9341                           
  9342                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  9343  003E7C  013F               	movlb	63	; () banked
  9344  003E7E  515F               	movf	95,w,b	;volatile
  9345  003E80  0B3F               	andlw	-193
  9346  003E82  0980               	iorlw	128
  9347  003E84  6F5F               	movwf	95,b	;volatile
  9348  003E86                     
  9349                           ; BSR set to: 63
  9350  003E86  0012               	return		;funcret
  9351  003E88                     __end_of_PWM8_Initialize:
  9352                           	callstack 0
  9353                           
  9354 ;; *************** function _PWM7_Initialize *****************
  9355 ;; Defined at:
  9356 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;		None
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;		None
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		wreg, status,2
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9374 ;;Total ram usage:        0 bytes
  9375 ;; Hardware stack levels used: 1
  9376 ;; Hardware stack levels required when called: 8
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_SYSTEM_Initialize
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           	psect	text52
  9385  003E88                     __ptext52:
  9386                           	callstack 0
  9387  003E88                     _PWM7_Initialize:
  9388                           	callstack 21
  9389  003E88                     
  9390                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  9391  003E88  0E80               	movlw	128
  9392  003E8A  6E66               	movwf	102,c	;volatile
  9393                           
  9394                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  9395  003E8C  0E00               	movlw	0
  9396  003E8E  6E65               	movwf	101,c	;volatile
  9397                           
  9398                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  9399  003E90  0E00               	movlw	0
  9400  003E92  6E64               	movwf	100,c	;volatile
  9401                           
  9402                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  9403  003E94  013F               	movlb	63	; () banked
  9404  003E96  515F               	movf	95,w,b	;volatile
  9405  003E98  0BCF               	andlw	-49
  9406  003E9A  0920               	iorlw	32
  9407  003E9C  6F5F               	movwf	95,b	;volatile
  9408  003E9E                     
  9409                           ; BSR set to: 63
  9410  003E9E  0012               	return		;funcret
  9411  003EA0                     __end_of_PWM7_Initialize:
  9412                           	callstack 0
  9413                           
  9414 ;; *************** function _PWM6_Initialize *****************
  9415 ;; Defined at:
  9416 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;		None
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;		None
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  1    wreg      void 
  9423 ;; Registers used:
  9424 ;;		wreg, status,2
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9434 ;;Total ram usage:        0 bytes
  9435 ;; Hardware stack levels used: 1
  9436 ;; Hardware stack levels required when called: 8
  9437 ;; This function calls:
  9438 ;;		Nothing
  9439 ;; This function is called by:
  9440 ;;		_SYSTEM_Initialize
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text53
  9445  003EA0                     __ptext53:
  9446                           	callstack 0
  9447  003EA0                     _PWM6_Initialize:
  9448                           	callstack 21
  9449  003EA0                     
  9450                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  9451  003EA0  0E80               	movlw	128
  9452  003EA2  6E6A               	movwf	106,c	;volatile
  9453                           
  9454                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  9455  003EA4  0E59               	movlw	89
  9456  003EA6  6E69               	movwf	105,c	;volatile
  9457                           
  9458                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  9459  003EA8  0E40               	movlw	64
  9460  003EAA  6E68               	movwf	104,c	;volatile
  9461                           
  9462                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  9463  003EAC  013F               	movlb	63	; () banked
  9464  003EAE  515F               	movf	95,w,b	;volatile
  9465  003EB0  0BF3               	andlw	-13
  9466  003EB2  0904               	iorlw	4
  9467  003EB4  6F5F               	movwf	95,b	;volatile
  9468  003EB6                     
  9469                           ; BSR set to: 63
  9470  003EB6  0012               	return		;funcret
  9471  003EB8                     __end_of_PWM6_Initialize:
  9472                           	callstack 0
  9473                           
  9474 ;; *************** function _PWM5_Initialize *****************
  9475 ;; Defined at:
  9476 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;		None
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;Total ram usage:        0 bytes
  9495 ;; Hardware stack levels used: 1
  9496 ;; Hardware stack levels required when called: 8
  9497 ;; This function calls:
  9498 ;;		Nothing
  9499 ;; This function is called by:
  9500 ;;		_SYSTEM_Initialize
  9501 ;; This function uses a non-reentrant model
  9502 ;;
  9503                           
  9504                           	psect	text54
  9505  003EB8                     __ptext54:
  9506                           	callstack 0
  9507  003EB8                     _PWM5_Initialize:
  9508                           	callstack 21
  9509  003EB8                     
  9510                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  9511  003EB8  0E80               	movlw	128
  9512  003EBA  6E6E               	movwf	110,c	;volatile
  9513                           
  9514                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  9515  003EBC  0E59               	movlw	89
  9516  003EBE  6E6D               	movwf	109,c	;volatile
  9517                           
  9518                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  9519  003EC0  0E40               	movlw	64
  9520  003EC2  6E6C               	movwf	108,c	;volatile
  9521                           
  9522                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  9523  003EC4  013F               	movlb	63	; () banked
  9524  003EC6  515F               	movf	95,w,b	;volatile
  9525  003EC8  0BFC               	andlw	-4
  9526  003ECA  0901               	iorlw	1
  9527  003ECC  6F5F               	movwf	95,b	;volatile
  9528  003ECE                     
  9529                           ; BSR set to: 63
  9530  003ECE  0012               	return		;funcret
  9531  003ED0                     __end_of_PWM5_Initialize:
  9532                           	callstack 0
  9533                           
  9534 ;; *************** function _PMD_Initialize *****************
  9535 ;; Defined at:
  9536 ;;		line 86 in file "mcc_generated_files/mcc.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      void 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;Total ram usage:        0 bytes
  9555 ;; Hardware stack levels used: 1
  9556 ;; Hardware stack levels required when called: 8
  9557 ;; This function calls:
  9558 ;;		Nothing
  9559 ;; This function is called by:
  9560 ;;		_SYSTEM_Initialize
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text55
  9565  003DCE                     __ptext55:
  9566                           	callstack 0
  9567  003DCE                     _PMD_Initialize:
  9568                           	callstack 21
  9569  003DCE                     
  9570                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  9571  003DCE  0E00               	movlw	0
  9572  003DD0  0139               	movlb	57	; () banked
  9573  003DD2  6FC0               	movwf	192,b	;volatile
  9574                           
  9575                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  9576  003DD4  0E00               	movlw	0
  9577  003DD6  6FC1               	movwf	193,b	;volatile
  9578                           
  9579                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  9580  003DD8  0E00               	movlw	0
  9581  003DDA  6FC2               	movwf	194,b	;volatile
  9582                           
  9583                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  9584  003DDC  0E00               	movlw	0
  9585  003DDE  6FC3               	movwf	195,b	;volatile
  9586                           
  9587                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  9588  003DE0  0E00               	movlw	0
  9589  003DE2  6FC4               	movwf	196,b	;volatile
  9590                           
  9591                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  9592  003DE4  0E00               	movlw	0
  9593  003DE6  6FC5               	movwf	197,b	;volatile
  9594                           
  9595                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  9596  003DE8  0E00               	movlw	0
  9597  003DEA  6FC6               	movwf	198,b	;volatile
  9598                           
  9599                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  9600  003DEC  0E00               	movlw	0
  9601  003DEE  6FC7               	movwf	199,b	;volatile
  9602  003DF0                     
  9603                           ; BSR set to: 57
  9604  003DF0  0012               	return		;funcret
  9605  003DF2                     __end_of_PMD_Initialize:
  9606                           	callstack 0
  9607                           
  9608 ;; *************** function _PIN_MANAGER_Initialize *****************
  9609 ;; Defined at:
  9610 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;		None
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;		None
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      void 
  9617 ;; Registers used:
  9618 ;;		wreg, status,2
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;Total ram usage:        0 bytes
  9629 ;; Hardware stack levels used: 1
  9630 ;; Hardware stack levels required when called: 8
  9631 ;; This function calls:
  9632 ;;		Nothing
  9633 ;; This function is called by:
  9634 ;;		_SYSTEM_Initialize
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text56
  9639  002E46                     __ptext56:
  9640                           	callstack 0
  9641  002E46                     _PIN_MANAGER_Initialize:
  9642                           	callstack 21
  9643  002E46                     
  9644                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9645  002E46  0E00               	movlw	0
  9646  002E48  6EBE               	movwf	190,c	;volatile
  9647                           
  9648                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9649  002E4A  0E00               	movlw	0
  9650  002E4C  6EBD               	movwf	189,c	;volatile
  9651                           
  9652                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  9653  002E4E  0E24               	movlw	36
  9654  002E50  6EBA               	movwf	186,c	;volatile
  9655                           
  9656                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9657  002E52  0E00               	movlw	0
  9658  002E54  6EBB               	movwf	187,c	;volatile
  9659                           
  9660                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9661  002E56  0E00               	movlw	0
  9662  002E58  6EBC               	movwf	188,c	;volatile
  9663                           
  9664                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9665  002E5A  0E07               	movlw	7
  9666  002E5C  6EC6               	movwf	198,c	;volatile
  9667                           
  9668                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  9669  002E5E  0EC0               	movlw	192
  9670  002E60  6EC2               	movwf	194,c	;volatile
  9671                           
  9672                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  9673  002E62  0EF7               	movlw	247
  9674  002E64  6EC3               	movwf	195,c	;volatile
  9675  002E66                     
  9676                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9677  002E66  68C4               	setf	196,c	;volatile
  9678  002E68                     
  9679                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9680  002E68  68C5               	setf	197,c	;volatile
  9681                           
  9682                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  9683  002E6A  0E1F               	movlw	31
  9684  002E6C  013A               	movlb	58	; () banked
  9685  002E6E  6F70               	movwf	112,b	;volatile
  9686  002E70                     
  9687                           ; BSR set to: 58
  9688                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  9689  002E70  6960               	setf	96,b	;volatile
  9690                           
  9691                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  9692  002E72  0EC0               	movlw	192
  9693  002E74  6F50               	movwf	80,b	;volatile
  9694                           
  9695                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9696  002E76  0E07               	movlw	7
  9697  002E78  6F80               	movwf	128,b	;volatile
  9698                           
  9699                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  9700  002E7A  0E7F               	movlw	127
  9701  002E7C  6F40               	movwf	64,b	;volatile
  9702                           
  9703                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9704  002E7E  0E00               	movlw	0
  9705  002E80  6F71               	movwf	113,b	;volatile
  9706                           
  9707                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9708  002E82  0E00               	movlw	0
  9709  002E84  6F81               	movwf	129,b	;volatile
  9710                           
  9711                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9712  002E86  0E00               	movlw	0
  9713  002E88  6F51               	movwf	81,b	;volatile
  9714                           
  9715                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9716  002E8A  0E00               	movlw	0
  9717  002E8C  6F41               	movwf	65,b	;volatile
  9718                           
  9719                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  9720  002E8E  0E00               	movlw	0
  9721  002E90  6F61               	movwf	97,b	;volatile
  9722                           
  9723                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  9724  002E92  0E00               	movlw	0
  9725  002E94  6F5A               	movwf	90,b	;volatile
  9726                           
  9727                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  9728  002E96  0E00               	movlw	0
  9729  002E98  6F5B               	movwf	91,b	;volatile
  9730                           
  9731                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  9732  002E9A  0E00               	movlw	0
  9733  002E9C  6F6A               	movwf	106,b	;volatile
  9734                           
  9735                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  9736  002E9E  0E00               	movlw	0
  9737  002EA0  6F6B               	movwf	107,b	;volatile
  9738                           
  9739                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  9740  002EA2  0E00               	movlw	0
  9741  002EA4  6F7A               	movwf	122,b	;volatile
  9742                           
  9743                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  9744  002EA6  0E00               	movlw	0
  9745  002EA8  6F7B               	movwf	123,b	;volatile
  9746                           
  9747                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  9748  002EAA  0E00               	movlw	0
  9749  002EAC  6F82               	movwf	130,b	;volatile
  9750                           
  9751                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  9752  002EAE  0E00               	movlw	0
  9753  002EB0  6F42               	movwf	66,b	;volatile
  9754                           
  9755                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  9756  002EB2  0E00               	movlw	0
  9757  002EB4  6F52               	movwf	82,b	;volatile
  9758                           
  9759                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  9760  002EB6  0E00               	movlw	0
  9761  002EB8  6F62               	movwf	98,b	;volatile
  9762                           
  9763                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  9764  002EBA  0E00               	movlw	0
  9765  002EBC  6F72               	movwf	114,b	;volatile
  9766  002EBE                     
  9767                           ; BSR set to: 58
  9768                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  9769  002EBE  6943               	setf	67,b	;volatile
  9770  002EC0                     
  9771                           ; BSR set to: 58
  9772                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  9773  002EC0  6953               	setf	83,b	;volatile
  9774  002EC2                     
  9775                           ; BSR set to: 58
  9776                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  9777  002EC2  6963               	setf	99,b	;volatile
  9778  002EC4                     
  9779                           ; BSR set to: 58
  9780                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  9781  002EC4  6973               	setf	115,b	;volatile
  9782                           
  9783                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  9784  002EC6  0E07               	movlw	7
  9785  002EC8  6F83               	movwf	131,b	;volatile
  9786  002ECA                     
  9787                           ; BSR set to: 58
  9788                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  9789  002ECA  6944               	setf	68,b	;volatile
  9790  002ECC                     
  9791                           ; BSR set to: 58
  9792                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  9793  002ECC  6954               	setf	84,b	;volatile
  9794  002ECE                     
  9795                           ; BSR set to: 58
  9796                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  9797  002ECE  6964               	setf	100,b	;volatile
  9798  002ED0                     
  9799                           ; BSR set to: 58
  9800                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  9801  002ED0  6974               	setf	116,b	;volatile
  9802                           
  9803                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  9804  002ED2  0E0F               	movlw	15
  9805  002ED4  6F84               	movwf	132,b	;volatile
  9806                           
  9807                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  9808  002ED6  0E1F               	movlw	31
  9809  002ED8  6FCF               	movwf	207,b	;volatile
  9810                           
  9811                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  9812  002EDA  0E09               	movlw	9
  9813  002EDC  6FDC               	movwf	220,b	;volatile
  9814                           
  9815                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  9816  002EDE  0E0E               	movlw	14
  9817  002EE0  6F01               	movwf	1,b	;volatile
  9818                           
  9819                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  9820  002EE2  0E0A               	movlw	10
  9821  002EE4  6FE5               	movwf	229,b	;volatile
  9822                           
  9823                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  9824  002EE6  0E0D               	movlw	13
  9825  002EE8  6F00               	movwf	0,b	;volatile
  9826                           
  9827                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  9828  002EEA  0E1D               	movlw	29
  9829  002EEC  6FC9               	movwf	201,b	;volatile
  9830                           
  9831                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  9832  002EEE  0E10               	movlw	16
  9833  002EF0  6F04               	movwf	4,b	;volatile
  9834                           
  9835                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  9836  002EF2  0E07               	movlw	7
  9837  002EF4  6FD9               	movwf	217,b	;volatile
  9838                           
  9839                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  9840  002EF6  0E09               	movlw	9
  9841  002EF8  6FD1               	movwf	209,b	;volatile
  9842                           
  9843                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  9844  002EFA  0E0F               	movlw	15
  9845  002EFC  6F03               	movwf	3,b	;volatile
  9846                           
  9847                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  9848  002EFE  0E13               	movlw	19
  9849  002F00  6F0B               	movwf	11,b	;volatile
  9850                           
  9851                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  9852  002F02  0E08               	movlw	8
  9853  002F04  6FDB               	movwf	219,b	;volatile
  9854                           
  9855                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  9856  002F06  0E08               	movlw	8
  9857  002F08  6FD2               	movwf	210,b	;volatile
  9858                           
  9859                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  9860  002F0A  0E1E               	movlw	30
  9861  002F0C  6FD0               	movwf	208,b	;volatile
  9862  002F0E                     
  9863                           ; BSR set to: 58
  9864  002F0E  0012               	return		;funcret
  9865  002F10                     __end_of_PIN_MANAGER_Initialize:
  9866                           	callstack 0
  9867                           
  9868 ;; *************** function _OSCILLATOR_Initialize *****************
  9869 ;; Defined at:
  9870 ;;		line 72 in file "mcc_generated_files/mcc.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;		None
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;		None
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      void 
  9877 ;; Registers used:
  9878 ;;		wreg, status,2
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9888 ;;Total ram usage:        0 bytes
  9889 ;; Hardware stack levels used: 1
  9890 ;; Hardware stack levels required when called: 8
  9891 ;; This function calls:
  9892 ;;		Nothing
  9893 ;; This function is called by:
  9894 ;;		_SYSTEM_Initialize
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           	psect	text57
  9899  003ED0                     __ptext57:
  9900                           	callstack 0
  9901  003ED0                     _OSCILLATOR_Initialize:
  9902                           	callstack 21
  9903  003ED0                     
  9904                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  9905  003ED0  0E60               	movlw	96
  9906  003ED2  0139               	movlb	57	; () banked
  9907  003ED4  6FD9               	movwf	217,b	;volatile
  9908                           
  9909                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  9910  003ED6  0E00               	movlw	0
  9911  003ED8  6FDB               	movwf	219,b	;volatile
  9912                           
  9913                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  9914  003EDA  0E00               	movlw	0
  9915  003EDC  6FDD               	movwf	221,b	;volatile
  9916                           
  9917                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  9918  003EDE  0E08               	movlw	8
  9919  003EE0  6FDF               	movwf	223,b	;volatile
  9920                           
  9921                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  9922  003EE2  0E00               	movlw	0
  9923  003EE4  6FDE               	movwf	222,b	;volatile
  9924  003EE6                     
  9925                           ; BSR set to: 57
  9926  003EE6  0012               	return		;funcret
  9927  003EE8                     __end_of_OSCILLATOR_Initialize:
  9928                           	callstack 0
  9929                           
  9930 ;; *************** function _INTERRUPT_Initialize *****************
  9931 ;; Defined at:
  9932 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;		None
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;  state           1   31[COMRAM] _Bool 
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      void 
  9939 ;; Registers used:
  9940 ;;		wreg, status,2
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;Total ram usage:        1 bytes
  9951 ;; Hardware stack levels used: 1
  9952 ;; Hardware stack levels required when called: 8
  9953 ;; This function calls:
  9954 ;;		Nothing
  9955 ;; This function is called by:
  9956 ;;		_SYSTEM_Initialize
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           	psect	text58
  9961  0036F4                     __ptext58:
  9962                           	callstack 0
  9963  0036F4                     _INTERRUPT_Initialize:
  9964                           	callstack 21
  9965  0036F4                     
  9966                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  9967  0036F4  8AD2               	bsf	210,5,c	;volatile
  9968  0036F6                     
  9969                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  9970  0036F6  0E00               	movlw	0
  9971  0036F8  BED2               	btfsc	16338,7,c	;volatile
  9972  0036FA  0E01               	movlw	1
  9973  0036FC  6E20               	movwf	INTERRUPT_Initialize@state^0,c
  9974  0036FE                     
  9975                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  9976  0036FE  9ED2               	bcf	16338,7,c	;volatile
  9977                           
  9978                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  9979  003700  0E55               	movlw	85
  9980  003702  6ED4               	movwf	212,c	;volatile
  9981                           
  9982                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  9983  003704  0EAA               	movlw	170
  9984  003706  6ED4               	movwf	212,c	;volatile
  9985  003708                     
  9986                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  9987  003708  90D4               	bcf	212,0,c	;volatile
  9988                           
  9989                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  9990  00370A  0E00               	movlw	0
  9991  00370C  6ED7               	movwf	215,c	;volatile
  9992                           
  9993                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  9994  00370E  0E00               	movlw	0
  9995  003710  6ED6               	movwf	214,c	;volatile
  9996                           
  9997                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  9998  003712  0E08               	movlw	8
  9999  003714  6ED5               	movwf	213,c	;volatile
 10000                           
 10001                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 10002  003716  0E55               	movlw	85
 10003  003718  6ED4               	movwf	212,c	;volatile
 10004                           
 10005                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 10006  00371A  0EAA               	movlw	170
 10007  00371C  6ED4               	movwf	212,c	;volatile
 10008  00371E                     
 10009                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 10010  00371E  80D4               	bsf	212,0,c	;volatile
 10011  003720                     
 10012                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 10013  003720  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 10014  003722  D002               	bra	u1415
 10015  003724  9ED2               	bcf	16338,7,c	;volatile
 10016  003726  D001               	bra	u1416
 10017  003728                     u1415:
 10018  003728  8ED2               	bsf	16338,7,c	;volatile
 10019  00372A                     u1416:
 10020  00372A                     
 10021                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 10022  00372A  0139               	movlb	57	; () banked
 10023  00372C  9983               	bcf	131,4,b	;volatile
 10024  00372E                     
 10025                           ; BSR set to: 57
 10026                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 10027  00372E  9783               	bcf	131,3,b	;volatile
 10028  003730                     
 10029                           ; BSR set to: 57
 10030                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 10031  003730  8F81               	bsf	129,7,b	;volatile
 10032  003732                     
 10033                           ; BSR set to: 57
 10034                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 10035  003732  8B81               	bsf	129,5,b	;volatile
 10036  003734                     
 10037                           ; BSR set to: 57
 10038                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 10039  003734  8D81               	bsf	129,6,b	;volatile
 10040  003736                     
 10041                           ; BSR set to: 57
 10042                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 10043  003736  818A               	bsf	138,0,b	;volatile
 10044  003738                     
 10045                           ; BSR set to: 57
 10046                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 10047  003738  8F88               	bsf	136,7,b	;volatile
 10048  00373A                     
 10049                           ; BSR set to: 57
 10050                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 10051  00373A  9187               	bcf	135,0,b	;volatile
 10052  00373C                     
 10053                           ; BSR set to: 57
 10054                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 10055  00373C  8389               	bsf	137,1,b	;volatile
 10056  00373E                     
 10057                           ; BSR set to: 57
 10058  00373E  0012               	return		;funcret
 10059  003740                     __end_of_INTERRUPT_Initialize:
 10060                           	callstack 0
 10061                           
 10062 ;; *************** function _CLC3_Initialize *****************
 10063 ;; Defined at:
 10064 ;;		line 58 in file "mcc_generated_files/clc3.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used: 1
 10084 ;; Hardware stack levels required when called: 8
 10085 ;; This function calls:
 10086 ;;		Nothing
 10087 ;; This function is called by:
 10088 ;;		_SYSTEM_Initialize
 10089 ;; This function uses a non-reentrant model
 10090 ;;
 10091                           
 10092                           	psect	text59
 10093  003CD4                     __ptext59:
 10094                           	callstack 0
 10095  003CD4                     _CLC3_Initialize:
 10096                           	callstack 21
 10097  003CD4                     
 10098                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 10099  003CD4  0E00               	movlw	0
 10100  003CD6  013C               	movlb	60	; () banked
 10101  003CD8  6F61               	movwf	97,b	;volatile
 10102                           
 10103                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 10104  003CDA  0E03               	movlw	3
 10105  003CDC  6F62               	movwf	98,b	;volatile
 10106                           
 10107                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 10108  003CDE  0E02               	movlw	2
 10109  003CE0  6F63               	movwf	99,b	;volatile
 10110                           
 10111                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 10112  003CE2  0E00               	movlw	0
 10113  003CE4  6F64               	movwf	100,b	;volatile
 10114                           
 10115                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 10116  003CE6  0E00               	movlw	0
 10117  003CE8  6F65               	movwf	101,b	;volatile
 10118                           
 10119                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 10120  003CEA  0E02               	movlw	2
 10121  003CEC  6F66               	movwf	102,b	;volatile
 10122                           
 10123                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 10124  003CEE  0E08               	movlw	8
 10125  003CF0  6F67               	movwf	103,b	;volatile
 10126                           
 10127                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 10128  003CF2  0E00               	movlw	0
 10129  003CF4  6F68               	movwf	104,b	;volatile
 10130                           
 10131                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 10132  003CF6  0E00               	movlw	0
 10133  003CF8  6F69               	movwf	105,b	;volatile
 10134                           
 10135                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 10136  003CFA  0E85               	movlw	133
 10137  003CFC  6F60               	movwf	96,b	;volatile
 10138  003CFE                     
 10139                           ; BSR set to: 60
 10140  003CFE  0012               	return		;funcret
 10141  003D00                     __end_of_CLC3_Initialize:
 10142                           	callstack 0
 10143                           
 10144 ;; *************** function _CCP4_Initialize *****************
 10145 ;; Defined at:
 10146 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;		None
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0, cstack
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;Total ram usage:        0 bytes
 10165 ;; Hardware stack levels used: 1
 10166 ;; Hardware stack levels required when called: 9
 10167 ;; This function calls:
 10168 ;;		_CCP4_SetCallBack
 10169 ;; This function is called by:
 10170 ;;		_SYSTEM_Initialize
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           	psect	text60
 10175  003C1E                     __ptext60:
 10176                           	callstack 0
 10177  003C1E                     _CCP4_Initialize:
 10178                           	callstack 20
 10179  003C1E                     
 10180                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 10181  003C1E  0E83               	movlw	131
 10182  003C20  6E72               	movwf	114,c	;volatile
 10183                           
 10184                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 10185  003C22  0E00               	movlw	0
 10186  003C24  6E73               	movwf	115,c	;volatile
 10187                           
 10188                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 10189  003C26  0E00               	movlw	0
 10190  003C28  6E71               	movwf	113,c	;volatile
 10191                           
 10192                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 10193  003C2A  0E00               	movlw	0
 10194  003C2C  6E70               	movwf	112,c	;volatile
 10195  003C2E                     
 10196                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 10197  003C2E  0EEE               	movlw	low _CCP4_DefaultCallBack
 10198  003C30  6E20               	movwf	CCP4_SetCallBack@customCallBack^0,c
 10199  003C32  0E3B               	movlw	high _CCP4_DefaultCallBack
 10200  003C34  6E21               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 10201  003C36  ECA3  F01F         	call	_CCP4_SetCallBack	;wreg free
 10202  003C3A                     
 10203                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 10204  003C3A  013F               	movlb	63	; () banked
 10205  003C3C  515E               	movf	94,w,b	;volatile
 10206  003C3E  0B3F               	andlw	-193
 10207  003C40  0980               	iorlw	128
 10208  003C42  6F5E               	movwf	94,b	;volatile
 10209  003C44                     
 10210                           ; BSR set to: 63
 10211                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 10212  003C44  0139               	movlb	57	; () banked
 10213  003C46  91AA               	bcf	170,0,b	;volatile
 10214  003C48                     
 10215                           ; BSR set to: 57
 10216                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 10217  003C48  819A               	bsf	154,0,b	;volatile
 10218  003C4A                     
 10219                           ; BSR set to: 57
 10220  003C4A  0012               	return		;funcret
 10221  003C4C                     __end_of_CCP4_Initialize:
 10222                           	callstack 0
 10223                           
 10224 ;; *************** function _CCP4_SetCallBack *****************
 10225 ;; Defined at:
 10226 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 10229 ;;		 -> CCP4_DefaultCallBack(1), 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;		None
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1    wreg      void 
 10234 ;; Registers used:
 10235 ;;		wreg, status,2, status,0
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10245 ;;Total ram usage:        2 bytes
 10246 ;; Hardware stack levels used: 1
 10247 ;; Hardware stack levels required when called: 8
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_CCP4_Initialize
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text61
 10256  003F46                     __ptext61:
 10257                           	callstack 0
 10258  003F46                     _CCP4_SetCallBack:
 10259                           	callstack 20
 10260  003F46                     
 10261                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 10262  003F46  C020  F0F1         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 10263  003F4A  C021  F0F2         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 10264  003F4E  0012               	return		;funcret
 10265  003F50                     __end_of_CCP4_SetCallBack:
 10266                           	callstack 0
 10267                           
 10268 ;; *************** function _CCP3_Initialize *****************
 10269 ;; Defined at:
 10270 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;		None
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;		None
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, status,2, status,0, cstack
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;Total ram usage:        0 bytes
 10289 ;; Hardware stack levels used: 1
 10290 ;; Hardware stack levels required when called: 9
 10291 ;; This function calls:
 10292 ;;		_CCP3_SetCallBack
 10293 ;; This function is called by:
 10294 ;;		_SYSTEM_Initialize
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           	psect	text62
 10299  003C4C                     __ptext62:
 10300                           	callstack 0
 10301  003C4C                     _CCP3_Initialize:
 10302                           	callstack 20
 10303  003C4C                     
 10304                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 10305  003C4C  0E83               	movlw	131
 10306  003C4E  6E76               	movwf	118,c	;volatile
 10307                           
 10308                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 10309  003C50  0E00               	movlw	0
 10310  003C52  6E77               	movwf	119,c	;volatile
 10311                           
 10312                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 10313  003C54  0E00               	movlw	0
 10314  003C56  6E75               	movwf	117,c	;volatile
 10315                           
 10316                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 10317  003C58  0E00               	movlw	0
 10318  003C5A  6E74               	movwf	116,c	;volatile
 10319  003C5C                     
 10320                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10321  003C5C  0EBE               	movlw	low _CCP3_DefaultCallBack
 10322  003C5E  6E20               	movwf	CCP3_SetCallBack@customCallBack^0,c
 10323  003C60  0E3B               	movlw	high _CCP3_DefaultCallBack
 10324  003C62  6E21               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 10325  003C64  ECA8  F01F         	call	_CCP3_SetCallBack	;wreg free
 10326  003C68                     
 10327                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 10328  003C68  013F               	movlb	63	; () banked
 10329  003C6A  515E               	movf	94,w,b	;volatile
 10330  003C6C  0BCF               	andlw	-49
 10331  003C6E  0920               	iorlw	32
 10332  003C70  6F5E               	movwf	94,b	;volatile
 10333  003C72                     
 10334                           ; BSR set to: 63
 10335                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 10336  003C72  0139               	movlb	57	; () banked
 10337  003C74  93A9               	bcf	169,1,b	;volatile
 10338  003C76                     
 10339                           ; BSR set to: 57
 10340                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 10341  003C76  8399               	bsf	153,1,b	;volatile
 10342  003C78                     
 10343                           ; BSR set to: 57
 10344  003C78  0012               	return		;funcret
 10345  003C7A                     __end_of_CCP3_Initialize:
 10346                           	callstack 0
 10347                           
 10348 ;; *************** function _CCP3_SetCallBack *****************
 10349 ;; Defined at:
 10350 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 10353 ;;		 -> CCP3_DefaultCallBack(1), 
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;		None
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1    wreg      void 
 10358 ;; Registers used:
 10359 ;;		wreg, status,2, status,0
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;Total ram usage:        2 bytes
 10370 ;; Hardware stack levels used: 1
 10371 ;; Hardware stack levels required when called: 8
 10372 ;; This function calls:
 10373 ;;		Nothing
 10374 ;; This function is called by:
 10375 ;;		_CCP3_Initialize
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text63
 10380  003F50                     __ptext63:
 10381                           	callstack 0
 10382  003F50                     _CCP3_SetCallBack:
 10383                           	callstack 20
 10384  003F50                     
 10385                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 10386  003F50  C020  F0F3         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 10387  003F54  C021  F0F4         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 10388  003F58  0012               	return		;funcret
 10389  003F5A                     __end_of_CCP3_SetCallBack:
 10390                           	callstack 0
 10391                           
 10392 ;; *************** function _ADCC_Initialize *****************
 10393 ;; Defined at:
 10394 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, status,2
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10412 ;;Total ram usage:        0 bytes
 10413 ;; Hardware stack levels used: 1
 10414 ;; Hardware stack levels required when called: 8
 10415 ;; This function calls:
 10416 ;;		Nothing
 10417 ;; This function is called by:
 10418 ;;		_SYSTEM_Initialize
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           	psect	text64
 10423  00354C                     __ptext64:
 10424                           	callstack 0
 10425  00354C                     _ADCC_Initialize:
 10426                           	callstack 21
 10427  00354C                     
 10428                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 10429  00354C  0E00               	movlw	0
 10430  00354E  013E               	movlb	62	; () banked
 10431  003550  6FDE               	movwf	222,b	;volatile
 10432                           
 10433                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 10434  003552  0E00               	movlw	0
 10435  003554  6FDF               	movwf	223,b	;volatile
 10436                           
 10437                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 10438  003556  0E00               	movlw	0
 10439  003558  6FE0               	movwf	224,b	;volatile
 10440                           
 10441                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 10442  00355A  0E00               	movlw	0
 10443  00355C  6FE1               	movwf	225,b	;volatile
 10444                           
 10445                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 10446  00355E  0E00               	movlw	0
 10447  003560  6FE4               	movwf	228,b	;volatile
 10448                           
 10449                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 10450  003562  0E00               	movlw	0
 10451  003564  6FE5               	movwf	229,b	;volatile
 10452                           
 10453                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 10454  003566  0E00               	movlw	0
 10455  003568  6FEA               	movwf	234,b	;volatile
 10456                           
 10457                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 10458  00356A  0E00               	movlw	0
 10459  00356C  6FEC               	movwf	236,b	;volatile
 10460                           
 10461                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 10462  00356E  0E00               	movlw	0
 10463  003570  6FF1               	movwf	241,b	;volatile
 10464                           
 10465                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 10466  003572  0E58               	movlw	88
 10467  003574  6FF3               	movwf	243,b	;volatile
 10468                           
 10469                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 10470  003576  0E02               	movlw	2
 10471  003578  6FF4               	movwf	244,b	;volatile
 10472                           
 10473                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 10474  00357A  0E00               	movlw	0
 10475  00357C  6FF5               	movwf	245,b	;volatile
 10476                           
 10477                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 10478  00357E  0E00               	movlw	0
 10479  003580  6FF6               	movwf	246,b	;volatile
 10480                           
 10481                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 10482  003582  0E00               	movlw	0
 10483  003584  6FF7               	movwf	247,b	;volatile
 10484                           
 10485                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 10486  003586  0E00               	movlw	0
 10487  003588  6FF9               	movwf	249,b	;volatile
 10488                           
 10489                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 10490  00358A  0E00               	movlw	0
 10491  00358C  6FFA               	movwf	250,b	;volatile
 10492                           
 10493                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 10494  00358E  0E00               	movlw	0
 10495  003590  6FFB               	movwf	251,b	;volatile
 10496                           
 10497                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 10498  003592  0E00               	movlw	0
 10499  003594  6FFC               	movwf	252,b	;volatile
 10500                           
 10501                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 10502  003596  0E00               	movlw	0
 10503  003598  6FFD               	movwf	253,b	;volatile
 10504                           
 10505                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 10506  00359A  0E00               	movlw	0
 10507  00359C  6FFE               	movwf	254,b	;volatile
 10508                           
 10509                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 10510  00359E  0E1F               	movlw	31
 10511  0035A0  6FFF               	movwf	255,b	;volatile
 10512                           
 10513                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 10514  0035A2  0E84               	movlw	132
 10515  0035A4  6FF8               	movwf	248,b	;volatile
 10516  0035A6                     
 10517                           ; BSR set to: 62
 10518  0035A6  0012               	return		;funcret
 10519  0035A8                     __end_of_ADCC_Initialize:
 10520                           	callstack 0
 10521                           
 10522 ;; *************** function _UART1_tx_vect_isr *****************
 10523 ;; Defined at:
 10524 ;;		line 235 in file "mcc_generated_files/uart1.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;		None
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;		None
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10540 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10542 ;;Total ram usage:        3 bytes
 10543 ;; Hardware stack levels used: 1
 10544 ;; Hardware stack levels required when called: 5
 10545 ;; This function calls:
 10546 ;;		Absolute function
 10547 ;;		_UART1_Transmit_ISR
 10548 ;; This function is called by:
 10549 ;;		Interrupt level 1
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           	psect	text65
 10554  0035FC                     __ptext65:
 10555                           	callstack 0
 10556  0035FC                     _UART1_tx_vect_isr:
 10557                           	callstack 13
 10558                           
 10559                           ; BSR set to: 62
 10560                           ;incstack = 0
 10561  0035FC  006F FF60  F017    	movff	status,??_UART1_tx_vect_isr
 10562  003602  006F FFE8  F018    	movff	pclath,??_UART1_tx_vect_isr+1
 10563  003608  006F FFEC  F019    	movff	pclatu,??_UART1_tx_vect_isr+2
 10564  00360E                     
 10565                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 10566  00360E  0100               	movlb	0	; () banked
 10567  003610  51FB               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10568  003612  11FC               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10569  003614  B4D8               	btfsc	status,2,c
 10570  003616  EF0F  F01B         	goto	i1u415_21
 10571  00361A  EF11  F01B         	goto	i1u415_20
 10572  00361E                     i1u415_21:
 10573  00361E  EF1D  F01B         	goto	i1l324
 10574  003622                     i1u415_20:
 10575  003622                     
 10576                           ; BSR set to: 0
 10577                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 10578  003622  D802               	call	i1u416_28
 10579  003624  EF1D  F01B         	goto	i1u416_29
 10580  003628                     i1u416_28:
 10581  003628  0005               	push	
 10582  00362A  6EFA               	movwf	pclath,c
 10583  00362C  51FB               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 10584  00362E  6EFD               	movwf	tosl,c
 10585  003630  51FC               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 10586  003632  6EFE               	movwf	tosh,c
 10587  003634  6AFF               	clrf	tosu,c
 10588  003636  50FA               	movf	pclath,w,c
 10589  003638  0012               	return		;indir
 10590  00363A                     i1u416_29:
 10591  00363A                     i1l324:
 10592  00363A  0060  F067  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 10593  003640  0060  F063  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 10594  003646  0060  F05F  FFD8   	movff	??_UART1_tx_vect_isr,status
 10595  00364C  0011               	retfie		f
 10596  00364E                     __end_of_UART1_tx_vect_isr:
 10597                           	callstack 0
 10598                           
 10599 ;; *************** function _UART1_Transmit_ISR *****************
 10600 ;; Defined at:
 10601 ;;		line 253 in file "mcc_generated_files/uart1.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;		None
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;		None
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      void 
 10608 ;; Registers used:
 10609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10619 ;;Total ram usage:        0 bytes
 10620 ;; Hardware stack levels used: 1
 10621 ;; Hardware stack levels required when called: 4
 10622 ;; This function calls:
 10623 ;;		Nothing
 10624 ;; This function is called by:
 10625 ;;		_UART1_Initialize
 10626 ;;		_UART1_tx_vect_isr
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630                           	psect	text66
 10631  00394A                     __ptext66:
 10632                           	callstack 0
 10633  00394A                     _UART1_Transmit_ISR:
 10634                           	callstack 13
 10635  00394A                     
 10636                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 10637  00394A  0E08               	movlw	8
 10638  00394C  0100               	movlb	0	; () banked
 10639  00394E  61FF               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
 10640  003950  EFAC  F01C         	goto	i1u395_21
 10641  003954  EFAE  F01C         	goto	i1u395_20
 10642  003958                     i1u395_21:
 10643  003958  EFC6  F01C         	goto	i1l333
 10644  00395C                     i1u395_20:
 10645  00395C                     
 10646                           ; BSR set to: 0
 10647                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 10648  00395C  0EBF               	movlw	low _uart1TxBuffer
 10649  00395E  243B               	addwf	_uart1TxTail^0,w,c	;volatile
 10650  003960  6ED9               	movwf	fsr2l,c
 10651  003962  6ADA               	clrf	fsr2h,c
 10652  003964  0E00               	movlw	high _uart1TxBuffer
 10653  003966  22DA               	addwfc	fsr2h,f,c
 10654  003968  50DF               	movf	indf2,w,c
 10655  00396A  013D               	movlb	61	; () banked
 10656  00396C  6FEA               	movwf	234,b	;volatile
 10657  00396E                     
 10658                           ; BSR set to: 61
 10659  00396E  2A3B               	incf	_uart1TxTail^0,f,c	;volatile
 10660  003970                     
 10661                           ; BSR set to: 61
 10662                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 10663  003970  0E07               	movlw	7
 10664  003972  643B               	cpfsgt	_uart1TxTail^0,c	;volatile
 10665  003974  EFBE  F01C         	goto	i1u396_21
 10666  003978  EFC0  F01C         	goto	i1u396_20
 10667  00397C                     i1u396_21:
 10668  00397C  EFC2  F01C         	goto	i1l5314
 10669  003980                     i1u396_20:
 10670  003980                     
 10671                           ; BSR set to: 61
 10672                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 10673  003980  0E00               	movlw	0
 10674  003982  6E3B               	movwf	_uart1TxTail^0,c	;volatile
 10675  003984                     i1l5314:
 10676                           
 10677                           ; BSR set to: 61
 10678                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 10679  003984  0100               	movlb	0	; () banked
 10680  003986  2BFF               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 10681                           
 10682                           ;mcc_generated_files/uart1.c: 264:     }
 10683  003988  EFC8  F01C         	goto	i1l336
 10684  00398C                     i1l333:
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 10688  00398C  0139               	movlb	57	; () banked
 10689  00398E  9993               	bcf	147,4,b	;volatile
 10690  003990                     i1l336:
 10691  003990  0012               	return		;funcret
 10692  003992                     __end_of_UART1_Transmit_ISR:
 10693                           	callstack 0
 10694                           
 10695 ;; *************** function _UART1_rx_vect_isr *****************
 10696 ;; Defined at:
 10697 ;;		line 243 in file "mcc_generated_files/uart1.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;		None
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      void 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;Total ram usage:        3 bytes
 10716 ;; Hardware stack levels used: 1
 10717 ;; Hardware stack levels required when called: 7
 10718 ;; This function calls:
 10719 ;;		Absolute function
 10720 ;;		_UART1_Receive_ISR
 10721 ;; This function is called by:
 10722 ;;		Interrupt level 1
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           	psect	text67
 10727  003650                     __ptext67:
 10728                           	callstack 0
 10729  003650                     _UART1_rx_vect_isr:
 10730                           	callstack 11
 10731                           
 10732                           ;incstack = 0
 10733  003650  006F FF60  F01A    	movff	status,??_UART1_rx_vect_isr
 10734  003656  006F FFE8  F01B    	movff	pclath,??_UART1_rx_vect_isr+1
 10735  00365C  006F FFEC  F01C    	movff	pclatu,??_UART1_rx_vect_isr+2
 10736  003662                     
 10737                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 10738  003662  0100               	movlb	0	; () banked
 10739  003664  51FD               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 10740  003666  11FE               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 10741  003668  B4D8               	btfsc	status,2,c
 10742  00366A  EF39  F01B         	goto	i1u417_21
 10743  00366E  EF3B  F01B         	goto	i1u417_20
 10744  003672                     i1u417_21:
 10745  003672  EF47  F01B         	goto	i1l330
 10746  003676                     i1u417_20:
 10747  003676                     
 10748                           ; BSR set to: 0
 10749                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 10750  003676  D802               	call	i1u418_28
 10751  003678  EF47  F01B         	goto	i1u418_29
 10752  00367C                     i1u418_28:
 10753  00367C  0005               	push	
 10754  00367E  6EFA               	movwf	pclath,c
 10755  003680  51FD               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 10756  003682  6EFD               	movwf	tosl,c
 10757  003684  51FE               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 10758  003686  6EFE               	movwf	tosh,c
 10759  003688  6AFF               	clrf	tosu,c
 10760  00368A  50FA               	movf	pclath,w,c
 10761  00368C  0012               	return		;indir
 10762  00368E                     i1u418_29:
 10763  00368E                     i1l330:
 10764  00368E  0060  F073  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 10765  003694  0060  F06F  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 10766  00369A  0060  F06B  FFD8   	movff	??_UART1_rx_vect_isr,status
 10767  0036A0  0011               	retfie		f
 10768  0036A2                     __end_of_UART1_rx_vect_isr:
 10769                           	callstack 0
 10770                           
 10771 ;; *************** function _UART1_Receive_ISR *****************
 10772 ;; Defined at:
 10773 ;;		line 273 in file "mcc_generated_files/uart1.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;		None
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;		None
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  1    wreg      void 
 10780 ;; Registers used:
 10781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10791 ;;Total ram usage:        0 bytes
 10792 ;; Hardware stack levels used: 1
 10793 ;; Hardware stack levels required when called: 6
 10794 ;; This function calls:
 10795 ;;		Absolute function
 10796 ;;		_UART1_DefaultErrorHandler
 10797 ;;		_UART1_DefaultFramingErrorHandler
 10798 ;;		_UART1_DefaultOverrunErrorHandler
 10799 ;;		_UART1_RxDataHandler
 10800 ;; This function is called by:
 10801 ;;		_UART1_Initialize
 10802 ;;		_UART1_rx_vect_isr
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text68
 10807  00309E                     __ptext68:
 10808                           	callstack 0
 10809  00309E                     _UART1_Receive_ISR:
 10810                           	callstack 11
 10811  00309E                     
 10812                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 10813  00309E  0EAF               	movlw	low _uart1RxStatusBuffer
 10814  0030A0  243A               	addwf	_uart1RxHead^0,w,c	;volatile
 10815  0030A2  6ED9               	movwf	fsr2l,c
 10816  0030A4  6ADA               	clrf	fsr2h,c
 10817  0030A6  0E00               	movlw	high _uart1RxStatusBuffer
 10818  0030A8  22DA               	addwfc	fsr2h,f,c
 10819  0030AA  0E00               	movlw	0
 10820  0030AC  6EDF               	movwf	indf2,c
 10821  0030AE                     
 10822                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 10823  0030AE  013D               	movlb	61	; () banked
 10824  0030B0  A7F9               	btfss	249,3,b	;volatile
 10825  0030B2  EF5D  F018         	goto	i1u397_21
 10826  0030B6  EF5F  F018         	goto	i1u397_20
 10827  0030BA                     i1u397_21:
 10828  0030BA  EF73  F018         	goto	i1l5324
 10829  0030BE                     i1u397_20:
 10830  0030BE                     
 10831                           ; BSR set to: 61
 10832                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 10833  0030BE  0EAF               	movlw	low _uart1RxStatusBuffer
 10834  0030C0  243A               	addwf	_uart1RxHead^0,w,c	;volatile
 10835  0030C2  6ED9               	movwf	fsr2l,c
 10836  0030C4  6ADA               	clrf	fsr2h,c
 10837  0030C6  0E00               	movlw	high _uart1RxStatusBuffer
 10838  0030C8  22DA               	addwfc	fsr2h,f,c
 10839  0030CA  0100               	movlb	0	; () banked
 10840  0030CC  82DF               	bsf	indf2,1,c
 10841  0030CE                     
 10842                           ; BSR set to: 0
 10843                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 10844  0030CE  D802               	call	i1u398_28
 10845  0030D0  EF73  F018         	goto	i1u398_29
 10846  0030D4                     i1u398_28:
 10847  0030D4  0005               	push	
 10848  0030D6  6EFA               	movwf	pclath,c
 10849  0030D8  51F9               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 10850  0030DA  6EFD               	movwf	tosl,c
 10851  0030DC  51FA               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 10852  0030DE  6EFE               	movwf	tosh,c
 10853  0030E0  6AFF               	clrf	tosu,c
 10854  0030E2  50FA               	movf	pclath,w,c
 10855  0030E4  0012               	return		;indir
 10856  0030E6                     i1u398_29:
 10857  0030E6                     i1l5324:
 10858                           
 10859                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 10860  0030E6  013D               	movlb	61	; () banked
 10861  0030E8  A3F9               	btfss	249,1,b	;volatile
 10862  0030EA  EF79  F018         	goto	i1u399_21
 10863  0030EE  EF7B  F018         	goto	i1u399_20
 10864  0030F2                     i1u399_21:
 10865  0030F2  EF8F  F018         	goto	i1l5330
 10866  0030F6                     i1u399_20:
 10867  0030F6                     
 10868                           ; BSR set to: 61
 10869                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 10870  0030F6  0EAF               	movlw	low _uart1RxStatusBuffer
 10871  0030F8  243A               	addwf	_uart1RxHead^0,w,c	;volatile
 10872  0030FA  6ED9               	movwf	fsr2l,c
 10873  0030FC  6ADA               	clrf	fsr2h,c
 10874  0030FE  0E00               	movlw	high _uart1RxStatusBuffer
 10875  003100  22DA               	addwfc	fsr2h,f,c
 10876  003102  0100               	movlb	0	; () banked
 10877  003104  84DF               	bsf	indf2,2,c
 10878  003106                     
 10879                           ; BSR set to: 0
 10880                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 10881  003106  D802               	call	i1u400_28
 10882  003108  EF8F  F018         	goto	i1u400_29
 10883  00310C                     i1u400_28:
 10884  00310C  0005               	push	
 10885  00310E  6EFA               	movwf	pclath,c
 10886  003110  51F7               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 10887  003112  6EFD               	movwf	tosl,c
 10888  003114  51F8               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 10889  003116  6EFE               	movwf	tosh,c
 10890  003118  6AFF               	clrf	tosu,c
 10891  00311A  50FA               	movf	pclath,w,c
 10892  00311C  0012               	return		;indir
 10893  00311E                     i1u400_29:
 10894  00311E                     i1l5330:
 10895                           
 10896                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 10897  00311E  0EAF               	movlw	low _uart1RxStatusBuffer
 10898  003120  243A               	addwf	_uart1RxHead^0,w,c	;volatile
 10899  003122  6ED9               	movwf	fsr2l,c
 10900  003124  6ADA               	clrf	fsr2h,c
 10901  003126  0E00               	movlw	high _uart1RxStatusBuffer
 10902  003128  22DA               	addwfc	fsr2h,f,c
 10903  00312A  50DF               	movf	indf2,w,c
 10904  00312C  B4D8               	btfsc	status,2,c
 10905  00312E  EF9B  F018         	goto	i1u401_21
 10906  003132  EF9D  F018         	goto	i1u401_20
 10907  003136                     i1u401_21:
 10908  003136  EFAC  F018         	goto	i1l5334
 10909  00313A                     i1u401_20:
 10910  00313A                     
 10911                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 10912  00313A  D802               	call	i1u402_28
 10913  00313C  EFAA  F018         	goto	i1u402_29
 10914  003140                     i1u402_28:
 10915  003140  0005               	push	
 10916  003142  6EFA               	movwf	pclath,c
 10917  003144  0100               	movlb	0	; () banked
 10918  003146  51F5               	movf	_UART1_ErrorHandler& (0+255),w,b
 10919  003148  6EFD               	movwf	tosl,c
 10920  00314A  51F6               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 10921  00314C  6EFE               	movwf	tosh,c
 10922  00314E  6AFF               	clrf	tosu,c
 10923  003150  50FA               	movf	pclath,w,c
 10924  003152  0012               	return		;indir
 10925  003154                     i1u402_29:
 10926                           
 10927                           ;mcc_generated_files/uart1.c: 290:     } else {
 10928  003154  EFAE  F018         	goto	i1l343
 10929  003158                     i1l5334:
 10930                           
 10931                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 10932  003158  EC80  F01E         	call	_UART1_RxDataHandler	;wreg free
 10933  00315C                     i1l343:
 10934  00315C  0012               	return		;funcret
 10935  00315E                     __end_of_UART1_Receive_ISR:
 10936                           	callstack 0
 10937                           
 10938 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 10939 ;; Defined at:
 10940 ;;		line 309 in file "mcc_generated_files/uart1.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;		None
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		None
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used: 1
 10960 ;; Hardware stack levels required when called: 4
 10961 ;; This function calls:
 10962 ;;		Nothing
 10963 ;; This function is called by:
 10964 ;;		_UART1_Initialize
 10965 ;;		_UART1_Receive_ISR
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text69
 10970  003F64                     __ptext69:
 10971                           	callstack 0
 10972  003F64                     _UART1_DefaultOverrunErrorHandler:
 10973                           	callstack 12
 10974  003F64  0012               	return		;funcret
 10975  003F66                     __end_of_UART1_DefaultOverrunErrorHandler:
 10976                           	callstack 0
 10977                           
 10978 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 10979 ;; Defined at:
 10980 ;;		line 307 in file "mcc_generated_files/uart1.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		None
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used: 1
 11000 ;; Hardware stack levels required when called: 4
 11001 ;; This function calls:
 11002 ;;		Nothing
 11003 ;; This function is called by:
 11004 ;;		_UART1_Initialize
 11005 ;;		_UART1_Receive_ISR
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009                           	psect	text70
 11010  003F66                     __ptext70:
 11011                           	callstack 0
 11012  003F66                     _UART1_DefaultFramingErrorHandler:
 11013                           	callstack 12
 11014  003F66  0012               	return		;funcret
 11015  003F68                     __end_of_UART1_DefaultFramingErrorHandler:
 11016                           	callstack 0
 11017                           
 11018 ;; *************** function _UART1_DefaultErrorHandler *****************
 11019 ;; Defined at:
 11020 ;;		line 311 in file "mcc_generated_files/uart1.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;		None
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;		None
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;Total ram usage:        0 bytes
 11039 ;; Hardware stack levels used: 1
 11040 ;; Hardware stack levels required when called: 5
 11041 ;; This function calls:
 11042 ;;		_UART1_RxDataHandler
 11043 ;; This function is called by:
 11044 ;;		_UART1_Initialize
 11045 ;;		_UART1_Receive_ISR
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text71
 11050  003F5A                     __ptext71:
 11051                           	callstack 0
 11052  003F5A                     _UART1_DefaultErrorHandler:
 11053                           	callstack 11
 11054  003F5A                     
 11055                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 11056  003F5A  EC80  F01E         	call	_UART1_RxDataHandler	;wreg free
 11057  003F5E  0012               	return		;funcret
 11058  003F60                     __end_of_UART1_DefaultErrorHandler:
 11059                           	callstack 0
 11060                           
 11061 ;; *************** function _UART1_RxDataHandler *****************
 11062 ;; Defined at:
 11063 ;;		line 297 in file "mcc_generated_files/uart1.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;		None
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;		None
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;Total ram usage:        0 bytes
 11082 ;; Hardware stack levels used: 1
 11083 ;; Hardware stack levels required when called: 4
 11084 ;; This function calls:
 11085 ;;		Nothing
 11086 ;; This function is called by:
 11087 ;;		_UART1_Receive_ISR
 11088 ;;		_UART1_DefaultErrorHandler
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text72
 11093  003D00                     __ptext72:
 11094                           	callstack 0
 11095  003D00                     _UART1_RxDataHandler:
 11096                           	callstack 12
 11097  003D00                     
 11098                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 11099  003D00  0EB7               	movlw	low _uart1RxBuffer
 11100  003D02  243A               	addwf	_uart1RxHead^0,w,c	;volatile
 11101  003D04  6ED9               	movwf	fsr2l,c
 11102  003D06  6ADA               	clrf	fsr2h,c
 11103  003D08  0E00               	movlw	high _uart1RxBuffer
 11104  003D0A  22DA               	addwfc	fsr2h,f,c
 11105  003D0C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 11106  003D12  2A3A               	incf	_uart1RxHead^0,f,c	;volatile
 11107  003D14                     
 11108                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 11109  003D14  0E07               	movlw	7
 11110  003D16  643A               	cpfsgt	_uart1RxHead^0,c	;volatile
 11111  003D18  EF90  F01E         	goto	i1u263_21
 11112  003D1C  EF92  F01E         	goto	i1u263_20
 11113  003D20                     i1u263_21:
 11114  003D20  EF94  F01E         	goto	i1l4360
 11115  003D24                     i1u263_20:
 11116  003D24                     
 11117                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 11118  003D24  0E00               	movlw	0
 11119  003D26  6E3A               	movwf	_uart1RxHead^0,c	;volatile
 11120  003D28                     i1l4360:
 11121                           
 11122                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 11123  003D28  2A38               	incf	_uart1RxCount^0,f,c	;volatile
 11124  003D2A  0012               	return		;funcret
 11125  003D2C                     __end_of_UART1_RxDataHandler:
 11126                           	callstack 0
 11127                           
 11128 ;; *************** function _TMR4_ISR *****************
 11129 ;; Defined at:
 11130 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;		None
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;		None
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      void 
 11137 ;; Registers used:
 11138 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11147 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;Total ram usage:        3 bytes
 11149 ;; Hardware stack levels used: 1
 11150 ;; Hardware stack levels required when called: 6
 11151 ;; This function calls:
 11152 ;;		_TMR4_CallBack
 11153 ;; This function is called by:
 11154 ;;		Interrupt level 1
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           	psect	text73
 11159  0036A4                     __ptext73:
 11160                           	callstack 0
 11161  0036A4                     _TMR4_ISR:
 11162                           	callstack 12
 11163                           
 11164                           ;incstack = 0
 11165  0036A4  006F FF60  F01D    	movff	status,??_TMR4_ISR
 11166  0036AA  006F FFE8  F01E    	movff	pclath,??_TMR4_ISR+1
 11167  0036B0  006F FFEC  F01F    	movff	pclatu,??_TMR4_ISR+2
 11168  0036B6                     
 11169                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 11170  0036B6  0139               	movlb	57	; () banked
 11171  0036B8  91A7               	bcf	167,0,b	;volatile
 11172  0036BA                     
 11173                           ; BSR set to: 57
 11174                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 11175  0036BA  4A2C               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 11176  0036BC  2A2D               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 11177  0036BE  502D               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 11178  0036C0  E109               	bnz	i1u423_20
 11179  0036C2  0E0A               	movlw	10
 11180  0036C4  5C2C               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 11181  0036C6  A0D8               	btfss	status,0,c
 11182  0036C8  EF68  F01B         	goto	i1u423_21
 11183  0036CC  EF6A  F01B         	goto	i1u423_20
 11184  0036D0                     i1u423_21:
 11185  0036D0  EF70  F01B         	goto	i1l688
 11186  0036D4                     i1u423_20:
 11187  0036D4                     
 11188                           ; BSR set to: 57
 11189                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 11190  0036D4  EC3D  F01E         	call	_TMR4_CallBack	;wreg free
 11191  0036D8                     
 11192                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 11193  0036D8  0E00               	movlw	0
 11194  0036DA  6E2D               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 11195  0036DC  0E00               	movlw	0
 11196  0036DE  6E2C               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 11197  0036E0                     i1l688:
 11198  0036E0  0060  F07F  FFFB   	movff	??_TMR4_ISR+2,pclatu
 11199  0036E6  0060  F07B  FFFA   	movff	??_TMR4_ISR+1,pclath
 11200  0036EC  0060  F077  FFD8   	movff	??_TMR4_ISR,status
 11201  0036F2  0011               	retfie		f
 11202  0036F4                     __end_of_TMR4_ISR:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function _TMR4_CallBack *****************
 11206 ;; Defined at:
 11207 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;		None
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;		None
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      void 
 11214 ;; Registers used:
 11215 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;Total ram usage:        0 bytes
 11226 ;; Hardware stack levels used: 1
 11227 ;; Hardware stack levels required when called: 5
 11228 ;; This function calls:
 11229 ;;		Absolute function
 11230 ;;		_TMR4_10msISR
 11231 ;;		_TMR4_DefaultInterruptHandler
 11232 ;; This function is called by:
 11233 ;;		_TMR4_ISR
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text74
 11238  003C7A                     __ptext74:
 11239                           	callstack 0
 11240  003C7A                     _TMR4_CallBack:
 11241                           	callstack 12
 11242  003C7A                     
 11243                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 11244  003C7A  0100               	movlb	0	; () banked
 11245  003C7C  51E9               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11246  003C7E  11EA               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11247  003C80  B4D8               	btfsc	status,2,c
 11248  003C82  EF45  F01E         	goto	i1u406_21
 11249  003C86  EF47  F01E         	goto	i1u406_20
 11250  003C8A                     i1u406_21:
 11251  003C8A  EF53  F01E         	goto	i1l692
 11252  003C8E                     i1u406_20:
 11253  003C8E                     
 11254                           ; BSR set to: 0
 11255                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 11256  003C8E  D802               	call	i1u407_28
 11257  003C90  EF53  F01E         	goto	i1u407_29
 11258  003C94                     i1u407_28:
 11259  003C94  0005               	push	
 11260  003C96  6EFA               	movwf	pclath,c
 11261  003C98  51E9               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11262  003C9A  6EFD               	movwf	tosl,c
 11263  003C9C  51EA               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11264  003C9E  6EFE               	movwf	tosh,c
 11265  003CA0  6AFF               	clrf	tosu,c
 11266  003CA2  50FA               	movf	pclath,w,c
 11267  003CA4  0012               	return		;indir
 11268  003CA6                     i1u407_29:
 11269  003CA6                     i1l692:
 11270  003CA6  0012               	return		;funcret
 11271  003CA8                     __end_of_TMR4_CallBack:
 11272                           	callstack 0
 11273                           
 11274 ;; *************** function _TMR4_10msISR *****************
 11275 ;; Defined at:
 11276 ;;		line 67 in file "main.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;		None
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;		None
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      void 
 11283 ;; Registers used:
 11284 ;;		status,2, status,0
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11294 ;;Total ram usage:        0 bytes
 11295 ;; Hardware stack levels used: 1
 11296 ;; Hardware stack levels required when called: 4
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_main
 11301 ;;		_TMR4_CallBack
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           	psect	text75
 11306  003F60                     __ptext75:
 11307                           	callstack 0
 11308  003F60                     _TMR4_10msISR:
 11309                           	callstack 12
 11310  003F60                     
 11311                           ;main.c: 68:     ++cycle10ms;
 11312  003F60  2A34               	incf	_cycle10ms^0,f,c	;volatile
 11313  003F62  0012               	return		;funcret
 11314  003F64                     __end_of_TMR4_10msISR:
 11315                           	callstack 0
 11316                           
 11317 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 11318 ;; Defined at:
 11319 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;		None
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  1    wreg      void 
 11326 ;; Registers used:
 11327 ;;		None
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11337 ;;Total ram usage:        0 bytes
 11338 ;; Hardware stack levels used: 1
 11339 ;; Hardware stack levels required when called: 4
 11340 ;; This function calls:
 11341 ;;		Nothing
 11342 ;; This function is called by:
 11343 ;;		_TMR4_Initialize
 11344 ;;		_TMR4_CallBack
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           	psect	text76
 11349  003F68                     __ptext76:
 11350                           	callstack 0
 11351  003F68                     _TMR4_DefaultInterruptHandler:
 11352                           	callstack 12
 11353  003F68  0012               	return		;funcret
 11354  003F6A                     __end_of_TMR4_DefaultInterruptHandler:
 11355                           	callstack 0
 11356                           
 11357 ;; *************** function _Default_ISR *****************
 11358 ;; Defined at:
 11359 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;		None
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;		None
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  1    wreg      void 
 11366 ;; Registers used:
 11367 ;;		None
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;Total ram usage:        0 bytes
 11378 ;; Hardware stack levels used: 1
 11379 ;; This function calls:
 11380 ;;		Nothing
 11381 ;; This function is called by:
 11382 ;;		Interrupt level 2
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386                           	psect	text77
 11387  003F6C                     __ptext77:
 11388                           	callstack 0
 11389  003F6C                     _Default_ISR:
 11390                           	callstack 14
 11391  003F6C  0011               	retfie		f
 11392  003F6E                     __end_of_Default_ISR:
 11393                           	callstack 0
 11394                           
 11395 ;; *************** function _CCP3_CaptureISR *****************
 11396 ;; Defined at:
 11397 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;		None
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  module          2    4[COMRAM] struct CCPR3Reg_tag
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      void 
 11404 ;; Registers used:
 11405 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11415 ;;Total ram usage:        4 bytes
 11416 ;; Hardware stack levels used: 1
 11417 ;; Hardware stack levels required when called: 1
 11418 ;; This function calls:
 11419 ;;		Absolute function
 11420 ;;		_CCP3_DefaultCallBack
 11421 ;; This function is called by:
 11422 ;;		Interrupt level 2
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text78
 11427  003740                     __ptext78:
 11428                           	callstack 0
 11429  003740                     _CCP3_CaptureISR:
 11430                           	callstack 13
 11431                           
 11432                           ;incstack = 0
 11433  003740  006F FFE8  F003    	movff	pclath,??_CCP3_CaptureISR
 11434  003746  006F FFEC  F004    	movff	pclatu,??_CCP3_CaptureISR+1
 11435  00374C                     
 11436                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 11437  00374C  0139               	movlb	57	; () banked
 11438  00374E  93A9               	bcf	169,1,b	;volatile
 11439                           
 11440                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 11441  003750  006F FDD0  F005    	movff	16244,CCP3_CaptureISR@module	;volatile
 11442                           
 11443                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 11444  003756  006F FDD4  F006    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 11445  00375C                     
 11446                           ; BSR set to: 57
 11447                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 11448  00375C  C005  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 11449  003760  C006  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 11450  003764  D802               	call	i2u419_48
 11451  003766  EFBF  F01B         	goto	i2u419_49
 11452  00376A                     i2u419_48:
 11453  00376A  0005               	push	
 11454  00376C  6EFA               	movwf	pclath,c
 11455  00376E  0100               	movlb	0	; () banked
 11456  003770  51F3               	movf	_CCP3_CallBack& (0+255),w,b
 11457  003772  6EFD               	movwf	tosl,c
 11458  003774  51F4               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 11459  003776  6EFE               	movwf	tosh,c
 11460  003778  6AFF               	clrf	tosu,c
 11461  00377A  50FA               	movf	pclath,w,c
 11462  00377C  0012               	return		;indir
 11463  00377E                     i2u419_49:
 11464  00377E  0060  F013  FFFB   	movff	??_CCP3_CaptureISR+1,pclatu
 11465  003784  0060  F00F  FFFA   	movff	??_CCP3_CaptureISR,pclath
 11466  00378A  0011               	retfie		f
 11467  00378C                     __end_of_CCP3_CaptureISR:
 11468                           	callstack 0
 11469                           
 11470 ;; *************** function _CCP3_DefaultCallBack *****************
 11471 ;; Defined at:
 11472 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  capturedValu    2    0[COMRAM] unsigned short 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2, status,0
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11490 ;;Total ram usage:        2 bytes
 11491 ;; Hardware stack levels used: 1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_CCP3_Initialize
 11496 ;;		_CCP3_CaptureISR
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           	psect	text79
 11501  003BBE                     __ptext79:
 11502                           	callstack 0
 11503  003BBE                     _CCP3_DefaultCallBack:
 11504                           	callstack 13
 11505  003BBE                     
 11506                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 11507  003BBE  AECD               	btfss	205,7,c	;volatile
 11508  003BC0  EFE4  F01D         	goto	i2u403_41
 11509  003BC4  EFE6  F01D         	goto	i2u403_40
 11510  003BC8                     i2u403_41:
 11511  003BC8  EFEC  F01D         	goto	i2l5340
 11512  003BCC                     i2u403_40:
 11513  003BCC                     
 11514                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 11515  003BCC  C001  F0E5         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 11516  003BD0  C002  F0E6         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 11517                           
 11518                           ;mcc_generated_files/ccp3.c: 69:     } else {
 11519  003BD4  EFF6  F01D         	goto	i2l438
 11520  003BD8                     i2l5340:
 11521                           
 11522                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 11523  003BD8  0100               	movlb	0	; () banked
 11524  003BDA  51E5               	movf	_distLeftM& (0+255),w,b
 11525  003BDC  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 11526  003BDE  6E30               	movwf	_distLeft^0,c	;volatile
 11527  003BE0  51E6               	movf	(_distLeftM+1)& (0+255),w,b
 11528  003BE2  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 11529  003BE4  6E31               	movwf	(_distLeft+1)^0,c	;volatile
 11530  003BE6                     
 11531                           ; BSR set to: 0
 11532                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 11533  003BE6  90D8               	bcf	status,0,c
 11534  003BE8  3231               	rrcf	(_distLeft+1)^0,f,c	;volatile
 11535  003BEA  3230               	rrcf	_distLeft^0,f,c	;volatile
 11536  003BEC                     i2l438:
 11537  003BEC  0012               	return		;funcret
 11538  003BEE                     __end_of_CCP3_DefaultCallBack:
 11539                           	callstack 0
 11540                           
 11541 ;; *************** function _CCP4_CaptureISR *****************
 11542 ;; Defined at:
 11543 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  module          2   10[COMRAM] struct CCPR4Reg_tag
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;Total ram usage:        4 bytes
 11562 ;; Hardware stack levels used: 1
 11563 ;; Hardware stack levels required when called: 1
 11564 ;; This function calls:
 11565 ;;		Absolute function
 11566 ;;		_CCP4_DefaultCallBack
 11567 ;; This function is called by:
 11568 ;;		Interrupt level 2
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text80
 11573  00378C                     __ptext80:
 11574                           	callstack 0
 11575  00378C                     _CCP4_CaptureISR:
 11576                           	callstack 13
 11577                           
 11578                           ;incstack = 0
 11579  00378C  006F FFE8  F009    	movff	pclath,??_CCP4_CaptureISR
 11580  003792  006F FFEC  F00A    	movff	pclatu,??_CCP4_CaptureISR+1
 11581  003798                     
 11582                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 11583  003798  0139               	movlb	57	; () banked
 11584  00379A  91AA               	bcf	170,0,b	;volatile
 11585                           
 11586                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 11587  00379C  006F FDC0  F00B    	movff	16240,CCP4_CaptureISR@module	;volatile
 11588                           
 11589                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 11590  0037A2  006F FDC4  F00C    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 11591  0037A8                     
 11592                           ; BSR set to: 57
 11593                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 11594  0037A8  C00B  F007         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 11595  0037AC  C00C  F008         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 11596  0037B0  D802               	call	i2u420_48
 11597  0037B2  EFE5  F01B         	goto	i2u420_49
 11598  0037B6                     i2u420_48:
 11599  0037B6  0005               	push	
 11600  0037B8  6EFA               	movwf	pclath,c
 11601  0037BA  0100               	movlb	0	; () banked
 11602  0037BC  51F1               	movf	_CCP4_CallBack& (0+255),w,b
 11603  0037BE  6EFD               	movwf	tosl,c
 11604  0037C0  51F2               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 11605  0037C2  6EFE               	movwf	tosh,c
 11606  0037C4  6AFF               	clrf	tosu,c
 11607  0037C6  50FA               	movf	pclath,w,c
 11608  0037C8  0012               	return		;indir
 11609  0037CA                     i2u420_49:
 11610  0037CA  0060  F02B  FFFB   	movff	??_CCP4_CaptureISR+1,pclatu
 11611  0037D0  0060  F027  FFFA   	movff	??_CCP4_CaptureISR,pclath
 11612  0037D6  0011               	retfie		f
 11613  0037D8                     __end_of_CCP4_CaptureISR:
 11614                           	callstack 0
 11615                           
 11616 ;; *************** function _CCP4_DefaultCallBack *****************
 11617 ;; Defined at:
 11618 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;  capturedValu    2    6[COMRAM] unsigned short 
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;		None
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  1    wreg      void 
 11625 ;; Registers used:
 11626 ;;		wreg, status,2, status,0
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;Total ram usage:        2 bytes
 11637 ;; Hardware stack levels used: 1
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		_CCP4_Initialize
 11642 ;;		_CCP4_CaptureISR
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           	psect	text81
 11647  003BEE                     __ptext81:
 11648                           	callstack 0
 11649  003BEE                     _CCP4_DefaultCallBack:
 11650                           	callstack 13
 11651  003BEE                     
 11652                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 11653  003BEE  ACCD               	btfss	205,6,c	;volatile
 11654  003BF0  EFFC  F01D         	goto	i2u404_41
 11655  003BF4  EFFE  F01D         	goto	i2u404_40
 11656  003BF8                     i2u404_41:
 11657  003BF8  EF04  F01E         	goto	i2l5348
 11658  003BFC                     i2u404_40:
 11659  003BFC                     
 11660                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 11661  003BFC  C007  F0E3         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 11662  003C00  C008  F0E4         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 11663                           
 11664                           ;mcc_generated_files/ccp4.c: 70:     } else {
 11665  003C04  EF0E  F01E         	goto	i2l476
 11666  003C08                     i2l5348:
 11667                           
 11668                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 11669  003C08  0100               	movlb	0	; () banked
 11670  003C0A  51E3               	movf	_distRightM& (0+255),w,b
 11671  003C0C  5C07               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 11672  003C0E  6E2E               	movwf	_distRight^0,c	;volatile
 11673  003C10  51E4               	movf	(_distRightM+1)& (0+255),w,b
 11674  003C12  5808               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 11675  003C14  6E2F               	movwf	(_distRight+1)^0,c	;volatile
 11676  003C16                     
 11677                           ; BSR set to: 0
 11678                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 11679  003C16  90D8               	bcf	status,0,c
 11680  003C18  322F               	rrcf	(_distRight+1)^0,f,c	;volatile
 11681  003C1A  322E               	rrcf	_distRight^0,f,c	;volatile
 11682  003C1C                     i2l476:
 11683  003C1C  0012               	return		;funcret
 11684  003C1E                     __end_of_CCP4_DefaultCallBack:
 11685                           	callstack 0
 11686                           
 11687 ;; *************** function _TMR5_GATE_ISR *****************
 11688 ;; Defined at:
 11689 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;		None
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;		None
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;Total ram usage:        2 bytes
 11708 ;; Hardware stack levels used: 1
 11709 ;; Hardware stack levels required when called: 3
 11710 ;; This function calls:
 11711 ;;		Absolute function
 11712 ;;		_TMR5_DefaultGateInterruptHandler
 11713 ;; This function is called by:
 11714 ;;		Interrupt level 2
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text82
 11719  00386C                     __ptext82:
 11720                           	callstack 0
 11721  00386C                     _TMR5_GATE_ISR:
 11722                           	callstack 11
 11723                           
 11724                           ;incstack = 0
 11725  00386C  006F FFE8  F015    	movff	pclath,??_TMR5_GATE_ISR
 11726  003872  006F FFEC  F016    	movff	pclatu,??_TMR5_GATE_ISR+1
 11727  003878                     
 11728                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 11729  003878  0139               	movlb	57	; () banked
 11730  00387A  9FA8               	bcf	168,7,b	;volatile
 11731  00387C                     
 11732                           ; BSR set to: 57
 11733                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 11734  00387C  0100               	movlb	0	; () banked
 11735  00387E  51ED               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 11736  003880  11EE               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 11737  003882  B4D8               	btfsc	status,2,c
 11738  003884  EF46  F01C         	goto	i2u421_41
 11739  003888  EF48  F01C         	goto	i2u421_40
 11740  00388C                     i2u421_41:
 11741  00388C  EF54  F01C         	goto	i2l552
 11742  003890                     i2u421_40:
 11743  003890                     
 11744                           ; BSR set to: 0
 11745                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 11746  003890  D802               	call	i2u422_48
 11747  003892  EF54  F01C         	goto	i2u422_49
 11748  003896                     i2u422_48:
 11749  003896  0005               	push	
 11750  003898  6EFA               	movwf	pclath,c
 11751  00389A  51ED               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 11752  00389C  6EFD               	movwf	tosl,c
 11753  00389E  51EE               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 11754  0038A0  6EFE               	movwf	tosh,c
 11755  0038A2  6AFF               	clrf	tosu,c
 11756  0038A4  50FA               	movf	pclath,w,c
 11757  0038A6  0012               	return		;indir
 11758  0038A8                     i2u422_49:
 11759  0038A8                     i2l552:
 11760  0038A8  0060  F05B  FFFB   	movff	??_TMR5_GATE_ISR+1,pclatu
 11761  0038AE  0060  F057  FFFA   	movff	??_TMR5_GATE_ISR,pclath
 11762  0038B4  0011               	retfie		f
 11763  0038B6                     __end_of_TMR5_GATE_ISR:
 11764                           	callstack 0
 11765                           
 11766 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 11767 ;; Defined at:
 11768 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;		None
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;Total ram usage:        0 bytes
 11787 ;; Hardware stack levels used: 1
 11788 ;; Hardware stack levels required when called: 2
 11789 ;; This function calls:
 11790 ;;		_TMR5_ReadTimer
 11791 ;;		_TMR5_Reload
 11792 ;; This function is called by:
 11793 ;;		_TMR5_Initialize
 11794 ;;		_TMR5_GATE_ISR
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           	psect	text83
 11799  003E36                     __ptext83:
 11800                           	callstack 0
 11801  003E36                     _TMR5_DefaultGateInterruptHandler:
 11802                           	callstack 11
 11803  003E36                     
 11804                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 11805  003E36  ECF9  F01E         	call	_TMR5_ReadTimer	;wreg free
 11806  003E3A  C00D  F0E7         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 11807  003E3E  C00E  F0E8         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 11808  003E42                     
 11809                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 11810  003E42  0100               	movlb	0	; () banked
 11811  003E44  90D8               	bcf	status,0,c
 11812  003E46  33E8               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 11813  003E48  33E7               	rrcf	_distFront& (0+255),f,b	;volatile
 11814  003E4A                     
 11815                           ; BSR set to: 0
 11816                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 11817  003E4A  EC74  F01F         	call	_TMR5_Reload	;wreg free
 11818  003E4E                     
 11819                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 11820  003E4E  0139               	movlb	57	; () banked
 11821  003E50  9FA8               	bcf	168,7,b	;volatile
 11822  003E52                     
 11823                           ; BSR set to: 57
 11824  003E52  0012               	return		;funcret
 11825  003E54                     __end_of_TMR5_DefaultGateInterruptHandler:
 11826                           	callstack 0
 11827                           
 11828 ;; *************** function _TMR5_Reload *****************
 11829 ;; Defined at:
 11830 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;		None
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;		None
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  1    wreg      void 
 11837 ;; Registers used:
 11838 ;;		wreg, status,2, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11848 ;;Total ram usage:        0 bytes
 11849 ;; Hardware stack levels used: 1
 11850 ;; Hardware stack levels required when called: 1
 11851 ;; This function calls:
 11852 ;;		_TMR5_WriteTimer
 11853 ;; This function is called by:
 11854 ;;		_TMR5_DefaultGateInterruptHandler
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858                           	psect	text84
 11859  003EE8                     __ptext84:
 11860                           	callstack 0
 11861  003EE8                     _TMR5_Reload:
 11862                           	callstack 11
 11863  003EE8                     
 11864                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 11865  003EE8  C0EF  F00D         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 11866  003EEC  C0F0  F00E         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 11867  003EF0  EC96  F01E         	call	_TMR5_WriteTimer	;wreg free
 11868  003EF4  0012               	return		;funcret
 11869  003EF6                     __end_of_TMR5_Reload:
 11870                           	callstack 0
 11871                           
 11872 ;; *************** function _TMR5_WriteTimer *****************
 11873 ;; Defined at:
 11874 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  timerVal        2   12[COMRAM] unsigned short 
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg, status,2
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11892 ;;Total ram usage:        2 bytes
 11893 ;; Hardware stack levels used: 1
 11894 ;; This function calls:
 11895 ;;		Nothing
 11896 ;; This function is called by:
 11897 ;;		_TMR5_Reload
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           	psect	text85
 11902  003D2C                     __ptext85:
 11903                           	callstack 0
 11904  003D2C                     _TMR5_WriteTimer:
 11905                           	callstack 11
 11906  003D2C                     
 11907                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 11908  003D2C  A49A               	btfss	154,2,c	;volatile
 11909  003D2E  EF9B  F01E         	goto	i2u264_41
 11910  003D32  EF9D  F01E         	goto	i2u264_40
 11911  003D36                     i2u264_41:
 11912  003D36  EFA6  F01E         	goto	i2l4378
 11913  003D3A                     i2u264_40:
 11914  003D3A                     
 11915                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 11916  003D3A  909A               	bcf	154,0,c	;volatile
 11917  003D3C                     
 11918                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 11919  003D3C  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 11920  003D3E  6E99               	movwf	153,c	;volatile
 11921  003D40                     
 11922                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 11923  003D40  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 11924  003D46                     
 11925                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 11926  003D46  809A               	bsf	154,0,c	;volatile
 11927                           
 11928                           ;mcc_generated_files/tmr5.c: 146:     }
 11929  003D48  EFAB  F01E         	goto	i2l534
 11930  003D4C                     i2l4378:
 11931                           
 11932                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 11933  003D4C  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 11934  003D4E  6E99               	movwf	153,c	;volatile
 11935  003D50                     
 11936                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 11937  003D50  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 11938  003D56                     i2l534:
 11939  003D56  0012               	return		;funcret
 11940  003D58                     __end_of_TMR5_WriteTimer:
 11941                           	callstack 0
 11942                           
 11943 ;; *************** function _TMR5_ReadTimer *****************
 11944 ;; Defined at:
 11945 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;		None
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;  readVal         2   16[COMRAM] unsigned short 
 11950 ;;  readValLow      1   19[COMRAM] unsigned char 
 11951 ;;  readValHigh     1   18[COMRAM] unsigned char 
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  2   12[COMRAM] unsigned short 
 11954 ;; Registers used:
 11955 ;;		wreg, status,2
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11964 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11965 ;;Total ram usage:        8 bytes
 11966 ;; Hardware stack levels used: 1
 11967 ;; This function calls:
 11968 ;;		Nothing
 11969 ;; This function is called by:
 11970 ;;		_TMR5_DefaultGateInterruptHandler
 11971 ;; This function uses a non-reentrant model
 11972 ;;
 11973                           
 11974                           	psect	text86
 11975  003DF2                     __ptext86:
 11976                           	callstack 0
 11977  003DF2                     _TMR5_ReadTimer:
 11978                           	callstack 12
 11979  003DF2                     
 11980                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 11981  003DF2  829A               	bsf	154,1,c	;volatile
 11982                           
 11983                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 11984  003DF4  006F FE60  F014    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 11985                           
 11986                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 11987  003DFA  006F FE64  F013    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 11988  003E00                     
 11989                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 11990  003E00  5013               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 11991  003E02  6E0F               	movwf	??_TMR5_ReadTimer^0,c
 11992  003E04  5014               	movf	TMR5_ReadTimer@readValLow^0,w,c
 11993  003E06  6E11               	movwf	TMR5_ReadTimer@readVal^0,c
 11994  003E08  C00F  F012         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 11995  003E0C                     
 11996                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 11997  003E0C  C011  F00D         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 11998  003E10  C012  F00E         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 11999  003E14  0012               	return		;funcret
 12000  003E16                     __end_of_TMR5_ReadTimer:
 12001                           	callstack 0
 12002                           
 12003 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 12004 ;; Defined at:
 12005 ;;		line 192 in file "mcc_generated_files/smt1.c"
 12006 ;; Parameters:    Size  Location     Type
 12007 ;;		None
 12008 ;; Auto vars:     Size  Location     Type
 12009 ;;		None
 12010 ;; Return value:  Size  Location     Type
 12011 ;;                  1    wreg      void 
 12012 ;; Registers used:
 12013 ;;		wreg, status,2, status,0
 12014 ;; Tracked objects:
 12015 ;;		On entry : 0/0
 12016 ;;		On exit  : 0/0
 12017 ;;		Unchanged: 0/0
 12018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12023 ;;Total ram usage:        0 bytes
 12024 ;; Hardware stack levels used: 1
 12025 ;; This function calls:
 12026 ;;		Nothing
 12027 ;; This function is called by:
 12028 ;;		Interrupt level 2
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           	psect	text87
 12033  0038B8                     __ptext87:
 12034                           	callstack 0
 12035  0038B8                     _SMT1_PR_ACQ_ISR:
 12036                           	callstack 14
 12037  0038B8                     
 12038                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 12039  0038B8  0139               	movlb	57	; () banked
 12040  0038BA  9DA1               	bcf	161,6,b	;volatile
 12041  0038BC                     
 12042                           ; BSR set to: 57
 12043                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 12044  0038BC  013F               	movlb	63	; () banked
 12045  0038BE  5115               	movf	21,w,b	;volatile
 12046  0038C0  6E3D               	movwf	_smtPeriod^0,c	;volatile
 12047  0038C2  5116               	movf	22,w,b	;volatile
 12048  0038C4  6E3E               	movwf	(_smtPeriod+1)^0,c	;volatile
 12049  0038C6  5117               	movf	23,w,b	;volatile
 12050  0038C8  6E3F               	movwf	(_smtPeriod+2)^0,c	;volatile
 12051  0038CA  6A40               	clrf	(_smtPeriod+3)^0,c	;volatile
 12052  0038CC                     
 12053                           ; BSR set to: 63
 12054                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 12055  0038CC  013C               	movlb	60	; () banked
 12056  0038CE  AB60               	btfss	96,5,b	;volatile
 12057  0038D0  EF6C  F01C         	goto	i2u424_41
 12058  0038D4  EF6E  F01C         	goto	i2u424_40
 12059  0038D8                     i2u424_41:
 12060  0038D8  EF77  F01C         	goto	i2l5468
 12061  0038DC                     i2u424_40:
 12062  0038DC                     
 12063                           ; BSR set to: 60
 12064  0038DC  0E01               	movlw	1
 12065  0038DE  0100               	movlb	0	; () banked
 12066  0038E0  27C7               	addwf	_smtWay& (0+255),f,b	;volatile
 12067  0038E2  0E00               	movlw	0
 12068  0038E4  23C8               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12069  0038E6  23C9               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12070  0038E8  23CA               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12071  0038EA  EF80  F01C         	goto	i2l856
 12072  0038EE                     i2l5468:
 12073                           
 12074                           ; BSR set to: 60
 12075  0038EE  0EFF               	movlw	255
 12076  0038F0  0100               	movlb	0	; () banked
 12077  0038F2  27C7               	addwf	_smtWay& (0+255),f,b	;volatile
 12078  0038F4  0EFF               	movlw	255
 12079  0038F6  23C8               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12080  0038F8  0EFF               	movlw	255
 12081  0038FA  23C9               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12082  0038FC  0EFF               	movlw	255
 12083  0038FE  23CA               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12084  003900                     i2l856:
 12085                           
 12086                           ; BSR set to: 0
 12087  003900  0011               	retfie		f
 12088  003902                     __end_of_SMT1_PR_ACQ_ISR:
 12089                           	callstack 0
 12090                           
 12091 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 12092 ;; Defined at:
 12093 ;;		line 203 in file "mcc_generated_files/smt1.c"
 12094 ;; Parameters:    Size  Location     Type
 12095 ;;		None
 12096 ;; Auto vars:     Size  Location     Type
 12097 ;;		None
 12098 ;; Return value:  Size  Location     Type
 12099 ;;                  1    wreg      void 
 12100 ;; Registers used:
 12101 ;;		wreg, status,2, status,0
 12102 ;; Tracked objects:
 12103 ;;		On entry : 0/0
 12104 ;;		On exit  : 0/0
 12105 ;;		Unchanged: 0/0
 12106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12111 ;;Total ram usage:        0 bytes
 12112 ;; Hardware stack levels used: 1
 12113 ;; This function calls:
 12114 ;;		Nothing
 12115 ;; This function is called by:
 12116 ;;		Interrupt level 2
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120                           	psect	text88
 12121  0035A8                     __ptext88:
 12122                           	callstack 0
 12123  0035A8                     _SMT1_PW_ACQ_ISR:
 12124                           	callstack 14
 12125  0035A8                     
 12126                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 12127  0035A8  0139               	movlb	57	; () banked
 12128  0035AA  9FA1               	bcf	161,7,b	;volatile
 12129  0035AC                     
 12130                           ; BSR set to: 57
 12131                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 12132  0035AC  013F               	movlb	63	; () banked
 12133  0035AE  5118               	movf	24,w,b	;volatile
 12134  0035B0  0100               	movlb	0	; () banked
 12135  0035B2  6FCB               	movwf	_smtDuty& (0+255),b	;volatile
 12136  0035B4  013F               	movlb	63	; () banked
 12137  0035B6  5119               	movf	25,w,b	;volatile
 12138  0035B8  0100               	movlb	0	; () banked
 12139  0035BA  6FCC               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12140  0035BC  013F               	movlb	63	; () banked
 12141  0035BE  511A               	movf	26,w,b	;volatile
 12142  0035C0  0100               	movlb	0	; () banked
 12143  0035C2  6FCD               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12144  0035C4  6BCE               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 12145  0035C6                     
 12146                           ; BSR set to: 0
 12147                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 12148  0035C6  013C               	movlb	60	; () banked
 12149  0035C8  AB60               	btfss	96,5,b	;volatile
 12150  0035CA  EFE9  F01A         	goto	i2u425_41
 12151  0035CE  EFEB  F01A         	goto	i2u425_40
 12152  0035D2                     i2u425_41:
 12153  0035D2  EFF4  F01A         	goto	i2l5478
 12154  0035D6                     i2u425_40:
 12155  0035D6                     
 12156                           ; BSR set to: 60
 12157  0035D6  0E01               	movlw	1
 12158  0035D8  0100               	movlb	0	; () banked
 12159  0035DA  27C7               	addwf	_smtWay& (0+255),f,b	;volatile
 12160  0035DC  0E00               	movlw	0
 12161  0035DE  23C8               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12162  0035E0  23C9               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12163  0035E2  23CA               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12164  0035E4  EFFD  F01A         	goto	i2l863
 12165  0035E8                     i2l5478:
 12166                           
 12167                           ; BSR set to: 60
 12168  0035E8  0EFF               	movlw	255
 12169  0035EA  0100               	movlb	0	; () banked
 12170  0035EC  27C7               	addwf	_smtWay& (0+255),f,b	;volatile
 12171  0035EE  0EFF               	movlw	255
 12172  0035F0  23C8               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12173  0035F2  0EFF               	movlw	255
 12174  0035F4  23C9               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12175  0035F6  0EFF               	movlw	255
 12176  0035F8  23CA               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12177  0035FA                     i2l863:
 12178                           
 12179                           ; BSR set to: 0
 12180  0035FA  0011               	retfie		f
 12181  0035FC                     __end_of_SMT1_PW_ACQ_ISR:
 12182                           	callstack 0
 12183                           
 12184 ;; *************** function _SMT1_Overflow_ISR *****************
 12185 ;; Defined at:
 12186 ;;		line 213 in file "mcc_generated_files/smt1.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;		None
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;		None
 12191 ;; Return value:  Size  Location     Type
 12192 ;;                  1    wreg      void 
 12193 ;; Registers used:
 12194 ;;		wreg, status,2
 12195 ;; Tracked objects:
 12196 ;;		On entry : 0/0
 12197 ;;		On exit  : 0/0
 12198 ;;		Unchanged: 0/0
 12199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12204 ;;Total ram usage:        0 bytes
 12205 ;; Hardware stack levels used: 1
 12206 ;; This function calls:
 12207 ;;		Nothing
 12208 ;; This function is called by:
 12209 ;;		Interrupt level 2
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           	psect	text89
 12214  003D80                     __ptext89:
 12215                           	callstack 0
 12216  003D80                     _SMT1_Overflow_ISR:
 12217                           	callstack 14
 12218  003D80                     
 12219                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 12220  003D80  0139               	movlb	57	; () banked
 12221  003D82  9BA1               	bcf	161,5,b	;volatile
 12222  003D84                     
 12223                           ; BSR set to: 57
 12224                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 12225  003D84  0E00               	movlw	0
 12226  003D86  6E3D               	movwf	_smtPeriod^0,c	;volatile
 12227  003D88  0E00               	movlw	0
 12228  003D8A  6E3E               	movwf	(_smtPeriod+1)^0,c	;volatile
 12229  003D8C  0E00               	movlw	0
 12230  003D8E  6E3F               	movwf	(_smtPeriod+2)^0,c	;volatile
 12231  003D90  0E00               	movlw	0
 12232  003D92  6E40               	movwf	(_smtPeriod+3)^0,c	;volatile
 12233                           
 12234                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 12235  003D94  0E00               	movlw	0
 12236  003D96  0100               	movlb	0	; () banked
 12237  003D98  6FCB               	movwf	_smtDuty& (0+255),b	;volatile
 12238  003D9A  0E00               	movlw	0
 12239  003D9C  6FCC               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12240  003D9E  0E00               	movlw	0
 12241  003DA0  6FCD               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12242  003DA2  0E00               	movlw	0
 12243  003DA4  6FCE               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 12244  003DA6                     
 12245                           ; BSR set to: 0
 12246  003DA6  0011               	retfie		f
 12247  003DA8                     __end_of_SMT1_Overflow_ISR:
 12248                           	callstack 0
 12249                           
 12250                           ;
 12251                           ; Interrupt Vector Table @ 0x8
 12252                           ;
 12253                           
 12254                           	psect	ivt0x8
 12255  000008                     __pivt0x8:
 12256                           	callstack 0
 12257  000008                     ivt0x8_base:
 12258                           	callstack 0
 12259                           
 12260                           ; Vector 0 : SWINT
 12261  000008  0FDB               	dw	_Default_ISR shr (0+2)
 12262                           
 12263                           ; Vector 1 : HLVD
 12264  00000A  0FDB               	dw	_Default_ISR shr (0+2)
 12265                           
 12266                           ; Vector 2 : OSF
 12267  00000C  0FDB               	dw	_Default_ISR shr (0+2)
 12268                           
 12269                           ; Vector 3 : CSW
 12270  00000E  0FDB               	dw	_Default_ISR shr (0+2)
 12271                           
 12272                           ; Vector 4 : NVM
 12273  000010  0FDB               	dw	_Default_ISR shr (0+2)
 12274                           
 12275                           ; Vector 5 : SCAN
 12276  000012  0FDB               	dw	_Default_ISR shr (0+2)
 12277                           
 12278                           ; Vector 6 : CRC
 12279  000014  0FDB               	dw	_Default_ISR shr (0+2)
 12280                           
 12281                           ; Vector 7 : IOC
 12282  000016  0FDB               	dw	_Default_ISR shr (0+2)
 12283                           
 12284                           ; Vector 8 : INT0
 12285  000018  0FDB               	dw	_Default_ISR shr (0+2)
 12286                           
 12287                           ; Vector 9 : ZCD
 12288  00001A  0FDB               	dw	_Default_ISR shr (0+2)
 12289                           
 12290                           ; Vector 10 : AD
 12291  00001C  0FDB               	dw	_Default_ISR shr (0+2)
 12292                           
 12293                           ; Vector 11 : ADT
 12294  00001E  0FDB               	dw	_Default_ISR shr (0+2)
 12295                           
 12296                           ; Vector 12 : CMP1
 12297  000020  0FDB               	dw	_Default_ISR shr (0+2)
 12298                           
 12299                           ; Vector 13 : SMT1
 12300  000022  0F60               	dw	_SMT1_Overflow_ISR shr (0+2)
 12301                           
 12302                           ; Vector 14 : SMT1PRA
 12303  000024  0E2E               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 12304                           
 12305                           ; Vector 15 : SMT1PRW
 12306  000026  0D6A               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 12307                           
 12308                           ; Vector 16 : DMA1SCNT
 12309  000028  0FDB               	dw	_Default_ISR shr (0+2)
 12310                           
 12311                           ; Vector 17 : DMA1DCNT
 12312  00002A  0FDB               	dw	_Default_ISR shr (0+2)
 12313                           
 12314                           ; Vector 18 : DMA1OR
 12315  00002C  0FDB               	dw	_Default_ISR shr (0+2)
 12316                           
 12317                           ; Vector 19 : DMA1A
 12318  00002E  0FDB               	dw	_Default_ISR shr (0+2)
 12319                           
 12320                           ; Vector 20 : SPI1RX
 12321  000030  0FDB               	dw	_Default_ISR shr (0+2)
 12322                           
 12323                           ; Vector 21 : SPI1TX
 12324  000032  0FDB               	dw	_Default_ISR shr (0+2)
 12325                           
 12326                           ; Vector 22 : SPI1
 12327  000034  0FDB               	dw	_Default_ISR shr (0+2)
 12328                           
 12329                           ; Vector 23 : I2C1RX
 12330  000036  0FDB               	dw	_Default_ISR shr (0+2)
 12331                           
 12332                           ; Vector 24 : I2C1TX
 12333  000038  0FDB               	dw	_Default_ISR shr (0+2)
 12334                           
 12335                           ; Vector 25 : I2C1
 12336  00003A  0FDB               	dw	_Default_ISR shr (0+2)
 12337                           
 12338                           ; Vector 26 : I2C1E
 12339  00003C  0FDB               	dw	_Default_ISR shr (0+2)
 12340                           
 12341                           ; Vector 27 : U1RX
 12342  00003E  0D94               	dw	_UART1_rx_vect_isr shr (0+2)
 12343                           
 12344                           ; Vector 28 : U1TX
 12345  000040  0D7F               	dw	_UART1_tx_vect_isr shr (0+2)
 12346                           
 12347                           ; Vector 29 : U1E
 12348  000042  0FDB               	dw	_Default_ISR shr (0+2)
 12349                           
 12350                           ; Vector 30 : U1
 12351  000044  0FDB               	dw	_Default_ISR shr (0+2)
 12352                           
 12353                           ; Vector 31 : TMR0
 12354  000046  0FDB               	dw	_Default_ISR shr (0+2)
 12355                           
 12356                           ; Vector 32 : TMR1
 12357  000048  0FDB               	dw	_Default_ISR shr (0+2)
 12358                           
 12359                           ; Vector 33 : TMR1G
 12360  00004A  0FDB               	dw	_Default_ISR shr (0+2)
 12361                           
 12362                           ; Vector 34 : TMR2
 12363  00004C  0FDB               	dw	_Default_ISR shr (0+2)
 12364                           
 12365                           ; Vector 35 : CCP1
 12366  00004E  0FDB               	dw	_Default_ISR shr (0+2)
 12367                           
 12368                           ; Vector 36 : Undefined
 12369  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 12370                           
 12371                           ; Vector 37 : NCO1
 12372  000052  0FDB               	dw	_Default_ISR shr (0+2)
 12373                           
 12374                           ; Vector 38 : CWG1
 12375  000054  0FDB               	dw	_Default_ISR shr (0+2)
 12376                           
 12377                           ; Vector 39 : CLC1
 12378  000056  0FDB               	dw	_Default_ISR shr (0+2)
 12379                           
 12380                           ; Vector 40 : INT1
 12381  000058  0FDB               	dw	_Default_ISR shr (0+2)
 12382                           
 12383                           ; Vector 41 : CMP2
 12384  00005A  0FDB               	dw	_Default_ISR shr (0+2)
 12385                           
 12386                           ; Vector 42 : DMA2SCNT
 12387  00005C  0FDB               	dw	_Default_ISR shr (0+2)
 12388                           
 12389                           ; Vector 43 : DMA2DCNT
 12390  00005E  0FDB               	dw	_Default_ISR shr (0+2)
 12391                           
 12392                           ; Vector 44 : DMA2OR
 12393  000060  0FDB               	dw	_Default_ISR shr (0+2)
 12394                           
 12395                           ; Vector 45 : DMA2A
 12396  000062  0FDB               	dw	_Default_ISR shr (0+2)
 12397                           
 12398                           ; Vector 46 : I2C2RX
 12399  000064  0FDB               	dw	_Default_ISR shr (0+2)
 12400                           
 12401                           ; Vector 47 : I2C2TX
 12402  000066  0FDB               	dw	_Default_ISR shr (0+2)
 12403                           
 12404                           ; Vector 48 : I2C2
 12405  000068  0FDB               	dw	_Default_ISR shr (0+2)
 12406                           
 12407                           ; Vector 49 : I2C2E
 12408  00006A  0FDB               	dw	_Default_ISR shr (0+2)
 12409                           
 12410                           ; Vector 50 : U2RX
 12411  00006C  0FDB               	dw	_Default_ISR shr (0+2)
 12412                           
 12413                           ; Vector 51 : U2TX
 12414  00006E  0FDB               	dw	_Default_ISR shr (0+2)
 12415                           
 12416                           ; Vector 52 : U2E
 12417  000070  0FDB               	dw	_Default_ISR shr (0+2)
 12418                           
 12419                           ; Vector 53 : U2
 12420  000072  0FDB               	dw	_Default_ISR shr (0+2)
 12421                           
 12422                           ; Vector 54 : TMR3
 12423  000074  0FDB               	dw	_Default_ISR shr (0+2)
 12424                           
 12425                           ; Vector 55 : TMR3G
 12426  000076  0FDB               	dw	_Default_ISR shr (0+2)
 12427                           
 12428                           ; Vector 56 : TMR4
 12429  000078  0DA9               	dw	_TMR4_ISR shr (0+2)
 12430                           
 12431                           ; Vector 57 : CCP2
 12432  00007A  0FDB               	dw	_Default_ISR shr (0+2)
 12433                           
 12434                           ; Vector 58 : Undefined
 12435  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 12436                           
 12437                           ; Vector 59 : CWG2
 12438  00007E  0FDB               	dw	_Default_ISR shr (0+2)
 12439                           
 12440                           ; Vector 60 : CLC2
 12441  000080  0FDB               	dw	_Default_ISR shr (0+2)
 12442                           
 12443                           ; Vector 61 : INT2
 12444  000082  0FDB               	dw	_Default_ISR shr (0+2)
 12445                           
 12446                           ; Vector 62 : Undefined
 12447  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 12448                           
 12449                           ; Vector 63 : Undefined
 12450  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 12451                           
 12452                           ; Vector 64 : Undefined
 12453  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 12454                           
 12455                           ; Vector 65 : Undefined
 12456  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 12457                           
 12458                           ; Vector 66 : Undefined
 12459  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 12460                           
 12461                           ; Vector 67 : Undefined
 12462  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 12463                           
 12464                           ; Vector 68 : Undefined
 12465  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 12466                           
 12467                           ; Vector 69 : Undefined
 12468  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 12469                           
 12470                           ; Vector 70 : TMR5
 12471  000094  0FDB               	dw	_Default_ISR shr (0+2)
 12472                           
 12473                           ; Vector 71 : TMR5G
 12474  000096  0E1B               	dw	_TMR5_GATE_ISR shr (0+2)
 12475                           
 12476                           ; Vector 72 : TMR6
 12477  000098  0FDB               	dw	_Default_ISR shr (0+2)
 12478                           
 12479                           ; Vector 73 : CCP3
 12480  00009A  0DD0               	dw	_CCP3_CaptureISR shr (0+2)
 12481                           
 12482                           ; Vector 74 : CWG3
 12483  00009C  0FDB               	dw	_Default_ISR shr (0+2)
 12484                           
 12485                           ; Vector 75 : CLC3
 12486  00009E  0FDB               	dw	_Default_ISR shr (0+2)
 12487                           
 12488                           ; Vector 76 : Undefined
 12489  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 12490                           
 12491                           ; Vector 77 : Undefined
 12492  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 12493                           
 12494                           ; Vector 78 : Undefined
 12495  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 12496                           
 12497                           ; Vector 79 : Undefined
 12498  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 12499                           
 12500                           ; Vector 80 : CCP4
 12501  0000A8  0DE3               	dw	_CCP4_CaptureISR shr (0+2)
 12502                           
 12503                           ; Vector 81 : CLC4
 12504  0000AA  0FDB               	dw	_Default_ISR shr (0+2)
 12505  0000AC                     ivt0x8_undefint:
 12506                           	callstack 0
 12507  0000AC  00FF               	reset	
 12508                           
 12509                           	psect	text90
 12510  000000                     __ptext90:
 12511                           	callstack 0
 12512  000000                     
 12513                           	psect	rparam
 12514  0000                     
 12515                           	psect	config
 12516                           
 12517                           ;Config register CONFIG1L @ 0x300000
 12518                           ;	External Oscillator Selection
 12519                           ;	FEXTOSC = OFF, Oscillator not enabled
 12520                           ;	Reset Oscillator Selection
 12521                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 12522  300000                     	org	3145728
 12523  300000  8C                 	db	140
 12524                           
 12525                           ;Config register CONFIG1H @ 0x300001
 12526                           ;	Clock out Enable bit
 12527                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12528                           ;	PRLOCKED One-Way Set Enable bit
 12529                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 12530                           ;	Clock Switch Enable bit
 12531                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12532                           ;	Fail-Safe Clock Monitor Enable bit
 12533                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12534  300001                     	org	3145729
 12535  300001  FF                 	db	255
 12536                           
 12537                           ;Config register CONFIG2L @ 0x300002
 12538                           ;	MCLR Enable bit
 12539                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 12540                           ;	Power-up timer selection bits
 12541                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 12542                           ;	Multi-vector enable bit
 12543                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 12544                           ;	IVTLOCK bit One-way set enable bit
 12545                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 12546                           ;	Low Power BOR Enable bit
 12547                           ;	LPBOREN = OFF, ULPBOR disabled
 12548                           ;	Brown-out Reset Enable bits
 12549                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12550  300002                     	org	3145730
 12551  300002  FF                 	db	255
 12552                           
 12553                           ;Config register CONFIG2H @ 0x300003
 12554                           ;	Brown-out Reset Voltage Selection bits
 12555                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 12556                           ;	ZCD Disable bit
 12557                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12558                           ;	PPSLOCK bit One-Way Set Enable bit
 12559                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12560                           ;	Stack Full/Underflow Reset Enable bit
 12561                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12562                           ;	Debugger Enable bit
 12563                           ;	DEBUG = OFF, Background debugger disabled
 12564                           ;	Extended Instruction Set Enable bit
 12565                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12566  300003                     	org	3145731
 12567  300003  FF                 	db	255
 12568                           
 12569                           ;Config register CONFIG3L @ 0x300004
 12570                           ;	WDT Period selection bits
 12571                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12572                           ;	WDT operating mode
 12573                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 12574  300004                     	org	3145732
 12575  300004  9F                 	db	159
 12576                           
 12577                           ;Config register CONFIG3H @ 0x300005
 12578                           ;	WDT Window Select bits
 12579                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12580                           ;	WDT input clock selector
 12581                           ;	WDTCCS = SC, Software Control
 12582  300005                     	org	3145733
 12583  300005  FF                 	db	255
 12584                           
 12585                           ;Config register CONFIG4L @ 0x300006
 12586                           ;	Boot Block Size selection bits
 12587                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 12588                           ;	Boot Block enable bit
 12589                           ;	BBEN = OFF, Boot block disabled
 12590                           ;	Storage Area Flash enable bit
 12591                           ;	SAFEN = OFF, SAF disabled
 12592                           ;	Application Block write protection bit
 12593                           ;	WRTAPP = OFF, Application Block not write protected
 12594  300006                     	org	3145734
 12595  300006  FF                 	db	255
 12596                           
 12597                           ;Config register CONFIG4H @ 0x300007
 12598                           ;	Configuration Register Write Protection bit
 12599                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 12600                           ;	Boot Block Write Protection bit
 12601                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 12602                           ;	Data EEPROM Write Protection bit
 12603                           ;	WRTD = OFF, Data EEPROM not write-protected
 12604                           ;	SAF Write protection bit
 12605                           ;	WRTSAF = OFF, SAF not Write Protected
 12606                           ;	Low Voltage Programming Enable bit
 12607                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12608  300007                     	org	3145735
 12609  300007  FF                 	db	255
 12610                           
 12611                           ;Config register CONFIG5L @ 0x300008
 12612                           ;	PFM and Data EEPROM Code Protection bit
 12613                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 12614  300008                     	org	3145736
 12615  300008  FF                 	db	255
 12616                           
 12617                           ;Config register CONFIG5H @ 0x300009
 12618                           ;	unspecified, using default values
 12619  300009                     	org	3145737
 12620  300009  FF                 	db	255
 12621                           tosu	equ	0x3FFF
 12622                           tosh	equ	0x3FFE
 12623                           tosl	equ	0x3FFD
 12624                           stkptr	equ	0x3FFC
 12625                           pclatu	equ	0x3FFB
 12626                           pclath	equ	0x3FFA
 12627                           pcl	equ	0x3FF9
 12628                           tblptru	equ	0x3FF8
 12629                           tblptrh	equ	0x3FF7
 12630                           tblptrl	equ	0x3FF6
 12631                           tablat	equ	0x3FF5
 12632                           prodh	equ	0x3FF4
 12633                           prodl	equ	0x3FF3
 12634                           indf0	equ	0x3FEF
 12635                           postinc0	equ	0x3FEE
 12636                           postdec0	equ	0x3FED
 12637                           preinc0	equ	0x3FEC
 12638                           plusw0	equ	0x3FEB
 12639                           fsr0h	equ	0x3FEA
 12640                           fsr0l	equ	0x3FE9
 12641                           wreg	equ	0x3FE8
 12642                           indf1	equ	0x3FE7
 12643                           postinc1	equ	0x3FE6
 12644                           postdec1	equ	0x3FE5
 12645                           preinc1	equ	0x3FE4
 12646                           plusw1	equ	0x3FE3
 12647                           fsr1h	equ	0x3FE2
 12648                           fsr1l	equ	0x3FE1
 12649                           bsr	equ	0x3FE0
 12650                           indf2	equ	0x3FDF
 12651                           postinc2	equ	0x3FDE
 12652                           postdec2	equ	0x3FDD
 12653                           preinc2	equ	0x3FDC
 12654                           plusw2	equ	0x3FDB
 12655                           fsr2h	equ	0x3FDA
 12656                           fsr2l	equ	0x3FD9
 12657                           status	equ	0x3FD8

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         121
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      64
    BANK0           160     79     160
    BANK1           256     12      44
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3426$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3426$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[11]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_TMR4_SetInterruptHandler
    _loop->_getCurve
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _pad->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _setSteering->_PWM5_LoadDutyValue
    _setSteering->_PWM6_LoadDutyValue
    _calcSpeed->___fltol
    _calcMotorPow->___fltol
    _calcMotorPow->_actSpeed
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _SYSTEM_Initialize->_TMR3_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _startAccell->_setSteering
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___flge->___xxtofl
    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_printf
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   57063
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   55916
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          0     0      0    4914
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     130
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   12585
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0    7335
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    7304
                                              6 BANK1      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7043
                                             77 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6    6573
                                             59 BANK0     18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4829
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (10) _UART1_Write                                         1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             31 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     626
                                             22 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    3983
                                             17 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3788
                                              8 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    6430
                                             71 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                             47 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    6859
                                             71 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1126
                                              2 BANK0      4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     845
                                             31 COMRAM     2     0      2
                                             14 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                              8 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             31 COMRAM     2     2      0
                                             63 BANK0      8     4      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             22 BANK0     25    17      8
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     805
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   3     3      0       0
                                             22 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            3     3      0       0
                                             28 COMRAM     3     3      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     4     4      0     144
                                              2 COMRAM     4     4      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     4     4      0     144
                                              8 COMRAM     4     4      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       2     2      0     233
                                             20 COMRAM     2     2      0
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         _printf
           _vfprintf
             _vfpfcnvrt
               _fputc
                 _putch
                   _UART1_Write
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                   _fputs
                     _fputc
                   _strlen
       _setSteering
     _getBatteryVoltage
     _getCurve
     _getReverse
     _printf
     _setMotor
     _setSteering
     _startAccell
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      86        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     181      0       0      84        0.0%
BITBIGSFRhhhhll    17E      0       0      54        0.0%
BITBIGSFRhhhhll    17A      0       0      55        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C      2C       7       17.2%
BITBIGSFRhhhhll     E3      0       0      51        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      40       1       67.4%
BITBIGSFRhhhhll     44      0       0      60        0.0%
BITBIGSFRhhhhll     3A      0       0      48        0.0%
BITBIGSFRhhhhll     34      0       0      68        0.0%
BITBIGSFRhhhhhh     28      0       0      36        0.0%
BITBIGSFRhhhhll     20      0       0      43        0.0%
BITBIGSFRhhhhll     20      0       0      71        0.0%
BITBIGSFRllhh       15      0       0      75        0.0%
BITBIGSFRhhhhll     12      0       0      49        0.0%
BITBIGSFRlh         11      0       0      74        0.0%
BITBIGSFRhhhhll      B      0       0      67        0.0%
BITBIGSFRhhhhll      A      0       0      42        0.0%
BITBIGSFRhhhhll      8      0       0      56        0.0%
BITBIGSFRllhlhl      6      0       0      78        0.0%
BITBIGSFRlllhhl      6      0       0      81        0.0%
BITBIGSFRhhhhll      6      0       0      58        0.0%
BITBIGSFRhhhhll      6      0       0      69        0.0%
BITBIGSFRhhhhll      5      0       0      59        0.0%
BITBIGSFRhhhhll      5      0       0      66        0.0%
BITBIGSFRhhhhll      5      0       0      64        0.0%
BITBIGSFRhhhhll      5      0       0      62        0.0%
BITBIGSFRhhhhhh      4      0       0      38        0.0%
BITBIGSFRhhhhll      4      0       0      61        0.0%
BITBIGSFRhhhhll      4      0       0      63        0.0%
BITBIGSFRhhhhll      4      0       0      65        0.0%
BITBIGSFRhhhhhh      4      0       0      40        0.0%
BITBIGSFRlllhll      3      0       0      82        0.0%
BITBIGSFRllhll       3      0       0      79        0.0%
BITBIGSFRhhhhhl      3      0       0      41        0.0%
BITBIGSFRllhlhl      2      0       0      77        0.0%
BITBIGSFRhhhhhh      1      0       0      39        0.0%
BITBIGSFRhhhhll      1      0       0      50        0.0%
BITBIGSFRllhlhl      1      0       0      76        0.0%
BITBIGSFRlllhhh      1      0       0      80        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      47        0.0%
BITBIGSFRhhhhll      1      0       0      46        0.0%
BITBIGSFRllllh       1      0       0      83        0.0%
BITBIGSFRhhhhhh      1      0       0      37        0.0%
BITBIGSFRhhhhll      1      0       0      53        0.0%
BITBIGSFRhhhhll      1      0       0      52        0.0%
BITBIGSFRhhhhll      1      0       0      57        0.0%
BITBIGSFRhhhhll      1      0       0      70        0.0%
BITBIGSFRhhl         1      0       0      72        0.0%
BITBIGSFRhl          1      0       0      73        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      85        0.0%
DATA                 0      0     10C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jan 26 08:32:49 2024

                             _CCP4_Initialize 3C1E                        ??_CCP3_DefaultCallBack 0003  
                                 _startAccell 39D0                                            l72 3EE6  
                                          l75 3DF0                                            l69 3820  
                                ___awdiv@sign 0065                             ??_TMR5_WriteTimer 000F  
                                         l312 354A                                           l404 373E  
                                         l308 34FE                                           l309 3518  
                                         l318 3EFE                                           l520 386A  
                                         l441 3C78                                           l362 3F1C  
                                         l371 3F08                                           l188 2F0E  
                                         l284 32BA                                           l365 3F30  
                                         l359 3F26                                           l368 3F12  
                                         l712 3B8C                                           l449 3F58  
                                         l482 3C4A                                           l723 3E86  
                                         l555 3F3A                                           l644 3CD2  
                                         l740 3B20                                           l709 3E9E  
                                         l581 3A7E                                           l726 3B56  
                                         l479 3F4E                                           l751 3EB6  
                                         l737 3ECE                                           l754 3AEA  
                                         l923 3E6E                                           l695 3F44  
                                         l795 3BBC                                           l893 3CFE  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _pad 2F10  
                             _TMR2_Initialize 3E54                CCP4_SetCallBack@customCallBack 0020  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 3F46                                  ___flmul@aexp 0083  
                                ___flmul@bexp 0088                            _UART1_Transmit_ISR 394A  
                                ___flmul@sign 0082                                  ___flmul@temp 008D  
                                ___flmul@prod 0089                       __end_of_CCP4_CaptureISR 37D8  
                                ___fltol@exp1 0021                                          l2001 192E  
                                        l1042 35A6                                          l2004 17C0  
                                        l2014 18F0                                          l2006 1838  
                                        l1310 2504                                          l1054 39A4  
                                        l2007 1826                                          l2111 1F54  
                                        l1224 25FC                                          l2041 210C  
                                        l1305 247A                                          l1057 39CE  
                                        l1241 2734                                          l1250 3354  
                                        l1330 19E6                                          l2130 33EC  
                                        l2106 1D72                                          l2052 20A4  
                                        l1324 25DA                                          l2045 2048  
                                        l2117 34E0                                          l2061 3D7E  
                                        l1253 3DCC                                          l3030 371E  
                                        l3022 36F4                                          l3110 3BB4  
                                        l3102 3B8E                                          l2038 1FB0  
                                        l2118 34E8                                          l3040 3732  
                                        l3032 3720                                          l3024 36F6  
                                        l3112 3BB6                                          l3104 3BAC  
                                        l3120 3E60                                          l2144 3A46  
                                        l1272 22AC                                          l1264 3A0A  
                                        l1345 1B6C                                          l3050 373C  
                                        l3042 3734                                          l3034 372A  
                                        l3026 36FE                                          l3114 3BB8  
                                        l3106 3BAE                                          l3122 3E66  
                                        l1354 287E                                          l1370 2304  
                                        l2138 3948                                          l1258 3480  
                                        l1363 2D72                                          l1371 232C  
                                        l2091 2FD6                               _timer3ReloadVal 00EB  
                                        l3044 3736                                          l3036 372E  
                                        l3028 3708                                          l3060 2E70  
                                        l3052 3DCE                                          l3124 3EA0  
                                        l3116 3E70                                          l3108 3BB0  
                                        l1380 2466                                          l3046 3738  
                                        l3038 3730                                          l3070 2ECA  
                                        l3062 2EBE                                          l3054 2E46  
                                        l3118 3E54                                          l1614 309C  
                                        l1462 298C                                          l2086 2F56  
                                        l1367 22CC                                          l3136 3CD4  
                                        l3048 373A                                          l3072 2ECC  
                                        l3064 2EC0                                          l3056 2E66  
                                        l5000 328C                                          l2096 1BA6  
                                        l1288 22BC                                          l1369 22F0  
                                        l2089 2F9A                                          l3090 354C  
                                        l3074 2ECE                                          l3066 2EC2  
                                        l3058 2E68                                          l3146 3EB8  
                                        l3162 3E88                                          l5002 32B6  
                                        l2098 1BAE                                          l1299 3214  
                                        l3076 2ED0                                          l3068 2EC4  
                                        l5100 315E                                          l1653 2B9A  
                                        l1821 2C6C                                          l3078 3ED0  
                                        l5110 319E                                          l5102 3176  
                                        l1911 120E                                          l1831 2E24  
                                        l6000 1544                                          l1680 2A94  
                                        l1920 14DE                                          l1912 11FC  
                                        l1648 2B54                                          l5120 31E8  
                                        l5112 31B0                                          l5104 3178  
                                        l1913 11C2                                          l6010 1570  
                                        l6002 154A                                          l5122 3204  
                                        l5114 31C6                                          l5106 3188  
                                        l6100 18F4                                          l6020 15C6  
                                        l6012 1580                                          l6004 1550  
                                        l4500 10E6                                          l1828 2C8C  
                                        l5116 31CE                                          l5108 318C  
                                        l4350 3F28                                          l4342 3F0A  
                                        l6110 191E                                          l6102 1904  
                                        l6030 160E                                          l6014 1590  
                                        l6006 155E                                          l4510 1120  
                                        l4502 10E8                                          l1838 2E44  
                                        l5118 31D2                                          l4344 3F00  
                                        l6104 1912                                          l6040 165C  
                                        l6032 161A                                          l6024 15DA  
                                        l6016 1596                                          l6008 1560  
                                        l4600 133E                                          l1928 1328  
                                        l4520 1134                                          l4512 1124  
                                        l4504 10F0                                          l6120 2B04  
                                        l6200 39E4                                          l1937 13F8  
                                        l4362 3F50                                          l4346 3F1E  
                                        l6106 1914                                          l6050 16BA  
                                        l6042 166C                                          l6034 1636  
                                        l6026 15EA                                          l6018 15B6  
                                        l1938 13E6                                          l4610 137A  
                                        l4602 134E                                          l4530 1148  
                                        l4522 1138                                          l4514 1128  
                                        l4506 1100                                          l6130 2B92  
                                        l6122 2B14                                          l6114 2A96  
                                        l6210 3412                                          l6202 39FA  
                                        l4364 3F46                                          l4348 3F14  
                                        l6108 191A                                          l6060 1744  
                                        l6052 16CA                                          l6044 167C  
                                        l6036 1642                                          l6028 15F4  
                                        l6140 1F7A                                          l4620 13A6  
                                        l4612 137C                                          l4540 115C  
                                        l4532 114C                                          l4524 113C  
                                        l4516 112C                                          l4508 1112  
                                        l6132 2B98                                          l6124 2B22  
                                        l6116 2AC6                                          l6212 3416  
                                        l6204 33EE                                          l4382 3F3C  
                                        l4366 3F32                                          l6070 17BE  
                                        l6062 177A                                          l6054 16EA  
                                        l6046 168C                                          l6038 164E  
                                        l6150 1FF2                                          l6142 1FC0  
                                        l4630 13DE                                          l4614 138A  
                                        l4606 1362                                          l4622 13A8  
                                        l4550 11BA                                          l4534 1150  
                                        l4526 1140                                          l4518 1130  
                                        l4542 1160                                          l4470 103C  
                                        l6310 257C                                          l6302 2544  
                                        l6126 2B34                                          l6118 2AD6  
                                        l6214 3460                                          l6222 347E  
                                        l6206 33F4                                          l6230 2148  
                                        ?_pad 0070                                          l6080 181E  
                                        l6072 17D0                                          l6064 1788  
                                        l6056 16FA                                          l6048 169C  
                                        l6160 207A                                          l6152 1FFE  
                                        l6144 1FD6                                          l6136 1F5A  
                                        l6400 27F6                                          l4640 145C  
                                        l4616 1392                                          l4608 136C  
                                        l4624 13B6                                          l4560 11F0  
                                        l4552 11D0                                          l4544 1164  
                                        l4536 1154                                          l4528 1144  
                                        l4472 104C                                          l4480 1076  
                                        l4464 101E                                          l6304 2556  
                                        l6128 2B42                                          l5600 352C  
                                        l6216 3468                                          l6208 340A  
                                        l6240 21C2                                          l6232 2164  
                                        l6090 188C                                          l6074 17DE  
                                        l6066 17A6                                          l6058 171A  
                                        l6170 20B8                                          l6162 2086  
                                        l6154 2030                                          l6138 1F6C  
                                        l6410 2846                                          l6402 280A  
                                        l4650 14A2                                          l4634 1408  
                                        l4642 145E                                          l4626 13BA  
                                        l4618 1396                                          l4570 1240  
                                        l4562 11FA                                          l4554 11DC  
                                        l4546 118E                                          l4538 1158  
                                        l4490 10A6                                          l4482 1086  
                                        l4474 105C                                          l4466 102C  
                                        l6330 1930                                          l5602 352E  
                                        l5610 3EF8                                          l6218 3478  
                                        l6250 220A                                          l6242 21D8  
                                        l6234 217A                                          l6226 210E  
                                        l6420 37E8                                          l6084 1848  
                                        l6092 1890                                          l6076 17E2  
                                        l6068 17B0                                          l4820 29A6  
                                        l6172 20DC                                          l6164 2094  
                                        l6156 2032                                          l6148 1FEA  
                                        l6412 2862                                          l6404 280E  
                                        l4660 14CC                                          l4652 14B0  
                                        l4644 146E                                          l4636 1414  
                                        l4628 13C8                                          l4580 127C  
                                        l4572 1250                                          l4564 121C  
                                        l4556 11E0                                          l4548 11AA  
                                        l4492 10B4                                          l4484 108C  
                                        l4476 106C                                          l4468 103A  
                                        l6340 198E                                          l6332 193E  
                                        l6308 256A                                          l6316 2590  
                                        l5604 353E                                          l5620 33A4  
                                        l5612 3356                                          l5700 2FBC  
                                        l6260 2230                                          l6244 21E8  
                                        l6236 218A                                          l6228 2112  
                                        l1997 15A6                                          l4910 3C5C  
                                        l6190 3858                                          l6182 3822  
                                        l6430 3800                                          l6422 37EC  
                                        l6094 18AA                                          l6086 1854  
                                        l6078 17F0                                          l4830 29F6  
                                        l6174 20EC                                          l6166 20B2  
                                        l6158 203E                                          l6414 286A  
                                        l6406 281E                                          l4662 14CE  
                                        l4654 14B6                                          l4646 147E  
                                        l4638 1422                                          l4590 12C2  
                                        l4582 128A                                          l4574 125E  
                                        l4566 122C                                          l4558 11EE  
                                        l4494 10B6                                          l4486 109E  
                                        l4478 106E                                          l6350 19DA  
                                        l6342 1996                                          l6334 1954  
                                        l5606 3542                                          l5622 33DA  
                                        l5614 336A                                          l5630 3922  
                                        l5710 1B9A                                          l6262 2246  
                                        l6246 21F8                                          l6238 21A6  
                                        l4912 3C68                                          l4920 3CBC  
                                        l6192 385A                                          l6184 3836  
                                        l6432 3808                                          l6424 37F4  
                                        l6096 18BE                                          l6088 1862  
                                        l4840 2A20                                          l4832 29FA  
                                        l4824 29BA                                          l6176 20FA  
                                        l6168 20B4                                          l6416 2876  
                                        l6408 283A                                          l4656 14B8  
                                        l4648 149E                                          l4592 12F6  
                                        l4584 128C                                          l4576 126C  
                                        l4496 10C6                                          l4488 10A0  
                                        l6360 1AAC                                          l6352 19EA  
                                        l6344 19A2                                          l6336 1958  
                                        l6280 2468                                          l5800 39A0  
                                        l5608 3546                                          l5616 337C  
                                        l5632 3928                                          l5640 3A38  
                                        l5720 1C66                                          l5712 1BD6  
                                        l5704 1B6E                                          l6248 2204  
                                        l6440 25DC                                          l4914 3C72  
                                        l4930 3C2E                                          l4922 3CC0  
                                        l6194 3866                                          l6186 383A  
                                        l6434 380C                                          l6426 37F8  
                                        l6418 37D8                                          l6098 18D8  
                                        l4850 2A48                                          l4842 2A2A  
                                        l4834 2A08                                          l4826 29E4  
                                        l4818 298E                                          l6178 20FC  
                                        l4658 14BE                                          l4594 12F8  
                                        l4586 1296                                          l4578 1278  
                                        l4498 10D6                                          l6362 1AB8  
                                        l6354 1A00                                          l6346 19BC  
                                        l6338 1974                                          l6282 247A  
                                        l5802 39A2                                          l5650 2BD0  
                                        l5618 3386                                          l5626 3902  
                                        l5634 3A0C                                          l5730 1D08  
                                        l5722 1C6C                                          l5714 1BDE  
                                        l5706 1B7E                                          l5810 3D62  
                                        l6266 2256                                          l6258 221A  
                                        l6274 2272                                          l6450 266C  
                                        l6442 260A                                          l4916 3C76  
                                        l4908 3C4C                                          l4932 3C3A  
                                        l4940 3A5C                                          l4924 3CC2  
                                        l6188 3854                                          l6436 3814  
                                        l6428 37FC                                          l4852 2A54  
                                        l4844 2A34                                          l4828 29E6  
                                        l5820 28A4                                          l4596 1308  
                                        l4588 129C                                          l6380 1B5C  
                                        l6356 1A04                                          l6348 19D2  
                                        l6372 1AD0                                          l6284 2496  
                                        l6292 24CA                                          l5804 39B2  
                                        l5660 2C52                                          l5652 2BE4  
                                        l5644 2B9C                                          l5628 3910  
                                        l5636 3A18                                          l5732 1D22  
                                        l5724 1C72                                          l5716 1BE8  
                                        l5708 1B80                                          l5740 1D74  
                                        l6268 2266                                          l6196 39D0  
                                        l6460 2694                                          l6452 2670  
                                        l6444 261A                                          l4934 3C44  
                                        l4942 3A60                                          l4926 3CCE  
                                        l4918 3CA8                                          l6438 3818  
                                        l4854 2A64                                          l5830 28DA  
                                        l5822 28A8                                          l5814 2880  
                                        l5910 2CDC                                          l5902 2C8E  
                                        l6390 2750                                          l4598 1318  
                                        l6382 1B64                                          l6366 1AC4  
                                        l6358 1A1A                                          l6374 1B1A  
                                        l6630 237C                                          l6294 2508  
                                        l6286 24A2                                          l5662 2C54  
                                        l5654 2BF2                                          l5646 2BA8  
                                        l5670 2D9C                                          l5638 3A1C  
                                        l5734 1D3C                                          l5718 1BEE  
                                        l5726 1CD6                                          l5750 1DF8  
                                        l5742 1DA2                                          l6198 39D8  
                                        l6470 26D2                                          l6462 2698  
                                        l6454 2678                                          l6446 261E  
                                        l4936 3C48                                          l4928 3C1E  
                                        l4944 3A7A                                          l4960 3216  
                                        l4856 2A74                                          l5840 291C  
                                        l5832 28F0                                          l5824 28B6  
                                        l5816 2886                                          l5920 2D38  
                                        l5904 2CAC                                          l5912 2CEC  
                                        l6392 2750                                          l6376 1B38  
                                        l6632 1AE4                                          l6296 251C  
                                        l6288 24BE                                          l5664 2C66  
                                        l5656 2C04                                          l5648 2BC8  
                                        l5680 2E1E                                          l5672 2DB0  
                                        l5592 34EC                                          l5728 1CEA  
                                        l5736 1D4A                                          l5760 1ECE  
                                        l5752 1E56                                          l5744 1DB4  
                                        l5808 3D58                                          l6624 2286  
                                        l6480 271C                                          l6472 26EE  
                                        l6464 26A6                                          l6456 2680  
                                        l6448 2622                                          l4938 3A48  
                                        l4970 3240                                          l4962 321A  
                                        l4858 2A84                                          l5842 293A  
                                        l5834 28F8                                          l5850 295C  
                                        l5826 28C6                                          l5818 2894  
                                        l5914 2D08                                          l5922 2D5A  
                                        l5906 2CC8                                          l6394 275C  
                                        l6378 1B40                                          l5930 2340  
                                        l6298 2530                                          l6626 24DE  
                                        l5658 2C32                                          l5674 2DBE  
                                        l5666 2D74                                          l5594 34EC  
                                        l5690 2F4E                                          l5682 2F10  
                                        l5762 1EE2                                          l5746 1DC6  
                                        l6482 2728                                          l6474 26F6  
                                        l6466 26B8                                          l6458 2684  
                                        l6490 3E1C                                          l4980 3254  
                                        l4972 3244                                          l4964 3226  
                                        l5860 2FDE                                          l5852 296C  
                                        l5844 294A                                          l5836 2904  
                                        l5828 28CA                                          l5916 2D24  
                                        l5908 2CD0                                          l6396 27DA  
                                        l6388 2736                                          l5932 2348  
                                        l5940 23AA                                          l5924 22BE  
                                        l6628 25A4                                          l5676 2DEC  
                                        l5668 2D94                                          l5596 350E  
                                        l5692 2F62                                          l5684 2F1E  
                                        l5756 1E8E                                          l5748 1DCA  
                                        l5772 1F0E                                          l5780 3482  
                                        l6484 272C                                          l6476 2704  
                                        l6468 26CC                                          l6492 3E2A  
                                        l4990 3268                                          l4982 3258  
                                        l4974 3248                                          l4966 3236  
                                        l5870 300E                                          l5862 2FEC  
                                        l5854 297C                                          l5846 294C  
                                        l5838 2912                                          l5790 3B22  
                                        l5918 2D2C                                          l6398 27EE  
                                        l5950 2414                                          l5942 23C8  
                                        l5934 2354                                          l5926 230C  
                                        l5678 2E0C                                          l5598 351A  
                                        l5694 2F76                                          l5686 2F32  
                                        l5774 1F3E                                          l5758 1EBC  
                                        l5766 1EF0                                          l5782 348A  
                                        l6486 3E16                                          l4992 326C  
                                        l4984 325C                                          l4976 324C  
                                        l4968 323C                                          l5880 303C  
                                        l5872 3012                                          l5864 2FF4  
                                        l5848 2956                                          l5792 3AEC  
                                        l5952 2420                                          l5944 23D4  
                                        l5928 2334                                          l5696 2F7C  
                                        l5688 2F42                                          l5768 1F02  
                                        l5784 3498                                          l6488 3E1A  
                                        l4994 3270                                          l4986 3260  
                                        l4978 3250                                          l5890 3070  
                                        l5882 304A                                          l5874 301A  
                                        l5866 2FF8                                          l5858 2FD8  
                                        l5970 32BC                                          l5794 3AB6  
                                        l5954 243C                                          l5946 23F0  
                                        l5938 2368                                          l5698 2FA8  
                                        l5786 34BE                                          l4996 3274  
                                        l4988 3264                                          l5892 3076  
                                        l5884 3050                                          l5876 302C  
                                        l5868 3006                                          l5980 334C  
                                        l5972 32C6                                          l5788 3B58  
                                        l5956 2444                                          l5948 23F8  
                                        l5796 3996                                          l4998 3280  
                                        l5886 3066                                          l5878 3034  
                                        l5894 307C                                          l5990 14FE  
                                        l5974 32DC                                          l5958 2454  
                                        l5798 399C                                          l5966 3DA8  
                                        l5896 308C                                          l5888 306E  
                                        l5992 150E                                          l5984 14E0  
                                        l5976 32EC                                          l5968 3DB6  
                                        l5898 3094                                          l5994 151E  
                                        l5986 14EE                                          l5978 331E  
                                        l5996 152E                                          l5988 14FC  
                                        l5998 1534                                          STR_1 1001  
                                        STR_2 1012                                          u3000 138A  
                                        u3001 1386                                          u3010 13A6  
                                        u3011 13A2                                          u3100 147E  
                                        u3020 13B6                                          u3101 147A  
                                        u3021 13B2                                          _LATA 003FBA  
                                        u3110 149E                                          u3030 13C8  
                                        _LATB 003FBB                                          u1415 3728  
                                        u3111 149A                                          u3031 13C4  
                                        _LATC 003FBC                                          u1416 372A  
                                        u3120 14B0                                          u3040 13DE  
                                        _LATD 003FBD                                          u3121 14AC  
                                        u3041 13DA                                          _LATE 003FBE  
                                        u3130 14CC                                          u3050 13F4  
                                        u3131 14C8                                          u3051 13F0  
                                        u3060 1408                                          u3061 1404  
                                        u3070 1422                                          u3071 141E  
                                        u5000 18AA                                          u3400 2A08  
                                        u3080 145C                                          u5001 18A6  
                                        u3401 2A04                                          u3081 1458  
                                        u5010 18D8                                          u3410 2A1C  
                                        u3090 146E                                          _T2PR 003FAB  
                                        u5011 18D4                                          u3411 2A18  
                                        u3091 146A                                          u5020 1912  
                                        u3420 2A44                                          u5100 1FD6  
                                        u4300 337C                                          u5021 190E  
                                        u3421 2A40                                          u5101 1FD2  
                                        u4301 3378                                          u3430 2A64  
                                        u5110 202C                                          u5030 2AC6  
                                        u4310 33A4                                          u3431 2A60  
                                        u5111 2028                                          u5031 2AC2  
                                        u4311 33A0                                          u3440 2A74  
                                        u5120 2076                                          u2800 10C6  
                                        u5040 2B04                                          u4400 2DBE  
                                        u4320 33DA                                          u5200 3460  
                                        u3441 2A70                                          u5121 2072  
                                        u2801 10C2                                          u5041 2B00  
                                        u4401 2DBA                                          u4321 33D6  
                                        u5201 345C                                          u5130 2094  
                                        u2810 10D6                                          u5050 2B22  
                                        u4410 2DEC                                          u4330 3948  
                                        u5210 2148                                          _T4PR 003F9F  
                                        u5131 2090                                          u2811 10D2  
                                        u5051 2B1E                                          u4411 2DE8  
                                        u4331 3944                                          u5211 2144  
                                        u3380 29A6                                          u5140 20A4  
                                        u2900 121C                                          u2820 1112  
                                        u5060 2B42                                          u4260 34FE  
                                        u4340 3A38                                          u4420 2F1E  
                                        u4500 1D22                                          u5300 2246  
                                        u5220 2164                                          u3700 3188  
                                        u3381 29A2                                          u5141 20A0  
                                        u2901 1218                                          u2821 110E  
                                        u5061 2B3E                                          u4261 34FA  
                                        u4341 3A34                                          u4421 2F1A  
                                        u4501 1D1E                                          u5301 2242  
                                        u5221 2160                                          u3701 3184  
                                        u3390 29DA                                          u5150 20B2  
                                        u2910 122C                                          u2830 1120  
                                        u2750 103A                                          u5070 2B92  
                                        u4270 350E                                          u4430 2F42  
                                        u4510 1D3C                                          u5310 2266  
                                        u5230 217A                                          u3710 319E  
                                        u5151 20AE                                          u2911 1228  
                                        u2831 111C                                          u2751 1036  
                                        u5071 2B8E                                          u4351 2BA2  
                                        u4271 350A                                          u4431 2F3E  
                                        u4511 1D38                                          u5311 2262  
                                        u5231 2176                                          u3711 319A  
                                        u5160 20EC                                          u5080 1F6C  
                                        u2920 125E                                          u2840 118E  
                                        u2760 104C                                          u5400 19D2  
                                        u5320 2496                                          u4360 2BC8  
                                        u4280 353E                                          u4440 2F9A  
                                        u4520 1D4A                                          u5240 21A6  
                                        u3720 31B0                                          u5161 20E8  
                                        u5081 1F68                                          u2921 125A  
                                        u2841 118A                                          u2761 1048  
                                        u5401 19CE                                          u5321 2492  
                                        u4361 2BC4                                          u4281 353A  
                                        u4441 2F96                                          u4521 1D46  
                                        u5241 21A2                                          u3721 31AC  
                                        u5170 20FA                                          u5090 1F7A  
                                        u2930 126C                                          u2850 11A6  
                                        u2770 105C                                          u5410 1A00  
                                        u5330 24BE                                          u4610 39B2  
                                        u4370 2BF2                                          u4290 336A  
                                        u4450 2FA8                                          u4530 1DA2  
                                        u5250 21C2                                          u3730 31C6  
                                        u3395 29D0                                          u5171 20F6  
                                        u5091 1F76                                          u2931 1268  
                                        u2851 11A0                                          u2771 1058  
                                        u5411 19FC                                          u5331 24BA  
                                        u4611 39AE                                          u4371 2BEE  
                                        u4291 3366                                          u4451 2FA4  
                                        u4531 1D9E                                          u5251 21BE  
                                        u3731 31C2                                          u4700 302C  
                                        u4620 2894                                          u2940 128A  
                                        u2860 11A8                                          u2780 109E  
                                        u5420 1A1A                                          u5340 2556  
                                        u4380 2C32                                          u4460 1B7E  
                                        u4540 1DF8                                          u5260 21D8  
                                        u3740 31E8                                          u5180 3A0A  
                                        u5500 261A                                          _PMD0 0039C0  
                                        u4701 3028                                          u4621 2890  
                                        u2941 1286                                          u2781 109A  
                                        u5421 1A16                                          u4605 3ADC  
                                        u5341 2552                                          u4381 2C2E  
                                        u4461 1B7A                                          u4541 1DF4  
                                        u5261 21D4                                          u3741 31E4  
                                        u5181 3A06                                          u5501 2616  
                                        _PMD1 0039C1                                          u4710 304A  
                                        u4630 28B6                                          u2950 12C2  
                                        u2870 11D0                                          u2790 10B4  
                                        u5430 1B38                                          u5350 257C  
                                        u4390 2D94                                          u4470 1B9A  
                                        u4550 1EBC                                          u5190 340A  
                                        u5270 21F8                                          u3750 3204  
                                        u5510 266C                                          _PMD2 0039C2  
                                        u4711 3046                                          u4631 28B2  
                                        u2951 12BE                                          u2871 11CC  
                                        u2791 10B0                                          u5431 1B34  
                                        u5351 2578                                          u4391 2D90  
                                        u4471 1B96                                          u4551 1EB8  
                                        u5191 3406                                          u5271 21F4  
                                        u3751 3200                                          u5511 2668  
                                        _PMD3 0039C3                                          u4720 3066  
                                        u4640 28F0                                          u2960 1308  
                                        u2880 11EE                                          u5440 1B5C  
                                        u5360 1954                                          u4800 2414  
                                        u4480 1CEA                                          u4560 34E0  
                                        u5280 221A                                          u5520 2694  
                                        _PMD4 0039C4                                          u4721 3062  
                                        u4641 28EC                                          u2961 1304  
                                        u2881 11EA                                          u5441 1B58  
                                        u5361 1950                                          u4801 2410  
                                        u4481 1CE6                                          u4561 34DC  
                                        u5281 2216                                          u5521 2690  
                                        _PMD5 0039C5                                          u4730 308C  
                                        u4650 2912                                          u5450 27EE  
                                        u2970 133E                                          u2890 120E  
                                        u5370 1974                                          u4810 243C  
                                        u4490 1D08                                          u5290 2230  
                                        u3690 3176                                          u5530 26A6  
                                        _PMD6 0039C6                                          u4731 3088  
                                        u4651 290E                                          u5451 27EA  
                                        u2971 133A                                          u2891 120A  
                                        u5371 1970                                          u4811 2438  
                                        u4491 1D04                                          u5291 222C  
                                        u3691 3172                                          u5531 26A2  
                                        _PMD7 0039C7                                          u4900 15B6  
                                        u4660 293A                                          u4820 32DC  
                                        u4740 2CAC                                          u5460 280A  
                                        u2980 134E                                          u5380 198E  
                                        u5540 26EE                                          u4901 15B2  
                                        u4661 2936                                          u4821 32D8  
                                        u4741 2CA8                                          u5461 2806  
                                        u2981 134A                                          u5381 198A  
                                        u5541 26EA                                          u4910 15C6  
                                        u4670 296C                                          u4830 32EC  
                                        u4750 2CC8                                          u5470 283A  
                                        u2990 137A                                          u5390 19BC  
                                        u5550 2718                                          u4911 15C2  
                                        u4671 2968                                          u4831 32E8  
                                        u4575 3B7E                                          u4751 2CC4  
                                        u5471 2836                                          u2991 1376  
                                        u5391 19B8                                          u5551 2714  
                                        u4680 2FEC                                          u4920 1764  
                                        u4840 14FC                                          u4760 2D08  
                                        u5480 2862                                          u4681 2FE8  
                                        u4841 14F8                                          u4585 3B48  
                                        u4761 2D04                                          u5481 285E  
                                        u4690 3006                                          u4930 17BE  
                                        u4850 150E                                          u4770 2D24  
                                        u5490 260A                                          u4691 3002  
                                        u4931 17BA                                          u4851 150A  
                                        u4771 2D20                                          u4595 3B12  
                                        u5491 2606                                          u4940 17DE  
                                        u4860 151E                                          u4780 23C8  
                                        u4941 17DA                                          u4925 175A  
                                        u4861 151A                                          u4781 23C4  
                                        u4950 17F0                                          u4870 155E  
                                        u4790 23F0                                          u4951 17EC  
                                        u4871 155A                                          u4791 23EC  
                                        u4960 181E                                          u4880 1570  
                                        u4961 181A                                          u4881 156C  
                                        u4970 1834                                          u4890 1580  
                                        u4971 1830                                          u4891 157C  
                                        u4980 1848                                          u4981 1844  
                                        u4990 1862                                          u4991 185E  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        _dbuf 0100                                          _main 3E16  
                                        _loop 25DC                                          _prec 00D3  
                                        _nout 00CF                                          pad@i 0077  
                                        pad@p 0074                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0079  
                                        fsr2l 003FD9                                          _utoa 1B6E  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 00EF  
                             _TMR3_Initialize 3A48                               _PWM5_Initialize 3EB8  
                           ??_CLC3_Initialize 0020                 ??_UART1_SetTxInterruptHandler 0022  
                  ??_TMR4_SetInterruptHandler 0022                             _UART1_rx_vect_isr 3650  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 3B22  
                          ?_UART1_rx_vect_isr 0001                                         ??_pad 0076  
                        ??_UART1_Transmit_ISR 0017                 __end_of_OSCILLATOR_Initialize 3EE8  
                               ___fltol@sign1 0020                               __end_of___aldiv 298E  
                                       _ADACT 003EFE                                         _ADCAP 003EF5  
                     __end_of_CCP3_Initialize 3C7A                               __end_of___fladd 14E0  
                                       ?_main 0001                                         _ADCLK 003EFF  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 309E  
                                       ?_loop 0001                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0009                               __end_of___flmul 1930  
                    TMR5_ReadTimer@readValLow 0014                               __end_of___fltol 2A96  
                                       ?_utoa 007B                               __end_of___lodiv 2C8E  
                             ___awdiv@divisor 0062                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _T3CLK 003FA9  
                                       _U1P2L 003DEE                                         _T2CON 003FAC  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                             __end_of___lomod 2E46                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 368E                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 363A  
                                       i1l333 398C                                         i1l350 3F66  
                                       i1l343 315C                                         i1l336 3990  
                                       i1l353 3F64                                         _U1TXB 003DEA  
                                       i1l347 3D2A                                         i1l356 3F5E  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 3F6C                                         i1l692 3CA6  
                                       i2l534 3D56                                         i2l438 3BEC  
                                       i2l446 377E                                         i2l552 38A8  
                                       i1l688 36E0                                         i2l529 3E14  
                                       i2l537 3EF4                                         i1l698 3F68  
                                       i2l476 3C1C                                         i2l558 3E52  
                                       i2l487 37CA                           ??_UART1_rx_vect_isr 001A  
                                       i2l863 35FA                                         i2l856 3900  
                                       i2l868 3DA6                               ___awdiv@counter 0064  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 009D  
                                vfpfcnvrt@llu 00A5                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 3F6C                               _TMR4_Initialize 3CA8  
                             _PWM6_Initialize 3EA0                             _UART1_tx_vect_isr 35FC  
                            __end_of_TMR4_ISR 36F4                       setSteering@steeringMode 006A  
                                       _delay 0033                                         _flags 0022  
                                       _fputc 3356                                         _fputs 3902  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0070  
                                       _width 00D1                                         _putch 3EF6  
                            ?_SMT1_Initialize 0001                                         pclath 003FFA  
                                       pclatu 003FFB                                         tablat 003FF5  
                                 _BatteryVolt 0024                                         utoa@d 007D  
                                       utoa@i 0099                                         utoa@n 0091  
                                       utoa@p 008D                                         utoa@w 008F  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 3F14  
                 _UART1_SetRxInterruptHandler 3F0A                       __end_of_CCP4_Initialize 3C4C  
                            ___lodiv@dividend 0060           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 3F68            ??_UART1_DefaultFramingErrorHandler 001A  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 3F66  
                         ??_UART1_tx_vect_isr 0017                     __end_of_UART1_rx_vect_isr 36A2  
                             _TMR5_Initialize 3822                               _PWM7_Initialize 3E88  
                             __initialization 3A80                         TMR5_ReadTimer@readVal 0011  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 3E36  
                                __end_of_loop 2736                                  __end_of_utoa 1D74  
                 ??_UART1_DefaultErrorHandler 001A                       __end_of_TMR2_Initialize 3E70  
                                ?_UART1_Write 0001                                        ??_main 0022  
                                      ??_loop 0022                                        ??_utoa 0085  
                               __activetblptr 000003                                  _calcMotorPow 2736  
                   __end_of_UART1_tx_vect_isr 364E                              ___lodiv@quotient 0070  
                             _PWM8_Initialize 3E70                              _UART1_Initialize 3216  
                                _calcSteering 2468                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0060  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0069                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0060  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 3B22  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1244 3F62                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i1l5004 3F5A                       __end_of_PWM5_Initialize 3ED0  
                     __end_of_TMR3_Initialize 3A80                                        i1l5310 3970  
                                      i1l4360 3D28                                        i1l4352 3D00  
                                      i1l5320 30BE                                        i1l5312 3980  
                                      i1l5304 394A                                        i1l4354 3D12  
                                      i1l5330 311E                                        i1l5322 30CE  
                                      i1l5314 3984                                        i1l5306 395C  
                                      i1l4356 3D14                                        i1l5332 313A  
                                      i1l5324 30E6                                        i1l5316 309E  
                                      i1l5308 396E                                        i1l4358 3D24  
                                      i1l5334 3158                                        i1l5326 30F6  
                                      i1l5318 30AE                                        i1l5430 3622  
                                      i1l5328 3106                                        i1l5432 3662  
                                      i1l5258 3F60                                        i1l5434 3676  
                                      i1l5452 36B6                                        i1l5428 360E  
                                      i1l5374 3C7A                                        i1l5454 36BA  
                                      i1l5376 3C8E                                        i1l5456 36D4  
                                      i2l5010 3E0C                                        i1l5458 36D8  
                                      i2l5006 3DF2                                        i2l5014 3EE8  
                                      i2l5008 3E00                                        i2l4370 3D3A  
                                      i2l4380 3D50                                        i2l4372 3D3C  
                                      i2l5340 3BD8                                        i2l4374 3D40  
                                      i2l5350 3C16                                        i2l5342 3BE6  
                                      i2l4376 3D46                                        i2l4368 3D2C  
                                      i2l5352 3E36                                        i2l5344 3BEE  
                                      i2l5440 3798                                        i2l5336 3BBE  
                                      _INLVLA 003A44                                        i2l4378 3D4C  
                                      i2l5354 3E42                                        i2l5346 3BFC  
                                      i2l5442 37A8                                        i2l5338 3BCC  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l5460 38B8                                        i2l5356 3E4A  
                                      i2l5444 3878                                        i2l5348 3C08  
                                      i2l5436 374C                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l5470 35A8  
                                      i2l5462 38BC                                        i2l5358 3E4E  
                                      i2l5446 387C                                        i2l5438 375C  
                                      i2l5480 3D80                                        i2l5472 35AC  
                                      i2l5464 38CC                                        i2l5448 3890  
                                      i2l5482 3D84                                        i2l5474 35C6  
                                      i2l5466 38DC                                        i2l5476 35D6  
                                      i2l5468 38EE                                        i2l5478 35E8  
                                ?_setSteering 0068                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 3356                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 3F28                              __end_of___xxtofl 210E  
                         ?_PWM8_LoadDutyValue 0020                              __end_of_getCurve 22BE  
                    __end_of_CCP3_SetCallBack 3F5A                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00AD  
                                      ___flge 2A96                                     ??___aldiv 0020  
                                   ??___fladd 0097                                     ??___awdiv 0020  
                                   ??___flmul 007E                                     ??___fltol 00A3  
                                   ??___lodiv 0020                                     ??___lomod 0020  
                               _CCP3_CallBack 00F3                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 3EB8                       __end_of_TMR4_Initialize 3CD4  
                                      clear_0 3A86                                        clear_1 3A92  
                                      clear_2 3A9E                              ___awdiv@quotient 0066  
                                      _motPow 00DF                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00F1  
                                      _smtWay 00C7                                        _printf 3D58  
                                      pad@buf 0072                              ?_CCP3_Initialize 0001  
                                      _strlen 3A0C                          ??_PWM8_LoadDutyValue 0060  
                            __end_of_setMotor 2D74                               _ADCC_Initialize 354C  
        __end_of_TMR4_DefaultInterruptHandler 3F6A                  _TMR4_DefaultInterruptHandler 3F68  
                                      fputc@c 0060                                _PMD_Initialize 3DCE  
                                      fputs@c 006D                                        fputs@i 006E  
                                      fputs@s 0069                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 38B6                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                            __end_of_vfprintf 34EA                     ?_ADCC_GetSingleConversion 0020  
                                      utoa@fp 007B      TMR4_SetInterruptHandler@InterruptHandler 0020  
TMR5_SetGateInterruptHandler@InterruptHandler 0020   UART1_SetTxInterruptHandler@InterruptHandler 0020  
 UART1_SetRxInterruptHandler@InterruptHandler 0020          __end_of_UART1_SetOverrunErrorHandler 3F1E  
                _UART1_SetOverrunErrorHandler 3F14                     _UART1_DefaultErrorHandler 3F5A  
                           getCurve@deltaLeft 0060                                    ___flge@ff1 0076  
                                  ___flge@ff2 007A                       __end_of_PWM7_Initialize 3EA0  
                     __end_of_TMR5_Initialize 386C                                  ___xxtofl@arg 0072  
                                ___xxtofl@exp 0071                             _SYSTEM_Initialize 37D8  
                                ___xxtofl@val 0068                                    __accesstop 0060  
                     __end_of__initialization 3AB0                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0068                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                                    ___fltol@f1 009F  
                             _TMR5_WriteTimer 3D2C                     calcMotorPow@setSpeedDelta 00A9  
                    __end_of_CCP4_SetCallBack 3F50                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 3CA8                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0022                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 33EE  
                               __end_of_fputs 394A                               fp__TMR4_10msISR 0000  
                               __end_of_putch 3F00                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 3E88                        __end_of_PMD_Initialize 3DF2  
                       CCP3_CaptureISR@module 0005                CCP3_SetCallBack@customCallBack 0020  
                   _UART1_FramingErrorHandler 00F9               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                                     ??_fputc 0064                     __end_of_SYSTEM_Initialize 3822  
                                     ??_fputs 0022                               _CLC3_Initialize 3CD4  
                                     ??_putch 0021                   PWM7_LoadDutyValue@dutyValue 0020  
                                  __pbssBANK0 00AF                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0020                        ?_UART1_SetErrorHandler 0020  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                       _TMR4_InterruptHandler 00E9                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 0076                                    ??_TMR4_ISR 001D  
                     __end_of_ADCC_Initialize 35A8                    __end_of_PWM6_LoadDutyValue 3AEC  
        __end_of_TMR5_SetGateInterruptHandler 3F3C                  _TMR5_SetGateInterruptHandler 3F32  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 0126                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 309E                                    _getReverse 315E  
                                     ?_strlen 0020                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0020                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0068                            _PWM5_LoadDutyValue 3AEC  
                                  _distRightM 00E3                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 1B6E  
                                     _IVTLOCK 003FD4                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1TMR 003F12  
                                     _SMT1WIN 003F23                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 3482  
                         ??_UART1_Receive_ISR 001A                              ___lomod@dividend 0060  
                     __end_of_TMR5_WriteTimer 3D58                           ?_PWM5_LoadDutyValue 0020  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0020                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0062  
                                     __Lparam 0000                      __end_of_UART1_Initialize 32BC  
                                     ___aldiv 2880                                       ___fladd 101E  
                                     ___awdiv 2FD8                                       ___flmul 14E0  
                                     ___fltol 298E                                       ___lodiv 2B9C  
                                     ___lomod 2D74                     __end_of_UART1_Receive_ISR 315E  
                                   ?_vfprintf 0120                          ??_PWM5_LoadDutyValue 0060  
                                __psmallconst 1000                                       __pcinit 3A80  
                   _TMR5_GateInterruptHandler 00ED                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                 ?_TMR5_SetGateInterruptHandler 0020  
                                     __ptext0 3E16                                       __ptext1 25DC  
                                     __ptext2 39D0                                       __ptext3 315E  
                                     __ptext4 210E                                       __ptext5 33EE  
                                     __ptext6 3DA8                                       __ptext7 3D58  
                                     __ptext8 3482                                       __ptext9 1D74  
                              ??_TMR4_10msISR 001D                                    ??_actSpeed 0022  
                     __end_of_CLC3_Initialize 3D00                         _OSCILLATOR_Initialize 3ED0  
                                   _T2CONbits 003FAC                                    ??___xxtofl 006C  
                                   _T3CONbits 003FA6                              ___aldiv@dividend 0060  
                                   _T4CONbits 003FA0                                       _tempCNT 00D5  
                    ??_PIN_MANAGER_Initialize 0020                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0020  
                                   _IPR10bits 00398A                                       _smtDuty 00CB  
                                   _T4HLTbits 003FA1                                    ??_getCurve 0020  
                                   _PIE10bits 00399A                          end_of_initialization 3AB0  
                                   _T2RSTbits 003FAF                ??_TMR4_DefaultInterruptHandler 001D  
                                   _PIR10bits 0039AA                                     _T4RSTbits 003FA3  
                                     fputc@fp 0062                             ??_SMT1_PR_ACQ_ISR 0017  
         __end_of_UART1_SetTxInterruptHandler 3F0A                   _UART1_SetTxInterruptHandler 3F00  
                                     fputs@fp 006B                ??_UART1_SetOverrunErrorHandler 0022  
                                  ??_setMotor 0064                             __end_of_vfpfcnvrt 1F56  
                           ?_CCP3_SetCallBack 0020                              ___aldiv@quotient 006A  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0017  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0022                                    ??_vfprintf 0022  
            __end_of_ADCC_GetSingleConversion 39D0                             UART1_Write@txData 0020  
                         _UART1_RxDataHandler 3D00                                       strlen@a 0060  
                                     strlen@s 0020                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                                 ___fladd@grs 009E                            getCurve@deltaRight 0062  
                               ___xxtofl@sign 0070                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 000D                          setSteering@steeringB 006F  
                        setSteering@steeringF 006D                       TMR5_WriteTimer@timerVal 000D  
                                 ___flmul@grs 0084             CCP4_DefaultCallBack@capturedValue 0007  
                           ?_CCP4_SetCallBack 0020                  __end_of_INTERRUPT_Initialize 3740  
                              __end_of___flge 2B9C                            ??_CCP4_SetCallBack 0022  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 009F  
                                 vfpfcnvrt@fp 009B                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_printf 3D80                              ?_CLC3_Initialize 0001  
                              __end_of_strlen 3A48                                _TMR5_ReadTimer 3DF2  
                         start_initialization 3A80                               ___lodiv@divisor 0068  
                             ___lodiv@counter 0078                ??_TMR5_SetGateInterruptHandler 0022  
                                 __end_of_pad 2FD8                       ??_UART1_SetErrorHandler 0022  
                       ??_UART1_RxDataHandler 001A                                   putch@txData 0021  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 00B7  
                                 _actMotorPow 0026                                 _uart1TxBuffer 00BF  
                        __end_of_TMR4_10msISR 3F64                                   vfprintf@fmt 0122  
                                    ??___flge 007E                              ??_PMD_Initialize 0020  
                                _oldDistRight 0028                    __end_of_PWM7_LoadDutyValue 3B8E  
                           ??_SMT1_Initialize 0020                                      ??_printf 0022  
                                    ??_strlen 0022                        __end_of_TMR5_ReadTimer 3E16  
                       CCP4_CaptureISR@module 000B                                     ___fladd@a 0093  
                                   ___fladd@b 008F                           calcMotorPow@addMPow 00AD  
                    _ADCC_GetSingleConversion 3992                   PWM5_LoadDutyValue@dutyValue 0020  
                       TMR4_ISR@CountCallBack 002C                                     ___flmul@a 007A  
                                   ___flmul@b 0076                                   __pbssCOMRAM 0022  
                          _UART1_ErrorHandler 00F5                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0120                            _PWM6_LoadDutyValue 3AB6  
                    _UART1_RxInterruptHandler 00FD                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 3BEE                                     _calcSpeed 1930  
                         ?_PWM6_LoadDutyValue 0020                   PWM8_LoadDutyValue@dutyValue 0020  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 33EE  
                                _currentSpeed 00DB                  ?_UART1_SetRxInterruptHandler 0020  
                                   __pnvBANK0 00E9                            setMotor@motorPower 0062  
                      _PIN_MANAGER_Initialize 2E46                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 3F28                  _UART1_SetFramingErrorHandler 3F1E  
                                    ?___aldiv 0060               ADCC_GetSingleConversion@channel 0062  
                                    ?___fladd 008F              __end_of_TMR4_SetInterruptHandler 3F46  
                                    ?___awdiv 0060             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0009                                      ?___flmul 0076  
                                    ?___fltol 009F                                      ?___lodiv 0060  
                                    ?___lomod 0060                            ??_UART1_Initialize 0022  
                                   _distLeftM 00E5                                     _distFront 00E7  
                            _uart1RxLastError 0037                                 ??_UART1_Write 0020  
                                   _distRight 002E                          ??_PWM6_LoadDutyValue 0060  
                                   _cycle10ms 0034                               ?_TMR5_ReadTimer 000D  
                               ?_calcMotorPow 0001                               ___lomod@divisor 0068  
                                 __smallconst 1000                               ___lomod@counter 0020  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 0036           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 3F66            ??_UART1_DefaultOverrunErrorHandler 001A  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 3F64  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 38B8                                 ?_calcSteering 0001  
                               _TMR5_GATE_ISR 386C                                     _curveMode 0035  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 36F4                                 ??_setSteering 006B  
                             ___aldiv@divisor 0064                               _SMT1_PW_ACQ_ISR 35A8  
                             ___aldiv@counter 0068                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0020                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 3C1E                             ??_CCP3_Initialize 0022  
                                    _PIE1bits 003991                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _PIE7bits 003997  
                                    _IPR9bits 003989                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                    i1u401_20 313A                                      i1u400_28 310C  
                                    i1u401_21 3136                                      i1u400_29 311E  
                                    i1u402_28 3140                                      i1u402_29 3154  
                                    i1u406_20 3C8E                                      i1u406_21 3C8A  
                                    i1u423_20 36D4                                      i1u263_20 3D24  
                                    i1u415_20 3622                                      i1u423_21 36D0  
                                    i1u263_21 3D20                                      i1u415_21 361E  
                                    i1u407_28 3C94                                      i1u407_29 3CA6  
                                    i1u417_20 3676                                      i1u416_28 3628  
                                    i1u417_21 3672                                      i1u416_29 363A  
                                    i1u418_28 367C                                      i1u418_29 368E  
               ??_UART1_SetRxInterruptHandler 0022                                      i1u395_20 395C  
                                    i1u395_21 3958                                      i2u403_40 3BCC  
                                    i2u403_41 3BC8                                      i1u396_20 3980  
                                    i1u396_21 397C                                      i2u404_40 3BFC  
                                    i2u404_41 3BF8                                      i1u397_20 30BE  
                                    i1u397_21 30BA                                      i2u421_40 3890  
                                    i2u420_48 37B6                                      i2u421_41 388C  
                                    i2u420_49 37CA                                      i1u399_20 30F6  
                                    i1u398_28 30D4                                      i1u399_21 30F2  
                                    i1u398_29 30E6                                      i2u422_48 3896  
                                    i2u422_49 38A8                                      i2u424_40 38DC  
                                    i2u264_40 3D3A                                      i2u424_41 38D8  
                                    i2u264_41 3D36                                      i2u425_40 35D6  
                                    i2u425_41 35D2                                      _PIR1bits 0039A1  
                                    i2u419_48 376A                                      i2u419_49 377E  
                                    _PIR4bits 0039A4                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 3D80                                      _TMR4_ISR 36A4  
                  __end_of_UART1_Transmit_ISR 3992                                 _TMR4_CallBack 3C7A  
                                   _smtPeriod 003D                 ?_UART1_SetFramingErrorHandler 0020  
                               ??_TMR5_Reload 000F                                     _vfpfcnvrt 1D74  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 3DA8  
                                ??_getReverse 0020                                ??_calcMotorPow 00A7  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0022  
                              ??_calcSteering 0071                           ??_SMT1_Overflow_ISR 0017  
                   TMR5_ReadTimer@readValHigh 0013                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 354C                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                           ??_getBatteryVoltage 0022  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 00FF  
                           ??_TMR2_Initialize 0020                                  _uart1RxCount 0038  
                          __end_of_getReverse 3216                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 3DA8  
                         __end_of_setSteering 2468                                    vfprintf@ap 0124  
                                    __Lrparam 0000                                    vfprintf@fp 0120  
                                 _oldDistLeft 002A                                 ??_startAccell 0022  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00AB  
                   __end_of_getBatteryVoltage 3DCE                       ??_OSCILLATOR_Initialize 0020  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 3BBE  
                     __end_of_SMT1_PR_ACQ_ISR 3902                                    ?_vfpfcnvrt 009B  
                           ??_PWM5_Initialize 0020                             ??_TMR3_Initialize 0020  
                    _TMR4_SetInterruptHandler 3F3C                                      _actSpeed 32BC  
                                _TMR4_10msISR 3F60                                      ___xxtofl 1F56  
                         __end_of_TMR5_Reload 3EF6                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 35FC                                      _getCurve 210E  
                                    __ptext10 1B6E                                      __ptext11 2F10  
                                    __ptext20 2A96                                      __ptext12 3A0C  
                                    __ptext21 2468                                      __ptext13 3902  
                                    __ptext30 3B58                                      __ptext22 22BE  
                                    __ptext14 3356                                      __ptext31 32BC  
                                    __ptext23 3AB6                                      __ptext15 3EF6  
                                    __ptext40 3F0A                                      __ptext32 2880  
                                    __ptext24 3AEC                                      __ptext16 34EA  
                                    __ptext41 3F14                                      __ptext33 1F56  
                                    __ptext25 1930                                      __ptext17 2D74  
                                    __ptext50 3B8E                                      __ptext42 3F1E  
                                    __ptext34 298E                                      __ptext26 101E  
                                    __ptext18 2B9C                                      __ptext51 3E70  
                                    __ptext43 3F28                                      __ptext35 14E0  
                                    __ptext27 2736                                      __ptext19 3992  
                                    __ptext60 3C1E                                      __ptext52 3E88  
                                    __ptext44 3822                                      __ptext36 2FD8  
                                    __ptext28 2C8E                                      __ptext61 3F46  
                                    __ptext53 3EA0                                      __ptext45 3F32  
                                    __ptext37 37D8                                      __ptext29 3B22  
                                    __ptext70 3F66                                      __ptext62 3C4C  
                                    __ptext54 3EB8                                      __ptext46 3CA8  
                                    __ptext38 3216                                      __ptext71 3F5A  
                                    __ptext63 3F50                                      __ptext55 3DCE  
                                    __ptext47 3F3C                                      __ptext39 3F00  
                                    __ptext80 378C                                      __ptext72 3D00  
                                    __ptext64 354C                                      __ptext56 2E46  
                                    __ptext48 3A48                                      __ptext81 3BEE  
                                    __ptext73 36A4                                      __ptext65 35FC  
                                    __ptext57 3ED0                                      __ptext49 3E54  
                                    __ptext90 0000                                      __ptext82 386C  
                                    __ptext74 3C7A                                      __ptext66 394A  
                                    __ptext58 36F4                                      __ptext83 3E36  
                                    __ptext75 3F60                                      __ptext67 3650  
                                    __ptext59 3CD4                                      __ptext84 3EE8  
                                    __ptext76 3F68                                      __ptext68 309E  
                                    __ptext85 3D2C                                      __ptext77 3F6C  
                                    __ptext69 3F64                                      __ptext86 3DF2  
                                    __ptext78 3740                                      __ptext87 38B8  
                                    __ptext79 3BBE                                      __ptext88 35A8  
                                    __ptext89 3D80                                      _distLeft 0030  
                                 ??_calcSpeed 00A7                 __end_of_UART1_SetErrorHandler 3F32  
                                  _T3GCONbits 003FA7                                   ??_checkBatt 0022  
                           ??_TMR4_Initialize 0022                             ??_PWM6_Initialize 0020  
                                    _oldSpeed 00D9                                    _T5GCONbits 003F9B  
                             _SMT1_Initialize 3B8E                                   _IVTLOCKbits 003FD4  
                                    _setMotor 2C8E                                      _setSpeed 00DD  
                   _UART1_OverrunErrorHandler 00F7  UART1_SetOverrunErrorHandler@interruptHandler 0020  
                                    isa$xinst 000000                    ??_ADCC_GetSingleConversion 0060  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 3482                                     printf@fmt 0126  
                  __end_of_PWM8_LoadDutyValue 3B58                               _CCP3_CaptureISR 3740  
                                 _UART1_Write 34EA                         fp__UART1_Transmit_ISR 0000  
                           ??_PWM7_Initialize 0020                             ??_TMR5_Initialize 0060  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 3E54  
          ??_TMR5_DefaultGateInterruptHandler 0015             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 3E36                           __end_of_startAccell 3A0C  
                              _battCheckCount 00E1                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0022                                  _reverseCount 0032  
                             ??_TMR5_GATE_ISR 0015                   __end_of_UART1_RxDataHandler 3D2C  
                                 _uart1RxHead 003A                          _CCP4_DefaultCallBack 3BEE  
                                 _uart1TxHead 003C                                   _uart1RxTail 0039  
                                 _uart1TxTail 003B                        ??_INTERRUPT_Initialize 0020  
                          _PWM7_LoadDutyValue 3B58                                      intlevel1 0000  
                                    intlevel2 0000                                   _setSteering 22BE  
                             _CCP4_CaptureISR 378C                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0020                           ?_PWM7_LoadDutyValue 0020  
                        __end_of_calcMotorPow 2880                               ??_TMR4_CallBack 001D  
                        __end_of_calcSteering 25DC                           _uart1RxStatusBuffer 00AF  
                                    printf@ap 012A                              ??_TMR5_ReadTimer 000F  
UART1_SetFramingErrorHandler@interruptHandler 0020             __end_of_UART1_DefaultErrorHandler 3F60  
                                 ??_vfpfcnvrt 00A1                                   _reverseTime 00D7  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 3EE8  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0060                                 actSpeed@speed 006E  
                       ?_CCP4_DefaultCallBack 0007                     calcMotorPow@oldSpeedDelta 00AB  
                            _CCP3_SetCallBack 3F50                                  ___aldiv@sign 0069  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 3C4C  
                 PWM6_LoadDutyValue@dutyValue 0020                             calcSteering@delta 0073  
                    _UART1_TxInterruptHandler 00FB                                 ___fladd@signs 009B  
                         __end_of_Default_ISR 3F6E                       __end_of_SMT1_Initialize 3BBE  
              __end_of_PIN_MANAGER_Initialize 2F10                             ??_ADCC_Initialize 0020  
                                ___fladd@aexp 009C                                  ___fladd@bexp 009D  
                ?_UART1_SetTxInterruptHandler 0020                       __end_of_CCP3_CaptureISR 378C  
