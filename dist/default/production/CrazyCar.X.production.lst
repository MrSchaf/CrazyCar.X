

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 08:29:26 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=4,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=4,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=4,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	text91,global,reloc=4,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=4,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=4,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=4,class=CODE,delta=1
   116                           	psect	text101,global,reloc=4,class=CODE,delta=1
   117                           	psect	text102,global,reloc=4,class=CODE,delta=1
   118                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   120                           	psect	text103,global,reloc=4,class=CODE,delta=1
   121                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   122                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   123                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   124  0000                     
   125                           ; Version 2.20
   126                           ; Generated 05/05/2020 GMT
   127                           ; 
   128                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution.
   142                           ; 
   143                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   144                           ;        software without specific prior written permission.
   145                           ; 
   146                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   147                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   148                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   149                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   150                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   151                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   152                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   153                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   154                           ; 
   155                           ; 
   156                           ; Code-generator required, PIC18F46K42 Definitions
   157                           ; 
   158                           ; SFR Addresses
   159  0000                     
   160                           	psect	nvCOMRAM
   161  00004C                     __pnvCOMRAM:
   162                           	callstack 0
   163  00004C                     _uart1TxBufferRemaining:
   164                           	callstack 0
   165  00004C                     	ds	1
   166                           
   167                           	psect	nvBANK1
   168  00018A                     __pnvBANK1:
   169                           	callstack 0
   170  00018A                     _TMR4_InterruptHandler:
   171                           	callstack 0
   172  00018A                     	ds	2
   173  00018C                     _timer3ReloadVal:
   174                           	callstack 0
   175  00018C                     	ds	2
   176  00018E                     _TMR5_GateInterruptHandler:
   177                           	callstack 0
   178  00018E                     	ds	2
   179  000190                     _timer5ReloadVal:
   180                           	callstack 0
   181  000190                     	ds	2
   182  000192                     _CCP4_CallBack:
   183                           	callstack 0
   184  000192                     	ds	2
   185  000194                     _CCP3_CallBack:
   186                           	callstack 0
   187  000194                     	ds	2
   188  000196                     _UART1_ErrorHandler:
   189                           	callstack 0
   190  000196                     	ds	2
   191  000198                     _UART1_OverrunErrorHandler:
   192                           	callstack 0
   193  000198                     	ds	2
   194  00019A                     _UART1_FramingErrorHandler:
   195                           	callstack 0
   196  00019A                     	ds	2
   197  00019C                     _UART1_TxInterruptHandler:
   198                           	callstack 0
   199  00019C                     	ds	2
   200  00019E                     _UART1_RxInterruptHandler:
   201                           	callstack 0
   202  00019E                     	ds	2
   203  0000                     _PIR4bits	set	14756
   204  0000                     _PIR1bits	set	14753
   205  0000                     _PIE1bits	set	14737
   206  0000                     _PIE7bits	set	14743
   207  0000                     _PIR7bits	set	14759
   208  0000                     _PIR6bits	set	14758
   209  0000                     _PIE8bits	set	14744
   210  0000                     _PIR8bits	set	14760
   211  0000                     _PIE10bits	set	14746
   212  0000                     _PIR10bits	set	14762
   213  0000                     _PIE9bits	set	14745
   214  0000                     _PIR9bits	set	14761
   215  0000                     _IPR9bits	set	14729
   216  0000                     _IPR7bits	set	14727
   217  0000                     _IPR8bits	set	14728
   218  0000                     _IPR10bits	set	14730
   219  0000                     _IPR1bits	set	14721
   220  0000                     _IPR3bits	set	14723
   221  0000                     _PIE3bits	set	14739
   222  0000                     _PMD7	set	14791
   223  0000                     _PMD6	set	14790
   224  0000                     _PMD5	set	14789
   225  0000                     _PMD4	set	14788
   226  0000                     _PMD3	set	14787
   227  0000                     _PMD2	set	14786
   228  0000                     _PMD1	set	14785
   229  0000                     _PMD0	set	14784
   230  0000                     _OSCTUNE	set	14814
   231  0000                     _OSCFRQ	set	14815
   232  0000                     _OSCEN	set	14813
   233  0000                     _OSCCON3	set	14811
   234  0000                     _OSCCON1	set	14809
   235  0000                     _CCP4PPS	set	15056
   236  0000                     _SMT1SIGPPS	set	15058
   237  0000                     _CLCIN2PPS	set	15067
   238  0000                     _RB3PPS	set	14859
   239  0000                     _RA3PPS	set	14851
   240  0000                     _SMT1WINPPS	set	15057
   241  0000                     _CLCIN0PPS	set	15065
   242  0000                     _RA4PPS	set	14852
   243  0000                     _T5GPPS	set	15049
   244  0000                     _RA0PPS	set	14848
   245  0000                     _U1RXPPS	set	15077
   246  0000                     _RA1PPS	set	14849
   247  0000                     _CLCIN3PPS	set	15068
   248  0000                     _CCP3PPS	set	15055
   249  0000                     _INLVLE	set	14980
   250  0000                     _INLVLD	set	14964
   251  0000                     _INLVLC	set	14948
   252  0000                     _INLVLB	set	14932
   253  0000                     _INLVLA	set	14916
   254  0000                     _SLRCONE	set	14979
   255  0000                     _SLRCOND	set	14963
   256  0000                     _SLRCONC	set	14947
   257  0000                     _SLRCONB	set	14931
   258  0000                     _SLRCONA	set	14915
   259  0000                     _ODCOND	set	14962
   260  0000                     _ODCONC	set	14946
   261  0000                     _ODCONB	set	14930
   262  0000                     _ODCONA	set	14914
   263  0000                     _ODCONE	set	14978
   264  0000                     _RD1I2C	set	14971
   265  0000                     _RD0I2C	set	14970
   266  0000                     _RC4I2C	set	14955
   267  0000                     _RC3I2C	set	14954
   268  0000                     _RB2I2C	set	14939
   269  0000                     _RB1I2C	set	14938
   270  0000                     _WPUC	set	14945
   271  0000                     _WPUA	set	14913
   272  0000                     _WPUB	set	14929
   273  0000                     _WPUE	set	14977
   274  0000                     _WPUD	set	14961
   275  0000                     _ANSELA	set	14912
   276  0000                     _ANSELE	set	14976
   277  0000                     _ANSELB	set	14928
   278  0000                     _ANSELC	set	14944
   279  0000                     _ANSELD	set	14960
   280  0000                     _CLC3CON	set	15456
   281  0000                     _CLC3GLS3	set	15465
   282  0000                     _CLC3GLS2	set	15464
   283  0000                     _CLC3GLS1	set	15463
   284  0000                     _CLC3GLS0	set	15462
   285  0000                     _CLC3SEL3	set	15461
   286  0000                     _CLC3SEL2	set	15460
   287  0000                     _CLC3SEL1	set	15459
   288  0000                     _CLC3SEL0	set	15458
   289  0000                     _CLC3POL	set	15457
   290  0000                     _CLC3CONbits	set	15456
   291  0000                     _U1RXB	set	15848
   292  0000                     _U1TXB	set	15850
   293  0000                     _U1ERRIRbits	set	15865
   294  0000                     _U1ERRIE	set	15866
   295  0000                     _U1ERRIR	set	15865
   296  0000                     _U1UIR	set	15864
   297  0000                     _U1FIFO	set	15863
   298  0000                     _U1BRGH	set	15862
   299  0000                     _U1BRGL	set	15861
   300  0000                     _U1CON2	set	15860
   301  0000                     _U1CON1	set	15859
   302  0000                     _U1CON0	set	15858
   303  0000                     _U1P3H	set	15857
   304  0000                     _U1P3L	set	15856
   305  0000                     _U1P2H	set	15855
   306  0000                     _U1P2L	set	15854
   307  0000                     _U1P1H	set	15853
   308  0000                     _U1P1L	set	15852
   309  0000                     _ADCON1bits	set	16121
   310  0000                     _ADERRL	set	16098
   311  0000                     _ADERRH	set	16099
   312  0000                     _ADPREVL	set	16109
   313  0000                     _ADPREVH	set	16110
   314  0000                     _ADFLTRL	set	16102
   315  0000                     _ADFLTRH	set	16103
   316  0000                     _ADSTATbits	set	16124
   317  0000                     _ADACCL	set	16104
   318  0000                     _ADACCH	set	16105
   319  0000                     _ADCON2bits	set	16122
   320  0000                     _ADCNT	set	16107
   321  0000                     _ADCON3bits	set	16123
   322  0000                     _ADRESL	set	16111
   323  0000                     _ADRESH	set	16112
   324  0000                     _ADCON0bits	set	16120
   325  0000                     _ADCON0	set	16120
   326  0000                     _ADCLK	set	16127
   327  0000                     _ADACT	set	16126
   328  0000                     _ADREF	set	16125
   329  0000                     _ADSTAT	set	16124
   330  0000                     _ADCON3	set	16123
   331  0000                     _ADCON2	set	16122
   332  0000                     _ADCON1	set	16121
   333  0000                     _ADPREH	set	16119
   334  0000                     _ADPREL	set	16118
   335  0000                     _ADCAP	set	16117
   336  0000                     _ADACQH	set	16116
   337  0000                     _ADACQL	set	16115
   338  0000                     _ADPCH	set	16113
   339  0000                     _ADRPT	set	16108
   340  0000                     _ADACCU	set	16106
   341  0000                     _ADSTPTH	set	16101
   342  0000                     _ADSTPTL	set	16100
   343  0000                     _ADUTHH	set	16097
   344  0000                     _ADUTHL	set	16096
   345  0000                     _ADLTHH	set	16095
   346  0000                     _ADLTHL	set	16094
   347  0000                     _SMT1TMR	set	16146
   348  0000                     _SMT1CPR	set	16149
   349  0000                     _SMT1CPW	set	16152
   350  0000                     _SMT1PR	set	16155
   351  0000                     _SMT1STATbits	set	16160
   352  0000                     _SMT1CON0bits	set	16158
   353  0000                     _SMT1CON1bits	set	16159
   354  0000                     _SMT1PRL	set	16155
   355  0000                     _SMT1PRH	set	16156
   356  0000                     _SMT1PRU	set	16157
   357  0000                     _SMT1SIG	set	16162
   358  0000                     _SMT1WIN	set	16163
   359  0000                     _SMT1CLK	set	16161
   360  0000                     _SMT1STAT	set	16160
   361  0000                     _SMT1CON1	set	16159
   362  0000                     _SMT1CON0	set	16158
   363  0000                     _CCPTMRS1bits	set	16223
   364  0000                     _CCPTMRS0bits	set	16222
   365  0000                     _PORTBbits	set	16331
   366  0000                     _PR2	set	16299
   367  0000                     _TMR2	set	16298
   368  0000                     _T2CONbits	set	16300
   369  0000                     _T2RSTbits	set	16303
   370  0000                     _T2HLTbits	set	16301
   371  0000                     _T2CON	set	16300
   372  0000                     _T2TMR	set	16298
   373  0000                     _T2PR	set	16299
   374  0000                     _T2RST	set	16303
   375  0000                     _T2HLT	set	16301
   376  0000                     _T2CLKCON	set	16302
   377  0000                     _PWM6DCL	set	16232
   378  0000                     _PWM6DCH	set	16233
   379  0000                     _PWM6CON	set	16234
   380  0000                     _PWM5DCL	set	16236
   381  0000                     _PWM5DCH	set	16237
   382  0000                     _PWM5CON	set	16238
   383  0000                     _PWM8DCL	set	16224
   384  0000                     _PWM8DCH	set	16225
   385  0000                     _PWM8CON	set	16226
   386  0000                     _PWM7DCL	set	16228
   387  0000                     _PWM7DCH	set	16229
   388  0000                     _PWM7CON	set	16230
   389  0000                     _PR4	set	16287
   390  0000                     _TMR4	set	16286
   391  0000                     _T4CONbits	set	16288
   392  0000                     _T4RSTbits	set	16291
   393  0000                     _T4HLTbits	set	16289
   394  0000                     _T4CON	set	16288
   395  0000                     _T4TMR	set	16286
   396  0000                     _T4PR	set	16287
   397  0000                     _T4RST	set	16291
   398  0000                     _T4HLT	set	16289
   399  0000                     _T4CLKCON	set	16290
   400  0000                     _T3GCONbits	set	16295
   401  0000                     _T3CONbits	set	16294
   402  0000                     _T3CON	set	16294
   403  0000                     _TMR3L	set	16292
   404  0000                     _TMR3H	set	16293
   405  0000                     _T3CLK	set	16297
   406  0000                     _T3GATE	set	16296
   407  0000                     _T3GCON	set	16295
   408  0000                     _T5GCONbits	set	16283
   409  0000                     _T5CONbits	set	16282
   410  0000                     _T5CON	set	16282
   411  0000                     _TMR5L	set	16280
   412  0000                     _TMR5H	set	16281
   413  0000                     _T5CLK	set	16285
   414  0000                     _T5GATE	set	16284
   415  0000                     _T5GCON	set	16283
   416  0000                     _CCPR4L	set	16240
   417  0000                     _CCPR4H	set	16241
   418  0000                     _CCP4CAP	set	16243
   419  0000                     _CCP4CON	set	16242
   420  0000                     _CCPR3L	set	16244
   421  0000                     _CCPR3H	set	16245
   422  0000                     _CCP3CAP	set	16247
   423  0000                     _CCP3CON	set	16246
   424  0000                     _PORTDbits	set	16333
   425  0000                     _IVTBASEL	set	16341
   426  0000                     _IVTBASEH	set	16342
   427  0000                     _IVTBASEU	set	16343
   428  0000                     _IVTLOCKbits	set	16340
   429  0000                     _IVTLOCK	set	16340
   430  0000                     _INTCON0bits	set	16338
   431  0000                     _TRISD	set	16325
   432  0000                     _TRISC	set	16324
   433  0000                     _TRISB	set	16323
   434  0000                     _TRISA	set	16322
   435  0000                     _TRISE	set	16326
   436  0000                     _LATC	set	16316
   437  0000                     _LATB	set	16315
   438  0000                     _LATA	set	16314
   439  0000                     _LATD	set	16317
   440  0000                     _LATE	set	16318
   441  0000                     _GIE	set	130711
   442                           
   443                           	psect	smallconst
   444  001000                     __psmallconst:
   445                           	callstack 0
   446  001000  00                 	db	0
   447  001001                     STR_2:
   448                           
   449                           ; BSR set to: 1
   450  001001  4F                 	db	79	;'O'
   451  001002  75                 	db	117	;'u'
   452  001003  74                 	db	116	;'t'
   453  001004  20                 	db	32
   454  001005  7C                 	db	124
   455  001006  20                 	db	32
   456  001007  64                 	db	100	;'d'
   457  001008  4C                 	db	76	;'L'
   458  001009  3D                 	db	61	;'='
   459  00100A  20                 	db	32
   460  00100B  25                 	db	37
   461  00100C  64                 	db	100	;'d'
   462  00100D  20                 	db	32
   463  00100E  7C                 	db	124
   464  00100F  20                 	db	32
   465  001010  64                 	db	100	;'d'
   466  001011  52                 	db	82	;'R'
   467  001012  3D                 	db	61	;'='
   468  001013  20                 	db	32
   469  001014  25                 	db	37
   470  001015  64                 	db	100	;'d'
   471  001016  00                 	db	0
   472  001017                     STR_10:
   473                           
   474                           ; BSR set to: 1
   475  001017  43                 	db	67	;'C'
   476  001018  75                 	db	117	;'u'
   477  001019  72                 	db	114	;'r'
   478  00101A  76                 	db	118	;'v'
   479  00101B  65                 	db	101	;'e'
   480  00101C  54                 	db	84	;'T'
   481  00101D  69                 	db	105	;'i'
   482  00101E  6D                 	db	109	;'m'
   483  00101F  65                 	db	101	;'e'
   484  001020  3A                 	db	58	;':'
   485  001021  20                 	db	32
   486  001022  25                 	db	37
   487  001023  64                 	db	100	;'d'
   488  001024  0A                 	db	10
   489  001025  00                 	db	0
   490  001026                     STR_5:
   491                           
   492                           ; BSR set to: 1
   493  001026  20                 	db	32
   494  001027  20                 	db	32
   495  001028  20                 	db	32
   496  001029  43                 	db	67	;'C'
   497  00102A  75                 	db	117	;'u'
   498  00102B  72                 	db	114	;'r'
   499  00102C  76                 	db	118	;'v'
   500  00102D  65                 	db	101	;'e'
   501  00102E  52                 	db	82	;'R'
   502  00102F  69                 	db	105	;'i'
   503  001030  67                 	db	103	;'g'
   504  001031  68                 	db	104	;'h'
   505  001032  74                 	db	116	;'t'
   506  001033  0A                 	db	10
   507  001034  00                 	db	0
   508  001035                     STR_15:
   509                           
   510                           ; BSR set to: 1
   511  001035  53                 	db	83	;'S'
   512  001036  74                 	db	116	;'t'
   513  001037  6F                 	db	111	;'o'
   514  001038  70                 	db	112	;'p'
   515  001039  20                 	db	32
   516  00103A  52                 	db	82	;'R'
   517  00103B  65                 	db	101	;'e'
   518  00103C  76                 	db	118	;'v'
   519  00103D  65                 	db	101	;'e'
   520  00103E  72                 	db	114	;'r'
   521  00103F  73                 	db	115	;'s'
   522  001040  65                 	db	101	;'e'
   523  001041  0A                 	db	10
   524  001042  00                 	db	0
   525  001043                     STR_13:
   526                           
   527                           ; BSR set to: 1
   528  001043  52                 	db	82	;'R'
   529  001044  65                 	db	101	;'e'
   530  001045  76                 	db	118	;'v'
   531  001046  65                 	db	101	;'e'
   532  001047  72                 	db	114	;'r'
   533  001048  73                 	db	115	;'s'
   534  001049  65                 	db	101	;'e'
   535  00104A  52                 	db	82	;'R'
   536  00104B  69                 	db	105	;'i'
   537  00104C  67                 	db	103	;'g'
   538  00104D  74                 	db	116	;'t'
   539  00104E  68                 	db	104	;'h'
   540  00104F  0A                 	db	10
   541  001050  00                 	db	0
   542  001051                     STR_3:
   543                           
   544                           ; BSR set to: 1
   545  001051  20                 	db	32
   546  001052  20                 	db	32
   547  001053  20                 	db	32
   548  001054  43                 	db	67	;'C'
   549  001055  75                 	db	117	;'u'
   550  001056  72                 	db	114	;'r'
   551  001057  76                 	db	118	;'v'
   552  001058  65                 	db	101	;'e'
   553  001059  4C                 	db	76	;'L'
   554  00105A  65                 	db	101	;'e'
   555  00105B  66                 	db	102	;'f'
   556  00105C  74                 	db	116	;'t'
   557  00105D  0A                 	db	10
   558  00105E  00                 	db	0
   559  00105F                     STR_14:
   560                           
   561                           ; BSR set to: 1
   562  00105F  52                 	db	82	;'R'
   563  001060  65                 	db	101	;'e'
   564  001061  76                 	db	118	;'v'
   565  001062  65                 	db	101	;'e'
   566  001063  72                 	db	114	;'r'
   567  001064  73                 	db	115	;'s'
   568  001065  65                 	db	101	;'e'
   569  001066  4C                 	db	76	;'L'
   570  001067  65                 	db	101	;'e'
   571  001068  66                 	db	102	;'f'
   572  001069  74                 	db	116	;'t'
   573  00106A  0A                 	db	10
   574  00106B  00                 	db	0
   575  00106C                     STR_8:
   576                           
   577                           ; BSR set to: 1
   578  00106C  52                 	db	82	;'R'
   579  00106D  69                 	db	105	;'i'
   580  00106E  67                 	db	103	;'g'
   581  00106F  68                 	db	104	;'h'
   582  001070  74                 	db	116	;'t'
   583  001071  20                 	db	32
   584  001072  4F                 	db	79	;'O'
   585  001073  75                 	db	117	;'u'
   586  001074  74                 	db	116	;'t'
   587  001075  21                 	db	33
   588  001076  0A                 	db	10
   589  001077  00                 	db	0
   590  001078                     STR_9:
   591                           
   592                           ; BSR set to: 1
   593  001078  46                 	db	70	;'F'
   594  001079  72                 	db	114	;'r'
   595  00107A  6F                 	db	111	;'o'
   596  00107B  6E                 	db	110	;'n'
   597  00107C  74                 	db	116	;'t'
   598  00107D  20                 	db	32
   599  00107E  4F                 	db	79	;'O'
   600  00107F  75                 	db	117	;'u'
   601  001080  74                 	db	116	;'t'
   602  001081  21                 	db	33
   603  001082  0A                 	db	10
   604  001083  00                 	db	0
   605  001084                     STR_11:
   606                           
   607                           ; BSR set to: 1
   608  001084  41                 	db	65	;'A'
   609  001085  66                 	db	102	;'f'
   610  001086  74                 	db	116	;'t'
   611  001087  65                 	db	101	;'e'
   612  001088  72                 	db	114	;'r'
   613  001089  43                 	db	67	;'C'
   614  00108A  75                 	db	117	;'u'
   615  00108B  72                 	db	114	;'r'
   616  00108C  76                 	db	118	;'v'
   617  00108D  65                 	db	101	;'e'
   618  00108E  0A                 	db	10
   619  00108F  00                 	db	0
   620  001090                     STR_7:
   621                           
   622                           ; BSR set to: 1
   623  001090  4C                 	db	76	;'L'
   624  001091  65                 	db	101	;'e'
   625  001092  66                 	db	102	;'f'
   626  001093  74                 	db	116	;'t'
   627  001094  20                 	db	32
   628  001095  4F                 	db	79	;'O'
   629  001096  75                 	db	117	;'u'
   630  001097  74                 	db	116	;'t'
   631  001098  21                 	db	33
   632  001099  0A                 	db	10
   633  00109A  00                 	db	0
   634  00109B                     STR_1:
   635                           
   636                           ; BSR set to: 1
   637  00109B  42                 	db	66	;'B'
   638  00109C  56                 	db	86	;'V'
   639  00109D  6F                 	db	111	;'o'
   640  00109E  6C                 	db	108	;'l'
   641  00109F  74                 	db	116	;'t'
   642  0010A0  3A                 	db	58	;':'
   643  0010A1  20                 	db	32
   644  0010A2  25                 	db	37
   645  0010A3  66                 	db	102	;'f'
   646  0010A4  0A                 	db	10
   647  0010A5  00                 	db	0
   648  0010A6                     STR_12:
   649                           
   650                           ; BSR set to: 1
   651  0010A6  4F                 	db	79	;'O'
   652  0010A7  75                 	db	117	;'u'
   653  0010A8  74                 	db	116	;'t'
   654  0010A9  43                 	db	67	;'C'
   655  0010AA  75                 	db	117	;'u'
   656  0010AB  72                 	db	114	;'r'
   657  0010AC  76                 	db	118	;'v'
   658  0010AD  65                 	db	101	;'e'
   659  0010AE  0A                 	db	10
   660  0010AF  00                 	db	0
   661  0010B0                     STR_6:
   662                           
   663                           ; BSR set to: 1
   664  0010B0  49                 	db	73	;'I'
   665  0010B1  6E                 	db	110	;'n'
   666  0010B2  43                 	db	67	;'C'
   667  0010B3  75                 	db	117	;'u'
   668  0010B4  72                 	db	114	;'r'
   669  0010B5  76                 	db	118	;'v'
   670  0010B6  65                 	db	101	;'e'
   671  0010B7  0A                 	db	10
   672  0010B8  00                 	db	0
   673  0010B9                     STR_16:
   674                           
   675                           ; BSR set to: 1
   676  0010B9  49                 	db	73	;'I'
   677  0010BA  4E                 	db	78	;'N'
   678  0010BB  46                 	db	70	;'F'
   679  0010BC  00                 	db	0
   680  0010BD                     STR_20:
   681                           
   682                           ; BSR set to: 1
   683  0010BD  4E                 	db	78	;'N'
   684  0010BE  41                 	db	65	;'A'
   685  0010BF  4E                 	db	78	;'N'
   686  0010C0  00                 	db	0
   687  0010C1                     STR_17:
   688                           
   689                           ; BSR set to: 1
   690  0010C1  69                 	db	105	;'i'
   691  0010C2  6E                 	db	110	;'n'
   692  0010C3  66                 	db	102	;'f'
   693  0010C4  00                 	db	0
   694  0010C5                     STR_21:
   695                           
   696                           ; BSR set to: 1
   697  0010C5  6E                 	db	110	;'n'
   698  0010C6  61                 	db	97	;'a'
   699  0010C7  6E                 	db	110	;'n'
   700  0010C8  00                 	db	0
   701  0010C9                     STR_24:
   702                           
   703                           ; BSR set to: 1
   704  0010C9  6C                 	db	108	;'l'
   705  0010CA  66                 	db	102	;'f'
   706  0010CB  00                 	db	0
   707  0010CC  00                 	db	0	; dummy byte at the end
   708  0000                     
   709                           ; #config settings
   710                           
   711                           	psect	cinit
   712  0058E4                     __pcinit:
   713                           	callstack 0
   714  0058E4                     start_initialization:
   715                           	callstack 0
   716  0058E4                     __initialization:
   717                           	callstack 0
   718                           
   719                           ; Clear objects allocated to BANK1 (138 bytes)
   720  0058E4  EE00  F100         	lfsr	0,__pbssBANK1
   721  0058E8  0E8A               	movlw	138
   722  0058EA                     clear_0:
   723  0058EA  6AEE               	clrf	postinc0,c
   724  0058EC  06E8               	decf	wreg,f,c
   725  0058EE  E1FD               	bnz	clear_0
   726                           
   727                           ; Clear objects allocated to BANK0 (26 bytes)
   728  0058F0  EE00  F0E5         	lfsr	0,__pbssBANK0
   729  0058F4  0E1A               	movlw	26
   730  0058F6                     clear_1:
   731  0058F6  6AEE               	clrf	postinc0,c
   732  0058F8  06E8               	decf	wreg,f,c
   733  0058FA  E1FD               	bnz	clear_1
   734                           
   735                           ; Clear objects allocated to COMRAM (18 bytes)
   736  0058FC  EE00  F03A         	lfsr	0,__pbssCOMRAM
   737  005900  0E12               	movlw	18
   738  005902                     clear_2:
   739  005902  6AEE               	clrf	postinc0,c
   740  005904  06E8               	decf	wreg,f,c
   741  005906  E1FD               	bnz	clear_2
   742                           
   743                           ;
   744                           ; Setup IVTBASE
   745                           ;
   746  005908  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   747  00590A  6ED5               	movwf	213,c
   748  00590C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   749  00590E  6ED6               	movwf	214,c
   750  005910  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   751  005912  6ED7               	movwf	215,c
   752  005914                     end_of_initialization:
   753                           	callstack 0
   754  005914                     __end_of__initialization:
   755                           	callstack 0
   756  005914  0100               	movlb	0
   757  005916  EF94  F02E         	goto	_main	;jump to C main() function
   758                           
   759                           	psect	bssCOMRAM
   760  00003A                     __pbssCOMRAM:
   761                           	callstack 0
   762  00003A                     _prec:
   763                           	callstack 0
   764  00003A                     	ds	2
   765  00003C                     _flags:
   766                           	callstack 0
   767  00003C                     	ds	2
   768  00003E                     _roundTimeCount:
   769                           	callstack 0
   770  00003E                     	ds	2
   771  000040                     TMR4_ISR@CountCallBack:
   772                           	callstack 0
   773  000040                     	ds	2
   774  000042                     _uart1RxLastError:
   775                           	callstack 0
   776  000042                     	ds	1
   777  000043                     _uart1RxCount:
   778                           	callstack 0
   779  000043                     	ds	1
   780  000044                     _uart1RxTail:
   781                           	callstack 0
   782  000044                     	ds	1
   783  000045                     _uart1RxHead:
   784                           	callstack 0
   785  000045                     	ds	1
   786  000046                     _uart1TxTail:
   787                           	callstack 0
   788  000046                     	ds	1
   789  000047                     _uart1TxHead:
   790                           	callstack 0
   791  000047                     	ds	1
   792  000048                     _smtPeriod:
   793                           	callstack 0
   794  000048                     	ds	4
   795                           
   796                           	psect	bssBANK0
   797  0000E5                     __pbssBANK0:
   798                           	callstack 0
   799  0000E5                     _width:
   800                           	callstack 0
   801  0000E5                     	ds	2
   802  0000E7                     _BatteryVolt:
   803                           	callstack 0
   804  0000E7                     	ds	2
   805  0000E9                     _actMotorPow:
   806                           	callstack 0
   807  0000E9                     	ds	2
   808  0000EB                     _currentSpeed:
   809                           	callstack 0
   810  0000EB                     	ds	2
   811  0000ED                     _setSpeed:
   812                           	callstack 0
   813  0000ED                     	ds	2
   814  0000EF                     _oldDistRight:
   815                           	callstack 0
   816  0000EF                     	ds	2
   817  0000F1                     _oldDistLeft:
   818                           	callstack 0
   819  0000F1                     	ds	2
   820  0000F3                     _distRight:
   821                           	callstack 0
   822  0000F3                     	ds	2
   823  0000F5                     _distLeft:
   824                           	callstack 0
   825  0000F5                     	ds	2
   826  0000F7                     _delay:
   827                           	callstack 0
   828  0000F7                     	ds	1
   829  0000F8                     _curveRightCount:
   830                           	callstack 0
   831  0000F8                     	ds	1
   832  0000F9                     _curveLeftCount:
   833                           	callstack 0
   834  0000F9                     	ds	1
   835  0000FA                     _cycle10ms:
   836                           	callstack 0
   837  0000FA                     	ds	1
   838  0000FB                     _curveMode:
   839                           	callstack 0
   840  0000FB                     	ds	1
   841  0000FC                     _driveMode:
   842                           	callstack 0
   843  0000FC                     	ds	1
   844  0000FD                     _distFront:
   845                           	callstack 0
   846  0000FD                     	ds	2
   847                           
   848                           	psect	bssBANK1
   849  000100                     __pbssBANK1:
   850                           	callstack 0
   851  000100                     _uart1RxStatusBuffer:
   852                           	callstack 0
   853  000100                     	ds	8
   854  000108                     _uart1RxBuffer:
   855                           	callstack 0
   856  000108                     	ds	8
   857  000110                     _uart1TxBuffer:
   858                           	callstack 0
   859  000110                     	ds	8
   860  000118                     floorf@F527:
   861                           	callstack 0
   862  000118                     	ds	4
   863  00011C                     ___fpclassifyf@F465:
   864                           	callstack 0
   865  00011C                     	ds	4
   866  000120                     _smtWay:
   867                           	callstack 0
   868  000120                     	ds	4
   869  000124                     _smtDuty:
   870                           	callstack 0
   871  000124                     	ds	4
   872  000128                     _nout:
   873                           	callstack 0
   874  000128                     	ds	2
   875  00012A                     _reverseTime:
   876                           	callstack 0
   877  00012A                     	ds	2
   878  00012C                     _oldSpeed:
   879                           	callstack 0
   880  00012C                     	ds	2
   881  00012E                     _motPow:
   882                           	callstack 0
   883  00012E                     	ds	2
   884  000130                     _followCount:
   885                           	callstack 0
   886  000130                     	ds	2
   887  000132                     _battCheckCount:
   888                           	callstack 0
   889  000132                     	ds	2
   890  000134                     _reverseCount:
   891                           	callstack 0
   892  000134                     	ds	2
   893  000136                     _distRightM:
   894                           	callstack 0
   895  000136                     	ds	2
   896  000138                     _distLeftM:
   897                           	callstack 0
   898  000138                     	ds	2
   899  00013A                     _dbuf:
   900                           	callstack 0
   901  00013A                     	ds	80
   902                           
   903                           	psect	cstackBANK1
   904  0001A0                     __pcstackBANK1:
   905                           	callstack 0
   906  0001A0                     ?_vfprintf:
   907                           	callstack 0
   908  0001A0                     vfprintf@fp:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x0
   912  0001A0                     	ds	2
   913  0001A2                     vfprintf@fmt:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x2
   917  0001A2                     	ds	2
   918  0001A4                     vfprintf@ap:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x4
   922  0001A4                     	ds	2
   923  0001A6                     ?_printf:
   924                           	callstack 0
   925  0001A6                     printf@fmt:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x6
   929  0001A6                     	ds	6
   930  0001AC                     printf@ap:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xC
   934  0001AC                     	ds	2
   935  0001AE                     ??_getCurve:
   936  0001AE                     _getBatteryVoltage$4191:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0xE
   940  0001AE                     	ds	2
   941  0001B0                     getCurve@deltaLeft:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x10
   945  0001B0                     	ds	2
   946  0001B2                     getCurve@deltaRight:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x12
   950  0001B2                     	ds	2
   951                           
   952                           	psect	cstackBANK0
   953  000060                     __pcstackBANK0:
   954                           	callstack 0
   955  000060                     ?_dtoa:
   956                           	callstack 0
   957  000060                     ___flmul@sign:
   958                           	callstack 0
   959  000060                     dtoa@fp:
   960                           	callstack 0
   961  000060                     ___fldiv@rem:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x0
   965  000060                     	ds	1
   966  000061                     ___flmul@aexp:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x1
   970  000061                     	ds	1
   971  000062                     ___flmul@grs:
   972                           	callstack 0
   973  000062                     dtoa@d:
   974                           	callstack 0
   975                           
   976                           ; 8 bytes @ 0x2
   977  000062                     	ds	2
   978  000064                     ___fldiv@sign:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x4
   982  000064                     	ds	1
   983  000065                     ___fldiv@new_exp:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x5
   987  000065                     	ds	1
   988  000066                     ___flmul@bexp:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x6
   992  000066                     	ds	1
   993  000067                     ___fldiv@grs:
   994                           	callstack 0
   995  000067                     ___flmul@prod:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x7
   999  000067                     	ds	3
  1000  00006A                     _dtoa$3544:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0xA
  1004  00006A                     	ds	1
  1005  00006B                     ___fldiv@bexp:
  1006                           	callstack 0
  1007  00006B                     ___flmul@temp:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0xB
  1011  00006B                     	ds	1
  1012  00006C                     ___fldiv@aexp:
  1013                           	callstack 0
  1014  00006C                     dtoa@p:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0xC
  1018  00006C                     	ds	1
  1019  00006D                     ??_floorf:
  1020  00006D                     ?___fladd:
  1021                           	callstack 0
  1022  00006D                     ___flge@ff1:
  1023                           	callstack 0
  1024  00006D                     ___fladd@b:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0xD
  1028  00006D                     	ds	1
  1029  00006E                     dtoa@w:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0xE
  1033  00006E                     	ds	2
  1034  000070                     dtoa@s:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x10
  1038  000070                     	ds	1
  1039  000071                     ___flge@ff2:
  1040                           	callstack 0
  1041  000071                     ___fladd@a:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x11
  1045  000071                     	ds	1
  1046  000072                     dtoa@n:
  1047                           	callstack 0
  1048                           
  1049                           ; 8 bytes @ 0x12
  1050  000072                     	ds	1
  1051  000073                     floorf@m:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x13
  1055  000073                     	ds	2
  1056  000075                     ___fladd@signs:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x15
  1060  000075                     	ds	1
  1061  000076                     ___fladd@aexp:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x16
  1065  000076                     	ds	1
  1066  000077                     ___fladd@bexp:
  1067                           	callstack 0
  1068  000077                     floorf@e:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x17
  1072  000077                     	ds	1
  1073  000078                     ___fladd@grs:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x18
  1077  000078                     	ds	1
  1078  000079                     ?___flsub:
  1079                           	callstack 0
  1080  000079                     ?___fltol:
  1081                           	callstack 0
  1082  000079                     ___fltol@f1:
  1083                           	callstack 0
  1084  000079                     ___flsub@b:
  1085                           	callstack 0
  1086  000079                     floorf@u:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x19
  1090  000079                     	ds	1
  1091  00007A                     dtoa@i:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x1A
  1095  00007A                     	ds	3
  1096  00007D                     ??___fltol:
  1097  00007D                     ___flsub@a:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x1D
  1101  00007D                     	ds	4
  1102  000081                     ___fltol@sign1:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x21
  1106  000081                     	ds	1
  1107  000082                     ___fltol@exp1:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x22
  1111  000082                     	ds	1
  1112  000083                     ??_calcSpeed:
  1113  000083                     ??_calcMotorPow:
  1114  000083                     ?_efgtoa:
  1115                           	callstack 0
  1116  000083                     setSteering@steering:
  1117                           	callstack 0
  1118  000083                     efgtoa@fp:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x23
  1122  000083                     	ds	2
  1123  000085                     setSteering@steeringMode:
  1124                           	callstack 0
  1125  000085                     calcMotorPow@setSpeedDelta:
  1126                           	callstack 0
  1127  000085                     efgtoa@f:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x25
  1131  000085                     	ds	1
  1132  000086                     ??_setSteering:
  1133                           
  1134                           ; 1 bytes @ 0x26
  1135  000086                     	ds	1
  1136  000087                     calcSpeed@speed:
  1137                           	callstack 0
  1138  000087                     calcMotorPow@oldSpeedDelta:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x27
  1142  000087                     	ds	1
  1143  000088                     setSteering@steeringF:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x28
  1147  000088                     	ds	1
  1148  000089                     calcMotorPow@addMPow:
  1149                           	callstack 0
  1150  000089                     efgtoa@c:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x29
  1154  000089                     	ds	1
  1155  00008A                     ??_efgtoa:
  1156  00008A                     setSteering@steeringB:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x2A
  1160  00008A                     	ds	2
  1161  00008C                     ??_calcSteering:
  1162                           
  1163                           ; 1 bytes @ 0x2C
  1164  00008C                     	ds	2
  1165  00008E                     calcSteering@delta:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x2E
  1169  00008E                     	ds	1
  1170  00008F                     _efgtoa$3568:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x2F
  1174  00008F                     	ds	1
  1175  000090                     startAccell@i:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x30
  1179  000090                     	ds	1
  1180  000091                     _efgtoa$3569:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x31
  1184  000091                     	ds	2
  1185  000093                     _efgtoa$3573:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x33
  1189  000093                     	ds	2
  1190  000095                     _efgtoa$3577:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x35
  1194  000095                     	ds	2
  1195  000097                     _efgtoa$3578:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x37
  1199  000097                     	ds	2
  1200  000099                     _efgtoa$3579:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x39
  1204  000099                     	ds	2
  1205  00009B                     efgtoa@t:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x3B
  1209  00009B                     	ds	2
  1210  00009D                     efgtoa@pp:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x3D
  1214  00009D                     	ds	2
  1215  00009F                     efgtoa@ne:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x3F
  1219  00009F                     	ds	2
  1220  0000A1                     efgtoa@m:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x41
  1224  0000A1                     	ds	2
  1225  0000A3                     efgtoa@ou:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x43
  1229  0000A3                     	ds	4
  1230  0000A7                     efgtoa@d:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x47
  1234  0000A7                     	ds	2
  1235  0000A9                     efgtoa@sign:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x49
  1239  0000A9                     	ds	2
  1240  0000AB                     efgtoa@p:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x4B
  1244  0000AB                     	ds	2
  1245  0000AD                     efgtoa@w:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x4D
  1249  0000AD                     	ds	2
  1250  0000AF                     efgtoa@nmode:
  1251                           	callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x4F
  1254  0000AF                     	ds	1
  1255  0000B0                     efgtoa@mode:
  1256                           	callstack 0
  1257                           
  1258                           ; 1 bytes @ 0x50
  1259  0000B0                     	ds	1
  1260  0000B1                     efgtoa@h:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x51
  1264  0000B1                     	ds	4
  1265  0000B5                     efgtoa@l:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x55
  1269  0000B5                     	ds	4
  1270  0000B9                     efgtoa@i:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x59
  1274  0000B9                     	ds	2
  1275  0000BB                     efgtoa@g:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x5B
  1279  0000BB                     	ds	4
  1280  0000BF                     efgtoa@e:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x5F
  1284  0000BF                     	ds	2
  1285  0000C1                     efgtoa@n:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x61
  1289  0000C1                     	ds	2
  1290  0000C3                     efgtoa@u:
  1291                           	callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x63
  1294  0000C3                     	ds	4
  1295  0000C7                     ?_vfpfcnvrt:
  1296                           	callstack 0
  1297  0000C7                     vfpfcnvrt@fp:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x67
  1301  0000C7                     	ds	2
  1302  0000C9                     vfpfcnvrt@fmt:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x69
  1306  0000C9                     	ds	2
  1307  0000CB                     vfpfcnvrt@ap:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x6B
  1311  0000CB                     	ds	2
  1312  0000CD                     ??_vfpfcnvrt:
  1313                           
  1314                           ; 1 bytes @ 0x6D
  1315  0000CD                     	ds	4
  1316  0000D1                     vfpfcnvrt@ll:
  1317                           	callstack 0
  1318                           
  1319                           ; 8 bytes @ 0x71
  1320  0000D1                     	ds	8
  1321  0000D9                     _vfpfcnvrt$3597:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x79
  1325  0000D9                     	ds	2
  1326  0000DB                     vfpfcnvrt@f:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x7B
  1330  0000DB                     	ds	4
  1331  0000DF                     vfpfcnvrt@ct:
  1332                           	callstack 0
  1333                           
  1334                           ; 3 bytes @ 0x7F
  1335  0000DF                     	ds	3
  1336  0000E2                     vfpfcnvrt@c:
  1337                           	callstack 0
  1338                           
  1339                           ; 1 bytes @ 0x82
  1340  0000E2                     	ds	1
  1341  0000E3                     vfprintf@cfmt:
  1342                           	callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x83
  1345  0000E3                     	ds	2
  1346                           
  1347                           	psect	cstackCOMRAM
  1348  000001                     __pcstackCOMRAM:
  1349                           	callstack 0
  1350  000001                     CCP3_DefaultCallBack@capturedValue:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x0
  1354  000001                     	ds	2
  1355  000003                     CCP3_CaptureISR@module:
  1356                           	callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x2
  1359  000003                     	ds	2
  1360  000005                     CCP4_DefaultCallBack@capturedValue:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x4
  1364  000005                     	ds	2
  1365  000007                     CCP4_CaptureISR@module:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x6
  1369  000007                     	ds	2
  1370  000009                     ?_TMR5_ReadTimer:
  1371                           	callstack 0
  1372  000009                     TMR5_WriteTimer@timerVal:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x8
  1376  000009                     	ds	2
  1377  00000B                     ??_TMR5_ReadTimer:
  1378  00000B                     
  1379                           ; 1 bytes @ 0xA
  1380  00000B                     	ds	2
  1381  00000D                     TMR5_ReadTimer@readVal:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0xC
  1385  00000D                     	ds	2
  1386  00000F                     TMR5_ReadTimer@readValHigh:
  1387                           	callstack 0
  1388                           
  1389                           ; 1 bytes @ 0xE
  1390  00000F                     	ds	1
  1391  000010                     TMR5_ReadTimer@readValLow:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0xF
  1395  000010                     	ds	1
  1396  000011                     ??_UART1_tx_vect_isr:
  1397  000011                     
  1398                           ; 1 bytes @ 0x10
  1399  000011                     	ds	1
  1400  000012                     ??_UART1_rx_vect_isr:
  1401                           
  1402                           ; 1 bytes @ 0x11
  1403  000012                     	ds	1
  1404  000013                     ??_TMR4_ISR:
  1405                           
  1406                           ; 1 bytes @ 0x12
  1407  000013                     	ds	1
  1408  000014                     ??_TMR3_Initialize:
  1409  000014                     ?_strlen:
  1410                           	callstack 0
  1411  000014                     ?___fpclassifyf:
  1412                           	callstack 0
  1413  000014                     ?_isupper:
  1414                           	callstack 0
  1415  000014                     ?_strncmp:
  1416                           	callstack 0
  1417  000014                     ?_ADCC_GetSingleConversion:
  1418                           	callstack 0
  1419  000014                     ?___awdiv:
  1420                           	callstack 0
  1421  000014                     ?___awmod:
  1422                           	callstack 0
  1423  000014                     ?___aldiv:
  1424                           	callstack 0
  1425  000014                     ?___flneg:
  1426                           	callstack 0
  1427  000014                     ?___aodiv:
  1428                           	callstack 0
  1429  000014                     ?___aomod:
  1430                           	callstack 0
  1431  000014                     UART1_Write@txData:
  1432                           	callstack 0
  1433  000014                     INTERRUPT_Initialize@state:
  1434                           	callstack 0
  1435  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1436                           	callstack 0
  1437  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1438                           	callstack 0
  1439  000014                     UART1_SetErrorHandler@interruptHandler:
  1440                           	callstack 0
  1441  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1442                           	callstack 0
  1443  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1444                           	callstack 0
  1445  000014                     CCP3_SetCallBack@customCallBack:
  1446                           	callstack 0
  1447  000014                     CCP4_SetCallBack@customCallBack:
  1448                           	callstack 0
  1449  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1450                           	callstack 0
  1451  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1452                           	callstack 0
  1453  000014                     PWM7_LoadDutyValue@dutyValue:
  1454                           	callstack 0
  1455  000014                     PWM8_LoadDutyValue@dutyValue:
  1456                           	callstack 0
  1457  000014                     PWM5_LoadDutyValue@dutyValue:
  1458                           	callstack 0
  1459  000014                     PWM6_LoadDutyValue@dutyValue:
  1460                           	callstack 0
  1461  000014                     ___awdiv@dividend:
  1462                           	callstack 0
  1463  000014                     ___awmod@dividend:
  1464                           	callstack 0
  1465  000014                     isupper@c:
  1466                           	callstack 0
  1467  000014                     strcpy@dest:
  1468                           	callstack 0
  1469  000014                     strlen@s:
  1470                           	callstack 0
  1471  000014                     strncmp@_l:
  1472                           	callstack 0
  1473  000014                     ___aldiv@dividend:
  1474                           	callstack 0
  1475  000014                     ___fleq@ff1:
  1476                           	callstack 0
  1477  000014                     ___flneg@f1:
  1478                           	callstack 0
  1479  000014                     ___fpclassifyf@x:
  1480                           	callstack 0
  1481  000014                     ___aodiv@dividend:
  1482                           	callstack 0
  1483  000014                     ___aomod@dividend:
  1484                           	callstack 0
  1485                           
  1486                           ; 8 bytes @ 0x13
  1487  000014                     	ds	1
  1488  000015                     putch@txData:
  1489                           	callstack 0
  1490                           
  1491                           ; 1 bytes @ 0x14
  1492  000015                     	ds	1
  1493  000016                     ??_TMR5_Initialize:
  1494  000016                     ??_isupper:
  1495  000016                     ??_PWM7_LoadDutyValue:
  1496  000016                     ??_PWM8_LoadDutyValue:
  1497  000016                     ??_PWM5_LoadDutyValue:
  1498  000016                     ??_PWM6_LoadDutyValue:
  1499  000016                     ??_ADCC_GetSingleConversion:
  1500  000016                     ___awdiv@divisor:
  1501                           	callstack 0
  1502  000016                     ___awmod@divisor:
  1503                           	callstack 0
  1504  000016                     fputc@c:
  1505                           	callstack 0
  1506  000016                     strcpy@src:
  1507                           	callstack 0
  1508  000016                     strlen@a:
  1509                           	callstack 0
  1510  000016                     strncmp@_r:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x15
  1514  000016                     	ds	2
  1515  000018                     ??___fpclassifyf:
  1516  000018                     ??_strcpy:
  1517  000018                     ADCC_GetSingleConversion@channel:
  1518                           	callstack 0
  1519  000018                     ___awdiv@counter:
  1520                           	callstack 0
  1521  000018                     ___awmod@counter:
  1522                           	callstack 0
  1523  000018                     setMotor@motorPower:
  1524                           	callstack 0
  1525  000018                     fputc@fp:
  1526                           	callstack 0
  1527  000018                     strncmp@n:
  1528                           	callstack 0
  1529  000018                     ___aldiv@divisor:
  1530                           	callstack 0
  1531  000018                     ___fleq@ff2:
  1532                           	callstack 0
  1533                           
  1534                           ; 4 bytes @ 0x17
  1535  000018                     	ds	1
  1536  000019                     ___awdiv@sign:
  1537                           	callstack 0
  1538  000019                     ___awmod@sign:
  1539                           	callstack 0
  1540                           
  1541                           ; 1 bytes @ 0x18
  1542  000019                     	ds	1
  1543  00001A                     ??_setMotor:
  1544  00001A                     ??_fputc:
  1545  00001A                     ??_strncmp:
  1546  00001A                     ?_tolower:
  1547                           	callstack 0
  1548  00001A                     ___awdiv@quotient:
  1549                           	callstack 0
  1550  00001A                     strcpy@s:
  1551                           	callstack 0
  1552  00001A                     tolower@c:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x19
  1556  00001A                     	ds	1
  1557  00001B                     strncmp@l:
  1558                           	callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x1A
  1561  00001B                     	ds	1
  1562  00001C                     ??_tolower:
  1563  00001C                     ??___fleq:
  1564  00001C                     ?___xxtofl:
  1565                           	callstack 0
  1566  00001C                     ___aldiv@counter:
  1567                           	callstack 0
  1568  00001C                     ___fpclassifyf@e:
  1569                           	callstack 0
  1570  00001C                     strcpy@d:
  1571                           	callstack 0
  1572  00001C                     ___xxtofl@val:
  1573                           	callstack 0
  1574  00001C                     ___aodiv@divisor:
  1575                           	callstack 0
  1576  00001C                     ___aomod@divisor:
  1577                           	callstack 0
  1578                           
  1579                           ; 8 bytes @ 0x1B
  1580  00001C                     	ds	1
  1581  00001D                     ___aldiv@sign:
  1582                           	callstack 0
  1583  00001D                     strncmp@r:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x1C
  1587  00001D                     	ds	1
  1588  00001E                     ___aldiv@quotient:
  1589                           	callstack 0
  1590  00001E                     ___fpclassifyf@u:
  1591                           	callstack 0
  1592                           
  1593                           ; 4 bytes @ 0x1D
  1594  00001E                     	ds	1
  1595  00001F                     fputs@s:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x1E
  1599  00001F                     	ds	1
  1600  000020                     ??___xxtofl:
  1601  000020                     _tolower$3690:
  1602                           	callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x1F
  1605  000020                     	ds	1
  1606  000021                     fputs@fp:
  1607                           	callstack 0
  1608                           
  1609                           ; 2 bytes @ 0x20
  1610  000021                     	ds	1
  1611  000022                     ?_actSpeed:
  1612                           	callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x21
  1615  000022                     	ds	1
  1616  000023                     fputs@c:
  1617                           	callstack 0
  1618                           
  1619                           ; 1 bytes @ 0x22
  1620  000023                     	ds	1
  1621  000024                     ___aodiv@counter:
  1622                           	callstack 0
  1623  000024                     ___aomod@counter:
  1624                           	callstack 0
  1625  000024                     ___xxtofl@sign:
  1626                           	callstack 0
  1627  000024                     actSpeed@speed:
  1628                           	callstack 0
  1629  000024                     fputs@i:
  1630                           	callstack 0
  1631                           
  1632                           ; 2 bytes @ 0x23
  1633  000024                     	ds	1
  1634  000025                     ___aodiv@sign:
  1635                           	callstack 0
  1636  000025                     ___aomod@sign:
  1637                           	callstack 0
  1638  000025                     ___xxtofl@exp:
  1639                           	callstack 0
  1640                           
  1641                           ; 1 bytes @ 0x24
  1642  000025                     	ds	1
  1643  000026                     ?_abs:
  1644                           	callstack 0
  1645  000026                     ?_pad:
  1646                           	callstack 0
  1647  000026                     pad@fp:
  1648                           	callstack 0
  1649  000026                     abs@a:
  1650                           	callstack 0
  1651  000026                     ___xxtofl@arg:
  1652                           	callstack 0
  1653  000026                     ___aodiv@quotient:
  1654                           	callstack 0
  1655                           
  1656                           ; 8 bytes @ 0x25
  1657  000026                     	ds	2
  1658  000028                     ??_abs:
  1659  000028                     pad@buf:
  1660                           	callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x27
  1663  000028                     	ds	2
  1664  00002A                     ?___fldiv:
  1665                           	callstack 0
  1666  00002A                     ?___flmul:
  1667                           	callstack 0
  1668  00002A                     pad@p:
  1669                           	callstack 0
  1670  00002A                     ___fldiv@b:
  1671                           	callstack 0
  1672  00002A                     ___flmul@b:
  1673                           	callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x29
  1676  00002A                     	ds	2
  1677  00002C                     ??_pad:
  1678                           
  1679                           ; 1 bytes @ 0x2B
  1680  00002C                     	ds	1
  1681  00002D                     pad@i:
  1682                           	callstack 0
  1683                           
  1684                           ; 2 bytes @ 0x2C
  1685  00002D                     	ds	1
  1686  00002E                     ___fldiv@a:
  1687                           	callstack 0
  1688  00002E                     ___flmul@a:
  1689                           	callstack 0
  1690                           
  1691                           ; 4 bytes @ 0x2D
  1692  00002E                     	ds	1
  1693  00002F                     pad@w:
  1694                           	callstack 0
  1695                           
  1696                           ; 2 bytes @ 0x2E
  1697  00002F                     	ds	2
  1698  000031                     ??_dtoa:
  1699                           
  1700                           ; 1 bytes @ 0x30
  1701  000031                     	ds	1
  1702  000032                     ??___fldiv:
  1703  000032                     ??___flmul:
  1704                           
  1705                           ; 1 bytes @ 0x31
  1706  000032                     	ds	4
  1707  000036                     ??___fladd:
  1708  000036                     ??___flge:
  1709  000036                     ?_floorf:
  1710                           	callstack 0
  1711  000036                     floorf@x:
  1712                           	callstack 0
  1713                           
  1714                           ; 4 bytes @ 0x35
  1715  000036                     	ds	4
  1716  00003A                     
  1717                           ; 1 bytes @ 0x39
  1718 ;;
  1719 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1720 ;;
  1721 ;; *************** function _main *****************
  1722 ;; Defined at:
  1723 ;;		line 8 in file "main.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels required when called: 20
  1743 ;; This function calls:
  1744 ;;		_SYSTEM_Initialize
  1745 ;;		_TMR4_SetInterruptHandler
  1746 ;;		_loop
  1747 ;; This function is called by:
  1748 ;;		Startup code after reset
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text0
  1753  005D28                     __ptext0:
  1754                           	callstack 0
  1755  005D28                     _main:
  1756                           	callstack 11
  1757  005D28                     
  1758                           ;main.c: 9:     SYSTEM_Initialize();
  1759  005D28  ECB2  F02A         	call	_SYSTEM_Initialize	;wreg free
  1760  005D2C                     
  1761                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1762  005D2C  8ED2               	bsf	210,7,c	;volatile
  1763  005D2E                     
  1764                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1765  005D2E  8CD2               	bsf	210,6,c	;volatile
  1766                           
  1767                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1768  005D30  0E6C               	movlw	low _TMR4_10msISR
  1769  005D32  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1770  005D34  0E5E               	movlw	high _TMR4_10msISR
  1771  005D36  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1772  005D38  EC27  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
  1773  005D3C                     l9265:
  1774                           
  1775                           ;main.c: 15:         loop();
  1776  005D3C  ECFD  F021         	call	_loop	;wreg free
  1777  005D40  EF9E  F02E         	goto	l9265
  1778  005D44  EF57  F000         	goto	start
  1779  005D48                     __end_of_main:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _loop *****************
  1783 ;; Defined at:
  1784 ;;		line 19 in file "main.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 19
  1805 ;; This function calls:
  1806 ;;		___flge
  1807 ;;		___xxtofl
  1808 ;;		_calcMotorPow
  1809 ;;		_calcSpeed
  1810 ;;		_calcSteering
  1811 ;;		_checkBatt
  1812 ;;		_getBatteryVoltage
  1813 ;;		_getCurve
  1814 ;;		_getReverse
  1815 ;;		_setMotor
  1816 ;;		_setSteering
  1817 ;;		_startAccell
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text1
  1824  0043FA                     __ptext1:
  1825                           	callstack 0
  1826  0043FA                     _loop:
  1827                           	callstack 11
  1828  0043FA                     
  1829                           ;main.c: 20:     setMotor(0);
  1830  0043FA  0E00               	movlw	0
  1831  0043FC  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1832  0043FE  0E00               	movlw	0
  1833  004400  6E18               	movwf	setMotor@motorPower^0,c
  1834  004402  EC14  F025         	call	_setMotor	;wreg free
  1835                           
  1836                           ;main.c: 21:     setSteering(0, Front);
  1837  004406  0E00               	movlw	0
  1838  004408  0100               	movlb	0	; () banked
  1839  00440A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1840  00440C  0E00               	movlw	0
  1841  00440E  6F83               	movwf	setSteering@steering& (0+255),b
  1842  004410  0E03               	movlw	3
  1843  004412  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1844  004414  ECB0  F01C         	call	_setSteering	;wreg free
  1845  004418                     l1230:
  1846  004418  B8CB               	btfsc	203,4,c	;volatile
  1847  00441A  EF11  F022         	goto	u10291
  1848  00441E  EF13  F022         	goto	u10290
  1849  004422                     u10291:
  1850  004422  EF0C  F022         	goto	l1230
  1851  004426                     u10290:
  1852  004426                     l9221:
  1853  004426  0100               	movlb	0	; () banked
  1854  004428  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1855  00442A  B4D8               	btfsc	status,2,c
  1856  00442C  EF1A  F022         	goto	u10301
  1857  004430  EF1C  F022         	goto	u10300
  1858  004434                     u10301:
  1859  004434  EF13  F022         	goto	l9221
  1860  004438                     u10300:
  1861  004438                     
  1862                           ; BSR set to: 0
  1863                           ;main.c: 26:         cycle10ms = 0;
  1864  004438  0E00               	movlw	0
  1865  00443A  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1866  00443C                     
  1867                           ; BSR set to: 0
  1868                           ;main.c: 28:         getBatteryVoltage();
  1869  00443C  EC2E  F029         	call	_getBatteryVoltage	;wreg free
  1870  004440                     
  1871                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1872  004440  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  1873  004444  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1874  004448  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1875  00444A  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1876  00444C  0E00               	movlw	0
  1877  00444E  ECAB  F01D         	call	___xxtofl
  1878  004452  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1879  004456  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1880  00445A  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1881  00445E  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1882  004462  0E7B               	movlw	123
  1883  004464  0100               	movlb	0	; () banked
  1884  004466  6F71               	movwf	___flge@ff2& (0+255),b
  1885  004468  0E14               	movlw	20
  1886  00446A  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1887  00446C  0E2E               	movlw	46
  1888  00446E  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1889  004470  0E45               	movlw	69
  1890  004472  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1891  004474  EC98  F023         	call	___flge	;wreg free
  1892  004478  0100               	movlb	0	; () banked
  1893  00447A  A0D8               	btfss	status,0,c
  1894  00447C  EF42  F022         	goto	u10311
  1895  004480  EF44  F022         	goto	u10310
  1896  004484                     u10311:
  1897  004484  EF13  F022         	goto	l9221
  1898  004488                     u10310:
  1899  004488                     
  1900                           ; BSR set to: 0
  1901                           ;main.c: 31:     startAccell();
  1902  004488  ECEA  F028         	call	_startAccell	;wreg free
  1903  00448C                     
  1904                           ;main.c: 33:     oldDistLeft = distLeft;
  1905  00448C  C0F5  F0F1         	movff	_distLeft,_oldDistLeft	;volatile
  1906  004490  C0F6  F0F2         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1907  004494                     
  1908                           ;main.c: 34:     oldDistRight = distRight;
  1909  004494  C0F3  F0EF         	movff	_distRight,_oldDistRight	;volatile
  1910  004498  C0F4  F0F0         	movff	_distRight+1,_oldDistRight+1	;volatile
  1911  00449C                     
  1912                           ;main.c: 35:     cycle10ms = 0;
  1913  00449C  0E00               	movlw	0
  1914  00449E  0100               	movlb	0	; () banked
  1915  0044A0  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1916  0044A2                     l9237:
  1917  0044A2  0100               	movlb	0	; () banked
  1918  0044A4  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1919  0044A6  B4D8               	btfsc	status,2,c
  1920  0044A8  EF58  F022         	goto	u10321
  1921  0044AC  EF5A  F022         	goto	u10320
  1922  0044B0                     u10321:
  1923  0044B0  EF51  F022         	goto	l9237
  1924  0044B4                     u10320:
  1925  0044B4                     
  1926                           ; BSR set to: 0
  1927                           ;main.c: 38:         cycle10ms = 0;
  1928  0044B4  0E00               	movlw	0
  1929  0044B6  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1930  0044B8                     
  1931                           ; BSR set to: 0
  1932                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1933  0044B8  BACB               	btfsc	203,5,c	;volatile
  1934  0044BA  EF61  F022         	goto	u10331
  1935  0044BE  EF63  F022         	goto	u10330
  1936  0044C2                     u10331:
  1937  0044C2  EF75  F022         	goto	l9247
  1938  0044C6                     u10330:
  1939  0044C6                     
  1940                           ; BSR set to: 0
  1941                           ;main.c: 41:             setSpeed = 0;
  1942  0044C6  0E00               	movlw	0
  1943  0044C8  6FEE               	movwf	(_setSpeed+1)& (0+255),b
  1944  0044CA  0E00               	movlw	0
  1945  0044CC  6FED               	movwf	_setSpeed& (0+255),b
  1946                           
  1947                           ;main.c: 42:             actMotorPow = 0;
  1948  0044CE  0E00               	movlw	0
  1949  0044D0  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
  1950  0044D2  0E00               	movlw	0
  1951  0044D4  6FE9               	movwf	_actMotorPow& (0+255),b
  1952  0044D6                     
  1953                           ; BSR set to: 0
  1954                           ;main.c: 43:             setSteering(0, Front);
  1955  0044D6  0E00               	movlw	0
  1956  0044D8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1957  0044DA  0E00               	movlw	0
  1958  0044DC  6F83               	movwf	setSteering@steering& (0+255),b
  1959  0044DE  0E03               	movlw	3
  1960  0044E0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1961  0044E2  ECB0  F01C         	call	_setSteering	;wreg free
  1962                           
  1963                           ;main.c: 44:             break;
  1964  0044E6  EF8D  F022         	goto	l1246
  1965  0044EA                     l9247:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;main.c: 47:         if (checkBatt()) {
  1969  0044EA  ECA1  F028         	call	_checkBatt	;wreg free
  1970  0044EE  0900               	iorlw	0
  1971  0044F0  B4D8               	btfsc	status,2,c
  1972  0044F2  EF7D  F022         	goto	u10341
  1973  0044F6  EF7F  F022         	goto	u10340
  1974  0044FA                     u10341:
  1975  0044FA  EF81  F022         	goto	l9251
  1976  0044FE                     u10340:
  1977  0044FE  EF8D  F022         	goto	l1246
  1978  004502                     l9251:
  1979                           
  1980                           ;main.c: 51:         getCurve();
  1981  004502  ECA7  F017         	call	_getCurve	;wreg free
  1982                           
  1983                           ;main.c: 52:         getReverse();
  1984  004506  EC65  F021         	call	_getReverse	;wreg free
  1985  00450A                     
  1986                           ;main.c: 54:         calcSteering();
  1987  00450A  EC85  F01E         	call	_calcSteering	;wreg free
  1988  00450E                     
  1989                           ;main.c: 55:         calcSpeed();
  1990  00450E  ECAB  F01B         	call	_calcSpeed	;wreg free
  1991  004512                     
  1992                           ;main.c: 56:         calcMotorPow();
  1993  004512  ECBF  F020         	call	_calcMotorPow	;wreg free
  1994  004516  EF51  F022         	goto	l9237
  1995  00451A                     l1246:
  1996  00451A  0012               	return		;funcret
  1997  00451C                     __end_of_loop:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _startAccell *****************
  2001 ;; Defined at:
  2002 ;;		line 99 in file "main.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  i               2   48[BANK0 ] short 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;Total ram usage:        2 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 11
  2023 ;; This function calls:
  2024 ;;		_calcSteering
  2025 ;;		_setMotor
  2026 ;;		_setSteering
  2027 ;; This function is called by:
  2028 ;;		_loop
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text2
  2033  0051D4                     __ptext2:
  2034                           	callstack 0
  2035  0051D4                     _startAccell:
  2036                           	callstack 18
  2037  0051D4                     
  2038                           ;main.c: 100:     setSteering(0, Front);
  2039  0051D4  0E00               	movlw	0
  2040  0051D6  0100               	movlb	0	; () banked
  2041  0051D8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2042  0051DA  0E00               	movlw	0
  2043  0051DC  6F83               	movwf	setSteering@steering& (0+255),b
  2044  0051DE  0E03               	movlw	3
  2045  0051E0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2046  0051E2  ECB0  F01C         	call	_setSteering	;wreg free
  2047  0051E6                     
  2048                           ;main.c: 101:     actMotorPow = (40) - (int16_t) ((240) / (20));
  2049  0051E6  0E00               	movlw	0
  2050  0051E8  0100               	movlb	0	; () banked
  2051  0051EA  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
  2052  0051EC  0E1C               	movlw	28
  2053  0051EE  6FE9               	movwf	_actMotorPow& (0+255),b
  2054  0051F0                     
  2055                           ; BSR set to: 0
  2056                           ;main.c: 102:     for (int16_t i = 0; i <= (int16_t) ((20) - ((40) / (int16_t) ((240) / 
      +                          (20)))); ++i) {
  2057  0051F0  0E00               	movlw	0
  2058  0051F2  6F91               	movwf	(startAccell@i+1)& (0+255),b
  2059  0051F4  0E00               	movlw	0
  2060  0051F6  6F90               	movwf	startAccell@i& (0+255),b
  2061  0051F8                     l8963:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;main.c: 103:         actMotorPow += (int16_t) ((240) / (20));
  2065  0051F8  0E0C               	movlw	12
  2066  0051FA  27E9               	addwf	_actMotorPow& (0+255),f,b
  2067  0051FC  0E00               	movlw	0
  2068  0051FE  23EA               	addwfc	(_actMotorPow+1)& (0+255),f,b
  2069  005200                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 104:         setMotor(actMotorPow);
  2072  005200  C0E9  F018         	movff	_actMotorPow,setMotor@motorPower
  2073  005204  C0EA  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2074  005208  EC14  F025         	call	_setMotor	;wreg free
  2075  00520C                     
  2076                           ;main.c: 105:         calcSteering();
  2077  00520C  EC85  F01E         	call	_calcSteering	;wreg free
  2078  005210                     
  2079                           ;main.c: 106:         cycle10ms = 0;
  2080  005210  0E00               	movlw	0
  2081  005212  0100               	movlb	0	; () banked
  2082  005214  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2083  005216                     l8971:
  2084                           
  2085                           ; BSR set to: 0
  2086  005216  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  2087  005218  B4D8               	btfsc	status,2,c
  2088  00521A  EF11  F029         	goto	u9881
  2089  00521E  EF13  F029         	goto	u9880
  2090  005222                     u9881:
  2091  005222  EF0B  F029         	goto	l8971
  2092  005226                     u9880:
  2093  005226                     
  2094                           ; BSR set to: 0
  2095                           ;main.c: 108:     }
  2096  005226  4B90               	infsnz	startAccell@i& (0+255),f,b
  2097  005228  2B91               	incf	(startAccell@i+1)& (0+255),f,b
  2098  00522A                     
  2099                           ; BSR set to: 0
  2100  00522A  BF91               	btfsc	(startAccell@i+1)& (0+255),7,b
  2101  00522C  EF21  F029         	goto	u9891
  2102  005230  5191               	movf	(startAccell@i+1)& (0+255),w,b
  2103  005232  E109               	bnz	u9890
  2104  005234  0E12               	movlw	18
  2105  005236  5D90               	subwf	startAccell@i& (0+255),w,b
  2106  005238  A0D8               	btfss	status,0,c
  2107  00523A  EF21  F029         	goto	u9891
  2108  00523E  EF23  F029         	goto	u9890
  2109  005242                     u9891:
  2110  005242  EFFC  F028         	goto	l8963
  2111  005246                     u9890:
  2112  005246                     
  2113                           ; BSR set to: 0
  2114                           ;main.c: 111:     cycle10ms = 0;
  2115  005246  0E00               	movlw	0
  2116  005248  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2117  00524A                     l8979:
  2118                           
  2119                           ; BSR set to: 0
  2120  00524A  0E0D               	movlw	13
  2121  00524C  65FA               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2122  00524E  EF2B  F029         	goto	u9901
  2123  005252  EF2D  F029         	goto	u9900
  2124  005256                     u9901:
  2125  005256  EF25  F029         	goto	l8979
  2126  00525A                     u9900:
  2127  00525A                     
  2128                           ; BSR set to: 0
  2129  00525A  0012               	return		;funcret
  2130  00525C                     __end_of_startAccell:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _calcSteering *****************
  2134 ;; Defined at:
  2135 ;;		line 232 in file "main.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  delta           2   46[BANK0 ] short 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;Total ram usage:        4 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 10
  2156 ;; This function calls:
  2157 ;;		_setSteering
  2158 ;; This function is called by:
  2159 ;;		_loop
  2160 ;;		_startAccell
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text3
  2165  003D0A                     __ptext3:
  2166                           	callstack 0
  2167  003D0A                     _calcSteering:
  2168                           	callstack 18
  2169  003D0A                     
  2170                           ;main.c: 233:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  2171  003D0A  0100               	movlb	0	; () banked
  2172  003D0C  51F3               	movf	_distRight& (0+255),w,b	;volatile
  2173  003D0E  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2174  003D10  6F8E               	movwf	calcSteering@delta& (0+255),b
  2175  003D12  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2176  003D14  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2177  003D16  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  2178                           
  2179                           ;main.c: 237:     switch (driveMode) {
  2180  003D18  EFB6  F01E         	goto	l8915
  2181  003D1C                     l1327:
  2182  003D1C                     l8905:
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;main.c: 242:             if (delta > (40)) {
  2186  003D1C  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  2187  003D1E  EF9A  F01E         	goto	u9841
  2188  003D22  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  2189  003D24  E109               	bnz	u9840
  2190  003D26  0E29               	movlw	41
  2191  003D28  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  2192  003D2A  A0D8               	btfss	status,0,c
  2193  003D2C  EF9A  F01E         	goto	u9841
  2194  003D30  EF9C  F01E         	goto	u9840
  2195  003D34                     u9841:
  2196  003D34  EFA2  F01E         	goto	l8909
  2197  003D38                     u9840:
  2198  003D38                     
  2199                           ; BSR set to: 0
  2200                           ;main.c: 243:                 delta = (40);
  2201  003D38  0E00               	movlw	0
  2202  003D3A  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  2203  003D3C  0E28               	movlw	40
  2204  003D3E  6F8E               	movwf	calcSteering@delta& (0+255),b
  2205                           
  2206                           ;main.c: 244:             } else if (delta < -(40)) {
  2207  003D40  EF23  F01F         	goto	l8939
  2208  003D44                     l8909:
  2209                           
  2210                           ; BSR set to: 0
  2211  003D44  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  2212  003D46  EFAE  F01E         	goto	u9851
  2213  003D4A  0ED8               	movlw	216
  2214  003D4C  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  2215  003D4E  0EFF               	movlw	255
  2216  003D50  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  2217  003D52  B0D8               	btfsc	status,0,c
  2218  003D54  EFAE  F01E         	goto	u9851
  2219  003D58  EFB0  F01E         	goto	u9850
  2220  003D5C                     u9851:
  2221  003D5C  EFD3  F01E         	goto	l1332
  2222  003D60                     u9850:
  2223  003D60                     
  2224                           ; BSR set to: 0
  2225                           ;main.c: 245:                 delta = -(40);
  2226  003D60  0EFF               	movlw	255
  2227  003D62  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  2228  003D64  0ED8               	movlw	216
  2229  003D66  6F8E               	movwf	calcSteering@delta& (0+255),b
  2230  003D68  EF23  F01F         	goto	l8939
  2231  003D6C                     l8915:
  2232                           
  2233                           ; BSR set to: 0
  2234  003D6C  51FC               	movf	_driveMode& (0+255),w,b
  2235  003D6E  6F8C               	movwf	??_calcSteering& (0+255),b
  2236  003D70  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  2237                           
  2238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 1, Range of values is 0 to 0
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            4     3 (average)
  2244                           ;	Chosen strategy is simple_byte
  2245  003D72  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  2246  003D74  0A00               	xorlw	0	; case 0
  2247  003D76  B4D8               	btfsc	status,2,c
  2248  003D78  EFC0  F01E         	goto	l9409
  2249  003D7C  EF23  F01F         	goto	l8939
  2250  003D80                     l9409:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ; Switch size 1, requested type "simple"
  2254                           ; Number of cases is 4, Range of values is 0 to 5
  2255                           ; switch strategies available:
  2256                           ; Name         Instructions Cycles
  2257                           ; simple_byte           13     7 (average)
  2258                           ;	Chosen strategy is simple_byte
  2259  003D80  518C               	movf	??_calcSteering& (0+255),w,b
  2260  003D82  0A00               	xorlw	0	; case 0
  2261  003D84  B4D8               	btfsc	status,2,c
  2262  003D86  EF8E  F01E         	goto	l8905
  2263  003D8A  0A01               	xorlw	1	; case 1
  2264  003D8C  B4D8               	btfsc	status,2,c
  2265  003D8E  EF8E  F01E         	goto	l1327
  2266  003D92  0A05               	xorlw	5	; case 4
  2267  003D94  B4D8               	btfsc	status,2,c
  2268  003D96  EF8E  F01E         	goto	l8905
  2269  003D9A  0A01               	xorlw	1	; case 5
  2270  003D9C  B4D8               	btfsc	status,2,c
  2271  003D9E  EF8E  F01E         	goto	l8905
  2272  003DA2  EF23  F01F         	goto	l8939
  2273  003DA6                     l1332:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;main.c: 252:     switch (driveMode) {
  2277  003DA6  EF23  F01F         	goto	l8939
  2278  003DAA                     l8917:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;main.c: 254:             setSteering(delta, Ratio);
  2282  003DAA  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  2283  003DAE  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  2284  003DB2  0E02               	movlw	2
  2285  003DB4  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2286  003DB6  ECB0  F01C         	call	_setSteering	;wreg free
  2287                           
  2288                           ;main.c: 255:             break;
  2289  003DBA  EF48  F01F         	goto	l1346
  2290  003DBE                     l8919:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;main.c: 257:             setSteering(delta, Front);
  2294  003DBE  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  2295  003DC2  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  2296  003DC6  0E03               	movlw	3
  2297  003DC8  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2298  003DCA  ECB0  F01C         	call	_setSteering	;wreg free
  2299                           
  2300                           ;main.c: 258:             break;
  2301  003DCE  EF48  F01F         	goto	l1346
  2302  003DD2                     l8921:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;main.c: 260:             setSteering(-(50), Inverted);
  2306  003DD2  0EFF               	movlw	255
  2307  003DD4  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2308  003DD6  0ECE               	movlw	206
  2309  003DD8  6F83               	movwf	setSteering@steering& (0+255),b
  2310  003DDA  0E00               	movlw	0
  2311  003DDC  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2312  003DDE  ECB0  F01C         	call	_setSteering	;wreg free
  2313                           
  2314                           ;main.c: 261:             break;
  2315  003DE2  EF48  F01F         	goto	l1346
  2316  003DE6                     l8923:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;main.c: 263:             setSteering((50), Inverted);
  2320  003DE6  0E00               	movlw	0
  2321  003DE8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2322  003DEA  0E32               	movlw	50
  2323  003DEC  6F83               	movwf	setSteering@steering& (0+255),b
  2324  003DEE  0E00               	movlw	0
  2325  003DF0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2326  003DF2  ECB0  F01C         	call	_setSteering	;wreg free
  2327                           
  2328                           ;main.c: 264:             break;
  2329  003DF6  EF48  F01F         	goto	l1346
  2330  003DFA                     l8925:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;main.c: 266:             if (curveMode == InCurve) {
  2334  003DFA  0E02               	movlw	2
  2335  003DFC  19FB               	xorwf	_curveMode& (0+255),w,b
  2336  003DFE  A4D8               	btfss	status,2,c
  2337  003E00  EF04  F01F         	goto	u9861
  2338  003E04  EF06  F01F         	goto	u9860
  2339  003E08                     u9861:
  2340  003E08  EFD5  F01E         	goto	l8917
  2341  003E0C                     u9860:
  2342  003E0C                     
  2343                           ; BSR set to: 0
  2344                           ;main.c: 267:                 setSteering((50), Ratio);
  2345  003E0C  0E00               	movlw	0
  2346  003E0E  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2347  003E10  0E32               	movlw	50
  2348  003E12  6F83               	movwf	setSteering@steering& (0+255),b
  2349  003E14  0E02               	movlw	2
  2350  003E16  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2351  003E18  ECB0  F01C         	call	_setSteering	;wreg free
  2352                           
  2353                           ;main.c: 268:             } else {
  2354  003E1C  EF48  F01F         	goto	l1346
  2355  003E20                     l8931:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;main.c: 273:             if (curveMode == InCurve) {
  2359  003E20  0E02               	movlw	2
  2360  003E22  19FB               	xorwf	_curveMode& (0+255),w,b
  2361  003E24  A4D8               	btfss	status,2,c
  2362  003E26  EF17  F01F         	goto	u9871
  2363  003E2A  EF19  F01F         	goto	u9870
  2364  003E2E                     u9871:
  2365  003E2E  EFD5  F01E         	goto	l8917
  2366  003E32                     u9870:
  2367  003E32                     
  2368                           ; BSR set to: 0
  2369                           ;main.c: 274:                 setSteering(-(50), Ratio);
  2370  003E32  0EFF               	movlw	255
  2371  003E34  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2372  003E36  0ECE               	movlw	206
  2373  003E38  6F83               	movwf	setSteering@steering& (0+255),b
  2374  003E3A  0E02               	movlw	2
  2375  003E3C  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2376  003E3E  ECB0  F01C         	call	_setSteering	;wreg free
  2377                           
  2378                           ;main.c: 275:             } else {
  2379  003E42  EF48  F01F         	goto	l1346
  2380  003E46                     l8939:
  2381                           
  2382                           ; BSR set to: 0
  2383  003E46  51FC               	movf	_driveMode& (0+255),w,b
  2384  003E48  6F8C               	movwf	??_calcSteering& (0+255),b
  2385  003E4A  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  2386                           
  2387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2388                           ; Switch size 1, requested type "simple"
  2389                           ; Number of cases is 1, Range of values is 0 to 0
  2390                           ; switch strategies available:
  2391                           ; Name         Instructions Cycles
  2392                           ; simple_byte            4     3 (average)
  2393                           ;	Chosen strategy is simple_byte
  2394  003E4C  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  2395  003E4E  0A00               	xorlw	0	; case 0
  2396  003E50  B4D8               	btfsc	status,2,c
  2397  003E52  EF2D  F01F         	goto	l9411
  2398  003E56  EF48  F01F         	goto	l1346
  2399  003E5A                     l9411:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ; Switch size 1, requested type "simple"
  2403                           ; Number of cases is 6, Range of values is 0 to 5
  2404                           ; switch strategies available:
  2405                           ; Name         Instructions Cycles
  2406                           ; simple_byte           19    10 (average)
  2407                           ;	Chosen strategy is simple_byte
  2408  003E5A  518C               	movf	??_calcSteering& (0+255),w,b
  2409  003E5C  0A00               	xorlw	0	; case 0
  2410  003E5E  B4D8               	btfsc	status,2,c
  2411  003E60  EFDF  F01E         	goto	l8919
  2412  003E64  0A01               	xorlw	1	; case 1
  2413  003E66  B4D8               	btfsc	status,2,c
  2414  003E68  EFD5  F01E         	goto	l8917
  2415  003E6C  0A03               	xorlw	3	; case 2
  2416  003E6E  B4D8               	btfsc	status,2,c
  2417  003E70  EFE9  F01E         	goto	l8921
  2418  003E74  0A01               	xorlw	1	; case 3
  2419  003E76  B4D8               	btfsc	status,2,c
  2420  003E78  EFF3  F01E         	goto	l8923
  2421  003E7C  0A07               	xorlw	7	; case 4
  2422  003E7E  B4D8               	btfsc	status,2,c
  2423  003E80  EFFD  F01E         	goto	l8925
  2424  003E84  0A01               	xorlw	1	; case 5
  2425  003E86  B4D8               	btfsc	status,2,c
  2426  003E88  EF10  F01F         	goto	l8931
  2427  003E8C  EF48  F01F         	goto	l1346
  2428  003E90                     l1346:
  2429  003E90  0012               	return		;funcret
  2430  003E92                     __end_of_calcSteering:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _getReverse *****************
  2434 ;; Defined at:
  2435 ;;		line 198 in file "main.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;Total ram usage:        0 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 17
  2456 ;; This function calls:
  2457 ;;		_printf
  2458 ;; This function is called by:
  2459 ;;		_loop
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text4
  2464  0042CA                     __ptext4:
  2465                           	callstack 0
  2466  0042CA                     _getReverse:
  2467                           	callstack 12
  2468  0042CA                     
  2469                           ;main.c: 199:     if (distFront < (15)) {
  2470  0042CA  0100               	movlb	0	; () banked
  2471  0042CC  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2472  0042CE  E107               	bnz	u10091
  2473  0042D0  0E0F               	movlw	15
  2474  0042D2  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2475  0042D4  B0D8               	btfsc	status,0,c
  2476  0042D6  EF6F  F021         	goto	u10091
  2477  0042DA  EF71  F021         	goto	u10090
  2478  0042DE                     u10091:
  2479  0042DE  EF76  F021         	goto	l9097
  2480  0042E2                     u10090:
  2481  0042E2                     
  2482                           ; BSR set to: 0
  2483                           ;main.c: 200:         ++reverseCount;
  2484  0042E2  0101               	movlb	1	; () banked
  2485  0042E4  4B34               	infsnz	_reverseCount& (0+255),f,b
  2486  0042E6  2B35               	incf	(_reverseCount+1)& (0+255),f,b
  2487                           
  2488                           ;main.c: 201:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2489  0042E8  EF8D  F021         	goto	l9103
  2490  0042EC                     l9097:
  2491                           
  2492                           ; BSR set to: 0
  2493  0042EC  0E02               	movlw	2
  2494  0042EE  19FC               	xorwf	_driveMode& (0+255),w,b
  2495  0042F0  B4D8               	btfsc	status,2,c
  2496  0042F2  EF7D  F021         	goto	u10101
  2497  0042F6  EF7F  F021         	goto	u10100
  2498  0042FA                     u10101:
  2499  0042FA  EF8D  F021         	goto	l9103
  2500  0042FE                     u10100:
  2501  0042FE                     
  2502                           ; BSR set to: 0
  2503  0042FE  0E03               	movlw	3
  2504  004300  19FC               	xorwf	_driveMode& (0+255),w,b
  2505  004302  B4D8               	btfsc	status,2,c
  2506  004304  EF86  F021         	goto	u10111
  2507  004308  EF88  F021         	goto	u10110
  2508  00430C                     u10111:
  2509  00430C  EF8D  F021         	goto	l9103
  2510  004310                     u10110:
  2511  004310                     
  2512                           ; BSR set to: 0
  2513                           ;main.c: 202:         reverseCount = 0;
  2514  004310  0E00               	movlw	0
  2515  004312  0101               	movlb	1	; () banked
  2516  004314  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2517  004316  0E00               	movlw	0
  2518  004318  6F34               	movwf	_reverseCount& (0+255),b
  2519  00431A                     l9103:
  2520                           
  2521                           ;main.c: 205:     if (reverseCount > (50)) {
  2522  00431A  0101               	movlb	1	; () banked
  2523  00431C  5135               	movf	(_reverseCount+1)& (0+255),w,b
  2524  00431E  E109               	bnz	u10120
  2525  004320  0E33               	movlw	51
  2526  004322  5D34               	subwf	_reverseCount& (0+255),w,b
  2527  004324  A0D8               	btfss	status,0,c
  2528  004326  EF97  F021         	goto	u10121
  2529  00432A  EF99  F021         	goto	u10120
  2530  00432E                     u10121:
  2531  00432E  EFFC  F021         	goto	l1321
  2532  004332                     u10120:
  2533  004332                     
  2534                           ; BSR set to: 1
  2535                           ;main.c: 206:         ++reverseTime;
  2536  004332  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2537  004334  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2538  004336                     
  2539                           ; BSR set to: 1
  2540                           ;main.c: 208:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2541  004336  0E02               	movlw	2
  2542  004338  0100               	movlb	0	; () banked
  2543  00433A  19FC               	xorwf	_driveMode& (0+255),w,b
  2544  00433C  B4D8               	btfsc	status,2,c
  2545  00433E  EFA3  F021         	goto	u10131
  2546  004342  EFA5  F021         	goto	u10130
  2547  004346                     u10131:
  2548  004346  EFCF  F021         	goto	l9121
  2549  00434A                     u10130:
  2550  00434A                     
  2551                           ; BSR set to: 0
  2552  00434A  0E03               	movlw	3
  2553  00434C  19FC               	xorwf	_driveMode& (0+255),w,b
  2554  00434E  B4D8               	btfsc	status,2,c
  2555  004350  EFAC  F021         	goto	u10141
  2556  004354  EFAE  F021         	goto	u10140
  2557  004358                     u10141:
  2558  004358  EFCF  F021         	goto	l9121
  2559  00435C                     u10140:
  2560  00435C                     
  2561                           ; BSR set to: 0
  2562                           ;main.c: 209:             if (distLeft > distRight) {
  2563  00435C  51F5               	movf	_distLeft& (0+255),w,b	;volatile
  2564  00435E  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2565  004360  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2566  004362  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2567  004364  B0D8               	btfsc	status,0,c
  2568  004366  EFB7  F021         	goto	u10151
  2569  00436A  EFB9  F021         	goto	u10150
  2570  00436E                     u10151:
  2571  00436E  EFC5  F021         	goto	l9117
  2572  004372                     u10150:
  2573  004372                     
  2574                           ; BSR set to: 0
  2575                           ;main.c: 210:                 printf("ReverseRigth\n");
  2576  004372  0E43               	movlw	low STR_13
  2577  004374  0101               	movlb	1	; () banked
  2578  004376  6FA6               	movwf	printf@fmt& (0+255),b
  2579  004378  0E10               	movlw	high STR_13
  2580  00437A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2581  00437C  EC48  F02E         	call	_printf	;wreg free
  2582  004380                     
  2583                           ;main.c: 211:                 driveMode = ReverseRight;
  2584  004380  0E02               	movlw	2
  2585  004382  0100               	movlb	0	; () banked
  2586  004384  6FFC               	movwf	_driveMode& (0+255),b
  2587                           
  2588                           ;main.c: 212:             } else {
  2589  004386  EFCF  F021         	goto	l9121
  2590  00438A                     l9117:
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;main.c: 213:                 printf("ReverseLeft\n");
  2594  00438A  0E5F               	movlw	low STR_14
  2595  00438C  0101               	movlb	1	; () banked
  2596  00438E  6FA6               	movwf	printf@fmt& (0+255),b
  2597  004390  0E10               	movlw	high STR_14
  2598  004392  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2599  004394  EC48  F02E         	call	_printf	;wreg free
  2600  004398                     
  2601                           ;main.c: 214:                 driveMode = ReverseLeft;
  2602  004398  0E03               	movlw	3
  2603  00439A  0100               	movlb	0	; () banked
  2604  00439C  6FFC               	movwf	_driveMode& (0+255),b
  2605  00439E                     l9121:
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;main.c: 218:         if (distFront > (35) || reverseTime > (300)) {
  2609  00439E  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2610  0043A0  E107               	bnz	u10161
  2611  0043A2  0E24               	movlw	36
  2612  0043A4  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2613  0043A6  B0D8               	btfsc	status,0,c
  2614  0043A8  EFD8  F021         	goto	u10161
  2615  0043AC  EFDA  F021         	goto	u10160
  2616  0043B0                     u10161:
  2617  0043B0  EFE9  F021         	goto	l9125
  2618  0043B4                     u10160:
  2619  0043B4                     
  2620                           ; BSR set to: 0
  2621  0043B4  0101               	movlb	1	; () banked
  2622  0043B6  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2623  0043B8  EFE7  F021         	goto	u10171
  2624  0043BC  0E2D               	movlw	45
  2625  0043BE  5D2A               	subwf	_reverseTime& (0+255),w,b
  2626  0043C0  0E01               	movlw	1
  2627  0043C2  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2628  0043C4  A0D8               	btfss	status,0,c
  2629  0043C6  EFE7  F021         	goto	u10171
  2630  0043CA  EFE9  F021         	goto	u10170
  2631  0043CE                     u10171:
  2632  0043CE  EFFC  F021         	goto	l1321
  2633  0043D2                     u10170:
  2634  0043D2                     l9125:
  2635                           
  2636                           ;main.c: 219:             printf("Stop Reverse\n");
  2637  0043D2  0E35               	movlw	low STR_15
  2638  0043D4  0101               	movlb	1	; () banked
  2639  0043D6  6FA6               	movwf	printf@fmt& (0+255),b
  2640  0043D8  0E10               	movlw	high STR_15
  2641  0043DA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2642  0043DC  EC48  F02E         	call	_printf	;wreg free
  2643  0043E0                     
  2644                           ;main.c: 221:                 driveMode = Straight;
  2645  0043E0  0E00               	movlw	0
  2646  0043E2  0100               	movlb	0	; () banked
  2647  0043E4  6FFC               	movwf	_driveMode& (0+255),b
  2648  0043E6                     
  2649                           ; BSR set to: 0
  2650                           ;main.c: 226:             reverseCount = 0;
  2651  0043E6  0E00               	movlw	0
  2652  0043E8  0101               	movlb	1	; () banked
  2653  0043EA  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2654  0043EC  0E00               	movlw	0
  2655  0043EE  6F34               	movwf	_reverseCount& (0+255),b
  2656                           
  2657                           ;main.c: 227:             reverseTime = 0;
  2658  0043F0  0E00               	movlw	0
  2659  0043F2  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2660  0043F4  0E00               	movlw	0
  2661  0043F6  6F2A               	movwf	_reverseTime& (0+255),b
  2662  0043F8                     l1321:
  2663                           
  2664                           ; BSR set to: 1
  2665  0043F8  0012               	return		;funcret
  2666  0043FA                     __end_of_getReverse:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _getCurve *****************
  2670 ;; Defined at:
  2671 ;;		line 128 in file "main.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  deltaRight      2   18[BANK1 ] short 
  2676 ;;  deltaLeft       2   16[BANK1 ] short 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;Total ram usage:        6 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 17
  2693 ;; This function calls:
  2694 ;;		_printf
  2695 ;; This function is called by:
  2696 ;;		_loop
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text5
  2701  002F4E                     __ptext5:
  2702                           	callstack 0
  2703  002F4E                     _getCurve:
  2704                           	callstack 12
  2705  002F4E                     
  2706                           ;main.c: 129:     int16_t deltaLeft;;main.c: 130:     int16_t deltaRight;;main.c: 132:  
      +                             switch (curveMode) {
  2707  002F4E  EF05  F019         	goto	l9087
  2708  002F52                     l9005:
  2709                           
  2710                           ; BSR set to: 1
  2711                           ;main.c: 134:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2712  002F52  0100               	movlb	0	; () banked
  2713  002F54  51F1               	movf	_oldDistLeft& (0+255),w,b
  2714  002F56  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2715  002F58  0101               	movlb	1	; () banked
  2716  002F5A  6FB0               	movwf	getCurve@deltaLeft& (0+255),b
  2717  002F5C  0100               	movlb	0	; () banked
  2718  002F5E  51F2               	movf	(_oldDistLeft+1)& (0+255),w,b
  2719  002F60  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2720  002F62  0101               	movlb	1	; () banked
  2721  002F64  6FB1               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2722                           
  2723                           ;main.c: 135:             deltaRight = (int16_t) (distRight - oldDistRight);
  2724  002F66  0100               	movlb	0	; () banked
  2725  002F68  51EF               	movf	_oldDistRight& (0+255),w,b
  2726  002F6A  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2727  002F6C  0101               	movlb	1	; () banked
  2728  002F6E  6FB2               	movwf	getCurve@deltaRight& (0+255),b
  2729  002F70  0100               	movlb	0	; () banked
  2730  002F72  51F0               	movf	(_oldDistRight+1)& (0+255),w,b
  2731  002F74  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2732  002F76  0101               	movlb	1	; () banked
  2733  002F78  6FB3               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2734  002F7A                     
  2735                           ; BSR set to: 1
  2736                           ;main.c: 137:             delay = 0;
  2737  002F7A  0E00               	movlw	0
  2738  002F7C  0100               	movlb	0	; () banked
  2739  002F7E  6FF7               	movwf	_delay& (0+255),b
  2740  002F80                     
  2741                           ; BSR set to: 0
  2742                           ;main.c: 138:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2743  002F80  0101               	movlb	1	; () banked
  2744  002F82  BFB1               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2745  002F84  EFCD  F017         	goto	u9931
  2746  002F88  51B1               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2747  002F8A  E109               	bnz	u9930
  2748  002F8C  0E1F               	movlw	31
  2749  002F8E  5DB0               	subwf	getCurve@deltaLeft& (0+255),w,b
  2750  002F90  A0D8               	btfss	status,0,c
  2751  002F92  EFCD  F017         	goto	u9931
  2752  002F96  EFCF  F017         	goto	u9930
  2753  002F9A                     u9931:
  2754  002F9A  EF08  F018         	goto	l9023
  2755  002F9E                     u9930:
  2756  002F9E                     
  2757                           ; BSR set to: 1
  2758  002F9E  BFB1               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2759  002FA0  EFDD  F017         	goto	u9940
  2760  002FA4  0E2C               	movlw	44
  2761  002FA6  5DB0               	subwf	getCurve@deltaLeft& (0+255),w,b
  2762  002FA8  0E01               	movlw	1
  2763  002FAA  59B1               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2764  002FAC  B0D8               	btfsc	status,0,c
  2765  002FAE  EFDB  F017         	goto	u9941
  2766  002FB2  EFDD  F017         	goto	u9940
  2767  002FB6                     u9941:
  2768  002FB6  EF08  F018         	goto	l9023
  2769  002FBA                     u9940:
  2770  002FBA                     
  2771                           ; BSR set to: 1
  2772  002FBA  0100               	movlb	0	; () banked
  2773  002FBC  51F2               	movf	(_oldDistLeft+1)& (0+255),w,b
  2774  002FBE  E107               	bnz	u9951
  2775  002FC0  0E7D               	movlw	125
  2776  002FC2  5DF1               	subwf	_oldDistLeft& (0+255),w,b
  2777  002FC4  B0D8               	btfsc	status,0,c
  2778  002FC6  EFE7  F017         	goto	u9951
  2779  002FCA  EFE9  F017         	goto	u9950
  2780  002FCE                     u9951:
  2781  002FCE  EF08  F018         	goto	l9023
  2782  002FD2                     u9950:
  2783  002FD2                     
  2784                           ; BSR set to: 0
  2785                           ;main.c: 139:                 delay = 0;
  2786  002FD2  0E00               	movlw	0
  2787  002FD4  6FF7               	movwf	_delay& (0+255),b
  2788                           
  2789                           ;main.c: 140:                 curveMode = BeforeCurve;
  2790  002FD6  0E01               	movlw	1
  2791  002FD8  6FFB               	movwf	_curveMode& (0+255),b
  2792                           
  2793                           ;main.c: 141:                 driveMode = CurveLeft;
  2794  002FDA  0E04               	movlw	4
  2795  002FDC  6FFC               	movwf	_driveMode& (0+255),b
  2796  002FDE                     
  2797                           ; BSR set to: 0
  2798                           ;main.c: 142:                 ++curveLeftCount;
  2799  002FDE  2BF9               	incf	_curveLeftCount& (0+255),f,b
  2800  002FE0                     
  2801                           ; BSR set to: 0
  2802                           ;main.c: 143:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  2803  002FE0  0E01               	movlw	low STR_2
  2804  002FE2  0101               	movlb	1	; () banked
  2805  002FE4  6FA6               	movwf	printf@fmt& (0+255),b
  2806  002FE6  0E10               	movlw	high STR_2
  2807  002FE8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2808  002FEA  C1B0  F1A8         	movff	getCurve@deltaLeft,?_printf+2
  2809  002FEE  C1B1  F1A9         	movff	getCurve@deltaLeft+1,?_printf+3
  2810  002FF2  C1B2  F1AA         	movff	getCurve@deltaRight,?_printf+4
  2811  002FF6  C1B3  F1AB         	movff	getCurve@deltaRight+1,?_printf+5
  2812  002FFA  EC48  F02E         	call	_printf	;wreg free
  2813  002FFE                     
  2814                           ;main.c: 144:                 printf("   CurveLeft\n");
  2815  002FFE  0E51               	movlw	low STR_3
  2816  003000  0101               	movlb	1	; () banked
  2817  003002  6FA6               	movwf	printf@fmt& (0+255),b
  2818  003004  0E10               	movlw	high STR_3
  2819  003006  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2820  003008  EC48  F02E         	call	_printf	;wreg free
  2821                           
  2822                           ;main.c: 145:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2823  00300C  EF24  F019         	goto	l1286
  2824  003010                     l9023:
  2825  003010  0101               	movlb	1	; () banked
  2826  003012  BFB3               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2827  003014  EF15  F018         	goto	u9961
  2828  003018  51B3               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2829  00301A  E109               	bnz	u9960
  2830  00301C  0E1F               	movlw	31
  2831  00301E  5DB2               	subwf	getCurve@deltaRight& (0+255),w,b
  2832  003020  A0D8               	btfss	status,0,c
  2833  003022  EF15  F018         	goto	u9961
  2834  003026  EF17  F018         	goto	u9960
  2835  00302A                     u9961:
  2836  00302A  EF24  F019         	goto	l1286
  2837  00302E                     u9960:
  2838  00302E                     
  2839                           ; BSR set to: 1
  2840  00302E  BFB3               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2841  003030  EF25  F018         	goto	u9970
  2842  003034  0E2C               	movlw	44
  2843  003036  5DB2               	subwf	getCurve@deltaRight& (0+255),w,b
  2844  003038  0E01               	movlw	1
  2845  00303A  59B3               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2846  00303C  B0D8               	btfsc	status,0,c
  2847  00303E  EF23  F018         	goto	u9971
  2848  003042  EF25  F018         	goto	u9970
  2849  003046                     u9971:
  2850  003046  EF24  F019         	goto	l1286
  2851  00304A                     u9970:
  2852  00304A                     
  2853                           ; BSR set to: 1
  2854  00304A  0100               	movlb	0	; () banked
  2855  00304C  51F0               	movf	(_oldDistRight+1)& (0+255),w,b
  2856  00304E  E107               	bnz	u9981
  2857  003050  0E7D               	movlw	125
  2858  003052  5DEF               	subwf	_oldDistRight& (0+255),w,b
  2859  003054  B0D8               	btfsc	status,0,c
  2860  003056  EF2F  F018         	goto	u9981
  2861  00305A  EF31  F018         	goto	u9980
  2862  00305E                     u9981:
  2863  00305E  EF24  F019         	goto	l1286
  2864  003062                     u9980:
  2865  003062                     
  2866                           ; BSR set to: 0
  2867                           ;main.c: 146:                 delay = 0;
  2868  003062  0E00               	movlw	0
  2869  003064  6FF7               	movwf	_delay& (0+255),b
  2870                           
  2871                           ;main.c: 147:                 curveMode = BeforeCurve;
  2872  003066  0E01               	movlw	1
  2873  003068  6FFB               	movwf	_curveMode& (0+255),b
  2874                           
  2875                           ;main.c: 148:                 driveMode = CurveRight;
  2876  00306A  0E05               	movlw	5
  2877  00306C  6FFC               	movwf	_driveMode& (0+255),b
  2878  00306E                     
  2879                           ; BSR set to: 0
  2880                           ;main.c: 149:                 ++curveRightCount;
  2881  00306E  2BF8               	incf	_curveRightCount& (0+255),f,b
  2882  003070                     
  2883                           ; BSR set to: 0
  2884                           ;main.c: 150:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  2885  003070  0E01               	movlw	low STR_2
  2886  003072  0101               	movlb	1	; () banked
  2887  003074  6FA6               	movwf	printf@fmt& (0+255),b
  2888  003076  0E10               	movlw	high STR_2
  2889  003078  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2890  00307A  C1B0  F1A8         	movff	getCurve@deltaLeft,?_printf+2
  2891  00307E  C1B1  F1A9         	movff	getCurve@deltaLeft+1,?_printf+3
  2892  003082  C1B2  F1AA         	movff	getCurve@deltaRight,?_printf+4
  2893  003086  C1B3  F1AB         	movff	getCurve@deltaRight+1,?_printf+5
  2894  00308A  EC48  F02E         	call	_printf	;wreg free
  2895  00308E                     
  2896                           ;main.c: 151:                 printf("   CurveRight\n");
  2897  00308E  0E26               	movlw	low STR_5
  2898  003090  0101               	movlb	1	; () banked
  2899  003092  6FA6               	movwf	printf@fmt& (0+255),b
  2900  003094  0E10               	movlw	high STR_5
  2901  003096  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2902  003098  EC48  F02E         	call	_printf	;wreg free
  2903  00309C  EF24  F019         	goto	l1286
  2904  0030A0                     l9037:
  2905                           
  2906                           ; BSR set to: 1
  2907                           ;main.c: 156:             if (delay >= (10)) {
  2908  0030A0  0E09               	movlw	9
  2909  0030A2  0100               	movlb	0	; () banked
  2910  0030A4  65F7               	cpfsgt	_delay& (0+255),b
  2911  0030A6  EF57  F018         	goto	u9991
  2912  0030AA  EF59  F018         	goto	u9990
  2913  0030AE                     u9991:
  2914  0030AE  EF66  F018         	goto	l9043
  2915  0030B2                     u9990:
  2916  0030B2                     
  2917                           ; BSR set to: 0
  2918                           ;main.c: 157:                 delay = 0;
  2919  0030B2  0E00               	movlw	0
  2920  0030B4  6FF7               	movwf	_delay& (0+255),b
  2921                           
  2922                           ;main.c: 158:                 curveMode = InCurve;
  2923  0030B6  0E02               	movlw	2
  2924  0030B8  6FFB               	movwf	_curveMode& (0+255),b
  2925  0030BA                     
  2926                           ; BSR set to: 0
  2927                           ;main.c: 159:                 printf("InCurve\n");
  2928  0030BA  0EB0               	movlw	low STR_6
  2929  0030BC  0101               	movlb	1	; () banked
  2930  0030BE  6FA6               	movwf	printf@fmt& (0+255),b
  2931  0030C0  0E10               	movlw	high STR_6
  2932  0030C2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2933  0030C4  EC48  F02E         	call	_printf	;wreg free
  2934                           
  2935                           ;main.c: 160:             } else {
  2936  0030C8  EF24  F019         	goto	l1286
  2937  0030CC                     l9043:
  2938                           
  2939                           ;main.c: 161:                 ++delay;
  2940  0030CC  0100               	movlb	0	; () banked
  2941  0030CE  2BF7               	incf	_delay& (0+255),f,b
  2942  0030D0  EF24  F019         	goto	l1286
  2943  0030D4                     l9045:
  2944                           
  2945                           ; BSR set to: 1
  2946                           ;main.c: 165:             if (delay >= (20)) {
  2947  0030D4  0E13               	movlw	19
  2948  0030D6  0100               	movlb	0	; () banked
  2949  0030D8  65F7               	cpfsgt	_delay& (0+255),b
  2950  0030DA  EF71  F018         	goto	u10001
  2951  0030DE  EF73  F018         	goto	u10000
  2952  0030E2                     u10001:
  2953  0030E2  EF66  F018         	goto	l9043
  2954  0030E6                     u10000:
  2955  0030E6                     
  2956                           ; BSR set to: 0
  2957                           ;main.c: 166:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (300)) {
  2958  0030E6  0E04               	movlw	4
  2959  0030E8  19FC               	xorwf	_driveMode& (0+255),w,b
  2960  0030EA  A4D8               	btfss	status,2,c
  2961  0030EC  EF7A  F018         	goto	u10011
  2962  0030F0  EF7C  F018         	goto	u10010
  2963  0030F4                     u10011:
  2964  0030F4  EF87  F018         	goto	l9051
  2965  0030F8                     u10010:
  2966  0030F8                     
  2967                           ; BSR set to: 0
  2968  0030F8  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2969  0030FA  E109               	bnz	u10020
  2970  0030FC  0E2D               	movlw	45
  2971  0030FE  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2972  003100  A0D8               	btfss	status,0,c
  2973  003102  EF85  F018         	goto	u10021
  2974  003106  EF87  F018         	goto	u10020
  2975  00310A                     u10021:
  2976  00310A  EFA6  F018         	goto	l9057
  2977  00310E                     u10020:
  2978  00310E                     l9051:
  2979                           
  2980                           ; BSR set to: 0
  2981  00310E  0E05               	movlw	5
  2982  003110  19FC               	xorwf	_driveMode& (0+255),w,b
  2983  003112  A4D8               	btfss	status,2,c
  2984  003114  EF8E  F018         	goto	u10031
  2985  003118  EF90  F018         	goto	u10030
  2986  00311C                     u10031:
  2987  00311C  EF9B  F018         	goto	l9055
  2988  003120                     u10030:
  2989  003120                     
  2990                           ; BSR set to: 0
  2991  003120  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2992  003122  E109               	bnz	u10040
  2993  003124  0E2D               	movlw	45
  2994  003126  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2995  003128  A0D8               	btfss	status,0,c
  2996  00312A  EF99  F018         	goto	u10041
  2997  00312E  EF9B  F018         	goto	u10040
  2998  003132                     u10041:
  2999  003132  EFA6  F018         	goto	l9057
  3000  003136                     u10040:
  3001  003136                     l9055:
  3002                           
  3003                           ; BSR set to: 0
  3004  003136  0E2D               	movlw	45
  3005  003138  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  3006  00313A  0E01               	movlw	1
  3007  00313C  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  3008  00313E  A0D8               	btfss	status,0,c
  3009  003140  EFA4  F018         	goto	u10051
  3010  003144  EFA6  F018         	goto	u10050
  3011  003148                     u10051:
  3012  003148  EF66  F018         	goto	l9043
  3013  00314C                     u10050:
  3014  00314C                     l9057:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;main.c: 167:                     if(distLeft < (45)){
  3018  00314C  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  3019  00314E  E107               	bnz	u10061
  3020  003150  0E2D               	movlw	45
  3021  003152  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  3022  003154  B0D8               	btfsc	status,0,c
  3023  003156  EFAF  F018         	goto	u10061
  3024  00315A  EFB1  F018         	goto	u10060
  3025  00315E                     u10061:
  3026  00315E  EFBA  F018         	goto	l9061
  3027  003162                     u10060:
  3028  003162                     
  3029                           ; BSR set to: 0
  3030                           ;main.c: 168:                         printf("Left Out!\n");
  3031  003162  0E90               	movlw	low STR_7
  3032  003164  0101               	movlb	1	; () banked
  3033  003166  6FA6               	movwf	printf@fmt& (0+255),b
  3034  003168  0E10               	movlw	high STR_7
  3035  00316A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3036  00316C  EC48  F02E         	call	_printf	;wreg free
  3037                           
  3038                           ;main.c: 169:                     } else if(distRight < (45)){
  3039  003170  EFD5  F018         	goto	l1300
  3040  003174                     l9061:
  3041                           
  3042                           ; BSR set to: 0
  3043  003174  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  3044  003176  E107               	bnz	u10071
  3045  003178  0E2D               	movlw	45
  3046  00317A  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  3047  00317C  B0D8               	btfsc	status,0,c
  3048  00317E  EFC3  F018         	goto	u10071
  3049  003182  EFC5  F018         	goto	u10070
  3050  003186                     u10071:
  3051  003186  EFCE  F018         	goto	l9065
  3052  00318A                     u10070:
  3053  00318A                     
  3054                           ; BSR set to: 0
  3055                           ;main.c: 170:                         printf("Right Out!\n");
  3056  00318A  0E6C               	movlw	low STR_8
  3057  00318C  0101               	movlb	1	; () banked
  3058  00318E  6FA6               	movwf	printf@fmt& (0+255),b
  3059  003190  0E10               	movlw	high STR_8
  3060  003192  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3061  003194  EC48  F02E         	call	_printf	;wreg free
  3062                           
  3063                           ;main.c: 171:                     } else {
  3064  003198  EFD5  F018         	goto	l1300
  3065  00319C                     l9065:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;main.c: 172:                         printf("Front Out!\n");
  3069  00319C  0E78               	movlw	low STR_9
  3070  00319E  0101               	movlb	1	; () banked
  3071  0031A0  6FA6               	movwf	printf@fmt& (0+255),b
  3072  0031A2  0E10               	movlw	high STR_9
  3073  0031A4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3074  0031A6  EC48  F02E         	call	_printf	;wreg free
  3075  0031AA                     l1300:
  3076                           
  3077                           ;main.c: 174:                     printf("CurveTime: %d\n", delay);
  3078  0031AA  0E17               	movlw	low STR_10
  3079  0031AC  0101               	movlb	1	; () banked
  3080  0031AE  6FA6               	movwf	printf@fmt& (0+255),b
  3081  0031B0  0E10               	movlw	high STR_10
  3082  0031B2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3083  0031B4  C0F7  F1A8         	movff	_delay,?_printf+2
  3084  0031B8  6BA9               	clrf	(?_printf+3)& (0+255),b
  3085  0031BA  EC48  F02E         	call	_printf	;wreg free
  3086  0031BE                     
  3087                           ;main.c: 175:                     delay = 0;
  3088  0031BE  0E00               	movlw	0
  3089  0031C0  0100               	movlb	0	; () banked
  3090  0031C2  6FF7               	movwf	_delay& (0+255),b
  3091  0031C4                     
  3092                           ; BSR set to: 0
  3093                           ;main.c: 176:                     curveMode = AfterCurve;
  3094  0031C4  0E03               	movlw	3
  3095  0031C6  6FFB               	movwf	_curveMode& (0+255),b
  3096  0031C8                     
  3097                           ; BSR set to: 0
  3098                           ;main.c: 178:                     driveMode = Straight;
  3099  0031C8  0E00               	movlw	0
  3100  0031CA  6FFC               	movwf	_driveMode& (0+255),b
  3101  0031CC                     
  3102                           ; BSR set to: 0
  3103                           ;main.c: 179:                     printf("AfterCurve\n");
  3104  0031CC  0E84               	movlw	low STR_11
  3105  0031CE  0101               	movlb	1	; () banked
  3106  0031D0  6FA6               	movwf	printf@fmt& (0+255),b
  3107  0031D2  0E10               	movlw	high STR_11
  3108  0031D4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3109  0031D6  EC48  F02E         	call	_printf	;wreg free
  3110  0031DA  EF66  F018         	goto	l9043
  3111  0031DE                     l9077:
  3112                           
  3113                           ; BSR set to: 1
  3114                           ;main.c: 185:             if (delay >= (1)) {
  3115  0031DE  0100               	movlb	0	; () banked
  3116  0031E0  51F7               	movf	_delay& (0+255),w,b
  3117  0031E2  B4D8               	btfsc	status,2,c
  3118  0031E4  EFF6  F018         	goto	u10081
  3119  0031E8  EFF8  F018         	goto	u10080
  3120  0031EC                     u10081:
  3121  0031EC  EF66  F018         	goto	l9043
  3122  0031F0                     u10080:
  3123  0031F0                     
  3124                           ; BSR set to: 0
  3125                           ;main.c: 186:                 delay = 0;
  3126  0031F0  0E00               	movlw	0
  3127  0031F2  6FF7               	movwf	_delay& (0+255),b
  3128                           
  3129                           ;main.c: 187:                 curveMode = OutCurve;
  3130  0031F4  0E00               	movlw	0
  3131  0031F6  6FFB               	movwf	_curveMode& (0+255),b
  3132  0031F8                     
  3133                           ; BSR set to: 0
  3134                           ;main.c: 188:                 printf("OutCurve\n");
  3135  0031F8  0EA6               	movlw	low STR_12
  3136  0031FA  0101               	movlb	1	; () banked
  3137  0031FC  6FA6               	movwf	printf@fmt& (0+255),b
  3138  0031FE  0E10               	movlw	high STR_12
  3139  003200  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3140  003202  EC48  F02E         	call	_printf	;wreg free
  3141                           
  3142                           ;main.c: 189:             } else {
  3143  003206  EF24  F019         	goto	l1286
  3144  00320A                     l9087:
  3145  00320A  0100               	movlb	0	; () banked
  3146  00320C  51FB               	movf	_curveMode& (0+255),w,b
  3147  00320E  0101               	movlb	1	; () banked
  3148  003210  6FAE               	movwf	??_getCurve& (0+255),b
  3149  003212  6BAF               	clrf	(??_getCurve+1)& (0+255),b
  3150                           
  3151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3152                           ; Switch size 1, requested type "simple"
  3153                           ; Number of cases is 1, Range of values is 0 to 0
  3154                           ; switch strategies available:
  3155                           ; Name         Instructions Cycles
  3156                           ; simple_byte            4     3 (average)
  3157                           ;	Chosen strategy is simple_byte
  3158  003214  51AF               	movf	(??_getCurve+1)& (0+255),w,b
  3159  003216  0A00               	xorlw	0	; case 0
  3160  003218  B4D8               	btfsc	status,2,c
  3161  00321A  EF11  F019         	goto	l9413
  3162  00321E  EF24  F019         	goto	l1286
  3163  003222                     l9413:
  3164                           
  3165                           ; BSR set to: 1
  3166                           ; Switch size 1, requested type "simple"
  3167                           ; Number of cases is 4, Range of values is 0 to 3
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte           13     7 (average)
  3171                           ;	Chosen strategy is simple_byte
  3172  003222  51AE               	movf	??_getCurve& (0+255),w,b
  3173  003224  0A00               	xorlw	0	; case 0
  3174  003226  B4D8               	btfsc	status,2,c
  3175  003228  EFA9  F017         	goto	l9005
  3176  00322C  0A01               	xorlw	1	; case 1
  3177  00322E  B4D8               	btfsc	status,2,c
  3178  003230  EF50  F018         	goto	l9037
  3179  003234  0A03               	xorlw	3	; case 2
  3180  003236  B4D8               	btfsc	status,2,c
  3181  003238  EF6A  F018         	goto	l9045
  3182  00323C  0A01               	xorlw	1	; case 3
  3183  00323E  B4D8               	btfsc	status,2,c
  3184  003240  EFEF  F018         	goto	l9077
  3185  003244  EF24  F019         	goto	l1286
  3186  003248                     l1286:
  3187                           
  3188                           ;main.c: 194:     oldDistLeft = distLeft;
  3189  003248  C0F5  F0F1         	movff	_distLeft,_oldDistLeft	;volatile
  3190  00324C  C0F6  F0F2         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  3191                           
  3192                           ;main.c: 195:     oldDistRight = distRight;
  3193  003250  C0F3  F0EF         	movff	_distRight,_oldDistRight	;volatile
  3194  003254  C0F4  F0F0         	movff	_distRight+1,_oldDistRight+1	;volatile
  3195  003258  0012               	return		;funcret
  3196  00325A                     __end_of_getCurve:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _checkBatt *****************
  3200 ;; Defined at:
  3201 ;;		line 84 in file "main.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      _Bool 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 18
  3222 ;; This function calls:
  3223 ;;		___flge
  3224 ;;		___xxtofl
  3225 ;;		_getBatteryVoltage
  3226 ;;		_setSteering
  3227 ;; This function is called by:
  3228 ;;		_loop
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text6
  3233  005142                     __ptext6:
  3234                           	callstack 0
  3235  005142                     _checkBatt:
  3236                           	callstack 11
  3237  005142                     
  3238                           ;main.c: 85:     ++battCheckCount;
  3239  005142  0101               	movlb	1	; () banked
  3240  005144  4B32               	infsnz	_battCheckCount& (0+255),f,b
  3241  005146  2B33               	incf	(_battCheckCount+1)& (0+255),f,b
  3242  005148                     
  3243                           ; BSR set to: 1
  3244                           ;main.c: 86:     if (battCheckCount > (500)) {
  3245  005148  0EF5               	movlw	245
  3246  00514A  5D32               	subwf	_battCheckCount& (0+255),w,b
  3247  00514C  0E01               	movlw	1
  3248  00514E  5933               	subwfb	(_battCheckCount+1)& (0+255),w,b
  3249  005150  A0D8               	btfss	status,0,c
  3250  005152  EFAD  F028         	goto	u9911
  3251  005156  EFAF  F028         	goto	u9910
  3252  00515A                     u9911:
  3253  00515A  EFE8  F028         	goto	l8999
  3254  00515E                     u9910:
  3255  00515E                     
  3256                           ; BSR set to: 1
  3257                           ;main.c: 87:         battCheckCount = 0;
  3258  00515E  0E00               	movlw	0
  3259  005160  6F33               	movwf	(_battCheckCount+1)& (0+255),b
  3260  005162  0E00               	movlw	0
  3261  005164  6F32               	movwf	_battCheckCount& (0+255),b
  3262  005166                     
  3263                           ; BSR set to: 1
  3264                           ;main.c: 88:         getBatteryVoltage();
  3265  005166  EC2E  F029         	call	_getBatteryVoltage	;wreg free
  3266  00516A                     
  3267                           ;main.c: 90:         if (BatteryVolt < (6.8) * 409.6f) {
  3268  00516A  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  3269  00516E  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  3270  005172  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3271  005174  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3272  005176  0E00               	movlw	0
  3273  005178  ECAB  F01D         	call	___xxtofl
  3274  00517C  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  3275  005180  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  3276  005184  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  3277  005188  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  3278  00518C  0E7B               	movlw	123
  3279  00518E  0100               	movlb	0	; () banked
  3280  005190  6F71               	movwf	___flge@ff2& (0+255),b
  3281  005192  0E14               	movlw	20
  3282  005194  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  3283  005196  0E2E               	movlw	46
  3284  005198  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  3285  00519A  0E45               	movlw	69
  3286  00519C  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  3287  00519E  EC98  F023         	call	___flge	;wreg free
  3288  0051A2  0100               	movlb	0	; () banked
  3289  0051A4  B0D8               	btfsc	status,0,c
  3290  0051A6  EFD7  F028         	goto	u9921
  3291  0051AA  EFD9  F028         	goto	u9920
  3292  0051AE                     u9921:
  3293  0051AE  EFE8  F028         	goto	l8999
  3294  0051B2                     u9920:
  3295  0051B2                     
  3296                           ; BSR set to: 0
  3297                           ;main.c: 91:             setSpeed = 0;
  3298  0051B2  0E00               	movlw	0
  3299  0051B4  6FEE               	movwf	(_setSpeed+1)& (0+255),b
  3300  0051B6  0E00               	movlw	0
  3301  0051B8  6FED               	movwf	_setSpeed& (0+255),b
  3302  0051BA                     
  3303                           ; BSR set to: 0
  3304                           ;main.c: 92:             setSteering(0, Front);
  3305  0051BA  0E00               	movlw	0
  3306  0051BC  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3307  0051BE  0E00               	movlw	0
  3308  0051C0  6F83               	movwf	setSteering@steering& (0+255),b
  3309  0051C2  0E03               	movlw	3
  3310  0051C4  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3311  0051C6  ECB0  F01C         	call	_setSteering	;wreg free
  3312  0051CA                     
  3313                           ;main.c: 93:             return 1;
  3314  0051CA  0E01               	movlw	1
  3315  0051CC  EFE9  F028         	goto	l1263
  3316  0051D0                     l8999:
  3317                           
  3318                           ;main.c: 96:     return 0;
  3319  0051D0  0E00               	movlw	0
  3320  0051D2                     l1263:
  3321  0051D2  0012               	return		;funcret
  3322  0051D4                     __end_of_checkBatt:
  3323                           	callstack 0
  3324                           
  3325 ;; *************** function _setSteering *****************
  3326 ;; Defined at:
  3327 ;;		line 390 in file "main.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  steering        2   35[BANK0 ] short 
  3330 ;;  steeringMode    1   37[BANK0 ] enum E17305
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  steeringB       2   42[BANK0 ] short 
  3333 ;;  steeringF       2   40[BANK0 ] short 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3343 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;Total ram usage:        9 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 9
  3350 ;; This function calls:
  3351 ;;		_PWM5_LoadDutyValue
  3352 ;;		_PWM6_LoadDutyValue
  3353 ;;		___fldiv
  3354 ;;		___fltol
  3355 ;;		___xxtofl
  3356 ;; This function is called by:
  3357 ;;		_loop
  3358 ;;		_checkBatt
  3359 ;;		_startAccell
  3360 ;;		_calcSteering
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text7
  3365  003960                     __ptext7:
  3366                           	callstack 0
  3367  003960                     _setSteering:
  3368                           	callstack 19
  3369  003960  0E00               	movlw	0
  3370  003962  0100               	movlb	0	; () banked
  3371  003964  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3372  003966  0E00               	movlw	0
  3373  003968  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3374                           
  3375                           ;main.c: 392:     switch (steeringMode) {
  3376  00396A  EF2B  F01D         	goto	l8865
  3377  00396E                     l1389:
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;main.c: 394:             steeringF = (+steering);
  3381  00396E  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3382  003972  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3383                           
  3384                           ;main.c: 395:             steeringB = -steering;
  3385  003976  C083  F086         	movff	setSteering@steering,??_setSteering
  3386  00397A  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  3387  00397E  1F86               	comf	??_setSteering& (0+255),f,b
  3388  003980  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  3389  003982  4B86               	infsnz	??_setSteering& (0+255),f,b
  3390  003984  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  3391  003986  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  3392  00398A  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  3393                           
  3394                           ;main.c: 396:             break;
  3395  00398E  EF4C  F01D         	goto	l8867
  3396  003992                     l1391:
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;main.c: 398:             steeringF = (+steering);
  3400  003992  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3401  003996  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3402                           
  3403                           ;main.c: 399:             steeringB = (+steering);
  3404  00399A  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  3405  00399E  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  3406                           
  3407                           ;main.c: 400:             break;
  3408  0039A2  EF4C  F01D         	goto	l8867
  3409  0039A6                     l1392:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;main.c: 402:             steeringF = (+steering);
  3413  0039A6  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3414  0039AA  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3415  0039AE                     
  3416                           ; BSR set to: 0
  3417                           ;main.c: 403:             steeringB = (-steering / (1.25));
  3418  0039AE  0E00               	movlw	0
  3419  0039B0  6E2E               	movwf	___fldiv@a^0,c
  3420  0039B2  0E00               	movlw	0
  3421  0039B4  6E2F               	movwf	(___fldiv@a+1)^0,c
  3422  0039B6  0EA0               	movlw	160
  3423  0039B8  6E30               	movwf	(___fldiv@a+2)^0,c
  3424  0039BA  0E3F               	movlw	63
  3425  0039BC  6E31               	movwf	(___fldiv@a+3)^0,c
  3426  0039BE  C083  F086         	movff	setSteering@steering,??_setSteering
  3427  0039C2  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  3428  0039C6  1F86               	comf	??_setSteering& (0+255),f,b
  3429  0039C8  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  3430  0039CA  4B86               	infsnz	??_setSteering& (0+255),f,b
  3431  0039CC  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  3432  0039CE  C086  F01C         	movff	??_setSteering,___xxtofl@val
  3433  0039D2  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  3434  0039D6  0E00               	movlw	0
  3435  0039D8  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  3436  0039DA  0EFF               	movlw	-1
  3437  0039DC  6E1E               	movwf	(___xxtofl@val+2)^0,c
  3438  0039DE  6E1F               	movwf	(___xxtofl@val+3)^0,c
  3439  0039E0  0E01               	movlw	1
  3440  0039E2  ECAB  F01D         	call	___xxtofl
  3441  0039E6  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  3442  0039EA  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  3443  0039EE  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  3444  0039F2  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  3445  0039F6  ECD9  F015         	call	___fldiv	;wreg free
  3446  0039FA  C02A  F079         	movff	?___fldiv,___fltol@f1
  3447  0039FE  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  3448  003A02  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  3449  003A06  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  3450  003A0A  EC14  F023         	call	___fltol	;wreg free
  3451  003A0E  C079  F08A         	movff	?___fltol,setSteering@steeringB
  3452  003A12  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  3453                           
  3454                           ;main.c: 404:             break;
  3455  003A16  EF4C  F01D         	goto	l8867
  3456  003A1A                     l1393:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;main.c: 406:             steeringF = (+steering);
  3460  003A1A  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3461  003A1E  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3462  003A22                     
  3463                           ; BSR set to: 0
  3464                           ;main.c: 407:             steeringB = 0;
  3465  003A22  0E00               	movlw	0
  3466  003A24  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3467  003A26  0E00               	movlw	0
  3468  003A28  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3469                           
  3470                           ;main.c: 408:             break;
  3471  003A2A  EF4C  F01D         	goto	l8867
  3472  003A2E                     l8857:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;main.c: 410:             steeringF = 0;
  3476  003A2E  0E00               	movlw	0
  3477  003A30  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3478  003A32  0E00               	movlw	0
  3479  003A34  6F88               	movwf	setSteering@steeringF& (0+255),b
  3480  003A36                     
  3481                           ; BSR set to: 0
  3482                           ;main.c: 411:             steeringB = (+steering);
  3483  003A36  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  3484  003A3A  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  3485                           
  3486                           ;main.c: 412:             break;
  3487  003A3E  EF4C  F01D         	goto	l8867
  3488  003A42                     l8861:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;main.c: 414:             steeringF = 0;
  3492  003A42  0E00               	movlw	0
  3493  003A44  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3494  003A46  0E00               	movlw	0
  3495  003A48  6F88               	movwf	setSteering@steeringF& (0+255),b
  3496                           
  3497                           ;main.c: 415:             steeringB = 0;
  3498  003A4A  0E00               	movlw	0
  3499  003A4C  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3500  003A4E  0E00               	movlw	0
  3501  003A50  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3502                           
  3503                           ;main.c: 416:             break;
  3504  003A52  EF4C  F01D         	goto	l8867
  3505  003A56                     l8865:
  3506                           
  3507                           ; BSR set to: 0
  3508  003A56  5185               	movf	setSteering@steeringMode& (0+255),w,b
  3509  003A58  6F86               	movwf	??_setSteering& (0+255),b
  3510  003A5A  6B87               	clrf	(??_setSteering+1)& (0+255),b
  3511                           
  3512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3513                           ; Switch size 1, requested type "simple"
  3514                           ; Number of cases is 1, Range of values is 0 to 0
  3515                           ; switch strategies available:
  3516                           ; Name         Instructions Cycles
  3517                           ; simple_byte            4     3 (average)
  3518                           ;	Chosen strategy is simple_byte
  3519  003A5C  5187               	movf	(??_setSteering+1)& (0+255),w,b
  3520  003A5E  0A00               	xorlw	0	; case 0
  3521  003A60  B4D8               	btfsc	status,2,c
  3522  003A62  EF35  F01D         	goto	l9415
  3523  003A66  EF21  F01D         	goto	l8861
  3524  003A6A                     l9415:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ; Switch size 1, requested type "simple"
  3528                           ; Number of cases is 5, Range of values is 0 to 4
  3529                           ; switch strategies available:
  3530                           ; Name         Instructions Cycles
  3531                           ; simple_byte           16     9 (average)
  3532                           ;	Chosen strategy is simple_byte
  3533  003A6A  5186               	movf	??_setSteering& (0+255),w,b
  3534  003A6C  0A00               	xorlw	0	; case 0
  3535  003A6E  B4D8               	btfsc	status,2,c
  3536  003A70  EFB7  F01C         	goto	l1389
  3537  003A74  0A01               	xorlw	1	; case 1
  3538  003A76  B4D8               	btfsc	status,2,c
  3539  003A78  EFC9  F01C         	goto	l1391
  3540  003A7C  0A03               	xorlw	3	; case 2
  3541  003A7E  B4D8               	btfsc	status,2,c
  3542  003A80  EFD3  F01C         	goto	l1392
  3543  003A84  0A01               	xorlw	1	; case 3
  3544  003A86  B4D8               	btfsc	status,2,c
  3545  003A88  EF0D  F01D         	goto	l1393
  3546  003A8C  0A07               	xorlw	7	; case 4
  3547  003A8E  B4D8               	btfsc	status,2,c
  3548  003A90  EF17  F01D         	goto	l8857
  3549  003A94  EF21  F01D         	goto	l8861
  3550  003A98                     l8867:
  3551                           
  3552                           ;main.c: 419:     if (steeringF > ((65))) {
  3553  003A98  0100               	movlb	0	; () banked
  3554  003A9A  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  3555  003A9C  EF59  F01D         	goto	u9801
  3556  003AA0  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  3557  003AA2  E109               	bnz	u9800
  3558  003AA4  0E42               	movlw	66
  3559  003AA6  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  3560  003AA8  A0D8               	btfss	status,0,c
  3561  003AAA  EF59  F01D         	goto	u9801
  3562  003AAE  EF5B  F01D         	goto	u9800
  3563  003AB2                     u9801:
  3564  003AB2  EF61  F01D         	goto	l8871
  3565  003AB6                     u9800:
  3566  003AB6                     
  3567                           ; BSR set to: 0
  3568                           ;main.c: 420:         steeringF = ((65));
  3569  003AB6  0E00               	movlw	0
  3570  003AB8  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3571  003ABA  0E41               	movlw	65
  3572  003ABC  6F88               	movwf	setSteering@steeringF& (0+255),b
  3573                           
  3574                           ;main.c: 421:     } else if (steeringF < (-(65))) {
  3575  003ABE  EF73  F01D         	goto	l8875
  3576  003AC2                     l8871:
  3577                           
  3578                           ; BSR set to: 0
  3579  003AC2  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  3580  003AC4  EF6D  F01D         	goto	u9811
  3581  003AC8  0EBF               	movlw	191
  3582  003ACA  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  3583  003ACC  0EFF               	movlw	255
  3584  003ACE  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  3585  003AD0  B0D8               	btfsc	status,0,c
  3586  003AD2  EF6D  F01D         	goto	u9811
  3587  003AD6  EF6F  F01D         	goto	u9810
  3588  003ADA                     u9811:
  3589  003ADA  EF73  F01D         	goto	l8875
  3590  003ADE                     u9810:
  3591  003ADE                     
  3592                           ; BSR set to: 0
  3593                           ;main.c: 422:         steeringF = (-(65));
  3594  003ADE  0EFF               	movlw	255
  3595  003AE0  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3596  003AE2  0EBF               	movlw	191
  3597  003AE4  6F88               	movwf	setSteering@steeringF& (0+255),b
  3598  003AE6                     l8875:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;main.c: 425:     if (steeringB > ((40))) {
  3602  003AE6  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  3603  003AE8  EF7F  F01D         	goto	u9821
  3604  003AEC  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  3605  003AEE  E109               	bnz	u9820
  3606  003AF0  0E29               	movlw	41
  3607  003AF2  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  3608  003AF4  A0D8               	btfss	status,0,c
  3609  003AF6  EF7F  F01D         	goto	u9821
  3610  003AFA  EF81  F01D         	goto	u9820
  3611  003AFE                     u9821:
  3612  003AFE  EF87  F01D         	goto	l8879
  3613  003B02                     u9820:
  3614  003B02                     
  3615                           ; BSR set to: 0
  3616                           ;main.c: 426:         steeringB = ((40));
  3617  003B02  0E00               	movlw	0
  3618  003B04  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3619  003B06  0E28               	movlw	40
  3620  003B08  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3621                           
  3622                           ;main.c: 427:     } else if (steeringB < (-(40))) {
  3623  003B0A  EF99  F01D         	goto	l8883
  3624  003B0E                     l8879:
  3625                           
  3626                           ; BSR set to: 0
  3627  003B0E  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  3628  003B10  EF93  F01D         	goto	u9831
  3629  003B14  0ED8               	movlw	216
  3630  003B16  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  3631  003B18  0EFF               	movlw	255
  3632  003B1A  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  3633  003B1C  B0D8               	btfsc	status,0,c
  3634  003B1E  EF93  F01D         	goto	u9831
  3635  003B22  EF95  F01D         	goto	u9830
  3636  003B26                     u9831:
  3637  003B26  EF99  F01D         	goto	l8883
  3638  003B2A                     u9830:
  3639  003B2A                     
  3640                           ; BSR set to: 0
  3641                           ;main.c: 428:         steeringB = (-(40));
  3642  003B2A  0EFF               	movlw	255
  3643  003B2C  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3644  003B2E  0ED8               	movlw	216
  3645  003B30  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3646  003B32                     l8883:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;main.c: 432:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  3650  003B32  0E60               	movlw	96
  3651  003B34  2588               	addwf	setSteering@steeringF& (0+255),w,b
  3652  003B36  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  3653  003B38  0E01               	movlw	1
  3654  003B3A  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  3655  003B3C  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  3656  003B3E  ECC3  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  3657  003B42                     
  3658                           ;main.c: 433:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  3659  003B42  0E65               	movlw	101
  3660  003B44  0100               	movlb	0	; () banked
  3661  003B46  258A               	addwf	setSteering@steeringB& (0+255),w,b
  3662  003B48  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  3663  003B4A  0E01               	movlw	1
  3664  003B4C  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  3665  003B4E  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  3666  003B50  ECDD  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  3667  003B54  0012               	return		;funcret
  3668  003B56                     __end_of_setSteering:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _PWM6_LoadDutyValue *****************
  3672 ;; Defined at:
  3673 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  dutyValue       2   19[COMRAM] unsigned short 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;Total ram usage:        4 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 8
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_setSteering
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text8
  3702  005986                     __ptext8:
  3703                           	callstack 0
  3704  005986                     _PWM6_LoadDutyValue:
  3705                           	callstack 19
  3706  005986                     
  3707                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3708  005986  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  3709  00598A  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  3710  00598E  90D8               	bcf	status,0,c
  3711  005990  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  3712  005992  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  3713  005994  90D8               	bcf	status,0,c
  3714  005996  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  3715  005998  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  3716  00599A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  3717  00599C  6E69               	movwf	105,c	;volatile
  3718                           
  3719                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  3720  00599E  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  3721  0059A2  0E03               	movlw	3
  3722  0059A4  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  3723  0059A6  0E06               	movlw	6
  3724  0059A8  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  3725  0059AA                     u6085:
  3726  0059AA  90D8               	bcf	status,0,c
  3727  0059AC  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  3728  0059AE  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  3729  0059B0  EFD5  F02C         	goto	u6085
  3730  0059B4  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  3731  0059B6  6E68               	movwf	104,c	;volatile
  3732  0059B8  0012               	return		;funcret
  3733  0059BA                     __end_of_PWM6_LoadDutyValue:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function _PWM5_LoadDutyValue *****************
  3737 ;; Defined at:
  3738 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  dutyValue       2   19[COMRAM] unsigned short 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2, status,0
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;Total ram usage:        4 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; Hardware stack levels required when called: 8
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_setSteering
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text9
  3767  0059BA                     __ptext9:
  3768                           	callstack 0
  3769  0059BA                     _PWM5_LoadDutyValue:
  3770                           	callstack 19
  3771  0059BA                     
  3772                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3773  0059BA  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  3774  0059BE  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  3775  0059C2  90D8               	bcf	status,0,c
  3776  0059C4  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  3777  0059C6  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  3778  0059C8  90D8               	bcf	status,0,c
  3779  0059CA  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  3780  0059CC  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  3781  0059CE  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  3782  0059D0  6E6D               	movwf	109,c	;volatile
  3783                           
  3784                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  3785  0059D2  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  3786  0059D6  0E03               	movlw	3
  3787  0059D8  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  3788  0059DA  0E06               	movlw	6
  3789  0059DC  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  3790  0059DE                     u6075:
  3791  0059DE  90D8               	bcf	status,0,c
  3792  0059E0  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  3793  0059E2  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  3794  0059E4  EFEF  F02C         	goto	u6075
  3795  0059E8  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  3796  0059EA  6E6C               	movwf	108,c	;volatile
  3797  0059EC  0012               	return		;funcret
  3798  0059EE                     __end_of_PWM5_LoadDutyValue:
  3799                           	callstack 0
  3800                           
  3801 ;; *************** function _getBatteryVoltage *****************
  3802 ;; Defined at:
  3803 ;;		line 79 in file "main.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;Total ram usage:        4 bytes
  3822 ;; Hardware stack levels used: 1
  3823 ;; Hardware stack levels required when called: 17
  3824 ;; This function calls:
  3825 ;;		_ADCC_GetSingleConversion
  3826 ;;		___fldiv
  3827 ;;		___xxtofl
  3828 ;;		_printf
  3829 ;; This function is called by:
  3830 ;;		_loop
  3831 ;;		_checkBatt
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text10
  3836  00525C                     __ptext10:
  3837                           	callstack 0
  3838  00525C                     _getBatteryVoltage:
  3839                           	callstack 12
  3840  00525C                     
  3841                           ;main.c: 80:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  3842  00525C  0E22               	movlw	34
  3843  00525E  EC60  F02D         	call	_ADCC_GetSingleConversion
  3844  005262  C014  F0E7         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  3845  005266  C015  F0E8         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  3846                           
  3847                           ;main.c: 81:     printf("BVolt: %f\n", BatteryVolt / 409.6f);
  3848  00526A  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  3849  00526E  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  3850  005272  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3851  005274  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3852  005276  0E00               	movlw	0
  3853  005278  ECAB  F01D         	call	___xxtofl
  3854  00527C  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  3855  005280  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  3856  005284  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  3857  005288  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  3858  00528C  0ECD               	movlw	205
  3859  00528E  6E2E               	movwf	___fldiv@a^0,c
  3860  005290  0ECC               	movlw	204
  3861  005292  6E2F               	movwf	(___fldiv@a+1)^0,c
  3862  005294  0ECC               	movlw	204
  3863  005296  6E30               	movwf	(___fldiv@a+2)^0,c
  3864  005298  0E43               	movlw	67
  3865  00529A  6E31               	movwf	(___fldiv@a+3)^0,c
  3866  00529C  ECD9  F015         	call	___fldiv	;wreg free
  3867  0052A0  C02A  F1AE         	movff	?___fldiv,_getBatteryVoltage$4191
  3868  0052A4  C02B  F1AF         	movff	?___fldiv+1,_getBatteryVoltage$4191+1
  3869  0052A8  C02C  F1B0         	movff	?___fldiv+2,_getBatteryVoltage$4191+2
  3870  0052AC  C02D  F1B1         	movff	?___fldiv+3,_getBatteryVoltage$4191+3
  3871  0052B0                     
  3872                           ;main.c: 81:     printf("BVolt: %f\n", BatteryVolt / 409.6f);
  3873  0052B0  0E9B               	movlw	low STR_1
  3874  0052B2  0101               	movlb	1	; () banked
  3875  0052B4  6FA6               	movwf	printf@fmt& (0+255),b
  3876  0052B6  0E10               	movlw	high STR_1
  3877  0052B8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3878  0052BA  C1AE  F1A8         	movff	_getBatteryVoltage$4191,?_printf+2
  3879  0052BE  C1AF  F1A9         	movff	_getBatteryVoltage$4191+1,?_printf+3
  3880  0052C2  C1B0  F1AA         	movff	_getBatteryVoltage$4191+2,?_printf+4
  3881  0052C6  C1B1  F1AB         	movff	_getBatteryVoltage$4191+3,?_printf+5
  3882  0052CA  EC48  F02E         	call	_printf	;wreg free
  3883  0052CE  0012               	return		;funcret
  3884  0052D0                     __end_of_getBatteryVoltage:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _printf *****************
  3888 ;; Defined at:
  3889 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  3892 ;;		 -> STR_15(14), STR_14(13), STR_13(14), STR_12(10), 
  3893 ;;		 -> STR_11(12), STR_10(15), STR_9(12), STR_8(12), 
  3894 ;;		 -> STR_7(11), STR_6(9), STR_5(15), STR_4(22), 
  3895 ;;		 -> STR_3(14), STR_2(22), STR_1(11), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  ap              2   12[BANK1 ] PTR void [1]
  3898 ;;		 -> ?_printf(2), 
  3899 ;;  ret             2    0        int 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  2    6[BANK1 ] int 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3909 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;Total ram usage:        8 bytes
  3914 ;; Hardware stack levels used: 1
  3915 ;; Hardware stack levels required when called: 16
  3916 ;; This function calls:
  3917 ;;		_vfprintf
  3918 ;; This function is called by:
  3919 ;;		_getBatteryVoltage
  3920 ;;		_getCurve
  3921 ;;		_getReverse
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text11
  3926  005C90                     __ptext11:
  3927                           	callstack 0
  3928  005C90                     _printf:
  3929                           	callstack 12
  3930  005C90  0EA8               	movlw	low (?_printf+2)
  3931  005C92  0101               	movlb	1	; () banked
  3932  005C94  6FAC               	movwf	printf@ap& (0+255),b
  3933  005C96  0E01               	movlw	high (?_printf+2)
  3934  005C98  6FAD               	movwf	(printf@ap+1)& (0+255),b
  3935  005C9A                     
  3936                           ; BSR set to: 1
  3937  005C9A  0E00               	movlw	0
  3938  005C9C  6FA0               	movwf	vfprintf@fp& (0+255),b
  3939  005C9E  0E00               	movlw	0
  3940  005CA0  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
  3941  005CA2  C1A6  F1A2         	movff	printf@fmt,vfprintf@fmt
  3942  005CA6  C1A7  F1A3         	movff	printf@fmt+1,vfprintf@fmt+1
  3943  005CAA  0EAC               	movlw	low printf@ap
  3944  005CAC  6FA4               	movwf	vfprintf@ap& (0+255),b
  3945  005CAE  0E01               	movlw	high printf@ap
  3946  005CB0  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  3947  005CB2  EC68  F029         	call	_vfprintf	;wreg free
  3948  005CB6  0012               	return		;funcret
  3949  005CB8                     __end_of_printf:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _vfprintf *****************
  3953 ;; Defined at:
  3954 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3957 ;;		 -> NULL(0), 
  3958 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3959 ;;		 -> STR_15(14), STR_14(13), STR_13(14), STR_12(10), 
  3960 ;;		 -> STR_11(12), STR_10(15), STR_9(12), STR_8(12), 
  3961 ;;		 -> STR_7(11), STR_6(9), STR_5(15), STR_4(22), 
  3962 ;;		 -> STR_3(14), STR_2(22), STR_1(11), 
  3963 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3964 ;;		 -> printf@ap(2), 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  3967 ;;		 -> STR_15(14), STR_14(13), STR_13(14), STR_12(10), 
  3968 ;;		 -> STR_11(12), STR_10(15), STR_9(12), STR_8(12), 
  3969 ;;		 -> STR_7(11), STR_6(9), STR_5(15), STR_4(22), 
  3970 ;;		 -> STR_3(14), STR_2(22), STR_1(11), 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  2    0[BANK1 ] int 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3980 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;Total ram usage:        8 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; Hardware stack levels required when called: 15
  3987 ;; This function calls:
  3988 ;;		_vfpfcnvrt
  3989 ;; This function is called by:
  3990 ;;		_printf
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text12
  3995  0052D0                     __ptext12:
  3996                           	callstack 0
  3997  0052D0                     _vfprintf:
  3998                           	callstack 12
  3999  0052D0                     
  4000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4001  0052D0  C1A2  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  4002  0052D4  C1A3  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4003  0052D8                     
  4004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4005  0052D8  0E00               	movlw	0
  4006  0052DA  0101               	movlb	1	; () banked
  4007  0052DC  6F29               	movwf	(_nout+1)& (0+255),b
  4008  0052DE  0E00               	movlw	0
  4009  0052E0  6F28               	movwf	_nout& (0+255),b
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4012  0052E2  EF8A  F029         	goto	l8837
  4013  0052E6                     l8835:
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4017  0052E6  C1A0  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  4018  0052EA  C1A1  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4019  0052EE  0EE3               	movlw	low vfprintf@cfmt
  4020  0052F0  0100               	movlb	0	; () banked
  4021  0052F2  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  4022  0052F4  0E00               	movlw	high vfprintf@cfmt
  4023  0052F6  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4024  0052F8  C1A4  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  4025  0052FC  C1A5  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4026  005300  ECBE  F00E         	call	_vfpfcnvrt	;wreg free
  4027  005304  0100               	movlb	0	; () banked
  4028  005306  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  4029  005308  0101               	movlb	1	; () banked
  4030  00530A  2728               	addwf	_nout& (0+255),f,b
  4031  00530C  0100               	movlb	0	; () banked
  4032  00530E  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4033  005310  0101               	movlb	1	; () banked
  4034  005312  2329               	addwfc	(_nout+1)& (0+255),f,b
  4035  005314                     l8837:
  4036                           
  4037                           ; BSR set to: 1
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4039  005314  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  4040  00531A  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4041  005320                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4042  005320  6AF8               	clrf	tblptru,c
  4043  005322                     	endif
  4044  005322                     	if	0	;tblptru may be non-zero
  4045  005322                     	endif
  4046  005322  0008               	tblrd		*
  4047  005324  50F5               	movf	tablat,w,c
  4048  005326  0900               	iorlw	0
  4049  005328  A4D8               	btfss	status,2,c
  4050  00532A  EF99  F029         	goto	u9781
  4051  00532E  EF9B  F029         	goto	u9780
  4052  005332                     u9781:
  4053  005332  EF73  F029         	goto	l8835
  4054  005336                     u9780:
  4055  005336                     
  4056                           ; BSR set to: 1
  4057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4058  005336  C128  F1A0         	movff	_nout,?_vfprintf
  4059  00533A  C129  F1A1         	movff	_nout+1,?_vfprintf+1
  4060  00533E                     
  4061                           ; BSR set to: 1
  4062  00533E  0012               	return		;funcret
  4063  005340                     __end_of_vfprintf:
  4064                           	callstack 0
  4065                           
  4066 ;; *************** function _vfpfcnvrt *****************
  4067 ;; Defined at:
  4068 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  4071 ;;		 -> NULL(0), 
  4072 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  4073 ;;		 -> vfprintf@cfmt(2), 
  4074 ;;  ap              2  107[BANK0 ] PTR PTR void 
  4075 ;;		 -> printf@ap(2), 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  ll              8  113[BANK0 ] long long 
  4078 ;;  llu             8    0        unsigned long long 
  4079 ;;  f               4  123[BANK0 ] unsigned long long 
  4080 ;;  ct              3  127[BANK0 ] unsigned char [3]
  4081 ;;  vp              3    0        PTR void 
  4082 ;;  cp              3    0        PTR unsigned char 
  4083 ;;  i               2    0        int 
  4084 ;;  done            2    0        int 
  4085 ;;  c               1  130[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2  103[BANK0 ] int 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4095 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;Total ram usage:       28 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 14
  4102 ;; This function calls:
  4103 ;;		_dtoa
  4104 ;;		_efgtoa
  4105 ;;		_fputc
  4106 ;;		_isupper
  4107 ;;		_strncmp
  4108 ;;		_tolower
  4109 ;; This function is called by:
  4110 ;;		_vfprintf
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text13
  4115  001D7C                     __ptext13:
  4116                           	callstack 0
  4117  001D7C                     _vfpfcnvrt:
  4118                           	callstack 12
  4119  001D7C                     
  4120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4121  001D7C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4122  001D82  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4123  001D88  006F FF7B FFF6     	movff	postinc2,tblptrl
  4124  001D8E  006F FF77 FFF7     	movff	postdec2,tblptrh
  4125  001D94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4126  001D94  6AF8               	clrf	tblptru,c
  4127  001D96                     	endif
  4128  001D96                     	if	0	;tblptru may be non-zero
  4129  001D96                     	endif
  4130  001D96  0008               	tblrd		*
  4131  001D98  50F5               	movf	tablat,w,c
  4132  001D9A  0A25               	xorlw	37
  4133  001D9C  A4D8               	btfss	status,2,c
  4134  001D9E  EFD3  F00E         	goto	u9571
  4135  001DA2  EFD5  F00E         	goto	u9570
  4136  001DA6                     u9571:
  4137  001DA6  EF2D  F011         	goto	l8777
  4138  001DAA                     u9570:
  4139  001DAA                     
  4140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4141  001DAA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4142  001DB0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4143  001DB6  2ADE               	incf	postinc2,f,c
  4144  001DB8  0E00               	movlw	0
  4145  001DBA  22DD               	addwfc	postdec2,f,c
  4146  001DBC                     
  4147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4148  001DBC  0E00               	movlw	0
  4149  001DBE  0100               	movlb	0	; () banked
  4150  001DC0  6FE6               	movwf	(_width+1)& (0+255),b
  4151  001DC2  0E00               	movlw	0
  4152  001DC4  6FE5               	movwf	_width& (0+255),b
  4153  001DC6  C0E5  F03C         	movff	_width,_flags
  4154  001DCA  C0E6  F03D         	movff	_width+1,_flags+1
  4155  001DCE                     
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4158  001DCE  683A               	setf	_prec^0,c
  4159  001DD0  683B               	setf	(_prec+1)^0,c
  4160  001DD2                     
  4161                           ; BSR set to: 0
  4162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4163  001DD2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4164  001DD8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4165  001DDE  006F FF7B FFF6     	movff	postinc2,tblptrl
  4166  001DE4  006F FF77 FFF7     	movff	postdec2,tblptrh
  4167  001DEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4168  001DEA  6AF8               	clrf	tblptru,c
  4169  001DEC                     	endif
  4170  001DEC                     	if	0	;tblptru may be non-zero
  4171  001DEC                     	endif
  4172  001DEC  0008               	tblrd		*
  4173  001DEE  50F5               	movf	tablat,w,c
  4174  001DF0  6E1A               	movwf	tolower@c^0,c
  4175  001DF2  6A1B               	clrf	(tolower@c+1)^0,c
  4176  001DF4  ECD5  F029         	call	_tolower	;wreg free
  4177  001DF8  501A               	movf	?_tolower^0,w,c
  4178  001DFA  0100               	movlb	0	; () banked
  4179  001DFC  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  4180  001DFE                     
  4181                           ; BSR set to: 0
  4182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4183  001DFE  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  4184  001E00  B4D8               	btfsc	status,2,c
  4185  001E02  EF05  F00F         	goto	u9581
  4186  001E06  EF07  F00F         	goto	u9580
  4187  001E0A                     u9581:
  4188  001E0A  EF4F  F00F         	goto	l8723
  4189  001E0E                     u9580:
  4190  001E0E                     
  4191                           ; BSR set to: 0
  4192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4193  001E0E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4194  001E14  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4195  001E1A  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4196  001E20  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4197  001E26  0E01               	movlw	1
  4198  001E28  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4199  001E2A  0E00               	movlw	0
  4200  001E2C  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4201  001E2E  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4202  001E34  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4203  001E3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4204  001E3A  6AF8               	clrf	tblptru,c
  4205  001E3C                     	endif
  4206  001E3C                     	if	0	;tblptru may be non-zero
  4207  001E3C                     	endif
  4208  001E3C  0008               	tblrd		*
  4209  001E3E  50F5               	movf	tablat,w,c
  4210  001E40  6E1A               	movwf	tolower@c^0,c
  4211  001E42  6A1B               	clrf	(tolower@c+1)^0,c
  4212  001E44  ECD5  F029         	call	_tolower	;wreg free
  4213  001E48  501A               	movf	?_tolower^0,w,c
  4214  001E4A  0100               	movlb	0	; () banked
  4215  001E4C  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4216  001E4E                     
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4219  001E4E  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4220  001E50  B4D8               	btfsc	status,2,c
  4221  001E52  EF2D  F00F         	goto	u9591
  4222  001E56  EF2F  F00F         	goto	u9590
  4223  001E5A                     u9591:
  4224  001E5A  EF4F  F00F         	goto	l8723
  4225  001E5E                     u9590:
  4226  001E5E                     
  4227                           ; BSR set to: 0
  4228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4229  001E5E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4230  001E64  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4231  001E6A  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4232  001E70  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4233  001E76  0E02               	movlw	2
  4234  001E78  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4235  001E7A  0E00               	movlw	0
  4236  001E7C  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4237  001E7E  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4238  001E84  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4239  001E8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4240  001E8A  6AF8               	clrf	tblptru,c
  4241  001E8C                     	endif
  4242  001E8C                     	if	0	;tblptru may be non-zero
  4243  001E8C                     	endif
  4244  001E8C  0008               	tblrd		*
  4245  001E8E  50F5               	movf	tablat,w,c
  4246  001E90  6E1A               	movwf	tolower@c^0,c
  4247  001E92  6A1B               	clrf	(tolower@c+1)^0,c
  4248  001E94  ECD5  F029         	call	_tolower	;wreg free
  4249  001E98  501A               	movf	?_tolower^0,w,c
  4250  001E9A  0100               	movlb	0	; () banked
  4251  001E9C  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4252  001E9E                     l8723:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4256  001E9E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4257  001EA4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4258  001EAA  006F FF7B FFF6     	movff	postinc2,tblptrl
  4259  001EB0  006F FF77 FFF7     	movff	postdec2,tblptrh
  4260  001EB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4261  001EB6  6AF8               	clrf	tblptru,c
  4262  001EB8                     	endif
  4263  001EB8                     	if	0	;tblptru may be non-zero
  4264  001EB8                     	endif
  4265  001EB8  0008               	tblrd		*
  4266  001EBA  50F5               	movf	tablat,w,c
  4267  001EBC  0A64               	xorlw	100
  4268  001EBE  B4D8               	btfsc	status,2,c
  4269  001EC0  EF64  F00F         	goto	u9601
  4270  001EC4  EF66  F00F         	goto	u9600
  4271  001EC8                     u9601:
  4272  001EC8  EF7D  F00F         	goto	l8727
  4273  001ECC                     u9600:
  4274  001ECC                     
  4275                           ; BSR set to: 0
  4276  001ECC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4277  001ED2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4278  001ED8  006F FF7B FFF6     	movff	postinc2,tblptrl
  4279  001EDE  006F FF77 FFF7     	movff	postdec2,tblptrh
  4280  001EE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4281  001EE4  6AF8               	clrf	tblptru,c
  4282  001EE6                     	endif
  4283  001EE6                     	if	0	;tblptru may be non-zero
  4284  001EE6                     	endif
  4285  001EE6  0008               	tblrd		*
  4286  001EE8  50F5               	movf	tablat,w,c
  4287  001EEA  0A69               	xorlw	105
  4288  001EEC  A4D8               	btfss	status,2,c
  4289  001EEE  EF7B  F00F         	goto	u9611
  4290  001EF2  EF7D  F00F         	goto	u9610
  4291  001EF6                     u9611:
  4292  001EF6  EFC7  F00F         	goto	l8733
  4293  001EFA                     u9610:
  4294  001EFA                     l8727:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4298  001EFA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4299  001F00  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4300  001F06  2ADE               	incf	postinc2,f,c
  4301  001F08  0E00               	movlw	0
  4302  001F0A  22DD               	addwfc	postdec2,f,c
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4305  001F0C  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4306  001F12  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4307  001F18  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4308  001F1E  0E02               	movlw	2
  4309  001F20  26DE               	addwf	postinc2,f,c
  4310  001F22  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4311  001F28  0E00               	movlw	0
  4312  001F2A  22DD               	addwfc	postdec2,f,c
  4313  001F2C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4314  001F32  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4315  001F38  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  4316  001F3E  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  4317  001F44  0E00               	movlw	0
  4318  001F46  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4319  001F48  0EFF               	movlw	-1
  4320  001F4A  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4321  001F4C  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4322  001F4E  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4323  001F50  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4324  001F52  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4325  001F54  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4326  001F56                     
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4329  001F56  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  4330  001F5A  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4331  001F5E  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  4332  001F62  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4333  001F66  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4334  001F6A  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4335  001F6E  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4336  001F72  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4337  001F76  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4338  001F7A  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4339  001F7E  EC2D  F019         	call	_dtoa	;wreg free
  4340  001F82  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  4341  001F86  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4342  001F8A  EF4F  F011         	goto	l2255
  4343  001F8E                     l8733:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4347  001F8E  0E66               	movlw	102
  4348  001F90  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4349  001F92  A4D8               	btfss	status,2,c
  4350  001F94  EFCE  F00F         	goto	u9621
  4351  001F98  EFD0  F00F         	goto	u9620
  4352  001F9C                     u9621:
  4353  001F9C  EF22  F010         	goto	l8745
  4354  001FA0                     u9620:
  4355  001FA0                     
  4356                           ; BSR set to: 0
  4357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4358  001FA0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4359  001FA6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4360  001FAC  006F FF7B FFF6     	movff	postinc2,tblptrl
  4361  001FB2  006F FF77 FFF7     	movff	postdec2,tblptrh
  4362  001FB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4363  001FB8  6AF8               	clrf	tblptru,c
  4364  001FBA                     	endif
  4365  001FBA                     	if	0	;tblptru may be non-zero
  4366  001FBA                     	endif
  4367  001FBA  0008               	tblrd		*
  4368  001FBC  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  4369  001FC2                     
  4370                           ; BSR set to: 0
  4371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4372  001FC2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4373  001FC8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4374  001FCE  2ADE               	incf	postinc2,f,c
  4375  001FD0  0E00               	movlw	0
  4376  001FD2  22DD               	addwfc	postdec2,f,c
  4377  001FD4                     
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4380  001FD4  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4381  001FDA  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4382  001FE0  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4383  001FE6  0E04               	movlw	4
  4384  001FE8  26DE               	addwf	postinc2,f,c
  4385  001FEA  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4386  001FF0  0E00               	movlw	0
  4387  001FF2  22DD               	addwfc	postdec2,f,c
  4388  001FF4  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4389  001FFA  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4390  002000  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  4391  002006  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  4392  00200C  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  4393  002012  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  4394  002018                     
  4395                           ; BSR set to: 0
  4396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4397  002018  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  4398  00201C  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4399  002020  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  4400  002024  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4401  002028  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4402  00202C  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4403  002030  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  4404  002034  EC67  F008         	call	_efgtoa	;wreg free
  4405  002038  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  4406  00203C  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4407  002040  EF4F  F011         	goto	l2255
  4408  002044                     l8745:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4412  002044  0EDF               	movlw	low vfpfcnvrt@ct
  4413  002046  6E14               	movwf	strncmp@_l^0,c
  4414  002048  0E00               	movlw	high vfpfcnvrt@ct
  4415  00204A  6E15               	movwf	(strncmp@_l+1)^0,c
  4416  00204C  0EC9               	movlw	low STR_24
  4417  00204E  6E16               	movwf	strncmp@_r^0,c
  4418  002050  0E10               	movlw	high STR_24
  4419  002052  6E17               	movwf	(strncmp@_r+1)^0,c
  4420  002054  0E00               	movlw	0
  4421  002056  6E19               	movwf	(strncmp@n+1)^0,c
  4422  002058  0E02               	movlw	2
  4423  00205A  6E18               	movwf	strncmp@n^0,c
  4424  00205C  EC9A  F024         	call	_strncmp	;wreg free
  4425  002060  5014               	movf	?_strncmp^0,w,c
  4426  002062  1015               	iorwf	(?_strncmp+1)^0,w,c
  4427  002064  A4D8               	btfss	status,2,c
  4428  002066  EF37  F010         	goto	u9631
  4429  00206A  EF39  F010         	goto	u9630
  4430  00206E                     u9631:
  4431  00206E  EFEC  F010         	goto	l8761
  4432  002072                     u9630:
  4433  002072                     
  4434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4435  002072  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4436  002078  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4437  00207E  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4438  002084  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4439  00208A  0E01               	movlw	1
  4440  00208C  0100               	movlb	0	; () banked
  4441  00208E  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4442  002090  0E00               	movlw	0
  4443  002092  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4444  002094  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4445  00209A  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4446  0020A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4447  0020A0  6AF8               	clrf	tblptru,c
  4448  0020A2                     	endif
  4449  0020A2                     	if	0	;tblptru may be non-zero
  4450  0020A2                     	endif
  4451  0020A2  0008               	tblrd		*
  4452  0020A4  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  4453  0020AA  0EBF               	movlw	191
  4454  0020AC  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  4455  0020AE  0EFF               	movlw	255
  4456  0020B0  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4457  0020B2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4458  0020B8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4459  0020BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  4460  0020C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  4461  0020CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4462  0020CA  6AF8               	clrf	tblptru,c
  4463  0020CC                     	endif
  4464  0020CC                     	if	0	;tblptru may be non-zero
  4465  0020CC                     	endif
  4466  0020CC  0008               	tblrd		*
  4467  0020CE  50F5               	movf	tablat,w,c
  4468  0020D0  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4469  0020D2  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4470  0020D4  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  4471  0020D6  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4472  0020D8  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4473  0020DA  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4474  0020DC  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4475  0020DE  E10A               	bnz	u9640
  4476  0020E0  0E1A               	movlw	26
  4477  0020E2  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4478  0020E4  A0D8               	btfss	status,0,c
  4479  0020E6  EF77  F010         	goto	u9641
  4480  0020EA  EF7A  F010         	goto	u9640
  4481  0020EE                     u9641:
  4482  0020EE  0E01               	movlw	1
  4483  0020F0  EF7B  F010         	goto	u9650
  4484  0020F4                     u9640:
  4485  0020F4  0E00               	movlw	0
  4486  0020F6                     u9650:
  4487  0020F6  6FD9               	movwf	_vfpfcnvrt$3597& (0+255),b
  4488  0020F8  6BDA               	clrf	(_vfpfcnvrt$3597+1)& (0+255),b
  4489  0020FA                     
  4490                           ; BSR set to: 0
  4491  0020FA  51D9               	movf	_vfpfcnvrt$3597& (0+255),w,b
  4492  0020FC  11DA               	iorwf	(_vfpfcnvrt$3597+1)& (0+255),w,b
  4493  0020FE  B4D8               	btfsc	status,2,c
  4494  002100  EF84  F010         	goto	u9661
  4495  002104  EF86  F010         	goto	u9660
  4496  002108                     u9661:
  4497  002108  EFAA  F010         	goto	l8755
  4498  00210C                     u9660:
  4499  00210C                     
  4500                           ; BSR set to: 0
  4501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4502  00210C  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4503  002112  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4504  002118  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4505  00211E  0E04               	movlw	4
  4506  002120  26DE               	addwf	postinc2,f,c
  4507  002122  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4508  002128  0E00               	movlw	0
  4509  00212A  22DD               	addwfc	postdec2,f,c
  4510  00212C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4511  002132  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4512  002138  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  4513  00213E  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  4514  002144  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  4515  00214A  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  4516                           
  4517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4518  002150  EFCC  F010         	goto	l2263
  4519  002154                     l8755:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4523  002154  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4524  00215A  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4525  002160  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4526  002166  0E04               	movlw	4
  4527  002168  26DE               	addwf	postinc2,f,c
  4528  00216A  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4529  002170  0E00               	movlw	0
  4530  002172  22DD               	addwfc	postdec2,f,c
  4531  002174  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4532  00217A  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4533  002180  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  4534  002186  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  4535  00218C  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  4536  002192  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  4537  002198                     l2263:
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4541  002198  0E02               	movlw	2
  4542  00219A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4543  0021A0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4544  0021A6  26DE               	addwf	postinc2,f,c
  4545  0021A8  0E00               	movlw	0
  4546  0021AA  22DD               	addwfc	postdec2,f,c
  4547  0021AC                     
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  4550  0021AC  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  4551  0021B0  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4552  0021B4  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  4553  0021B8  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4554  0021BC  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4555  0021C0  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4556  0021C4  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  4557  0021C8  EC67  F008         	call	_efgtoa	;wreg free
  4558  0021CC  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  4559  0021D0  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4560  0021D4  EF4F  F011         	goto	l2255
  4561  0021D8                     l8761:
  4562                           
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4564  0021D8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4565  0021DE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4566  0021E4  006F FF7B FFF6     	movff	postinc2,tblptrl
  4567  0021EA  006F FF77 FFF7     	movff	postdec2,tblptrh
  4568  0021F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4569  0021F0  6AF8               	clrf	tblptru,c
  4570  0021F2                     	endif
  4571  0021F2                     	if	0	;tblptru may be non-zero
  4572  0021F2                     	endif
  4573  0021F2  0008               	tblrd		*
  4574  0021F4  50F5               	movf	tablat,w,c
  4575  0021F6  0A25               	xorlw	37
  4576  0021F8  A4D8               	btfss	status,2,c
  4577  0021FA  EF01  F011         	goto	u9671
  4578  0021FE  EF03  F011         	goto	u9670
  4579  002202                     u9671:
  4580  002202  EF1D  F011         	goto	l8771
  4581  002206                     u9670:
  4582  002206                     
  4583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4584  002206  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4585  00220C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4586  002212  2ADE               	incf	postinc2,f,c
  4587  002214  0E00               	movlw	0
  4588  002216  22DD               	addwfc	postdec2,f,c
  4589  002218                     
  4590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4591  002218  0E00               	movlw	0
  4592  00221A  6E17               	movwf	(fputc@c+1)^0,c
  4593  00221C  0E25               	movlw	37
  4594  00221E  6E16               	movwf	fputc@c^0,c
  4595  002220  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  4596  002224  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4597  002228  EC0C  F028         	call	_fputc	;wreg free
  4598  00222C                     l8767:
  4599                           
  4600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4601  00222C  0E00               	movlw	0
  4602  00222E  0100               	movlb	0	; () banked
  4603  002230  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4604  002232  0E01               	movlw	1
  4605  002234  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  4606  002236  EF4F  F011         	goto	l2255
  4607  00223A                     l8771:
  4608                           
  4609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4610  00223A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4611  002240  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4612  002246  2ADE               	incf	postinc2,f,c
  4613  002248  0E00               	movlw	0
  4614  00224A  22DD               	addwfc	postdec2,f,c
  4615  00224C                     
  4616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4617  00224C  0E00               	movlw	0
  4618  00224E  0100               	movlb	0	; () banked
  4619  002250  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4620  002252  0E00               	movlw	0
  4621  002254  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  4622  002256  EF4F  F011         	goto	l2255
  4623  00225A                     l8777:
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4626  00225A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4627  002260  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4628  002266  006F FF7B FFF6     	movff	postinc2,tblptrl
  4629  00226C  006F FF77 FFF7     	movff	postdec2,tblptrh
  4630  002272                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4631  002272  6AF8               	clrf	tblptru,c
  4632  002274                     	endif
  4633  002274                     	if	0	;tblptru may be non-zero
  4634  002274                     	endif
  4635  002274  0008               	tblrd		*
  4636  002276  50F5               	movf	tablat,w,c
  4637  002278  6E16               	movwf	fputc@c^0,c
  4638  00227A  6A17               	clrf	(fputc@c+1)^0,c
  4639  00227C  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  4640  002280  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4641  002284  EC0C  F028         	call	_fputc	;wreg free
  4642  002288                     
  4643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4644  002288  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4645  00228E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4646  002294  2ADE               	incf	postinc2,f,c
  4647  002296  0E00               	movlw	0
  4648  002298  22DD               	addwfc	postdec2,f,c
  4649  00229A  EF16  F011         	goto	l8767
  4650  00229E                     l2255:
  4651  00229E  0012               	return		;funcret
  4652  0022A0                     __end_of_vfpfcnvrt:
  4653                           	callstack 0
  4654                           
  4655 ;; *************** function _strncmp *****************
  4656 ;; Defined at:
  4657 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  4660 ;;		 -> vfpfcnvrt@ct(3), 
  4661 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4662 ;;		 -> STR_26(3), 
  4663 ;;  n               2   23[COMRAM] unsigned int 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4666 ;;		 -> STR_26(3), 
  4667 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4668 ;;		 -> vfpfcnvrt@ct(3), 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  2   19[COMRAM] int 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4678 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;Total ram usage:       11 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; Hardware stack levels required when called: 8
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_vfpfcnvrt
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text14
  4693  004934                     __ptext14:
  4694                           	callstack 0
  4695  004934                     _strncmp:
  4696                           	callstack 17
  4697  004934  C014  F01B         	movff	strncmp@_l,strncmp@l
  4698  004938  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4699  00493C  C016  F01D         	movff	strncmp@_r,strncmp@r
  4700  004940  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4701  004944  0618               	decf	strncmp@n^0,f,c
  4702  004946  A0D8               	btfss	status,0,c
  4703  004948  0619               	decf	(strncmp@n+1)^0,f,c
  4704  00494A  2818               	incf	strncmp@n^0,w,c
  4705  00494C  E106               	bnz	u9521
  4706  00494E  2819               	incf	(strncmp@n+1)^0,w,c
  4707  004950  A4D8               	btfss	status,2,c
  4708  004952  EFAD  F024         	goto	u9521
  4709  004956  EFAF  F024         	goto	u9520
  4710  00495A                     u9521:
  4711  00495A  EFBC  F024         	goto	l8693
  4712  00495E                     u9520:
  4713  00495E  0E00               	movlw	0
  4714  004960  6E15               	movwf	(?_strncmp+1)^0,c
  4715  004962  0E00               	movlw	0
  4716  004964  6E14               	movwf	?_strncmp^0,c
  4717  004966  EF13  F025         	goto	l2343
  4718  00496A                     l8691:
  4719  00496A  4A1B               	infsnz	strncmp@l^0,f,c
  4720  00496C  2A1C               	incf	(strncmp@l+1)^0,f,c
  4721  00496E  4A1D               	infsnz	strncmp@r^0,f,c
  4722  004970  2A1E               	incf	(strncmp@r+1)^0,f,c
  4723  004972  0618               	decf	strncmp@n^0,f,c
  4724  004974  A0D8               	btfss	status,0,c
  4725  004976  0619               	decf	(strncmp@n+1)^0,f,c
  4726  004978                     l8693:
  4727  004978  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4728  00497E  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4729  004984  50DF               	movf	indf2,w,c
  4730  004986  B4D8               	btfsc	status,2,c
  4731  004988  EFC8  F024         	goto	u9531
  4732  00498C  EFCA  F024         	goto	u9530
  4733  004990                     u9531:
  4734  004990  EFFD  F024         	goto	l8701
  4735  004994                     u9530:
  4736  004994  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4737  00499A  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4738  0049A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4739  0049A0  6AF8               	clrf	tblptru,c
  4740  0049A2                     	endif
  4741  0049A2                     	if	0	;tblptru may be non-zero
  4742  0049A2                     	endif
  4743  0049A2  0008               	tblrd		*
  4744  0049A4  50F5               	movf	tablat,w,c
  4745  0049A6  0900               	iorlw	0
  4746  0049A8  B4D8               	btfsc	status,2,c
  4747  0049AA  EFD9  F024         	goto	u9541
  4748  0049AE  EFDB  F024         	goto	u9540
  4749  0049B2                     u9541:
  4750  0049B2  EFFD  F024         	goto	l8701
  4751  0049B6                     u9540:
  4752  0049B6  5018               	movf	strncmp@n^0,w,c
  4753  0049B8  1019               	iorwf	(strncmp@n+1)^0,w,c
  4754  0049BA  B4D8               	btfsc	status,2,c
  4755  0049BC  EFE2  F024         	goto	u9551
  4756  0049C0  EFE4  F024         	goto	u9550
  4757  0049C4                     u9551:
  4758  0049C4  EFFD  F024         	goto	l8701
  4759  0049C8                     u9550:
  4760  0049C8  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4761  0049CE  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4762  0049D4  50DF               	movf	indf2,w,c
  4763  0049D6  6E1A               	movwf	??_strncmp^0,c
  4764  0049D8  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4765  0049DE  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4766  0049E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4767  0049E4  6AF8               	clrf	tblptru,c
  4768  0049E6                     	endif
  4769  0049E6                     	if	0	;tblptru may be non-zero
  4770  0049E6                     	endif
  4771  0049E6  0008               	tblrd		*
  4772  0049E8  50F5               	movf	tablat,w,c
  4773  0049EA  181A               	xorwf	??_strncmp^0,w,c
  4774  0049EC  B4D8               	btfsc	status,2,c
  4775  0049EE  EFFB  F024         	goto	u9561
  4776  0049F2  EFFD  F024         	goto	u9560
  4777  0049F6                     u9561:
  4778  0049F6  EFB5  F024         	goto	l8691
  4779  0049FA                     u9560:
  4780  0049FA                     l8701:
  4781  0049FA  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4782  004A00  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4783  004A06  50DF               	movf	indf2,w,c
  4784  004A08  6E1A               	movwf	??_strncmp^0,c
  4785  004A0A  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4786  004A10  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4787  004A16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4788  004A16  6AF8               	clrf	tblptru,c
  4789  004A18                     	endif
  4790  004A18                     	if	0	;tblptru may be non-zero
  4791  004A18                     	endif
  4792  004A18  0008               	tblrd		*
  4793  004A1A  50F5               	movf	tablat,w,c
  4794  004A1C  5C1A               	subwf	??_strncmp^0,w,c
  4795  004A1E  6E14               	movwf	?_strncmp^0,c
  4796  004A20  6A15               	clrf	(?_strncmp+1)^0,c
  4797  004A22  A0D8               	btfss	status,0,c
  4798  004A24  0615               	decf	(?_strncmp+1)^0,f,c
  4799  004A26                     l2343:
  4800  004A26  0012               	return		;funcret
  4801  004A28                     __end_of_strncmp:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function _efgtoa *****************
  4805 ;; Defined at:
  4806 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4809 ;;		 -> NULL(0), 
  4810 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4811 ;;  c               1   41[BANK0 ] unsigned char 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  u               4   99[BANK0 ] unsigned char 
  4814 ;;  g               4   91[BANK0 ] unsigned char 
  4815 ;;  l               4   85[BANK0 ] unsigned char 
  4816 ;;  h               4   81[BANK0 ] unsigned char 
  4817 ;;  ou              4   67[BANK0 ] unsigned char 
  4818 ;;  n               2   97[BANK0 ] int 
  4819 ;;  e               2   95[BANK0 ] int 
  4820 ;;  i               2   89[BANK0 ] int 
  4821 ;;  w               2   77[BANK0 ] int 
  4822 ;;  p               2   75[BANK0 ] int 
  4823 ;;  sign            2   73[BANK0 ] int 
  4824 ;;  d               2   71[BANK0 ] int 
  4825 ;;  m               2   65[BANK0 ] int 
  4826 ;;  ne              2   63[BANK0 ] int 
  4827 ;;  pp              2   61[BANK0 ] int 
  4828 ;;  t               2   59[BANK0 ] int 
  4829 ;;  mode            1   80[BANK0 ] unsigned char 
  4830 ;;  nmode           1   79[BANK0 ] unsigned char 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  2   35[BANK0 ] int 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4840 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;Total ram usage:       68 bytes
  4845 ;; Hardware stack levels used: 1
  4846 ;; Hardware stack levels required when called: 13
  4847 ;; This function calls:
  4848 ;;		___awdiv
  4849 ;;		___awmod
  4850 ;;		___fladd
  4851 ;;		___fldiv
  4852 ;;		___fleq
  4853 ;;		___flge
  4854 ;;		___flmul
  4855 ;;		___flneg
  4856 ;;		___flsub
  4857 ;;		___fltol
  4858 ;;		___fpclassifyf
  4859 ;;		_floorf
  4860 ;;		_isupper
  4861 ;;		_pad
  4862 ;;		_strcpy
  4863 ;;		_tolower
  4864 ;; This function is called by:
  4865 ;;		_vfpfcnvrt
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text15
  4870  0010CE                     __ptext15:
  4871                           	callstack 0
  4872  0010CE                     _efgtoa:
  4873                           	callstack 12
  4874  0010CE                     
  4875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4876  0010CE  0E00               	movlw	0
  4877  0010D0  0100               	movlb	0	; () banked
  4878  0010D2  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4879  0010D4  0E00               	movlw	0
  4880  0010D6  6FA9               	movwf	efgtoa@sign& (0+255),b
  4881  0010D8                     
  4882                           ; BSR set to: 0
  4883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4884  0010D8  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4885  0010DC  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4886  0010E0  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4887  0010E4  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4888  0010E8                     
  4889                           ; BSR set to: 0
  4890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4891  0010E8  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4892  0010EA  EF7B  F008         	goto	u8980
  4893  0010EE  EF79  F008         	goto	u8981
  4894  0010F2                     u8981:
  4895  0010F2  EF91  F008         	goto	l8387
  4896  0010F6                     u8980:
  4897  0010F6                     
  4898                           ; BSR set to: 0
  4899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4900  0010F6  0E00               	movlw	0
  4901  0010F8  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4902  0010FA  0E01               	movlw	1
  4903  0010FC  6FA9               	movwf	efgtoa@sign& (0+255),b
  4904  0010FE                     
  4905                           ; BSR set to: 0
  4906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4907  0010FE  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4908  001102  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4909  001106  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4910  00110A  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4911  00110E  EC1D  F02C         	call	___flneg	;wreg free
  4912  001112  C014  F0BB         	movff	?___flneg,efgtoa@g
  4913  001116  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4914  00111A  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4915  00111E  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4916  001122                     l8387:
  4917                           
  4918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4919  001122  0E00               	movlw	0
  4920  001124  0100               	movlb	0	; () banked
  4921  001126  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4922  001128  0E00               	movlw	0
  4923  00112A  6FC1               	movwf	efgtoa@n& (0+255),b
  4924  00112C                     
  4925                           ; BSR set to: 0
  4926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4927  00112C  C0E5  F0AD         	movff	_width,efgtoa@w
  4928  001130  C0E6  F0AE         	movff	_width+1,efgtoa@w+1
  4929  001134                     
  4930                           ; BSR set to: 0
  4931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4932  001134  51A9               	movf	efgtoa@sign& (0+255),w,b
  4933  001136  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4934  001138  A4D8               	btfss	status,2,c
  4935  00113A  EFA1  F008         	goto	u8991
  4936  00113E  EFA3  F008         	goto	u8990
  4937  001142                     u8991:
  4938  001142  EFAA  F008         	goto	l8395
  4939  001146                     u8990:
  4940  001146                     
  4941                           ; BSR set to: 0
  4942  001146  A43C               	btfss	_flags^0,2,c
  4943  001148  EFA8  F008         	goto	u9001
  4944  00114C  EFAA  F008         	goto	u9000
  4945  001150                     u9001:
  4946  001150  EFC4  F008         	goto	l8407
  4947  001154                     u9000:
  4948  001154                     l8395:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4952  001154  51A9               	movf	efgtoa@sign& (0+255),w,b
  4953  001156  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4954  001158  A4D8               	btfss	status,2,c
  4955  00115A  EFB1  F008         	goto	u9011
  4956  00115E  EFB3  F008         	goto	u9010
  4957  001162                     u9011:
  4958  001162  EFB9  F008         	goto	l8399
  4959  001166                     u9010:
  4960  001166                     
  4961                           ; BSR set to: 0
  4962  001166  0E00               	movlw	0
  4963  001168  6F90               	movwf	(_efgtoa$3568+1)& (0+255),b
  4964  00116A  0E2B               	movlw	43
  4965  00116C  6F8F               	movwf	_efgtoa$3568& (0+255),b
  4966  00116E  EFBD  F008         	goto	l8401
  4967  001172                     l8399:
  4968                           
  4969                           ; BSR set to: 0
  4970  001172  0E00               	movlw	0
  4971  001174  6F90               	movwf	(_efgtoa$3568+1)& (0+255),b
  4972  001176  0E2D               	movlw	45
  4973  001178  6F8F               	movwf	_efgtoa$3568& (0+255),b
  4974  00117A                     l8401:
  4975                           
  4976                           ; BSR set to: 0
  4977  00117A  C08F  F13A         	movff	_efgtoa$3568,_dbuf
  4978  00117E                     
  4979                           ; BSR set to: 0
  4980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4981  00117E  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4982  001180  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4983  001182                     
  4984                           ; BSR set to: 0
  4985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4986  001182  07AD               	decf	efgtoa@w& (0+255),f,b
  4987  001184  A0D8               	btfss	status,0,c
  4988  001186  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4989  001188                     l8407:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4993  001188  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4994  00118C  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4995  001190  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4996  001194  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4997  001198  EC1B  F024         	call	___fpclassifyf	;wreg free
  4998  00119C  0414               	decf	?___fpclassifyf^0,w,c
  4999  00119E  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  5000  0011A0  A4D8               	btfss	status,2,c
  5001  0011A2  EFD5  F008         	goto	u9021
  5002  0011A6  EFD7  F008         	goto	u9020
  5003  0011AA                     u9021:
  5004  0011AA  EF2E  F009         	goto	l8425
  5005  0011AE                     u9020:
  5006  0011AE  0EBF               	movlw	191
  5007  0011B0  0100               	movlb	0	; () banked
  5008  0011B2  6F8A               	movwf	??_efgtoa& (0+255),b
  5009  0011B4  0EFF               	movlw	255
  5010  0011B6  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5011  0011B8  5189               	movf	efgtoa@c& (0+255),w,b
  5012  0011BA  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5013  0011BC  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5014  0011BE  518A               	movf	??_efgtoa& (0+255),w,b
  5015  0011C0  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5016  0011C2  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5017  0011C4  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5018  0011C6  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5019  0011C8  E10A               	bnz	u9030
  5020  0011CA  0E1A               	movlw	26
  5021  0011CC  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5022  0011CE  A0D8               	btfss	status,0,c
  5023  0011D0  EFEC  F008         	goto	u9031
  5024  0011D4  EFEF  F008         	goto	u9030
  5025  0011D8                     u9031:
  5026  0011D8  0E01               	movlw	1
  5027  0011DA  EFF0  F008         	goto	u9040
  5028  0011DE                     u9030:
  5029  0011DE  0E00               	movlw	0
  5030  0011E0                     u9040:
  5031  0011E0  6F91               	movwf	_efgtoa$3569& (0+255),b
  5032  0011E2  6B92               	clrf	(_efgtoa$3569+1)& (0+255),b
  5033  0011E4                     
  5034                           ; BSR set to: 0
  5035  0011E4  5191               	movf	_efgtoa$3569& (0+255),w,b
  5036  0011E6  1192               	iorwf	(_efgtoa$3569+1)& (0+255),w,b
  5037  0011E8  B4D8               	btfsc	status,2,c
  5038  0011EA  EFF9  F008         	goto	u9051
  5039  0011EE  EFFB  F008         	goto	u9050
  5040  0011F2                     u9051:
  5041  0011F2  EF09  F009         	goto	l8417
  5042  0011F6                     u9050:
  5043  0011F6                     
  5044                           ; BSR set to: 0
  5045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  5046  0011F6  0E3A               	movlw	low _dbuf
  5047  0011F8  25C1               	addwf	efgtoa@n& (0+255),w,b
  5048  0011FA  6E14               	movwf	strcpy@dest^0,c
  5049  0011FC  0E01               	movlw	high _dbuf
  5050  0011FE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5051  001200  6E15               	movwf	(strcpy@dest+1)^0,c
  5052  001202  0EB9               	movlw	low STR_16
  5053  001204  6E16               	movwf	strcpy@src^0,c
  5054  001206  0E10               	movlw	high STR_16
  5055  001208  6E17               	movwf	(strcpy@src+1)^0,c
  5056  00120A  ECA0  F029         	call	_strcpy	;wreg free
  5057                           
  5058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  5059  00120E  EF15  F009         	goto	l8419
  5060  001212                     l8417:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  5064  001212  0E3A               	movlw	low _dbuf
  5065  001214  25C1               	addwf	efgtoa@n& (0+255),w,b
  5066  001216  6E14               	movwf	strcpy@dest^0,c
  5067  001218  0E01               	movlw	high _dbuf
  5068  00121A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5069  00121C  6E15               	movwf	(strcpy@dest+1)^0,c
  5070  00121E  0EC1               	movlw	low STR_17
  5071  001220  6E16               	movwf	strcpy@src^0,c
  5072  001222  0E10               	movlw	high STR_17
  5073  001224  6E17               	movwf	(strcpy@src+1)^0,c
  5074  001226  ECA0  F029         	call	_strcpy	;wreg free
  5075  00122A                     l8419:
  5076                           
  5077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5078  00122A  0100               	movlb	0	; () banked
  5079  00122C  0EFD               	movlw	253
  5080  00122E  27AD               	addwf	efgtoa@w& (0+255),f,b
  5081  001230  0EFF               	movlw	255
  5082  001232  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5083  001234                     
  5084                           ; BSR set to: 0
  5085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5086  001234  C083  F026         	movff	efgtoa@fp,pad@fp
  5087  001238  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5088  00123C  0E3A               	movlw	low _dbuf
  5089  00123E  6E28               	movwf	pad@buf^0,c
  5090  001240  0E01               	movlw	high _dbuf
  5091  001242  6E29               	movwf	(pad@buf+1)^0,c
  5092  001244  C0AD  F02A         	movff	efgtoa@w,pad@p
  5093  001248  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5094  00124C  EC4C  F026         	call	_pad	;wreg free
  5095  001250  C026  F083         	movff	?_pad,?_efgtoa
  5096  001254  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5097  001258  EFBD  F00E         	goto	l2171
  5098  00125C                     l8425:
  5099                           
  5100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5101  00125C  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  5102  001260  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5103  001264  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5104  001268  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5105  00126C  EC1B  F024         	call	___fpclassifyf	;wreg free
  5106  001270  5014               	movf	?___fpclassifyf^0,w,c
  5107  001272  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  5108  001274  A4D8               	btfss	status,2,c
  5109  001276  EF3F  F009         	goto	u9061
  5110  00127A  EF41  F009         	goto	u9060
  5111  00127E                     u9061:
  5112  00127E  EF98  F009         	goto	l8443
  5113  001282                     u9060:
  5114  001282  0EBF               	movlw	191
  5115  001284  0100               	movlb	0	; () banked
  5116  001286  6F8A               	movwf	??_efgtoa& (0+255),b
  5117  001288  0EFF               	movlw	255
  5118  00128A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5119  00128C  5189               	movf	efgtoa@c& (0+255),w,b
  5120  00128E  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5121  001290  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5122  001292  518A               	movf	??_efgtoa& (0+255),w,b
  5123  001294  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5124  001296  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5125  001298  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5126  00129A  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5127  00129C  E10A               	bnz	u9070
  5128  00129E  0E1A               	movlw	26
  5129  0012A0  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5130  0012A2  A0D8               	btfss	status,0,c
  5131  0012A4  EF56  F009         	goto	u9071
  5132  0012A8  EF59  F009         	goto	u9070
  5133  0012AC                     u9071:
  5134  0012AC  0E01               	movlw	1
  5135  0012AE  EF5A  F009         	goto	u9080
  5136  0012B2                     u9070:
  5137  0012B2  0E00               	movlw	0
  5138  0012B4                     u9080:
  5139  0012B4  6F93               	movwf	_efgtoa$3573& (0+255),b
  5140  0012B6  6B94               	clrf	(_efgtoa$3573+1)& (0+255),b
  5141  0012B8                     
  5142                           ; BSR set to: 0
  5143  0012B8  5193               	movf	_efgtoa$3573& (0+255),w,b
  5144  0012BA  1194               	iorwf	(_efgtoa$3573+1)& (0+255),w,b
  5145  0012BC  B4D8               	btfsc	status,2,c
  5146  0012BE  EF63  F009         	goto	u9091
  5147  0012C2  EF65  F009         	goto	u9090
  5148  0012C6                     u9091:
  5149  0012C6  EF73  F009         	goto	l8435
  5150  0012CA                     u9090:
  5151  0012CA                     
  5152                           ; BSR set to: 0
  5153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5154  0012CA  0E3A               	movlw	low _dbuf
  5155  0012CC  25C1               	addwf	efgtoa@n& (0+255),w,b
  5156  0012CE  6E14               	movwf	strcpy@dest^0,c
  5157  0012D0  0E01               	movlw	high _dbuf
  5158  0012D2  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5159  0012D4  6E15               	movwf	(strcpy@dest+1)^0,c
  5160  0012D6  0EBD               	movlw	low STR_20
  5161  0012D8  6E16               	movwf	strcpy@src^0,c
  5162  0012DA  0E10               	movlw	high STR_20
  5163  0012DC  6E17               	movwf	(strcpy@src+1)^0,c
  5164  0012DE  ECA0  F029         	call	_strcpy	;wreg free
  5165                           
  5166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5167  0012E2  EF7F  F009         	goto	l8437
  5168  0012E6                     l8435:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5172  0012E6  0E3A               	movlw	low _dbuf
  5173  0012E8  25C1               	addwf	efgtoa@n& (0+255),w,b
  5174  0012EA  6E14               	movwf	strcpy@dest^0,c
  5175  0012EC  0E01               	movlw	high _dbuf
  5176  0012EE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5177  0012F0  6E15               	movwf	(strcpy@dest+1)^0,c
  5178  0012F2  0EC5               	movlw	low STR_21
  5179  0012F4  6E16               	movwf	strcpy@src^0,c
  5180  0012F6  0E10               	movlw	high STR_21
  5181  0012F8  6E17               	movwf	(strcpy@src+1)^0,c
  5182  0012FA  ECA0  F029         	call	_strcpy	;wreg free
  5183  0012FE                     l8437:
  5184                           
  5185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5186  0012FE  0100               	movlb	0	; () banked
  5187  001300  0EFD               	movlw	253
  5188  001302  27AD               	addwf	efgtoa@w& (0+255),f,b
  5189  001304  0EFF               	movlw	255
  5190  001306  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5191  001308                     
  5192                           ; BSR set to: 0
  5193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5194  001308  C083  F026         	movff	efgtoa@fp,pad@fp
  5195  00130C  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5196  001310  0E3A               	movlw	low _dbuf
  5197  001312  6E28               	movwf	pad@buf^0,c
  5198  001314  0E01               	movlw	high _dbuf
  5199  001316  6E29               	movwf	(pad@buf+1)^0,c
  5200  001318  C0AD  F02A         	movff	efgtoa@w,pad@p
  5201  00131C  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5202  001320  EC4C  F026         	call	_pad	;wreg free
  5203  001324  C026  F083         	movff	?_pad,?_efgtoa
  5204  001328  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5205  00132C  EFBD  F00E         	goto	l2171
  5206  001330                     l8443:
  5207                           
  5208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5209  001330  0E00               	movlw	0
  5210  001332  0100               	movlb	0	; () banked
  5211  001334  6FC3               	movwf	efgtoa@u& (0+255),b
  5212  001336  0E00               	movlw	0
  5213  001338  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5214  00133A  0E80               	movlw	128
  5215  00133C  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5216  00133E  0E3F               	movlw	63
  5217  001340  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5220  001342  0E00               	movlw	0
  5221  001344  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5222  001346  0E00               	movlw	0
  5223  001348  6FBF               	movwf	efgtoa@e& (0+255),b
  5224  00134A                     
  5225                           ; BSR set to: 0
  5226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5227  00134A  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  5228  00134E  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  5229  001352  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  5230  001356  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  5231  00135A  0E00               	movlw	0
  5232  00135C  6E18               	movwf	___fleq@ff2^0,c
  5233  00135E  0E00               	movlw	0
  5234  001360  6E19               	movwf	(___fleq@ff2+1)^0,c
  5235  001362  0E00               	movlw	0
  5236  001364  6E1A               	movwf	(___fleq@ff2+2)^0,c
  5237  001366  0E00               	movlw	0
  5238  001368  6E1B               	movwf	(___fleq@ff2+3)^0,c
  5239  00136A  EC65  F027         	call	___fleq	;wreg free
  5240  00136E  B0D8               	btfsc	status,0,c
  5241  001370  EFBC  F009         	goto	u9101
  5242  001374  EFBE  F009         	goto	u9100
  5243  001378                     u9101:
  5244  001378  EF43  F00A         	goto	l8461
  5245  00137C                     u9100:
  5246  00137C  EFDD  F009         	goto	l8453
  5247  001380                     l8449:
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5251  001380  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5252  001384  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5253  001388  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5254  00138C  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5255  001390  0E00               	movlw	0
  5256  001392  6E2E               	movwf	___flmul@a^0,c
  5257  001394  0E00               	movlw	0
  5258  001396  6E2F               	movwf	(___flmul@a+1)^0,c
  5259  001398  0E20               	movlw	32
  5260  00139A  6E30               	movwf	(___flmul@a+2)^0,c
  5261  00139C  0E41               	movlw	65
  5262  00139E  6E31               	movwf	(___flmul@a+3)^0,c
  5263  0013A0  ECB1  F013         	call	___flmul	;wreg free
  5264  0013A4  C02A  F0C3         	movff	?___flmul,efgtoa@u
  5265  0013A8  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  5266  0013AC  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  5267  0013B0  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  5268  0013B4                     
  5269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5270  0013B4  0100               	movlb	0	; () banked
  5271  0013B6  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5272  0013B8  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5273  0013BA                     l8453:
  5274                           
  5275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5276  0013BA  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5277  0013BE  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5278  0013C2  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5279  0013C6  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5280  0013CA  0E00               	movlw	0
  5281  0013CC  6E2E               	movwf	___flmul@a^0,c
  5282  0013CE  0E00               	movlw	0
  5283  0013D0  6E2F               	movwf	(___flmul@a+1)^0,c
  5284  0013D2  0E20               	movlw	32
  5285  0013D4  6E30               	movwf	(___flmul@a+2)^0,c
  5286  0013D6  0E41               	movlw	65
  5287  0013D8  6E31               	movwf	(___flmul@a+3)^0,c
  5288  0013DA  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5289  0013DE  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5290  0013E2  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5291  0013E6  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5292  0013EA  ECB1  F013         	call	___flmul	;wreg free
  5293  0013EE  C02A  F071         	movff	?___flmul,___flge@ff2
  5294  0013F2  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5295  0013F6  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5296  0013FA  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5297  0013FE  EC98  F023         	call	___flge	;wreg free
  5298  001402  0100               	movlb	0	; () banked
  5299  001404  B0D8               	btfsc	status,0,c
  5300  001406  EF07  F00A         	goto	u9111
  5301  00140A  EF09  F00A         	goto	u9110
  5302  00140E                     u9111:
  5303  00140E  EFC0  F009         	goto	l8449
  5304  001412                     u9110:
  5305  001412  EF29  F00A         	goto	l8459
  5306  001416                     l8455:
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5310  001416  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5311  00141A  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5312  00141E  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5313  001422  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5314  001426  0E00               	movlw	0
  5315  001428  6E2E               	movwf	___fldiv@a^0,c
  5316  00142A  0E00               	movlw	0
  5317  00142C  6E2F               	movwf	(___fldiv@a+1)^0,c
  5318  00142E  0E20               	movlw	32
  5319  001430  6E30               	movwf	(___fldiv@a+2)^0,c
  5320  001432  0E41               	movlw	65
  5321  001434  6E31               	movwf	(___fldiv@a+3)^0,c
  5322  001436  ECD9  F015         	call	___fldiv	;wreg free
  5323  00143A  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5324  00143E  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5325  001442  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5326  001446  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5327  00144A                     
  5328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5329  00144A  0100               	movlb	0	; () banked
  5330  00144C  07BF               	decf	efgtoa@e& (0+255),f,b
  5331  00144E  A0D8               	btfss	status,0,c
  5332  001450  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  5333  001452                     l8459:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5337  001452  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5338  001456  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5339  00145A  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5340  00145E  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5341  001462  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  5342  001466  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  5343  00146A  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  5344  00146E  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  5345  001472  EC98  F023         	call	___flge	;wreg free
  5346  001476  0100               	movlb	0	; () banked
  5347  001478  A0D8               	btfss	status,0,c
  5348  00147A  EF41  F00A         	goto	u9121
  5349  00147E  EF43  F00A         	goto	u9120
  5350  001482                     u9121:
  5351  001482  EF0B  F00A         	goto	l8455
  5352  001486                     u9120:
  5353  001486                     l8461:
  5354                           
  5355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5356  001486  C089  F01A         	movff	efgtoa@c,tolower@c
  5357  00148A  6A1B               	clrf	(tolower@c+1)^0,c
  5358  00148C  ECD5  F029         	call	_tolower	;wreg free
  5359  001490  501A               	movf	?_tolower^0,w,c
  5360  001492  0100               	movlb	0	; () banked
  5361  001494  6FB0               	movwf	efgtoa@mode& (0+255),b
  5362  001496                     
  5363                           ; BSR set to: 0
  5364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5365  001496  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  5366  00149A                     
  5367                           ; BSR set to: 0
  5368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5369  00149A  0E67               	movlw	103
  5370  00149C  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5371  00149E  A4D8               	btfss	status,2,c
  5372  0014A0  EF54  F00A         	goto	u9131
  5373  0014A4  EF56  F00A         	goto	u9130
  5374  0014A8                     u9131:
  5375  0014A8  EF7C  F00A         	goto	l8475
  5376  0014AC                     u9130:
  5377  0014AC                     
  5378                           ; BSR set to: 0
  5379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5380  0014AC  503A               	movf	_prec^0,w,c
  5381  0014AE  103B               	iorwf	(_prec+1)^0,w,c
  5382  0014B0  A4D8               	btfss	status,2,c
  5383  0014B2  EF5D  F00A         	goto	u9141
  5384  0014B6  EF5F  F00A         	goto	u9140
  5385  0014BA                     u9141:
  5386  0014BA  EF63  F00A         	goto	l8471
  5387  0014BE                     u9140:
  5388  0014BE                     
  5389                           ; BSR set to: 0
  5390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5391  0014BE  0E00               	movlw	0
  5392  0014C0  6E3B               	movwf	(_prec+1)^0,c
  5393  0014C2  0E01               	movlw	1
  5394  0014C4  6E3A               	movwf	_prec^0,c
  5395  0014C6                     l8471:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5399  0014C6  BE3B               	btfsc	(_prec+1)^0,7,c
  5400  0014C8  EF70  F00A         	goto	u9150
  5401  0014CC  503B               	movf	(_prec+1)^0,w,c
  5402  0014CE  E106               	bnz	u9151
  5403  0014D0  043A               	decf	_prec^0,w,c
  5404  0014D2  B0D8               	btfsc	status,0,c
  5405  0014D4  EF6E  F00A         	goto	u9151
  5406  0014D8  EF70  F00A         	goto	u9150
  5407  0014DC                     u9151:
  5408  0014DC  EF76  F00A         	goto	l2189
  5409  0014E0                     u9150:
  5410  0014E0                     l8473:
  5411                           
  5412                           ; BSR set to: 0
  5413  0014E0  0E00               	movlw	0
  5414  0014E2  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5415  0014E4  0E06               	movlw	6
  5416  0014E6  6FAB               	movwf	efgtoa@p& (0+255),b
  5417  0014E8  EF85  F00A         	goto	l8481
  5418  0014EC                     l2189:
  5419                           
  5420                           ; BSR set to: 0
  5421  0014EC  C03A  F0AB         	movff	_prec,efgtoa@p
  5422  0014F0  C03B  F0AC         	movff	_prec+1,efgtoa@p+1
  5423  0014F4  EF85  F00A         	goto	l8481
  5424  0014F8                     l8475:
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5428  0014F8  BE3B               	btfsc	(_prec+1)^0,7,c
  5429  0014FA  EF81  F00A         	goto	u9161
  5430  0014FE  EF83  F00A         	goto	u9160
  5431  001502                     u9161:
  5432  001502  EF70  F00A         	goto	l8473
  5433  001506                     u9160:
  5434  001506  EF76  F00A         	goto	l2189
  5435  00150A                     l8481:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5439  00150A  0E67               	movlw	103
  5440  00150C  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5441  00150E  A4D8               	btfss	status,2,c
  5442  001510  EF8C  F00A         	goto	u9171
  5443  001514  EF8E  F00A         	goto	u9170
  5444  001518                     u9171:
  5445  001518  EFBD  F00A         	goto	l8491
  5446  00151C                     u9170:
  5447  00151C                     
  5448                           ; BSR set to: 0
  5449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5450  00151C  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  5451  00151E  EF9C  F00A         	goto	u9180
  5452  001522  0EFC               	movlw	252
  5453  001524  5DBF               	subwf	efgtoa@e& (0+255),w,b
  5454  001526  0EFF               	movlw	255
  5455  001528  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5456  00152A  A0D8               	btfss	status,0,c
  5457  00152C  EF9A  F00A         	goto	u9181
  5458  001530  EF9C  F00A         	goto	u9180
  5459  001534                     u9181:
  5460  001534  EFBB  F00A         	goto	l8489
  5461  001538                     u9180:
  5462  001538                     
  5463                           ; BSR set to: 0
  5464  001538  0EFF               	movlw	255
  5465  00153A  6F8A               	movwf	??_efgtoa& (0+255),b
  5466  00153C  0EFF               	movlw	255
  5467  00153E  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5468  001540  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  5469  001544  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  5470  001548  518A               	movf	??_efgtoa& (0+255),w,b
  5471  00154A  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5472  00154C  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5473  00154E  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5474  001550  51BF               	movf	efgtoa@e& (0+255),w,b
  5475  001552  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5476  001554  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5477  001556  0A80               	xorlw	128
  5478  001558  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  5479  00155A  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5480  00155C  0A80               	xorlw	128
  5481  00155E  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5482  001560  A0D8               	btfss	status,0,c
  5483  001562  EFB5  F00A         	goto	u9191
  5484  001566  EFB7  F00A         	goto	u9190
  5485  00156A                     u9191:
  5486  00156A  EFBB  F00A         	goto	l8489
  5487  00156E                     u9190:
  5488  00156E                     
  5489                           ; BSR set to: 0
  5490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5491  00156E  0E66               	movlw	102
  5492  001570  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5493                           
  5494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5495  001572  EFBD  F00A         	goto	l8491
  5496  001576                     l8489:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5500  001576  0E65               	movlw	101
  5501  001578  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5502  00157A                     l8491:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5506  00157A  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  5507  00157E  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  5508  001582                     
  5509                           ; BSR set to: 0
  5510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5511  001582  0E67               	movlw	103
  5512  001584  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5513  001586  A4D8               	btfss	status,2,c
  5514  001588  EFC8  F00A         	goto	u9201
  5515  00158C  EFCA  F00A         	goto	u9200
  5516  001590                     u9201:
  5517  001590  EFDA  F00A         	goto	l8499
  5518  001594                     u9200:
  5519  001594                     
  5520                           ; BSR set to: 0
  5521  001594  0E66               	movlw	102
  5522  001596  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5523  001598  A4D8               	btfss	status,2,c
  5524  00159A  EFD1  F00A         	goto	u9211
  5525  00159E  EFD3  F00A         	goto	u9210
  5526  0015A2                     u9211:
  5527  0015A2  EFDC  F00A         	goto	l8501
  5528  0015A6                     u9210:
  5529  0015A6                     
  5530                           ; BSR set to: 0
  5531  0015A6  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5532  0015A8  EFDA  F00A         	goto	u9220
  5533  0015AC  EFD8  F00A         	goto	u9221
  5534  0015B0                     u9221:
  5535  0015B0  EFDC  F00A         	goto	l8501
  5536  0015B4                     u9220:
  5537  0015B4                     l8499:
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5541  0015B4  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5542  0015B6  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5543  0015B8                     l8501:
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5547  0015B8  0E66               	movlw	102
  5548  0015BA  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5549  0015BC  A4D8               	btfss	status,2,c
  5550  0015BE  EFE3  F00A         	goto	u9231
  5551  0015C2  EFE5  F00A         	goto	u9230
  5552  0015C6                     u9231:
  5553  0015C6  EF05  F00B         	goto	l8511
  5554  0015CA                     u9230:
  5555  0015CA                     
  5556                           ; BSR set to: 0
  5557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5558  0015CA  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5559  0015CC  EFEC  F00A         	goto	u9240
  5560  0015D0  EFEA  F00A         	goto	u9241
  5561  0015D4                     u9241:
  5562  0015D4  EFF8  F00A         	goto	l8507
  5563  0015D8                     u9240:
  5564  0015D8                     
  5565                           ; BSR set to: 0
  5566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5567  0015D8  0E00               	movlw	0
  5568  0015DA  6FC3               	movwf	efgtoa@u& (0+255),b
  5569  0015DC  0E00               	movlw	0
  5570  0015DE  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5571  0015E0  0E80               	movlw	128
  5572  0015E2  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5573  0015E4  0E3F               	movlw	63
  5574  0015E6  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5575                           
  5576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5577  0015E8  0E00               	movlw	0
  5578  0015EA  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5579  0015EC  0E00               	movlw	0
  5580  0015EE  6FBF               	movwf	efgtoa@e& (0+255),b
  5581  0015F0                     l8507:
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5585  0015F0  0E67               	movlw	103
  5586  0015F2  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5587  0015F4  B4D8               	btfsc	status,2,c
  5588  0015F6  EFFF  F00A         	goto	u9251
  5589  0015FA  EF01  F00B         	goto	u9250
  5590  0015FE                     u9251:
  5591  0015FE  EF05  F00B         	goto	l8511
  5592  001602                     u9250:
  5593  001602                     
  5594                           ; BSR set to: 0
  5595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5596  001602  51BF               	movf	efgtoa@e& (0+255),w,b
  5597  001604  27A1               	addwf	efgtoa@m& (0+255),f,b
  5598  001606  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5599  001608  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5600  00160A                     l8511:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5604  00160A  0E00               	movlw	0
  5605  00160C  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5606  00160E  0E00               	movlw	0
  5607  001610  6FB9               	movwf	efgtoa@i& (0+255),b
  5608  001612                     
  5609                           ; BSR set to: 0
  5610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5611  001612  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  5612  001616  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  5613  00161A  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  5614  00161E  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  5615  001622                     
  5616                           ; BSR set to: 0
  5617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5618  001622  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  5619  001626  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  5620  00162A  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  5621  00162E  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  5622                           
  5623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5624  001632  EF96  F00B         	goto	l8525
  5625  001636                     l8517:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5629  001636  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5630  00163A  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5631  00163E  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5632  001642  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5633  001646  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5634  00164A  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5635  00164E  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5636  001652  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5637  001656  ECD9  F015         	call	___fldiv	;wreg free
  5638  00165A  C02A  F036         	movff	?___fldiv,floorf@x
  5639  00165E  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5640  001662  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5641  001666  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5642  00166A  ECA0  F01A         	call	_floorf	;wreg free
  5643  00166E  C036  F0B5         	movff	?_floorf,efgtoa@l
  5644  001672  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5645  001676  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5646  00167A  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5647                           
  5648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5649  00167E  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5650  001682  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5651  001686  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5652  00168A  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5653  00168E  EC14  F023         	call	___fltol	;wreg free
  5654  001692  C079  F0A7         	movff	?___fltol,efgtoa@d
  5655  001696  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5656  00169A                     
  5657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5658  00169A  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5659  00169E  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5660  0016A2  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5661  0016A6  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5662  0016AA  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5663  0016AE  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5664  0016B2  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5665  0016B6  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5666  0016BA  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5667  0016BE  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5668  0016C2  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5669  0016C6  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5670  0016CA  ECB1  F013         	call	___flmul	;wreg free
  5671  0016CE  C02A  F07D         	movff	?___flmul,___flsub@a
  5672  0016D2  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5673  0016D6  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5674  0016DA  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5675  0016DE  EC21  F02B         	call	___flsub	;wreg free
  5676  0016E2  C079  F0B1         	movff	?___flsub,efgtoa@h
  5677  0016E6  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5678  0016EA  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5679  0016EE  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5680  0016F2                     
  5681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5682  0016F2  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5683  0016F6  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5684  0016FA  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5685  0016FE  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5686  001702  0E00               	movlw	0
  5687  001704  6E2E               	movwf	___fldiv@a^0,c
  5688  001706  0E00               	movlw	0
  5689  001708  6E2F               	movwf	(___fldiv@a+1)^0,c
  5690  00170A  0E20               	movlw	32
  5691  00170C  6E30               	movwf	(___fldiv@a+2)^0,c
  5692  00170E  0E41               	movlw	65
  5693  001710  6E31               	movwf	(___fldiv@a+3)^0,c
  5694  001712  ECD9  F015         	call	___fldiv	;wreg free
  5695  001716  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5696  00171A  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5697  00171E  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5698  001722  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5699  001726                     
  5700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5701  001726  0100               	movlb	0	; () banked
  5702  001728  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5703  00172A  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5704  00172C                     l8525:
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5708  00172C  51A1               	movf	efgtoa@m& (0+255),w,b
  5709  00172E  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5710  001730  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5711  001732  0A80               	xorlw	128
  5712  001734  6F8A               	movwf	??_efgtoa& (0+255),b
  5713  001736  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5714  001738  0A80               	xorlw	128
  5715  00173A  598A               	subwfb	??_efgtoa& (0+255),w,b
  5716  00173C  A0D8               	btfss	status,0,c
  5717  00173E  EFA3  F00B         	goto	u9261
  5718  001742  EFA5  F00B         	goto	u9260
  5719  001746                     u9261:
  5720  001746  EF1B  F00B         	goto	l8517
  5721  00174A                     u9260:
  5722  00174A                     
  5723                           ; BSR set to: 0
  5724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5725  00174A  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5726  00174E  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5727  001752  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5728  001756  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5729  00175A  0E00               	movlw	0
  5730  00175C  6E2E               	movwf	___flmul@a^0,c
  5731  00175E  0E00               	movlw	0
  5732  001760  6E2F               	movwf	(___flmul@a+1)^0,c
  5733  001762  0EA0               	movlw	160
  5734  001764  6E30               	movwf	(___flmul@a+2)^0,c
  5735  001766  0E40               	movlw	64
  5736  001768  6E31               	movwf	(___flmul@a+3)^0,c
  5737  00176A  ECB1  F013         	call	___flmul	;wreg free
  5738  00176E  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5739  001772  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5740  001776  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5741  00177A  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5742  00177E                     
  5743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5744  00177E  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5745  001782  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5746  001786  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5747  00178A  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5748  00178E  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5749  001792  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5750  001796  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5751  00179A  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5752  00179E  EC98  F023         	call	___flge	;wreg free
  5753  0017A2  0100               	movlb	0	; () banked
  5754  0017A4  B0D8               	btfsc	status,0,c
  5755  0017A6  EFD7  F00B         	goto	u9271
  5756  0017AA  EFD9  F00B         	goto	u9270
  5757  0017AE                     u9271:
  5758  0017AE  EFE3  F00B         	goto	l8533
  5759  0017B2                     u9270:
  5760  0017B2                     
  5761                           ; BSR set to: 0
  5762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5763  0017B2  0E00               	movlw	0
  5764  0017B4  6FB5               	movwf	efgtoa@l& (0+255),b
  5765  0017B6  0E00               	movlw	0
  5766  0017B8  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5767  0017BA  0E00               	movlw	0
  5768  0017BC  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5769  0017BE  0E00               	movlw	0
  5770  0017C0  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5771                           
  5772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5773  0017C2  EF0C  F00C         	goto	l8539
  5774  0017C6                     l8533:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5778  0017C6  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5779  0017CA  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5780  0017CE  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5781  0017D2  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5782  0017D6  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5783  0017DA  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5784  0017DE  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5785  0017E2  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5786  0017E6  EC65  F027         	call	___fleq	;wreg free
  5787  0017EA  A0D8               	btfss	status,0,c
  5788  0017EC  EFFA  F00B         	goto	u9281
  5789  0017F0  EFFC  F00B         	goto	u9280
  5790  0017F4                     u9281:
  5791  0017F4  EF0C  F00C         	goto	l8539
  5792  0017F8                     u9280:
  5793  0017F8  0100               	movlb	0	; () banked
  5794  0017FA  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5795  0017FC  EF02  F00C         	goto	u9291
  5796  001800  EF04  F00C         	goto	u9290
  5797  001804                     u9291:
  5798  001804  EF0C  F00C         	goto	l8539
  5799  001808                     u9290:
  5800  001808                     
  5801                           ; BSR set to: 0
  5802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5803  001808  0E00               	movlw	0
  5804  00180A  6FB5               	movwf	efgtoa@l& (0+255),b
  5805  00180C  0E00               	movlw	0
  5806  00180E  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5807  001810  0E00               	movlw	0
  5808  001812  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5809  001814  0E00               	movlw	0
  5810  001816  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5811  001818                     l8539:
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5814  001818  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5815  00181C  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5816  001820  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5817  001824  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5818  001828  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5819  00182C  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5820  001830  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5821  001834  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5822  001838  EC50  F011         	call	___fladd	;wreg free
  5823  00183C  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5824  001840  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5825  001844  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5826  001848  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5827  00184C                     
  5828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5829  00184C  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5830  001850  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5831  001854  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5832  001858  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5833  00185C  0E00               	movlw	0
  5834  00185E  6E2E               	movwf	___flmul@a^0,c
  5835  001860  0E00               	movlw	0
  5836  001862  6E2F               	movwf	(___flmul@a+1)^0,c
  5837  001864  0E20               	movlw	32
  5838  001866  6E30               	movwf	(___flmul@a+2)^0,c
  5839  001868  0E41               	movlw	65
  5840  00186A  6E31               	movwf	(___flmul@a+3)^0,c
  5841  00186C  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5842  001870  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5843  001874  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5844  001878  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5845  00187C  ECB1  F013         	call	___flmul	;wreg free
  5846  001880  C02A  F071         	movff	?___flmul,___flge@ff2
  5847  001884  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5848  001888  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5849  00188C  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5850  001890  EC98  F023         	call	___flge	;wreg free
  5851  001894  0100               	movlb	0	; () banked
  5852  001896  A0D8               	btfss	status,0,c
  5853  001898  EF50  F00C         	goto	u9301
  5854  00189C  EF52  F00C         	goto	u9300
  5855  0018A0                     u9301:
  5856  0018A0  EF7A  F00C         	goto	l8551
  5857  0018A4                     u9300:
  5858  0018A4                     
  5859                           ; BSR set to: 0
  5860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5861  0018A4  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5862  0018A6  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5863  0018A8                     
  5864                           ; BSR set to: 0
  5865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5866  0018A8  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5867  0018AC  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5868  0018B0  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5869  0018B4  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5870  0018B8  0E00               	movlw	0
  5871  0018BA  6E2E               	movwf	___flmul@a^0,c
  5872  0018BC  0E00               	movlw	0
  5873  0018BE  6E2F               	movwf	(___flmul@a+1)^0,c
  5874  0018C0  0E20               	movlw	32
  5875  0018C2  6E30               	movwf	(___flmul@a+2)^0,c
  5876  0018C4  0E41               	movlw	65
  5877  0018C6  6E31               	movwf	(___flmul@a+3)^0,c
  5878  0018C8  ECB1  F013         	call	___flmul	;wreg free
  5879  0018CC  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5880  0018D0  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5881  0018D4  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5882  0018D8  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5883  0018DC                     
  5884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5885  0018DC  0E66               	movlw	102
  5886  0018DE  0100               	movlb	0	; () banked
  5887  0018E0  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5888  0018E2  A4D8               	btfss	status,2,c
  5889  0018E4  EF76  F00C         	goto	u9311
  5890  0018E8  EF78  F00C         	goto	u9310
  5891  0018EC                     u9311:
  5892  0018EC  EF7A  F00C         	goto	l8551
  5893  0018F0                     u9310:
  5894  0018F0                     
  5895                           ; BSR set to: 0
  5896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5897  0018F0  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5898  0018F2  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5899  0018F4                     l8551:
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5903  0018F4  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5904  0018F8  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5905  0018FC  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5906  001900  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5907  001904                     
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5910  001904  0E65               	movlw	101
  5911  001906  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5912  001908  B4D8               	btfsc	status,2,c
  5913  00190A  EF89  F00C         	goto	u9321
  5914  00190E  EF8B  F00C         	goto	u9320
  5915  001912                     u9321:
  5916  001912  EF91  F00C         	goto	l8557
  5917  001916                     u9320:
  5918  001916                     
  5919                           ; BSR set to: 0
  5920  001916  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5921  00191A  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5922  00191E  EF95  F00C         	goto	l2217
  5923  001922                     l8557:
  5924                           
  5925                           ; BSR set to: 0
  5926  001922  0E00               	movlw	0
  5927  001924  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5928  001926  0E00               	movlw	0
  5929  001928  6F9F               	movwf	efgtoa@ne& (0+255),b
  5930  00192A                     l2217:
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5934  00192A  0E00               	movlw	0
  5935  00192C  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5936  00192E  0E00               	movlw	0
  5937  001930  6F9D               	movwf	efgtoa@pp& (0+255),b
  5938                           
  5939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5940  001932  0E00               	movlw	0
  5941  001934  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5942  001936  0E00               	movlw	0
  5943  001938  6F9B               	movwf	efgtoa@t& (0+255),b
  5944                           
  5945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5946  00193A  0E00               	movlw	0
  5947  00193C  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5948  00193E  0E00               	movlw	0
  5949  001940  6FB9               	movwf	efgtoa@i& (0+255),b
  5950                           
  5951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5952  001942  EF91  F00D         	goto	l8607
  5953  001946                     l8559:
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5957  001946  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5958  00194A  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5959  00194E  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5960  001952  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5961  001956  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5962  00195A  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5963  00195E  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5964  001962  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5965  001966  ECD9  F015         	call	___fldiv	;wreg free
  5966  00196A  C02A  F036         	movff	?___fldiv,floorf@x
  5967  00196E  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5968  001972  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5969  001976  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5970  00197A  ECA0  F01A         	call	_floorf	;wreg free
  5971  00197E  C036  F0B5         	movff	?_floorf,efgtoa@l
  5972  001982  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5973  001986  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5974  00198A  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5975                           
  5976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5977  00198E  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5978  001992  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5979  001996  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5980  00199A  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5981  00199E  EC14  F023         	call	___fltol	;wreg free
  5982  0019A2  C079  F0A7         	movff	?___fltol,efgtoa@d
  5983  0019A6  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5984  0019AA                     
  5985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5986  0019AA  B83C               	btfsc	_flags^0,4,c
  5987  0019AC  EFDA  F00C         	goto	u9331
  5988  0019B0  EFDC  F00C         	goto	u9330
  5989  0019B4                     u9331:
  5990  0019B4  EFFA  F00C         	goto	l8571
  5991  0019B8                     u9330:
  5992  0019B8  0100               	movlb	0	; () banked
  5993  0019BA  51A7               	movf	efgtoa@d& (0+255),w,b
  5994  0019BC  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5995  0019BE  A4D8               	btfss	status,2,c
  5996  0019C0  EFE4  F00C         	goto	u9341
  5997  0019C4  EFE6  F00C         	goto	u9340
  5998  0019C8                     u9341:
  5999  0019C8  EFFA  F00C         	goto	l8571
  6000  0019CC                     u9340:
  6001  0019CC                     
  6002                           ; BSR set to: 0
  6003  0019CC  0E67               	movlw	103
  6004  0019CE  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  6005  0019D0  A4D8               	btfss	status,2,c
  6006  0019D2  EFED  F00C         	goto	u9351
  6007  0019D6  EFEF  F00C         	goto	u9350
  6008  0019DA                     u9351:
  6009  0019DA  EFFA  F00C         	goto	l8571
  6010  0019DE                     u9350:
  6011  0019DE                     
  6012                           ; BSR set to: 0
  6013  0019DE  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6014  0019E0  EFF6  F00C         	goto	u9360
  6015  0019E4  EFF4  F00C         	goto	u9361
  6016  0019E8                     u9361:
  6017  0019E8  EFFA  F00C         	goto	l8571
  6018  0019EC                     u9360:
  6019  0019EC                     
  6020                           ; BSR set to: 0
  6021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  6022  0019EC  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  6023  0019EE  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  6024                           
  6025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  6026  0019F0  EF45  F00D         	goto	l8599
  6027  0019F4                     l8571:
  6028                           
  6029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  6030  0019F4  0100               	movlb	0	; () banked
  6031  0019F6  519D               	movf	efgtoa@pp& (0+255),w,b
  6032  0019F8  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6033  0019FA  A4D8               	btfss	status,2,c
  6034  0019FC  EF02  F00D         	goto	u9371
  6035  001A00  EF04  F00D         	goto	u9370
  6036  001A04                     u9371:
  6037  001A04  EF2E  F00D         	goto	l8591
  6038  001A08                     u9370:
  6039  001A08                     
  6040                           ; BSR set to: 0
  6041  001A08  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6042  001A0A  EF0B  F00D         	goto	u9380
  6043  001A0E  EF09  F00D         	goto	u9381
  6044  001A12                     u9381:
  6045  001A12  EF2E  F00D         	goto	l8591
  6046  001A16                     u9380:
  6047  001A16                     
  6048                           ; BSR set to: 0
  6049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  6050  001A16  0E3A               	movlw	low _dbuf
  6051  001A18  25C1               	addwf	efgtoa@n& (0+255),w,b
  6052  001A1A  6ED9               	movwf	fsr2l,c
  6053  001A1C  0E01               	movlw	high _dbuf
  6054  001A1E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6055  001A20  6EDA               	movwf	fsr2h,c
  6056  001A22  0E2E               	movlw	46
  6057  001A24  6EDF               	movwf	indf2,c
  6058  001A26                     
  6059                           ; BSR set to: 0
  6060  001A26  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6061  001A28  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6062  001A2A                     
  6063                           ; BSR set to: 0
  6064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  6065  001A2A  07AD               	decf	efgtoa@w& (0+255),f,b
  6066  001A2C  A0D8               	btfss	status,0,c
  6067  001A2E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6068  001A30                     
  6069                           ; BSR set to: 0
  6070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  6071  001A30  0E00               	movlw	0
  6072  001A32  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  6073  001A34  0E01               	movlw	1
  6074  001A36  6F9D               	movwf	efgtoa@pp& (0+255),b
  6075  001A38  EF2E  F00D         	goto	l8591
  6076  001A3C                     l8583:
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  6080  001A3C  0E3A               	movlw	low _dbuf
  6081  001A3E  25C1               	addwf	efgtoa@n& (0+255),w,b
  6082  001A40  6ED9               	movwf	fsr2l,c
  6083  001A42  0E01               	movlw	high _dbuf
  6084  001A44  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6085  001A46  6EDA               	movwf	fsr2h,c
  6086  001A48  0E30               	movlw	48
  6087  001A4A  6EDF               	movwf	indf2,c
  6088  001A4C                     
  6089                           ; BSR set to: 0
  6090  001A4C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6091  001A4E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6092  001A50                     
  6093                           ; BSR set to: 0
  6094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  6095  001A50  07AD               	decf	efgtoa@w& (0+255),f,b
  6096  001A52  A0D8               	btfss	status,0,c
  6097  001A54  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6098  001A56                     
  6099                           ; BSR set to: 0
  6100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  6101  001A56  079B               	decf	efgtoa@t& (0+255),f,b
  6102  001A58  A0D8               	btfss	status,0,c
  6103  001A5A  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  6104  001A5C                     l8591:
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  6108  001A5C  519B               	movf	efgtoa@t& (0+255),w,b
  6109  001A5E  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6110  001A60  A4D8               	btfss	status,2,c
  6111  001A62  EF35  F00D         	goto	u9391
  6112  001A66  EF37  F00D         	goto	u9390
  6113  001A6A                     u9391:
  6114  001A6A  EF1E  F00D         	goto	l8583
  6115  001A6E                     u9390:
  6116  001A6E                     
  6117                           ; BSR set to: 0
  6118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6119  001A6E  0E3A               	movlw	low _dbuf
  6120  001A70  25C1               	addwf	efgtoa@n& (0+255),w,b
  6121  001A72  6ED9               	movwf	fsr2l,c
  6122  001A74  0E01               	movlw	high _dbuf
  6123  001A76  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6124  001A78  6EDA               	movwf	fsr2h,c
  6125  001A7A  51A7               	movf	efgtoa@d& (0+255),w,b
  6126  001A7C  0F30               	addlw	48
  6127  001A7E  6EDF               	movwf	indf2,c
  6128  001A80                     
  6129                           ; BSR set to: 0
  6130  001A80  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6131  001A82  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6132  001A84                     
  6133                           ; BSR set to: 0
  6134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  6135  001A84  07AD               	decf	efgtoa@w& (0+255),f,b
  6136  001A86  A0D8               	btfss	status,0,c
  6137  001A88  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6138  001A8A                     l8599:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6142  001A8A  C0B1  F079         	movff	efgtoa@h,___flsub@b
  6143  001A8E  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  6144  001A92  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  6145  001A96  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  6146  001A9A  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  6147  001A9E  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  6148  001AA2  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  6149  001AA6  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  6150  001AAA  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  6151  001AAE  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  6152  001AB2  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  6153  001AB6  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  6154  001ABA  ECB1  F013         	call	___flmul	;wreg free
  6155  001ABE  C02A  F07D         	movff	?___flmul,___flsub@a
  6156  001AC2  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  6157  001AC6  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  6158  001ACA  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  6159  001ACE  EC21  F02B         	call	___flsub	;wreg free
  6160  001AD2  C079  F0B1         	movff	?___flsub,efgtoa@h
  6161  001AD6  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  6162  001ADA  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  6163  001ADE  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  6164  001AE2                     
  6165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6166  001AE2  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  6167  001AE6  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  6168  001AEA  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  6169  001AEE  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  6170  001AF2  0E00               	movlw	0
  6171  001AF4  6E2E               	movwf	___fldiv@a^0,c
  6172  001AF6  0E00               	movlw	0
  6173  001AF8  6E2F               	movwf	(___fldiv@a+1)^0,c
  6174  001AFA  0E20               	movlw	32
  6175  001AFC  6E30               	movwf	(___fldiv@a+2)^0,c
  6176  001AFE  0E41               	movlw	65
  6177  001B00  6E31               	movwf	(___fldiv@a+3)^0,c
  6178  001B02  ECD9  F015         	call	___fldiv	;wreg free
  6179  001B06  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  6180  001B0A  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  6181  001B0E  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  6182  001B12  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  6183  001B16                     
  6184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6185  001B16  0100               	movlb	0	; () banked
  6186  001B18  079F               	decf	efgtoa@ne& (0+255),f,b
  6187  001B1A  A0D8               	btfss	status,0,c
  6188  001B1C  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  6189  001B1E                     
  6190                           ; BSR set to: 0
  6191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6192  001B1E  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  6193  001B20  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  6194  001B22                     l8607:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6198  001B22  51A1               	movf	efgtoa@m& (0+255),w,b
  6199  001B24  5DB9               	subwf	efgtoa@i& (0+255),w,b
  6200  001B26  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  6201  001B28  0A80               	xorlw	128
  6202  001B2A  6F8A               	movwf	??_efgtoa& (0+255),b
  6203  001B2C  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  6204  001B2E  0A80               	xorlw	128
  6205  001B30  598A               	subwfb	??_efgtoa& (0+255),w,b
  6206  001B32  B0D8               	btfsc	status,0,c
  6207  001B34  EF9E  F00D         	goto	u9401
  6208  001B38  EFA0  F00D         	goto	u9400
  6209  001B3C                     u9401:
  6210  001B3C  EFAE  F00D         	goto	l8611
  6211  001B40                     u9400:
  6212  001B40                     
  6213                           ; BSR set to: 0
  6214  001B40  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6215  001B42  EFAC  F00D         	goto	u9411
  6216  001B46  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  6217  001B48  E109               	bnz	u9410
  6218  001B4A  0E4B               	movlw	75
  6219  001B4C  5DC1               	subwf	efgtoa@n& (0+255),w,b
  6220  001B4E  A0D8               	btfss	status,0,c
  6221  001B50  EFAC  F00D         	goto	u9411
  6222  001B54  EFAE  F00D         	goto	u9410
  6223  001B58                     u9411:
  6224  001B58  EFA3  F00C         	goto	l8559
  6225  001B5C                     u9410:
  6226  001B5C                     l8611:
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6230  001B5C  519D               	movf	efgtoa@pp& (0+255),w,b
  6231  001B5E  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6232  001B60  A4D8               	btfss	status,2,c
  6233  001B62  EFB5  F00D         	goto	u9421
  6234  001B66  EFB7  F00D         	goto	u9420
  6235  001B6A                     u9421:
  6236  001B6A  EFC8  F00D         	goto	l8619
  6237  001B6E                     u9420:
  6238  001B6E                     
  6239                           ; BSR set to: 0
  6240  001B6E  A83C               	btfss	_flags^0,4,c
  6241  001B70  EFBC  F00D         	goto	u9431
  6242  001B74  EFBE  F00D         	goto	u9430
  6243  001B78                     u9431:
  6244  001B78  EFC8  F00D         	goto	l8619
  6245  001B7C                     u9430:
  6246  001B7C                     
  6247                           ; BSR set to: 0
  6248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6249  001B7C  0E3A               	movlw	low _dbuf
  6250  001B7E  25C1               	addwf	efgtoa@n& (0+255),w,b
  6251  001B80  6ED9               	movwf	fsr2l,c
  6252  001B82  0E01               	movlw	high _dbuf
  6253  001B84  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6254  001B86  6EDA               	movwf	fsr2h,c
  6255  001B88  0E2E               	movlw	46
  6256  001B8A  6EDF               	movwf	indf2,c
  6257  001B8C                     
  6258                           ; BSR set to: 0
  6259  001B8C  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6260  001B8E  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6261  001B90                     l8619:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6265  001B90  0E3A               	movlw	low _dbuf
  6266  001B92  25C1               	addwf	efgtoa@n& (0+255),w,b
  6267  001B94  6ED9               	movwf	fsr2l,c
  6268  001B96  0E01               	movlw	high _dbuf
  6269  001B98  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6270  001B9A  6EDA               	movwf	fsr2h,c
  6271  001B9C  0E00               	movlw	0
  6272  001B9E  6EDF               	movwf	indf2,c
  6273  001BA0                     
  6274                           ; BSR set to: 0
  6275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6276  001BA0  0E65               	movlw	101
  6277  001BA2  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6278  001BA4  A4D8               	btfss	status,2,c
  6279  001BA6  EFD7  F00D         	goto	u9441
  6280  001BAA  EFD9  F00D         	goto	u9440
  6281  001BAE                     u9441:
  6282  001BAE  EFAB  F00E         	goto	l8681
  6283  001BB2                     u9440:
  6284  001BB2                     
  6285                           ; BSR set to: 0
  6286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6287  001BB2  0E00               	movlw	0
  6288  001BB4  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  6289  001BB6  0E4F               	movlw	79
  6290  001BB8  6FB9               	movwf	efgtoa@i& (0+255),b
  6291  001BBA                     
  6292                           ; BSR set to: 0
  6293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6294  001BBA  0E3A               	movlw	low _dbuf
  6295  001BBC  25B9               	addwf	efgtoa@i& (0+255),w,b
  6296  001BBE  6ED9               	movwf	fsr2l,c
  6297  001BC0  0E01               	movlw	high _dbuf
  6298  001BC2  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6299  001BC4  6EDA               	movwf	fsr2h,c
  6300  001BC6  0E00               	movlw	0
  6301  001BC8  6EDF               	movwf	indf2,c
  6302  001BCA                     
  6303                           ; BSR set to: 0
  6304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6305  001BCA  0E00               	movlw	0
  6306  001BCC  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6307  001BCE  0E00               	movlw	0
  6308  001BD0  6FA9               	movwf	efgtoa@sign& (0+255),b
  6309  001BD2                     
  6310                           ; BSR set to: 0
  6311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6312  001BD2  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6313  001BD4  EFF0  F00D         	goto	u9450
  6314  001BD8  EFEE  F00D         	goto	u9451
  6315  001BDC                     u9451:
  6316  001BDC  EFF8  F00D         	goto	l8635
  6317  001BE0                     u9450:
  6318  001BE0                     
  6319                           ; BSR set to: 0
  6320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6321  001BE0  0E00               	movlw	0
  6322  001BE2  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6323  001BE4  0E01               	movlw	1
  6324  001BE6  6FA9               	movwf	efgtoa@sign& (0+255),b
  6325  001BE8                     
  6326                           ; BSR set to: 0
  6327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6328  001BE8  6DBF               	negf	efgtoa@e& (0+255),b
  6329  001BEA  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  6330  001BEC  B0D8               	btfsc	status,0,c
  6331  001BEE  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  6332  001BF0                     l8635:
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6336  001BF0  0E00               	movlw	0
  6337  001BF2  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  6338  001BF4  0E02               	movlw	2
  6339  001BF6  6FAB               	movwf	efgtoa@p& (0+255),b
  6340                           
  6341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6342  001BF8  EF29  F00E         	goto	l8647
  6343  001BFC                     l8637:
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6347  001BFC  07B9               	decf	efgtoa@i& (0+255),f,b
  6348  001BFE  A0D8               	btfss	status,0,c
  6349  001C00  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6350  001C02                     
  6351                           ; BSR set to: 0
  6352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6353  001C02  0E3A               	movlw	low _dbuf
  6354  001C04  25B9               	addwf	efgtoa@i& (0+255),w,b
  6355  001C06  6ED9               	movwf	fsr2l,c
  6356  001C08  0E01               	movlw	high _dbuf
  6357  001C0A  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6358  001C0C  6EDA               	movwf	fsr2h,c
  6359  001C0E  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  6360  001C12  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  6361  001C16  0E00               	movlw	0
  6362  001C18  6E17               	movwf	(___awmod@divisor+1)^0,c
  6363  001C1A  0E0A               	movlw	10
  6364  001C1C  6E16               	movwf	___awmod@divisor^0,c
  6365  001C1E  EC0D  F027         	call	___awmod	;wreg free
  6366  001C22  5014               	movf	?___awmod^0,w,c
  6367  001C24  0F30               	addlw	48
  6368  001C26  6EDF               	movwf	indf2,c
  6369  001C28                     
  6370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6371  001C28  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  6372  001C2C  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  6373  001C30  0E00               	movlw	0
  6374  001C32  6E17               	movwf	(___awdiv@divisor+1)^0,c
  6375  001C34  0E0A               	movlw	10
  6376  001C36  6E16               	movwf	___awdiv@divisor^0,c
  6377  001C38  ECEA  F025         	call	___awdiv	;wreg free
  6378  001C3C  C014  F0BF         	movff	?___awdiv,efgtoa@e
  6379  001C40  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  6380  001C44                     
  6381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6382  001C44  0100               	movlb	0	; () banked
  6383  001C46  07AB               	decf	efgtoa@p& (0+255),f,b
  6384  001C48  A0D8               	btfss	status,0,c
  6385  001C4A  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  6386  001C4C                     
  6387                           ; BSR set to: 0
  6388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6389  001C4C  07AD               	decf	efgtoa@w& (0+255),f,b
  6390  001C4E  A0D8               	btfss	status,0,c
  6391  001C50  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6392  001C52                     l8647:
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6396  001C52  51BF               	movf	efgtoa@e& (0+255),w,b
  6397  001C54  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6398  001C56  A4D8               	btfss	status,2,c
  6399  001C58  EF30  F00E         	goto	u9461
  6400  001C5C  EF32  F00E         	goto	u9460
  6401  001C60                     u9461:
  6402  001C60  EFFE  F00D         	goto	l8637
  6403  001C64                     u9460:
  6404  001C64                     
  6405                           ; BSR set to: 0
  6406  001C64  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6407  001C66  EF3F  F00E         	goto	u9470
  6408  001C6A  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  6409  001C6C  E106               	bnz	u9471
  6410  001C6E  05AB               	decf	efgtoa@p& (0+255),w,b
  6411  001C70  B0D8               	btfsc	status,0,c
  6412  001C72  EF3D  F00E         	goto	u9471
  6413  001C76  EF3F  F00E         	goto	u9470
  6414  001C7A                     u9471:
  6415  001C7A  EFFE  F00D         	goto	l8637
  6416  001C7E                     u9470:
  6417  001C7E                     
  6418                           ; BSR set to: 0
  6419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6420  001C7E  07B9               	decf	efgtoa@i& (0+255),f,b
  6421  001C80  A0D8               	btfss	status,0,c
  6422  001C82  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6423  001C84                     
  6424                           ; BSR set to: 0
  6425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6426  001C84  51A9               	movf	efgtoa@sign& (0+255),w,b
  6427  001C86  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6428  001C88  A4D8               	btfss	status,2,c
  6429  001C8A  EF49  F00E         	goto	u9481
  6430  001C8E  EF4B  F00E         	goto	u9480
  6431  001C92                     u9481:
  6432  001C92  EF51  F00E         	goto	l8657
  6433  001C96                     u9480:
  6434  001C96                     
  6435                           ; BSR set to: 0
  6436  001C96  0E00               	movlw	0
  6437  001C98  6F96               	movwf	(_efgtoa$3577+1)& (0+255),b
  6438  001C9A  0E2B               	movlw	43
  6439  001C9C  6F95               	movwf	_efgtoa$3577& (0+255),b
  6440  001C9E  EF55  F00E         	goto	l8659
  6441  001CA2                     l8657:
  6442                           
  6443                           ; BSR set to: 0
  6444  001CA2  0E00               	movlw	0
  6445  001CA4  6F96               	movwf	(_efgtoa$3577+1)& (0+255),b
  6446  001CA6  0E2D               	movlw	45
  6447  001CA8  6F95               	movwf	_efgtoa$3577& (0+255),b
  6448  001CAA                     l8659:
  6449                           
  6450                           ; BSR set to: 0
  6451  001CAA  0E3A               	movlw	low _dbuf
  6452  001CAC  25B9               	addwf	efgtoa@i& (0+255),w,b
  6453  001CAE  6ED9               	movwf	fsr2l,c
  6454  001CB0  0E01               	movlw	high _dbuf
  6455  001CB2  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6456  001CB4  6EDA               	movwf	fsr2h,c
  6457  001CB6  0060  F257  FFDF   	movff	_efgtoa$3577,indf2
  6458  001CBC                     
  6459                           ; BSR set to: 0
  6460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6461  001CBC  07AD               	decf	efgtoa@w& (0+255),f,b
  6462  001CBE  A0D8               	btfss	status,0,c
  6463  001CC0  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6464  001CC2                     
  6465                           ; BSR set to: 0
  6466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6467  001CC2  07B9               	decf	efgtoa@i& (0+255),f,b
  6468  001CC4  A0D8               	btfss	status,0,c
  6469  001CC6  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6470  001CC8                     
  6471                           ; BSR set to: 0
  6472  001CC8  0EBF               	movlw	191
  6473  001CCA  6F8A               	movwf	??_efgtoa& (0+255),b
  6474  001CCC  0EFF               	movlw	255
  6475  001CCE  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6476  001CD0  5189               	movf	efgtoa@c& (0+255),w,b
  6477  001CD2  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  6478  001CD4  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  6479  001CD6  518A               	movf	??_efgtoa& (0+255),w,b
  6480  001CD8  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6481  001CDA  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6482  001CDC  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6483  001CDE  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6484  001CE0  E10A               	bnz	u9490
  6485  001CE2  0E1A               	movlw	26
  6486  001CE4  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6487  001CE6  A0D8               	btfss	status,0,c
  6488  001CE8  EF78  F00E         	goto	u9491
  6489  001CEC  EF7B  F00E         	goto	u9490
  6490  001CF0                     u9491:
  6491  001CF0  0E01               	movlw	1
  6492  001CF2  EF7C  F00E         	goto	u9500
  6493  001CF6                     u9490:
  6494  001CF6  0E00               	movlw	0
  6495  001CF8                     u9500:
  6496  001CF8  6F99               	movwf	_efgtoa$3579& (0+255),b
  6497  001CFA  6B9A               	clrf	(_efgtoa$3579+1)& (0+255),b
  6498  001CFC                     
  6499                           ; BSR set to: 0
  6500  001CFC  5199               	movf	_efgtoa$3579& (0+255),w,b
  6501  001CFE  119A               	iorwf	(_efgtoa$3579+1)& (0+255),w,b
  6502  001D00  A4D8               	btfss	status,2,c
  6503  001D02  EF85  F00E         	goto	u9511
  6504  001D06  EF87  F00E         	goto	u9510
  6505  001D0A                     u9511:
  6506  001D0A  EF8D  F00E         	goto	l8673
  6507  001D0E                     u9510:
  6508  001D0E                     
  6509                           ; BSR set to: 0
  6510  001D0E  0E00               	movlw	0
  6511  001D10  6F98               	movwf	(_efgtoa$3578+1)& (0+255),b
  6512  001D12  0E65               	movlw	101
  6513  001D14  6F97               	movwf	_efgtoa$3578& (0+255),b
  6514  001D16  EF91  F00E         	goto	l8675
  6515  001D1A                     l8673:
  6516                           
  6517                           ; BSR set to: 0
  6518  001D1A  0E00               	movlw	0
  6519  001D1C  6F98               	movwf	(_efgtoa$3578+1)& (0+255),b
  6520  001D1E  0E45               	movlw	69
  6521  001D20  6F97               	movwf	_efgtoa$3578& (0+255),b
  6522  001D22                     l8675:
  6523                           
  6524                           ; BSR set to: 0
  6525  001D22  0E3A               	movlw	low _dbuf
  6526  001D24  25B9               	addwf	efgtoa@i& (0+255),w,b
  6527  001D26  6ED9               	movwf	fsr2l,c
  6528  001D28  0E01               	movlw	high _dbuf
  6529  001D2A  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6530  001D2C  6EDA               	movwf	fsr2h,c
  6531  001D2E  0060  F25F  FFDF   	movff	_efgtoa$3578,indf2
  6532  001D34                     
  6533                           ; BSR set to: 0
  6534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6535  001D34  07AD               	decf	efgtoa@w& (0+255),f,b
  6536  001D36  A0D8               	btfss	status,0,c
  6537  001D38  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6538  001D3A                     
  6539                           ; BSR set to: 0
  6540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6541  001D3A  0E3A               	movlw	low _dbuf
  6542  001D3C  25C1               	addwf	efgtoa@n& (0+255),w,b
  6543  001D3E  6E14               	movwf	strcpy@dest^0,c
  6544  001D40  0E01               	movlw	high _dbuf
  6545  001D42  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6546  001D44  6E15               	movwf	(strcpy@dest+1)^0,c
  6547  001D46  0E3A               	movlw	low _dbuf
  6548  001D48  25B9               	addwf	efgtoa@i& (0+255),w,b
  6549  001D4A  6E16               	movwf	strcpy@src^0,c
  6550  001D4C  0E01               	movlw	high _dbuf
  6551  001D4E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6552  001D50  6E17               	movwf	(strcpy@src+1)^0,c
  6553  001D52  ECA0  F029         	call	_strcpy	;wreg free
  6554  001D56                     l8681:
  6555                           
  6556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6557  001D56  C083  F026         	movff	efgtoa@fp,pad@fp
  6558  001D5A  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6559  001D5E  0E3A               	movlw	low _dbuf
  6560  001D60  6E28               	movwf	pad@buf^0,c
  6561  001D62  0E01               	movlw	high _dbuf
  6562  001D64  6E29               	movwf	(pad@buf+1)^0,c
  6563  001D66  C0AD  F02A         	movff	efgtoa@w,pad@p
  6564  001D6A  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6565  001D6E  EC4C  F026         	call	_pad	;wreg free
  6566  001D72  C026  F083         	movff	?_pad,?_efgtoa
  6567  001D76  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6568  001D7A                     l2171:
  6569  001D7A  0012               	return		;funcret
  6570  001D7C                     __end_of_efgtoa:
  6571                           	callstack 0
  6572                           
  6573 ;; *************** function _tolower *****************
  6574 ;; Defined at:
  6575 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  c               2   25[COMRAM] int 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  2   25[COMRAM] int 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;Total ram usage:        8 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 9
  6596 ;; This function calls:
  6597 ;;		_isupper
  6598 ;; This function is called by:
  6599 ;;		_efgtoa
  6600 ;;		_vfpfcnvrt
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text16
  6605  0053AA                     __ptext16:
  6606                           	callstack 0
  6607  0053AA                     _tolower:
  6608                           	callstack 16
  6609  0053AA  0EBF               	movlw	191
  6610  0053AC  6E1C               	movwf	??_tolower^0,c
  6611  0053AE  0EFF               	movlw	255
  6612  0053B0  6E1D               	movwf	(??_tolower+1)^0,c
  6613  0053B2  C01A  F01E         	movff	tolower@c,??_tolower+2
  6614  0053B6  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  6615  0053BA  501C               	movf	??_tolower^0,w,c
  6616  0053BC  261E               	addwf	(??_tolower+2)^0,f,c
  6617  0053BE  501D               	movf	(??_tolower+1)^0,w,c
  6618  0053C0  221F               	addwfc	(??_tolower+3)^0,f,c
  6619  0053C2  501F               	movf	(??_tolower+3)^0,w,c
  6620  0053C4  E10A               	bnz	u8700
  6621  0053C6  0E1A               	movlw	26
  6622  0053C8  5C1E               	subwf	(??_tolower+2)^0,w,c
  6623  0053CA  A0D8               	btfss	status,0,c
  6624  0053CC  EFEA  F029         	goto	u8701
  6625  0053D0  EFED  F029         	goto	u8700
  6626  0053D4                     u8701:
  6627  0053D4  0E01               	movlw	1
  6628  0053D6  EFEE  F029         	goto	u8710
  6629  0053DA                     u8700:
  6630  0053DA  0E00               	movlw	0
  6631  0053DC                     u8710:
  6632  0053DC  6E20               	movwf	_tolower$3690^0,c
  6633  0053DE  6A21               	clrf	(_tolower$3690+1)^0,c
  6634  0053E0  5020               	movf	_tolower$3690^0,w,c
  6635  0053E2  1021               	iorwf	(_tolower$3690+1)^0,w,c
  6636  0053E4  B4D8               	btfsc	status,2,c
  6637  0053E6  EFF7  F029         	goto	u8721
  6638  0053EA  EFF9  F029         	goto	u8720
  6639  0053EE                     u8721:
  6640  0053EE  EF00  F02A         	goto	l2353
  6641  0053F2                     u8720:
  6642  0053F2  0E20               	movlw	32
  6643  0053F4  101A               	iorwf	tolower@c^0,w,c
  6644  0053F6  6E1A               	movwf	?_tolower^0,c
  6645  0053F8  501B               	movf	(tolower@c+1)^0,w,c
  6646  0053FA  6E1B               	movwf	(?_tolower+1)^0,c
  6647  0053FC  EF04  F02A         	goto	l2358
  6648  005400                     l2353:
  6649  005400  C01A  F01A         	movff	tolower@c,?_tolower
  6650  005404  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  6651  005408                     l2358:
  6652  005408  0012               	return		;funcret
  6653  00540A                     __end_of_tolower:
  6654                           	callstack 0
  6655                           
  6656 ;; *************** function _isupper *****************
  6657 ;; Defined at:
  6658 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  c               2   19[COMRAM] int 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;		None
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  2   19[COMRAM] int 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;Total ram usage:        6 bytes
  6677 ;; Hardware stack levels used: 1
  6678 ;; Hardware stack levels required when called: 8
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_efgtoa
  6683 ;;		_vfpfcnvrt
  6684 ;;		_tolower
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text17
  6689  005802                     __ptext17:
  6690                           	callstack 0
  6691  005802                     _isupper:
  6692                           	callstack 16
  6693  005802  0EBF               	movlw	191
  6694  005804  6E16               	movwf	??_isupper^0,c
  6695  005806  0EFF               	movlw	255
  6696  005808  6E17               	movwf	(??_isupper+1)^0,c
  6697  00580A  C014  F018         	movff	isupper@c,??_isupper+2
  6698  00580E  C015  F019         	movff	isupper@c+1,??_isupper+3
  6699  005812  5016               	movf	??_isupper^0,w,c
  6700  005814  2618               	addwf	(??_isupper+2)^0,f,c
  6701  005816  5017               	movf	(??_isupper+1)^0,w,c
  6702  005818  2219               	addwfc	(??_isupper+3)^0,f,c
  6703  00581A  5019               	movf	(??_isupper+3)^0,w,c
  6704  00581C  E10A               	bnz	u7710
  6705  00581E  0E1A               	movlw	26
  6706  005820  5C18               	subwf	(??_isupper+2)^0,w,c
  6707  005822  A0D8               	btfss	status,0,c
  6708  005824  EF16  F02C         	goto	u7711
  6709  005828  EF19  F02C         	goto	u7710
  6710  00582C                     u7711:
  6711  00582C  0E01               	movlw	1
  6712  00582E  EF1A  F02C         	goto	u7720
  6713  005832                     u7710:
  6714  005832  0E00               	movlw	0
  6715  005834                     u7720:
  6716  005834  6E14               	movwf	?_isupper^0,c
  6717  005836  6A15               	clrf	(?_isupper+1)^0,c
  6718  005838  0012               	return		;funcret
  6719  00583A                     __end_of_isupper:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function _strcpy *****************
  6723 ;; Defined at:
  6724 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6727 ;;		 -> dbuf(80), 
  6728 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6729 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
  6730 ;;		 -> dbuf(80), 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  d               2   27[COMRAM] PTR unsigned char 
  6733 ;;		 -> dbuf(80), 
  6734 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6735 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
  6736 ;;		 -> dbuf(80), 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  2   19[COMRAM] PTR unsigned char 
  6739 ;; Registers used:
  6740 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;Total ram usage:       10 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; Hardware stack levels required when called: 8
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_efgtoa
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           	psect	text18
  6761  005340                     __ptext18:
  6762                           	callstack 0
  6763  005340                     _strcpy:
  6764                           	callstack 16
  6765  005340  C016  F01A         	movff	strcpy@src,strcpy@s
  6766  005344  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6767  005348  C014  F01C         	movff	strcpy@dest,strcpy@d
  6768  00534C  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6769  005350                     l8275:
  6770  005350  501A               	movf	strcpy@s^0,w,c
  6771  005352  6E18               	movwf	??_strcpy^0,c
  6772  005354  501B               	movf	(strcpy@s+1)^0,w,c
  6773  005356  6E19               	movwf	(??_strcpy+1)^0,c
  6774  005358  4A1A               	infsnz	strcpy@s^0,f,c
  6775  00535A  2A1B               	incf	(strcpy@s+1)^0,f,c
  6776  00535C  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6777  005362  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6778  005368  0E00               	movlw	low (__smallconst shr (0+16))
  6779  00536A  6EF8               	movwf	tblptru,c
  6780  00536C  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6781  005372  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6782  005378  4A1C               	infsnz	strcpy@d^0,f,c
  6783  00537A  2A1D               	incf	(strcpy@d+1)^0,f,c
  6784  00537C  0E0F               	movlw	(high __ramtop+-1)
  6785  00537E  64F7               	cpfsgt	tblptrh,c
  6786  005380  D003               	bra	u8687
  6787  005382  0008               	tblrd		*
  6788  005384  50F5               	movf	tablat,w,c
  6789  005386  D007               	bra	u8680
  6790  005388                     u8687:
  6791  005388  006F FFDB FFE9     	movff	tblptrl,fsr0l
  6792  00538E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  6793  005394  50EF               	movf	indf0,w,c
  6794  005396                     u8680:
  6795  005396  6EDF               	movwf	indf2,c
  6796  005398  50DF               	movf	indf2,w,c
  6797  00539A  A4D8               	btfss	status,2,c
  6798  00539C  EFD2  F029         	goto	u8691
  6799  0053A0  EFD4  F029         	goto	u8690
  6800  0053A4                     u8691:
  6801  0053A4  EFA8  F029         	goto	l8275
  6802  0053A8                     u8690:
  6803  0053A8  0012               	return		;funcret
  6804  0053AA                     __end_of_strcpy:
  6805                           	callstack 0
  6806                           
  6807 ;; *************** function _floorf *****************
  6808 ;; Defined at:
  6809 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  x               4   53[COMRAM] float 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  u               4   25[BANK0 ] struct .
  6814 ;;  m               4   19[BANK0 ] unsigned long 
  6815 ;;  e               2   23[BANK0 ] int 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  4   53[COMRAM] float 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;Total ram usage:       20 bytes
  6830 ;; Hardware stack levels used: 1
  6831 ;; Hardware stack levels required when called: 8
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_efgtoa
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text19
  6840  003540                     __ptext19:
  6841                           	callstack 0
  6842  003540                     _floorf:
  6843                           	callstack 16
  6844  003540  C118  F079         	movff	floorf@F527,floorf@u
  6845  003544  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  6846  003548  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  6847  00354C  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  6848  003550  C036  F079         	movff	floorf@x,floorf@u
  6849  003554  C037  F07A         	movff	floorf@x+1,floorf@u+1
  6850  003558  C038  F07B         	movff	floorf@x+2,floorf@u+2
  6851  00355C  C039  F07C         	movff	floorf@x+3,floorf@u+3
  6852  003560  0E81               	movlw	129
  6853  003562  0100               	movlb	0	; () banked
  6854  003564  6F6D               	movwf	??_floorf& (0+255),b
  6855  003566  0EFF               	movlw	255
  6856  003568  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6857  00356A  C079  F06F         	movff	floorf@u,??_floorf+2
  6858  00356E  C07A  F070         	movff	floorf@u+1,??_floorf+3
  6859  003572  C07B  F071         	movff	floorf@u+2,??_floorf+4
  6860  003576  C07C  F072         	movff	floorf@u+3,??_floorf+5
  6861  00357A  0E18               	movlw	24
  6862  00357C  EFC5  F01A         	goto	u8730
  6863  003580                     u8735:
  6864  003580  90D8               	bcf	status,0,c
  6865  003582  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  6866  003584  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6867  003586  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6868  003588  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6869  00358A                     u8730:
  6870  00358A  2EE8               	decfsz	wreg,f,c
  6871  00358C  EFC0  F01A         	goto	u8735
  6872  003590  516F               	movf	(??_floorf+2)& (0+255),w,b
  6873  003592  256D               	addwf	??_floorf& (0+255),w,b
  6874  003594  6F77               	movwf	floorf@e& (0+255),b
  6875  003596  0E00               	movlw	0
  6876  003598  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  6877  00359A  6F78               	movwf	(floorf@e+1)& (0+255),b
  6878  00359C  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6879  00359E  EFDA  F01A         	goto	u8741
  6880  0035A2  5178               	movf	(floorf@e+1)& (0+255),w,b
  6881  0035A4  E109               	bnz	u8740
  6882  0035A6  0E17               	movlw	23
  6883  0035A8  5D77               	subwf	floorf@e& (0+255),w,b
  6884  0035AA  A0D8               	btfss	status,0,c
  6885  0035AC  EFDA  F01A         	goto	u8741
  6886  0035B0  EFDC  F01A         	goto	u8740
  6887  0035B4                     u8741:
  6888  0035B4  EFE6  F01A         	goto	l8293
  6889  0035B8                     u8740:
  6890  0035B8                     l8291:
  6891                           
  6892                           ; BSR set to: 0
  6893  0035B8  C036  F036         	movff	floorf@x,?_floorf
  6894  0035BC  C037  F037         	movff	floorf@x+1,?_floorf+1
  6895  0035C0  C038  F038         	movff	floorf@x+2,?_floorf+2
  6896  0035C4  C039  F039         	movff	floorf@x+3,?_floorf+3
  6897  0035C8  EFAA  F01B         	goto	l2294
  6898  0035CC                     l8293:
  6899                           
  6900                           ; BSR set to: 0
  6901  0035CC  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6902  0035CE  EFEB  F01A         	goto	u8751
  6903  0035D2  EFED  F01A         	goto	u8750
  6904  0035D6                     u8751:
  6905  0035D6  EF5E  F01B         	goto	l8303
  6906  0035DA                     u8750:
  6907  0035DA                     
  6908                           ; BSR set to: 0
  6909  0035DA  C077  F06D         	movff	floorf@e,??_floorf
  6910  0035DE  0EFF               	movlw	255
  6911  0035E0  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6912  0035E2  0EFF               	movlw	255
  6913  0035E4  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6914  0035E6  0E7F               	movlw	127
  6915  0035E8  6F70               	movwf	(??_floorf+3)& (0+255),b
  6916  0035EA  0E00               	movlw	0
  6917  0035EC  6F71               	movwf	(??_floorf+4)& (0+255),b
  6918  0035EE                     u8765:
  6919  0035EE  676D               	tstfsz	??_floorf& (0+255),b
  6920  0035F0  EFFC  F01A         	goto	u8766
  6921  0035F4  EF04  F01B         	goto	u8767
  6922  0035F8                     u8766:
  6923  0035F8  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  6924  0035FA  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6925  0035FC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6926  0035FE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6927  003600  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6928  003602  2F6D               	decfsz	??_floorf& (0+255),f,b
  6929  003604  EFF7  F01A         	goto	u8765
  6930  003608                     u8767:
  6931  003608  C06E  F073         	movff	??_floorf+1,floorf@m
  6932  00360C  C06F  F074         	movff	??_floorf+2,floorf@m+1
  6933  003610  C070  F075         	movff	??_floorf+3,floorf@m+2
  6934  003614  C071  F076         	movff	??_floorf+4,floorf@m+3
  6935  003618  0100               	movlb	0	; () banked
  6936  00361A  5173               	movf	floorf@m& (0+255),w,b
  6937  00361C  1579               	andwf	floorf@u& (0+255),w,b
  6938  00361E  6F6D               	movwf	??_floorf& (0+255),b
  6939  003620  5174               	movf	(floorf@m+1)& (0+255),w,b
  6940  003622  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6941  003624  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6942  003626  5175               	movf	(floorf@m+2)& (0+255),w,b
  6943  003628  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6944  00362A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6945  00362C  5176               	movf	(floorf@m+3)& (0+255),w,b
  6946  00362E  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6947  003630  6F70               	movwf	(??_floorf+3)& (0+255),b
  6948  003632  516D               	movf	??_floorf& (0+255),w,b
  6949  003634  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6950  003636  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6951  003638  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6952  00363A  A4D8               	btfss	status,2,c
  6953  00363C  EF22  F01B         	goto	u8771
  6954  003640  EF24  F01B         	goto	u8770
  6955  003644                     u8771:
  6956  003644  EF26  F01B         	goto	l8299
  6957  003648                     u8770:
  6958  003648  EFDC  F01A         	goto	l8291
  6959  00364C                     l8299:
  6960                           
  6961                           ; BSR set to: 0
  6962  00364C  C079  F06D         	movff	floorf@u,??_floorf
  6963  003650  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  6964  003654  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  6965  003658  C07C  F070         	movff	floorf@u+3,??_floorf+3
  6966  00365C  0E20               	movlw	32
  6967  00365E  EF36  F01B         	goto	u8780
  6968  003662                     u8785:
  6969  003662  90D8               	bcf	status,0,c
  6970  003664  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6971  003666  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6972  003668  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6973  00366A  336D               	rrcf	??_floorf& (0+255),f,b
  6974  00366C                     u8780:
  6975  00366C  2EE8               	decfsz	wreg,f,c
  6976  00366E  EF31  F01B         	goto	u8785
  6977  003672  516D               	movf	??_floorf& (0+255),w,b
  6978  003674  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6979  003676  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6980  003678  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6981  00367A  B4D8               	btfsc	status,2,c
  6982  00367C  EF42  F01B         	goto	u8791
  6983  003680  EF44  F01B         	goto	u8790
  6984  003684                     u8791:
  6985  003684  EF4C  F01B         	goto	l2297
  6986  003688                     u8790:
  6987  003688                     
  6988                           ; BSR set to: 0
  6989  003688  5173               	movf	floorf@m& (0+255),w,b
  6990  00368A  2779               	addwf	floorf@u& (0+255),f,b
  6991  00368C  5174               	movf	(floorf@m+1)& (0+255),w,b
  6992  00368E  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6993  003690  5175               	movf	(floorf@m+2)& (0+255),w,b
  6994  003692  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6995  003694  5176               	movf	(floorf@m+3)& (0+255),w,b
  6996  003696  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6997  003698                     l2297:
  6998                           
  6999                           ; BSR set to: 0
  7000  003698  1D73               	comf	floorf@m& (0+255),w,b
  7001  00369A  6F6D               	movwf	??_floorf& (0+255),b
  7002  00369C  1D74               	comf	(floorf@m+1)& (0+255),w,b
  7003  00369E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7004  0036A0  1D75               	comf	(floorf@m+2)& (0+255),w,b
  7005  0036A2  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7006  0036A4  1D76               	comf	(floorf@m+3)& (0+255),w,b
  7007  0036A6  6F70               	movwf	(??_floorf+3)& (0+255),b
  7008  0036A8  516D               	movf	??_floorf& (0+255),w,b
  7009  0036AA  1779               	andwf	floorf@u& (0+255),f,b
  7010  0036AC  516E               	movf	(??_floorf+1)& (0+255),w,b
  7011  0036AE  177A               	andwf	(floorf@u+1)& (0+255),f,b
  7012  0036B0  516F               	movf	(??_floorf+2)& (0+255),w,b
  7013  0036B2  177B               	andwf	(floorf@u+2)& (0+255),f,b
  7014  0036B4  5170               	movf	(??_floorf+3)& (0+255),w,b
  7015  0036B6  177C               	andwf	(floorf@u+3)& (0+255),f,b
  7016  0036B8  EFA2  F01B         	goto	l8311
  7017  0036BC                     l8303:
  7018                           
  7019                           ; BSR set to: 0
  7020  0036BC  C079  F06D         	movff	floorf@u,??_floorf
  7021  0036C0  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  7022  0036C4  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  7023  0036C8  C07C  F070         	movff	floorf@u+3,??_floorf+3
  7024  0036CC  0E20               	movlw	32
  7025  0036CE  EF6E  F01B         	goto	u8800
  7026  0036D2                     u8805:
  7027  0036D2  90D8               	bcf	status,0,c
  7028  0036D4  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  7029  0036D6  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  7030  0036D8  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  7031  0036DA  336D               	rrcf	??_floorf& (0+255),f,b
  7032  0036DC                     u8800:
  7033  0036DC  2EE8               	decfsz	wreg,f,c
  7034  0036DE  EF69  F01B         	goto	u8805
  7035  0036E2  516D               	movf	??_floorf& (0+255),w,b
  7036  0036E4  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  7037  0036E6  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  7038  0036E8  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7039  0036EA  A4D8               	btfss	status,2,c
  7040  0036EC  EF7A  F01B         	goto	u8811
  7041  0036F0  EF7C  F01B         	goto	u8810
  7042  0036F4                     u8811:
  7043  0036F4  EF86  F01B         	goto	l8307
  7044  0036F8                     u8810:
  7045  0036F8                     
  7046                           ; BSR set to: 0
  7047  0036F8  0E00               	movlw	0
  7048  0036FA  6F79               	movwf	floorf@u& (0+255),b
  7049  0036FC  0E00               	movlw	0
  7050  0036FE  6F7A               	movwf	(floorf@u+1)& (0+255),b
  7051  003700  0E00               	movlw	0
  7052  003702  6F7B               	movwf	(floorf@u+2)& (0+255),b
  7053  003704  0E00               	movlw	0
  7054  003706  6F7C               	movwf	(floorf@u+3)& (0+255),b
  7055  003708  EFA2  F01B         	goto	l8311
  7056  00370C                     l8307:
  7057                           
  7058                           ; BSR set to: 0
  7059  00370C  90D8               	bcf	status,0,c
  7060  00370E  3579               	rlcf	floorf@u& (0+255),w,b
  7061  003710  6F6D               	movwf	??_floorf& (0+255),b
  7062  003712  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  7063  003714  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7064  003716  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  7065  003718  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7066  00371A  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  7067  00371C  6F70               	movwf	(??_floorf+3)& (0+255),b
  7068  00371E  516D               	movf	??_floorf& (0+255),w,b
  7069  003720  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  7070  003722  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  7071  003724  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7072  003726  B4D8               	btfsc	status,2,c
  7073  003728  EF98  F01B         	goto	u8821
  7074  00372C  EF9A  F01B         	goto	u8820
  7075  003730                     u8821:
  7076  003730  EFA2  F01B         	goto	l8311
  7077  003734                     u8820:
  7078  003734                     
  7079                           ; BSR set to: 0
  7080  003734  0E00               	movlw	0
  7081  003736  6F79               	movwf	floorf@u& (0+255),b
  7082  003738  0E00               	movlw	0
  7083  00373A  6F7A               	movwf	(floorf@u+1)& (0+255),b
  7084  00373C  0E80               	movlw	128
  7085  00373E  6F7B               	movwf	(floorf@u+2)& (0+255),b
  7086  003740  0EBF               	movlw	191
  7087  003742  6F7C               	movwf	(floorf@u+3)& (0+255),b
  7088  003744                     l8311:
  7089                           
  7090                           ; BSR set to: 0
  7091  003744  C079  F036         	movff	floorf@u,?_floorf
  7092  003748  C07A  F037         	movff	floorf@u+1,?_floorf+1
  7093  00374C  C07B  F038         	movff	floorf@u+2,?_floorf+2
  7094  003750  C07C  F039         	movff	floorf@u+3,?_floorf+3
  7095  003754                     l2294:
  7096                           
  7097                           ; BSR set to: 0
  7098  003754  0012               	return		;funcret
  7099  003756                     __end_of_floorf:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function ___fpclassifyf *****************
  7103 ;; Defined at:
  7104 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  x               4   19[COMRAM] float 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  u               4   29[COMRAM] struct .
  7109 ;;  e               2   27[COMRAM] int 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  2   19[COMRAM] int 
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;Total ram usage:       14 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 8
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_efgtoa
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text20
  7134  004836                     __ptext20:
  7135                           	callstack 0
  7136  004836                     ___fpclassifyf:
  7137                           	callstack 16
  7138  004836  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7139  00483A  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7140  00483E  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7141  004842  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7142  004846  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  7143  00484A  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7144  00484E  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7145  004852  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7146  004856  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  7147  00485A  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7148  00485E  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7149  004862  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7150  004866  0E18               	movlw	24
  7151  004868  EF3B  F024         	goto	u8610
  7152  00486C                     u8615:
  7153  00486C  90D8               	bcf	status,0,c
  7154  00486E  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  7155  004870  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  7156  004872  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  7157  004874  3218               	rrcf	??___fpclassifyf^0,f,c
  7158  004876                     u8610:
  7159  004876  2EE8               	decfsz	wreg,f,c
  7160  004878  EF36  F024         	goto	u8615
  7161  00487C  5018               	movf	??___fpclassifyf^0,w,c
  7162  00487E  6E1C               	movwf	___fpclassifyf@e^0,c
  7163  004880  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  7164  004882  501C               	movf	___fpclassifyf@e^0,w,c
  7165  004884  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7166  004886  A4D8               	btfss	status,2,c
  7167  004888  EF48  F024         	goto	u8621
  7168  00488C  EF4A  F024         	goto	u8620
  7169  004890                     u8621:
  7170  004890  EF6A  F024         	goto	l8263
  7171  004894                     u8620:
  7172  004894  90D8               	bcf	status,0,c
  7173  004896  341E               	rlcf	___fpclassifyf@u^0,w,c
  7174  004898  6E18               	movwf	??___fpclassifyf^0,c
  7175  00489A  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7176  00489C  6E19               	movwf	(??___fpclassifyf+1)^0,c
  7177  00489E  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7178  0048A0  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  7179  0048A2  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7180  0048A4  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  7181  0048A6  5018               	movf	??___fpclassifyf^0,w,c
  7182  0048A8  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  7183  0048AA  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  7184  0048AC  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  7185  0048AE  A4D8               	btfss	status,2,c
  7186  0048B0  EF5C  F024         	goto	u8631
  7187  0048B4  EF5E  F024         	goto	u8630
  7188  0048B8                     u8631:
  7189  0048B8  EF64  F024         	goto	l8259
  7190  0048BC                     u8630:
  7191  0048BC  0E00               	movlw	0
  7192  0048BE  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7193  0048C0  0E02               	movlw	2
  7194  0048C2  6E14               	movwf	?___fpclassifyf^0,c
  7195  0048C4  EF99  F024         	goto	l2280
  7196  0048C8                     l8259:
  7197  0048C8  0E00               	movlw	0
  7198  0048CA  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7199  0048CC  0E03               	movlw	3
  7200  0048CE  6E14               	movwf	?___fpclassifyf^0,c
  7201  0048D0  EF99  F024         	goto	l2280
  7202  0048D4                     l8263:
  7203  0048D4  281C               	incf	___fpclassifyf@e^0,w,c
  7204  0048D6  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7205  0048D8  A4D8               	btfss	status,2,c
  7206  0048DA  EF71  F024         	goto	u8641
  7207  0048DE  EF73  F024         	goto	u8640
  7208  0048E2                     u8641:
  7209  0048E2  EF95  F024         	goto	l8269
  7210  0048E6                     u8640:
  7211  0048E6  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  7212  0048EA  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7213  0048EE  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7214  0048F2  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7215  0048F6  0E09               	movlw	9
  7216  0048F8                     u8655:
  7217  0048F8  90D8               	bcf	status,0,c
  7218  0048FA  3618               	rlcf	??___fpclassifyf^0,f,c
  7219  0048FC  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  7220  0048FE  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  7221  004900  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  7222  004902  2EE8               	decfsz	wreg,f,c
  7223  004904  EF7C  F024         	goto	u8655
  7224  004908  5018               	movf	??___fpclassifyf^0,w,c
  7225  00490A  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  7226  00490C  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  7227  00490E  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  7228  004910  B4D8               	btfsc	status,2,c
  7229  004912  EF8D  F024         	goto	u8661
  7230  004916  EF90  F024         	goto	u8660
  7231  00491A                     u8661:
  7232  00491A  0E01               	movlw	1
  7233  00491C  EF91  F024         	goto	u8670
  7234  004920                     u8660:
  7235  004920  0E00               	movlw	0
  7236  004922                     u8670:
  7237  004922  6E14               	movwf	?___fpclassifyf^0,c
  7238  004924  6A15               	clrf	(?___fpclassifyf+1)^0,c
  7239  004926  EF99  F024         	goto	l2280
  7240  00492A                     l8269:
  7241  00492A  0E00               	movlw	0
  7242  00492C  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7243  00492E  0E04               	movlw	4
  7244  004930  6E14               	movwf	?___fpclassifyf^0,c
  7245  004932                     l2280:
  7246  004932  0012               	return		;funcret
  7247  004934                     __end_of___fpclassifyf:
  7248                           	callstack 0
  7249                           
  7250 ;; *************** function ___flsub *****************
  7251 ;; Defined at:
  7252 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  b               4   25[BANK0 ] int 
  7255 ;;  a               4   29[BANK0 ] int 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  4   25[BANK0 ] int 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:        8 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 9
  7274 ;; This function calls:
  7275 ;;		___fladd
  7276 ;; This function is called by:
  7277 ;;		_efgtoa
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text21
  7282  005642                     __ptext21:
  7283                           	callstack 0
  7284  005642                     ___flsub:
  7285                           	callstack 15
  7286  005642  0E00               	movlw	0
  7287  005644  0100               	movlb	0	; () banked
  7288  005646  1B7D               	xorwf	___flsub@a& (0+255),f,b
  7289  005648  0E00               	movlw	0
  7290  00564A  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  7291  00564C  0E00               	movlw	0
  7292  00564E  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  7293  005650  0E80               	movlw	128
  7294  005652  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  7295  005654                     
  7296                           ; BSR set to: 0
  7297  005654  C079  F06D         	movff	___flsub@b,___fladd@b
  7298  005658  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  7299  00565C  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  7300  005660  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  7301  005664  C07D  F071         	movff	___flsub@a,___fladd@a
  7302  005668  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  7303  00566C  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  7304  005670  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  7305  005674  EC50  F011         	call	___fladd	;wreg free
  7306  005678  C06D  F079         	movff	?___fladd,?___flsub
  7307  00567C  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  7308  005680  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  7309  005684  C070  F07C         	movff	?___fladd+3,?___flsub+3
  7310  005688  0012               	return		;funcret
  7311  00568A                     __end_of___flsub:
  7312                           	callstack 0
  7313                           
  7314 ;; *************** function ___flneg *****************
  7315 ;; Defined at:
  7316 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  f1              4   19[COMRAM] int 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  4   19[COMRAM] int 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;Total ram usage:        4 bytes
  7335 ;; Hardware stack levels used: 1
  7336 ;; Hardware stack levels required when called: 8
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_efgtoa
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text22
  7345  00583A                     __ptext22:
  7346                           	callstack 0
  7347  00583A                     ___flneg:
  7348                           	callstack 16
  7349  00583A  5014               	movf	___flneg@f1^0,w,c
  7350  00583C  1015               	iorwf	(___flneg@f1+1)^0,w,c
  7351  00583E  1016               	iorwf	(___flneg@f1+2)^0,w,c
  7352  005840  1017               	iorwf	(___flneg@f1+3)^0,w,c
  7353  005842  B4D8               	btfsc	status,2,c
  7354  005844  EF26  F02C         	goto	u8481
  7355  005848  EF28  F02C         	goto	u8480
  7356  00584C                     u8481:
  7357  00584C  EF30  F02C         	goto	l8177
  7358  005850                     u8480:
  7359  005850  0E00               	movlw	0
  7360  005852  1A14               	xorwf	___flneg@f1^0,f,c
  7361  005854  0E00               	movlw	0
  7362  005856  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  7363  005858  0E00               	movlw	0
  7364  00585A  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  7365  00585C  0E80               	movlw	128
  7366  00585E  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  7367  005860                     l8177:
  7368  005860  C014  F014         	movff	___flneg@f1,?___flneg
  7369  005864  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  7370  005868  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  7371  00586C  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  7372  005870  0012               	return		;funcret
  7373  005872                     __end_of___flneg:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function ___flge *****************
  7377 ;; Defined at:
  7378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  ff1             4   13[BANK0 ] int 
  7381 ;;  ff2             4   17[BANK0 ] int 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;		None
  7384 ;; Return value:  Size  Location     Type
  7385 ;;		None               void
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7393 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;Total ram usage:       12 bytes
  7398 ;; Hardware stack levels used: 1
  7399 ;; Hardware stack levels required when called: 8
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_loop
  7404 ;;		_checkBatt
  7405 ;;		_efgtoa
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text23
  7410  004730                     __ptext23:
  7411                           	callstack 0
  7412  004730                     ___flge:
  7413                           	callstack 16
  7414  004730  0E00               	movlw	0
  7415  004732  0100               	movlb	0	; () banked
  7416  004734  156D               	andwf	___flge@ff1& (0+255),w,b
  7417  004736  6E36               	movwf	??___flge^0,c
  7418  004738  0E00               	movlw	0
  7419  00473A  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  7420  00473C  6E37               	movwf	(??___flge+1)^0,c
  7421  00473E  0E80               	movlw	128
  7422  004740  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  7423  004742  6E38               	movwf	(??___flge+2)^0,c
  7424  004744  0E7F               	movlw	127
  7425  004746  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  7426  004748  6E39               	movwf	(??___flge+3)^0,c
  7427  00474A  5036               	movf	??___flge^0,w,c
  7428  00474C  1037               	iorwf	(??___flge+1)^0,w,c
  7429  00474E  1038               	iorwf	(??___flge+2)^0,w,c
  7430  004750  1039               	iorwf	(??___flge+3)^0,w,c
  7431  004752  A4D8               	btfss	status,2,c
  7432  004754  EFAE  F023         	goto	u8431
  7433  004758  EFB0  F023         	goto	u8430
  7434  00475C                     u8431:
  7435  00475C  EFB8  F023         	goto	l8155
  7436  004760                     u8430:
  7437  004760                     
  7438                           ; BSR set to: 0
  7439  004760  0E00               	movlw	0
  7440  004762  6F6D               	movwf	___flge@ff1& (0+255),b
  7441  004764  0E00               	movlw	0
  7442  004766  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  7443  004768  0E00               	movlw	0
  7444  00476A  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  7445  00476C  0E00               	movlw	0
  7446  00476E  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  7447  004770                     l8155:
  7448                           
  7449                           ; BSR set to: 0
  7450  004770  0E00               	movlw	0
  7451  004772  1571               	andwf	___flge@ff2& (0+255),w,b
  7452  004774  6E36               	movwf	??___flge^0,c
  7453  004776  0E00               	movlw	0
  7454  004778  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  7455  00477A  6E37               	movwf	(??___flge+1)^0,c
  7456  00477C  0E80               	movlw	128
  7457  00477E  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  7458  004780  6E38               	movwf	(??___flge+2)^0,c
  7459  004782  0E7F               	movlw	127
  7460  004784  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  7461  004786  6E39               	movwf	(??___flge+3)^0,c
  7462  004788  5036               	movf	??___flge^0,w,c
  7463  00478A  1037               	iorwf	(??___flge+1)^0,w,c
  7464  00478C  1038               	iorwf	(??___flge+2)^0,w,c
  7465  00478E  1039               	iorwf	(??___flge+3)^0,w,c
  7466  004790  A4D8               	btfss	status,2,c
  7467  004792  EFCD  F023         	goto	u8441
  7468  004796  EFCF  F023         	goto	u8440
  7469  00479A                     u8441:
  7470  00479A  EFD7  F023         	goto	l8159
  7471  00479E                     u8440:
  7472  00479E                     
  7473                           ; BSR set to: 0
  7474  00479E  0E00               	movlw	0
  7475  0047A0  6F71               	movwf	___flge@ff2& (0+255),b
  7476  0047A2  0E00               	movlw	0
  7477  0047A4  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  7478  0047A6  0E00               	movlw	0
  7479  0047A8  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  7480  0047AA  0E00               	movlw	0
  7481  0047AC  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  7482  0047AE                     l8159:
  7483                           
  7484                           ; BSR set to: 0
  7485  0047AE  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  7486  0047B0  EFDC  F023         	goto	u8451
  7487  0047B4  EFDE  F023         	goto	u8450
  7488  0047B8                     u8451:
  7489  0047B8  EFE7  F023         	goto	l8163
  7490  0047BC                     u8450:
  7491  0047BC                     
  7492                           ; BSR set to: 0
  7493  0047BC  6D6D               	negf	___flge@ff1& (0+255),b
  7494  0047BE  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  7495  0047C0  B0D8               	btfsc	status,0,c
  7496  0047C2  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  7497  0047C4  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  7498  0047C6  B0D8               	btfsc	status,0,c
  7499  0047C8  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  7500  0047CA  0E80               	movlw	128
  7501  0047CC  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7502  0047CE                     l8163:
  7503                           
  7504                           ; BSR set to: 0
  7505  0047CE  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  7506  0047D0  EFEC  F023         	goto	u8461
  7507  0047D4  EFEE  F023         	goto	u8460
  7508  0047D8                     u8461:
  7509  0047D8  EFF7  F023         	goto	l1670
  7510  0047DC                     u8460:
  7511  0047DC                     
  7512                           ; BSR set to: 0
  7513  0047DC  6D71               	negf	___flge@ff2& (0+255),b
  7514  0047DE  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  7515  0047E0  B0D8               	btfsc	status,0,c
  7516  0047E2  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  7517  0047E4  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  7518  0047E6  B0D8               	btfsc	status,0,c
  7519  0047E8  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  7520  0047EA  0E80               	movlw	128
  7521  0047EC  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7522  0047EE                     l1670:
  7523                           
  7524                           ; BSR set to: 0
  7525  0047EE  0E00               	movlw	0
  7526  0047F0  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  7527  0047F2  0E00               	movlw	0
  7528  0047F4  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7529  0047F6  0E00               	movlw	0
  7530  0047F8  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7531  0047FA  0E80               	movlw	128
  7532  0047FC  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7533  0047FE  0E00               	movlw	0
  7534  004800  1B71               	xorwf	___flge@ff2& (0+255),f,b
  7535  004802  0E00               	movlw	0
  7536  004804  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7537  004806  0E00               	movlw	0
  7538  004808  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7539  00480A  0E80               	movlw	128
  7540  00480C  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7541  00480E  5171               	movf	___flge@ff2& (0+255),w,b
  7542  004810  5D6D               	subwf	___flge@ff1& (0+255),w,b
  7543  004812  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  7544  004814  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7545  004816  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  7546  004818  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7547  00481A  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  7548  00481C  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7549  00481E  B0D8               	btfsc	status,0,c
  7550  004820  EF14  F024         	goto	u8471
  7551  004824  EF16  F024         	goto	u8470
  7552  004828                     u8471:
  7553  004828  EF19  F024         	goto	l8169
  7554  00482C                     u8470:
  7555  00482C                     
  7556                           ; BSR set to: 0
  7557  00482C  90D8               	bcf	status,0,c
  7558  00482E  EF1A  F024         	goto	l1675
  7559  004832                     l8169:
  7560                           
  7561                           ; BSR set to: 0
  7562  004832  80D8               	bsf	status,0,c
  7563  004834                     l1675:
  7564                           
  7565                           ; BSR set to: 0
  7566  004834  0012               	return		;funcret
  7567  004836                     __end_of___flge:
  7568                           	callstack 0
  7569                           
  7570 ;; *************** function ___fleq *****************
  7571 ;; Defined at:
  7572 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  ff1             4   19[COMRAM] int 
  7575 ;;  ff2             4   23[COMRAM] int 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;		None               void
  7580 ;; Registers used:
  7581 ;;		wreg, status,2, status,0
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7587 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;Total ram usage:       12 bytes
  7592 ;; Hardware stack levels used: 1
  7593 ;; Hardware stack levels required when called: 8
  7594 ;; This function calls:
  7595 ;;		Nothing
  7596 ;; This function is called by:
  7597 ;;		_efgtoa
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text24
  7602  004ECA                     __ptext24:
  7603                           	callstack 0
  7604  004ECA                     ___fleq:
  7605                           	callstack 16
  7606  004ECA  0E00               	movlw	0
  7607  004ECC  1414               	andwf	___fleq@ff1^0,w,c
  7608  004ECE  6E1C               	movwf	??___fleq^0,c
  7609  004ED0  0E00               	movlw	0
  7610  004ED2  1415               	andwf	(___fleq@ff1+1)^0,w,c
  7611  004ED4  6E1D               	movwf	(??___fleq+1)^0,c
  7612  004ED6  0E80               	movlw	128
  7613  004ED8  1416               	andwf	(___fleq@ff1+2)^0,w,c
  7614  004EDA  6E1E               	movwf	(??___fleq+2)^0,c
  7615  004EDC  0E7F               	movlw	127
  7616  004EDE  1417               	andwf	(___fleq@ff1+3)^0,w,c
  7617  004EE0  6E1F               	movwf	(??___fleq+3)^0,c
  7618  004EE2  501C               	movf	??___fleq^0,w,c
  7619  004EE4  101D               	iorwf	(??___fleq+1)^0,w,c
  7620  004EE6  101E               	iorwf	(??___fleq+2)^0,w,c
  7621  004EE8  101F               	iorwf	(??___fleq+3)^0,w,c
  7622  004EEA  A4D8               	btfss	status,2,c
  7623  004EEC  EF7A  F027         	goto	u8401
  7624  004EF0  EF7C  F027         	goto	u8400
  7625  004EF4                     u8401:
  7626  004EF4  EF84  F027         	goto	l8139
  7627  004EF8                     u8400:
  7628  004EF8  0E00               	movlw	0
  7629  004EFA  6E14               	movwf	___fleq@ff1^0,c
  7630  004EFC  0E00               	movlw	0
  7631  004EFE  6E15               	movwf	(___fleq@ff1+1)^0,c
  7632  004F00  0E00               	movlw	0
  7633  004F02  6E16               	movwf	(___fleq@ff1+2)^0,c
  7634  004F04  0E00               	movlw	0
  7635  004F06  6E17               	movwf	(___fleq@ff1+3)^0,c
  7636  004F08                     l8139:
  7637  004F08  0E00               	movlw	0
  7638  004F0A  1418               	andwf	___fleq@ff2^0,w,c
  7639  004F0C  6E1C               	movwf	??___fleq^0,c
  7640  004F0E  0E00               	movlw	0
  7641  004F10  1419               	andwf	(___fleq@ff2+1)^0,w,c
  7642  004F12  6E1D               	movwf	(??___fleq+1)^0,c
  7643  004F14  0E80               	movlw	128
  7644  004F16  141A               	andwf	(___fleq@ff2+2)^0,w,c
  7645  004F18  6E1E               	movwf	(??___fleq+2)^0,c
  7646  004F1A  0E7F               	movlw	127
  7647  004F1C  141B               	andwf	(___fleq@ff2+3)^0,w,c
  7648  004F1E  6E1F               	movwf	(??___fleq+3)^0,c
  7649  004F20  501C               	movf	??___fleq^0,w,c
  7650  004F22  101D               	iorwf	(??___fleq+1)^0,w,c
  7651  004F24  101E               	iorwf	(??___fleq+2)^0,w,c
  7652  004F26  101F               	iorwf	(??___fleq+3)^0,w,c
  7653  004F28  A4D8               	btfss	status,2,c
  7654  004F2A  EF99  F027         	goto	u8411
  7655  004F2E  EF9B  F027         	goto	u8410
  7656  004F32                     u8411:
  7657  004F32  EFA3  F027         	goto	l8143
  7658  004F36                     u8410:
  7659  004F36  0E00               	movlw	0
  7660  004F38  6E18               	movwf	___fleq@ff2^0,c
  7661  004F3A  0E00               	movlw	0
  7662  004F3C  6E19               	movwf	(___fleq@ff2+1)^0,c
  7663  004F3E  0E00               	movlw	0
  7664  004F40  6E1A               	movwf	(___fleq@ff2+2)^0,c
  7665  004F42  0E00               	movlw	0
  7666  004F44  6E1B               	movwf	(___fleq@ff2+3)^0,c
  7667  004F46                     l8143:
  7668  004F46  5018               	movf	___fleq@ff2^0,w,c
  7669  004F48  1814               	xorwf	___fleq@ff1^0,w,c
  7670  004F4A  E10F               	bnz	u8420
  7671  004F4C  5019               	movf	(___fleq@ff2+1)^0,w,c
  7672  004F4E  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  7673  004F50  E10C               	bnz	u8420
  7674  004F52  501A               	movf	(___fleq@ff2+2)^0,w,c
  7675  004F54  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  7676  004F56  E109               	bnz	u8420
  7677  004F58  501B               	movf	(___fleq@ff2+3)^0,w,c
  7678  004F5A  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  7679  004F5C  B4D8               	btfsc	status,2,c
  7680  004F5E  EFB3  F027         	goto	u8421
  7681  004F62  EFB5  F027         	goto	u8420
  7682  004F66                     u8421:
  7683  004F66  EFB8  F027         	goto	l8147
  7684  004F6A                     u8420:
  7685  004F6A  90D8               	bcf	status,0,c
  7686  004F6C  EFB9  F027         	goto	l1664
  7687  004F70                     l8147:
  7688  004F70  80D8               	bsf	status,0,c
  7689  004F72                     l1664:
  7690  004F72  0012               	return		;funcret
  7691  004F74                     __end_of___fleq:
  7692                           	callstack 0
  7693                           
  7694 ;; *************** function ___fldiv *****************
  7695 ;; Defined at:
  7696 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  b               4   41[COMRAM] int 
  7699 ;;  a               4   45[COMRAM] int 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  grs             4    7[BANK0 ] unsigned long 
  7702 ;;  rem             4    0[BANK0 ] unsigned long 
  7703 ;;  new_exp         2    5[BANK0 ] short 
  7704 ;;  aexp            1   12[BANK0 ] unsigned char 
  7705 ;;  bexp            1   11[BANK0 ] unsigned char 
  7706 ;;  sign            1    4[BANK0 ] unsigned char 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  4   41[COMRAM] unsigned char 
  7709 ;; Registers used:
  7710 ;;		wreg, status,2, status,0
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7716 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7719 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7720 ;;Total ram usage:       25 bytes
  7721 ;; Hardware stack levels used: 1
  7722 ;; Hardware stack levels required when called: 8
  7723 ;; This function calls:
  7724 ;;		Nothing
  7725 ;; This function is called by:
  7726 ;;		_getBatteryVoltage
  7727 ;;		_setSteering
  7728 ;;		_efgtoa
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	text25
  7733  002BB2                     __ptext25:
  7734                           	callstack 0
  7735  002BB2                     ___fldiv:
  7736                           	callstack 19
  7737  002BB2  502D               	movf	(___fldiv@b+3)^0,w,c
  7738  002BB4  0B80               	andlw	128
  7739  002BB6  0100               	movlb	0	; () banked
  7740  002BB8  6F64               	movwf	___fldiv@sign& (0+255),b
  7741  002BBA  502D               	movf	(___fldiv@b+3)^0,w,c
  7742  002BBC  242D               	addwf	(___fldiv@b+3)^0,w,c
  7743  002BBE  6F6B               	movwf	___fldiv@bexp& (0+255),b
  7744  002BC0                     
  7745                           ; BSR set to: 0
  7746  002BC0  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  7747  002BC2  EFE5  F015         	goto	u7861
  7748  002BC6  EFE7  F015         	goto	u7860
  7749  002BCA                     u7861:
  7750  002BCA  EFE8  F015         	goto	l7787
  7751  002BCE                     u7860:
  7752  002BCE                     
  7753                           ; BSR set to: 0
  7754  002BCE  816B               	bsf	___fldiv@bexp& (0+255),0,b
  7755  002BD0                     l7787:
  7756                           
  7757                           ; BSR set to: 0
  7758  002BD0  516B               	movf	___fldiv@bexp& (0+255),w,b
  7759  002BD2  B4D8               	btfsc	status,2,c
  7760  002BD4  EFEE  F015         	goto	u7871
  7761  002BD8  EFF0  F015         	goto	u7870
  7762  002BDC                     u7871:
  7763  002BDC  EF05  F016         	goto	l7797
  7764  002BE0                     u7870:
  7765  002BE0                     
  7766                           ; BSR set to: 0
  7767  002BE0  296B               	incf	___fldiv@bexp& (0+255),w,b
  7768  002BE2  A4D8               	btfss	status,2,c
  7769  002BE4  EFF6  F015         	goto	u7881
  7770  002BE8  EFF8  F015         	goto	u7880
  7771  002BEC                     u7881:
  7772  002BEC  EF00  F016         	goto	l7793
  7773  002BF0                     u7880:
  7774  002BF0                     
  7775                           ; BSR set to: 0
  7776  002BF0  0E00               	movlw	0
  7777  002BF2  6E2A               	movwf	___fldiv@b^0,c
  7778  002BF4  0E00               	movlw	0
  7779  002BF6  6E2B               	movwf	(___fldiv@b+1)^0,c
  7780  002BF8  0E00               	movlw	0
  7781  002BFA  6E2C               	movwf	(___fldiv@b+2)^0,c
  7782  002BFC  0E00               	movlw	0
  7783  002BFE  6E2D               	movwf	(___fldiv@b+3)^0,c
  7784  002C00                     l7793:
  7785                           
  7786                           ; BSR set to: 0
  7787  002C00  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  7788  002C02                     
  7789                           ; BSR set to: 0
  7790  002C02  0E00               	movlw	0
  7791  002C04  6E2D               	movwf	(___fldiv@b+3)^0,c
  7792  002C06  EF0D  F016         	goto	l7799
  7793  002C0A                     l7797:
  7794                           
  7795                           ; BSR set to: 0
  7796  002C0A  0E00               	movlw	0
  7797  002C0C  6E2A               	movwf	___fldiv@b^0,c
  7798  002C0E  0E00               	movlw	0
  7799  002C10  6E2B               	movwf	(___fldiv@b+1)^0,c
  7800  002C12  0E00               	movlw	0
  7801  002C14  6E2C               	movwf	(___fldiv@b+2)^0,c
  7802  002C16  0E00               	movlw	0
  7803  002C18  6E2D               	movwf	(___fldiv@b+3)^0,c
  7804  002C1A                     l7799:
  7805                           
  7806                           ; BSR set to: 0
  7807  002C1A  5031               	movf	(___fldiv@a+3)^0,w,c
  7808  002C1C  0B80               	andlw	128
  7809  002C1E  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  7810  002C20                     
  7811                           ; BSR set to: 0
  7812  002C20  5031               	movf	(___fldiv@a+3)^0,w,c
  7813  002C22  2431               	addwf	(___fldiv@a+3)^0,w,c
  7814  002C24  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7815  002C26                     
  7816                           ; BSR set to: 0
  7817  002C26  AE30               	btfss	(___fldiv@a+2)^0,7,c
  7818  002C28  EF18  F016         	goto	u7891
  7819  002C2C  EF1A  F016         	goto	u7890
  7820  002C30                     u7891:
  7821  002C30  EF1B  F016         	goto	l7807
  7822  002C34                     u7890:
  7823  002C34                     
  7824                           ; BSR set to: 0
  7825  002C34  816C               	bsf	___fldiv@aexp& (0+255),0,b
  7826  002C36                     l7807:
  7827                           
  7828                           ; BSR set to: 0
  7829  002C36  516C               	movf	___fldiv@aexp& (0+255),w,b
  7830  002C38  B4D8               	btfsc	status,2,c
  7831  002C3A  EF21  F016         	goto	u7901
  7832  002C3E  EF23  F016         	goto	u7900
  7833  002C42                     u7901:
  7834  002C42  EF38  F016         	goto	l7817
  7835  002C46                     u7900:
  7836  002C46                     
  7837                           ; BSR set to: 0
  7838  002C46  296C               	incf	___fldiv@aexp& (0+255),w,b
  7839  002C48  A4D8               	btfss	status,2,c
  7840  002C4A  EF29  F016         	goto	u7911
  7841  002C4E  EF2B  F016         	goto	u7910
  7842  002C52                     u7911:
  7843  002C52  EF33  F016         	goto	l7813
  7844  002C56                     u7910:
  7845  002C56                     
  7846                           ; BSR set to: 0
  7847  002C56  0E00               	movlw	0
  7848  002C58  6E2E               	movwf	___fldiv@a^0,c
  7849  002C5A  0E00               	movlw	0
  7850  002C5C  6E2F               	movwf	(___fldiv@a+1)^0,c
  7851  002C5E  0E00               	movlw	0
  7852  002C60  6E30               	movwf	(___fldiv@a+2)^0,c
  7853  002C62  0E00               	movlw	0
  7854  002C64  6E31               	movwf	(___fldiv@a+3)^0,c
  7855  002C66                     l7813:
  7856                           
  7857                           ; BSR set to: 0
  7858  002C66  8E30               	bsf	(___fldiv@a+2)^0,7,c
  7859  002C68                     
  7860                           ; BSR set to: 0
  7861  002C68  0E00               	movlw	0
  7862  002C6A  6E31               	movwf	(___fldiv@a+3)^0,c
  7863  002C6C  EF40  F016         	goto	l7819
  7864  002C70                     l7817:
  7865                           
  7866                           ; BSR set to: 0
  7867  002C70  0E00               	movlw	0
  7868  002C72  6E2E               	movwf	___fldiv@a^0,c
  7869  002C74  0E00               	movlw	0
  7870  002C76  6E2F               	movwf	(___fldiv@a+1)^0,c
  7871  002C78  0E00               	movlw	0
  7872  002C7A  6E30               	movwf	(___fldiv@a+2)^0,c
  7873  002C7C  0E00               	movlw	0
  7874  002C7E  6E31               	movwf	(___fldiv@a+3)^0,c
  7875  002C80                     l7819:
  7876                           
  7877                           ; BSR set to: 0
  7878  002C80  502E               	movf	___fldiv@a^0,w,c
  7879  002C82  102F               	iorwf	(___fldiv@a+1)^0,w,c
  7880  002C84  1030               	iorwf	(___fldiv@a+2)^0,w,c
  7881  002C86  1031               	iorwf	(___fldiv@a+3)^0,w,c
  7882  002C88  A4D8               	btfss	status,2,c
  7883  002C8A  EF49  F016         	goto	u7921
  7884  002C8E  EF4B  F016         	goto	u7920
  7885  002C92                     u7921:
  7886  002C92  EF63  F016         	goto	l7831
  7887  002C96                     u7920:
  7888  002C96                     
  7889                           ; BSR set to: 0
  7890  002C96  0E00               	movlw	0
  7891  002C98  6E2A               	movwf	___fldiv@b^0,c
  7892  002C9A  0E00               	movlw	0
  7893  002C9C  6E2B               	movwf	(___fldiv@b+1)^0,c
  7894  002C9E  0E00               	movlw	0
  7895  002CA0  6E2C               	movwf	(___fldiv@b+2)^0,c
  7896  002CA2  0E00               	movlw	0
  7897  002CA4  6E2D               	movwf	(___fldiv@b+3)^0,c
  7898  002CA6                     
  7899                           ; BSR set to: 0
  7900  002CA6  0E80               	movlw	128
  7901  002CA8  122C               	iorwf	(___fldiv@b+2)^0,f,c
  7902  002CAA  0E7F               	movlw	127
  7903  002CAC  122D               	iorwf	(___fldiv@b+3)^0,f,c
  7904  002CAE                     l7825:
  7905                           
  7906                           ; BSR set to: 0
  7907  002CAE  5164               	movf	___fldiv@sign& (0+255),w,b
  7908  002CB0  122D               	iorwf	(___fldiv@b+3)^0,f,c
  7909  002CB2                     
  7910                           ; BSR set to: 0
  7911  002CB2  C02A  F02A         	movff	___fldiv@b,?___fldiv
  7912  002CB6  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  7913  002CBA  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  7914  002CBE  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  7915  002CC2  EFA6  F017         	goto	l1987
  7916  002CC6                     l7831:
  7917                           
  7918                           ; BSR set to: 0
  7919  002CC6  516B               	movf	___fldiv@bexp& (0+255),w,b
  7920  002CC8  A4D8               	btfss	status,2,c
  7921  002CCA  EF69  F016         	goto	u7931
  7922  002CCE  EF6B  F016         	goto	u7930
  7923  002CD2                     u7931:
  7924  002CD2  EF75  F016         	goto	l7839
  7925  002CD6                     u7930:
  7926  002CD6                     
  7927                           ; BSR set to: 0
  7928  002CD6  0E00               	movlw	0
  7929  002CD8  6E2A               	movwf	?___fldiv^0,c
  7930  002CDA  0E00               	movlw	0
  7931  002CDC  6E2B               	movwf	(?___fldiv+1)^0,c
  7932  002CDE  0E00               	movlw	0
  7933  002CE0  6E2C               	movwf	(?___fldiv+2)^0,c
  7934  002CE2  0E00               	movlw	0
  7935  002CE4  6E2D               	movwf	(?___fldiv+3)^0,c
  7936  002CE6  EFA6  F017         	goto	l1987
  7937  002CEA                     l7839:
  7938                           
  7939                           ; BSR set to: 0
  7940  002CEA  516C               	movf	___fldiv@aexp& (0+255),w,b
  7941  002CEC  C06B  F032         	movff	___fldiv@bexp,??___fldiv
  7942  002CF0  6A33               	clrf	(??___fldiv+1)^0,c
  7943  002CF2  5E32               	subwf	??___fldiv^0,f,c
  7944  002CF4  0E00               	movlw	0
  7945  002CF6  5A33               	subwfb	(??___fldiv+1)^0,f,c
  7946  002CF8  0E7F               	movlw	127
  7947  002CFA  2432               	addwf	??___fldiv^0,w,c
  7948  002CFC  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7949  002CFE  0E00               	movlw	0
  7950  002D00  2033               	addwfc	(??___fldiv+1)^0,w,c
  7951  002D02  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7952  002D04                     
  7953                           ; BSR set to: 0
  7954  002D04  C02A  F060         	movff	___fldiv@b,___fldiv@rem
  7955  002D08  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  7956  002D0C  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  7957  002D10  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  7958  002D14                     
  7959                           ; BSR set to: 0
  7960  002D14  0E00               	movlw	0
  7961  002D16  6E2A               	movwf	___fldiv@b^0,c
  7962  002D18  0E00               	movlw	0
  7963  002D1A  6E2B               	movwf	(___fldiv@b+1)^0,c
  7964  002D1C  0E00               	movlw	0
  7965  002D1E  6E2C               	movwf	(___fldiv@b+2)^0,c
  7966  002D20  0E00               	movlw	0
  7967  002D22  6E2D               	movwf	(___fldiv@b+3)^0,c
  7968  002D24                     
  7969                           ; BSR set to: 0
  7970  002D24  0E00               	movlw	0
  7971  002D26  6F67               	movwf	___fldiv@grs& (0+255),b
  7972  002D28  0E00               	movlw	0
  7973  002D2A  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  7974  002D2C  0E00               	movlw	0
  7975  002D2E  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  7976  002D30  0E00               	movlw	0
  7977  002D32  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  7978  002D34                     
  7979                           ; BSR set to: 0
  7980  002D34  0E00               	movlw	0
  7981  002D36  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7982  002D38  EFD6  F016         	goto	l1989
  7983  002D3C                     l7849:
  7984                           
  7985                           ; BSR set to: 0
  7986  002D3C  516C               	movf	___fldiv@aexp& (0+255),w,b
  7987  002D3E  B4D8               	btfsc	status,2,c
  7988  002D40  EFA4  F016         	goto	u7941
  7989  002D44  EFA6  F016         	goto	u7940
  7990  002D48                     u7941:
  7991  002D48  EFBD  F016         	goto	l7857
  7992  002D4C                     u7940:
  7993  002D4C                     
  7994                           ; BSR set to: 0
  7995  002D4C  90D8               	bcf	status,0,c
  7996  002D4E  3760               	rlcf	___fldiv@rem& (0+255),f,b
  7997  002D50  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7998  002D52  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7999  002D54  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8000  002D56  90D8               	bcf	status,0,c
  8001  002D58  362A               	rlcf	___fldiv@b^0,f,c
  8002  002D5A  362B               	rlcf	(___fldiv@b+1)^0,f,c
  8003  002D5C  362C               	rlcf	(___fldiv@b+2)^0,f,c
  8004  002D5E  362D               	rlcf	(___fldiv@b+3)^0,f,c
  8005  002D60                     
  8006                           ; BSR set to: 0
  8007  002D60  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8008  002D62  EFB5  F016         	goto	u7951
  8009  002D66  EFB7  F016         	goto	u7950
  8010  002D6A                     u7951:
  8011  002D6A  EFB8  F016         	goto	l1992
  8012  002D6E                     u7950:
  8013  002D6E                     
  8014                           ; BSR set to: 0
  8015  002D6E  802A               	bsf	___fldiv@b^0,0,c
  8016  002D70                     l1992:
  8017                           
  8018                           ; BSR set to: 0
  8019  002D70  90D8               	bcf	status,0,c
  8020  002D72  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8021  002D74  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8022  002D76  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8023  002D78  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8024  002D7A                     l7857:
  8025                           
  8026                           ; BSR set to: 0
  8027  002D7A  502E               	movf	___fldiv@a^0,w,c
  8028  002D7C  5D60               	subwf	___fldiv@rem& (0+255),w,b
  8029  002D7E  502F               	movf	(___fldiv@a+1)^0,w,c
  8030  002D80  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8031  002D82  5030               	movf	(___fldiv@a+2)^0,w,c
  8032  002D84  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8033  002D86  5031               	movf	(___fldiv@a+3)^0,w,c
  8034  002D88  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8035  002D8A  A0D8               	btfss	status,0,c
  8036  002D8C  EFCA  F016         	goto	u7961
  8037  002D90  EFCC  F016         	goto	u7960
  8038  002D94                     u7961:
  8039  002D94  EFD5  F016         	goto	l7863
  8040  002D98                     u7960:
  8041  002D98                     
  8042                           ; BSR set to: 0
  8043  002D98  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8044  002D9A                     
  8045                           ; BSR set to: 0
  8046  002D9A  502E               	movf	___fldiv@a^0,w,c
  8047  002D9C  5F60               	subwf	___fldiv@rem& (0+255),f,b
  8048  002D9E  502F               	movf	(___fldiv@a+1)^0,w,c
  8049  002DA0  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8050  002DA2  5030               	movf	(___fldiv@a+2)^0,w,c
  8051  002DA4  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8052  002DA6  5031               	movf	(___fldiv@a+3)^0,w,c
  8053  002DA8  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8054  002DAA                     l7863:
  8055                           
  8056                           ; BSR set to: 0
  8057  002DAA  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  8058  002DAC                     l1989:
  8059                           
  8060                           ; BSR set to: 0
  8061  002DAC  0E19               	movlw	25
  8062  002DAE  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  8063  002DB0  EFDC  F016         	goto	u7971
  8064  002DB4  EFDE  F016         	goto	u7970
  8065  002DB8                     u7971:
  8066  002DB8  EF9E  F016         	goto	l7849
  8067  002DBC                     u7970:
  8068  002DBC                     
  8069                           ; BSR set to: 0
  8070  002DBC  5160               	movf	___fldiv@rem& (0+255),w,b
  8071  002DBE  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8072  002DC0  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8073  002DC2  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8074  002DC4  B4D8               	btfsc	status,2,c
  8075  002DC6  EFE7  F016         	goto	u7981
  8076  002DCA  EFE9  F016         	goto	u7980
  8077  002DCE                     u7981:
  8078  002DCE  EF01  F017         	goto	l7875
  8079  002DD2                     u7980:
  8080  002DD2                     
  8081                           ; BSR set to: 0
  8082  002DD2  8167               	bsf	___fldiv@grs& (0+255),0,b
  8083  002DD4  EF01  F017         	goto	l7875
  8084  002DD8                     l7869:
  8085                           
  8086                           ; BSR set to: 0
  8087  002DD8  90D8               	bcf	status,0,c
  8088  002DDA  362A               	rlcf	___fldiv@b^0,f,c
  8089  002DDC  362B               	rlcf	(___fldiv@b+1)^0,f,c
  8090  002DDE  362C               	rlcf	(___fldiv@b+2)^0,f,c
  8091  002DE0  362D               	rlcf	(___fldiv@b+3)^0,f,c
  8092  002DE2                     
  8093                           ; BSR set to: 0
  8094  002DE2  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8095  002DE4  EFF6  F016         	goto	u7991
  8096  002DE8  EFF8  F016         	goto	u7990
  8097  002DEC                     u7991:
  8098  002DEC  EFF9  F016         	goto	l1998
  8099  002DF0                     u7990:
  8100  002DF0                     
  8101                           ; BSR set to: 0
  8102  002DF0  802A               	bsf	___fldiv@b^0,0,c
  8103  002DF2                     l1998:
  8104                           
  8105                           ; BSR set to: 0
  8106  002DF2  90D8               	bcf	status,0,c
  8107  002DF4  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8108  002DF6  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8109  002DF8  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8110  002DFA  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8111  002DFC  0765               	decf	___fldiv@new_exp& (0+255),f,b
  8112  002DFE  A0D8               	btfss	status,0,c
  8113  002E00  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8114  002E02                     l7875:
  8115                           
  8116                           ; BSR set to: 0
  8117  002E02  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  8118  002E04  EF06  F017         	goto	u8001
  8119  002E08  EF08  F017         	goto	u8000
  8120  002E0C                     u8001:
  8121  002E0C  EFEC  F016         	goto	l7869
  8122  002E10                     u8000:
  8123  002E10                     
  8124                           ; BSR set to: 0
  8125  002E10  0E00               	movlw	0
  8126  002E12  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8127  002E14                     
  8128                           ; BSR set to: 0
  8129  002E14  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8130  002E16  EF0F  F017         	goto	u8011
  8131  002E1A  EF11  F017         	goto	u8010
  8132  002E1E                     u8011:
  8133  002E1E  EF35  F017         	goto	l2000
  8134  002E22                     u8010:
  8135  002E22                     
  8136                           ; BSR set to: 0
  8137  002E22  0EFF               	movlw	255
  8138  002E24  1567               	andwf	___fldiv@grs& (0+255),w,b
  8139  002E26  6E32               	movwf	??___fldiv^0,c
  8140  002E28  0EFF               	movlw	255
  8141  002E2A  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8142  002E2C  6E33               	movwf	(??___fldiv+1)^0,c
  8143  002E2E  0EFF               	movlw	255
  8144  002E30  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8145  002E32  6E34               	movwf	(??___fldiv+2)^0,c
  8146  002E34  0E7F               	movlw	127
  8147  002E36  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8148  002E38  6E35               	movwf	(??___fldiv+3)^0,c
  8149  002E3A  5032               	movf	??___fldiv^0,w,c
  8150  002E3C  1033               	iorwf	(??___fldiv+1)^0,w,c
  8151  002E3E  1034               	iorwf	(??___fldiv+2)^0,w,c
  8152  002E40  1035               	iorwf	(??___fldiv+3)^0,w,c
  8153  002E42  B4D8               	btfsc	status,2,c
  8154  002E44  EF26  F017         	goto	u8021
  8155  002E48  EF28  F017         	goto	u8020
  8156  002E4C                     u8021:
  8157  002E4C  EF2C  F017         	goto	l2001
  8158  002E50                     u8020:
  8159  002E50                     l7883:
  8160                           
  8161                           ; BSR set to: 0
  8162  002E50  0E01               	movlw	1
  8163  002E52  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8164  002E54  EF35  F017         	goto	l2000
  8165  002E58                     l2001:
  8166                           
  8167                           ; BSR set to: 0
  8168  002E58  A02A               	btfss	___fldiv@b^0,0,c
  8169  002E5A  EF31  F017         	goto	u8031
  8170  002E5E  EF33  F017         	goto	u8030
  8171  002E62                     u8031:
  8172  002E62  EF35  F017         	goto	l2000
  8173  002E66                     u8030:
  8174  002E66  EF28  F017         	goto	l7883
  8175  002E6A                     l2000:
  8176                           
  8177                           ; BSR set to: 0
  8178  002E6A  516C               	movf	___fldiv@aexp& (0+255),w,b
  8179  002E6C  B4D8               	btfsc	status,2,c
  8180  002E6E  EF3B  F017         	goto	u8041
  8181  002E72  EF3D  F017         	goto	u8040
  8182  002E76                     u8041:
  8183  002E76  EF61  F017         	goto	l7895
  8184  002E7A                     u8040:
  8185  002E7A                     
  8186                           ; BSR set to: 0
  8187  002E7A  0E01               	movlw	1
  8188  002E7C  262A               	addwf	___fldiv@b^0,f,c
  8189  002E7E  0E00               	movlw	0
  8190  002E80  222B               	addwfc	(___fldiv@b+1)^0,f,c
  8191  002E82  222C               	addwfc	(___fldiv@b+2)^0,f,c
  8192  002E84  222D               	addwfc	(___fldiv@b+3)^0,f,c
  8193  002E86                     
  8194                           ; BSR set to: 0
  8195  002E86  A02D               	btfss	(___fldiv@b+3)^0,0,c
  8196  002E88  EF48  F017         	goto	u8051
  8197  002E8C  EF4A  F017         	goto	u8050
  8198  002E90                     u8051:
  8199  002E90  EF61  F017         	goto	l7895
  8200  002E94                     u8050:
  8201  002E94                     
  8202                           ; BSR set to: 0
  8203  002E94  C02A  F032         	movff	___fldiv@b,??___fldiv
  8204  002E98  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  8205  002E9C  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  8206  002EA0  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  8207  002EA4  3435               	rlcf	(??___fldiv+3)^0,w,c
  8208  002EA6  3235               	rrcf	(??___fldiv+3)^0,f,c
  8209  002EA8  3234               	rrcf	(??___fldiv+2)^0,f,c
  8210  002EAA  3233               	rrcf	(??___fldiv+1)^0,f,c
  8211  002EAC  3232               	rrcf	??___fldiv^0,f,c
  8212  002EAE  C032  F02A         	movff	??___fldiv,___fldiv@b
  8213  002EB2  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  8214  002EB6  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  8215  002EBA  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  8216  002EBE                     
  8217                           ; BSR set to: 0
  8218  002EBE  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  8219  002EC0  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8220  002EC2                     l7895:
  8221                           
  8222                           ; BSR set to: 0
  8223  002EC2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8224  002EC4  EF6C  F017         	goto	u8061
  8225  002EC8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8226  002ECA  E108               	bnz	u8060
  8227  002ECC  2965               	incf	___fldiv@new_exp& (0+255),w,b
  8228  002ECE  A0D8               	btfss	status,0,c
  8229  002ED0  EF6C  F017         	goto	u8061
  8230  002ED4  EF6E  F017         	goto	u8060
  8231  002ED8                     u8061:
  8232  002ED8  EF79  F017         	goto	l7899
  8233  002EDC                     u8060:
  8234  002EDC                     
  8235                           ; BSR set to: 0
  8236  002EDC  0E00               	movlw	0
  8237  002EDE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8238  002EE0  6965               	setf	___fldiv@new_exp& (0+255),b
  8239  002EE2  0E00               	movlw	0
  8240  002EE4  6E2A               	movwf	___fldiv@b^0,c
  8241  002EE6  0E00               	movlw	0
  8242  002EE8  6E2B               	movwf	(___fldiv@b+1)^0,c
  8243  002EEA  0E00               	movlw	0
  8244  002EEC  6E2C               	movwf	(___fldiv@b+2)^0,c
  8245  002EEE  0E00               	movlw	0
  8246  002EF0  6E2D               	movwf	(___fldiv@b+3)^0,c
  8247  002EF2                     l7899:
  8248                           
  8249                           ; BSR set to: 0
  8250  002EF2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8251  002EF4  EF86  F017         	goto	u8070
  8252  002EF8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8253  002EFA  E106               	bnz	u8071
  8254  002EFC  0565               	decf	___fldiv@new_exp& (0+255),w,b
  8255  002EFE  B0D8               	btfsc	status,0,c
  8256  002F00  EF84  F017         	goto	u8071
  8257  002F04  EF86  F017         	goto	u8070
  8258  002F08                     u8071:
  8259  002F08  EF94  F017         	goto	l7903
  8260  002F0C                     u8070:
  8261  002F0C                     
  8262                           ; BSR set to: 0
  8263  002F0C  0E00               	movlw	0
  8264  002F0E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8265  002F10  0E00               	movlw	0
  8266  002F12  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8267  002F14  0E00               	movlw	0
  8268  002F16  6E2A               	movwf	___fldiv@b^0,c
  8269  002F18  0E00               	movlw	0
  8270  002F1A  6E2B               	movwf	(___fldiv@b+1)^0,c
  8271  002F1C  0E00               	movlw	0
  8272  002F1E  6E2C               	movwf	(___fldiv@b+2)^0,c
  8273  002F20  0E00               	movlw	0
  8274  002F22  6E2D               	movwf	(___fldiv@b+3)^0,c
  8275  002F24  0E00               	movlw	0
  8276  002F26  6F64               	movwf	___fldiv@sign& (0+255),b
  8277  002F28                     l7903:
  8278                           
  8279                           ; BSR set to: 0
  8280  002F28  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  8281  002F2C                     
  8282                           ; BSR set to: 0
  8283  002F2C  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  8284  002F2E  EF9B  F017         	goto	u8081
  8285  002F32  EF9D  F017         	goto	u8080
  8286  002F36                     u8081:
  8287  002F36  EFA0  F017         	goto	l7909
  8288  002F3A                     u8080:
  8289  002F3A                     
  8290                           ; BSR set to: 0
  8291  002F3A  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  8292  002F3C  EFA1  F017         	goto	l7911
  8293  002F40                     l7909:
  8294                           
  8295                           ; BSR set to: 0
  8296  002F40  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  8297  002F42                     l7911:
  8298                           
  8299                           ; BSR set to: 0
  8300  002F42  90D8               	bcf	status,0,c
  8301  002F44  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  8302  002F46  6E2D               	movwf	(___fldiv@b+3)^0,c
  8303  002F48  EF57  F016         	goto	l7825
  8304  002F4C                     l1987:
  8305                           
  8306                           ; BSR set to: 0
  8307  002F4C  0012               	return		;funcret
  8308  002F4E                     __end_of___fldiv:
  8309                           	callstack 0
  8310                           
  8311 ;; *************** function ___awmod *****************
  8312 ;; Defined at:
  8313 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  dividend        2   19[COMRAM] int 
  8316 ;;  divisor         2   21[COMRAM] int 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  sign            1   24[COMRAM] unsigned char 
  8319 ;;  counter         1   23[COMRAM] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  2   19[COMRAM] int 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;Total ram usage:        6 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 8
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_efgtoa
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text26
  8344  004E1A                     __ptext26:
  8345                           	callstack 0
  8346  004E1A                     ___awmod:
  8347                           	callstack 16
  8348  004E1A  0E00               	movlw	0
  8349  004E1C  6E19               	movwf	___awmod@sign^0,c
  8350  004E1E  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  8351  004E20  EF16  F027         	goto	u8340
  8352  004E24  EF14  F027         	goto	u8341
  8353  004E28                     u8341:
  8354  004E28  EF1C  F027         	goto	l8107
  8355  004E2C                     u8340:
  8356  004E2C  6C14               	negf	___awmod@dividend^0,c
  8357  004E2E  1E15               	comf	(___awmod@dividend+1)^0,f,c
  8358  004E30  B0D8               	btfsc	status,0,c
  8359  004E32  2A15               	incf	(___awmod@dividend+1)^0,f,c
  8360  004E34  0E01               	movlw	1
  8361  004E36  6E19               	movwf	___awmod@sign^0,c
  8362  004E38                     l8107:
  8363  004E38  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  8364  004E3A  EF23  F027         	goto	u8350
  8365  004E3E  EF21  F027         	goto	u8351
  8366  004E42                     u8351:
  8367  004E42  EF27  F027         	goto	l8111
  8368  004E46                     u8350:
  8369  004E46  6C16               	negf	___awmod@divisor^0,c
  8370  004E48  1E17               	comf	(___awmod@divisor+1)^0,f,c
  8371  004E4A  B0D8               	btfsc	status,0,c
  8372  004E4C  2A17               	incf	(___awmod@divisor+1)^0,f,c
  8373  004E4E                     l8111:
  8374  004E4E  5016               	movf	___awmod@divisor^0,w,c
  8375  004E50  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  8376  004E52  B4D8               	btfsc	status,2,c
  8377  004E54  EF2E  F027         	goto	u8361
  8378  004E58  EF30  F027         	goto	u8360
  8379  004E5C                     u8361:
  8380  004E5C  EF54  F027         	goto	l8127
  8381  004E60                     u8360:
  8382  004E60  0E01               	movlw	1
  8383  004E62  6E18               	movwf	___awmod@counter^0,c
  8384  004E64  EF38  F027         	goto	l8117
  8385  004E68                     l8115:
  8386  004E68  90D8               	bcf	status,0,c
  8387  004E6A  3616               	rlcf	___awmod@divisor^0,f,c
  8388  004E6C  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  8389  004E6E  2A18               	incf	___awmod@counter^0,f,c
  8390  004E70                     l8117:
  8391  004E70  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  8392  004E72  EF3D  F027         	goto	u8371
  8393  004E76  EF3F  F027         	goto	u8370
  8394  004E7A                     u8371:
  8395  004E7A  EF34  F027         	goto	l8115
  8396  004E7E                     u8370:
  8397  004E7E                     l8119:
  8398  004E7E  5016               	movf	___awmod@divisor^0,w,c
  8399  004E80  5C14               	subwf	___awmod@dividend^0,w,c
  8400  004E82  5017               	movf	(___awmod@divisor+1)^0,w,c
  8401  004E84  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  8402  004E86  A0D8               	btfss	status,0,c
  8403  004E88  EF48  F027         	goto	u8381
  8404  004E8C  EF4A  F027         	goto	u8380
  8405  004E90                     u8381:
  8406  004E90  EF4E  F027         	goto	l8123
  8407  004E94                     u8380:
  8408  004E94  5016               	movf	___awmod@divisor^0,w,c
  8409  004E96  5E14               	subwf	___awmod@dividend^0,f,c
  8410  004E98  5017               	movf	(___awmod@divisor+1)^0,w,c
  8411  004E9A  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  8412  004E9C                     l8123:
  8413  004E9C  90D8               	bcf	status,0,c
  8414  004E9E  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  8415  004EA0  3216               	rrcf	___awmod@divisor^0,f,c
  8416  004EA2  2E18               	decfsz	___awmod@counter^0,f,c
  8417  004EA4  EF3F  F027         	goto	l8119
  8418  004EA8                     l8127:
  8419  004EA8  5019               	movf	___awmod@sign^0,w,c
  8420  004EAA  B4D8               	btfsc	status,2,c
  8421  004EAC  EF5A  F027         	goto	u8391
  8422  004EB0  EF5C  F027         	goto	u8390
  8423  004EB4                     u8391:
  8424  004EB4  EF60  F027         	goto	l8131
  8425  004EB8                     u8390:
  8426  004EB8  6C14               	negf	___awmod@dividend^0,c
  8427  004EBA  1E15               	comf	(___awmod@dividend+1)^0,f,c
  8428  004EBC  B0D8               	btfsc	status,0,c
  8429  004EBE  2A15               	incf	(___awmod@dividend+1)^0,f,c
  8430  004EC0                     l8131:
  8431  004EC0  C014  F014         	movff	___awmod@dividend,?___awmod
  8432  004EC4  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  8433  004EC8  0012               	return		;funcret
  8434  004ECA                     __end_of___awmod:
  8435                           	callstack 0
  8436                           
  8437 ;; *************** function _dtoa *****************
  8438 ;; Defined at:
  8439 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8442 ;;		 -> NULL(0), 
  8443 ;;  d               8    2[BANK0 ] long long 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;  n               8   18[BANK0 ] long long 
  8446 ;;  i               2   26[BANK0 ] int 
  8447 ;;  s               2   16[BANK0 ] int 
  8448 ;;  w               2   14[BANK0 ] int 
  8449 ;;  p               2   12[BANK0 ] int 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  2    0[BANK0 ] int 
  8452 ;; Registers used:
  8453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8459 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;Total ram usage:       36 bytes
  8464 ;; Hardware stack levels used: 1
  8465 ;; Hardware stack levels required when called: 13
  8466 ;; This function calls:
  8467 ;;		___aodiv
  8468 ;;		___aomod
  8469 ;;		_abs
  8470 ;;		_pad
  8471 ;; This function is called by:
  8472 ;;		_vfpfcnvrt
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text27
  8477  00325A                     __ptext27:
  8478                           	callstack 0
  8479  00325A                     _dtoa:
  8480                           	callstack 12
  8481  00325A                     
  8482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8483  00325A  C062  F072         	movff	dtoa@d,dtoa@n
  8484  00325E  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  8485  003262  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  8486  003266  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  8487  00326A  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  8488  00326E  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  8489  003272  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  8490  003276  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  8491  00327A                     
  8492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8493  00327A  0100               	movlb	0	; () banked
  8494  00327C  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  8495  00327E  EF43  F019         	goto	u8831
  8496  003282  EF46  F019         	goto	u8830
  8497  003286                     u8831:
  8498  003286  0E01               	movlw	1
  8499  003288  EF47  F019         	goto	u8840
  8500  00328C                     u8830:
  8501  00328C  0E00               	movlw	0
  8502  00328E                     u8840:
  8503  00328E  6F70               	movwf	dtoa@s& (0+255),b
  8504  003290  6B71               	clrf	(dtoa@s+1)& (0+255),b
  8505                           
  8506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8507  003292  5170               	movf	dtoa@s& (0+255),w,b
  8508  003294  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8509  003296  B4D8               	btfsc	status,2,c
  8510  003298  EF50  F019         	goto	u8851
  8511  00329C  EF52  F019         	goto	u8850
  8512  0032A0                     u8851:
  8513  0032A0  EF62  F019         	goto	l8321
  8514  0032A4                     u8850:
  8515  0032A4                     
  8516                           ; BSR set to: 0
  8517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8518  0032A4  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  8519  0032A6  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  8520  0032A8  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  8521  0032AA  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  8522  0032AC  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  8523  0032AE  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  8524  0032B0  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  8525  0032B2  6D72               	negf	dtoa@n& (0+255),b
  8526  0032B4  0E00               	movlw	0
  8527  0032B6  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  8528  0032B8  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  8529  0032BA  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  8530  0032BC  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  8531  0032BE  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  8532  0032C0  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  8533  0032C2  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  8534  0032C4                     l8321:
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8538  0032C4  BE3B               	btfsc	(_prec+1)^0,7,c
  8539  0032C6  EF67  F019         	goto	u8861
  8540  0032CA  EF69  F019         	goto	u8860
  8541  0032CE                     u8861:
  8542  0032CE  EF6A  F019         	goto	l8325
  8543  0032D2                     u8860:
  8544  0032D2                     
  8545                           ; BSR set to: 0
  8546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8547  0032D2  923C               	bcf	_flags^0,1,c
  8548  0032D4                     l8325:
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8552  0032D4  BE3B               	btfsc	(_prec+1)^0,7,c
  8553  0032D6  EF77  F019         	goto	u8870
  8554  0032DA  503B               	movf	(_prec+1)^0,w,c
  8555  0032DC  E106               	bnz	u8871
  8556  0032DE  043A               	decf	_prec^0,w,c
  8557  0032E0  B0D8               	btfsc	status,0,c
  8558  0032E2  EF75  F019         	goto	u8871
  8559  0032E6  EF77  F019         	goto	u8870
  8560  0032EA                     u8871:
  8561  0032EA  EF7D  F019         	goto	l2133
  8562  0032EE                     u8870:
  8563  0032EE                     
  8564                           ; BSR set to: 0
  8565  0032EE  0E00               	movlw	0
  8566  0032F0  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  8567  0032F2  0E01               	movlw	1
  8568  0032F4  6F6C               	movwf	dtoa@p& (0+255),b
  8569  0032F6  EF81  F019         	goto	l2135
  8570  0032FA                     l2133:
  8571                           
  8572                           ; BSR set to: 0
  8573  0032FA  C03A  F06C         	movff	_prec,dtoa@p
  8574  0032FE  C03B  F06D         	movff	_prec+1,dtoa@p+1
  8575  003302                     l2135:
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8579  003302  C0E5  F06E         	movff	_width,dtoa@w
  8580  003306  C0E6  F06F         	movff	_width+1,dtoa@w+1
  8581  00330A                     
  8582                           ; BSR set to: 0
  8583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8584  00330A  5170               	movf	dtoa@s& (0+255),w,b
  8585  00330C  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8586  00330E  A4D8               	btfss	status,2,c
  8587  003310  EF8C  F019         	goto	u8881
  8588  003314  EF8E  F019         	goto	u8880
  8589  003318                     u8881:
  8590  003318  EF95  F019         	goto	l8333
  8591  00331C                     u8880:
  8592  00331C                     
  8593                           ; BSR set to: 0
  8594  00331C  A43C               	btfss	_flags^0,2,c
  8595  00331E  EF93  F019         	goto	u8891
  8596  003322  EF95  F019         	goto	u8890
  8597  003326                     u8891:
  8598  003326  EF98  F019         	goto	l8335
  8599  00332A                     u8890:
  8600  00332A                     l8333:
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8604  00332A  076E               	decf	dtoa@w& (0+255),f,b
  8605  00332C  A0D8               	btfss	status,0,c
  8606  00332E  076F               	decf	(dtoa@w+1)& (0+255),f,b
  8607  003330                     l8335:
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8611  003330  0E00               	movlw	0
  8612  003332  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  8613  003334  0E4F               	movlw	79
  8614  003336  6F7A               	movwf	dtoa@i& (0+255),b
  8615  003338                     
  8616                           ; BSR set to: 0
  8617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8618  003338  0E00               	movlw	0
  8619  00333A  0101               	movlb	1	; () banked
  8620  00333C  6F89               	movwf	(_dbuf+79)& (0+255),b
  8621                           
  8622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8623  00333E  EF1E  F01A         	goto	l8349
  8624  003342                     l8339:
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8628  003342  077A               	decf	dtoa@i& (0+255),f,b
  8629  003344  A0D8               	btfss	status,0,c
  8630  003346  077B               	decf	(dtoa@i+1)& (0+255),f,b
  8631  003348                     
  8632                           ; BSR set to: 0
  8633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8634  003348  0E3A               	movlw	low _dbuf
  8635  00334A  257A               	addwf	dtoa@i& (0+255),w,b
  8636  00334C  6ED9               	movwf	fsr2l,c
  8637  00334E  0E01               	movlw	high _dbuf
  8638  003350  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  8639  003352  6EDA               	movwf	fsr2h,c
  8640  003354  C072  F014         	movff	dtoa@n,___aomod@dividend
  8641  003358  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  8642  00335C  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  8643  003360  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  8644  003364  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  8645  003368  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  8646  00336C  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  8647  003370  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  8648  003374  0E0A               	movlw	10
  8649  003376  6E1C               	movwf	___aomod@divisor^0,c
  8650  003378  0E00               	movlw	0
  8651  00337A  6E1D               	movwf	(___aomod@divisor+1)^0,c
  8652  00337C  0E00               	movlw	0
  8653  00337E  6E1E               	movwf	(___aomod@divisor+2)^0,c
  8654  003380  0E00               	movlw	0
  8655  003382  6E1F               	movwf	(___aomod@divisor+3)^0,c
  8656  003384  0E00               	movlw	0
  8657  003386  6E20               	movwf	(___aomod@divisor+4)^0,c
  8658  003388  0E00               	movlw	0
  8659  00338A  6E21               	movwf	(___aomod@divisor+5)^0,c
  8660  00338C  0E00               	movlw	0
  8661  00338E  6E22               	movwf	(___aomod@divisor+6)^0,c
  8662  003390  0E00               	movlw	0
  8663  003392  6E23               	movwf	(___aomod@divisor+7)^0,c
  8664  003394  EC0D  F020         	call	___aomod	;wreg free
  8665  003398  C014  F031         	movff	?___aomod,??_dtoa
  8666  00339C  C015  F032         	movff	?___aomod+1,??_dtoa+1
  8667  0033A0  C016  F033         	movff	?___aomod+2,??_dtoa+2
  8668  0033A4  C017  F034         	movff	?___aomod+3,??_dtoa+3
  8669  0033A8  C018  F035         	movff	?___aomod+4,??_dtoa+4
  8670  0033AC  C019  F036         	movff	?___aomod+5,??_dtoa+5
  8671  0033B0  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  8672  0033B4  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  8673  0033B8  C031  F026         	movff	??_dtoa,abs@a
  8674  0033BC  C033  F027         	movff	??_dtoa+2,abs@a+1
  8675  0033C0  EC89  F02B         	call	_abs	;wreg free
  8676  0033C4  5026               	movf	?_abs^0,w,c
  8677  0033C6  0F30               	addlw	48
  8678  0033C8  6EDF               	movwf	indf2,c
  8679  0033CA                     
  8680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8681  0033CA  0100               	movlb	0	; () banked
  8682  0033CC  076C               	decf	dtoa@p& (0+255),f,b
  8683  0033CE  A0D8               	btfss	status,0,c
  8684  0033D0  076D               	decf	(dtoa@p+1)& (0+255),f,b
  8685  0033D2                     
  8686                           ; BSR set to: 0
  8687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8688  0033D2  076E               	decf	dtoa@w& (0+255),f,b
  8689  0033D4  A0D8               	btfss	status,0,c
  8690  0033D6  076F               	decf	(dtoa@w+1)& (0+255),f,b
  8691  0033D8                     
  8692                           ; BSR set to: 0
  8693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8694  0033D8  C072  F014         	movff	dtoa@n,___aodiv@dividend
  8695  0033DC  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  8696  0033E0  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  8697  0033E4  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  8698  0033E8  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  8699  0033EC  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  8700  0033F0  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  8701  0033F4  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  8702  0033F8  0E0A               	movlw	10
  8703  0033FA  6E1C               	movwf	___aodiv@divisor^0,c
  8704  0033FC  0E00               	movlw	0
  8705  0033FE  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  8706  003400  0E00               	movlw	0
  8707  003402  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  8708  003404  0E00               	movlw	0
  8709  003406  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  8710  003408  0E00               	movlw	0
  8711  00340A  6E20               	movwf	(___aodiv@divisor+4)^0,c
  8712  00340C  0E00               	movlw	0
  8713  00340E  6E21               	movwf	(___aodiv@divisor+5)^0,c
  8714  003410  0E00               	movlw	0
  8715  003412  6E22               	movwf	(___aodiv@divisor+6)^0,c
  8716  003414  0E00               	movlw	0
  8717  003416  6E23               	movwf	(___aodiv@divisor+7)^0,c
  8718  003418  EC49  F01F         	call	___aodiv	;wreg free
  8719  00341C  C014  F072         	movff	?___aodiv,dtoa@n
  8720  003420  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  8721  003424  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  8722  003428  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  8723  00342C  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  8724  003430  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  8725  003434  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  8726  003438  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  8727  00343C                     l8349:
  8728                           
  8729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8730  00343C  0100               	movlb	0	; () banked
  8731  00343E  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  8732  003440  EF2A  F01A         	goto	u8901
  8733  003444  517B               	movf	(dtoa@i+1)& (0+255),w,b
  8734  003446  E108               	bnz	u8900
  8735  003448  057A               	decf	dtoa@i& (0+255),w,b
  8736  00344A  A0D8               	btfss	status,0,c
  8737  00344C  EF2A  F01A         	goto	u8901
  8738  003450  EF2C  F01A         	goto	u8900
  8739  003454                     u8901:
  8740  003454  EF5C  F01A         	goto	l8359
  8741  003458                     u8900:
  8742  003458                     
  8743                           ; BSR set to: 0
  8744  003458  5172               	movf	dtoa@n& (0+255),w,b
  8745  00345A  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  8746  00345C  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  8747  00345E  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  8748  003460  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  8749  003462  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  8750  003464  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  8751  003466  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  8752  003468  A4D8               	btfss	status,2,c
  8753  00346A  EF39  F01A         	goto	u8911
  8754  00346E  EF3B  F01A         	goto	u8910
  8755  003472                     u8911:
  8756  003472  EFA1  F019         	goto	l8339
  8757  003476                     u8910:
  8758  003476                     
  8759                           ; BSR set to: 0
  8760  003476  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  8761  003478  EF48  F01A         	goto	u8920
  8762  00347C  516D               	movf	(dtoa@p+1)& (0+255),w,b
  8763  00347E  E106               	bnz	u8921
  8764  003480  056C               	decf	dtoa@p& (0+255),w,b
  8765  003482  B0D8               	btfsc	status,0,c
  8766  003484  EF46  F01A         	goto	u8921
  8767  003488  EF48  F01A         	goto	u8920
  8768  00348C                     u8921:
  8769  00348C  EFA1  F019         	goto	l8339
  8770  003490                     u8920:
  8771  003490                     
  8772                           ; BSR set to: 0
  8773  003490  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  8774  003492  EF53  F01A         	goto	u8931
  8775  003496  516F               	movf	(dtoa@w+1)& (0+255),w,b
  8776  003498  E108               	bnz	u8930
  8777  00349A  056E               	decf	dtoa@w& (0+255),w,b
  8778  00349C  A0D8               	btfss	status,0,c
  8779  00349E  EF53  F01A         	goto	u8931
  8780  0034A2  EF55  F01A         	goto	u8930
  8781  0034A6                     u8931:
  8782  0034A6  EF5C  F01A         	goto	l8359
  8783  0034AA                     u8930:
  8784  0034AA                     
  8785                           ; BSR set to: 0
  8786  0034AA  B23C               	btfsc	_flags^0,1,c
  8787  0034AC  EF5A  F01A         	goto	u8941
  8788  0034B0  EF5C  F01A         	goto	u8940
  8789  0034B4                     u8941:
  8790  0034B4  EFA1  F019         	goto	l8339
  8791  0034B8                     u8940:
  8792  0034B8                     l8359:
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8796  0034B8  5170               	movf	dtoa@s& (0+255),w,b
  8797  0034BA  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8798  0034BC  A4D8               	btfss	status,2,c
  8799  0034BE  EF63  F01A         	goto	u8951
  8800  0034C2  EF65  F01A         	goto	u8950
  8801  0034C6                     u8951:
  8802  0034C6  EF6C  F01A         	goto	l8363
  8803  0034CA                     u8950:
  8804  0034CA                     
  8805                           ; BSR set to: 0
  8806  0034CA  A43C               	btfss	_flags^0,2,c
  8807  0034CC  EF6A  F01A         	goto	u8961
  8808  0034D0  EF6C  F01A         	goto	u8960
  8809  0034D4                     u8961:
  8810  0034D4  EF8B  F01A         	goto	l8373
  8811  0034D8                     u8960:
  8812  0034D8                     l8363:
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8816  0034D8  077A               	decf	dtoa@i& (0+255),f,b
  8817  0034DA  A0D8               	btfss	status,0,c
  8818  0034DC  077B               	decf	(dtoa@i+1)& (0+255),f,b
  8819  0034DE                     
  8820                           ; BSR set to: 0
  8821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8822  0034DE  5170               	movf	dtoa@s& (0+255),w,b
  8823  0034E0  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8824  0034E2  A4D8               	btfss	status,2,c
  8825  0034E4  EF76  F01A         	goto	u8971
  8826  0034E8  EF78  F01A         	goto	u8970
  8827  0034EC                     u8971:
  8828  0034EC  EF7E  F01A         	goto	l8369
  8829  0034F0                     u8970:
  8830  0034F0                     
  8831                           ; BSR set to: 0
  8832  0034F0  0E00               	movlw	0
  8833  0034F2  6F6B               	movwf	(_dtoa$3544+1)& (0+255),b
  8834  0034F4  0E2B               	movlw	43
  8835  0034F6  6F6A               	movwf	_dtoa$3544& (0+255),b
  8836  0034F8  EF82  F01A         	goto	l8371
  8837  0034FC                     l8369:
  8838                           
  8839                           ; BSR set to: 0
  8840  0034FC  0E00               	movlw	0
  8841  0034FE  6F6B               	movwf	(_dtoa$3544+1)& (0+255),b
  8842  003500  0E2D               	movlw	45
  8843  003502  6F6A               	movwf	_dtoa$3544& (0+255),b
  8844  003504                     l8371:
  8845                           
  8846                           ; BSR set to: 0
  8847  003504  0E3A               	movlw	low _dbuf
  8848  003506  257A               	addwf	dtoa@i& (0+255),w,b
  8849  003508  6ED9               	movwf	fsr2l,c
  8850  00350A  0E01               	movlw	high _dbuf
  8851  00350C  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  8852  00350E  6EDA               	movwf	fsr2h,c
  8853  003510  0060  F1AB  FFDF   	movff	_dtoa$3544,indf2
  8854  003516                     l8373:
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8858  003516  C060  F026         	movff	dtoa@fp,pad@fp
  8859  00351A  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  8860  00351E  0E3A               	movlw	low _dbuf
  8861  003520  257A               	addwf	dtoa@i& (0+255),w,b
  8862  003522  6E28               	movwf	pad@buf^0,c
  8863  003524  0E01               	movlw	high _dbuf
  8864  003526  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  8865  003528  6E29               	movwf	(pad@buf+1)^0,c
  8866  00352A  C06E  F02A         	movff	dtoa@w,pad@p
  8867  00352E  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  8868  003532  EC4C  F026         	call	_pad	;wreg free
  8869  003536  C026  F060         	movff	?_pad,?_dtoa
  8870  00353A  C027  F061         	movff	?_pad+1,?_dtoa+1
  8871  00353E  0012               	return		;funcret
  8872  003540                     __end_of_dtoa:
  8873                           	callstack 0
  8874                           
  8875 ;; *************** function _pad *****************
  8876 ;; Defined at:
  8877 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  8880 ;;		 -> NULL(0), 
  8881 ;;  buf             2   39[COMRAM] PTR unsigned char 
  8882 ;;		 -> dbuf(80), 
  8883 ;;  p               2   41[COMRAM] int 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  w               2   46[COMRAM] int 
  8886 ;;  i               2   44[COMRAM] int 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  2   37[COMRAM] int 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8896 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;Total ram usage:       11 bytes
  8901 ;; Hardware stack levels used: 1
  8902 ;; Hardware stack levels required when called: 12
  8903 ;; This function calls:
  8904 ;;		_fputc
  8905 ;;		_fputs
  8906 ;;		_strlen
  8907 ;; This function is called by:
  8908 ;;		_dtoa
  8909 ;;		_efgtoa
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text28
  8914  004C98                     __ptext28:
  8915                           	callstack 0
  8916  004C98                     _pad:
  8917                           	callstack 12
  8918  004C98                     
  8919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8920  004C98  A03C               	btfss	_flags^0,0,c
  8921  004C9A  EF51  F026         	goto	u8561
  8922  004C9E  EF53  F026         	goto	u8560
  8923  004CA2                     u8561:
  8924  004CA2  EF5D  F026         	goto	l8229
  8925  004CA6                     u8560:
  8926  004CA6                     
  8927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8928  004CA6  C028  F01F         	movff	pad@buf,fputs@s
  8929  004CAA  C029  F020         	movff	pad@buf+1,fputs@s+1
  8930  004CAE  C026  F021         	movff	pad@fp,fputs@fp
  8931  004CB2  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8932  004CB6  EC45  F02B         	call	_fputs	;wreg free
  8933  004CBA                     l8229:
  8934                           
  8935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8936  004CBA  BE2B               	btfsc	(pad@p+1)^0,7,c
  8937  004CBC  EF62  F026         	goto	u8571
  8938  004CC0  EF64  F026         	goto	u8570
  8939  004CC4                     u8571:
  8940  004CC4  EF6A  F026         	goto	l8233
  8941  004CC8                     u8570:
  8942  004CC8  C02A  F02F         	movff	pad@p,pad@w
  8943  004CCC  C02B  F030         	movff	pad@p+1,pad@w+1
  8944  004CD0  EF6E  F026         	goto	l2122
  8945  004CD4                     l8233:
  8946  004CD4  0E00               	movlw	0
  8947  004CD6  6E30               	movwf	(pad@w+1)^0,c
  8948  004CD8  0E00               	movlw	0
  8949  004CDA  6E2F               	movwf	pad@w^0,c
  8950  004CDC                     l2122:
  8951                           
  8952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8953  004CDC  0E00               	movlw	0
  8954  004CDE  6E2E               	movwf	(pad@i+1)^0,c
  8955  004CE0  0E00               	movlw	0
  8956  004CE2  6E2D               	movwf	pad@i^0,c
  8957                           
  8958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8959  004CE4  EF80  F026         	goto	l8239
  8960  004CE8                     l8235:
  8961                           
  8962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8963  004CE8  0E00               	movlw	0
  8964  004CEA  6E17               	movwf	(fputc@c+1)^0,c
  8965  004CEC  0E20               	movlw	32
  8966  004CEE  6E16               	movwf	fputc@c^0,c
  8967  004CF0  C026  F018         	movff	pad@fp,fputc@fp
  8968  004CF4  C027  F019         	movff	pad@fp+1,fputc@fp+1
  8969  004CF8  EC0C  F028         	call	_fputc	;wreg free
  8970  004CFC                     
  8971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8972  004CFC  4A2D               	infsnz	pad@i^0,f,c
  8973  004CFE  2A2E               	incf	(pad@i+1)^0,f,c
  8974  004D00                     l8239:
  8975                           
  8976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8977  004D00  502F               	movf	pad@w^0,w,c
  8978  004D02  5C2D               	subwf	pad@i^0,w,c
  8979  004D04  502E               	movf	(pad@i+1)^0,w,c
  8980  004D06  0A80               	xorlw	128
  8981  004D08  6E2C               	movwf	??_pad^0,c
  8982  004D0A  5030               	movf	(pad@w+1)^0,w,c
  8983  004D0C  0A80               	xorlw	128
  8984  004D0E  582C               	subwfb	??_pad^0,w,c
  8985  004D10  A0D8               	btfss	status,0,c
  8986  004D12  EF8D  F026         	goto	u8581
  8987  004D16  EF8F  F026         	goto	u8580
  8988  004D1A                     u8581:
  8989  004D1A  EF74  F026         	goto	l8235
  8990  004D1E                     u8580:
  8991  004D1E                     
  8992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8993  004D1E  B03C               	btfsc	_flags^0,0,c
  8994  004D20  EF94  F026         	goto	u8591
  8995  004D24  EF96  F026         	goto	u8590
  8996  004D28                     u8591:
  8997  004D28  EFA0  F026         	goto	l8243
  8998  004D2C                     u8590:
  8999  004D2C                     
  9000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9001  004D2C  C028  F01F         	movff	pad@buf,fputs@s
  9002  004D30  C029  F020         	movff	pad@buf+1,fputs@s+1
  9003  004D34  C026  F021         	movff	pad@fp,fputs@fp
  9004  004D38  C027  F022         	movff	pad@fp+1,fputs@fp+1
  9005  004D3C  EC45  F02B         	call	_fputs	;wreg free
  9006  004D40                     l8243:
  9007                           
  9008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9009  004D40  C028  F014         	movff	pad@buf,strlen@s
  9010  004D44  C029  F015         	movff	pad@buf+1,strlen@s+1
  9011  004D48  ECA9  F02B         	call	_strlen	;wreg free
  9012  004D4C  502F               	movf	pad@w^0,w,c
  9013  004D4E  2414               	addwf	?_strlen^0,w,c
  9014  004D50  6E26               	movwf	?_pad^0,c
  9015  004D52  5030               	movf	(pad@w+1)^0,w,c
  9016  004D54  2015               	addwfc	(?_strlen+1)^0,w,c
  9017  004D56  6E27               	movwf	(?_pad+1)^0,c
  9018  004D58  0012               	return		;funcret
  9019  004D5A                     __end_of_pad:
  9020                           	callstack 0
  9021                           
  9022 ;; *************** function _strlen *****************
  9023 ;; Defined at:
  9024 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  s               2   19[COMRAM] PTR const unsigned char 
  9027 ;;		 -> dbuf(80), 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  a               2   21[COMRAM] PTR const unsigned char 
  9030 ;;		 -> dbuf(80), 
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  2   19[COMRAM] unsigned int 
  9033 ;; Registers used:
  9034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;Total ram usage:        4 bytes
  9045 ;; Hardware stack levels used: 1
  9046 ;; Hardware stack levels required when called: 8
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		_pad
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text29
  9055  005752                     __ptext29:
  9056                           	callstack 0
  9057  005752                     _strlen:
  9058                           	callstack 15
  9059  005752  C014  F016         	movff	strlen@s,strlen@a
  9060  005756  C015  F017         	movff	strlen@s+1,strlen@a+1
  9061  00575A  EFB1  F02B         	goto	l7691
  9062  00575E                     l7689:
  9063  00575E  4A14               	infsnz	strlen@s^0,f,c
  9064  005760  2A15               	incf	(strlen@s+1)^0,f,c
  9065  005762                     l7691:
  9066  005762  0060  F053  FFD9   	movff	strlen@s,fsr2l
  9067  005768  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  9068  00576E  50DF               	movf	indf2,w,c
  9069  005770  A4D8               	btfss	status,2,c
  9070  005772  EFBD  F02B         	goto	u7701
  9071  005776  EFBF  F02B         	goto	u7700
  9072  00577A                     u7701:
  9073  00577A  EFAF  F02B         	goto	l7689
  9074  00577E                     u7700:
  9075  00577E  5016               	movf	strlen@a^0,w,c
  9076  005780  5C14               	subwf	strlen@s^0,w,c
  9077  005782  6E14               	movwf	?_strlen^0,c
  9078  005784  5017               	movf	(strlen@a+1)^0,w,c
  9079  005786  5815               	subwfb	(strlen@s+1)^0,w,c
  9080  005788  6E15               	movwf	(?_strlen+1)^0,c
  9081  00578A  0012               	return		;funcret
  9082  00578C                     __end_of_strlen:
  9083                           	callstack 0
  9084                           
  9085 ;; *************** function _fputs *****************
  9086 ;; Defined at:
  9087 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  s               2   30[COMRAM] PTR const unsigned char 
  9090 ;;		 -> dbuf(80), 
  9091 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  9092 ;;		 -> NULL(0), 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  i               2   35[COMRAM] int 
  9095 ;;  c               1   34[COMRAM] unsigned char 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  2   30[COMRAM] int 
  9098 ;; Registers used:
  9099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9106 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9108 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9109 ;;Total ram usage:        7 bytes
  9110 ;; Hardware stack levels used: 1
  9111 ;; Hardware stack levels required when called: 11
  9112 ;; This function calls:
  9113 ;;		_fputc
  9114 ;; This function is called by:
  9115 ;;		_pad
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text30
  9120  00568A                     __ptext30:
  9121                           	callstack 0
  9122  00568A                     _fputs:
  9123                           	callstack 12
  9124  00568A  0E00               	movlw	0
  9125  00568C  6E25               	movwf	(fputs@i+1)^0,c
  9126  00568E  0E00               	movlw	0
  9127  005690  6E24               	movwf	fputs@i^0,c
  9128  005692  EF56  F02B         	goto	l7685
  9129  005696                     l7681:
  9130  005696  C023  F016         	movff	fputs@c,fputc@c
  9131  00569A  6A17               	clrf	(fputc@c+1)^0,c
  9132  00569C  C021  F018         	movff	fputs@fp,fputc@fp
  9133  0056A0  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  9134  0056A4  EC0C  F028         	call	_fputc	;wreg free
  9135  0056A8  4A24               	infsnz	fputs@i^0,f,c
  9136  0056AA  2A25               	incf	(fputs@i+1)^0,f,c
  9137  0056AC                     l7685:
  9138  0056AC  5024               	movf	fputs@i^0,w,c
  9139  0056AE  241F               	addwf	fputs@s^0,w,c
  9140  0056B0  6ED9               	movwf	fsr2l,c
  9141  0056B2  5025               	movf	(fputs@i+1)^0,w,c
  9142  0056B4  2020               	addwfc	(fputs@s+1)^0,w,c
  9143  0056B6  6EDA               	movwf	fsr2h,c
  9144  0056B8  50DF               	movf	indf2,w,c
  9145  0056BA  6E23               	movwf	fputs@c^0,c
  9146  0056BC  5023               	movf	fputs@c^0,w,c
  9147  0056BE  A4D8               	btfss	status,2,c
  9148  0056C0  EF64  F02B         	goto	u7691
  9149  0056C4  EF66  F02B         	goto	u7690
  9150  0056C8                     u7691:
  9151  0056C8  EF4B  F02B         	goto	l7681
  9152  0056CC                     u7690:
  9153  0056CC  0012               	return		;funcret
  9154  0056CE                     __end_of_fputs:
  9155                           	callstack 0
  9156                           
  9157 ;; *************** function _fputc *****************
  9158 ;; Defined at:
  9159 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;  c               2   21[COMRAM] int 
  9162 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  9163 ;;		 -> NULL(0), 
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;		None
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  2   21[COMRAM] int 
  9168 ;; Registers used:
  9169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9179 ;;Total ram usage:        9 bytes
  9180 ;; Hardware stack levels used: 1
  9181 ;; Hardware stack levels required when called: 10
  9182 ;; This function calls:
  9183 ;;		_putch
  9184 ;; This function is called by:
  9185 ;;		_pad
  9186 ;;		_vfpfcnvrt
  9187 ;;		_fputs
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text31
  9192  005018                     __ptext31:
  9193                           	callstack 0
  9194  005018                     _fputc:
  9195                           	callstack 15
  9196  005018  5018               	movf	fputc@fp^0,w,c
  9197  00501A  1019               	iorwf	(fputc@fp+1)^0,w,c
  9198  00501C  B4D8               	btfsc	status,2,c
  9199  00501E  EF13  F028         	goto	u7261
  9200  005022  EF15  F028         	goto	u7260
  9201  005026                     u7261:
  9202  005026  EF1E  F028         	goto	l7467
  9203  00502A                     u7260:
  9204  00502A  5018               	movf	fputc@fp^0,w,c
  9205  00502C  1019               	iorwf	(fputc@fp+1)^0,w,c
  9206  00502E  A4D8               	btfss	status,2,c
  9207  005030  EF1C  F028         	goto	u7271
  9208  005034  EF1E  F028         	goto	u7270
  9209  005038                     u7271:
  9210  005038  EF23  F028         	goto	l7469
  9211  00503C                     u7270:
  9212  00503C                     l7467:
  9213  00503C  5016               	movf	fputc@c^0,w,c
  9214  00503E  EC04  F02F         	call	_putch
  9215  005042  EF56  F028         	goto	l2319
  9216  005046                     l7469:
  9217  005046  EE20 F004          	lfsr	2,4
  9218  00504A  5018               	movf	fputc@fp^0,w,c
  9219  00504C  26D9               	addwf	fsr2l,f,c
  9220  00504E  5019               	movf	(fputc@fp+1)^0,w,c
  9221  005050  22DA               	addwfc	fsr2h,f,c
  9222  005052  50DE               	movf	postinc2,w,c
  9223  005054  10DE               	iorwf	postinc2,w,c
  9224  005056  B4D8               	btfsc	status,2,c
  9225  005058  EF30  F028         	goto	u7281
  9226  00505C  EF32  F028         	goto	u7280
  9227  005060                     u7281:
  9228  005060  EF4D  F028         	goto	l7473
  9229  005064                     u7280:
  9230  005064  EE20 F004          	lfsr	2,4
  9231  005068  5018               	movf	fputc@fp^0,w,c
  9232  00506A  26D9               	addwf	fsr2l,f,c
  9233  00506C  5019               	movf	(fputc@fp+1)^0,w,c
  9234  00506E  22DA               	addwfc	fsr2h,f,c
  9235  005070  EE10 F002          	lfsr	1,2
  9236  005074  5018               	movf	fputc@fp^0,w,c
  9237  005076  26E1               	addwf	fsr1l,f,c
  9238  005078  5019               	movf	(fputc@fp+1)^0,w,c
  9239  00507A  22E2               	addwfc	fsr1h,f,c
  9240  00507C  50DE               	movf	postinc2,w,c
  9241  00507E  5CE6               	subwf	postinc1,w,c
  9242  005080  50E6               	movf	postinc1,w,c
  9243  005082  0A80               	xorlw	128
  9244  005084  6E1E               	movwf	(??_fputc+4)^0,c
  9245  005086  50DE               	movf	postinc2,w,c
  9246  005088  0A80               	xorlw	128
  9247  00508A  581E               	subwfb	(??_fputc+4)^0,w,c
  9248  00508C  B0D8               	btfsc	status,0,c
  9249  00508E  EF4B  F028         	goto	u7291
  9250  005092  EF4D  F028         	goto	u7290
  9251  005096                     u7291:
  9252  005096  EF56  F028         	goto	l2319
  9253  00509A                     u7290:
  9254  00509A                     l7473:
  9255  00509A  EE20 F002          	lfsr	2,2
  9256  00509E  5018               	movf	fputc@fp^0,w,c
  9257  0050A0  26D9               	addwf	fsr2l,f,c
  9258  0050A2  5019               	movf	(fputc@fp+1)^0,w,c
  9259  0050A4  22DA               	addwfc	fsr2h,f,c
  9260  0050A6  2ADE               	incf	postinc2,f,c
  9261  0050A8  0E00               	movlw	0
  9262  0050AA  22DD               	addwfc	postdec2,f,c
  9263  0050AC                     l2319:
  9264  0050AC  0012               	return		;funcret
  9265  0050AE                     __end_of_fputc:
  9266                           	callstack 0
  9267                           
  9268 ;; *************** function _putch *****************
  9269 ;; Defined at:
  9270 ;;		line 230 in file "mcc_generated_files/uart1.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  txData          1    wreg     unsigned char 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  txData          1   20[COMRAM] unsigned char 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;Total ram usage:        1 bytes
  9289 ;; Hardware stack levels used: 1
  9290 ;; Hardware stack levels required when called: 9
  9291 ;; This function calls:
  9292 ;;		_UART1_Write
  9293 ;; This function is called by:
  9294 ;;		_fputc
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text32
  9299  005E08                     __ptext32:
  9300                           	callstack 0
  9301  005E08                     _putch:
  9302                           	callstack 15
  9303                           
  9304                           ;incstack = 0
  9305                           ;putch@txData stored from wreg
  9306  005E08  6E15               	movwf	putch@txData^0,c
  9307  005E0A                     
  9308                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  9309  005E0A  5015               	movf	putch@txData^0,w,c
  9310  005E0C  EC05  F02A         	call	_UART1_Write
  9311  005E10  0012               	return		;funcret
  9312  005E12                     __end_of_putch:
  9313                           	callstack 0
  9314                           
  9315 ;; *************** function _UART1_Write *****************
  9316 ;; Defined at:
  9317 ;;		line 202 in file "mcc_generated_files/uart1.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  txData          1    wreg     unsigned char 
  9320 ;; Auto vars:     Size  Location     Type
  9321 ;;  txData          1   19[COMRAM] unsigned char 
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  1    wreg      void 
  9324 ;; Registers used:
  9325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;Total ram usage:        1 bytes
  9336 ;; Hardware stack levels used: 1
  9337 ;; Hardware stack levels required when called: 8
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_putch
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           	psect	text33
  9346  00540A                     __ptext33:
  9347                           	callstack 0
  9348  00540A                     _UART1_Write:
  9349                           	callstack 15
  9350                           
  9351                           ;incstack = 0
  9352                           ;UART1_Write@txData stored from wreg
  9353  00540A  6E14               	movwf	UART1_Write@txData^0,c
  9354  00540C                     l7445:
  9355                           
  9356                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  9357  00540C  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  9358  00540E  B4D8               	btfsc	status,2,c
  9359  005410  EF0C  F02A         	goto	u7231
  9360  005414  EF0E  F02A         	goto	u7230
  9361  005418                     u7231:
  9362  005418  EF06  F02A         	goto	l7445
  9363  00541C                     u7230:
  9364  00541C                     
  9365                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  9366  00541C  0139               	movlb	57	; () banked
  9367  00541E  B993               	btfsc	147,4,b	;volatile
  9368  005420  EF14  F02A         	goto	u7241
  9369  005424  EF16  F02A         	goto	u7240
  9370  005428                     u7241:
  9371  005428  EF1B  F02A         	goto	l309
  9372  00542C                     u7240:
  9373  00542C                     
  9374                           ; BSR set to: 57
  9375                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  9376  00542C  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  9377                           
  9378                           ;mcc_generated_files/uart1.c: 211:     }
  9379  005432  EF31  F02A         	goto	l7459
  9380  005436                     l309:
  9381                           
  9382                           ; BSR set to: 57
  9383                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  9384  005436  9993               	bcf	147,4,b	;volatile
  9385  005438                     
  9386                           ; BSR set to: 57
  9387                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  9388  005438  0E10               	movlw	low _uart1TxBuffer
  9389  00543A  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  9390  00543C  6ED9               	movwf	fsr2l,c
  9391  00543E  6ADA               	clrf	fsr2h,c
  9392  005440  0E01               	movlw	high _uart1TxBuffer
  9393  005442  22DA               	addwfc	fsr2h,f,c
  9394  005444  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  9395  00544A                     
  9396                           ; BSR set to: 57
  9397  00544A  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  9398  00544C                     
  9399                           ; BSR set to: 57
  9400                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  9401  00544C  0E07               	movlw	7
  9402  00544E  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  9403  005450  EF2C  F02A         	goto	u7251
  9404  005454  EF2E  F02A         	goto	u7250
  9405  005458                     u7251:
  9406  005458  EF30  F02A         	goto	l7457
  9407  00545C                     u7250:
  9408  00545C                     
  9409                           ; BSR set to: 57
  9410                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  9411  00545C  0E00               	movlw	0
  9412  00545E  6E47               	movwf	_uart1TxHead^0,c	;volatile
  9413  005460                     l7457:
  9414                           
  9415                           ; BSR set to: 57
  9416                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  9417  005460  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  9418  005462                     l7459:
  9419                           
  9420                           ; BSR set to: 57
  9421                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  9422  005462  8993               	bsf	147,4,b	;volatile
  9423  005464                     
  9424                           ; BSR set to: 57
  9425  005464  0012               	return		;funcret
  9426  005466                     __end_of_UART1_Write:
  9427                           	callstack 0
  9428                           
  9429 ;; *************** function _abs *****************
  9430 ;; Defined at:
  9431 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  a               2   37[COMRAM] int 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;		None
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  2   37[COMRAM] int 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;Total ram usage:        4 bytes
  9450 ;; Hardware stack levels used: 1
  9451 ;; Hardware stack levels required when called: 8
  9452 ;; This function calls:
  9453 ;;		Nothing
  9454 ;; This function is called by:
  9455 ;;		_dtoa
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459                           	psect	text34
  9460  005712                     __ptext34:
  9461                           	callstack 0
  9462  005712                     _abs:
  9463                           	callstack 16
  9464  005712  BE27               	btfsc	(abs@a+1)^0,7,c
  9465  005714  EF96  F02B         	goto	u8600
  9466  005718  5027               	movf	(abs@a+1)^0,w,c
  9467  00571A  E106               	bnz	u8601
  9468  00571C  0426               	decf	abs@a^0,w,c
  9469  00571E  B0D8               	btfsc	status,0,c
  9470  005720  EF94  F02B         	goto	u8601
  9471  005724  EF96  F02B         	goto	u8600
  9472  005728                     u8601:
  9473  005728  EFA4  F02B         	goto	l2285
  9474  00572C                     u8600:
  9475  00572C  C026  F028         	movff	abs@a,??_abs
  9476  005730  C027  F029         	movff	abs@a+1,??_abs+1
  9477  005734  1E28               	comf	??_abs^0,f,c
  9478  005736  1E29               	comf	(??_abs+1)^0,f,c
  9479  005738  4A28               	infsnz	??_abs^0,f,c
  9480  00573A  2A29               	incf	(??_abs+1)^0,f,c
  9481  00573C  C028  F026         	movff	??_abs,?_abs
  9482  005740  C029  F027         	movff	??_abs+1,?_abs+1
  9483  005744  EFA8  F02B         	goto	l2288
  9484  005748                     l2285:
  9485  005748  C026  F026         	movff	abs@a,?_abs
  9486  00574C  C027  F027         	movff	abs@a+1,?_abs+1
  9487  005750                     l2288:
  9488  005750  0012               	return		;funcret
  9489  005752                     __end_of_abs:
  9490                           	callstack 0
  9491                           
  9492 ;; *************** function ___aomod *****************
  9493 ;; Defined at:
  9494 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  dividend        8   19[COMRAM] long long 
  9497 ;;  divisor         8   27[COMRAM] long long 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  sign            1   36[COMRAM] unsigned char 
  9500 ;;  counter         1   35[COMRAM] unsigned char 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  8   19[COMRAM] long long 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9510 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9511 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9513 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9514 ;;Total ram usage:       18 bytes
  9515 ;; Hardware stack levels used: 1
  9516 ;; Hardware stack levels required when called: 8
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_dtoa
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           	psect	text35
  9525  00401A                     __ptext35:
  9526                           	callstack 0
  9527  00401A                     ___aomod:
  9528                           	callstack 16
  9529  00401A  0E00               	movlw	0
  9530  00401C  6E25               	movwf	___aomod@sign^0,c
  9531  00401E  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  9532  004020  EF16  F020         	goto	u7800
  9533  004024  EF14  F020         	goto	u7801
  9534  004028                     u7801:
  9535  004028  EF28  F020         	goto	l7753
  9536  00402C                     u7800:
  9537  00402C  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  9538  00402E  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  9539  004030  1E19               	comf	(___aomod@dividend+5)^0,f,c
  9540  004032  1E18               	comf	(___aomod@dividend+4)^0,f,c
  9541  004034  1E17               	comf	(___aomod@dividend+3)^0,f,c
  9542  004036  1E16               	comf	(___aomod@dividend+2)^0,f,c
  9543  004038  1E15               	comf	(___aomod@dividend+1)^0,f,c
  9544  00403A  6C14               	negf	___aomod@dividend^0,c
  9545  00403C  0E00               	movlw	0
  9546  00403E  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  9547  004040  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  9548  004042  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  9549  004044  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  9550  004046  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  9551  004048  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  9552  00404A  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  9553  00404C  0E01               	movlw	1
  9554  00404E  6E25               	movwf	___aomod@sign^0,c
  9555  004050                     l7753:
  9556  004050  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  9557  004052  EF2F  F020         	goto	u7810
  9558  004056  EF2D  F020         	goto	u7811
  9559  00405A                     u7811:
  9560  00405A  EF3F  F020         	goto	l7757
  9561  00405E                     u7810:
  9562  00405E  1E23               	comf	(___aomod@divisor+7)^0,f,c
  9563  004060  1E22               	comf	(___aomod@divisor+6)^0,f,c
  9564  004062  1E21               	comf	(___aomod@divisor+5)^0,f,c
  9565  004064  1E20               	comf	(___aomod@divisor+4)^0,f,c
  9566  004066  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  9567  004068  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  9568  00406A  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  9569  00406C  6C1C               	negf	___aomod@divisor^0,c
  9570  00406E  0E00               	movlw	0
  9571  004070  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  9572  004072  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  9573  004074  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  9574  004076  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  9575  004078  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  9576  00407A  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  9577  00407C  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  9578  00407E                     l7757:
  9579  00407E  501C               	movf	___aomod@divisor^0,w,c
  9580  004080  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  9581  004082  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  9582  004084  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  9583  004086  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  9584  004088  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  9585  00408A  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  9586  00408C  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  9587  00408E  B4D8               	btfsc	status,2,c
  9588  004090  EF4C  F020         	goto	u7821
  9589  004094  EF4E  F020         	goto	u7820
  9590  004098                     u7821:
  9591  004098  EF96  F020         	goto	l7773
  9592  00409C                     u7820:
  9593  00409C  0E01               	movlw	1
  9594  00409E  6E24               	movwf	___aomod@counter^0,c
  9595  0040A0  EF5C  F020         	goto	l7763
  9596  0040A4                     l7761:
  9597  0040A4  90D8               	bcf	status,0,c
  9598  0040A6  361C               	rlcf	___aomod@divisor^0,f,c
  9599  0040A8  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  9600  0040AA  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  9601  0040AC  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  9602  0040AE  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  9603  0040B0  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  9604  0040B2  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  9605  0040B4  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  9606  0040B6  2A24               	incf	___aomod@counter^0,f,c
  9607  0040B8                     l7763:
  9608  0040B8  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  9609  0040BA  EF61  F020         	goto	u7831
  9610  0040BE  EF63  F020         	goto	u7830
  9611  0040C2                     u7831:
  9612  0040C2  EF52  F020         	goto	l7761
  9613  0040C6                     u7830:
  9614  0040C6                     l7765:
  9615  0040C6  501C               	movf	___aomod@divisor^0,w,c
  9616  0040C8  5C14               	subwf	___aomod@dividend^0,w,c
  9617  0040CA  501D               	movf	(___aomod@divisor+1)^0,w,c
  9618  0040CC  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  9619  0040CE  501E               	movf	(___aomod@divisor+2)^0,w,c
  9620  0040D0  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  9621  0040D2  501F               	movf	(___aomod@divisor+3)^0,w,c
  9622  0040D4  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  9623  0040D6  5020               	movf	(___aomod@divisor+4)^0,w,c
  9624  0040D8  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  9625  0040DA  5021               	movf	(___aomod@divisor+5)^0,w,c
  9626  0040DC  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  9627  0040DE  5022               	movf	(___aomod@divisor+6)^0,w,c
  9628  0040E0  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  9629  0040E2  5023               	movf	(___aomod@divisor+7)^0,w,c
  9630  0040E4  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  9631  0040E6  A0D8               	btfss	status,0,c
  9632  0040E8  EF78  F020         	goto	u7841
  9633  0040EC  EF7A  F020         	goto	u7840
  9634  0040F0                     u7841:
  9635  0040F0  EF8A  F020         	goto	l7769
  9636  0040F4                     u7840:
  9637  0040F4  501C               	movf	___aomod@divisor^0,w,c
  9638  0040F6  5E14               	subwf	___aomod@dividend^0,f,c
  9639  0040F8  501D               	movf	(___aomod@divisor+1)^0,w,c
  9640  0040FA  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  9641  0040FC  501E               	movf	(___aomod@divisor+2)^0,w,c
  9642  0040FE  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  9643  004100  501F               	movf	(___aomod@divisor+3)^0,w,c
  9644  004102  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  9645  004104  5020               	movf	(___aomod@divisor+4)^0,w,c
  9646  004106  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  9647  004108  5021               	movf	(___aomod@divisor+5)^0,w,c
  9648  00410A  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  9649  00410C  5022               	movf	(___aomod@divisor+6)^0,w,c
  9650  00410E  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  9651  004110  5023               	movf	(___aomod@divisor+7)^0,w,c
  9652  004112  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  9653  004114                     l7769:
  9654  004114  90D8               	bcf	status,0,c
  9655  004116  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  9656  004118  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  9657  00411A  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  9658  00411C  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  9659  00411E  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  9660  004120  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  9661  004122  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  9662  004124  321C               	rrcf	___aomod@divisor^0,f,c
  9663  004126  2E24               	decfsz	___aomod@counter^0,f,c
  9664  004128  EF63  F020         	goto	l7765
  9665  00412C                     l7773:
  9666  00412C  5025               	movf	___aomod@sign^0,w,c
  9667  00412E  B4D8               	btfsc	status,2,c
  9668  004130  EF9C  F020         	goto	u7851
  9669  004134  EF9E  F020         	goto	u7850
  9670  004138                     u7851:
  9671  004138  EFAE  F020         	goto	l7777
  9672  00413C                     u7850:
  9673  00413C  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  9674  00413E  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  9675  004140  1E19               	comf	(___aomod@dividend+5)^0,f,c
  9676  004142  1E18               	comf	(___aomod@dividend+4)^0,f,c
  9677  004144  1E17               	comf	(___aomod@dividend+3)^0,f,c
  9678  004146  1E16               	comf	(___aomod@dividend+2)^0,f,c
  9679  004148  1E15               	comf	(___aomod@dividend+1)^0,f,c
  9680  00414A  6C14               	negf	___aomod@dividend^0,c
  9681  00414C  0E00               	movlw	0
  9682  00414E  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  9683  004150  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  9684  004152  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  9685  004154  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  9686  004156  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  9687  004158  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  9688  00415A  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  9689  00415C                     l7777:
  9690  00415C  C014  F014         	movff	___aomod@dividend,?___aomod
  9691  004160  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  9692  004164  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  9693  004168  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  9694  00416C  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  9695  004170  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  9696  004174  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  9697  004178  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  9698  00417C  0012               	return		;funcret
  9699  00417E                     __end_of___aomod:
  9700                           	callstack 0
  9701                           
  9702 ;; *************** function ___aodiv *****************
  9703 ;; Defined at:
  9704 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  dividend        8   19[COMRAM] long long 
  9707 ;;  divisor         8   27[COMRAM] long long 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  quotient        8   37[COMRAM] long long 
  9710 ;;  sign            1   36[COMRAM] unsigned char 
  9711 ;;  counter         1   35[COMRAM] unsigned char 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  8   19[COMRAM] long long 
  9714 ;; Registers used:
  9715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9721 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9725 ;;Total ram usage:       26 bytes
  9726 ;; Hardware stack levels used: 1
  9727 ;; Hardware stack levels required when called: 8
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_dtoa
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           	psect	text36
  9736  003E92                     __ptext36:
  9737                           	callstack 0
  9738  003E92                     ___aodiv:
  9739                           	callstack 16
  9740  003E92  0E00               	movlw	0
  9741  003E94  6E25               	movwf	___aodiv@sign^0,c
  9742  003E96  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  9743  003E98  EF52  F01F         	goto	u7730
  9744  003E9C  EF50  F01F         	goto	u7731
  9745  003EA0                     u7731:
  9746  003EA0  EF64  F01F         	goto	l7709
  9747  003EA4                     u7730:
  9748  003EA4  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  9749  003EA6  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  9750  003EA8  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  9751  003EAA  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  9752  003EAC  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  9753  003EAE  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  9754  003EB0  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  9755  003EB2  6C1C               	negf	___aodiv@divisor^0,c
  9756  003EB4  0E00               	movlw	0
  9757  003EB6  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  9758  003EB8  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  9759  003EBA  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  9760  003EBC  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  9761  003EBE  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  9762  003EC0  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  9763  003EC2  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  9764  003EC4  0E01               	movlw	1
  9765  003EC6  6E25               	movwf	___aodiv@sign^0,c
  9766  003EC8                     l7709:
  9767  003EC8  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  9768  003ECA  EF6B  F01F         	goto	u7740
  9769  003ECE  EF69  F01F         	goto	u7741
  9770  003ED2                     u7741:
  9771  003ED2  EF7D  F01F         	goto	l7715
  9772  003ED6                     u7740:
  9773  003ED6  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  9774  003ED8  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  9775  003EDA  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  9776  003EDC  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  9777  003EDE  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  9778  003EE0  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  9779  003EE2  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  9780  003EE4  6C14               	negf	___aodiv@dividend^0,c
  9781  003EE6  0E00               	movlw	0
  9782  003EE8  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  9783  003EEA  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  9784  003EEC  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  9785  003EEE  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  9786  003EF0  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  9787  003EF2  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  9788  003EF4  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  9789  003EF6  0E01               	movlw	1
  9790  003EF8  1A25               	xorwf	___aodiv@sign^0,f,c
  9791  003EFA                     l7715:
  9792  003EFA  EE20  F026         	lfsr	2,___aodiv@quotient
  9793  003EFE  0E07               	movlw	7
  9794  003F00                     u7751:
  9795  003F00  6ADE               	clrf	postinc2,c
  9796  003F02  06E8               	decf	wreg,f,c
  9797  003F04  E2FD               	bc	u7751
  9798  003F06  501C               	movf	___aodiv@divisor^0,w,c
  9799  003F08  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  9800  003F0A  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  9801  003F0C  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  9802  003F0E  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  9803  003F10  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  9804  003F12  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  9805  003F14  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  9806  003F16  B4D8               	btfsc	status,2,c
  9807  003F18  EF90  F01F         	goto	u7761
  9808  003F1C  EF92  F01F         	goto	u7760
  9809  003F20                     u7761:
  9810  003F20  EFE4  F01F         	goto	l7737
  9811  003F24                     u7760:
  9812  003F24  0E01               	movlw	1
  9813  003F26  6E24               	movwf	___aodiv@counter^0,c
  9814  003F28  EFA0  F01F         	goto	l7723
  9815  003F2C                     l7721:
  9816  003F2C  90D8               	bcf	status,0,c
  9817  003F2E  361C               	rlcf	___aodiv@divisor^0,f,c
  9818  003F30  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  9819  003F32  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  9820  003F34  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  9821  003F36  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  9822  003F38  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  9823  003F3A  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  9824  003F3C  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  9825  003F3E  2A24               	incf	___aodiv@counter^0,f,c
  9826  003F40                     l7723:
  9827  003F40  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  9828  003F42  EFA5  F01F         	goto	u7771
  9829  003F46  EFA7  F01F         	goto	u7770
  9830  003F4A                     u7771:
  9831  003F4A  EF96  F01F         	goto	l7721
  9832  003F4E                     u7770:
  9833  003F4E                     l7725:
  9834  003F4E  90D8               	bcf	status,0,c
  9835  003F50  3626               	rlcf	___aodiv@quotient^0,f,c
  9836  003F52  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  9837  003F54  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  9838  003F56  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  9839  003F58  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  9840  003F5A  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  9841  003F5C  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  9842  003F5E  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  9843  003F60  501C               	movf	___aodiv@divisor^0,w,c
  9844  003F62  5C14               	subwf	___aodiv@dividend^0,w,c
  9845  003F64  501D               	movf	(___aodiv@divisor+1)^0,w,c
  9846  003F66  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  9847  003F68  501E               	movf	(___aodiv@divisor+2)^0,w,c
  9848  003F6A  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  9849  003F6C  501F               	movf	(___aodiv@divisor+3)^0,w,c
  9850  003F6E  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  9851  003F70  5020               	movf	(___aodiv@divisor+4)^0,w,c
  9852  003F72  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  9853  003F74  5021               	movf	(___aodiv@divisor+5)^0,w,c
  9854  003F76  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  9855  003F78  5022               	movf	(___aodiv@divisor+6)^0,w,c
  9856  003F7A  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  9857  003F7C  5023               	movf	(___aodiv@divisor+7)^0,w,c
  9858  003F7E  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  9859  003F80  A0D8               	btfss	status,0,c
  9860  003F82  EFC5  F01F         	goto	u7781
  9861  003F86  EFC7  F01F         	goto	u7780
  9862  003F8A                     u7781:
  9863  003F8A  EFD8  F01F         	goto	l7733
  9864  003F8E                     u7780:
  9865  003F8E  501C               	movf	___aodiv@divisor^0,w,c
  9866  003F90  5E14               	subwf	___aodiv@dividend^0,f,c
  9867  003F92  501D               	movf	(___aodiv@divisor+1)^0,w,c
  9868  003F94  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  9869  003F96  501E               	movf	(___aodiv@divisor+2)^0,w,c
  9870  003F98  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  9871  003F9A  501F               	movf	(___aodiv@divisor+3)^0,w,c
  9872  003F9C  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  9873  003F9E  5020               	movf	(___aodiv@divisor+4)^0,w,c
  9874  003FA0  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  9875  003FA2  5021               	movf	(___aodiv@divisor+5)^0,w,c
  9876  003FA4  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  9877  003FA6  5022               	movf	(___aodiv@divisor+6)^0,w,c
  9878  003FA8  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  9879  003FAA  5023               	movf	(___aodiv@divisor+7)^0,w,c
  9880  003FAC  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  9881  003FAE  8026               	bsf	___aodiv@quotient^0,0,c
  9882  003FB0                     l7733:
  9883  003FB0  90D8               	bcf	status,0,c
  9884  003FB2  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  9885  003FB4  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  9886  003FB6  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  9887  003FB8  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  9888  003FBA  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  9889  003FBC  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  9890  003FBE  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  9891  003FC0  321C               	rrcf	___aodiv@divisor^0,f,c
  9892  003FC2  2E24               	decfsz	___aodiv@counter^0,f,c
  9893  003FC4  EFA7  F01F         	goto	l7725
  9894  003FC8                     l7737:
  9895  003FC8  5025               	movf	___aodiv@sign^0,w,c
  9896  003FCA  B4D8               	btfsc	status,2,c
  9897  003FCC  EFEA  F01F         	goto	u7791
  9898  003FD0  EFEC  F01F         	goto	u7790
  9899  003FD4                     u7791:
  9900  003FD4  EFFC  F01F         	goto	l7741
  9901  003FD8                     u7790:
  9902  003FD8  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  9903  003FDA  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  9904  003FDC  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  9905  003FDE  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  9906  003FE0  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  9907  003FE2  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  9908  003FE4  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  9909  003FE6  6C26               	negf	___aodiv@quotient^0,c
  9910  003FE8  0E00               	movlw	0
  9911  003FEA  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  9912  003FEC  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  9913  003FEE  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  9914  003FF0  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  9915  003FF2  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  9916  003FF4  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  9917  003FF6  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  9918  003FF8                     l7741:
  9919  003FF8  C026  F014         	movff	___aodiv@quotient,?___aodiv
  9920  003FFC  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  9921  004000  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  9922  004004  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  9923  004008  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  9924  00400C  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  9925  004010  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  9926  004014  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  9927  004018  0012               	return		;funcret
  9928  00401A                     __end_of___aodiv:
  9929                           	callstack 0
  9930                           
  9931 ;; *************** function _ADCC_GetSingleConversion *****************
  9932 ;; Defined at:
  9933 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  channel         1    wreg     enum E16058
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  channel         1   23[COMRAM] enum E16058
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  2   19[COMRAM] unsigned short 
  9940 ;; Registers used:
  9941 ;;		wreg, status,2, status,0
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;Total ram usage:        5 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; Hardware stack levels required when called: 8
  9954 ;; This function calls:
  9955 ;;		Nothing
  9956 ;; This function is called by:
  9957 ;;		_getBatteryVoltage
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text37
  9962  005AC0                     __ptext37:
  9963                           	callstack 0
  9964  005AC0                     _ADCC_GetSingleConversion:
  9965                           	callstack 20
  9966                           
  9967                           ;incstack = 0
  9968                           ;ADCC_GetSingleConversion@channel stored from wreg
  9969  005AC0  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9970  005AC2                     
  9971                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9972  005AC2  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9973  005AC8                     
  9974                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9975  005AC8  013E               	movlb	62	; () banked
  9976  005ACA  8FF8               	bsf	248,7,b	;volatile
  9977  005ACC                     
  9978                           ; BSR set to: 62
  9979                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9980  005ACC  9DF8               	bcf	248,6,b	;volatile
  9981  005ACE                     
  9982                           ; BSR set to: 62
  9983                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9984  005ACE  81F8               	bsf	248,0,b	;volatile
  9985  005AD0                     l1054:
  9986                           
  9987                           ; BSR set to: 62
  9988                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9989  005AD0  B1F8               	btfsc	248,0,b	;volatile
  9990  005AD2  EF6D  F02D         	goto	u9791
  9991  005AD6  EF6F  F02D         	goto	u9790
  9992  005ADA                     u9791:
  9993  005ADA  EF68  F02D         	goto	l1054
  9994  005ADE                     u9790:
  9995  005ADE                     
  9996                           ; BSR set to: 62
  9997                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9998  005ADE  51F0               	movf	240,w,b	;volatile
  9999  005AE0  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
 10000  005AE2  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
 10001  005AE4  51EF               	movf	239,w,b	;volatile
 10002  005AE6  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
 10003  005AE8  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
 10004  005AEA  0E00               	movlw	0
 10005  005AEC  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
 10006  005AEE  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
 10007  005AF0                     
 10008                           ; BSR set to: 62
 10009  005AF0  0012               	return		;funcret
 10010  005AF2                     __end_of_ADCC_GetSingleConversion:
 10011                           	callstack 0
 10012                           
 10013 ;; *************** function _calcSpeed *****************
 10014 ;; Defined at:
 10015 ;;		line 282 in file "main.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;		None
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;  speed           2   39[BANK0 ] short 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10030 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10033 ;;Total ram usage:        6 bytes
 10034 ;; Hardware stack levels used: 1
 10035 ;; Hardware stack levels required when called: 9
 10036 ;; This function calls:
 10037 ;;		___fladd
 10038 ;;		___flmul
 10039 ;;		___fltol
 10040 ;;		___xxtofl
 10041 ;; This function is called by:
 10042 ;;		_loop
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           	psect	text38
 10047  003756                     __ptext38:
 10048                           	callstack 0
 10049  003756                     _calcSpeed:
 10050                           	callstack 20
 10051  003756                     
 10052                           ;main.c: 283:     int16_t speed = 0;
 10053  003756  0E00               	movlw	0
 10054  003758  0100               	movlb	0	; () banked
 10055  00375A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10056  00375C  0E00               	movlw	0
 10057  00375E  6F87               	movwf	calcSpeed@speed& (0+255),b
 10058                           
 10059                           ;main.c: 285:     switch (driveMode) {
 10060  003760  EF61  F01C         	goto	l9171
 10061  003764                     l9135:
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;main.c: 287:             if (distFront > (30)) {
 10065  003764  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10066  003766  E109               	bnz	u10180
 10067  003768  0E1F               	movlw	31
 10068  00376A  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10069  00376C  A0D8               	btfss	status,0,c
 10070  00376E  EFBB  F01B         	goto	u10181
 10071  003772  EFBD  F01B         	goto	u10180
 10072  003776                     u10181:
 10073  003776  EFBF  F01B         	goto	l9139
 10074  00377A                     u10180:
 10075  00377A                     
 10076                           ; BSR set to: 0
 10077                           ;main.c: 288:                 driveMode = Straight;
 10078  00377A  0E00               	movlw	0
 10079  00377C  6FFC               	movwf	_driveMode& (0+255),b
 10080  00377E                     l9139:
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;main.c: 290:             if (setSpeed > (100)) {
 10084  00377E  BFEE               	btfsc	(_setSpeed+1)& (0+255),7,b
 10085  003780  EFCB  F01B         	goto	u10191
 10086  003784  51EE               	movf	(_setSpeed+1)& (0+255),w,b
 10087  003786  E109               	bnz	u10190
 10088  003788  0E65               	movlw	101
 10089  00378A  5DED               	subwf	_setSpeed& (0+255),w,b
 10090  00378C  A0D8               	btfss	status,0,c
 10091  00378E  EFCB  F01B         	goto	u10191
 10092  003792  EFCD  F01B         	goto	u10190
 10093  003796                     u10191:
 10094  003796  EFE8  F01B         	goto	l9149
 10095  00379A                     u10190:
 10096  00379A                     
 10097                           ; BSR set to: 0
 10098                           ;main.c: 291:                     speed = setSpeed;
 10099  00379A  C0ED  F087         	movff	_setSpeed,calcSpeed@speed
 10100  00379E  C0EE  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 10101  0037A2                     
 10102                           ; BSR set to: 0
 10103                           ;main.c: 292:                 if (distFront < (15)) {
 10104  0037A2  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10105  0037A4  E107               	bnz	u10201
 10106  0037A6  0E0F               	movlw	15
 10107  0037A8  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10108  0037AA  B0D8               	btfsc	status,0,c
 10109  0037AC  EFDA  F01B         	goto	u10201
 10110  0037B0  EFDC  F01B         	goto	u10200
 10111  0037B4                     u10201:
 10112  0037B4  EFE2  F01B         	goto	l9147
 10113  0037B8                     u10200:
 10114  0037B8                     
 10115                           ; BSR set to: 0
 10116                           ;main.c: 293:                     speed -= 4;
 10117  0037B8  0EFC               	movlw	252
 10118  0037BA  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10119  0037BC  0EFF               	movlw	255
 10120  0037BE  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10121                           
 10122                           ;main.c: 294:                 } else {
 10123  0037C0  EF86  F01C         	goto	l9173
 10124  0037C4                     l9147:
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;main.c: 295:                     speed -= 2;
 10128  0037C4  0EFE               	movlw	254
 10129  0037C6  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10130  0037C8  0EFF               	movlw	255
 10131  0037CA  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10132  0037CC  EF86  F01C         	goto	l9173
 10133  0037D0                     l9149:
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;main.c: 298:                 speed = (100);
 10137  0037D0  0E00               	movlw	0
 10138  0037D2  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10139  0037D4  0E64               	movlw	100
 10140  0037D6  6F87               	movwf	calcSpeed@speed& (0+255),b
 10141  0037D8  EF86  F01C         	goto	l9173
 10142  0037DC                     l9151:
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;main.c: 302:             if (distFront < (30)) {
 10146  0037DC  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10147  0037DE  E107               	bnz	u10211
 10148  0037E0  0E1E               	movlw	30
 10149  0037E2  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10150  0037E4  B0D8               	btfsc	status,0,c
 10151  0037E6  EFF7  F01B         	goto	u10211
 10152  0037EA  EFF9  F01B         	goto	u10210
 10153  0037EE                     u10211:
 10154  0037EE  EFFB  F01B         	goto	l9155
 10155  0037F2                     u10210:
 10156  0037F2                     
 10157                           ; BSR set to: 0
 10158                           ;main.c: 303:                 driveMode = Brake;
 10159  0037F2  0E01               	movlw	1
 10160  0037F4  6FFC               	movwf	_driveMode& (0+255),b
 10161  0037F6                     l9155:
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;main.c: 306:             if (distFront >= (150)) {
 10165  0037F6  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10166  0037F8  E109               	bnz	u10220
 10167  0037FA  0E96               	movlw	150
 10168  0037FC  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10169  0037FE  A0D8               	btfss	status,0,c
 10170  003800  EF04  F01C         	goto	u10221
 10171  003804  EF06  F01C         	goto	u10220
 10172  003808                     u10221:
 10173  003808  EF4F  F01C         	goto	l9159
 10174  00380C                     u10220:
 10175  00380C                     
 10176                           ; BSR set to: 0
 10177                           ;main.c: 307:                 speed = (int16_t) ((0.0) * (distFront - (150)) + (275));
 10178  00380C  0E00               	movlw	0
 10179  00380E  6F71               	movwf	___fladd@a& (0+255),b
 10180  003810  0E80               	movlw	128
 10181  003812  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10182  003814  0E89               	movlw	137
 10183  003816  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10184  003818  0E43               	movlw	67
 10185  00381A  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10186  00381C  0E00               	movlw	0
 10187  00381E  6E2E               	movwf	___flmul@a^0,c
 10188  003820  0E00               	movlw	0
 10189  003822  6E2F               	movwf	(___flmul@a+1)^0,c
 10190  003824  0E00               	movlw	0
 10191  003826  6E30               	movwf	(___flmul@a+2)^0,c
 10192  003828  0E00               	movlw	0
 10193  00382A  6E31               	movwf	(___flmul@a+3)^0,c
 10194  00382C  0E6A               	movlw	106
 10195  00382E  6F83               	movwf	??_calcSpeed& (0+255),b
 10196  003830  0EFF               	movlw	255
 10197  003832  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 10198  003834  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 10199  003838  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 10200  00383C  5183               	movf	??_calcSpeed& (0+255),w,b
 10201  00383E  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10202  003840  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10203  003842  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10204  003844  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10205  003848  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10206  00384C  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10207  00384E  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10208  003850  0E00               	movlw	0
 10209  003852  ECAB  F01D         	call	___xxtofl
 10210  003856  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10211  00385A  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10212  00385E  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10213  003862  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10214  003866  ECB1  F013         	call	___flmul	;wreg free
 10215  00386A  C02A  F06D         	movff	?___flmul,___fladd@b
 10216  00386E  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10217  003872  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10218  003876  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10219  00387A  EC50  F011         	call	___fladd	;wreg free
 10220  00387E  C06D  F079         	movff	?___fladd,___fltol@f1
 10221  003882  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10222  003886  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10223  00388A  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10224  00388E  EC14  F023         	call	___fltol	;wreg free
 10225  003892  C079  F087         	movff	?___fltol,calcSpeed@speed
 10226  003896  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10227                           
 10228                           ;main.c: 308:             } else {
 10229  00389A  EF86  F01C         	goto	l9173
 10230  00389E                     l9159:
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;main.c: 309:                 speed = (275);
 10234  00389E  0E01               	movlw	1
 10235  0038A0  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10236  0038A2  0E13               	movlw	19
 10237  0038A4  6F87               	movwf	calcSpeed@speed& (0+255),b
 10238  0038A6  EF86  F01C         	goto	l9173
 10239  0038AA                     l9161:
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;main.c: 314:             speed = (-125);
 10243  0038AA  0EFF               	movlw	255
 10244  0038AC  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10245  0038AE  0E83               	movlw	131
 10246  0038B0  6F87               	movwf	calcSpeed@speed& (0+255),b
 10247                           
 10248                           ;main.c: 315:             break;
 10249  0038B2  EF86  F01C         	goto	l9173
 10250  0038B6                     l9165:
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;main.c: 320:             speed = (200);
 10254  0038B6  0E00               	movlw	0
 10255  0038B8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10256  0038BA  0EC8               	movlw	200
 10257  0038BC  6F87               	movwf	calcSpeed@speed& (0+255),b
 10258                           
 10259                           ;main.c: 321:             break;
 10260  0038BE  EF86  F01C         	goto	l9173
 10261  0038C2                     l9171:
 10262                           
 10263                           ; BSR set to: 0
 10264  0038C2  51FC               	movf	_driveMode& (0+255),w,b
 10265  0038C4  6F83               	movwf	??_calcSpeed& (0+255),b
 10266  0038C6  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10267                           
 10268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10269                           ; Switch size 1, requested type "simple"
 10270                           ; Number of cases is 1, Range of values is 0 to 0
 10271                           ; switch strategies available:
 10272                           ; Name         Instructions Cycles
 10273                           ; simple_byte            4     3 (average)
 10274                           ;	Chosen strategy is simple_byte
 10275  0038C8  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10276  0038CA  0A00               	xorlw	0	; case 0
 10277  0038CC  B4D8               	btfsc	status,2,c
 10278  0038CE  EF6B  F01C         	goto	l9417
 10279  0038D2  EF86  F01C         	goto	l9173
 10280  0038D6                     l9417:
 10281                           
 10282                           ; BSR set to: 0
 10283                           ; Switch size 1, requested type "simple"
 10284                           ; Number of cases is 6, Range of values is 0 to 5
 10285                           ; switch strategies available:
 10286                           ; Name         Instructions Cycles
 10287                           ; simple_byte           19    10 (average)
 10288                           ;	Chosen strategy is simple_byte
 10289  0038D6  5183               	movf	??_calcSpeed& (0+255),w,b
 10290  0038D8  0A00               	xorlw	0	; case 0
 10291  0038DA  B4D8               	btfsc	status,2,c
 10292  0038DC  EFEE  F01B         	goto	l9151
 10293  0038E0  0A01               	xorlw	1	; case 1
 10294  0038E2  B4D8               	btfsc	status,2,c
 10295  0038E4  EFB2  F01B         	goto	l9135
 10296  0038E8  0A03               	xorlw	3	; case 2
 10297  0038EA  B4D8               	btfsc	status,2,c
 10298  0038EC  EF55  F01C         	goto	l9161
 10299  0038F0  0A01               	xorlw	1	; case 3
 10300  0038F2  B4D8               	btfsc	status,2,c
 10301  0038F4  EF55  F01C         	goto	l9161
 10302  0038F8  0A07               	xorlw	7	; case 4
 10303  0038FA  B4D8               	btfsc	status,2,c
 10304  0038FC  EF5B  F01C         	goto	l9165
 10305  003900  0A01               	xorlw	1	; case 5
 10306  003902  B4D8               	btfsc	status,2,c
 10307  003904  EF5B  F01C         	goto	l9165
 10308  003908  EF86  F01C         	goto	l9173
 10309  00390C                     l9173:
 10310                           
 10311                           ;main.c: 327:     if (speed > (400)) {
 10312  00390C  0100               	movlb	0	; () banked
 10313  00390E  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10314  003910  EF93  F01C         	goto	u10231
 10315  003914  0E91               	movlw	145
 10316  003916  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10317  003918  0E01               	movlw	1
 10318  00391A  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10319  00391C  A0D8               	btfss	status,0,c
 10320  00391E  EF93  F01C         	goto	u10231
 10321  003922  EF95  F01C         	goto	u10230
 10322  003926                     u10231:
 10323  003926  EF99  F01C         	goto	l9177
 10324  00392A                     u10230:
 10325  00392A                     
 10326                           ; BSR set to: 0
 10327                           ;main.c: 328:         speed = (400);
 10328  00392A  0E01               	movlw	1
 10329  00392C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10330  00392E  0E90               	movlw	144
 10331  003930  6F87               	movwf	calcSpeed@speed& (0+255),b
 10332  003932                     l9177:
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;main.c: 330:     if (speed < (-250)) {
 10336  003932  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10337  003934  EFA5  F01C         	goto	u10241
 10338  003938  0E06               	movlw	6
 10339  00393A  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10340  00393C  0EFF               	movlw	255
 10341  00393E  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10342  003940  B0D8               	btfsc	status,0,c
 10343  003942  EFA5  F01C         	goto	u10241
 10344  003946  EFA7  F01C         	goto	u10240
 10345  00394A                     u10241:
 10346  00394A  EFAB  F01C         	goto	l9181
 10347  00394E                     u10240:
 10348  00394E                     
 10349                           ; BSR set to: 0
 10350                           ;main.c: 331:         speed = (-250);
 10351  00394E  0EFF               	movlw	255
 10352  003950  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10353  003952  0E06               	movlw	6
 10354  003954  6F87               	movwf	calcSpeed@speed& (0+255),b
 10355  003956                     l9181:
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;main.c: 333:     setSpeed = speed;
 10359  003956  C087  F0ED         	movff	calcSpeed@speed,_setSpeed
 10360  00395A  C088  F0EE         	movff	calcSpeed@speed+1,_setSpeed+1
 10361  00395E                     
 10362                           ; BSR set to: 0
 10363  00395E  0012               	return		;funcret
 10364  003960                     __end_of_calcSpeed:
 10365                           	callstack 0
 10366                           
 10367 ;; *************** function ___fladd *****************
 10368 ;; Defined at:
 10369 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;  b               4   13[BANK0 ] void 
 10372 ;;  a               4   17[BANK0 ] void 
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;  grs             1   24[BANK0 ] unsigned char 
 10375 ;;  bexp            1   23[BANK0 ] unsigned char 
 10376 ;;  aexp            1   22[BANK0 ] unsigned char 
 10377 ;;  signs           1   21[BANK0 ] unsigned char 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  4   13[BANK0 ] unsigned char 
 10380 ;; Registers used:
 10381 ;;		wreg, status,2, status,0
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10387 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10388 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10390 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10391 ;;Total ram usage:       16 bytes
 10392 ;; Hardware stack levels used: 1
 10393 ;; Hardware stack levels required when called: 8
 10394 ;; This function calls:
 10395 ;;		Nothing
 10396 ;; This function is called by:
 10397 ;;		_calcSpeed
 10398 ;;		___flsub
 10399 ;;		_efgtoa
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           	psect	text39
 10404  0022A0                     __ptext39:
 10405                           	callstack 0
 10406  0022A0                     ___fladd:
 10407                           	callstack 15
 10408  0022A0  0100               	movlb	0	; () banked
 10409  0022A2  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10410  0022A4  0B80               	andlw	128
 10411  0022A6  6F75               	movwf	___fladd@signs& (0+255),b
 10412  0022A8  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10413  0022AA  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10414  0022AC  6F77               	movwf	___fladd@bexp& (0+255),b
 10415  0022AE                     
 10416                           ; BSR set to: 0
 10417  0022AE  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10418  0022B0  EF5C  F011         	goto	u7301
 10419  0022B4  EF5E  F011         	goto	u7300
 10420  0022B8                     u7301:
 10421  0022B8  EF5F  F011         	goto	l7483
 10422  0022BC                     u7300:
 10423  0022BC                     
 10424                           ; BSR set to: 0
 10425  0022BC  8177               	bsf	___fladd@bexp& (0+255),0,b
 10426  0022BE                     l7483:
 10427                           
 10428                           ; BSR set to: 0
 10429  0022BE  5177               	movf	___fladd@bexp& (0+255),w,b
 10430  0022C0  B4D8               	btfsc	status,2,c
 10431  0022C2  EF65  F011         	goto	u7311
 10432  0022C6  EF67  F011         	goto	u7310
 10433  0022CA                     u7311:
 10434  0022CA  EF7C  F011         	goto	l7493
 10435  0022CE                     u7310:
 10436  0022CE                     
 10437                           ; BSR set to: 0
 10438  0022CE  2977               	incf	___fladd@bexp& (0+255),w,b
 10439  0022D0  A4D8               	btfss	status,2,c
 10440  0022D2  EF6D  F011         	goto	u7321
 10441  0022D6  EF6F  F011         	goto	u7320
 10442  0022DA                     u7321:
 10443  0022DA  EF77  F011         	goto	l7489
 10444  0022DE                     u7320:
 10445  0022DE                     
 10446                           ; BSR set to: 0
 10447  0022DE  0E00               	movlw	0
 10448  0022E0  6F6D               	movwf	___fladd@b& (0+255),b
 10449  0022E2  0E00               	movlw	0
 10450  0022E4  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10451  0022E6  0E00               	movlw	0
 10452  0022E8  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10453  0022EA  0E00               	movlw	0
 10454  0022EC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10455  0022EE                     l7489:
 10456                           
 10457                           ; BSR set to: 0
 10458  0022EE  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10459  0022F0                     
 10460                           ; BSR set to: 0
 10461  0022F0  0E00               	movlw	0
 10462  0022F2  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10463  0022F4  EF84  F011         	goto	l7495
 10464  0022F8                     l7493:
 10465                           
 10466                           ; BSR set to: 0
 10467  0022F8  0E00               	movlw	0
 10468  0022FA  6F6D               	movwf	___fladd@b& (0+255),b
 10469  0022FC  0E00               	movlw	0
 10470  0022FE  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10471  002300  0E00               	movlw	0
 10472  002302  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10473  002304  0E00               	movlw	0
 10474  002306  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10475  002308                     l7495:
 10476                           
 10477                           ; BSR set to: 0
 10478  002308  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10479  00230A  0B80               	andlw	128
 10480  00230C  6F76               	movwf	___fladd@aexp& (0+255),b
 10481  00230E                     
 10482                           ; BSR set to: 0
 10483  00230E  5175               	movf	___fladd@signs& (0+255),w,b
 10484  002310  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10485  002312  B4D8               	btfsc	status,2,c
 10486  002314  EF8E  F011         	goto	u7331
 10487  002318  EF90  F011         	goto	u7330
 10488  00231C                     u7331:
 10489  00231C  EF91  F011         	goto	l7501
 10490  002320                     u7330:
 10491  002320                     
 10492                           ; BSR set to: 0
 10493  002320  8D75               	bsf	___fladd@signs& (0+255),6,b
 10494  002322                     l7501:
 10495                           
 10496                           ; BSR set to: 0
 10497  002322  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10498  002324  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10499  002326  6F76               	movwf	___fladd@aexp& (0+255),b
 10500  002328                     
 10501                           ; BSR set to: 0
 10502  002328  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10503  00232A  EF99  F011         	goto	u7341
 10504  00232E  EF9B  F011         	goto	u7340
 10505  002332                     u7341:
 10506  002332  EF9C  F011         	goto	l7507
 10507  002336                     u7340:
 10508  002336                     
 10509                           ; BSR set to: 0
 10510  002336  8176               	bsf	___fladd@aexp& (0+255),0,b
 10511  002338                     l7507:
 10512                           
 10513                           ; BSR set to: 0
 10514  002338  5176               	movf	___fladd@aexp& (0+255),w,b
 10515  00233A  B4D8               	btfsc	status,2,c
 10516  00233C  EFA2  F011         	goto	u7351
 10517  002340  EFA4  F011         	goto	u7350
 10518  002344                     u7351:
 10519  002344  EFB9  F011         	goto	l7517
 10520  002348                     u7350:
 10521  002348                     
 10522                           ; BSR set to: 0
 10523  002348  2976               	incf	___fladd@aexp& (0+255),w,b
 10524  00234A  A4D8               	btfss	status,2,c
 10525  00234C  EFAA  F011         	goto	u7361
 10526  002350  EFAC  F011         	goto	u7360
 10527  002354                     u7361:
 10528  002354  EFB4  F011         	goto	l7513
 10529  002358                     u7360:
 10530  002358                     
 10531                           ; BSR set to: 0
 10532  002358  0E00               	movlw	0
 10533  00235A  6F71               	movwf	___fladd@a& (0+255),b
 10534  00235C  0E00               	movlw	0
 10535  00235E  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10536  002360  0E00               	movlw	0
 10537  002362  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10538  002364  0E00               	movlw	0
 10539  002366  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10540  002368                     l7513:
 10541                           
 10542                           ; BSR set to: 0
 10543  002368  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10544  00236A                     
 10545                           ; BSR set to: 0
 10546  00236A  0E00               	movlw	0
 10547  00236C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10548  00236E  EFC1  F011         	goto	l7519
 10549  002372                     l7517:
 10550                           
 10551                           ; BSR set to: 0
 10552  002372  0E00               	movlw	0
 10553  002374  6F71               	movwf	___fladd@a& (0+255),b
 10554  002376  0E00               	movlw	0
 10555  002378  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10556  00237A  0E00               	movlw	0
 10557  00237C  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10558  00237E  0E00               	movlw	0
 10559  002380  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10560  002382                     l7519:
 10561                           
 10562                           ; BSR set to: 0
 10563  002382  5177               	movf	___fladd@bexp& (0+255),w,b
 10564  002384  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10565  002386  B0D8               	btfsc	status,0,c
 10566  002388  EFC8  F011         	goto	u7371
 10567  00238C  EFCA  F011         	goto	u7370
 10568  002390                     u7371:
 10569  002390  EFF1  F011         	goto	l7555
 10570  002394                     u7370:
 10571  002394                     
 10572                           ; BSR set to: 0
 10573  002394  AD75               	btfss	___fladd@signs& (0+255),6,b
 10574  002396  EFCF  F011         	goto	u7381
 10575  00239A  EFD1  F011         	goto	u7380
 10576  00239E                     u7381:
 10577  00239E  EFD3  F011         	goto	l7525
 10578  0023A2                     u7380:
 10579  0023A2                     
 10580                           ; BSR set to: 0
 10581  0023A2  0E80               	movlw	128
 10582  0023A4  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10583  0023A6                     l7525:
 10584                           
 10585                           ; BSR set to: 0
 10586  0023A6  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10587  0023AA                     
 10588                           ; BSR set to: 0
 10589  0023AA  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10590  0023AE                     
 10591                           ; BSR set to: 0
 10592  0023AE  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10593  0023B2                     
 10594                           ; BSR set to: 0
 10595  0023B2  C06D  F078         	movff	___fladd@b,___fladd@grs
 10596  0023B6                     
 10597                           ; BSR set to: 0
 10598  0023B6  C071  F06D         	movff	___fladd@a,___fladd@b
 10599  0023BA                     
 10600                           ; BSR set to: 0
 10601  0023BA  C078  F071         	movff	___fladd@grs,___fladd@a
 10602  0023BE                     
 10603                           ; BSR set to: 0
 10604  0023BE  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10605  0023C2                     
 10606                           ; BSR set to: 0
 10607  0023C2  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10608  0023C6                     
 10609                           ; BSR set to: 0
 10610  0023C6  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10611  0023CA                     
 10612                           ; BSR set to: 0
 10613  0023CA  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10614  0023CE                     
 10615                           ; BSR set to: 0
 10616  0023CE  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10617  0023D2                     
 10618                           ; BSR set to: 0
 10619  0023D2  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10620  0023D6                     
 10621                           ; BSR set to: 0
 10622  0023D6  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10623  0023DA                     
 10624                           ; BSR set to: 0
 10625  0023DA  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10626  0023DE                     
 10627                           ; BSR set to: 0
 10628  0023DE  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10629  0023E2                     l7555:
 10630                           
 10631                           ; BSR set to: 0
 10632  0023E2  0E00               	movlw	0
 10633  0023E4  6F78               	movwf	___fladd@grs& (0+255),b
 10634  0023E6                     
 10635                           ; BSR set to: 0
 10636  0023E6  5177               	movf	___fladd@bexp& (0+255),w,b
 10637  0023E8  C076  F036         	movff	___fladd@aexp,??___fladd
 10638  0023EC  6A37               	clrf	(??___fladd+1)^0,c
 10639  0023EE  5E36               	subwf	??___fladd^0,f,c
 10640  0023F0  0E00               	movlw	0
 10641  0023F2  5A37               	subwfb	(??___fladd+1)^0,f,c
 10642  0023F4  BE37               	btfsc	(??___fladd+1)^0,7,c
 10643  0023F6  EF06  F012         	goto	u7391
 10644  0023FA  5037               	movf	(??___fladd+1)^0,w,c
 10645  0023FC  E109               	bnz	u7390
 10646  0023FE  0E1A               	movlw	26
 10647  002400  5C36               	subwf	??___fladd^0,w,c
 10648  002402  A0D8               	btfss	status,0,c
 10649  002404  EF06  F012         	goto	u7391
 10650  002408  EF08  F012         	goto	u7390
 10651  00240C                     u7391:
 10652  00240C  EF3F  F012         	goto	l1934
 10653  002410                     u7390:
 10654  002410                     
 10655                           ; BSR set to: 0
 10656  002410  516D               	movf	___fladd@b& (0+255),w,b
 10657  002412  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10658  002414  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10659  002416  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10660  002418  A4D8               	btfss	status,2,c
 10661  00241A  EF11  F012         	goto	u7401
 10662  00241E  EF14  F012         	goto	u7400
 10663  002422                     u7401:
 10664  002422  0E01               	movlw	1
 10665  002424  EF15  F012         	goto	u7410
 10666  002428                     u7400:
 10667  002428  0E00               	movlw	0
 10668  00242A                     u7410:
 10669  00242A  6F78               	movwf	___fladd@grs& (0+255),b
 10670  00242C                     
 10671                           ; BSR set to: 0
 10672  00242C  0E00               	movlw	0
 10673  00242E  6F6D               	movwf	___fladd@b& (0+255),b
 10674  002430  0E00               	movlw	0
 10675  002432  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10676  002434  0E00               	movlw	0
 10677  002436  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10678  002438  0E00               	movlw	0
 10679  00243A  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10680  00243C                     
 10681                           ; BSR set to: 0
 10682  00243C  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10683  002440  EF48  F012         	goto	l1933
 10684  002444                     l1935:
 10685                           
 10686                           ; BSR set to: 0
 10687  002444  A178               	btfss	___fladd@grs& (0+255),0,b
 10688  002446  EF27  F012         	goto	u7421
 10689  00244A  EF29  F012         	goto	u7420
 10690  00244E                     u7421:
 10691  00244E  EF2F  F012         	goto	l7567
 10692  002452                     u7420:
 10693  002452                     
 10694                           ; BSR set to: 0
 10695  002452  90D8               	bcf	status,0,c
 10696  002454  3178               	rrcf	___fladd@grs& (0+255),w,b
 10697  002456  0901               	iorlw	1
 10698  002458  6F78               	movwf	___fladd@grs& (0+255),b
 10699  00245A  EF31  F012         	goto	l7569
 10700  00245E                     l7567:
 10701                           
 10702                           ; BSR set to: 0
 10703  00245E  90D8               	bcf	status,0,c
 10704  002460  3378               	rrcf	___fladd@grs& (0+255),f,b
 10705  002462                     l7569:
 10706                           
 10707                           ; BSR set to: 0
 10708  002462  A16D               	btfss	___fladd@b& (0+255),0,b
 10709  002464  EF36  F012         	goto	u7431
 10710  002468  EF38  F012         	goto	u7430
 10711  00246C                     u7431:
 10712  00246C  EF39  F012         	goto	l7573
 10713  002470                     u7430:
 10714  002470                     
 10715                           ; BSR set to: 0
 10716  002470  8F78               	bsf	___fladd@grs& (0+255),7,b
 10717  002472                     l7573:
 10718                           
 10719                           ; BSR set to: 0
 10720  002472  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10721  002474  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10722  002476  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10723  002478  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10724  00247A  336D               	rrcf	___fladd@b& (0+255),f,b
 10725  00247C                     
 10726                           ; BSR set to: 0
 10727  00247C  2B77               	incf	___fladd@bexp& (0+255),f,b
 10728  00247E                     l1934:
 10729                           
 10730                           ; BSR set to: 0
 10731  00247E  5176               	movf	___fladd@aexp& (0+255),w,b
 10732  002480  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10733  002482  A0D8               	btfss	status,0,c
 10734  002484  EF46  F012         	goto	u7441
 10735  002488  EF48  F012         	goto	u7440
 10736  00248C                     u7441:
 10737  00248C  EF22  F012         	goto	l1935
 10738  002490                     u7440:
 10739  002490                     l1933:
 10740                           
 10741                           ; BSR set to: 0
 10742  002490  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10743  002492  EF4D  F012         	goto	u7451
 10744  002496  EF4F  F012         	goto	u7450
 10745  00249A                     u7451:
 10746  00249A  EF8F  F012         	goto	l7601
 10747  00249E                     u7450:
 10748  00249E                     
 10749                           ; BSR set to: 0
 10750  00249E  5177               	movf	___fladd@bexp& (0+255),w,b
 10751  0024A0  A4D8               	btfss	status,2,c
 10752  0024A2  EF55  F012         	goto	u7461
 10753  0024A6  EF57  F012         	goto	u7460
 10754  0024AA                     u7461:
 10755  0024AA  EF61  F012         	goto	l7583
 10756  0024AE                     u7460:
 10757  0024AE                     
 10758                           ; BSR set to: 0
 10759  0024AE  0E00               	movlw	0
 10760  0024B0  6F6D               	movwf	?___fladd& (0+255),b
 10761  0024B2  0E00               	movlw	0
 10762  0024B4  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10763  0024B6  0E00               	movlw	0
 10764  0024B8  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10765  0024BA  0E00               	movlw	0
 10766  0024BC  6F70               	movwf	(?___fladd+3)& (0+255),b
 10767  0024BE  EFB0  F013         	goto	l1942
 10768  0024C2                     l7583:
 10769                           
 10770                           ; BSR set to: 0
 10771  0024C2  5171               	movf	___fladd@a& (0+255),w,b
 10772  0024C4  276D               	addwf	___fladd@b& (0+255),f,b
 10773  0024C6  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10774  0024C8  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10775  0024CA  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10776  0024CC  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10777  0024CE  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10778  0024D0  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10779  0024D2                     
 10780                           ; BSR set to: 0
 10781  0024D2  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10782  0024D4  EF6E  F012         	goto	u7471
 10783  0024D8  EF70  F012         	goto	u7470
 10784  0024DC                     u7471:
 10785  0024DC  EF1C  F013         	goto	l7637
 10786  0024E0                     u7470:
 10787  0024E0                     
 10788                           ; BSR set to: 0
 10789  0024E0  A178               	btfss	___fladd@grs& (0+255),0,b
 10790  0024E2  EF75  F012         	goto	u7481
 10791  0024E6  EF77  F012         	goto	u7480
 10792  0024EA                     u7481:
 10793  0024EA  EF7D  F012         	goto	l7591
 10794  0024EE                     u7480:
 10795  0024EE                     
 10796                           ; BSR set to: 0
 10797  0024EE  90D8               	bcf	status,0,c
 10798  0024F0  3178               	rrcf	___fladd@grs& (0+255),w,b
 10799  0024F2  0901               	iorlw	1
 10800  0024F4  6F78               	movwf	___fladd@grs& (0+255),b
 10801  0024F6  EF7F  F012         	goto	l7593
 10802  0024FA                     l7591:
 10803                           
 10804                           ; BSR set to: 0
 10805  0024FA  90D8               	bcf	status,0,c
 10806  0024FC  3378               	rrcf	___fladd@grs& (0+255),f,b
 10807  0024FE                     l7593:
 10808                           
 10809                           ; BSR set to: 0
 10810  0024FE  A16D               	btfss	___fladd@b& (0+255),0,b
 10811  002500  EF84  F012         	goto	u7491
 10812  002504  EF86  F012         	goto	u7490
 10813  002508                     u7491:
 10814  002508  EF87  F012         	goto	l7597
 10815  00250C                     u7490:
 10816  00250C                     
 10817                           ; BSR set to: 0
 10818  00250C  8F78               	bsf	___fladd@grs& (0+255),7,b
 10819  00250E                     l7597:
 10820                           
 10821                           ; BSR set to: 0
 10822  00250E  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10823  002510  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10824  002512  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10825  002514  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10826  002516  336D               	rrcf	___fladd@b& (0+255),f,b
 10827  002518                     
 10828                           ; BSR set to: 0
 10829  002518  2B77               	incf	___fladd@bexp& (0+255),f,b
 10830  00251A  EF1C  F013         	goto	l7637
 10831  00251E                     l7601:
 10832                           
 10833                           ; BSR set to: 0
 10834  00251E  5171               	movf	___fladd@a& (0+255),w,b
 10835  002520  5D6D               	subwf	___fladd@b& (0+255),w,b
 10836  002522  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10837  002524  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10838  002526  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10839  002528  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10840  00252A  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10841  00252C  0A80               	xorlw	128
 10842  00252E  6E36               	movwf	??___fladd^0,c
 10843  002530  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10844  002532  0A80               	xorlw	128
 10845  002534  5836               	subwfb	??___fladd^0,w,c
 10846  002536  B0D8               	btfsc	status,0,c
 10847  002538  EFA0  F012         	goto	u7501
 10848  00253C  EFA2  F012         	goto	u7500
 10849  002540                     u7501:
 10850  002540  EFCD  F012         	goto	l7611
 10851  002544                     u7500:
 10852  002544                     
 10853                           ; BSR set to: 0
 10854  002544  516D               	movf	___fladd@b& (0+255),w,b
 10855  002546  5D71               	subwf	___fladd@a& (0+255),w,b
 10856  002548  6E36               	movwf	??___fladd^0,c
 10857  00254A  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10858  00254C  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10859  00254E  6E37               	movwf	(??___fladd+1)^0,c
 10860  002550  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10861  002552  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10862  002554  6E38               	movwf	(??___fladd+2)^0,c
 10863  002556  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10864  002558  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10865  00255A  6E39               	movwf	(??___fladd+3)^0,c
 10866  00255C  0EFF               	movlw	255
 10867  00255E  2436               	addwf	??___fladd^0,w,c
 10868  002560  6F6D               	movwf	___fladd@b& (0+255),b
 10869  002562  0EFF               	movlw	255
 10870  002564  2037               	addwfc	(??___fladd+1)^0,w,c
 10871  002566  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10872  002568  0EFF               	movlw	255
 10873  00256A  2038               	addwfc	(??___fladd+2)^0,w,c
 10874  00256C  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10875  00256E  0EFF               	movlw	255
 10876  002570  2039               	addwfc	(??___fladd+3)^0,w,c
 10877  002572  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10878  002574  0E80               	movlw	128
 10879  002576  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10880  002578                     
 10881                           ; BSR set to: 0
 10882  002578  6D78               	negf	___fladd@grs& (0+255),b
 10883  00257A                     
 10884                           ; BSR set to: 0
 10885  00257A  5178               	movf	___fladd@grs& (0+255),w,b
 10886  00257C  A4D8               	btfss	status,2,c
 10887  00257E  EFC3  F012         	goto	u7511
 10888  002582  EFC5  F012         	goto	u7510
 10889  002586                     u7511:
 10890  002586  EFD5  F012         	goto	l1950
 10891  00258A                     u7510:
 10892  00258A                     
 10893                           ; BSR set to: 0
 10894  00258A  0E01               	movlw	1
 10895  00258C  276D               	addwf	___fladd@b& (0+255),f,b
 10896  00258E  0E00               	movlw	0
 10897  002590  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10898  002592  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10899  002594  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10900  002596  EFD5  F012         	goto	l1950
 10901  00259A                     l7611:
 10902                           
 10903                           ; BSR set to: 0
 10904  00259A  5171               	movf	___fladd@a& (0+255),w,b
 10905  00259C  5F6D               	subwf	___fladd@b& (0+255),f,b
 10906  00259E  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10907  0025A0  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10908  0025A2  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10909  0025A4  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10910  0025A6  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10911  0025A8  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10912  0025AA                     l1950:
 10913                           
 10914                           ; BSR set to: 0
 10915  0025AA  516D               	movf	___fladd@b& (0+255),w,b
 10916  0025AC  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10917  0025AE  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10918  0025B0  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10919  0025B2  A4D8               	btfss	status,2,c
 10920  0025B4  EFDE  F012         	goto	u7521
 10921  0025B8  EFE0  F012         	goto	u7520
 10922  0025BC                     u7521:
 10923  0025BC  EF15  F013         	goto	l7635
 10924  0025C0                     u7520:
 10925  0025C0                     
 10926                           ; BSR set to: 0
 10927  0025C0  5178               	movf	___fladd@grs& (0+255),w,b
 10928  0025C2  A4D8               	btfss	status,2,c
 10929  0025C4  EFE6  F012         	goto	u7531
 10930  0025C8  EFE8  F012         	goto	u7530
 10931  0025CC                     u7531:
 10932  0025CC  EF15  F013         	goto	l7635
 10933  0025D0                     u7530:
 10934  0025D0                     
 10935                           ; BSR set to: 0
 10936  0025D0  0E00               	movlw	0
 10937  0025D2  6F6D               	movwf	?___fladd& (0+255),b
 10938  0025D4  0E00               	movlw	0
 10939  0025D6  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10940  0025D8  0E00               	movlw	0
 10941  0025DA  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10942  0025DC  0E00               	movlw	0
 10943  0025DE  6F70               	movwf	(?___fladd+3)& (0+255),b
 10944  0025E0  EFB0  F013         	goto	l1942
 10945  0025E4                     l7619:
 10946                           
 10947                           ; BSR set to: 0
 10948  0025E4  90D8               	bcf	status,0,c
 10949  0025E6  376D               	rlcf	___fladd@b& (0+255),f,b
 10950  0025E8  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10951  0025EA  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10952  0025EC  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10953  0025EE                     
 10954                           ; BSR set to: 0
 10955  0025EE  AF78               	btfss	___fladd@grs& (0+255),7,b
 10956  0025F0  EFFC  F012         	goto	u7541
 10957  0025F4  EFFE  F012         	goto	u7540
 10958  0025F8                     u7541:
 10959  0025F8  EFFF  F012         	goto	l7625
 10960  0025FC                     u7540:
 10961  0025FC                     
 10962                           ; BSR set to: 0
 10963  0025FC  816D               	bsf	___fladd@b& (0+255),0,b
 10964  0025FE                     l7625:
 10965                           
 10966                           ; BSR set to: 0
 10967  0025FE  A178               	btfss	___fladd@grs& (0+255),0,b
 10968  002600  EF04  F013         	goto	u7551
 10969  002604  EF06  F013         	goto	u7550
 10970  002608                     u7551:
 10971  002608  EF0A  F013         	goto	l7629
 10972  00260C                     u7550:
 10973  00260C                     
 10974                           ; BSR set to: 0
 10975  00260C  80D8               	bsf	status,0,c
 10976  00260E  3778               	rlcf	___fladd@grs& (0+255),f,b
 10977  002610  EF0C  F013         	goto	l7631
 10978  002614                     l7629:
 10979                           
 10980                           ; BSR set to: 0
 10981  002614  90D8               	bcf	status,0,c
 10982  002616  3778               	rlcf	___fladd@grs& (0+255),f,b
 10983  002618                     l7631:
 10984                           
 10985                           ; BSR set to: 0
 10986  002618  5177               	movf	___fladd@bexp& (0+255),w,b
 10987  00261A  B4D8               	btfsc	status,2,c
 10988  00261C  EF12  F013         	goto	u7561
 10989  002620  EF14  F013         	goto	u7560
 10990  002624                     u7561:
 10991  002624  EF15  F013         	goto	l7635
 10992  002628                     u7560:
 10993  002628                     
 10994                           ; BSR set to: 0
 10995  002628  0777               	decf	___fladd@bexp& (0+255),f,b
 10996  00262A                     l7635:
 10997                           
 10998                           ; BSR set to: 0
 10999  00262A  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11000  00262C  EF1A  F013         	goto	u7571
 11001  002630  EF1C  F013         	goto	u7570
 11002  002634                     u7571:
 11003  002634  EFF2  F012         	goto	l7619
 11004  002638                     u7570:
 11005  002638                     l7637:
 11006                           
 11007                           ; BSR set to: 0
 11008  002638  0E00               	movlw	0
 11009  00263A  6F76               	movwf	___fladd@aexp& (0+255),b
 11010  00263C                     
 11011                           ; BSR set to: 0
 11012  00263C  AF78               	btfss	___fladd@grs& (0+255),7,b
 11013  00263E  EF23  F013         	goto	u7581
 11014  002642  EF25  F013         	goto	u7580
 11015  002646                     u7581:
 11016  002646  EF3D  F013         	goto	l1959
 11017  00264A                     u7580:
 11018  00264A                     
 11019                           ; BSR set to: 0
 11020  00264A  C078  F036         	movff	___fladd@grs,??___fladd
 11021  00264E  0E7F               	movlw	127
 11022  002650  1636               	andwf	??___fladd^0,f,c
 11023  002652  B4D8               	btfsc	status,2,c
 11024  002654  EF2E  F013         	goto	u7591
 11025  002658  EF30  F013         	goto	u7590
 11026  00265C                     u7591:
 11027  00265C  EF34  F013         	goto	l1960
 11028  002660                     u7590:
 11029  002660                     l7643:
 11030                           
 11031                           ; BSR set to: 0
 11032  002660  0E01               	movlw	1
 11033  002662  6F76               	movwf	___fladd@aexp& (0+255),b
 11034  002664  EF3D  F013         	goto	l1959
 11035  002668                     l1960:
 11036                           
 11037                           ; BSR set to: 0
 11038  002668  A16D               	btfss	___fladd@b& (0+255),0,b
 11039  00266A  EF39  F013         	goto	u7601
 11040  00266E  EF3B  F013         	goto	u7600
 11041  002672                     u7601:
 11042  002672  EF3D  F013         	goto	l1959
 11043  002676                     u7600:
 11044  002676  EF30  F013         	goto	l7643
 11045  00267A                     l1959:
 11046                           
 11047                           ; BSR set to: 0
 11048  00267A  5176               	movf	___fladd@aexp& (0+255),w,b
 11049  00267C  B4D8               	btfsc	status,2,c
 11050  00267E  EF43  F013         	goto	u7611
 11051  002682  EF45  F013         	goto	u7610
 11052  002686                     u7611:
 11053  002686  EF70  F013         	goto	l7655
 11054  00268A                     u7610:
 11055  00268A                     
 11056                           ; BSR set to: 0
 11057  00268A  0E01               	movlw	1
 11058  00268C  276D               	addwf	___fladd@b& (0+255),f,b
 11059  00268E  0E00               	movlw	0
 11060  002690  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11061  002692  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11062  002694  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11063  002696                     
 11064                           ; BSR set to: 0
 11065  002696  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11066  002698  EF50  F013         	goto	u7621
 11067  00269C  EF52  F013         	goto	u7620
 11068  0026A0                     u7621:
 11069  0026A0  EF70  F013         	goto	l7655
 11070  0026A4                     u7620:
 11071  0026A4                     
 11072                           ; BSR set to: 0
 11073  0026A4  C06D  F036         	movff	___fladd@b,??___fladd
 11074  0026A8  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 11075  0026AC  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 11076  0026B0  C070  F039         	movff	___fladd@b+3,??___fladd+3
 11077  0026B4  3439               	rlcf	(??___fladd+3)^0,w,c
 11078  0026B6  3239               	rrcf	(??___fladd+3)^0,f,c
 11079  0026B8  3238               	rrcf	(??___fladd+2)^0,f,c
 11080  0026BA  3237               	rrcf	(??___fladd+1)^0,f,c
 11081  0026BC  3236               	rrcf	??___fladd^0,f,c
 11082  0026BE  C036  F06D         	movff	??___fladd,___fladd@b
 11083  0026C2  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 11084  0026C6  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 11085  0026CA  C039  F070         	movff	??___fladd+3,___fladd@b+3
 11086  0026CE  2977               	incf	___fladd@bexp& (0+255),w,b
 11087  0026D0  B4D8               	btfsc	status,2,c
 11088  0026D2  EF6D  F013         	goto	u7631
 11089  0026D6  EF6F  F013         	goto	u7630
 11090  0026DA                     u7631:
 11091  0026DA  EF70  F013         	goto	l7655
 11092  0026DE                     u7630:
 11093  0026DE                     
 11094                           ; BSR set to: 0
 11095  0026DE  2B77               	incf	___fladd@bexp& (0+255),f,b
 11096  0026E0                     l7655:
 11097                           
 11098                           ; BSR set to: 0
 11099  0026E0  2977               	incf	___fladd@bexp& (0+255),w,b
 11100  0026E2  B4D8               	btfsc	status,2,c
 11101  0026E4  EF76  F013         	goto	u7641
 11102  0026E8  EF78  F013         	goto	u7640
 11103  0026EC                     u7641:
 11104  0026EC  EF80  F013         	goto	l7659
 11105  0026F0                     u7640:
 11106  0026F0                     
 11107                           ; BSR set to: 0
 11108  0026F0  5177               	movf	___fladd@bexp& (0+255),w,b
 11109  0026F2  A4D8               	btfss	status,2,c
 11110  0026F4  EF7E  F013         	goto	u7651
 11111  0026F8  EF80  F013         	goto	u7650
 11112  0026FC                     u7651:
 11113  0026FC  EF92  F013         	goto	l7663
 11114  002700                     u7650:
 11115  002700                     l7659:
 11116                           
 11117                           ; BSR set to: 0
 11118  002700  0E00               	movlw	0
 11119  002702  6F6D               	movwf	___fladd@b& (0+255),b
 11120  002704  0E00               	movlw	0
 11121  002706  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11122  002708  0E00               	movlw	0
 11123  00270A  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11124  00270C  0E00               	movlw	0
 11125  00270E  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11126  002710  5177               	movf	___fladd@bexp& (0+255),w,b
 11127  002712  A4D8               	btfss	status,2,c
 11128  002714  EF8E  F013         	goto	u7661
 11129  002718  EF90  F013         	goto	u7660
 11130  00271C                     u7661:
 11131  00271C  EF92  F013         	goto	l7663
 11132  002720                     u7660:
 11133  002720                     
 11134                           ; BSR set to: 0
 11135  002720  0E00               	movlw	0
 11136  002722  6F75               	movwf	___fladd@signs& (0+255),b
 11137  002724                     l7663:
 11138                           
 11139                           ; BSR set to: 0
 11140  002724  A177               	btfss	___fladd@bexp& (0+255),0,b
 11141  002726  EF97  F013         	goto	u7671
 11142  00272A  EF99  F013         	goto	u7670
 11143  00272E                     u7671:
 11144  00272E  EF9C  F013         	goto	l7667
 11145  002732                     u7670:
 11146  002732                     
 11147                           ; BSR set to: 0
 11148  002732  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11149  002734  EF9D  F013         	goto	l7669
 11150  002738                     l7667:
 11151                           
 11152                           ; BSR set to: 0
 11153  002738  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 11154  00273A                     l7669:
 11155                           
 11156                           ; BSR set to: 0
 11157  00273A  90D8               	bcf	status,0,c
 11158  00273C  3177               	rrcf	___fladd@bexp& (0+255),w,b
 11159  00273E  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11160  002740                     
 11161                           ; BSR set to: 0
 11162  002740  AF75               	btfss	___fladd@signs& (0+255),7,b
 11163  002742  EFA5  F013         	goto	u7681
 11164  002746  EFA7  F013         	goto	u7680
 11165  00274A                     u7681:
 11166  00274A  EFA8  F013         	goto	l7675
 11167  00274E                     u7680:
 11168  00274E                     
 11169                           ; BSR set to: 0
 11170  00274E  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 11171  002750                     l7675:
 11172                           
 11173                           ; BSR set to: 0
 11174  002750  C06D  F06D         	movff	___fladd@b,?___fladd
 11175  002754  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 11176  002758  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 11177  00275C  C070  F070         	movff	___fladd@b+3,?___fladd+3
 11178  002760                     l1942:
 11179                           
 11180                           ; BSR set to: 0
 11181  002760  0012               	return		;funcret
 11182  002762                     __end_of___fladd:
 11183                           	callstack 0
 11184                           
 11185 ;; *************** function _calcMotorPow *****************
 11186 ;; Defined at:
 11187 ;;		line 336 in file "main.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;		None
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 11192 ;;  setSpeedDelt    2   37[BANK0 ] short 
 11193 ;;  addMPow         1   41[BANK0 ] char 
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  1    wreg      void 
 11196 ;; Registers used:
 11197 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11205 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11206 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11207 ;;Total ram usage:        7 bytes
 11208 ;; Hardware stack levels used: 1
 11209 ;; Hardware stack levels required when called: 10
 11210 ;; This function calls:
 11211 ;;		___awdiv
 11212 ;;		___flmul
 11213 ;;		___fltol
 11214 ;;		___xxtofl
 11215 ;;		_actSpeed
 11216 ;;		_setMotor
 11217 ;; This function is called by:
 11218 ;;		_loop
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           	psect	text40
 11223  00417E                     __ptext40:
 11224                           	callstack 0
 11225  00417E                     _calcMotorPow:
 11226                           	callstack 19
 11227  00417E                     
 11228                           ;main.c: 337:     currentSpeed = actSpeed();
 11229  00417E  EC57  F028         	call	_actSpeed	;wreg free
 11230  004182  C022  F0EB         	movff	?_actSpeed,_currentSpeed
 11231  004186  C023  F0EC         	movff	?_actSpeed+1,_currentSpeed+1
 11232  00418A                     
 11233                           ;main.c: 339:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11234  00418A  0100               	movlb	0	; () banked
 11235  00418C  51EB               	movf	_currentSpeed& (0+255),w,b
 11236  00418E  5DED               	subwf	_setSpeed& (0+255),w,b
 11237  004190  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11238  004192  51EC               	movf	(_currentSpeed+1)& (0+255),w,b
 11239  004194  59EE               	subwfb	(_setSpeed+1)& (0+255),w,b
 11240  004196  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11241  004198                     
 11242                           ; BSR set to: 0
 11243                           ;main.c: 340:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11244  004198  0101               	movlb	1	; () banked
 11245  00419A  512C               	movf	_oldSpeed& (0+255),w,b
 11246  00419C  0100               	movlb	0	; () banked
 11247  00419E  5DEB               	subwf	_currentSpeed& (0+255),w,b
 11248  0041A0  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11249  0041A2  0101               	movlb	1	; () banked
 11250  0041A4  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11251  0041A6  0100               	movlb	0	; () banked
 11252  0041A8  59EC               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11253  0041AA  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11254  0041AC                     
 11255                           ; BSR set to: 0
 11256                           ;main.c: 346:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11257  0041AC  0E0A               	movlw	10
 11258  0041AE  6E2E               	movwf	___flmul@a^0,c
 11259  0041B0  0ED7               	movlw	215
 11260  0041B2  6E2F               	movwf	(___flmul@a+1)^0,c
 11261  0041B4  0EA3               	movlw	163
 11262  0041B6  6E30               	movwf	(___flmul@a+2)^0,c
 11263  0041B8  0E3C               	movlw	60
 11264  0041BA  6E31               	movwf	(___flmul@a+3)^0,c
 11265  0041BC  0E00               	movlw	0
 11266  0041BE  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11267  0041C0  0E02               	movlw	2
 11268  0041C2  6E16               	movwf	___awdiv@divisor^0,c
 11269  0041C4  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11270  0041C8  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11271  0041CC  ECEA  F025         	call	___awdiv	;wreg free
 11272  0041D0  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11273  0041D4  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11274  0041D8  5014               	movf	?___awdiv^0,w,c
 11275  0041DA  0100               	movlb	0	; () banked
 11276  0041DC  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11277  0041DE  5015               	movf	(?___awdiv+1)^0,w,c
 11278  0041E0  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11279  0041E2  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11280  0041E6  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11281  0041EA  0E00               	movlw	0
 11282  0041EC  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11283  0041EE  0EFF               	movlw	-1
 11284  0041F0  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11285  0041F2  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11286  0041F4  0E01               	movlw	1
 11287  0041F6  ECAB  F01D         	call	___xxtofl
 11288  0041FA  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11289  0041FE  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11290  004202  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11291  004206  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11292  00420A  ECB1  F013         	call	___flmul	;wreg free
 11293  00420E  C02A  F079         	movff	?___flmul,___fltol@f1
 11294  004212  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11295  004216  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11296  00421A  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11297  00421E  EC14  F023         	call	___fltol	;wreg free
 11298  004222  0100               	movlb	0	; () banked
 11299  004224  5179               	movf	?___fltol& (0+255),w,b
 11300  004226  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11301  004228                     
 11302                           ; BSR set to: 0
 11303                           ;main.c: 348:     if (addMPow > (3)) {
 11304  004228  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11305  00422A  0A80               	xorlw	128
 11306  00422C  0F7C               	addlw	-132
 11307  00422E  A0D8               	btfss	status,0,c
 11308  004230  EF1C  F021         	goto	u10251
 11309  004234  EF1E  F021         	goto	u10250
 11310  004238                     u10251:
 11311  004238  EF22  F021         	goto	l9201
 11312  00423C                     u10250:
 11313  00423C                     
 11314                           ; BSR set to: 0
 11315                           ;main.c: 349:         addMPow = (3);
 11316  00423C  0E03               	movlw	3
 11317  00423E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11318                           
 11319                           ;main.c: 350:     } else if (addMPow < -(3)) {
 11320  004240  EF2E  F021         	goto	l9205
 11321  004244                     l9201:
 11322                           
 11323                           ; BSR set to: 0
 11324  004244  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11325  004246  0A80               	xorlw	128
 11326  004248  0F83               	addlw	131
 11327  00424A  B0D8               	btfsc	status,0,c
 11328  00424C  EF2A  F021         	goto	u10261
 11329  004250  EF2C  F021         	goto	u10260
 11330  004254                     u10261:
 11331  004254  EF2E  F021         	goto	l9205
 11332  004258                     u10260:
 11333  004258                     
 11334                           ; BSR set to: 0
 11335                           ;main.c: 351:         addMPow = -(3);
 11336  004258  0EFD               	movlw	253
 11337  00425A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11338  00425C                     l9205:
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;main.c: 354:     actMotorPow += addMPow;
 11342  00425C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11343  00425E  27E9               	addwf	_actMotorPow& (0+255),f,b
 11344  004260  0E00               	movlw	0
 11345  004262  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11346  004264  0EFF               	movlw	255
 11347  004266  23EA               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11348  004268                     
 11349                           ; BSR set to: 0
 11350                           ;main.c: 356:     if (actMotorPow > (700)) {
 11351  004268  BFEA               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11352  00426A  EF40  F021         	goto	u10271
 11353  00426E  0EBD               	movlw	189
 11354  004270  5DE9               	subwf	_actMotorPow& (0+255),w,b
 11355  004272  0E02               	movlw	2
 11356  004274  59EA               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11357  004276  A0D8               	btfss	status,0,c
 11358  004278  EF40  F021         	goto	u10271
 11359  00427C  EF42  F021         	goto	u10270
 11360  004280                     u10271:
 11361  004280  EF48  F021         	goto	l9211
 11362  004284                     u10270:
 11363  004284                     
 11364                           ; BSR set to: 0
 11365                           ;main.c: 357:         actMotorPow = (700);
 11366  004284  0E02               	movlw	2
 11367  004286  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
 11368  004288  0EBC               	movlw	188
 11369  00428A  6FE9               	movwf	_actMotorPow& (0+255),b
 11370                           
 11371                           ;main.c: 358:     } else if (actMotorPow < (-400)) {
 11372  00428C  EF5A  F021         	goto	l9215
 11373  004290                     l9211:
 11374                           
 11375                           ; BSR set to: 0
 11376  004290  AFEA               	btfss	(_actMotorPow+1)& (0+255),7,b
 11377  004292  EF54  F021         	goto	u10281
 11378  004296  0E70               	movlw	112
 11379  004298  5DE9               	subwf	_actMotorPow& (0+255),w,b
 11380  00429A  0EFE               	movlw	254
 11381  00429C  59EA               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11382  00429E  B0D8               	btfsc	status,0,c
 11383  0042A0  EF54  F021         	goto	u10281
 11384  0042A4  EF56  F021         	goto	u10280
 11385  0042A8                     u10281:
 11386  0042A8  EF5A  F021         	goto	l9215
 11387  0042AC                     u10280:
 11388  0042AC                     
 11389                           ; BSR set to: 0
 11390                           ;main.c: 359:         actMotorPow = (-400);
 11391  0042AC  0EFE               	movlw	254
 11392  0042AE  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
 11393  0042B0  0E70               	movlw	112
 11394  0042B2  6FE9               	movwf	_actMotorPow& (0+255),b
 11395  0042B4                     l9215:
 11396                           
 11397                           ; BSR set to: 0
 11398                           ;main.c: 362:     setMotor(actMotorPow);
 11399  0042B4  C0E9  F018         	movff	_actMotorPow,setMotor@motorPower
 11400  0042B8  C0EA  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11401  0042BC  EC14  F025         	call	_setMotor	;wreg free
 11402  0042C0                     
 11403                           ;main.c: 364:     oldSpeed = currentSpeed;
 11404  0042C0  C0EB  F12C         	movff	_currentSpeed,_oldSpeed
 11405  0042C4  C0EC  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11406  0042C8  0012               	return		;funcret
 11407  0042CA                     __end_of_calcMotorPow:
 11408                           	callstack 0
 11409                           
 11410 ;; *************** function _setMotor *****************
 11411 ;; Defined at:
 11412 ;;		line 367 in file "main.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;  motorPower      2   23[COMRAM] short 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;		None
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  1    wreg      void 
 11419 ;; Registers used:
 11420 ;;		wreg, status,2, status,0, cstack
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11430 ;;Total ram usage:        4 bytes
 11431 ;; Hardware stack levels used: 1
 11432 ;; Hardware stack levels required when called: 9
 11433 ;; This function calls:
 11434 ;;		_PWM7_LoadDutyValue
 11435 ;;		_PWM8_LoadDutyValue
 11436 ;; This function is called by:
 11437 ;;		_loop
 11438 ;;		_startAccell
 11439 ;;		_calcMotorPow
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text41
 11444  004A28                     __ptext41:
 11445                           	callstack 0
 11446  004A28                     _setMotor:
 11447                           	callstack 19
 11448  004A28                     
 11449                           ;main.c: 368:     if (motorPower >= (40)) {
 11450  004A28  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11451  004A2A  EF20  F025         	goto	u6351
 11452  004A2E  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11453  004A30  E109               	bnz	u6350
 11454  004A32  0E28               	movlw	40
 11455  004A34  5C18               	subwf	setMotor@motorPower^0,w,c
 11456  004A36  A0D8               	btfss	status,0,c
 11457  004A38  EF20  F025         	goto	u6351
 11458  004A3C  EF22  F025         	goto	u6350
 11459  004A40                     u6351:
 11460  004A40  EF42  F025         	goto	l6597
 11461  004A44                     u6350:
 11462  004A44                     
 11463                           ;main.c: 369:         if (motorPower > (700)) {
 11464  004A44  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11465  004A46  EF2E  F025         	goto	u6361
 11466  004A4A  0EBD               	movlw	189
 11467  004A4C  5C18               	subwf	setMotor@motorPower^0,w,c
 11468  004A4E  0E02               	movlw	2
 11469  004A50  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11470  004A52  A0D8               	btfss	status,0,c
 11471  004A54  EF2E  F025         	goto	u6361
 11472  004A58  EF30  F025         	goto	u6360
 11473  004A5C                     u6361:
 11474  004A5C  EF34  F025         	goto	l6593
 11475  004A60                     u6360:
 11476  004A60                     
 11477                           ;main.c: 370:             motorPower = (700);
 11478  004A60  0E02               	movlw	2
 11479  004A62  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11480  004A64  0EBC               	movlw	188
 11481  004A66  6E18               	movwf	setMotor@motorPower^0,c
 11482  004A68                     l6593:
 11483                           
 11484                           ;main.c: 372:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11485  004A68  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11486  004A6C  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11487  004A70  EC11  F02D         	call	_PWM7_LoadDutyValue	;wreg free
 11488  004A74                     
 11489                           ;main.c: 373:         PWM8_LoadDutyValue(0);
 11490  004A74  0E00               	movlw	0
 11491  004A76  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11492  004A78  0E00               	movlw	0
 11493  004A7A  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11494  004A7C  ECF7  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11495                           
 11496                           ;main.c: 374:     } else if (motorPower <= -(40)) {
 11497  004A80  EF84  F025         	goto	l1385
 11498  004A84                     l6597:
 11499  004A84  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11500  004A86  EF4E  F025         	goto	u6371
 11501  004A8A  0ED9               	movlw	217
 11502  004A8C  5C18               	subwf	setMotor@motorPower^0,w,c
 11503  004A8E  0EFF               	movlw	255
 11504  004A90  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11505  004A92  B0D8               	btfsc	status,0,c
 11506  004A94  EF4E  F025         	goto	u6371
 11507  004A98  EF50  F025         	goto	u6370
 11508  004A9C                     u6371:
 11509  004A9C  EF78  F025         	goto	l6607
 11510  004AA0                     u6370:
 11511  004AA0                     
 11512                           ;main.c: 375:         if (motorPower < (-400)) {
 11513  004AA0  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11514  004AA2  EF5C  F025         	goto	u6381
 11515  004AA6  0E70               	movlw	112
 11516  004AA8  5C18               	subwf	setMotor@motorPower^0,w,c
 11517  004AAA  0EFE               	movlw	254
 11518  004AAC  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11519  004AAE  B0D8               	btfsc	status,0,c
 11520  004AB0  EF5C  F025         	goto	u6381
 11521  004AB4  EF5E  F025         	goto	u6380
 11522  004AB8                     u6381:
 11523  004AB8  EF62  F025         	goto	l6603
 11524  004ABC                     u6380:
 11525  004ABC                     
 11526                           ;main.c: 376:             motorPower = (-400);
 11527  004ABC  0EFE               	movlw	254
 11528  004ABE  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11529  004AC0  0E70               	movlw	112
 11530  004AC2  6E18               	movwf	setMotor@motorPower^0,c
 11531  004AC4                     l6603:
 11532                           
 11533                           ;main.c: 378:         PWM7_LoadDutyValue(0);
 11534  004AC4  0E00               	movlw	0
 11535  004AC6  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11536  004AC8  0E00               	movlw	0
 11537  004ACA  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11538  004ACC  EC11  F02D         	call	_PWM7_LoadDutyValue	;wreg free
 11539  004AD0                     
 11540                           ;main.c: 379:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11541  004AD0  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11542  004AD4  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11543  004AD8  1E1A               	comf	??_setMotor^0,f,c
 11544  004ADA  1E1B               	comf	(??_setMotor+1)^0,f,c
 11545  004ADC  4A1A               	infsnz	??_setMotor^0,f,c
 11546  004ADE  2A1B               	incf	(??_setMotor+1)^0,f,c
 11547  004AE0  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11548  004AE4  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11549  004AE8  ECF7  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11550                           
 11551                           ;main.c: 380:     } else {
 11552  004AEC  EF84  F025         	goto	l1385
 11553  004AF0                     l6607:
 11554                           
 11555                           ;main.c: 382:         PWM7_LoadDutyValue(0);
 11556  004AF0  0E00               	movlw	0
 11557  004AF2  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11558  004AF4  0E00               	movlw	0
 11559  004AF6  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11560  004AF8  EC11  F02D         	call	_PWM7_LoadDutyValue	;wreg free
 11561                           
 11562                           ;main.c: 383:         PWM8_LoadDutyValue(0);
 11563  004AFC  0E00               	movlw	0
 11564  004AFE  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11565  004B00  0E00               	movlw	0
 11566  004B02  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11567  004B04  ECF7  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11568  004B08                     l1385:
 11569  004B08  0012               	return		;funcret
 11570  004B0A                     __end_of_setMotor:
 11571                           	callstack 0
 11572                           
 11573 ;; *************** function _PWM8_LoadDutyValue *****************
 11574 ;; Defined at:
 11575 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11576 ;; Parameters:    Size  Location     Type
 11577 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11578 ;; Auto vars:     Size  Location     Type
 11579 ;;		None
 11580 ;; Return value:  Size  Location     Type
 11581 ;;                  1    wreg      void 
 11582 ;; Registers used:
 11583 ;;		wreg, status,2, status,0
 11584 ;; Tracked objects:
 11585 ;;		On entry : 0/0
 11586 ;;		On exit  : 0/0
 11587 ;;		Unchanged: 0/0
 11588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11591 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;Total ram usage:        4 bytes
 11594 ;; Hardware stack levels used: 1
 11595 ;; Hardware stack levels required when called: 8
 11596 ;; This function calls:
 11597 ;;		Nothing
 11598 ;; This function is called by:
 11599 ;;		_setMotor
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603                           	psect	text42
 11604  0059EE                     __ptext42:
 11605                           	callstack 0
 11606  0059EE                     _PWM8_LoadDutyValue:
 11607                           	callstack 19
 11608  0059EE                     
 11609                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11610  0059EE  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11611  0059F2  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11612  0059F6  90D8               	bcf	status,0,c
 11613  0059F8  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11614  0059FA  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11615  0059FC  90D8               	bcf	status,0,c
 11616  0059FE  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11617  005A00  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11618  005A02  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11619  005A04  6E61               	movwf	97,c	;volatile
 11620                           
 11621                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11622  005A06  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11623  005A0A  0E03               	movlw	3
 11624  005A0C  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11625  005A0E  0E06               	movlw	6
 11626  005A10  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11627  005A12                     u6215:
 11628  005A12  90D8               	bcf	status,0,c
 11629  005A14  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11630  005A16  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11631  005A18  EF09  F02D         	goto	u6215
 11632  005A1C  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11633  005A1E  6E60               	movwf	96,c	;volatile
 11634  005A20  0012               	return		;funcret
 11635  005A22                     __end_of_PWM8_LoadDutyValue:
 11636                           	callstack 0
 11637                           
 11638 ;; *************** function _PWM7_LoadDutyValue *****************
 11639 ;; Defined at:
 11640 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11643 ;; Auto vars:     Size  Location     Type
 11644 ;;		None
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      void 
 11647 ;; Registers used:
 11648 ;;		wreg, status,2, status,0
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;Total ram usage:        4 bytes
 11659 ;; Hardware stack levels used: 1
 11660 ;; Hardware stack levels required when called: 8
 11661 ;; This function calls:
 11662 ;;		Nothing
 11663 ;; This function is called by:
 11664 ;;		_setMotor
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           
 11668                           	psect	text43
 11669  005A22                     __ptext43:
 11670                           	callstack 0
 11671  005A22                     _PWM7_LoadDutyValue:
 11672                           	callstack 19
 11673  005A22                     
 11674                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11675  005A22  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11676  005A26  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11677  005A2A  90D8               	bcf	status,0,c
 11678  005A2C  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11679  005A2E  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11680  005A30  90D8               	bcf	status,0,c
 11681  005A32  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11682  005A34  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11683  005A36  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11684  005A38  6E65               	movwf	101,c	;volatile
 11685                           
 11686                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11687  005A3A  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11688  005A3E  0E03               	movlw	3
 11689  005A40  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11690  005A42  0E06               	movlw	6
 11691  005A44  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11692  005A46                     u6205:
 11693  005A46  90D8               	bcf	status,0,c
 11694  005A48  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11695  005A4A  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11696  005A4C  EF23  F02D         	goto	u6205
 11697  005A50  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11698  005A52  6E64               	movwf	100,c	;volatile
 11699  005A54  0012               	return		;funcret
 11700  005A56                     __end_of_PWM7_LoadDutyValue:
 11701                           	callstack 0
 11702                           
 11703 ;; *************** function _actSpeed *****************
 11704 ;; Defined at:
 11705 ;;		line 67 in file "main.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;		None
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;  speed           2   35[COMRAM] short 
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  2   33[COMRAM] short 
 11712 ;; Registers used:
 11713 ;;		wreg, status,2, status,0, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : 0/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;Total ram usage:        4 bytes
 11724 ;; Hardware stack levels used: 1
 11725 ;; Hardware stack levels required when called: 9
 11726 ;; This function calls:
 11727 ;;		___aldiv
 11728 ;; This function is called by:
 11729 ;;		_calcMotorPow
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text44
 11734  0050AE                     __ptext44:
 11735                           	callstack 0
 11736  0050AE                     _actSpeed:
 11737                           	callstack 19
 11738  0050AE                     
 11739                           ;main.c: 68:     int16_t speed = 0;
 11740  0050AE  0E00               	movlw	0
 11741  0050B0  6E25               	movwf	(actSpeed@speed+1)^0,c
 11742  0050B2  0E00               	movlw	0
 11743  0050B4  6E24               	movwf	actSpeed@speed^0,c
 11744  0050B6                     
 11745                           ;main.c: 69:     if (smtPeriod) {
 11746  0050B6  5048               	movf	_smtPeriod^0,w,c	;volatile
 11747  0050B8  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11748  0050BA  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11749  0050BC  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11750  0050BE  B4D8               	btfsc	status,2,c
 11751  0050C0  EF64  F028         	goto	u6431
 11752  0050C4  EF66  F028         	goto	u6430
 11753  0050C8                     u6431:
 11754  0050C8  EF9C  F028         	goto	l6673
 11755  0050CC                     u6430:
 11756  0050CC                     
 11757                           ;main.c: 70:         if (CLC3CONbits.LC3OUT) {
 11758  0050CC  013C               	movlb	60	; () banked
 11759  0050CE  AB60               	btfss	96,5,b	;volatile
 11760  0050D0  EF6C  F028         	goto	u6441
 11761  0050D4  EF6E  F028         	goto	u6440
 11762  0050D8                     u6441:
 11763  0050D8  EF86  F028         	goto	l6671
 11764  0050DC                     u6440:
 11765  0050DC                     
 11766                           ; BSR set to: 60
 11767                           ;main.c: 71:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11768  0050DC  0E20               	movlw	32
 11769  0050DE  6E14               	movwf	___aldiv@dividend^0,c
 11770  0050E0  0EA1               	movlw	161
 11771  0050E2  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11772  0050E4  0E07               	movlw	7
 11773  0050E6  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11774  0050E8  0E00               	movlw	0
 11775  0050EA  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11776  0050EC  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11777  0050F0  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11778  0050F4  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11779  0050F8  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11780  0050FC  EC8E  F022         	call	___aldiv	;wreg free
 11781  005100  C014  F024         	movff	?___aldiv,actSpeed@speed
 11782  005104  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11783                           
 11784                           ;main.c: 72:         } else {
 11785  005108  EF9C  F028         	goto	l6673
 11786  00510C                     l6671:
 11787                           
 11788                           ; BSR set to: 60
 11789                           ;main.c: 73:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11790  00510C  0EE0               	movlw	224
 11791  00510E  6E14               	movwf	___aldiv@dividend^0,c
 11792  005110  0E5E               	movlw	94
 11793  005112  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11794  005114  0EF8               	movlw	248
 11795  005116  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11796  005118  0EFF               	movlw	255
 11797  00511A  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11798  00511C  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11799  005120  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11800  005124  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11801  005128  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11802  00512C  EC8E  F022         	call	___aldiv	;wreg free
 11803  005130  C014  F024         	movff	?___aldiv,actSpeed@speed
 11804  005134  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11805  005138                     l6673:
 11806                           
 11807                           ;main.c: 76:     return speed;
 11808  005138  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11809  00513C  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11810  005140  0012               	return		;funcret
 11811  005142                     __end_of_actSpeed:
 11812                           	callstack 0
 11813                           
 11814 ;; *************** function ___aldiv *****************
 11815 ;; Defined at:
 11816 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;  dividend        4   19[COMRAM] long 
 11819 ;;  divisor         4   23[COMRAM] long 
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;  quotient        4   29[COMRAM] long 
 11822 ;;  sign            1   28[COMRAM] unsigned char 
 11823 ;;  counter         1   27[COMRAM] unsigned char 
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  4   19[COMRAM] long 
 11826 ;; Registers used:
 11827 ;;		wreg, status,2, status,0
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11833 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11836 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11837 ;;Total ram usage:       14 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; Hardware stack levels required when called: 8
 11840 ;; This function calls:
 11841 ;;		Nothing
 11842 ;; This function is called by:
 11843 ;;		_actSpeed
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text45
 11848  00451C                     __ptext45:
 11849                           	callstack 0
 11850  00451C                     ___aldiv:
 11851                           	callstack 19
 11852  00451C  0E00               	movlw	0
 11853  00451E  6E1D               	movwf	___aldiv@sign^0,c
 11854  004520  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11855  004522  EF97  F022         	goto	u6270
 11856  004526  EF95  F022         	goto	u6271
 11857  00452A                     u6271:
 11858  00452A  EFA1  F022         	goto	l6509
 11859  00452E                     u6270:
 11860  00452E  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11861  004530  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11862  004532  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11863  004534  6C18               	negf	___aldiv@divisor^0,c
 11864  004536  0E00               	movlw	0
 11865  004538  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11866  00453A  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11867  00453C  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11868  00453E  0E01               	movlw	1
 11869  004540  6E1D               	movwf	___aldiv@sign^0,c
 11870  004542                     l6509:
 11871  004542  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11872  004544  EFA8  F022         	goto	u6280
 11873  004548  EFA6  F022         	goto	u6281
 11874  00454C                     u6281:
 11875  00454C  EFB2  F022         	goto	l6515
 11876  004550                     u6280:
 11877  004550  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11878  004552  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11879  004554  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11880  004556  6C14               	negf	___aldiv@dividend^0,c
 11881  004558  0E00               	movlw	0
 11882  00455A  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11883  00455C  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11884  00455E  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11885  004560  0E01               	movlw	1
 11886  004562  1A1D               	xorwf	___aldiv@sign^0,f,c
 11887  004564                     l6515:
 11888  004564  0E00               	movlw	0
 11889  004566  6E1E               	movwf	___aldiv@quotient^0,c
 11890  004568  0E00               	movlw	0
 11891  00456A  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11892  00456C  0E00               	movlw	0
 11893  00456E  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11894  004570  0E00               	movlw	0
 11895  004572  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11896  004574  5018               	movf	___aldiv@divisor^0,w,c
 11897  004576  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11898  004578  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11899  00457A  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11900  00457C  B4D8               	btfsc	status,2,c
 11901  00457E  EFC3  F022         	goto	u6291
 11902  004582  EFC5  F022         	goto	u6290
 11903  004586                     u6291:
 11904  004586  EFFB  F022         	goto	l6537
 11905  00458A                     u6290:
 11906  00458A  0E01               	movlw	1
 11907  00458C  6E1C               	movwf	___aldiv@counter^0,c
 11908  00458E  EFCF  F022         	goto	l6523
 11909  004592                     l6521:
 11910  004592  90D8               	bcf	status,0,c
 11911  004594  3618               	rlcf	___aldiv@divisor^0,f,c
 11912  004596  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11913  004598  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11914  00459A  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11915  00459C  2A1C               	incf	___aldiv@counter^0,f,c
 11916  00459E                     l6523:
 11917  00459E  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11918  0045A0  EFD4  F022         	goto	u6301
 11919  0045A4  EFD6  F022         	goto	u6300
 11920  0045A8                     u6301:
 11921  0045A8  EFC9  F022         	goto	l6521
 11922  0045AC                     u6300:
 11923  0045AC                     l6525:
 11924  0045AC  90D8               	bcf	status,0,c
 11925  0045AE  361E               	rlcf	___aldiv@quotient^0,f,c
 11926  0045B0  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11927  0045B2  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11928  0045B4  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11929  0045B6  5018               	movf	___aldiv@divisor^0,w,c
 11930  0045B8  5C14               	subwf	___aldiv@dividend^0,w,c
 11931  0045BA  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11932  0045BC  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11933  0045BE  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11934  0045C0  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11935  0045C2  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11936  0045C4  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11937  0045C6  A0D8               	btfss	status,0,c
 11938  0045C8  EFE8  F022         	goto	u6311
 11939  0045CC  EFEA  F022         	goto	u6310
 11940  0045D0                     u6311:
 11941  0045D0  EFF3  F022         	goto	l6533
 11942  0045D4                     u6310:
 11943  0045D4  5018               	movf	___aldiv@divisor^0,w,c
 11944  0045D6  5E14               	subwf	___aldiv@dividend^0,f,c
 11945  0045D8  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11946  0045DA  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11947  0045DC  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11948  0045DE  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11949  0045E0  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11950  0045E2  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11951  0045E4  801E               	bsf	___aldiv@quotient^0,0,c
 11952  0045E6                     l6533:
 11953  0045E6  90D8               	bcf	status,0,c
 11954  0045E8  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11955  0045EA  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11956  0045EC  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11957  0045EE  3218               	rrcf	___aldiv@divisor^0,f,c
 11958  0045F0  2E1C               	decfsz	___aldiv@counter^0,f,c
 11959  0045F2  EFD6  F022         	goto	l6525
 11960  0045F6                     l6537:
 11961  0045F6  501D               	movf	___aldiv@sign^0,w,c
 11962  0045F8  B4D8               	btfsc	status,2,c
 11963  0045FA  EF01  F023         	goto	u6321
 11964  0045FE  EF03  F023         	goto	u6320
 11965  004602                     u6321:
 11966  004602  EF0B  F023         	goto	l6541
 11967  004606                     u6320:
 11968  004606  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11969  004608  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11970  00460A  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11971  00460C  6C1E               	negf	___aldiv@quotient^0,c
 11972  00460E  0E00               	movlw	0
 11973  004610  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11974  004612  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11975  004614  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11976  004616                     l6541:
 11977  004616  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11978  00461A  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11979  00461E  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11980  004622  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11981  004626  0012               	return		;funcret
 11982  004628                     __end_of___aldiv:
 11983                           	callstack 0
 11984                           
 11985 ;; *************** function ___xxtofl *****************
 11986 ;; Defined at:
 11987 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;  sign            1    wreg     unsigned char 
 11990 ;;  val             4   27[COMRAM] long 
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;  sign            1   35[COMRAM] unsigned char 
 11993 ;;  arg             4   37[COMRAM] unsigned long 
 11994 ;;  exp             1   36[COMRAM] unsigned char 
 11995 ;; Return value:  Size  Location     Type
 11996 ;;                  4   27[COMRAM] unsigned char 
 11997 ;; Registers used:
 11998 ;;		wreg, status,2, status,0
 11999 ;; Tracked objects:
 12000 ;;		On entry : 0/0
 12001 ;;		On exit  : 0/0
 12002 ;;		Unchanged: 0/0
 12003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12005 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12006 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12007 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12008 ;;Total ram usage:       14 bytes
 12009 ;; Hardware stack levels used: 1
 12010 ;; Hardware stack levels required when called: 8
 12011 ;; This function calls:
 12012 ;;		Nothing
 12013 ;; This function is called by:
 12014 ;;		_loop
 12015 ;;		_getBatteryVoltage
 12016 ;;		_checkBatt
 12017 ;;		_calcSpeed
 12018 ;;		_calcMotorPow
 12019 ;;		_setSteering
 12020 ;;		_checkCurveCount
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024                           	psect	text46
 12025  003B56                     __ptext46:
 12026                           	callstack 0
 12027  003B56                     ___xxtofl:
 12028                           	callstack 19
 12029                           
 12030                           ;incstack = 0
 12031                           ;___xxtofl@sign stored from wreg
 12032  003B56  6E24               	movwf	___xxtofl@sign^0,c
 12033  003B58  5024               	movf	___xxtofl@sign^0,w,c
 12034  003B5A  B4D8               	btfsc	status,2,c
 12035  003B5C  EFB2  F01D         	goto	u9681
 12036  003B60  EFB4  F01D         	goto	u9680
 12037  003B64                     u9681:
 12038  003B64  EFD6  F01D         	goto	l2060
 12039  003B68                     u9680:
 12040  003B68  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12041  003B6A  EFBB  F01D         	goto	u9690
 12042  003B6E  EFB9  F01D         	goto	u9691
 12043  003B72                     u9691:
 12044  003B72  EFD6  F01D         	goto	l2060
 12045  003B76                     u9690:
 12046  003B76  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 12047  003B7A  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 12048  003B7E  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 12049  003B82  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 12050  003B86  1E20               	comf	??___xxtofl^0,f,c
 12051  003B88  1E21               	comf	(??___xxtofl+1)^0,f,c
 12052  003B8A  1E22               	comf	(??___xxtofl+2)^0,f,c
 12053  003B8C  1E23               	comf	(??___xxtofl+3)^0,f,c
 12054  003B8E  2A20               	incf	??___xxtofl^0,f,c
 12055  003B90  0E00               	movlw	0
 12056  003B92  2221               	addwfc	(??___xxtofl+1)^0,f,c
 12057  003B94  2222               	addwfc	(??___xxtofl+2)^0,f,c
 12058  003B96  2223               	addwfc	(??___xxtofl+3)^0,f,c
 12059  003B98  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 12060  003B9C  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 12061  003BA0  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 12062  003BA4  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 12063  003BA8  EFDE  F01D         	goto	l8791
 12064  003BAC                     l2060:
 12065  003BAC  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 12066  003BB0  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12067  003BB4  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12068  003BB8  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12069  003BBC                     l8791:
 12070  003BBC  501C               	movf	___xxtofl@val^0,w,c
 12071  003BBE  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 12072  003BC0  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 12073  003BC2  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 12074  003BC4  A4D8               	btfss	status,2,c
 12075  003BC6  EFE7  F01D         	goto	u9701
 12076  003BCA  EFE9  F01D         	goto	u9700
 12077  003BCE                     u9701:
 12078  003BCE  EFF3  F01D         	goto	l8797
 12079  003BD2                     u9700:
 12080  003BD2  0E00               	movlw	0
 12081  003BD4  6E1C               	movwf	?___xxtofl^0,c
 12082  003BD6  0E00               	movlw	0
 12083  003BD8  6E1D               	movwf	(?___xxtofl+1)^0,c
 12084  003BDA  0E00               	movlw	0
 12085  003BDC  6E1E               	movwf	(?___xxtofl+2)^0,c
 12086  003BDE  0E00               	movlw	0
 12087  003BE0  6E1F               	movwf	(?___xxtofl+3)^0,c
 12088  003BE2  EF84  F01E         	goto	l2063
 12089  003BE6                     l8797:
 12090  003BE6  0E96               	movlw	150
 12091  003BE8  6E25               	movwf	___xxtofl@exp^0,c
 12092  003BEA  EFFD  F01D         	goto	l8801
 12093  003BEE                     l8799:
 12094  003BEE  2A25               	incf	___xxtofl@exp^0,f,c
 12095  003BF0  90D8               	bcf	status,0,c
 12096  003BF2  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12097  003BF4  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12098  003BF6  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12099  003BF8  3226               	rrcf	___xxtofl@arg^0,f,c
 12100  003BFA                     l8801:
 12101  003BFA  0E00               	movlw	0
 12102  003BFC  1426               	andwf	___xxtofl@arg^0,w,c
 12103  003BFE  6E20               	movwf	??___xxtofl^0,c
 12104  003C00  0E00               	movlw	0
 12105  003C02  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12106  003C04  6E21               	movwf	(??___xxtofl+1)^0,c
 12107  003C06  0E00               	movlw	0
 12108  003C08  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12109  003C0A  6E22               	movwf	(??___xxtofl+2)^0,c
 12110  003C0C  0EFE               	movlw	254
 12111  003C0E  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12112  003C10  6E23               	movwf	(??___xxtofl+3)^0,c
 12113  003C12  5020               	movf	??___xxtofl^0,w,c
 12114  003C14  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12115  003C16  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12116  003C18  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12117  003C1A  A4D8               	btfss	status,2,c
 12118  003C1C  EF12  F01E         	goto	u9711
 12119  003C20  EF14  F01E         	goto	u9710
 12120  003C24                     u9711:
 12121  003C24  EFF7  F01D         	goto	l8799
 12122  003C28                     u9710:
 12123  003C28  EF22  F01E         	goto	l2067
 12124  003C2C                     l8803:
 12125  003C2C  2A25               	incf	___xxtofl@exp^0,f,c
 12126  003C2E  0E01               	movlw	1
 12127  003C30  2626               	addwf	___xxtofl@arg^0,f,c
 12128  003C32  0E00               	movlw	0
 12129  003C34  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 12130  003C36  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 12131  003C38  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 12132  003C3A  90D8               	bcf	status,0,c
 12133  003C3C  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12134  003C3E  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12135  003C40  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12136  003C42  3226               	rrcf	___xxtofl@arg^0,f,c
 12137  003C44                     l2067:
 12138  003C44  0E00               	movlw	0
 12139  003C46  1426               	andwf	___xxtofl@arg^0,w,c
 12140  003C48  6E20               	movwf	??___xxtofl^0,c
 12141  003C4A  0E00               	movlw	0
 12142  003C4C  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12143  003C4E  6E21               	movwf	(??___xxtofl+1)^0,c
 12144  003C50  0E00               	movlw	0
 12145  003C52  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12146  003C54  6E22               	movwf	(??___xxtofl+2)^0,c
 12147  003C56  0EFF               	movlw	255
 12148  003C58  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12149  003C5A  6E23               	movwf	(??___xxtofl+3)^0,c
 12150  003C5C  5020               	movf	??___xxtofl^0,w,c
 12151  003C5E  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12152  003C60  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12153  003C62  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12154  003C64  A4D8               	btfss	status,2,c
 12155  003C66  EF37  F01E         	goto	u9721
 12156  003C6A  EF39  F01E         	goto	u9720
 12157  003C6E                     u9721:
 12158  003C6E  EF16  F01E         	goto	l8803
 12159  003C72                     u9720:
 12160  003C72  EF41  F01E         	goto	l8811
 12161  003C76                     l8809:
 12162  003C76  0625               	decf	___xxtofl@exp^0,f,c
 12163  003C78  90D8               	bcf	status,0,c
 12164  003C7A  3626               	rlcf	___xxtofl@arg^0,f,c
 12165  003C7C  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 12166  003C7E  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 12167  003C80  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 12168  003C82                     l8811:
 12169  003C82  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 12170  003C84  EF46  F01E         	goto	u9731
 12171  003C88  EF48  F01E         	goto	u9730
 12172  003C8C                     u9731:
 12173  003C8C  EF50  F01E         	goto	l2074
 12174  003C90                     u9730:
 12175  003C90  0E02               	movlw	2
 12176  003C92  6025               	cpfslt	___xxtofl@exp^0,c
 12177  003C94  EF4E  F01E         	goto	u9741
 12178  003C98  EF50  F01E         	goto	u9740
 12179  003C9C                     u9741:
 12180  003C9C  EF3B  F01E         	goto	l8809
 12181  003CA0                     u9740:
 12182  003CA0                     l2074:
 12183  003CA0  B025               	btfsc	___xxtofl@exp^0,0,c
 12184  003CA2  EF55  F01E         	goto	u9751
 12185  003CA6  EF57  F01E         	goto	u9750
 12186  003CAA                     u9751:
 12187  003CAA  EF58  F01E         	goto	l8817
 12188  003CAE                     u9750:
 12189  003CAE  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 12190  003CB0                     l8817:
 12191  003CB0  90D8               	bcf	status,0,c
 12192  003CB2  3225               	rrcf	___xxtofl@exp^0,f,c
 12193  003CB4  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 12194  003CB8  6A21               	clrf	(??___xxtofl+1)^0,c
 12195  003CBA  6A22               	clrf	(??___xxtofl+2)^0,c
 12196  003CBC  6A23               	clrf	(??___xxtofl+3)^0,c
 12197  003CBE  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 12198  003CC2  6A22               	clrf	(??___xxtofl+2)^0,c
 12199  003CC4  6A21               	clrf	(??___xxtofl+1)^0,c
 12200  003CC6  6A20               	clrf	??___xxtofl^0,c
 12201  003CC8  5020               	movf	??___xxtofl^0,w,c
 12202  003CCA  1226               	iorwf	___xxtofl@arg^0,f,c
 12203  003CCC  5021               	movf	(??___xxtofl+1)^0,w,c
 12204  003CCE  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12205  003CD0  5022               	movf	(??___xxtofl+2)^0,w,c
 12206  003CD2  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12207  003CD4  5023               	movf	(??___xxtofl+3)^0,w,c
 12208  003CD6  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12209  003CD8  5024               	movf	___xxtofl@sign^0,w,c
 12210  003CDA  B4D8               	btfsc	status,2,c
 12211  003CDC  EF72  F01E         	goto	u9761
 12212  003CE0  EF74  F01E         	goto	u9760
 12213  003CE4                     u9761:
 12214  003CE4  EF7C  F01E         	goto	l8827
 12215  003CE8                     u9760:
 12216  003CE8  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12217  003CEA  EF7B  F01E         	goto	u9770
 12218  003CEE  EF79  F01E         	goto	u9771
 12219  003CF2                     u9771:
 12220  003CF2  EF7C  F01E         	goto	l8827
 12221  003CF6                     u9770:
 12222  003CF6  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12223  003CF8                     l8827:
 12224  003CF8  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12225  003CFC  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12226  003D00  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12227  003D04  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12228  003D08                     l2063:
 12229  003D08  0012               	return		;funcret
 12230  003D0A                     __end_of___xxtofl:
 12231                           	callstack 0
 12232                           
 12233 ;; *************** function ___fltol *****************
 12234 ;; Defined at:
 12235 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;  f1              4   25[BANK0 ] unsigned char 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;  exp1            1   34[BANK0 ] unsigned char 
 12240 ;;  sign1           1   33[BANK0 ] unsigned char 
 12241 ;; Return value:  Size  Location     Type
 12242 ;;                  4   25[BANK0 ] long 
 12243 ;; Registers used:
 12244 ;;		wreg, status,2, status,0
 12245 ;; Tracked objects:
 12246 ;;		On entry : 0/0
 12247 ;;		On exit  : 0/0
 12248 ;;		Unchanged: 0/0
 12249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;Total ram usage:       10 bytes
 12255 ;; Hardware stack levels used: 1
 12256 ;; Hardware stack levels required when called: 8
 12257 ;; This function calls:
 12258 ;;		Nothing
 12259 ;; This function is called by:
 12260 ;;		_calcSpeed
 12261 ;;		_calcMotorPow
 12262 ;;		_setSteering
 12263 ;;		_efgtoa
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           	psect	text47
 12268  004628                     __ptext47:
 12269                           	callstack 0
 12270  004628                     ___fltol:
 12271                           	callstack 19
 12272  004628  0100               	movlb	0	; () banked
 12273  00462A  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12274  00462C  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12275  00462E  6F82               	movwf	___fltol@exp1& (0+255),b
 12276  004630  5182               	movf	___fltol@exp1& (0+255),w,b
 12277  004632  A4D8               	btfss	status,2,c
 12278  004634  EF1E  F023         	goto	u8491
 12279  004638  EF20  F023         	goto	u8490
 12280  00463C                     u8491:
 12281  00463C  EF2A  F023         	goto	l8187
 12282  004640                     u8490:
 12283  004640                     l8183:
 12284                           
 12285                           ; BSR set to: 0
 12286  004640  0E00               	movlw	0
 12287  004642  6F79               	movwf	?___fltol& (0+255),b
 12288  004644  0E00               	movlw	0
 12289  004646  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12290  004648  0E00               	movlw	0
 12291  00464A  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12292  00464C  0E00               	movlw	0
 12293  00464E  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12294  004650  EF97  F023         	goto	l1702
 12295  004654                     l8187:
 12296                           
 12297                           ; BSR set to: 0
 12298  004654  C079  F07D         	movff	___fltol@f1,??___fltol
 12299  004658  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12300  00465C  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12301  004660  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12302  004664  0E20               	movlw	32
 12303  004666  EF3A  F023         	goto	u8500
 12304  00466A                     u8505:
 12305  00466A  90D8               	bcf	status,0,c
 12306  00466C  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12307  00466E  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12308  004670  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12309  004672  337D               	rrcf	??___fltol& (0+255),f,b
 12310  004674                     u8500:
 12311  004674  2EE8               	decfsz	wreg,f,c
 12312  004676  EF35  F023         	goto	u8505
 12313  00467A  517D               	movf	??___fltol& (0+255),w,b
 12314  00467C  6F81               	movwf	___fltol@sign1& (0+255),b
 12315  00467E                     
 12316                           ; BSR set to: 0
 12317  00467E  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12318  004680                     
 12319                           ; BSR set to: 0
 12320  004680  0EFF               	movlw	255
 12321  004682  1779               	andwf	___fltol@f1& (0+255),f,b
 12322  004684  0EFF               	movlw	255
 12323  004686  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12324  004688  0EFF               	movlw	255
 12325  00468A  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12326  00468C  0E00               	movlw	0
 12327  00468E  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12328  004690                     
 12329                           ; BSR set to: 0
 12330  004690  0E96               	movlw	150
 12331  004692  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12332  004694                     
 12333                           ; BSR set to: 0
 12334  004694  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12335  004696  EF51  F023         	goto	u8510
 12336  00469A  EF4F  F023         	goto	u8511
 12337  00469E                     u8511:
 12338  00469E  EF67  F023         	goto	l8207
 12339  0046A2                     u8510:
 12340  0046A2                     
 12341                           ; BSR set to: 0
 12342  0046A2  5182               	movf	___fltol@exp1& (0+255),w,b
 12343  0046A4  0A80               	xorlw	128
 12344  0046A6  0F97               	addlw	151
 12345  0046A8  B0D8               	btfsc	status,0,c
 12346  0046AA  EF59  F023         	goto	u8521
 12347  0046AE  EF5B  F023         	goto	u8520
 12348  0046B2                     u8521:
 12349  0046B2  EF5D  F023         	goto	l8203
 12350  0046B6                     u8520:
 12351  0046B6  EF20  F023         	goto	l8183
 12352  0046BA                     l8203:
 12353                           
 12354                           ; BSR set to: 0
 12355  0046BA  90D8               	bcf	status,0,c
 12356  0046BC  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12357  0046BE  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12358  0046C0  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12359  0046C2  3379               	rrcf	___fltol@f1& (0+255),f,b
 12360  0046C4                     
 12361                           ; BSR set to: 0
 12362  0046C4  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12363  0046C6  EF5D  F023         	goto	l8203
 12364  0046CA  EF7F  F023         	goto	l8217
 12365  0046CE                     l8207:
 12366                           
 12367                           ; BSR set to: 0
 12368  0046CE  0E1F               	movlw	31
 12369  0046D0  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12370  0046D2  EF6D  F023         	goto	u8531
 12371  0046D6  EF6F  F023         	goto	u8530
 12372  0046DA                     u8531:
 12373  0046DA  EF77  F023         	goto	l8215
 12374  0046DE                     u8530:
 12375  0046DE  EF20  F023         	goto	l8183
 12376  0046E2                     l8213:
 12377                           
 12378                           ; BSR set to: 0
 12379  0046E2  90D8               	bcf	status,0,c
 12380  0046E4  3779               	rlcf	___fltol@f1& (0+255),f,b
 12381  0046E6  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12382  0046E8  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12383  0046EA  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12384  0046EC  0782               	decf	___fltol@exp1& (0+255),f,b
 12385  0046EE                     l8215:
 12386                           
 12387                           ; BSR set to: 0
 12388  0046EE  5182               	movf	___fltol@exp1& (0+255),w,b
 12389  0046F0  A4D8               	btfss	status,2,c
 12390  0046F2  EF7D  F023         	goto	u8541
 12391  0046F6  EF7F  F023         	goto	u8540
 12392  0046FA                     u8541:
 12393  0046FA  EF71  F023         	goto	l8213
 12394  0046FE                     u8540:
 12395  0046FE                     l8217:
 12396                           
 12397                           ; BSR set to: 0
 12398  0046FE  5181               	movf	___fltol@sign1& (0+255),w,b
 12399  004700  B4D8               	btfsc	status,2,c
 12400  004702  EF85  F023         	goto	u8551
 12401  004706  EF87  F023         	goto	u8550
 12402  00470A                     u8551:
 12403  00470A  EF8F  F023         	goto	l8221
 12404  00470E                     u8550:
 12405  00470E                     
 12406                           ; BSR set to: 0
 12407  00470E  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12408  004710  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12409  004712  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12410  004714  6D79               	negf	___fltol@f1& (0+255),b
 12411  004716  0E00               	movlw	0
 12412  004718  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12413  00471A  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12414  00471C  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12415  00471E                     l8221:
 12416                           
 12417                           ; BSR set to: 0
 12418  00471E  C079  F079         	movff	___fltol@f1,?___fltol
 12419  004722  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12420  004726  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12421  00472A  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12422  00472E                     l1702:
 12423                           
 12424                           ; BSR set to: 0
 12425  00472E  0012               	return		;funcret
 12426  004730                     __end_of___fltol:
 12427                           	callstack 0
 12428                           
 12429 ;; *************** function ___flmul *****************
 12430 ;; Defined at:
 12431 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;  b               4   41[COMRAM] long 
 12434 ;;  a               4   45[COMRAM] long 
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;  prod            4    7[BANK0 ] struct .
 12437 ;;  grs             4    2[BANK0 ] unsigned long 
 12438 ;;  temp            2   11[BANK0 ] struct .
 12439 ;;  bexp            1    6[BANK0 ] unsigned char 
 12440 ;;  aexp            1    1[BANK0 ] unsigned char 
 12441 ;;  sign            1    0[BANK0 ] unsigned char 
 12442 ;; Return value:  Size  Location     Type
 12443 ;;                  4   41[COMRAM] unsigned char 
 12444 ;; Registers used:
 12445 ;;		wreg, status,2, status,0, prodl, prodh
 12446 ;; Tracked objects:
 12447 ;;		On entry : 0/0
 12448 ;;		On exit  : 0/0
 12449 ;;		Unchanged: 0/0
 12450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12451 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12455 ;;Total ram usage:       25 bytes
 12456 ;; Hardware stack levels used: 1
 12457 ;; Hardware stack levels required when called: 8
 12458 ;; This function calls:
 12459 ;;		Nothing
 12460 ;; This function is called by:
 12461 ;;		_calcSpeed
 12462 ;;		_calcMotorPow
 12463 ;;		_efgtoa
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           	psect	text48
 12468  002762                     __ptext48:
 12469                           	callstack 0
 12470  002762                     ___flmul:
 12471                           	callstack 16
 12472  002762  502D               	movf	(___flmul@b+3)^0,w,c
 12473  002764  0B80               	andlw	128
 12474  002766  0100               	movlb	0	; () banked
 12475  002768  6F60               	movwf	___flmul@sign& (0+255),b
 12476  00276A  502D               	movf	(___flmul@b+3)^0,w,c
 12477  00276C  242D               	addwf	(___flmul@b+3)^0,w,c
 12478  00276E  6F66               	movwf	___flmul@bexp& (0+255),b
 12479  002770                     
 12480                           ; BSR set to: 0
 12481  002770  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12482  002772  EFBD  F013         	goto	u8091
 12483  002776  EFBF  F013         	goto	u8090
 12484  00277A                     u8091:
 12485  00277A  EFC0  F013         	goto	l7925
 12486  00277E                     u8090:
 12487  00277E                     
 12488                           ; BSR set to: 0
 12489  00277E  8166               	bsf	___flmul@bexp& (0+255),0,b
 12490  002780                     l7925:
 12491                           
 12492                           ; BSR set to: 0
 12493  002780  5166               	movf	___flmul@bexp& (0+255),w,b
 12494  002782  B4D8               	btfsc	status,2,c
 12495  002784  EFC6  F013         	goto	u8101
 12496  002788  EFC8  F013         	goto	u8100
 12497  00278C                     u8101:
 12498  00278C  EFDB  F013         	goto	l7933
 12499  002790                     u8100:
 12500  002790                     
 12501                           ; BSR set to: 0
 12502  002790  2966               	incf	___flmul@bexp& (0+255),w,b
 12503  002792  A4D8               	btfss	status,2,c
 12504  002794  EFCE  F013         	goto	u8111
 12505  002798  EFD0  F013         	goto	u8110
 12506  00279C                     u8111:
 12507  00279C  EFD8  F013         	goto	l7931
 12508  0027A0                     u8110:
 12509  0027A0                     
 12510                           ; BSR set to: 0
 12511  0027A0  0E00               	movlw	0
 12512  0027A2  6E2A               	movwf	___flmul@b^0,c
 12513  0027A4  0E00               	movlw	0
 12514  0027A6  6E2B               	movwf	(___flmul@b+1)^0,c
 12515  0027A8  0E00               	movlw	0
 12516  0027AA  6E2C               	movwf	(___flmul@b+2)^0,c
 12517  0027AC  0E00               	movlw	0
 12518  0027AE  6E2D               	movwf	(___flmul@b+3)^0,c
 12519  0027B0                     l7931:
 12520                           
 12521                           ; BSR set to: 0
 12522  0027B0  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12523  0027B2  EFE3  F013         	goto	l7935
 12524  0027B6                     l7933:
 12525                           
 12526                           ; BSR set to: 0
 12527  0027B6  0E00               	movlw	0
 12528  0027B8  6E2A               	movwf	___flmul@b^0,c
 12529  0027BA  0E00               	movlw	0
 12530  0027BC  6E2B               	movwf	(___flmul@b+1)^0,c
 12531  0027BE  0E00               	movlw	0
 12532  0027C0  6E2C               	movwf	(___flmul@b+2)^0,c
 12533  0027C2  0E00               	movlw	0
 12534  0027C4  6E2D               	movwf	(___flmul@b+3)^0,c
 12535  0027C6                     l7935:
 12536                           
 12537                           ; BSR set to: 0
 12538  0027C6  5031               	movf	(___flmul@a+3)^0,w,c
 12539  0027C8  0B80               	andlw	128
 12540  0027CA  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12541  0027CC                     
 12542                           ; BSR set to: 0
 12543  0027CC  5031               	movf	(___flmul@a+3)^0,w,c
 12544  0027CE  2431               	addwf	(___flmul@a+3)^0,w,c
 12545  0027D0  6F61               	movwf	___flmul@aexp& (0+255),b
 12546  0027D2                     
 12547                           ; BSR set to: 0
 12548  0027D2  AE30               	btfss	(___flmul@a+2)^0,7,c
 12549  0027D4  EFEE  F013         	goto	u8121
 12550  0027D8  EFF0  F013         	goto	u8120
 12551  0027DC                     u8121:
 12552  0027DC  EFF1  F013         	goto	l7943
 12553  0027E0                     u8120:
 12554  0027E0                     
 12555                           ; BSR set to: 0
 12556  0027E0  8161               	bsf	___flmul@aexp& (0+255),0,b
 12557  0027E2                     l7943:
 12558                           
 12559                           ; BSR set to: 0
 12560  0027E2  5161               	movf	___flmul@aexp& (0+255),w,b
 12561  0027E4  B4D8               	btfsc	status,2,c
 12562  0027E6  EFF7  F013         	goto	u8131
 12563  0027EA  EFF9  F013         	goto	u8130
 12564  0027EE                     u8131:
 12565  0027EE  EF0C  F014         	goto	l7951
 12566  0027F2                     u8130:
 12567  0027F2                     
 12568                           ; BSR set to: 0
 12569  0027F2  2961               	incf	___flmul@aexp& (0+255),w,b
 12570  0027F4  A4D8               	btfss	status,2,c
 12571  0027F6  EFFF  F013         	goto	u8141
 12572  0027FA  EF01  F014         	goto	u8140
 12573  0027FE                     u8141:
 12574  0027FE  EF09  F014         	goto	l7949
 12575  002802                     u8140:
 12576  002802                     
 12577                           ; BSR set to: 0
 12578  002802  0E00               	movlw	0
 12579  002804  6E2E               	movwf	___flmul@a^0,c
 12580  002806  0E00               	movlw	0
 12581  002808  6E2F               	movwf	(___flmul@a+1)^0,c
 12582  00280A  0E00               	movlw	0
 12583  00280C  6E30               	movwf	(___flmul@a+2)^0,c
 12584  00280E  0E00               	movlw	0
 12585  002810  6E31               	movwf	(___flmul@a+3)^0,c
 12586  002812                     l7949:
 12587                           
 12588                           ; BSR set to: 0
 12589  002812  8E30               	bsf	(___flmul@a+2)^0,7,c
 12590  002814  EF14  F014         	goto	l2019
 12591  002818                     l7951:
 12592                           
 12593                           ; BSR set to: 0
 12594  002818  0E00               	movlw	0
 12595  00281A  6E2E               	movwf	___flmul@a^0,c
 12596  00281C  0E00               	movlw	0
 12597  00281E  6E2F               	movwf	(___flmul@a+1)^0,c
 12598  002820  0E00               	movlw	0
 12599  002822  6E30               	movwf	(___flmul@a+2)^0,c
 12600  002824  0E00               	movlw	0
 12601  002826  6E31               	movwf	(___flmul@a+3)^0,c
 12602  002828                     l2019:
 12603                           
 12604                           ; BSR set to: 0
 12605  002828  5161               	movf	___flmul@aexp& (0+255),w,b
 12606  00282A  B4D8               	btfsc	status,2,c
 12607  00282C  EF1A  F014         	goto	u8151
 12608  002830  EF1C  F014         	goto	u8150
 12609  002834                     u8151:
 12610  002834  EF24  F014         	goto	l7955
 12611  002838                     u8150:
 12612  002838                     
 12613                           ; BSR set to: 0
 12614  002838  5166               	movf	___flmul@bexp& (0+255),w,b
 12615  00283A  A4D8               	btfss	status,2,c
 12616  00283C  EF22  F014         	goto	u8161
 12617  002840  EF24  F014         	goto	u8160
 12618  002844                     u8161:
 12619  002844  EF2E  F014         	goto	l7959
 12620  002848                     u8160:
 12621  002848                     l7955:
 12622                           
 12623                           ; BSR set to: 0
 12624  002848  0E00               	movlw	0
 12625  00284A  6E2A               	movwf	?___flmul^0,c
 12626  00284C  0E00               	movlw	0
 12627  00284E  6E2B               	movwf	(?___flmul+1)^0,c
 12628  002850  0E00               	movlw	0
 12629  002852  6E2C               	movwf	(?___flmul+2)^0,c
 12630  002854  0E00               	movlw	0
 12631  002856  6E2D               	movwf	(?___flmul+3)^0,c
 12632  002858  EFD8  F015         	goto	l2023
 12633  00285C                     l7959:
 12634                           
 12635                           ; BSR set to: 0
 12636  00285C  5030               	movf	(___flmul@a+2)^0,w,c
 12637  00285E  022A               	mulwf	___flmul@b^0,c
 12638  002860  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12639  002866  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12640  00286C                     
 12641                           ; BSR set to: 0
 12642  00286C  516B               	movf	___flmul@temp& (0+255),w,b
 12643  00286E  6F62               	movwf	___flmul@grs& (0+255),b
 12644  002870  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12645  002872  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12646  002874  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12647  002876                     
 12648                           ; BSR set to: 0
 12649  002876  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12650  002878  6F67               	movwf	___flmul@prod& (0+255),b
 12651  00287A  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12652  00287C  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12653  00287E  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12654  002880  502F               	movf	(___flmul@a+1)^0,w,c
 12655  002882  022B               	mulwf	(___flmul@b+1)^0,c
 12656  002884  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12657  00288A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12658  002890                     
 12659                           ; BSR set to: 0
 12660  002890  516B               	movf	___flmul@temp& (0+255),w,b
 12661  002892  2762               	addwf	___flmul@grs& (0+255),f,b
 12662  002894  0E00               	movlw	0
 12663  002896  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12664  002898  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12665  00289A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12666  00289C                     
 12667                           ; BSR set to: 0
 12668  00289C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12669  00289E  2767               	addwf	___flmul@prod& (0+255),f,b
 12670  0028A0  0E00               	movlw	0
 12671  0028A2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12672  0028A4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12673  0028A6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12674  0028A8  502E               	movf	___flmul@a^0,w,c
 12675  0028AA  022C               	mulwf	(___flmul@b+2)^0,c
 12676  0028AC  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12677  0028B2  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12678  0028B8                     
 12679                           ; BSR set to: 0
 12680  0028B8  516B               	movf	___flmul@temp& (0+255),w,b
 12681  0028BA  2762               	addwf	___flmul@grs& (0+255),f,b
 12682  0028BC  0E00               	movlw	0
 12683  0028BE  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12684  0028C0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12685  0028C2  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12686  0028C4                     
 12687                           ; BSR set to: 0
 12688  0028C4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12689  0028C6  2767               	addwf	___flmul@prod& (0+255),f,b
 12690  0028C8  0E00               	movlw	0
 12691  0028CA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12692  0028CC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12693  0028CE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12694  0028D0                     
 12695                           ; BSR set to: 0
 12696  0028D0  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12697  0028D4  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12698  0028D8  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12699  0028DC  6B62               	clrf	___flmul@grs& (0+255),b
 12700  0028DE                     
 12701                           ; BSR set to: 0
 12702  0028DE  502E               	movf	___flmul@a^0,w,c
 12703  0028E0  022B               	mulwf	(___flmul@b+1)^0,c
 12704  0028E2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12705  0028E8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12706  0028EE                     
 12707                           ; BSR set to: 0
 12708  0028EE  516B               	movf	___flmul@temp& (0+255),w,b
 12709  0028F0  2762               	addwf	___flmul@grs& (0+255),f,b
 12710  0028F2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12711  0028F4  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12712  0028F6  0E00               	movlw	0
 12713  0028F8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12714  0028FA  0E00               	movlw	0
 12715  0028FC  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12716  0028FE                     
 12717                           ; BSR set to: 0
 12718  0028FE  502F               	movf	(___flmul@a+1)^0,w,c
 12719  002900  022A               	mulwf	___flmul@b^0,c
 12720  002902  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12721  002908  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12722  00290E                     
 12723                           ; BSR set to: 0
 12724  00290E  516B               	movf	___flmul@temp& (0+255),w,b
 12725  002910  2762               	addwf	___flmul@grs& (0+255),f,b
 12726  002912  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12727  002914  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12728  002916  0E00               	movlw	0
 12729  002918  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12730  00291A  0E00               	movlw	0
 12731  00291C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12732  00291E                     
 12733                           ; BSR set to: 0
 12734  00291E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12735  002922  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12736  002926  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12737  00292A  6B62               	clrf	___flmul@grs& (0+255),b
 12738  00292C  502E               	movf	___flmul@a^0,w,c
 12739  00292E  022A               	mulwf	___flmul@b^0,c
 12740  002930  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12741  002936  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12742  00293C                     
 12743                           ; BSR set to: 0
 12744  00293C  516B               	movf	___flmul@temp& (0+255),w,b
 12745  00293E  2762               	addwf	___flmul@grs& (0+255),f,b
 12746  002940  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12747  002942  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12748  002944  0E00               	movlw	0
 12749  002946  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12750  002948  0E00               	movlw	0
 12751  00294A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12752  00294C                     
 12753                           ; BSR set to: 0
 12754  00294C  5030               	movf	(___flmul@a+2)^0,w,c
 12755  00294E  022B               	mulwf	(___flmul@b+1)^0,c
 12756  002950  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12757  002956  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12758  00295C  516B               	movf	___flmul@temp& (0+255),w,b
 12759  00295E  2767               	addwf	___flmul@prod& (0+255),f,b
 12760  002960  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12761  002962  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12762  002964  0E00               	movlw	0
 12763  002966  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12764  002968  0E00               	movlw	0
 12765  00296A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12766  00296C                     
 12767                           ; BSR set to: 0
 12768  00296C  502F               	movf	(___flmul@a+1)^0,w,c
 12769  00296E  022C               	mulwf	(___flmul@b+2)^0,c
 12770  002970  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12771  002976  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12772  00297C                     
 12773                           ; BSR set to: 0
 12774  00297C  516B               	movf	___flmul@temp& (0+255),w,b
 12775  00297E  2767               	addwf	___flmul@prod& (0+255),f,b
 12776  002980  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12777  002982  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12778  002984  0E00               	movlw	0
 12779  002986  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12780  002988  0E00               	movlw	0
 12781  00298A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12782  00298C  5030               	movf	(___flmul@a+2)^0,w,c
 12783  00298E  022C               	mulwf	(___flmul@b+2)^0,c
 12784  002990  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12785  002996  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12786  00299C                     
 12787                           ; BSR set to: 0
 12788  00299C  516B               	movf	___flmul@temp& (0+255),w,b
 12789  00299E  6E32               	movwf	??___flmul^0,c
 12790  0029A0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12791  0029A2  6E33               	movwf	(??___flmul+1)^0,c
 12792  0029A4  6A34               	clrf	(??___flmul+2)^0,c
 12793  0029A6  6A35               	clrf	(??___flmul+3)^0,c
 12794  0029A8  C034  F035         	movff	??___flmul+2,??___flmul+3
 12795  0029AC  C033  F034         	movff	??___flmul+1,??___flmul+2
 12796  0029B0  C032  F033         	movff	??___flmul,??___flmul+1
 12797  0029B4  6A32               	clrf	??___flmul^0,c
 12798  0029B6  5032               	movf	??___flmul^0,w,c
 12799  0029B8  2767               	addwf	___flmul@prod& (0+255),f,b
 12800  0029BA  5033               	movf	(??___flmul+1)^0,w,c
 12801  0029BC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12802  0029BE  5034               	movf	(??___flmul+2)^0,w,c
 12803  0029C0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12804  0029C2  5035               	movf	(??___flmul+3)^0,w,c
 12805  0029C4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12806  0029C6                     
 12807                           ; BSR set to: 0
 12808  0029C6  C062  F032         	movff	___flmul@grs,??___flmul
 12809  0029CA  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12810  0029CE  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12811  0029D2  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12812  0029D6  0E19               	movlw	25
 12813  0029D8  EFF3  F014         	goto	u8170
 12814  0029DC                     u8175:
 12815  0029DC  90D8               	bcf	status,0,c
 12816  0029DE  3235               	rrcf	(??___flmul+3)^0,f,c
 12817  0029E0  3234               	rrcf	(??___flmul+2)^0,f,c
 12818  0029E2  3233               	rrcf	(??___flmul+1)^0,f,c
 12819  0029E4  3232               	rrcf	??___flmul^0,f,c
 12820  0029E6                     u8170:
 12821  0029E6  2EE8               	decfsz	wreg,f,c
 12822  0029E8  EFEE  F014         	goto	u8175
 12823  0029EC  5032               	movf	??___flmul^0,w,c
 12824  0029EE  2767               	addwf	___flmul@prod& (0+255),f,b
 12825  0029F0  5033               	movf	(??___flmul+1)^0,w,c
 12826  0029F2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12827  0029F4  5034               	movf	(??___flmul+2)^0,w,c
 12828  0029F6  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12829  0029F8  5035               	movf	(??___flmul+3)^0,w,c
 12830  0029FA  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12831  0029FC                     
 12832                           ; BSR set to: 0
 12833  0029FC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12834  002A00  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12835  002A04  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12836  002A08  6B62               	clrf	___flmul@grs& (0+255),b
 12837  002A0A                     
 12838                           ; BSR set to: 0
 12839  002A0A  5161               	movf	___flmul@aexp& (0+255),w,b
 12840  002A0C  C066  F032         	movff	___flmul@bexp,??___flmul
 12841  002A10  6A33               	clrf	(??___flmul+1)^0,c
 12842  002A12  2632               	addwf	??___flmul^0,f,c
 12843  002A14  0E00               	movlw	0
 12844  002A16  2233               	addwfc	(??___flmul+1)^0,f,c
 12845  002A18  0E82               	movlw	130
 12846  002A1A  2432               	addwf	??___flmul^0,w,c
 12847  002A1C  6F6B               	movwf	___flmul@temp& (0+255),b
 12848  002A1E  0EFF               	movlw	255
 12849  002A20  2033               	addwfc	(??___flmul+1)^0,w,c
 12850  002A22  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12851  002A24  EF29  F015         	goto	l8007
 12852  002A28                     l8001:
 12853                           
 12854                           ; BSR set to: 0
 12855  002A28  90D8               	bcf	status,0,c
 12856  002A2A  3767               	rlcf	___flmul@prod& (0+255),f,b
 12857  002A2C  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12858  002A2E  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12859  002A30  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12860  002A32                     
 12861                           ; BSR set to: 0
 12862  002A32  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12863  002A34  EF1E  F015         	goto	u8181
 12864  002A38  EF20  F015         	goto	u8180
 12865  002A3C                     u8181:
 12866  002A3C  EF21  F015         	goto	l2026
 12867  002A40                     u8180:
 12868  002A40                     
 12869                           ; BSR set to: 0
 12870  002A40  8167               	bsf	___flmul@prod& (0+255),0,b
 12871  002A42                     l2026:
 12872                           
 12873                           ; BSR set to: 0
 12874  002A42  90D8               	bcf	status,0,c
 12875  002A44  3762               	rlcf	___flmul@grs& (0+255),f,b
 12876  002A46  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12877  002A48  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12878  002A4A  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12879  002A4C  076B               	decf	___flmul@temp& (0+255),f,b
 12880  002A4E  A0D8               	btfss	status,0,c
 12881  002A50  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12882  002A52                     l8007:
 12883                           
 12884                           ; BSR set to: 0
 12885  002A52  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12886  002A54  EF2E  F015         	goto	u8191
 12887  002A58  EF30  F015         	goto	u8190
 12888  002A5C                     u8191:
 12889  002A5C  EF14  F015         	goto	l8001
 12890  002A60                     u8190:
 12891  002A60                     
 12892                           ; BSR set to: 0
 12893  002A60  0E00               	movlw	0
 12894  002A62  6F61               	movwf	___flmul@aexp& (0+255),b
 12895  002A64                     
 12896                           ; BSR set to: 0
 12897  002A64  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12898  002A66  EF37  F015         	goto	u8201
 12899  002A6A  EF39  F015         	goto	u8200
 12900  002A6E                     u8201:
 12901  002A6E  EF5D  F015         	goto	l2028
 12902  002A72                     u8200:
 12903  002A72                     
 12904                           ; BSR set to: 0
 12905  002A72  0EFF               	movlw	255
 12906  002A74  1562               	andwf	___flmul@grs& (0+255),w,b
 12907  002A76  6E32               	movwf	??___flmul^0,c
 12908  002A78  0EFF               	movlw	255
 12909  002A7A  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12910  002A7C  6E33               	movwf	(??___flmul+1)^0,c
 12911  002A7E  0EFF               	movlw	255
 12912  002A80  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12913  002A82  6E34               	movwf	(??___flmul+2)^0,c
 12914  002A84  0E7F               	movlw	127
 12915  002A86  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12916  002A88  6E35               	movwf	(??___flmul+3)^0,c
 12917  002A8A  5032               	movf	??___flmul^0,w,c
 12918  002A8C  1033               	iorwf	(??___flmul+1)^0,w,c
 12919  002A8E  1034               	iorwf	(??___flmul+2)^0,w,c
 12920  002A90  1035               	iorwf	(??___flmul+3)^0,w,c
 12921  002A92  B4D8               	btfsc	status,2,c
 12922  002A94  EF4E  F015         	goto	u8211
 12923  002A98  EF50  F015         	goto	u8210
 12924  002A9C                     u8211:
 12925  002A9C  EF54  F015         	goto	l2029
 12926  002AA0                     u8210:
 12927  002AA0                     l8015:
 12928                           
 12929                           ; BSR set to: 0
 12930  002AA0  0E01               	movlw	1
 12931  002AA2  6F61               	movwf	___flmul@aexp& (0+255),b
 12932  002AA4  EF5D  F015         	goto	l2028
 12933  002AA8                     l2029:
 12934                           
 12935                           ; BSR set to: 0
 12936  002AA8  A167               	btfss	___flmul@prod& (0+255),0,b
 12937  002AAA  EF59  F015         	goto	u8221
 12938  002AAE  EF5B  F015         	goto	u8220
 12939  002AB2                     u8221:
 12940  002AB2  EF5D  F015         	goto	l2028
 12941  002AB6                     u8220:
 12942  002AB6  EF50  F015         	goto	l8015
 12943  002ABA                     l2028:
 12944                           
 12945                           ; BSR set to: 0
 12946  002ABA  5161               	movf	___flmul@aexp& (0+255),w,b
 12947  002ABC  B4D8               	btfsc	status,2,c
 12948  002ABE  EF63  F015         	goto	u8231
 12949  002AC2  EF65  F015         	goto	u8230
 12950  002AC6                     u8231:
 12951  002AC6  EF89  F015         	goto	l8027
 12952  002ACA                     u8230:
 12953  002ACA                     
 12954                           ; BSR set to: 0
 12955  002ACA  0E01               	movlw	1
 12956  002ACC  2767               	addwf	___flmul@prod& (0+255),f,b
 12957  002ACE  0E00               	movlw	0
 12958  002AD0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12959  002AD2  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12960  002AD4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12961  002AD6                     
 12962                           ; BSR set to: 0
 12963  002AD6  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12964  002AD8  EF70  F015         	goto	u8241
 12965  002ADC  EF72  F015         	goto	u8240
 12966  002AE0                     u8241:
 12967  002AE0  EF89  F015         	goto	l8027
 12968  002AE4                     u8240:
 12969  002AE4                     
 12970                           ; BSR set to: 0
 12971  002AE4  C067  F032         	movff	___flmul@prod,??___flmul
 12972  002AE8  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12973  002AEC  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12974  002AF0  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12975  002AF4  3435               	rlcf	(??___flmul+3)^0,w,c
 12976  002AF6  3235               	rrcf	(??___flmul+3)^0,f,c
 12977  002AF8  3234               	rrcf	(??___flmul+2)^0,f,c
 12978  002AFA  3233               	rrcf	(??___flmul+1)^0,f,c
 12979  002AFC  3232               	rrcf	??___flmul^0,f,c
 12980  002AFE  C032  F067         	movff	??___flmul,___flmul@prod
 12981  002B02  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12982  002B06  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12983  002B0A  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12984  002B0E                     
 12985                           ; BSR set to: 0
 12986  002B0E  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12987  002B10  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12988  002B12                     l8027:
 12989                           
 12990                           ; BSR set to: 0
 12991  002B12  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12992  002B14  EF94  F015         	goto	u8251
 12993  002B18  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12994  002B1A  E108               	bnz	u8250
 12995  002B1C  296B               	incf	___flmul@temp& (0+255),w,b
 12996  002B1E  A0D8               	btfss	status,0,c
 12997  002B20  EF94  F015         	goto	u8251
 12998  002B24  EF96  F015         	goto	u8250
 12999  002B28                     u8251:
 13000  002B28  EFA0  F015         	goto	l8031
 13001  002B2C                     u8250:
 13002  002B2C                     
 13003                           ; BSR set to: 0
 13004  002B2C  0E00               	movlw	0
 13005  002B2E  6F67               	movwf	___flmul@prod& (0+255),b
 13006  002B30  0E00               	movlw	0
 13007  002B32  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13008  002B34  0E80               	movlw	128
 13009  002B36  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13010  002B38  0E7F               	movlw	127
 13011  002B3A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13012  002B3C  EFCE  F015         	goto	l8043
 13013  002B40                     l8031:
 13014                           
 13015                           ; BSR set to: 0
 13016  002B40  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13017  002B42  EFAD  F015         	goto	u8260
 13018  002B46  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13019  002B48  E106               	bnz	u8261
 13020  002B4A  056B               	decf	___flmul@temp& (0+255),w,b
 13021  002B4C  B0D8               	btfsc	status,0,c
 13022  002B4E  EFAB  F015         	goto	u8261
 13023  002B52  EFAD  F015         	goto	u8260
 13024  002B56                     u8261:
 13025  002B56  EFB9  F015         	goto	l2036
 13026  002B5A                     u8260:
 13027  002B5A                     
 13028                           ; BSR set to: 0
 13029  002B5A  0E00               	movlw	0
 13030  002B5C  6F67               	movwf	___flmul@prod& (0+255),b
 13031  002B5E  0E00               	movlw	0
 13032  002B60  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13033  002B62  0E00               	movlw	0
 13034  002B64  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13035  002B66  0E00               	movlw	0
 13036  002B68  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13037  002B6A  0E00               	movlw	0
 13038  002B6C  6F60               	movwf	___flmul@sign& (0+255),b
 13039  002B6E  EFCE  F015         	goto	l8043
 13040  002B72                     l2036:
 13041                           
 13042                           ; BSR set to: 0
 13043  002B72  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 13044  002B76                     
 13045                           ; BSR set to: 0
 13046  002B76  0EFF               	movlw	255
 13047  002B78  1767               	andwf	___flmul@prod& (0+255),f,b
 13048  002B7A  0EFF               	movlw	255
 13049  002B7C  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 13050  002B7E  0E7F               	movlw	127
 13051  002B80  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 13052  002B82  0E00               	movlw	0
 13053  002B84  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 13054  002B86                     
 13055                           ; BSR set to: 0
 13056  002B86  A166               	btfss	___flmul@bexp& (0+255),0,b
 13057  002B88  EFC8  F015         	goto	u8271
 13058  002B8C  EFCA  F015         	goto	u8270
 13059  002B90                     u8271:
 13060  002B90  EFCB  F015         	goto	l8041
 13061  002B94                     u8270:
 13062  002B94                     
 13063                           ; BSR set to: 0
 13064  002B94  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 13065  002B96                     l8041:
 13066                           
 13067                           ; BSR set to: 0
 13068  002B96  90D8               	bcf	status,0,c
 13069  002B98  3166               	rrcf	___flmul@bexp& (0+255),w,b
 13070  002B9A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13071  002B9C                     l8043:
 13072                           
 13073                           ; BSR set to: 0
 13074  002B9C  5160               	movf	___flmul@sign& (0+255),w,b
 13075  002B9E  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13076  002BA0                     
 13077                           ; BSR set to: 0
 13078  002BA0  C067  F02A         	movff	___flmul@prod,?___flmul
 13079  002BA4  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 13080  002BA8  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 13081  002BAC  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 13082  002BB0                     l2023:
 13083                           
 13084                           ; BSR set to: 0
 13085  002BB0  0012               	return		;funcret
 13086  002BB2                     __end_of___flmul:
 13087                           	callstack 0
 13088                           
 13089 ;; *************** function ___awdiv *****************
 13090 ;; Defined at:
 13091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;  dividend        2   19[COMRAM] int 
 13094 ;;  divisor         2   21[COMRAM] int 
 13095 ;; Auto vars:     Size  Location     Type
 13096 ;;  quotient        2   25[COMRAM] int 
 13097 ;;  sign            1   24[COMRAM] unsigned char 
 13098 ;;  counter         1   23[COMRAM] unsigned char 
 13099 ;; Return value:  Size  Location     Type
 13100 ;;                  2   19[COMRAM] int 
 13101 ;; Registers used:
 13102 ;;		wreg, status,2, status,0
 13103 ;; Tracked objects:
 13104 ;;		On entry : 0/0
 13105 ;;		On exit  : 0/0
 13106 ;;		Unchanged: 0/0
 13107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13109 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13111 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;Total ram usage:        8 bytes
 13113 ;; Hardware stack levels used: 1
 13114 ;; Hardware stack levels required when called: 8
 13115 ;; This function calls:
 13116 ;;		Nothing
 13117 ;; This function is called by:
 13118 ;;		_calcMotorPow
 13119 ;;		_efgtoa
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           	psect	text49
 13124  004BD4                     __ptext49:
 13125                           	callstack 0
 13126  004BD4                     ___awdiv:
 13127                           	callstack 16
 13128  004BD4  0E00               	movlw	0
 13129  004BD6  6E19               	movwf	___awdiv@sign^0,c
 13130  004BD8  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 13131  004BDA  EFF3  F025         	goto	u8280
 13132  004BDE  EFF1  F025         	goto	u8281
 13133  004BE2                     u8281:
 13134  004BE2  EFF9  F025         	goto	l8063
 13135  004BE6                     u8280:
 13136  004BE6  6C16               	negf	___awdiv@divisor^0,c
 13137  004BE8  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 13138  004BEA  B0D8               	btfsc	status,0,c
 13139  004BEC  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 13140  004BEE  0E01               	movlw	1
 13141  004BF0  6E19               	movwf	___awdiv@sign^0,c
 13142  004BF2                     l8063:
 13143  004BF2  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 13144  004BF4  EF00  F026         	goto	u8290
 13145  004BF8  EFFE  F025         	goto	u8291
 13146  004BFC                     u8291:
 13147  004BFC  EF06  F026         	goto	l8069
 13148  004C00                     u8290:
 13149  004C00  6C14               	negf	___awdiv@dividend^0,c
 13150  004C02  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 13151  004C04  B0D8               	btfsc	status,0,c
 13152  004C06  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 13153  004C08  0E01               	movlw	1
 13154  004C0A  1A19               	xorwf	___awdiv@sign^0,f,c
 13155  004C0C                     l8069:
 13156  004C0C  0E00               	movlw	0
 13157  004C0E  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 13158  004C10  0E00               	movlw	0
 13159  004C12  6E1A               	movwf	___awdiv@quotient^0,c
 13160  004C14  5016               	movf	___awdiv@divisor^0,w,c
 13161  004C16  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 13162  004C18  B4D8               	btfsc	status,2,c
 13163  004C1A  EF11  F026         	goto	u8301
 13164  004C1E  EF13  F026         	goto	u8300
 13165  004C22                     u8301:
 13166  004C22  EF3B  F026         	goto	l8091
 13167  004C26                     u8300:
 13168  004C26  0E01               	movlw	1
 13169  004C28  6E18               	movwf	___awdiv@counter^0,c
 13170  004C2A  EF1B  F026         	goto	l8077
 13171  004C2E                     l8075:
 13172  004C2E  90D8               	bcf	status,0,c
 13173  004C30  3616               	rlcf	___awdiv@divisor^0,f,c
 13174  004C32  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 13175  004C34  2A18               	incf	___awdiv@counter^0,f,c
 13176  004C36                     l8077:
 13177  004C36  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 13178  004C38  EF20  F026         	goto	u8311
 13179  004C3C  EF22  F026         	goto	u8310
 13180  004C40                     u8311:
 13181  004C40  EF17  F026         	goto	l8075
 13182  004C44                     u8310:
 13183  004C44                     l8079:
 13184  004C44  90D8               	bcf	status,0,c
 13185  004C46  361A               	rlcf	___awdiv@quotient^0,f,c
 13186  004C48  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13187  004C4A  5016               	movf	___awdiv@divisor^0,w,c
 13188  004C4C  5C14               	subwf	___awdiv@dividend^0,w,c
 13189  004C4E  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13190  004C50  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 13191  004C52  A0D8               	btfss	status,0,c
 13192  004C54  EF2E  F026         	goto	u8321
 13193  004C58  EF30  F026         	goto	u8320
 13194  004C5C                     u8321:
 13195  004C5C  EF35  F026         	goto	l8087
 13196  004C60                     u8320:
 13197  004C60  5016               	movf	___awdiv@divisor^0,w,c
 13198  004C62  5E14               	subwf	___awdiv@dividend^0,f,c
 13199  004C64  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13200  004C66  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13201  004C68  801A               	bsf	___awdiv@quotient^0,0,c
 13202  004C6A                     l8087:
 13203  004C6A  90D8               	bcf	status,0,c
 13204  004C6C  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13205  004C6E  3216               	rrcf	___awdiv@divisor^0,f,c
 13206  004C70  2E18               	decfsz	___awdiv@counter^0,f,c
 13207  004C72  EF22  F026         	goto	l8079
 13208  004C76                     l8091:
 13209  004C76  5019               	movf	___awdiv@sign^0,w,c
 13210  004C78  B4D8               	btfsc	status,2,c
 13211  004C7A  EF41  F026         	goto	u8331
 13212  004C7E  EF43  F026         	goto	u8330
 13213  004C82                     u8331:
 13214  004C82  EF47  F026         	goto	l8095
 13215  004C86                     u8330:
 13216  004C86  6C1A               	negf	___awdiv@quotient^0,c
 13217  004C88  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13218  004C8A  B0D8               	btfsc	status,0,c
 13219  004C8C  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13220  004C8E                     l8095:
 13221  004C8E  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13222  004C92  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13223  004C96  0012               	return		;funcret
 13224  004C98                     __end_of___awdiv:
 13225                           	callstack 0
 13226                           
 13227 ;; *************** function _SYSTEM_Initialize *****************
 13228 ;; Defined at:
 13229 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13230 ;; Parameters:    Size  Location     Type
 13231 ;;		None
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;		None
 13234 ;; Return value:  Size  Location     Type
 13235 ;;                  1    wreg      void 
 13236 ;; Registers used:
 13237 ;;		wreg, status,2, status,0, cstack
 13238 ;; Tracked objects:
 13239 ;;		On entry : 0/0
 13240 ;;		On exit  : 0/0
 13241 ;;		Unchanged: 0/0
 13242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13247 ;;Total ram usage:        0 bytes
 13248 ;; Hardware stack levels used: 1
 13249 ;; Hardware stack levels required when called: 10
 13250 ;; This function calls:
 13251 ;;		_ADCC_Initialize
 13252 ;;		_CCP3_Initialize
 13253 ;;		_CCP4_Initialize
 13254 ;;		_CLC3_Initialize
 13255 ;;		_INTERRUPT_Initialize
 13256 ;;		_OSCILLATOR_Initialize
 13257 ;;		_PIN_MANAGER_Initialize
 13258 ;;		_PMD_Initialize
 13259 ;;		_PWM5_Initialize
 13260 ;;		_PWM6_Initialize
 13261 ;;		_PWM7_Initialize
 13262 ;;		_PWM8_Initialize
 13263 ;;		_SMT1_Initialize
 13264 ;;		_TMR2_Initialize
 13265 ;;		_TMR3_Initialize
 13266 ;;		_TMR4_Initialize
 13267 ;;		_TMR5_Initialize
 13268 ;;		_UART1_Initialize
 13269 ;; This function is called by:
 13270 ;;		_main
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           	psect	text50
 13275  005564                     __ptext50:
 13276                           	callstack 0
 13277  005564                     _SYSTEM_Initialize:
 13278                           	callstack 20
 13279  005564                     
 13280                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13281  005564  EC8C  F02A         	call	_INTERRUPT_Initialize	;wreg free
 13282                           
 13283                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13284  005568  EC70  F02E         	call	_PMD_Initialize	;wreg free
 13285                           
 13286                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13287  00556C  EC85  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 13288                           
 13289                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13290  005570  ECF1  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 13291  005574                     
 13292                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13293  005574  ECC2  F02D         	call	_CCP3_Initialize	;wreg free
 13294  005578                     
 13295                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13296  005578  EC33  F02A         	call	_ADCC_Initialize	;wreg free
 13297                           
 13298                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13299  00557C  ECF0  F02D         	call	_TMR4_Initialize	;wreg free
 13300  005580                     
 13301                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13302  005580  EC93  F02D         	call	_SMT1_Initialize	;wreg free
 13303  005584                     
 13304                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13305  005584  ECC1  F02E         	call	_PWM8_Initialize	;wreg free
 13306  005588                     
 13307                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13308  005588  ECB3  F02E         	call	_TMR2_Initialize	;wreg free
 13309  00558C                     
 13310                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13311  00558C  ECD9  F02E         	call	_PWM6_Initialize	;wreg free
 13312                           
 13313                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13314  005590  ECAB  F02D         	call	_CCP4_Initialize	;wreg free
 13315  005594                     
 13316                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13317  005594  EC06  F02E         	call	_CLC3_Initialize	;wreg free
 13318  005598                     
 13319                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13320  005598  EC39  F02C         	call	_TMR3_Initialize	;wreg free
 13321                           
 13322                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13323  00559C  ECE5  F02E         	call	_PWM5_Initialize	;wreg free
 13324  0055A0                     
 13325                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13326  0055A0  ECD7  F02A         	call	_TMR5_Initialize	;wreg free
 13327  0055A4                     
 13328                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13329  0055A4  ECCD  F02E         	call	_PWM7_Initialize	;wreg free
 13330                           
 13331                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13332  0055A8  ECBA  F027         	call	_UART1_Initialize	;wreg free
 13333  0055AC  0012               	return		;funcret
 13334  0055AE                     __end_of_SYSTEM_Initialize:
 13335                           	callstack 0
 13336                           
 13337 ;; *************** function _UART1_Initialize *****************
 13338 ;; Defined at:
 13339 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;		None
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;		None
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		wreg, status,2, status,0, cstack
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;Total ram usage:        0 bytes
 13358 ;; Hardware stack levels used: 1
 13359 ;; Hardware stack levels required when called: 9
 13360 ;; This function calls:
 13361 ;;		_UART1_SetErrorHandler
 13362 ;;		_UART1_SetFramingErrorHandler
 13363 ;;		_UART1_SetOverrunErrorHandler
 13364 ;;		_UART1_SetRxInterruptHandler
 13365 ;;		_UART1_SetTxInterruptHandler
 13366 ;; This function is called by:
 13367 ;;		_SYSTEM_Initialize
 13368 ;; This function uses a non-reentrant model
 13369 ;;
 13370                           
 13371                           	psect	text51
 13372  004F74                     __ptext51:
 13373                           	callstack 0
 13374  004F74                     _UART1_Initialize:
 13375                           	callstack 20
 13376  004F74                     
 13377                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13378  004F74  0139               	movlb	57	; () banked
 13379  004F76  9793               	bcf	147,3,b	;volatile
 13380  004F78                     
 13381                           ; BSR set to: 57
 13382                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13383  004F78  0E5A               	movlw	low _UART1_Receive_ISR
 13384  004F7A  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13385  004F7C  0E4D               	movlw	high _UART1_Receive_ISR
 13386  004F7E  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13387  004F80  EC0E  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13388  004F84                     
 13389                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13390  004F84  0139               	movlb	57	; () banked
 13391  004F86  9993               	bcf	147,4,b	;volatile
 13392                           
 13393                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13394  004F88  0ECE               	movlw	low _UART1_Transmit_ISR
 13395  004F8A  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13396  004F8C  0E56               	movlw	high _UART1_Transmit_ISR
 13397  004F8E  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13398  004F90  EC09  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13399  004F94                     
 13400                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13401  004F94  0E00               	movlw	0
 13402  004F96  013D               	movlb	61	; () banked
 13403  004F98  6FEC               	movwf	236,b	;volatile
 13404  004F9A                     
 13405                           ; BSR set to: 61
 13406                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13407  004F9A  0E00               	movlw	0
 13408  004F9C  6FED               	movwf	237,b	;volatile
 13409  004F9E                     
 13410                           ; BSR set to: 61
 13411                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13412  004F9E  0E00               	movlw	0
 13413  004FA0  6FEE               	movwf	238,b	;volatile
 13414  004FA2                     
 13415                           ; BSR set to: 61
 13416                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13417  004FA2  0E00               	movlw	0
 13418  004FA4  6FEF               	movwf	239,b	;volatile
 13419  004FA6                     
 13420                           ; BSR set to: 61
 13421                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13422  004FA6  0E00               	movlw	0
 13423  004FA8  6FF0               	movwf	240,b	;volatile
 13424  004FAA                     
 13425                           ; BSR set to: 61
 13426                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13427  004FAA  0E00               	movlw	0
 13428  004FAC  6FF1               	movwf	241,b	;volatile
 13429  004FAE                     
 13430                           ; BSR set to: 61
 13431                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13432  004FAE  0EB0               	movlw	176
 13433  004FB0  6FF2               	movwf	242,b	;volatile
 13434  004FB2                     
 13435                           ; BSR set to: 61
 13436                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13437  004FB2  0E80               	movlw	128
 13438  004FB4  6FF3               	movwf	243,b	;volatile
 13439  004FB6                     
 13440                           ; BSR set to: 61
 13441                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13442  004FB6  0E00               	movlw	0
 13443  004FB8  6FF4               	movwf	244,b	;volatile
 13444  004FBA                     
 13445                           ; BSR set to: 61
 13446                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13447  004FBA  0E8A               	movlw	138
 13448  004FBC  6FF5               	movwf	245,b	;volatile
 13449  004FBE                     
 13450                           ; BSR set to: 61
 13451                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13452  004FBE  0E00               	movlw	0
 13453  004FC0  6FF6               	movwf	246,b	;volatile
 13454  004FC2                     
 13455                           ; BSR set to: 61
 13456                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13457  004FC2  0E00               	movlw	0
 13458  004FC4  6FF7               	movwf	247,b	;volatile
 13459  004FC6                     
 13460                           ; BSR set to: 61
 13461                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13462  004FC6  0E00               	movlw	0
 13463  004FC8  6FF8               	movwf	248,b	;volatile
 13464  004FCA                     
 13465                           ; BSR set to: 61
 13466                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13467  004FCA  0E00               	movlw	0
 13468  004FCC  6FF9               	movwf	249,b	;volatile
 13469  004FCE                     
 13470                           ; BSR set to: 61
 13471                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13472  004FCE  0E00               	movlw	0
 13473  004FD0  6FFA               	movwf	250,b	;volatile
 13474  004FD2                     
 13475                           ; BSR set to: 61
 13476                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13477  004FD2  0E7E               	movlw	low _UART1_DefaultFramingErrorHandler
 13478  004FD4  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13479  004FD6  0E5E               	movlw	high _UART1_DefaultFramingErrorHandler
 13480  004FD8  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13481  004FDA  EC18  F02F         	call	_UART1_SetFramingErrorHandler	;wreg free
 13482  004FDE                     
 13483                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13484  004FDE  0E7C               	movlw	low _UART1_DefaultOverrunErrorHandler
 13485  004FE0  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13486  004FE2  0E5E               	movlw	high _UART1_DefaultOverrunErrorHandler
 13487  004FE4  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13488  004FE6  EC13  F02F         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13489  004FEA                     
 13490                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13491  004FEA  0E76               	movlw	low _UART1_DefaultErrorHandler
 13492  004FEC  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13493  004FEE  0E5E               	movlw	high _UART1_DefaultErrorHandler
 13494  004FF0  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13495  004FF2  EC1D  F02F         	call	_UART1_SetErrorHandler	;wreg free
 13496                           
 13497                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13498  004FF6  0E00               	movlw	0
 13499  004FF8  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13500                           
 13501                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13502  004FFA  0E00               	movlw	0
 13503  004FFC  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13504                           
 13505                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13506  004FFE  0E00               	movlw	0
 13507  005000  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13508                           
 13509                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13510  005002  0E08               	movlw	8
 13511  005004  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13512                           
 13513                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13514  005006  0E00               	movlw	0
 13515  005008  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13516                           
 13517                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13518  00500A  0E00               	movlw	0
 13519  00500C  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13520                           
 13521                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13522  00500E  0E00               	movlw	0
 13523  005010  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13524  005012                     
 13525                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13526  005012  0139               	movlb	57	; () banked
 13527  005014  8793               	bsf	147,3,b	;volatile
 13528  005016                     
 13529                           ; BSR set to: 57
 13530  005016  0012               	return		;funcret
 13531  005018                     __end_of_UART1_Initialize:
 13532                           	callstack 0
 13533                           
 13534 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13535 ;; Defined at:
 13536 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13539 ;;		 -> UART1_Transmit_ISR(1), 
 13540 ;; Auto vars:     Size  Location     Type
 13541 ;;		None
 13542 ;; Return value:  Size  Location     Type
 13543 ;;                  1    wreg      void 
 13544 ;; Registers used:
 13545 ;;		wreg, status,2, status,0
 13546 ;; Tracked objects:
 13547 ;;		On entry : 0/0
 13548 ;;		On exit  : 0/0
 13549 ;;		Unchanged: 0/0
 13550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13555 ;;Total ram usage:        2 bytes
 13556 ;; Hardware stack levels used: 1
 13557 ;; Hardware stack levels required when called: 8
 13558 ;; This function calls:
 13559 ;;		Nothing
 13560 ;; This function is called by:
 13561 ;;		_UART1_Initialize
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text52
 13566  005E12                     __ptext52:
 13567                           	callstack 0
 13568  005E12                     _UART1_SetTxInterruptHandler:
 13569                           	callstack 20
 13570  005E12                     
 13571                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13572  005E12  C014  F19C         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13573  005E16  C015  F19D         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13574  005E1A  0012               	return		;funcret
 13575  005E1C                     __end_of_UART1_SetTxInterruptHandler:
 13576                           	callstack 0
 13577                           
 13578 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13579 ;; Defined at:
 13580 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13581 ;; Parameters:    Size  Location     Type
 13582 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13583 ;;		 -> UART1_Receive_ISR(1), 
 13584 ;; Auto vars:     Size  Location     Type
 13585 ;;		None
 13586 ;; Return value:  Size  Location     Type
 13587 ;;                  1    wreg      void 
 13588 ;; Registers used:
 13589 ;;		wreg, status,2, status,0
 13590 ;; Tracked objects:
 13591 ;;		On entry : 0/0
 13592 ;;		On exit  : 0/0
 13593 ;;		Unchanged: 0/0
 13594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13599 ;;Total ram usage:        2 bytes
 13600 ;; Hardware stack levels used: 1
 13601 ;; Hardware stack levels required when called: 8
 13602 ;; This function calls:
 13603 ;;		Nothing
 13604 ;; This function is called by:
 13605 ;;		_UART1_Initialize
 13606 ;; This function uses a non-reentrant model
 13607 ;;
 13608                           
 13609                           	psect	text53
 13610  005E1C                     __ptext53:
 13611                           	callstack 0
 13612  005E1C                     _UART1_SetRxInterruptHandler:
 13613                           	callstack 20
 13614  005E1C                     
 13615                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13616  005E1C  C014  F19E         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13617  005E20  C015  F19F         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13618  005E24  0012               	return		;funcret
 13619  005E26                     __end_of_UART1_SetRxInterruptHandler:
 13620                           	callstack 0
 13621                           
 13622 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13623 ;; Defined at:
 13624 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13625 ;; Parameters:    Size  Location     Type
 13626 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13627 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13628 ;; Auto vars:     Size  Location     Type
 13629 ;;		None
 13630 ;; Return value:  Size  Location     Type
 13631 ;;                  1    wreg      void 
 13632 ;; Registers used:
 13633 ;;		wreg, status,2, status,0
 13634 ;; Tracked objects:
 13635 ;;		On entry : 0/0
 13636 ;;		On exit  : 0/0
 13637 ;;		Unchanged: 0/0
 13638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13643 ;;Total ram usage:        2 bytes
 13644 ;; Hardware stack levels used: 1
 13645 ;; Hardware stack levels required when called: 8
 13646 ;; This function calls:
 13647 ;;		Nothing
 13648 ;; This function is called by:
 13649 ;;		_UART1_Initialize
 13650 ;; This function uses a non-reentrant model
 13651 ;;
 13652                           
 13653                           	psect	text54
 13654  005E26                     __ptext54:
 13655                           	callstack 0
 13656  005E26                     _UART1_SetOverrunErrorHandler:
 13657                           	callstack 20
 13658  005E26                     
 13659                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13660  005E26  C014  F198         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13661  005E2A  C015  F199         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13662  005E2E  0012               	return		;funcret
 13663  005E30                     __end_of_UART1_SetOverrunErrorHandler:
 13664                           	callstack 0
 13665                           
 13666 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13667 ;; Defined at:
 13668 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13671 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;		None
 13674 ;; Return value:  Size  Location     Type
 13675 ;;                  1    wreg      void 
 13676 ;; Registers used:
 13677 ;;		wreg, status,2, status,0
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 0/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13687 ;;Total ram usage:        2 bytes
 13688 ;; Hardware stack levels used: 1
 13689 ;; Hardware stack levels required when called: 8
 13690 ;; This function calls:
 13691 ;;		Nothing
 13692 ;; This function is called by:
 13693 ;;		_UART1_Initialize
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text55
 13698  005E30                     __ptext55:
 13699                           	callstack 0
 13700  005E30                     _UART1_SetFramingErrorHandler:
 13701                           	callstack 20
 13702  005E30                     
 13703                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13704  005E30  C014  F19A         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13705  005E34  C015  F19B         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13706  005E38  0012               	return		;funcret
 13707  005E3A                     __end_of_UART1_SetFramingErrorHandler:
 13708                           	callstack 0
 13709                           
 13710 ;; *************** function _UART1_SetErrorHandler *****************
 13711 ;; Defined at:
 13712 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13715 ;;		 -> UART1_DefaultErrorHandler(1), 
 13716 ;; Auto vars:     Size  Location     Type
 13717 ;;		None
 13718 ;; Return value:  Size  Location     Type
 13719 ;;                  1    wreg      void 
 13720 ;; Registers used:
 13721 ;;		wreg, status,2, status,0
 13722 ;; Tracked objects:
 13723 ;;		On entry : 0/0
 13724 ;;		On exit  : 0/0
 13725 ;;		Unchanged: 0/0
 13726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13731 ;;Total ram usage:        2 bytes
 13732 ;; Hardware stack levels used: 1
 13733 ;; Hardware stack levels required when called: 8
 13734 ;; This function calls:
 13735 ;;		Nothing
 13736 ;; This function is called by:
 13737 ;;		_UART1_Initialize
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741                           	psect	text56
 13742  005E3A                     __ptext56:
 13743                           	callstack 0
 13744  005E3A                     _UART1_SetErrorHandler:
 13745                           	callstack 20
 13746  005E3A                     
 13747                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13748  005E3A  C014  F196         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13749  005E3E  C015  F197         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13750  005E42  0012               	return		;funcret
 13751  005E44                     __end_of_UART1_SetErrorHandler:
 13752                           	callstack 0
 13753                           
 13754 ;; *************** function _TMR5_Initialize *****************
 13755 ;; Defined at:
 13756 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13757 ;; Parameters:    Size  Location     Type
 13758 ;;		None
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;		None
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  1    wreg      void 
 13763 ;; Registers used:
 13764 ;;		wreg, status,2, status,0, cstack
 13765 ;; Tracked objects:
 13766 ;;		On entry : 0/0
 13767 ;;		On exit  : 0/0
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;Total ram usage:        2 bytes
 13775 ;; Hardware stack levels used: 1
 13776 ;; Hardware stack levels required when called: 9
 13777 ;; This function calls:
 13778 ;;		_TMR5_SetGateInterruptHandler
 13779 ;; This function is called by:
 13780 ;;		_SYSTEM_Initialize
 13781 ;; This function uses a non-reentrant model
 13782 ;;
 13783                           
 13784                           	psect	text57
 13785  0055AE                     __ptext57:
 13786                           	callstack 0
 13787  0055AE                     _TMR5_Initialize:
 13788                           	callstack 20
 13789  0055AE                     
 13790                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13791  0055AE  0EC0               	movlw	192
 13792  0055B0  6E9B               	movwf	155,c	;volatile
 13793                           
 13794                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13795  0055B2  0E00               	movlw	0
 13796  0055B4  6E9C               	movwf	156,c	;volatile
 13797                           
 13798                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13799  0055B6  0E05               	movlw	5
 13800  0055B8  6E9D               	movwf	157,c	;volatile
 13801                           
 13802                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13803  0055BA  0E00               	movlw	0
 13804  0055BC  6E99               	movwf	153,c	;volatile
 13805                           
 13806                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13807  0055BE  0E00               	movlw	0
 13808  0055C0  6E98               	movwf	152,c	;volatile
 13809  0055C2                     
 13810                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13811  0055C2  0139               	movlb	57	; () banked
 13812  0055C4  9DA8               	bcf	168,6,b	;volatile
 13813  0055C6                     
 13814                           ; BSR set to: 57
 13815                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13816  0055C6  5098               	movf	152,w,c	;volatile
 13817  0055C8  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13818  0055CE  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13819  0055D0  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13820  0055D4  6A16               	clrf	??_TMR5_Initialize^0,c
 13821  0055D6  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13822  0055D8  0101               	movlb	1	; () banked
 13823  0055DA  6F90               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13824  0055DC  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13825  0055DE  6F91               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13826  0055E0                     
 13827                           ; BSR set to: 1
 13828                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13829  0055E0  0139               	movlb	57	; () banked
 13830  0055E2  9FA8               	bcf	168,7,b	;volatile
 13831  0055E4                     
 13832                           ; BSR set to: 57
 13833                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13834  0055E4  8F98               	bsf	152,7,b	;volatile
 13835  0055E6                     
 13836                           ; BSR set to: 57
 13837                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13838  0055E6  0E48               	movlw	low _TMR5_DefaultGateInterruptHandler
 13839  0055E8  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13840  0055EA  0E5D               	movlw	high _TMR5_DefaultGateInterruptHandler
 13841  0055EC  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13842  0055EE  EC22  F02F         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13843  0055F2                     
 13844                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13845  0055F2  0E03               	movlw	3
 13846  0055F4  6E9A               	movwf	154,c	;volatile
 13847  0055F6  0012               	return		;funcret
 13848  0055F8                     __end_of_TMR5_Initialize:
 13849                           	callstack 0
 13850                           
 13851 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13852 ;; Defined at:
 13853 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13856 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13857 ;; Auto vars:     Size  Location     Type
 13858 ;;		None
 13859 ;; Return value:  Size  Location     Type
 13860 ;;                  1    wreg      void 
 13861 ;; Registers used:
 13862 ;;		wreg, status,2, status,0
 13863 ;; Tracked objects:
 13864 ;;		On entry : 0/0
 13865 ;;		On exit  : 0/0
 13866 ;;		Unchanged: 0/0
 13867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13872 ;;Total ram usage:        2 bytes
 13873 ;; Hardware stack levels used: 1
 13874 ;; Hardware stack levels required when called: 8
 13875 ;; This function calls:
 13876 ;;		Nothing
 13877 ;; This function is called by:
 13878 ;;		_TMR5_Initialize
 13879 ;; This function uses a non-reentrant model
 13880 ;;
 13881                           
 13882                           	psect	text58
 13883  005E44                     __ptext58:
 13884                           	callstack 0
 13885  005E44                     _TMR5_SetGateInterruptHandler:
 13886                           	callstack 20
 13887  005E44                     
 13888                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13889  005E44  C014  F18E         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13890  005E48  C015  F18F         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13891  005E4C  0012               	return		;funcret
 13892  005E4E                     __end_of_TMR5_SetGateInterruptHandler:
 13893                           	callstack 0
 13894                           
 13895 ;; *************** function _TMR4_Initialize *****************
 13896 ;; Defined at:
 13897 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;		None
 13900 ;; Auto vars:     Size  Location     Type
 13901 ;;		None
 13902 ;; Return value:  Size  Location     Type
 13903 ;;                  1    wreg      void 
 13904 ;; Registers used:
 13905 ;;		wreg, status,2, status,0, cstack
 13906 ;; Tracked objects:
 13907 ;;		On entry : 0/0
 13908 ;;		On exit  : 0/0
 13909 ;;		Unchanged: 0/0
 13910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13915 ;;Total ram usage:        0 bytes
 13916 ;; Hardware stack levels used: 1
 13917 ;; Hardware stack levels required when called: 9
 13918 ;; This function calls:
 13919 ;;		_TMR4_SetInterruptHandler
 13920 ;; This function is called by:
 13921 ;;		_SYSTEM_Initialize
 13922 ;; This function uses a non-reentrant model
 13923 ;;
 13924                           
 13925                           	psect	text59
 13926  005BE0                     __ptext59:
 13927                           	callstack 0
 13928  005BE0                     _TMR4_Initialize:
 13929                           	callstack 20
 13930  005BE0                     
 13931                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13932  005BE0  0E01               	movlw	1
 13933  005BE2  6EA2               	movwf	162,c	;volatile
 13934                           
 13935                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13936  005BE4  0E00               	movlw	0
 13937  005BE6  6EA1               	movwf	161,c	;volatile
 13938                           
 13939                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13940  005BE8  0E00               	movlw	0
 13941  005BEA  6EA3               	movwf	163,c	;volatile
 13942                           
 13943                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13944  005BEC  0EF9               	movlw	249
 13945  005BEE  6E9F               	movwf	159,c	;volatile
 13946                           
 13947                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13948  005BF0  0E00               	movlw	0
 13949  005BF2  6E9E               	movwf	158,c	;volatile
 13950  005BF4                     
 13951                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13952  005BF4  0139               	movlb	57	; () banked
 13953  005BF6  91A7               	bcf	167,0,b	;volatile
 13954  005BF8                     
 13955                           ; BSR set to: 57
 13956                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13957  005BF8  8197               	bsf	151,0,b	;volatile
 13958  005BFA                     
 13959                           ; BSR set to: 57
 13960                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13961  005BFA  0E80               	movlw	low _TMR4_DefaultInterruptHandler
 13962  005BFC  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13963  005BFE  0E5E               	movlw	high _TMR4_DefaultInterruptHandler
 13964  005C00  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13965  005C02  EC27  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
 13966  005C06                     
 13967                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13968  005C06  0EE0               	movlw	224
 13969  005C08  6EA0               	movwf	160,c	;volatile
 13970  005C0A  0012               	return		;funcret
 13971  005C0C                     __end_of_TMR4_Initialize:
 13972                           	callstack 0
 13973                           
 13974 ;; *************** function _TMR4_SetInterruptHandler *****************
 13975 ;; Defined at:
 13976 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13979 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13980 ;; Auto vars:     Size  Location     Type
 13981 ;;		None
 13982 ;; Return value:  Size  Location     Type
 13983 ;;                  1    wreg      void 
 13984 ;; Registers used:
 13985 ;;		wreg, status,2, status,0
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;Total ram usage:        2 bytes
 13996 ;; Hardware stack levels used: 1
 13997 ;; Hardware stack levels required when called: 8
 13998 ;; This function calls:
 13999 ;;		Nothing
 14000 ;; This function is called by:
 14001 ;;		_TMR4_Initialize
 14002 ;;		_main
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text60
 14007  005E4E                     __ptext60:
 14008                           	callstack 0
 14009  005E4E                     _TMR4_SetInterruptHandler:
 14010                           	callstack 22
 14011  005E4E                     
 14012                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 14013  005E4E  C014  F18A         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 14014  005E52  C015  F18B         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 14015  005E56  0012               	return		;funcret
 14016  005E58                     __end_of_TMR4_SetInterruptHandler:
 14017                           	callstack 0
 14018                           
 14019 ;; *************** function _TMR3_Initialize *****************
 14020 ;; Defined at:
 14021 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;		None
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;		None
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  1    wreg      void 
 14028 ;; Registers used:
 14029 ;;		wreg, status,2, status,0
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14039 ;;Total ram usage:        2 bytes
 14040 ;; Hardware stack levels used: 1
 14041 ;; Hardware stack levels required when called: 8
 14042 ;; This function calls:
 14043 ;;		Nothing
 14044 ;; This function is called by:
 14045 ;;		_SYSTEM_Initialize
 14046 ;; This function uses a non-reentrant model
 14047 ;;
 14048                           
 14049                           	psect	text61
 14050  005872                     __ptext61:
 14051                           	callstack 0
 14052  005872                     _TMR3_Initialize:
 14053                           	callstack 21
 14054  005872                     
 14055                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 14056  005872  0E00               	movlw	0
 14057  005874  6EA7               	movwf	167,c	;volatile
 14058                           
 14059                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 14060  005876  0E00               	movlw	0
 14061  005878  6EA8               	movwf	168,c	;volatile
 14062                           
 14063                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 14064  00587A  0E05               	movlw	5
 14065  00587C  6EA9               	movwf	169,c	;volatile
 14066                           
 14067                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 14068  00587E  0E00               	movlw	0
 14069  005880  6EA5               	movwf	165,c	;volatile
 14070                           
 14071                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 14072  005882  0E00               	movlw	0
 14073  005884  6EA4               	movwf	164,c	;volatile
 14074  005886                     
 14075                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 14076  005886  0139               	movlb	57	; () banked
 14077  005888  9DA6               	bcf	166,6,b	;volatile
 14078  00588A                     
 14079                           ; BSR set to: 57
 14080                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14081  00588A  50A4               	movf	164,w,c	;volatile
 14082  00588C  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 14083  005892  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 14084  005894  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 14085  005898  6A14               	clrf	??_TMR3_Initialize^0,c
 14086  00589A  1014               	iorwf	??_TMR3_Initialize^0,w,c
 14087  00589C  0101               	movlb	1	; () banked
 14088  00589E  6F8C               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 14089  0058A0  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 14090  0058A2  6F8D               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 14091  0058A4                     
 14092                           ; BSR set to: 1
 14093                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 14094  0058A4  0E01               	movlw	1
 14095  0058A6  6EA6               	movwf	166,c	;volatile
 14096  0058A8                     
 14097                           ; BSR set to: 1
 14098  0058A8  0012               	return		;funcret
 14099  0058AA                     __end_of_TMR3_Initialize:
 14100                           	callstack 0
 14101                           
 14102 ;; *************** function _TMR2_Initialize *****************
 14103 ;; Defined at:
 14104 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;		None
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;		None
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  1    wreg      void 
 14111 ;; Registers used:
 14112 ;;		wreg, status,2
 14113 ;; Tracked objects:
 14114 ;;		On entry : 0/0
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;Total ram usage:        0 bytes
 14123 ;; Hardware stack levels used: 1
 14124 ;; Hardware stack levels required when called: 8
 14125 ;; This function calls:
 14126 ;;		Nothing
 14127 ;; This function is called by:
 14128 ;;		_SYSTEM_Initialize
 14129 ;; This function uses a non-reentrant model
 14130 ;;
 14131                           
 14132                           	psect	text62
 14133  005D66                     __ptext62:
 14134                           	callstack 0
 14135  005D66                     _TMR2_Initialize:
 14136                           	callstack 21
 14137  005D66                     
 14138                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 14139  005D66  0E05               	movlw	5
 14140  005D68  6EAE               	movwf	174,c	;volatile
 14141                           
 14142                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14143  005D6A  0E00               	movlw	0
 14144  005D6C  6EAD               	movwf	173,c	;volatile
 14145                           
 14146                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14147  005D6E  0E00               	movlw	0
 14148  005D70  6EAF               	movwf	175,c	;volatile
 14149  005D72                     
 14150                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 14151  005D72  68AB               	setf	171,c	;volatile
 14152                           
 14153                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14154  005D74  0E00               	movlw	0
 14155  005D76  6EAA               	movwf	170,c	;volatile
 14156  005D78                     
 14157                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14158  005D78  0139               	movlb	57	; () banked
 14159  005D7A  95A4               	bcf	164,2,b	;volatile
 14160                           
 14161                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14162  005D7C  0EB0               	movlw	176
 14163  005D7E  6EAC               	movwf	172,c	;volatile
 14164  005D80                     
 14165                           ; BSR set to: 57
 14166  005D80  0012               	return		;funcret
 14167  005D82                     __end_of_TMR2_Initialize:
 14168                           	callstack 0
 14169                           
 14170 ;; *************** function _SMT1_Initialize *****************
 14171 ;; Defined at:
 14172 ;;		line 60 in file "mcc_generated_files/smt1.c"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;		None
 14175 ;; Auto vars:     Size  Location     Type
 14176 ;;		None
 14177 ;; Return value:  Size  Location     Type
 14178 ;;                  1    wreg      void 
 14179 ;; Registers used:
 14180 ;;		wreg, status,2
 14181 ;; Tracked objects:
 14182 ;;		On entry : 0/0
 14183 ;;		On exit  : 0/0
 14184 ;;		Unchanged: 0/0
 14185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14190 ;;Total ram usage:        0 bytes
 14191 ;; Hardware stack levels used: 1
 14192 ;; Hardware stack levels required when called: 8
 14193 ;; This function calls:
 14194 ;;		Nothing
 14195 ;; This function is called by:
 14196 ;;		_SYSTEM_Initialize
 14197 ;; This function uses a non-reentrant model
 14198 ;;
 14199                           
 14200                           	psect	text63
 14201  005B26                     __ptext63:
 14202                           	callstack 0
 14203  005B26                     _SMT1_Initialize:
 14204                           	callstack 21
 14205  005B26                     
 14206                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14207  005B26  0E80               	movlw	128
 14208  005B28  013F               	movlb	63	; () banked
 14209  005B2A  6F1E               	movwf	30,b	;volatile
 14210                           
 14211                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14212  005B2C  0E42               	movlw	66
 14213  005B2E  6F1F               	movwf	31,b	;volatile
 14214                           
 14215                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14216  005B30  0E00               	movlw	0
 14217  005B32  6F20               	movwf	32,b	;volatile
 14218                           
 14219                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14220  005B34  0E04               	movlw	4
 14221  005B36  6F21               	movwf	33,b	;volatile
 14222                           
 14223                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14224  005B38  0E00               	movlw	0
 14225  005B3A  6F23               	movwf	35,b	;volatile
 14226                           
 14227                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14228  005B3C  0E00               	movlw	0
 14229  005B3E  6F22               	movwf	34,b	;volatile
 14230                           
 14231                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14232  005B40  0E01               	movlw	1
 14233  005B42  6F1D               	movwf	29,b	;volatile
 14234  005B44                     
 14235                           ; BSR set to: 63
 14236                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14237  005B44  691C               	setf	28,b	;volatile
 14238  005B46                     
 14239                           ; BSR set to: 63
 14240                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14241  005B46  691B               	setf	27,b	;volatile
 14242  005B48                     
 14243                           ; BSR set to: 63
 14244                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14245  005B48  0139               	movlb	57	; () banked
 14246  005B4A  8B91               	bsf	145,5,b	;volatile
 14247  005B4C                     
 14248                           ; BSR set to: 57
 14249                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14250  005B4C  8F91               	bsf	145,7,b	;volatile
 14251  005B4E                     
 14252                           ; BSR set to: 57
 14253                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14254  005B4E  8D91               	bsf	145,6,b	;volatile
 14255  005B50                     
 14256                           ; BSR set to: 57
 14257                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14258  005B50  013F               	movlb	63	; () banked
 14259  005B52  8F1F               	bsf	31,7,b	;volatile
 14260  005B54                     
 14261                           ; BSR set to: 63
 14262  005B54  0012               	return		;funcret
 14263  005B56                     __end_of_SMT1_Initialize:
 14264                           	callstack 0
 14265                           
 14266 ;; *************** function _PWM8_Initialize *****************
 14267 ;; Defined at:
 14268 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;		None
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;		None
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  1    wreg      void 
 14275 ;; Registers used:
 14276 ;;		wreg, status,2
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14286 ;;Total ram usage:        0 bytes
 14287 ;; Hardware stack levels used: 1
 14288 ;; Hardware stack levels required when called: 8
 14289 ;; This function calls:
 14290 ;;		Nothing
 14291 ;; This function is called by:
 14292 ;;		_SYSTEM_Initialize
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           	psect	text64
 14297  005D82                     __ptext64:
 14298                           	callstack 0
 14299  005D82                     _PWM8_Initialize:
 14300                           	callstack 21
 14301  005D82                     
 14302                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14303  005D82  0E80               	movlw	128
 14304  005D84  6E62               	movwf	98,c	;volatile
 14305                           
 14306                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14307  005D86  0E00               	movlw	0
 14308  005D88  6E61               	movwf	97,c	;volatile
 14309                           
 14310                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14311  005D8A  0E00               	movlw	0
 14312  005D8C  6E60               	movwf	96,c	;volatile
 14313                           
 14314                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14315  005D8E  013F               	movlb	63	; () banked
 14316  005D90  515F               	movf	95,w,b	;volatile
 14317  005D92  0B3F               	andlw	-193
 14318  005D94  0980               	iorlw	128
 14319  005D96  6F5F               	movwf	95,b	;volatile
 14320  005D98                     
 14321                           ; BSR set to: 63
 14322  005D98  0012               	return		;funcret
 14323  005D9A                     __end_of_PWM8_Initialize:
 14324                           	callstack 0
 14325                           
 14326 ;; *************** function _PWM7_Initialize *****************
 14327 ;; Defined at:
 14328 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14329 ;; Parameters:    Size  Location     Type
 14330 ;;		None
 14331 ;; Auto vars:     Size  Location     Type
 14332 ;;		None
 14333 ;; Return value:  Size  Location     Type
 14334 ;;                  1    wreg      void 
 14335 ;; Registers used:
 14336 ;;		wreg, status,2
 14337 ;; Tracked objects:
 14338 ;;		On entry : 0/0
 14339 ;;		On exit  : 0/0
 14340 ;;		Unchanged: 0/0
 14341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14346 ;;Total ram usage:        0 bytes
 14347 ;; Hardware stack levels used: 1
 14348 ;; Hardware stack levels required when called: 8
 14349 ;; This function calls:
 14350 ;;		Nothing
 14351 ;; This function is called by:
 14352 ;;		_SYSTEM_Initialize
 14353 ;; This function uses a non-reentrant model
 14354 ;;
 14355                           
 14356                           	psect	text65
 14357  005D9A                     __ptext65:
 14358                           	callstack 0
 14359  005D9A                     _PWM7_Initialize:
 14360                           	callstack 21
 14361  005D9A                     
 14362                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14363  005D9A  0E80               	movlw	128
 14364  005D9C  6E66               	movwf	102,c	;volatile
 14365                           
 14366                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14367  005D9E  0E00               	movlw	0
 14368  005DA0  6E65               	movwf	101,c	;volatile
 14369                           
 14370                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14371  005DA2  0E00               	movlw	0
 14372  005DA4  6E64               	movwf	100,c	;volatile
 14373                           
 14374                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14375  005DA6  013F               	movlb	63	; () banked
 14376  005DA8  515F               	movf	95,w,b	;volatile
 14377  005DAA  0BCF               	andlw	-49
 14378  005DAC  0920               	iorlw	32
 14379  005DAE  6F5F               	movwf	95,b	;volatile
 14380  005DB0                     
 14381                           ; BSR set to: 63
 14382  005DB0  0012               	return		;funcret
 14383  005DB2                     __end_of_PWM7_Initialize:
 14384                           	callstack 0
 14385                           
 14386 ;; *************** function _PWM6_Initialize *****************
 14387 ;; Defined at:
 14388 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14389 ;; Parameters:    Size  Location     Type
 14390 ;;		None
 14391 ;; Auto vars:     Size  Location     Type
 14392 ;;		None
 14393 ;; Return value:  Size  Location     Type
 14394 ;;                  1    wreg      void 
 14395 ;; Registers used:
 14396 ;;		wreg, status,2
 14397 ;; Tracked objects:
 14398 ;;		On entry : 0/0
 14399 ;;		On exit  : 0/0
 14400 ;;		Unchanged: 0/0
 14401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14406 ;;Total ram usage:        0 bytes
 14407 ;; Hardware stack levels used: 1
 14408 ;; Hardware stack levels required when called: 8
 14409 ;; This function calls:
 14410 ;;		Nothing
 14411 ;; This function is called by:
 14412 ;;		_SYSTEM_Initialize
 14413 ;; This function uses a non-reentrant model
 14414 ;;
 14415                           
 14416                           	psect	text66
 14417  005DB2                     __ptext66:
 14418                           	callstack 0
 14419  005DB2                     _PWM6_Initialize:
 14420                           	callstack 21
 14421  005DB2                     
 14422                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14423  005DB2  0E80               	movlw	128
 14424  005DB4  6E6A               	movwf	106,c	;volatile
 14425                           
 14426                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14427  005DB6  0E59               	movlw	89
 14428  005DB8  6E69               	movwf	105,c	;volatile
 14429                           
 14430                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14431  005DBA  0E40               	movlw	64
 14432  005DBC  6E68               	movwf	104,c	;volatile
 14433                           
 14434                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14435  005DBE  013F               	movlb	63	; () banked
 14436  005DC0  515F               	movf	95,w,b	;volatile
 14437  005DC2  0BF3               	andlw	-13
 14438  005DC4  0904               	iorlw	4
 14439  005DC6  6F5F               	movwf	95,b	;volatile
 14440  005DC8                     
 14441                           ; BSR set to: 63
 14442  005DC8  0012               	return		;funcret
 14443  005DCA                     __end_of_PWM6_Initialize:
 14444                           	callstack 0
 14445                           
 14446 ;; *************** function _PWM5_Initialize *****************
 14447 ;; Defined at:
 14448 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14449 ;; Parameters:    Size  Location     Type
 14450 ;;		None
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;		None
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1    wreg      void 
 14455 ;; Registers used:
 14456 ;;		wreg, status,2
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14466 ;;Total ram usage:        0 bytes
 14467 ;; Hardware stack levels used: 1
 14468 ;; Hardware stack levels required when called: 8
 14469 ;; This function calls:
 14470 ;;		Nothing
 14471 ;; This function is called by:
 14472 ;;		_SYSTEM_Initialize
 14473 ;; This function uses a non-reentrant model
 14474 ;;
 14475                           
 14476                           	psect	text67
 14477  005DCA                     __ptext67:
 14478                           	callstack 0
 14479  005DCA                     _PWM5_Initialize:
 14480                           	callstack 21
 14481  005DCA                     
 14482                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14483  005DCA  0E80               	movlw	128
 14484  005DCC  6E6E               	movwf	110,c	;volatile
 14485                           
 14486                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14487  005DCE  0E59               	movlw	89
 14488  005DD0  6E6D               	movwf	109,c	;volatile
 14489                           
 14490                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14491  005DD2  0E40               	movlw	64
 14492  005DD4  6E6C               	movwf	108,c	;volatile
 14493                           
 14494                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14495  005DD6  013F               	movlb	63	; () banked
 14496  005DD8  515F               	movf	95,w,b	;volatile
 14497  005DDA  0BFC               	andlw	-4
 14498  005DDC  0901               	iorlw	1
 14499  005DDE  6F5F               	movwf	95,b	;volatile
 14500  005DE0                     
 14501                           ; BSR set to: 63
 14502  005DE0  0012               	return		;funcret
 14503  005DE2                     __end_of_PWM5_Initialize:
 14504                           	callstack 0
 14505                           
 14506 ;; *************** function _PMD_Initialize *****************
 14507 ;; Defined at:
 14508 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14509 ;; Parameters:    Size  Location     Type
 14510 ;;		None
 14511 ;; Auto vars:     Size  Location     Type
 14512 ;;		None
 14513 ;; Return value:  Size  Location     Type
 14514 ;;                  1    wreg      void 
 14515 ;; Registers used:
 14516 ;;		wreg, status,2
 14517 ;; Tracked objects:
 14518 ;;		On entry : 0/0
 14519 ;;		On exit  : 0/0
 14520 ;;		Unchanged: 0/0
 14521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14526 ;;Total ram usage:        0 bytes
 14527 ;; Hardware stack levels used: 1
 14528 ;; Hardware stack levels required when called: 8
 14529 ;; This function calls:
 14530 ;;		Nothing
 14531 ;; This function is called by:
 14532 ;;		_SYSTEM_Initialize
 14533 ;; This function uses a non-reentrant model
 14534 ;;
 14535                           
 14536                           	psect	text68
 14537  005CE0                     __ptext68:
 14538                           	callstack 0
 14539  005CE0                     _PMD_Initialize:
 14540                           	callstack 21
 14541  005CE0                     
 14542                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14543  005CE0  0E00               	movlw	0
 14544  005CE2  0139               	movlb	57	; () banked
 14545  005CE4  6FC0               	movwf	192,b	;volatile
 14546                           
 14547                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14548  005CE6  0E00               	movlw	0
 14549  005CE8  6FC1               	movwf	193,b	;volatile
 14550                           
 14551                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14552  005CEA  0E00               	movlw	0
 14553  005CEC  6FC2               	movwf	194,b	;volatile
 14554                           
 14555                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14556  005CEE  0E00               	movlw	0
 14557  005CF0  6FC3               	movwf	195,b	;volatile
 14558                           
 14559                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14560  005CF2  0E00               	movlw	0
 14561  005CF4  6FC4               	movwf	196,b	;volatile
 14562                           
 14563                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14564  005CF6  0E00               	movlw	0
 14565  005CF8  6FC5               	movwf	197,b	;volatile
 14566                           
 14567                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14568  005CFA  0E00               	movlw	0
 14569  005CFC  6FC6               	movwf	198,b	;volatile
 14570                           
 14571                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14572  005CFE  0E00               	movlw	0
 14573  005D00  6FC7               	movwf	199,b	;volatile
 14574  005D02                     
 14575                           ; BSR set to: 57
 14576  005D02  0012               	return		;funcret
 14577  005D04                     __end_of_PMD_Initialize:
 14578                           	callstack 0
 14579                           
 14580 ;; *************** function _PIN_MANAGER_Initialize *****************
 14581 ;; Defined at:
 14582 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14583 ;; Parameters:    Size  Location     Type
 14584 ;;		None
 14585 ;; Auto vars:     Size  Location     Type
 14586 ;;		None
 14587 ;; Return value:  Size  Location     Type
 14588 ;;                  1    wreg      void 
 14589 ;; Registers used:
 14590 ;;		wreg, status,2
 14591 ;; Tracked objects:
 14592 ;;		On entry : 0/0
 14593 ;;		On exit  : 0/0
 14594 ;;		Unchanged: 0/0
 14595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;Total ram usage:        0 bytes
 14601 ;; Hardware stack levels used: 1
 14602 ;; Hardware stack levels required when called: 8
 14603 ;; This function calls:
 14604 ;;		Nothing
 14605 ;; This function is called by:
 14606 ;;		_SYSTEM_Initialize
 14607 ;; This function uses a non-reentrant model
 14608 ;;
 14609                           
 14610                           	psect	text69
 14611  004B0A                     __ptext69:
 14612                           	callstack 0
 14613  004B0A                     _PIN_MANAGER_Initialize:
 14614                           	callstack 21
 14615  004B0A                     
 14616                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14617  004B0A  0E00               	movlw	0
 14618  004B0C  6EBE               	movwf	190,c	;volatile
 14619                           
 14620                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14621  004B0E  0E00               	movlw	0
 14622  004B10  6EBD               	movwf	189,c	;volatile
 14623                           
 14624                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14625  004B12  0E24               	movlw	36
 14626  004B14  6EBA               	movwf	186,c	;volatile
 14627                           
 14628                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14629  004B16  0E00               	movlw	0
 14630  004B18  6EBB               	movwf	187,c	;volatile
 14631                           
 14632                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14633  004B1A  0E00               	movlw	0
 14634  004B1C  6EBC               	movwf	188,c	;volatile
 14635                           
 14636                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14637  004B1E  0E07               	movlw	7
 14638  004B20  6EC6               	movwf	198,c	;volatile
 14639                           
 14640                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14641  004B22  0EC0               	movlw	192
 14642  004B24  6EC2               	movwf	194,c	;volatile
 14643                           
 14644                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14645  004B26  0EF7               	movlw	247
 14646  004B28  6EC3               	movwf	195,c	;volatile
 14647  004B2A                     
 14648                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14649  004B2A  68C4               	setf	196,c	;volatile
 14650  004B2C                     
 14651                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14652  004B2C  68C5               	setf	197,c	;volatile
 14653                           
 14654                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14655  004B2E  0E1F               	movlw	31
 14656  004B30  013A               	movlb	58	; () banked
 14657  004B32  6F70               	movwf	112,b	;volatile
 14658  004B34                     
 14659                           ; BSR set to: 58
 14660                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14661  004B34  6960               	setf	96,b	;volatile
 14662                           
 14663                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14664  004B36  0EC0               	movlw	192
 14665  004B38  6F50               	movwf	80,b	;volatile
 14666                           
 14667                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14668  004B3A  0E07               	movlw	7
 14669  004B3C  6F80               	movwf	128,b	;volatile
 14670                           
 14671                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14672  004B3E  0E7F               	movlw	127
 14673  004B40  6F40               	movwf	64,b	;volatile
 14674                           
 14675                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14676  004B42  0E00               	movlw	0
 14677  004B44  6F71               	movwf	113,b	;volatile
 14678                           
 14679                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14680  004B46  0E00               	movlw	0
 14681  004B48  6F81               	movwf	129,b	;volatile
 14682                           
 14683                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14684  004B4A  0E00               	movlw	0
 14685  004B4C  6F51               	movwf	81,b	;volatile
 14686                           
 14687                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14688  004B4E  0E00               	movlw	0
 14689  004B50  6F41               	movwf	65,b	;volatile
 14690                           
 14691                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14692  004B52  0E00               	movlw	0
 14693  004B54  6F61               	movwf	97,b	;volatile
 14694                           
 14695                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14696  004B56  0E00               	movlw	0
 14697  004B58  6F5A               	movwf	90,b	;volatile
 14698                           
 14699                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14700  004B5A  0E00               	movlw	0
 14701  004B5C  6F5B               	movwf	91,b	;volatile
 14702                           
 14703                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14704  004B5E  0E00               	movlw	0
 14705  004B60  6F6A               	movwf	106,b	;volatile
 14706                           
 14707                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14708  004B62  0E00               	movlw	0
 14709  004B64  6F6B               	movwf	107,b	;volatile
 14710                           
 14711                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14712  004B66  0E00               	movlw	0
 14713  004B68  6F7A               	movwf	122,b	;volatile
 14714                           
 14715                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14716  004B6A  0E00               	movlw	0
 14717  004B6C  6F7B               	movwf	123,b	;volatile
 14718                           
 14719                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14720  004B6E  0E00               	movlw	0
 14721  004B70  6F82               	movwf	130,b	;volatile
 14722                           
 14723                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14724  004B72  0E00               	movlw	0
 14725  004B74  6F42               	movwf	66,b	;volatile
 14726                           
 14727                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14728  004B76  0E00               	movlw	0
 14729  004B78  6F52               	movwf	82,b	;volatile
 14730                           
 14731                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14732  004B7A  0E00               	movlw	0
 14733  004B7C  6F62               	movwf	98,b	;volatile
 14734                           
 14735                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14736  004B7E  0E00               	movlw	0
 14737  004B80  6F72               	movwf	114,b	;volatile
 14738  004B82                     
 14739                           ; BSR set to: 58
 14740                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14741  004B82  6943               	setf	67,b	;volatile
 14742  004B84                     
 14743                           ; BSR set to: 58
 14744                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14745  004B84  6953               	setf	83,b	;volatile
 14746  004B86                     
 14747                           ; BSR set to: 58
 14748                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14749  004B86  6963               	setf	99,b	;volatile
 14750  004B88                     
 14751                           ; BSR set to: 58
 14752                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14753  004B88  6973               	setf	115,b	;volatile
 14754                           
 14755                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14756  004B8A  0E07               	movlw	7
 14757  004B8C  6F83               	movwf	131,b	;volatile
 14758  004B8E                     
 14759                           ; BSR set to: 58
 14760                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14761  004B8E  6944               	setf	68,b	;volatile
 14762  004B90                     
 14763                           ; BSR set to: 58
 14764                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14765  004B90  6954               	setf	84,b	;volatile
 14766  004B92                     
 14767                           ; BSR set to: 58
 14768                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14769  004B92  6964               	setf	100,b	;volatile
 14770  004B94                     
 14771                           ; BSR set to: 58
 14772                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14773  004B94  6974               	setf	116,b	;volatile
 14774                           
 14775                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14776  004B96  0E0F               	movlw	15
 14777  004B98  6F84               	movwf	132,b	;volatile
 14778                           
 14779                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14780  004B9A  0E1F               	movlw	31
 14781  004B9C  6FCF               	movwf	207,b	;volatile
 14782                           
 14783                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14784  004B9E  0E09               	movlw	9
 14785  004BA0  6FDC               	movwf	220,b	;volatile
 14786                           
 14787                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14788  004BA2  0E0E               	movlw	14
 14789  004BA4  6F01               	movwf	1,b	;volatile
 14790                           
 14791                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14792  004BA6  0E0A               	movlw	10
 14793  004BA8  6FE5               	movwf	229,b	;volatile
 14794                           
 14795                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14796  004BAA  0E0D               	movlw	13
 14797  004BAC  6F00               	movwf	0,b	;volatile
 14798                           
 14799                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14800  004BAE  0E1D               	movlw	29
 14801  004BB0  6FC9               	movwf	201,b	;volatile
 14802                           
 14803                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14804  004BB2  0E10               	movlw	16
 14805  004BB4  6F04               	movwf	4,b	;volatile
 14806                           
 14807                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14808  004BB6  0E07               	movlw	7
 14809  004BB8  6FD9               	movwf	217,b	;volatile
 14810                           
 14811                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14812  004BBA  0E09               	movlw	9
 14813  004BBC  6FD1               	movwf	209,b	;volatile
 14814                           
 14815                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14816  004BBE  0E0F               	movlw	15
 14817  004BC0  6F03               	movwf	3,b	;volatile
 14818                           
 14819                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14820  004BC2  0E13               	movlw	19
 14821  004BC4  6F0B               	movwf	11,b	;volatile
 14822                           
 14823                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14824  004BC6  0E08               	movlw	8
 14825  004BC8  6FDB               	movwf	219,b	;volatile
 14826                           
 14827                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14828  004BCA  0E08               	movlw	8
 14829  004BCC  6FD2               	movwf	210,b	;volatile
 14830                           
 14831                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14832  004BCE  0E1E               	movlw	30
 14833  004BD0  6FD0               	movwf	208,b	;volatile
 14834  004BD2                     
 14835                           ; BSR set to: 58
 14836  004BD2  0012               	return		;funcret
 14837  004BD4                     __end_of_PIN_MANAGER_Initialize:
 14838                           	callstack 0
 14839                           
 14840 ;; *************** function _OSCILLATOR_Initialize *****************
 14841 ;; Defined at:
 14842 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;		None
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;		None
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  1    wreg      void 
 14849 ;; Registers used:
 14850 ;;		wreg, status,2
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14860 ;;Total ram usage:        0 bytes
 14861 ;; Hardware stack levels used: 1
 14862 ;; Hardware stack levels required when called: 8
 14863 ;; This function calls:
 14864 ;;		Nothing
 14865 ;; This function is called by:
 14866 ;;		_SYSTEM_Initialize
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870                           	psect	text70
 14871  005DE2                     __ptext70:
 14872                           	callstack 0
 14873  005DE2                     _OSCILLATOR_Initialize:
 14874                           	callstack 21
 14875  005DE2                     
 14876                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14877  005DE2  0E60               	movlw	96
 14878  005DE4  0139               	movlb	57	; () banked
 14879  005DE6  6FD9               	movwf	217,b	;volatile
 14880                           
 14881                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14882  005DE8  0E00               	movlw	0
 14883  005DEA  6FDB               	movwf	219,b	;volatile
 14884                           
 14885                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14886  005DEC  0E00               	movlw	0
 14887  005DEE  6FDD               	movwf	221,b	;volatile
 14888                           
 14889                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14890  005DF0  0E08               	movlw	8
 14891  005DF2  6FDF               	movwf	223,b	;volatile
 14892                           
 14893                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14894  005DF4  0E00               	movlw	0
 14895  005DF6  6FDE               	movwf	222,b	;volatile
 14896  005DF8                     
 14897                           ; BSR set to: 57
 14898  005DF8  0012               	return		;funcret
 14899  005DFA                     __end_of_OSCILLATOR_Initialize:
 14900                           	callstack 0
 14901                           
 14902 ;; *************** function _INTERRUPT_Initialize *****************
 14903 ;; Defined at:
 14904 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14905 ;; Parameters:    Size  Location     Type
 14906 ;;		None
 14907 ;; Auto vars:     Size  Location     Type
 14908 ;;  state           1   19[COMRAM] _Bool 
 14909 ;; Return value:  Size  Location     Type
 14910 ;;                  1    wreg      void 
 14911 ;; Registers used:
 14912 ;;		wreg, status,2
 14913 ;; Tracked objects:
 14914 ;;		On entry : 0/0
 14915 ;;		On exit  : 0/0
 14916 ;;		Unchanged: 0/0
 14917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14922 ;;Total ram usage:        1 bytes
 14923 ;; Hardware stack levels used: 1
 14924 ;; Hardware stack levels required when called: 8
 14925 ;; This function calls:
 14926 ;;		Nothing
 14927 ;; This function is called by:
 14928 ;;		_SYSTEM_Initialize
 14929 ;; This function uses a non-reentrant model
 14930 ;;
 14931                           
 14932                           	psect	text71
 14933  005518                     __ptext71:
 14934                           	callstack 0
 14935  005518                     _INTERRUPT_Initialize:
 14936                           	callstack 21
 14937  005518                     
 14938                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14939  005518  8AD2               	bsf	210,5,c	;volatile
 14940  00551A                     
 14941                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14942  00551A  0E00               	movlw	0
 14943  00551C  BED2               	btfsc	16338,7,c	;volatile
 14944  00551E  0E01               	movlw	1
 14945  005520  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14946  005522                     
 14947                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14948  005522  9ED2               	bcf	16338,7,c	;volatile
 14949                           
 14950                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14951  005524  0E55               	movlw	85
 14952  005526  6ED4               	movwf	212,c	;volatile
 14953                           
 14954                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14955  005528  0EAA               	movlw	170
 14956  00552A  6ED4               	movwf	212,c	;volatile
 14957  00552C                     
 14958                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14959  00552C  90D4               	bcf	212,0,c	;volatile
 14960                           
 14961                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14962  00552E  0E00               	movlw	0
 14963  005530  6ED7               	movwf	215,c	;volatile
 14964                           
 14965                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14966  005532  0E00               	movlw	0
 14967  005534  6ED6               	movwf	214,c	;volatile
 14968                           
 14969                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14970  005536  0E08               	movlw	8
 14971  005538  6ED5               	movwf	213,c	;volatile
 14972                           
 14973                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14974  00553A  0E55               	movlw	85
 14975  00553C  6ED4               	movwf	212,c	;volatile
 14976                           
 14977                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14978  00553E  0EAA               	movlw	170
 14979  005540  6ED4               	movwf	212,c	;volatile
 14980  005542                     
 14981                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14982  005542  80D4               	bsf	212,0,c	;volatile
 14983  005544                     
 14984                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14985  005544  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14986  005546  D002               	bra	u2845
 14987  005548  9ED2               	bcf	16338,7,c	;volatile
 14988  00554A  D001               	bra	u2846
 14989  00554C                     u2845:
 14990  00554C  8ED2               	bsf	16338,7,c	;volatile
 14991  00554E                     u2846:
 14992  00554E                     
 14993                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14994  00554E  0139               	movlb	57	; () banked
 14995  005550  9983               	bcf	131,4,b	;volatile
 14996  005552                     
 14997                           ; BSR set to: 57
 14998                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14999  005552  9783               	bcf	131,3,b	;volatile
 15000  005554                     
 15001                           ; BSR set to: 57
 15002                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 15003  005554  8F81               	bsf	129,7,b	;volatile
 15004  005556                     
 15005                           ; BSR set to: 57
 15006                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 15007  005556  8B81               	bsf	129,5,b	;volatile
 15008  005558                     
 15009                           ; BSR set to: 57
 15010                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 15011  005558  8D81               	bsf	129,6,b	;volatile
 15012  00555A                     
 15013                           ; BSR set to: 57
 15014                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 15015  00555A  818A               	bsf	138,0,b	;volatile
 15016  00555C                     
 15017                           ; BSR set to: 57
 15018                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 15019  00555C  8F88               	bsf	136,7,b	;volatile
 15020  00555E                     
 15021                           ; BSR set to: 57
 15022                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 15023  00555E  9187               	bcf	135,0,b	;volatile
 15024  005560                     
 15025                           ; BSR set to: 57
 15026                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 15027  005560  8389               	bsf	137,1,b	;volatile
 15028  005562                     
 15029                           ; BSR set to: 57
 15030  005562  0012               	return		;funcret
 15031  005564                     __end_of_INTERRUPT_Initialize:
 15032                           	callstack 0
 15033                           
 15034 ;; *************** function _CLC3_Initialize *****************
 15035 ;; Defined at:
 15036 ;;		line 58 in file "mcc_generated_files/clc3.c"
 15037 ;; Parameters:    Size  Location     Type
 15038 ;;		None
 15039 ;; Auto vars:     Size  Location     Type
 15040 ;;		None
 15041 ;; Return value:  Size  Location     Type
 15042 ;;                  1    wreg      void 
 15043 ;; Registers used:
 15044 ;;		wreg, status,2
 15045 ;; Tracked objects:
 15046 ;;		On entry : 0/0
 15047 ;;		On exit  : 0/0
 15048 ;;		Unchanged: 0/0
 15049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15054 ;;Total ram usage:        0 bytes
 15055 ;; Hardware stack levels used: 1
 15056 ;; Hardware stack levels required when called: 8
 15057 ;; This function calls:
 15058 ;;		Nothing
 15059 ;; This function is called by:
 15060 ;;		_SYSTEM_Initialize
 15061 ;; This function uses a non-reentrant model
 15062 ;;
 15063                           
 15064                           	psect	text72
 15065  005C0C                     __ptext72:
 15066                           	callstack 0
 15067  005C0C                     _CLC3_Initialize:
 15068                           	callstack 21
 15069  005C0C                     
 15070                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 15071  005C0C  0E00               	movlw	0
 15072  005C0E  013C               	movlb	60	; () banked
 15073  005C10  6F61               	movwf	97,b	;volatile
 15074                           
 15075                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 15076  005C12  0E03               	movlw	3
 15077  005C14  6F62               	movwf	98,b	;volatile
 15078                           
 15079                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 15080  005C16  0E02               	movlw	2
 15081  005C18  6F63               	movwf	99,b	;volatile
 15082                           
 15083                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 15084  005C1A  0E00               	movlw	0
 15085  005C1C  6F64               	movwf	100,b	;volatile
 15086                           
 15087                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 15088  005C1E  0E00               	movlw	0
 15089  005C20  6F65               	movwf	101,b	;volatile
 15090                           
 15091                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 15092  005C22  0E02               	movlw	2
 15093  005C24  6F66               	movwf	102,b	;volatile
 15094                           
 15095                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 15096  005C26  0E08               	movlw	8
 15097  005C28  6F67               	movwf	103,b	;volatile
 15098                           
 15099                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 15100  005C2A  0E00               	movlw	0
 15101  005C2C  6F68               	movwf	104,b	;volatile
 15102                           
 15103                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 15104  005C2E  0E00               	movlw	0
 15105  005C30  6F69               	movwf	105,b	;volatile
 15106                           
 15107                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 15108  005C32  0E85               	movlw	133
 15109  005C34  6F60               	movwf	96,b	;volatile
 15110  005C36                     
 15111                           ; BSR set to: 60
 15112  005C36  0012               	return		;funcret
 15113  005C38                     __end_of_CLC3_Initialize:
 15114                           	callstack 0
 15115                           
 15116 ;; *************** function _CCP4_Initialize *****************
 15117 ;; Defined at:
 15118 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;		None
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;		None
 15123 ;; Return value:  Size  Location     Type
 15124 ;;                  1    wreg      void 
 15125 ;; Registers used:
 15126 ;;		wreg, status,2, status,0, cstack
 15127 ;; Tracked objects:
 15128 ;;		On entry : 0/0
 15129 ;;		On exit  : 0/0
 15130 ;;		Unchanged: 0/0
 15131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15136 ;;Total ram usage:        0 bytes
 15137 ;; Hardware stack levels used: 1
 15138 ;; Hardware stack levels required when called: 9
 15139 ;; This function calls:
 15140 ;;		_CCP4_SetCallBack
 15141 ;; This function is called by:
 15142 ;;		_SYSTEM_Initialize
 15143 ;; This function uses a non-reentrant model
 15144 ;;
 15145                           
 15146                           	psect	text73
 15147  005B56                     __ptext73:
 15148                           	callstack 0
 15149  005B56                     _CCP4_Initialize:
 15150                           	callstack 20
 15151  005B56                     
 15152                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 15153  005B56  0E83               	movlw	131
 15154  005B58  6E72               	movwf	114,c	;volatile
 15155                           
 15156                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 15157  005B5A  0E00               	movlw	0
 15158  005B5C  6E73               	movwf	115,c	;volatile
 15159                           
 15160                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 15161  005B5E  0E00               	movlw	0
 15162  005B60  6E71               	movwf	113,c	;volatile
 15163                           
 15164                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 15165  005B62  0E00               	movlw	0
 15166  005B64  6E70               	movwf	112,c	;volatile
 15167  005B66                     
 15168                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 15169  005B66  0E50               	movlw	low _CCP4_DefaultCallBack
 15170  005B68  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 15171  005B6A  0E59               	movlw	high _CCP4_DefaultCallBack
 15172  005B6C  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 15173  005B6E  EC2C  F02F         	call	_CCP4_SetCallBack	;wreg free
 15174  005B72                     
 15175                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 15176  005B72  013F               	movlb	63	; () banked
 15177  005B74  515E               	movf	94,w,b	;volatile
 15178  005B76  0B3F               	andlw	-193
 15179  005B78  0980               	iorlw	128
 15180  005B7A  6F5E               	movwf	94,b	;volatile
 15181  005B7C                     
 15182                           ; BSR set to: 63
 15183                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 15184  005B7C  0139               	movlb	57	; () banked
 15185  005B7E  91AA               	bcf	170,0,b	;volatile
 15186  005B80                     
 15187                           ; BSR set to: 57
 15188                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 15189  005B80  819A               	bsf	154,0,b	;volatile
 15190  005B82                     
 15191                           ; BSR set to: 57
 15192  005B82  0012               	return		;funcret
 15193  005B84                     __end_of_CCP4_Initialize:
 15194                           	callstack 0
 15195                           
 15196 ;; *************** function _CCP4_SetCallBack *****************
 15197 ;; Defined at:
 15198 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15201 ;;		 -> CCP4_DefaultCallBack(1), 
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;		None
 15204 ;; Return value:  Size  Location     Type
 15205 ;;                  1    wreg      void 
 15206 ;; Registers used:
 15207 ;;		wreg, status,2, status,0
 15208 ;; Tracked objects:
 15209 ;;		On entry : 0/0
 15210 ;;		On exit  : 0/0
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15217 ;;Total ram usage:        2 bytes
 15218 ;; Hardware stack levels used: 1
 15219 ;; Hardware stack levels required when called: 8
 15220 ;; This function calls:
 15221 ;;		Nothing
 15222 ;; This function is called by:
 15223 ;;		_CCP4_Initialize
 15224 ;; This function uses a non-reentrant model
 15225 ;;
 15226                           
 15227                           	psect	text74
 15228  005E58                     __ptext74:
 15229                           	callstack 0
 15230  005E58                     _CCP4_SetCallBack:
 15231                           	callstack 20
 15232  005E58                     
 15233                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15234  005E58  C014  F192         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15235  005E5C  C015  F193         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15236  005E60  0012               	return		;funcret
 15237  005E62                     __end_of_CCP4_SetCallBack:
 15238                           	callstack 0
 15239                           
 15240 ;; *************** function _CCP3_Initialize *****************
 15241 ;; Defined at:
 15242 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;		None
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;		None
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1    wreg      void 
 15249 ;; Registers used:
 15250 ;;		wreg, status,2, status,0, cstack
 15251 ;; Tracked objects:
 15252 ;;		On entry : 0/0
 15253 ;;		On exit  : 0/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15260 ;;Total ram usage:        0 bytes
 15261 ;; Hardware stack levels used: 1
 15262 ;; Hardware stack levels required when called: 9
 15263 ;; This function calls:
 15264 ;;		_CCP3_SetCallBack
 15265 ;; This function is called by:
 15266 ;;		_SYSTEM_Initialize
 15267 ;; This function uses a non-reentrant model
 15268 ;;
 15269                           
 15270                           	psect	text75
 15271  005B84                     __ptext75:
 15272                           	callstack 0
 15273  005B84                     _CCP3_Initialize:
 15274                           	callstack 20
 15275  005B84                     
 15276                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15277  005B84  0E83               	movlw	131
 15278  005B86  6E76               	movwf	118,c	;volatile
 15279                           
 15280                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15281  005B88  0E00               	movlw	0
 15282  005B8A  6E77               	movwf	119,c	;volatile
 15283                           
 15284                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15285  005B8C  0E00               	movlw	0
 15286  005B8E  6E75               	movwf	117,c	;volatile
 15287                           
 15288                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15289  005B90  0E00               	movlw	0
 15290  005B92  6E74               	movwf	116,c	;volatile
 15291  005B94                     
 15292                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15293  005B94  0E1A               	movlw	low _CCP3_DefaultCallBack
 15294  005B96  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15295  005B98  0E59               	movlw	high _CCP3_DefaultCallBack
 15296  005B9A  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15297  005B9C  EC31  F02F         	call	_CCP3_SetCallBack	;wreg free
 15298  005BA0                     
 15299                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15300  005BA0  013F               	movlb	63	; () banked
 15301  005BA2  515E               	movf	94,w,b	;volatile
 15302  005BA4  0BCF               	andlw	-49
 15303  005BA6  0920               	iorlw	32
 15304  005BA8  6F5E               	movwf	94,b	;volatile
 15305  005BAA                     
 15306                           ; BSR set to: 63
 15307                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15308  005BAA  0139               	movlb	57	; () banked
 15309  005BAC  93A9               	bcf	169,1,b	;volatile
 15310  005BAE                     
 15311                           ; BSR set to: 57
 15312                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15313  005BAE  8399               	bsf	153,1,b	;volatile
 15314  005BB0                     
 15315                           ; BSR set to: 57
 15316  005BB0  0012               	return		;funcret
 15317  005BB2                     __end_of_CCP3_Initialize:
 15318                           	callstack 0
 15319                           
 15320 ;; *************** function _CCP3_SetCallBack *****************
 15321 ;; Defined at:
 15322 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15325 ;;		 -> CCP3_DefaultCallBack(1), 
 15326 ;; Auto vars:     Size  Location     Type
 15327 ;;		None
 15328 ;; Return value:  Size  Location     Type
 15329 ;;                  1    wreg      void 
 15330 ;; Registers used:
 15331 ;;		wreg, status,2, status,0
 15332 ;; Tracked objects:
 15333 ;;		On entry : 0/0
 15334 ;;		On exit  : 0/0
 15335 ;;		Unchanged: 0/0
 15336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15341 ;;Total ram usage:        2 bytes
 15342 ;; Hardware stack levels used: 1
 15343 ;; Hardware stack levels required when called: 8
 15344 ;; This function calls:
 15345 ;;		Nothing
 15346 ;; This function is called by:
 15347 ;;		_CCP3_Initialize
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text76
 15352  005E62                     __ptext76:
 15353                           	callstack 0
 15354  005E62                     _CCP3_SetCallBack:
 15355                           	callstack 20
 15356  005E62                     
 15357                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15358  005E62  C014  F194         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15359  005E66  C015  F195         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15360  005E6A  0012               	return		;funcret
 15361  005E6C                     __end_of_CCP3_SetCallBack:
 15362                           	callstack 0
 15363                           
 15364 ;; *************** function _ADCC_Initialize *****************
 15365 ;; Defined at:
 15366 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15367 ;; Parameters:    Size  Location     Type
 15368 ;;		None
 15369 ;; Auto vars:     Size  Location     Type
 15370 ;;		None
 15371 ;; Return value:  Size  Location     Type
 15372 ;;                  1    wreg      void 
 15373 ;; Registers used:
 15374 ;;		wreg, status,2
 15375 ;; Tracked objects:
 15376 ;;		On entry : 0/0
 15377 ;;		On exit  : 0/0
 15378 ;;		Unchanged: 0/0
 15379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15384 ;;Total ram usage:        0 bytes
 15385 ;; Hardware stack levels used: 1
 15386 ;; Hardware stack levels required when called: 8
 15387 ;; This function calls:
 15388 ;;		Nothing
 15389 ;; This function is called by:
 15390 ;;		_SYSTEM_Initialize
 15391 ;; This function uses a non-reentrant model
 15392 ;;
 15393                           
 15394                           	psect	text77
 15395  005466                     __ptext77:
 15396                           	callstack 0
 15397  005466                     _ADCC_Initialize:
 15398                           	callstack 21
 15399  005466                     
 15400                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15401  005466  0E00               	movlw	0
 15402  005468  013E               	movlb	62	; () banked
 15403  00546A  6FDE               	movwf	222,b	;volatile
 15404                           
 15405                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15406  00546C  0E00               	movlw	0
 15407  00546E  6FDF               	movwf	223,b	;volatile
 15408                           
 15409                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15410  005470  0E00               	movlw	0
 15411  005472  6FE0               	movwf	224,b	;volatile
 15412                           
 15413                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15414  005474  0E00               	movlw	0
 15415  005476  6FE1               	movwf	225,b	;volatile
 15416                           
 15417                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15418  005478  0E00               	movlw	0
 15419  00547A  6FE4               	movwf	228,b	;volatile
 15420                           
 15421                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15422  00547C  0E00               	movlw	0
 15423  00547E  6FE5               	movwf	229,b	;volatile
 15424                           
 15425                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15426  005480  0E00               	movlw	0
 15427  005482  6FEA               	movwf	234,b	;volatile
 15428                           
 15429                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15430  005484  0E00               	movlw	0
 15431  005486  6FEC               	movwf	236,b	;volatile
 15432                           
 15433                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15434  005488  0E00               	movlw	0
 15435  00548A  6FF1               	movwf	241,b	;volatile
 15436                           
 15437                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15438  00548C  0E58               	movlw	88
 15439  00548E  6FF3               	movwf	243,b	;volatile
 15440                           
 15441                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15442  005490  0E02               	movlw	2
 15443  005492  6FF4               	movwf	244,b	;volatile
 15444                           
 15445                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15446  005494  0E00               	movlw	0
 15447  005496  6FF5               	movwf	245,b	;volatile
 15448                           
 15449                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15450  005498  0E00               	movlw	0
 15451  00549A  6FF6               	movwf	246,b	;volatile
 15452                           
 15453                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15454  00549C  0E00               	movlw	0
 15455  00549E  6FF7               	movwf	247,b	;volatile
 15456                           
 15457                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15458  0054A0  0E00               	movlw	0
 15459  0054A2  6FF9               	movwf	249,b	;volatile
 15460                           
 15461                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15462  0054A4  0E00               	movlw	0
 15463  0054A6  6FFA               	movwf	250,b	;volatile
 15464                           
 15465                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15466  0054A8  0E00               	movlw	0
 15467  0054AA  6FFB               	movwf	251,b	;volatile
 15468                           
 15469                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15470  0054AC  0E00               	movlw	0
 15471  0054AE  6FFC               	movwf	252,b	;volatile
 15472                           
 15473                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15474  0054B0  0E00               	movlw	0
 15475  0054B2  6FFD               	movwf	253,b	;volatile
 15476                           
 15477                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15478  0054B4  0E00               	movlw	0
 15479  0054B6  6FFE               	movwf	254,b	;volatile
 15480                           
 15481                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15482  0054B8  0E1F               	movlw	31
 15483  0054BA  6FFF               	movwf	255,b	;volatile
 15484                           
 15485                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15486  0054BC  0E84               	movlw	132
 15487  0054BE  6FF8               	movwf	248,b	;volatile
 15488  0054C0                     
 15489                           ; BSR set to: 62
 15490  0054C0  0012               	return		;funcret
 15491  0054C2                     __end_of_ADCC_Initialize:
 15492                           	callstack 0
 15493                           
 15494 ;; *************** function _UART1_tx_vect_isr *****************
 15495 ;; Defined at:
 15496 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15497 ;; Parameters:    Size  Location     Type
 15498 ;;		None
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;		None
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  1    wreg      void 
 15503 ;; Registers used:
 15504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15514 ;;Total ram usage:        1 bytes
 15515 ;; Hardware stack levels used: 1
 15516 ;; Hardware stack levels required when called: 5
 15517 ;; This function calls:
 15518 ;;		Absolute function
 15519 ;;		_UART1_Transmit_ISR
 15520 ;; This function is called by:
 15521 ;;		Interrupt level 1
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           	psect	text78
 15526  00578C                     __ptext78:
 15527                           	callstack 0
 15528  00578C                     _UART1_tx_vect_isr:
 15529                           	callstack 13
 15530                           
 15531                           ; BSR set to: 62
 15532                           ;incstack = 0
 15533  00578C  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15534  005792                     
 15535                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15536  005792  0101               	movlb	1	; () banked
 15537  005794  519C               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15538  005796  119D               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15539  005798  B4D8               	btfsc	status,2,c
 15540  00579A  EFD1  F02B         	goto	i1u707_21
 15541  00579E  EFD3  F02B         	goto	i1u707_20
 15542  0057A2                     i1u707_21:
 15543  0057A2  EFDF  F02B         	goto	i1l324
 15544  0057A6                     i1u707_20:
 15545  0057A6                     
 15546                           ; BSR set to: 1
 15547                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15548  0057A6  D802               	call	i1u708_28
 15549  0057A8  EFDF  F02B         	goto	i1u708_29
 15550  0057AC                     i1u708_28:
 15551  0057AC  0005               	push	
 15552  0057AE  6EFA               	movwf	pclath,c
 15553  0057B0  519C               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15554  0057B2  6EFD               	movwf	tosl,c
 15555  0057B4  519D               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15556  0057B6  6EFE               	movwf	tosh,c
 15557  0057B8  6AFF               	clrf	tosu,c
 15558  0057BA  50FA               	movf	pclath,w,c
 15559  0057BC  0012               	return		;indir
 15560  0057BE                     i1u708_29:
 15561  0057BE                     i1l324:
 15562  0057BE  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15563  0057C4  0011               	retfie		f
 15564  0057C6                     __end_of_UART1_tx_vect_isr:
 15565                           	callstack 0
 15566                           
 15567 ;; *************** function _UART1_Transmit_ISR *****************
 15568 ;; Defined at:
 15569 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;		None
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;		None
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15587 ;;Total ram usage:        0 bytes
 15588 ;; Hardware stack levels used: 1
 15589 ;; Hardware stack levels required when called: 4
 15590 ;; This function calls:
 15591 ;;		Nothing
 15592 ;; This function is called by:
 15593 ;;		_UART1_Initialize
 15594 ;;		_UART1_tx_vect_isr
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           	psect	text79
 15599  0056CE                     __ptext79:
 15600                           	callstack 0
 15601  0056CE                     _UART1_Transmit_ISR:
 15602                           	callstack 13
 15603  0056CE                     
 15604                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15605  0056CE  0E08               	movlw	8
 15606  0056D0  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15607  0056D2  EF6D  F02B         	goto	i1u688_21
 15608  0056D6  EF6F  F02B         	goto	i1u688_20
 15609  0056DA                     i1u688_21:
 15610  0056DA  EF86  F02B         	goto	i1l333
 15611  0056DE                     i1u688_20:
 15612  0056DE                     
 15613                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15614  0056DE  0E10               	movlw	low _uart1TxBuffer
 15615  0056E0  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15616  0056E2  6ED9               	movwf	fsr2l,c
 15617  0056E4  6ADA               	clrf	fsr2h,c
 15618  0056E6  0E01               	movlw	high _uart1TxBuffer
 15619  0056E8  22DA               	addwfc	fsr2h,f,c
 15620  0056EA  50DF               	movf	indf2,w,c
 15621  0056EC  013D               	movlb	61	; () banked
 15622  0056EE  6FEA               	movwf	234,b	;volatile
 15623  0056F0                     
 15624                           ; BSR set to: 61
 15625  0056F0  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15626  0056F2                     
 15627                           ; BSR set to: 61
 15628                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15629  0056F2  0E07               	movlw	7
 15630  0056F4  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15631  0056F6  EF7F  F02B         	goto	i1u689_21
 15632  0056FA  EF81  F02B         	goto	i1u689_20
 15633  0056FE                     i1u689_21:
 15634  0056FE  EF83  F02B         	goto	i1l7107
 15635  005702                     i1u689_20:
 15636  005702                     
 15637                           ; BSR set to: 61
 15638                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15639  005702  0E00               	movlw	0
 15640  005704  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15641  005706                     i1l7107:
 15642                           
 15643                           ; BSR set to: 61
 15644                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15645  005706  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15646                           
 15647                           ;mcc_generated_files/uart1.c: 264:     }
 15648  005708  EF88  F02B         	goto	i1l336
 15649  00570C                     i1l333:
 15650                           
 15651                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15652  00570C  0139               	movlb	57	; () banked
 15653  00570E  9993               	bcf	147,4,b	;volatile
 15654  005710                     i1l336:
 15655  005710  0012               	return		;funcret
 15656  005712                     __end_of_UART1_Transmit_ISR:
 15657                           	callstack 0
 15658                           
 15659 ;; *************** function _UART1_rx_vect_isr *****************
 15660 ;; Defined at:
 15661 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;		None
 15664 ;; Auto vars:     Size  Location     Type
 15665 ;;		None
 15666 ;; Return value:  Size  Location     Type
 15667 ;;                  1    wreg      void 
 15668 ;; Registers used:
 15669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15670 ;; Tracked objects:
 15671 ;;		On entry : 0/0
 15672 ;;		On exit  : 0/0
 15673 ;;		Unchanged: 0/0
 15674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15679 ;;Total ram usage:        1 bytes
 15680 ;; Hardware stack levels used: 1
 15681 ;; Hardware stack levels required when called: 7
 15682 ;; This function calls:
 15683 ;;		Absolute function
 15684 ;;		_UART1_Receive_ISR
 15685 ;; This function is called by:
 15686 ;;		Interrupt level 1
 15687 ;; This function uses a non-reentrant model
 15688 ;;
 15689                           
 15690                           	psect	text80
 15691  0057C8                     __ptext80:
 15692                           	callstack 0
 15693  0057C8                     _UART1_rx_vect_isr:
 15694                           	callstack 11
 15695                           
 15696                           ;incstack = 0
 15697  0057C8  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15698  0057CE                     
 15699                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15700  0057CE  0101               	movlb	1	; () banked
 15701  0057D0  519E               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15702  0057D2  119F               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15703  0057D4  B4D8               	btfsc	status,2,c
 15704  0057D6  EFEF  F02B         	goto	i1u709_21
 15705  0057DA  EFF1  F02B         	goto	i1u709_20
 15706  0057DE                     i1u709_21:
 15707  0057DE  EFFD  F02B         	goto	i1l330
 15708  0057E2                     i1u709_20:
 15709  0057E2                     
 15710                           ; BSR set to: 1
 15711                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15712  0057E2  D802               	call	i1u710_28
 15713  0057E4  EFFD  F02B         	goto	i1u710_29
 15714  0057E8                     i1u710_28:
 15715  0057E8  0005               	push	
 15716  0057EA  6EFA               	movwf	pclath,c
 15717  0057EC  519E               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15718  0057EE  6EFD               	movwf	tosl,c
 15719  0057F0  519F               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15720  0057F2  6EFE               	movwf	tosh,c
 15721  0057F4  6AFF               	clrf	tosu,c
 15722  0057F6  50FA               	movf	pclath,w,c
 15723  0057F8  0012               	return		;indir
 15724  0057FA                     i1u710_29:
 15725  0057FA                     i1l330:
 15726  0057FA  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15727  005800  0011               	retfie		f
 15728  005802                     __end_of_UART1_rx_vect_isr:
 15729                           	callstack 0
 15730                           
 15731 ;; *************** function _UART1_Receive_ISR *****************
 15732 ;; Defined at:
 15733 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15734 ;; Parameters:    Size  Location     Type
 15735 ;;		None
 15736 ;; Auto vars:     Size  Location     Type
 15737 ;;		None
 15738 ;; Return value:  Size  Location     Type
 15739 ;;                  1    wreg      void 
 15740 ;; Registers used:
 15741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15742 ;; Tracked objects:
 15743 ;;		On entry : 0/0
 15744 ;;		On exit  : 0/0
 15745 ;;		Unchanged: 0/0
 15746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15751 ;;Total ram usage:        0 bytes
 15752 ;; Hardware stack levels used: 1
 15753 ;; Hardware stack levels required when called: 6
 15754 ;; This function calls:
 15755 ;;		Absolute function
 15756 ;;		_UART1_DefaultErrorHandler
 15757 ;;		_UART1_DefaultFramingErrorHandler
 15758 ;;		_UART1_DefaultOverrunErrorHandler
 15759 ;;		_UART1_RxDataHandler
 15760 ;; This function is called by:
 15761 ;;		_UART1_Initialize
 15762 ;;		_UART1_rx_vect_isr
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           	psect	text81
 15767  004D5A                     __ptext81:
 15768                           	callstack 0
 15769  004D5A                     _UART1_Receive_ISR:
 15770                           	callstack 11
 15771  004D5A                     
 15772                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15773  004D5A  0E00               	movlw	low _uart1RxStatusBuffer
 15774  004D5C  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15775  004D5E  6ED9               	movwf	fsr2l,c
 15776  004D60  6ADA               	clrf	fsr2h,c
 15777  004D62  0E01               	movlw	high _uart1RxStatusBuffer
 15778  004D64  22DA               	addwfc	fsr2h,f,c
 15779  004D66  0E00               	movlw	0
 15780  004D68  6EDF               	movwf	indf2,c
 15781  004D6A                     
 15782                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15783  004D6A  013D               	movlb	61	; () banked
 15784  004D6C  A7F9               	btfss	249,3,b	;volatile
 15785  004D6E  EFBB  F026         	goto	i1u690_21
 15786  004D72  EFBD  F026         	goto	i1u690_20
 15787  004D76                     i1u690_21:
 15788  004D76  EFD1  F026         	goto	i1l7117
 15789  004D7A                     i1u690_20:
 15790  004D7A                     
 15791                           ; BSR set to: 61
 15792                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15793  004D7A  0E00               	movlw	low _uart1RxStatusBuffer
 15794  004D7C  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15795  004D7E  6ED9               	movwf	fsr2l,c
 15796  004D80  6ADA               	clrf	fsr2h,c
 15797  004D82  0E01               	movlw	high _uart1RxStatusBuffer
 15798  004D84  22DA               	addwfc	fsr2h,f,c
 15799  004D86  0101               	movlb	1	; () banked
 15800  004D88  82DF               	bsf	indf2,1,c
 15801  004D8A                     
 15802                           ; BSR set to: 1
 15803                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15804  004D8A  D802               	call	i1u691_28
 15805  004D8C  EFD1  F026         	goto	i1u691_29
 15806  004D90                     i1u691_28:
 15807  004D90  0005               	push	
 15808  004D92  6EFA               	movwf	pclath,c
 15809  004D94  519A               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15810  004D96  6EFD               	movwf	tosl,c
 15811  004D98  519B               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15812  004D9A  6EFE               	movwf	tosh,c
 15813  004D9C  6AFF               	clrf	tosu,c
 15814  004D9E  50FA               	movf	pclath,w,c
 15815  004DA0  0012               	return		;indir
 15816  004DA2                     i1u691_29:
 15817  004DA2                     i1l7117:
 15818                           
 15819                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15820  004DA2  013D               	movlb	61	; () banked
 15821  004DA4  A3F9               	btfss	249,1,b	;volatile
 15822  004DA6  EFD7  F026         	goto	i1u692_21
 15823  004DAA  EFD9  F026         	goto	i1u692_20
 15824  004DAE                     i1u692_21:
 15825  004DAE  EFED  F026         	goto	i1l7123
 15826  004DB2                     i1u692_20:
 15827  004DB2                     
 15828                           ; BSR set to: 61
 15829                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15830  004DB2  0E00               	movlw	low _uart1RxStatusBuffer
 15831  004DB4  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15832  004DB6  6ED9               	movwf	fsr2l,c
 15833  004DB8  6ADA               	clrf	fsr2h,c
 15834  004DBA  0E01               	movlw	high _uart1RxStatusBuffer
 15835  004DBC  22DA               	addwfc	fsr2h,f,c
 15836  004DBE  0101               	movlb	1	; () banked
 15837  004DC0  84DF               	bsf	indf2,2,c
 15838  004DC2                     
 15839                           ; BSR set to: 1
 15840                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15841  004DC2  D802               	call	i1u693_28
 15842  004DC4  EFED  F026         	goto	i1u693_29
 15843  004DC8                     i1u693_28:
 15844  004DC8  0005               	push	
 15845  004DCA  6EFA               	movwf	pclath,c
 15846  004DCC  5198               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15847  004DCE  6EFD               	movwf	tosl,c
 15848  004DD0  5199               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15849  004DD2  6EFE               	movwf	tosh,c
 15850  004DD4  6AFF               	clrf	tosu,c
 15851  004DD6  50FA               	movf	pclath,w,c
 15852  004DD8  0012               	return		;indir
 15853  004DDA                     i1u693_29:
 15854  004DDA                     i1l7123:
 15855                           
 15856                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15857  004DDA  0E00               	movlw	low _uart1RxStatusBuffer
 15858  004DDC  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15859  004DDE  6ED9               	movwf	fsr2l,c
 15860  004DE0  6ADA               	clrf	fsr2h,c
 15861  004DE2  0E01               	movlw	high _uart1RxStatusBuffer
 15862  004DE4  22DA               	addwfc	fsr2h,f,c
 15863  004DE6  50DF               	movf	indf2,w,c
 15864  004DE8  B4D8               	btfsc	status,2,c
 15865  004DEA  EFF9  F026         	goto	i1u694_21
 15866  004DEE  EFFB  F026         	goto	i1u694_20
 15867  004DF2                     i1u694_21:
 15868  004DF2  EF0A  F027         	goto	i1l7127
 15869  004DF6                     i1u694_20:
 15870  004DF6                     
 15871                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15872  004DF6  D802               	call	i1u695_28
 15873  004DF8  EF08  F027         	goto	i1u695_29
 15874  004DFC                     i1u695_28:
 15875  004DFC  0005               	push	
 15876  004DFE  6EFA               	movwf	pclath,c
 15877  004E00  0101               	movlb	1	; () banked
 15878  004E02  5196               	movf	_UART1_ErrorHandler& (0+255),w,b
 15879  004E04  6EFD               	movwf	tosl,c
 15880  004E06  5197               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15881  004E08  6EFE               	movwf	tosh,c
 15882  004E0A  6AFF               	clrf	tosu,c
 15883  004E0C  50FA               	movf	pclath,w,c
 15884  004E0E  0012               	return		;indir
 15885  004E10                     i1u695_29:
 15886                           
 15887                           ;mcc_generated_files/uart1.c: 290:     } else {
 15888  004E10  EF0C  F027         	goto	i1l343
 15889  004E14                     i1l7127:
 15890                           
 15891                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15892  004E14  EC1C  F02E         	call	_UART1_RxDataHandler	;wreg free
 15893  004E18                     i1l343:
 15894  004E18  0012               	return		;funcret
 15895  004E1A                     __end_of_UART1_Receive_ISR:
 15896                           	callstack 0
 15897                           
 15898 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15899 ;; Defined at:
 15900 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15901 ;; Parameters:    Size  Location     Type
 15902 ;;		None
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;		None
 15905 ;; Return value:  Size  Location     Type
 15906 ;;                  1    wreg      void 
 15907 ;; Registers used:
 15908 ;;		None
 15909 ;; Tracked objects:
 15910 ;;		On entry : 0/0
 15911 ;;		On exit  : 0/0
 15912 ;;		Unchanged: 0/0
 15913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15918 ;;Total ram usage:        0 bytes
 15919 ;; Hardware stack levels used: 1
 15920 ;; Hardware stack levels required when called: 4
 15921 ;; This function calls:
 15922 ;;		Nothing
 15923 ;; This function is called by:
 15924 ;;		_UART1_Initialize
 15925 ;;		_UART1_Receive_ISR
 15926 ;; This function uses a non-reentrant model
 15927 ;;
 15928                           
 15929                           	psect	text82
 15930  005E7C                     __ptext82:
 15931                           	callstack 0
 15932  005E7C                     _UART1_DefaultOverrunErrorHandler:
 15933                           	callstack 12
 15934  005E7C  0012               	return		;funcret
 15935  005E7E                     __end_of_UART1_DefaultOverrunErrorHandler:
 15936                           	callstack 0
 15937                           
 15938 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15939 ;; Defined at:
 15940 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15941 ;; Parameters:    Size  Location     Type
 15942 ;;		None
 15943 ;; Auto vars:     Size  Location     Type
 15944 ;;		None
 15945 ;; Return value:  Size  Location     Type
 15946 ;;                  1    wreg      void 
 15947 ;; Registers used:
 15948 ;;		None
 15949 ;; Tracked objects:
 15950 ;;		On entry : 0/0
 15951 ;;		On exit  : 0/0
 15952 ;;		Unchanged: 0/0
 15953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15958 ;;Total ram usage:        0 bytes
 15959 ;; Hardware stack levels used: 1
 15960 ;; Hardware stack levels required when called: 4
 15961 ;; This function calls:
 15962 ;;		Nothing
 15963 ;; This function is called by:
 15964 ;;		_UART1_Initialize
 15965 ;;		_UART1_Receive_ISR
 15966 ;; This function uses a non-reentrant model
 15967 ;;
 15968                           
 15969                           	psect	text83
 15970  005E7E                     __ptext83:
 15971                           	callstack 0
 15972  005E7E                     _UART1_DefaultFramingErrorHandler:
 15973                           	callstack 12
 15974  005E7E  0012               	return		;funcret
 15975  005E80                     __end_of_UART1_DefaultFramingErrorHandler:
 15976                           	callstack 0
 15977                           
 15978 ;; *************** function _UART1_DefaultErrorHandler *****************
 15979 ;; Defined at:
 15980 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15981 ;; Parameters:    Size  Location     Type
 15982 ;;		None
 15983 ;; Auto vars:     Size  Location     Type
 15984 ;;		None
 15985 ;; Return value:  Size  Location     Type
 15986 ;;                  1    wreg      void 
 15987 ;; Registers used:
 15988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15989 ;; Tracked objects:
 15990 ;;		On entry : 0/0
 15991 ;;		On exit  : 0/0
 15992 ;;		Unchanged: 0/0
 15993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15998 ;;Total ram usage:        0 bytes
 15999 ;; Hardware stack levels used: 1
 16000 ;; Hardware stack levels required when called: 5
 16001 ;; This function calls:
 16002 ;;		_UART1_RxDataHandler
 16003 ;; This function is called by:
 16004 ;;		_UART1_Initialize
 16005 ;;		_UART1_Receive_ISR
 16006 ;; This function uses a non-reentrant model
 16007 ;;
 16008                           
 16009                           	psect	text84
 16010  005E76                     __ptext84:
 16011                           	callstack 0
 16012  005E76                     _UART1_DefaultErrorHandler:
 16013                           	callstack 11
 16014  005E76                     
 16015                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 16016  005E76  EC1C  F02E         	call	_UART1_RxDataHandler	;wreg free
 16017  005E7A  0012               	return		;funcret
 16018  005E7C                     __end_of_UART1_DefaultErrorHandler:
 16019                           	callstack 0
 16020                           
 16021 ;; *************** function _UART1_RxDataHandler *****************
 16022 ;; Defined at:
 16023 ;;		line 297 in file "mcc_generated_files/uart1.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;		None
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;		None
 16028 ;; Return value:  Size  Location     Type
 16029 ;;                  1    wreg      void 
 16030 ;; Registers used:
 16031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16032 ;; Tracked objects:
 16033 ;;		On entry : 0/0
 16034 ;;		On exit  : 0/0
 16035 ;;		Unchanged: 0/0
 16036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;Total ram usage:        0 bytes
 16042 ;; Hardware stack levels used: 1
 16043 ;; Hardware stack levels required when called: 4
 16044 ;; This function calls:
 16045 ;;		Nothing
 16046 ;; This function is called by:
 16047 ;;		_UART1_Receive_ISR
 16048 ;;		_UART1_DefaultErrorHandler
 16049 ;; This function uses a non-reentrant model
 16050 ;;
 16051                           
 16052                           	psect	text85
 16053  005C38                     __ptext85:
 16054                           	callstack 0
 16055  005C38                     _UART1_RxDataHandler:
 16056                           	callstack 12
 16057  005C38                     
 16058                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 16059  005C38  0E08               	movlw	low _uart1RxBuffer
 16060  005C3A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16061  005C3C  6ED9               	movwf	fsr2l,c
 16062  005C3E  6ADA               	clrf	fsr2h,c
 16063  005C40  0E01               	movlw	high _uart1RxBuffer
 16064  005C42  22DA               	addwfc	fsr2h,f,c
 16065  005C44  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16066  005C4A  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 16067  005C4C                     
 16068                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 16069  005C4C  0E07               	movlw	7
 16070  005C4E  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 16071  005C50  EF2C  F02E         	goto	i1u633_21
 16072  005C54  EF2E  F02E         	goto	i1u633_20
 16073  005C58                     i1u633_21:
 16074  005C58  EF30  F02E         	goto	i1l6563
 16075  005C5C                     i1u633_20:
 16076  005C5C                     
 16077                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 16078  005C5C  0E00               	movlw	0
 16079  005C5E  6E45               	movwf	_uart1RxHead^0,c	;volatile
 16080  005C60                     i1l6563:
 16081                           
 16082                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 16083  005C60  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 16084  005C62  0012               	return		;funcret
 16085  005C64                     __end_of_UART1_RxDataHandler:
 16086                           	callstack 0
 16087                           
 16088 ;; *************** function _TMR4_ISR *****************
 16089 ;; Defined at:
 16090 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 16091 ;; Parameters:    Size  Location     Type
 16092 ;;		None
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;		None
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      void 
 16097 ;; Registers used:
 16098 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16099 ;; Tracked objects:
 16100 ;;		On entry : 0/0
 16101 ;;		On exit  : 0/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16108 ;;Total ram usage:        1 bytes
 16109 ;; Hardware stack levels used: 1
 16110 ;; Hardware stack levels required when called: 6
 16111 ;; This function calls:
 16112 ;;		_TMR4_CallBack
 16113 ;; This function is called by:
 16114 ;;		Interrupt level 1
 16115 ;; This function uses a non-reentrant model
 16116 ;;
 16117                           
 16118                           	psect	text86
 16119  0058AC                     __ptext86:
 16120                           	callstack 0
 16121  0058AC                     _TMR4_ISR:
 16122                           	callstack 12
 16123                           
 16124                           ;incstack = 0
 16125  0058AC  006F FF60  F013    	movff	status,??_TMR4_ISR
 16126  0058B2                     
 16127                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 16128  0058B2  0139               	movlb	57	; () banked
 16129  0058B4  91A7               	bcf	167,0,b	;volatile
 16130  0058B6                     
 16131                           ; BSR set to: 57
 16132                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 16133  0058B6  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 16134  0058B8  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 16135  0058BA  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 16136  0058BC  E109               	bnz	i1u715_20
 16137  0058BE  0E0A               	movlw	10
 16138  0058C0  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 16139  0058C2  A0D8               	btfss	status,0,c
 16140  0058C4  EF66  F02C         	goto	i1u715_21
 16141  0058C8  EF68  F02C         	goto	i1u715_20
 16142  0058CC                     i1u715_21:
 16143  0058CC  EF6E  F02C         	goto	i1l688
 16144  0058D0                     i1u715_20:
 16145  0058D0                     
 16146                           ; BSR set to: 57
 16147                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 16148  0058D0  ECD9  F02D         	call	_TMR4_CallBack	;wreg free
 16149  0058D4                     
 16150                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 16151  0058D4  0E00               	movlw	0
 16152  0058D6  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 16153  0058D8  0E00               	movlw	0
 16154  0058DA  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 16155  0058DC                     i1l688:
 16156  0058DC  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 16157  0058E2  0011               	retfie		f
 16158  0058E4                     __end_of_TMR4_ISR:
 16159                           	callstack 0
 16160                           
 16161 ;; *************** function _TMR4_CallBack *****************
 16162 ;; Defined at:
 16163 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 16164 ;; Parameters:    Size  Location     Type
 16165 ;;		None
 16166 ;; Auto vars:     Size  Location     Type
 16167 ;;		None
 16168 ;; Return value:  Size  Location     Type
 16169 ;;                  1    wreg      void 
 16170 ;; Registers used:
 16171 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16172 ;; Tracked objects:
 16173 ;;		On entry : 0/0
 16174 ;;		On exit  : 0/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16181 ;;Total ram usage:        0 bytes
 16182 ;; Hardware stack levels used: 1
 16183 ;; Hardware stack levels required when called: 5
 16184 ;; This function calls:
 16185 ;;		Absolute function
 16186 ;;		_TMR4_10msISR
 16187 ;;		_TMR4_DefaultInterruptHandler
 16188 ;; This function is called by:
 16189 ;;		_TMR4_ISR
 16190 ;; This function uses a non-reentrant model
 16191 ;;
 16192                           
 16193                           	psect	text87
 16194  005BB2                     __ptext87:
 16195                           	callstack 0
 16196  005BB2                     _TMR4_CallBack:
 16197                           	callstack 12
 16198  005BB2                     
 16199                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16200  005BB2  0101               	movlb	1	; () banked
 16201  005BB4  518A               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16202  005BB6  118B               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16203  005BB8  B4D8               	btfsc	status,2,c
 16204  005BBA  EFE1  F02D         	goto	i1u699_21
 16205  005BBE  EFE3  F02D         	goto	i1u699_20
 16206  005BC2                     i1u699_21:
 16207  005BC2  EFEF  F02D         	goto	i1l692
 16208  005BC6                     i1u699_20:
 16209  005BC6                     
 16210                           ; BSR set to: 1
 16211                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16212  005BC6  D802               	call	i1u700_28
 16213  005BC8  EFEF  F02D         	goto	i1u700_29
 16214  005BCC                     i1u700_28:
 16215  005BCC  0005               	push	
 16216  005BCE  6EFA               	movwf	pclath,c
 16217  005BD0  518A               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16218  005BD2  6EFD               	movwf	tosl,c
 16219  005BD4  518B               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16220  005BD6  6EFE               	movwf	tosh,c
 16221  005BD8  6AFF               	clrf	tosu,c
 16222  005BDA  50FA               	movf	pclath,w,c
 16223  005BDC  0012               	return		;indir
 16224  005BDE                     i1u700_29:
 16225  005BDE                     i1l692:
 16226  005BDE  0012               	return		;funcret
 16227  005BE0                     __end_of_TMR4_CallBack:
 16228                           	callstack 0
 16229                           
 16230 ;; *************** function _TMR4_10msISR *****************
 16231 ;; Defined at:
 16232 ;;		line 62 in file "main.c"
 16233 ;; Parameters:    Size  Location     Type
 16234 ;;		None
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;		None
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  1    wreg      void 
 16239 ;; Registers used:
 16240 ;;		status,2, status,0
 16241 ;; Tracked objects:
 16242 ;;		On entry : 0/0
 16243 ;;		On exit  : 0/0
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;Total ram usage:        0 bytes
 16251 ;; Hardware stack levels used: 1
 16252 ;; Hardware stack levels required when called: 4
 16253 ;; This function calls:
 16254 ;;		Nothing
 16255 ;; This function is called by:
 16256 ;;		_main
 16257 ;;		_TMR4_CallBack
 16258 ;; This function uses a non-reentrant model
 16259 ;;
 16260                           
 16261                           	psect	text88
 16262  005E6C                     __ptext88:
 16263                           	callstack 0
 16264  005E6C                     _TMR4_10msISR:
 16265                           	callstack 12
 16266  005E6C                     
 16267                           ;main.c: 63:     ++cycle10ms;
 16268  005E6C  0100               	movlb	0	; () banked
 16269  005E6E  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 16270                           
 16271                           ;main.c: 64:     ++roundTimeCount;
 16272  005E70  4A3E               	infsnz	_roundTimeCount^0,f,c	;volatile
 16273  005E72  2A3F               	incf	(_roundTimeCount+1)^0,f,c	;volatile
 16274  005E74                     
 16275                           ; BSR set to: 0
 16276  005E74  0012               	return		;funcret
 16277  005E76                     __end_of_TMR4_10msISR:
 16278                           	callstack 0
 16279                           
 16280 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16281 ;; Defined at:
 16282 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;		None
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;		None
 16287 ;; Return value:  Size  Location     Type
 16288 ;;                  1    wreg      void 
 16289 ;; Registers used:
 16290 ;;		None
 16291 ;; Tracked objects:
 16292 ;;		On entry : 0/0
 16293 ;;		On exit  : 0/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16300 ;;Total ram usage:        0 bytes
 16301 ;; Hardware stack levels used: 1
 16302 ;; Hardware stack levels required when called: 4
 16303 ;; This function calls:
 16304 ;;		Nothing
 16305 ;; This function is called by:
 16306 ;;		_TMR4_Initialize
 16307 ;;		_TMR4_CallBack
 16308 ;; This function uses a non-reentrant model
 16309 ;;
 16310                           
 16311                           	psect	text89
 16312  005E80                     __ptext89:
 16313                           	callstack 0
 16314  005E80                     _TMR4_DefaultInterruptHandler:
 16315                           	callstack 12
 16316  005E80  0012               	return		;funcret
 16317  005E82                     __end_of_TMR4_DefaultInterruptHandler:
 16318                           	callstack 0
 16319                           
 16320 ;; *************** function _Default_ISR *****************
 16321 ;; Defined at:
 16322 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16323 ;; Parameters:    Size  Location     Type
 16324 ;;		None
 16325 ;; Auto vars:     Size  Location     Type
 16326 ;;		None
 16327 ;; Return value:  Size  Location     Type
 16328 ;;                  1    wreg      void 
 16329 ;; Registers used:
 16330 ;;		None
 16331 ;; Tracked objects:
 16332 ;;		On entry : 0/0
 16333 ;;		On exit  : 0/0
 16334 ;;		Unchanged: 0/0
 16335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16340 ;;Total ram usage:        0 bytes
 16341 ;; Hardware stack levels used: 1
 16342 ;; This function calls:
 16343 ;;		Nothing
 16344 ;; This function is called by:
 16345 ;;		Interrupt level 2
 16346 ;; This function uses a non-reentrant model
 16347 ;;
 16348                           
 16349                           	psect	text90
 16350  005E84                     __ptext90:
 16351                           	callstack 0
 16352  005E84                     _Default_ISR:
 16353                           	callstack 14
 16354  005E84  0011               	retfie		f
 16355  005E86                     __end_of_Default_ISR:
 16356                           	callstack 0
 16357                           
 16358 ;; *************** function _CCP3_CaptureISR *****************
 16359 ;; Defined at:
 16360 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;		None
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16365 ;; Return value:  Size  Location     Type
 16366 ;;                  1    wreg      void 
 16367 ;; Registers used:
 16368 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16369 ;; Tracked objects:
 16370 ;;		On entry : 0/0
 16371 ;;		On exit  : 0/0
 16372 ;;		Unchanged: 0/0
 16373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16378 ;;Total ram usage:        2 bytes
 16379 ;; Hardware stack levels used: 1
 16380 ;; Hardware stack levels required when called: 1
 16381 ;; This function calls:
 16382 ;;		Absolute function
 16383 ;;		_CCP3_DefaultCallBack
 16384 ;; This function is called by:
 16385 ;;		Interrupt level 2
 16386 ;; This function uses a non-reentrant model
 16387 ;;
 16388                           
 16389                           	psect	text91
 16390  005A58                     __ptext91:
 16391                           	callstack 0
 16392  005A58                     _CCP3_CaptureISR:
 16393                           	callstack 13
 16394  005A58                     
 16395                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16396  005A58  0139               	movlb	57	; () banked
 16397  005A5A  93A9               	bcf	169,1,b	;volatile
 16398                           
 16399                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16400  005A5C  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16401                           
 16402                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16403  005A62  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16404  005A68                     
 16405                           ; BSR set to: 57
 16406                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16407  005A68  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16408  005A6C  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16409  005A70  D802               	call	i2u711_48
 16410  005A72  EF45  F02D         	goto	i2u711_49
 16411  005A76                     i2u711_48:
 16412  005A76  0005               	push	
 16413  005A78  6EFA               	movwf	pclath,c
 16414  005A7A  0101               	movlb	1	; () banked
 16415  005A7C  5194               	movf	_CCP3_CallBack& (0+255),w,b
 16416  005A7E  6EFD               	movwf	tosl,c
 16417  005A80  5195               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16418  005A82  6EFE               	movwf	tosh,c
 16419  005A84  6AFF               	clrf	tosu,c
 16420  005A86  50FA               	movf	pclath,w,c
 16421  005A88  0012               	return		;indir
 16422  005A8A                     i2u711_49:
 16423  005A8A  0011               	retfie		f
 16424  005A8C                     __end_of_CCP3_CaptureISR:
 16425                           	callstack 0
 16426                           
 16427 ;; *************** function _CCP3_DefaultCallBack *****************
 16428 ;; Defined at:
 16429 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16430 ;; Parameters:    Size  Location     Type
 16431 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16432 ;; Auto vars:     Size  Location     Type
 16433 ;;		None
 16434 ;; Return value:  Size  Location     Type
 16435 ;;                  1    wreg      void 
 16436 ;; Registers used:
 16437 ;;		wreg, status,2, status,0
 16438 ;; Tracked objects:
 16439 ;;		On entry : 0/0
 16440 ;;		On exit  : 0/0
 16441 ;;		Unchanged: 0/0
 16442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16447 ;;Total ram usage:        2 bytes
 16448 ;; Hardware stack levels used: 1
 16449 ;; This function calls:
 16450 ;;		Nothing
 16451 ;; This function is called by:
 16452 ;;		_CCP3_Initialize
 16453 ;;		_CCP3_CaptureISR
 16454 ;; This function uses a non-reentrant model
 16455 ;;
 16456                           
 16457                           	psect	text92
 16458  00591A                     __ptext92:
 16459                           	callstack 0
 16460  00591A                     _CCP3_DefaultCallBack:
 16461                           	callstack 13
 16462  00591A                     
 16463                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16464  00591A  AECD               	btfss	205,7,c	;volatile
 16465  00591C  EF92  F02C         	goto	i2u696_41
 16466  005920  EF94  F02C         	goto	i2u696_40
 16467  005924                     i2u696_41:
 16468  005924  EF9A  F02C         	goto	i2l7133
 16469  005928                     i2u696_40:
 16470  005928                     
 16471                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16472  005928  C001  F138         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16473  00592C  C002  F139         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16474                           
 16475                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16476  005930  EFA7  F02C         	goto	i2l438
 16477  005934                     i2l7133:
 16478                           
 16479                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16480  005934  0101               	movlb	1	; () banked
 16481  005936  5138               	movf	_distLeftM& (0+255),w,b
 16482  005938  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16483  00593A  0100               	movlb	0	; () banked
 16484  00593C  6FF5               	movwf	_distLeft& (0+255),b	;volatile
 16485  00593E  0101               	movlb	1	; () banked
 16486  005940  5139               	movf	(_distLeftM+1)& (0+255),w,b
 16487  005942  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16488  005944  0100               	movlb	0	; () banked
 16489  005946  6FF6               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16490  005948                     
 16491                           ; BSR set to: 0
 16492                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16493  005948  90D8               	bcf	status,0,c
 16494  00594A  33F6               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16495  00594C  33F5               	rrcf	_distLeft& (0+255),f,b	;volatile
 16496  00594E                     i2l438:
 16497  00594E  0012               	return		;funcret
 16498  005950                     __end_of_CCP3_DefaultCallBack:
 16499                           	callstack 0
 16500                           
 16501 ;; *************** function _CCP4_CaptureISR *****************
 16502 ;; Defined at:
 16503 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16504 ;; Parameters:    Size  Location     Type
 16505 ;;		None
 16506 ;; Auto vars:     Size  Location     Type
 16507 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16508 ;; Return value:  Size  Location     Type
 16509 ;;                  1    wreg      void 
 16510 ;; Registers used:
 16511 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16512 ;; Tracked objects:
 16513 ;;		On entry : 0/0
 16514 ;;		On exit  : 0/0
 16515 ;;		Unchanged: 0/0
 16516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16521 ;;Total ram usage:        2 bytes
 16522 ;; Hardware stack levels used: 1
 16523 ;; Hardware stack levels required when called: 1
 16524 ;; This function calls:
 16525 ;;		Absolute function
 16526 ;;		_CCP4_DefaultCallBack
 16527 ;; This function is called by:
 16528 ;;		Interrupt level 2
 16529 ;; This function uses a non-reentrant model
 16530 ;;
 16531                           
 16532                           	psect	text93
 16533  005A8C                     __ptext93:
 16534                           	callstack 0
 16535  005A8C                     _CCP4_CaptureISR:
 16536                           	callstack 13
 16537  005A8C                     
 16538                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16539  005A8C  0139               	movlb	57	; () banked
 16540  005A8E  91AA               	bcf	170,0,b	;volatile
 16541                           
 16542                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16543  005A90  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16544                           
 16545                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16546  005A96  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16547  005A9C                     
 16548                           ; BSR set to: 57
 16549                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16550  005A9C  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16551  005AA0  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16552  005AA4  D802               	call	i2u712_48
 16553  005AA6  EF5F  F02D         	goto	i2u712_49
 16554  005AAA                     i2u712_48:
 16555  005AAA  0005               	push	
 16556  005AAC  6EFA               	movwf	pclath,c
 16557  005AAE  0101               	movlb	1	; () banked
 16558  005AB0  5192               	movf	_CCP4_CallBack& (0+255),w,b
 16559  005AB2  6EFD               	movwf	tosl,c
 16560  005AB4  5193               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16561  005AB6  6EFE               	movwf	tosh,c
 16562  005AB8  6AFF               	clrf	tosu,c
 16563  005ABA  50FA               	movf	pclath,w,c
 16564  005ABC  0012               	return		;indir
 16565  005ABE                     i2u712_49:
 16566  005ABE  0011               	retfie		f
 16567  005AC0                     __end_of_CCP4_CaptureISR:
 16568                           	callstack 0
 16569                           
 16570 ;; *************** function _CCP4_DefaultCallBack *****************
 16571 ;; Defined at:
 16572 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;		None
 16577 ;; Return value:  Size  Location     Type
 16578 ;;                  1    wreg      void 
 16579 ;; Registers used:
 16580 ;;		wreg, status,2, status,0
 16581 ;; Tracked objects:
 16582 ;;		On entry : 0/0
 16583 ;;		On exit  : 0/0
 16584 ;;		Unchanged: 0/0
 16585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16590 ;;Total ram usage:        2 bytes
 16591 ;; Hardware stack levels used: 1
 16592 ;; This function calls:
 16593 ;;		Nothing
 16594 ;; This function is called by:
 16595 ;;		_CCP4_Initialize
 16596 ;;		_CCP4_CaptureISR
 16597 ;; This function uses a non-reentrant model
 16598 ;;
 16599                           
 16600                           	psect	text94
 16601  005950                     __ptext94:
 16602                           	callstack 0
 16603  005950                     _CCP4_DefaultCallBack:
 16604                           	callstack 13
 16605  005950                     
 16606                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16607  005950  ACCD               	btfss	205,6,c	;volatile
 16608  005952  EFAD  F02C         	goto	i2u697_41
 16609  005956  EFAF  F02C         	goto	i2u697_40
 16610  00595A                     i2u697_41:
 16611  00595A  EFB5  F02C         	goto	i2l7141
 16612  00595E                     i2u697_40:
 16613  00595E                     
 16614                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16615  00595E  C005  F136         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16616  005962  C006  F137         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16617                           
 16618                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16619  005966  EFC2  F02C         	goto	i2l476
 16620  00596A                     i2l7141:
 16621                           
 16622                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16623  00596A  0101               	movlb	1	; () banked
 16624  00596C  5136               	movf	_distRightM& (0+255),w,b
 16625  00596E  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16626  005970  0100               	movlb	0	; () banked
 16627  005972  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16628  005974  0101               	movlb	1	; () banked
 16629  005976  5137               	movf	(_distRightM+1)& (0+255),w,b
 16630  005978  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16631  00597A  0100               	movlb	0	; () banked
 16632  00597C  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16633  00597E                     
 16634                           ; BSR set to: 0
 16635                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16636  00597E  90D8               	bcf	status,0,c
 16637  005980  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16638  005982  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16639  005984                     i2l476:
 16640  005984  0012               	return		;funcret
 16641  005986                     __end_of_CCP4_DefaultCallBack:
 16642                           	callstack 0
 16643                           
 16644 ;; *************** function _TMR5_GATE_ISR *****************
 16645 ;; Defined at:
 16646 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16647 ;; Parameters:    Size  Location     Type
 16648 ;;		None
 16649 ;; Auto vars:     Size  Location     Type
 16650 ;;		None
 16651 ;; Return value:  Size  Location     Type
 16652 ;;                  1    wreg      void 
 16653 ;; Registers used:
 16654 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16655 ;; Tracked objects:
 16656 ;;		On entry : 0/0
 16657 ;;		On exit  : 0/0
 16658 ;;		Unchanged: 0/0
 16659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16664 ;;Total ram usage:        0 bytes
 16665 ;; Hardware stack levels used: 1
 16666 ;; Hardware stack levels required when called: 3
 16667 ;; This function calls:
 16668 ;;		Absolute function
 16669 ;;		_TMR5_DefaultGateInterruptHandler
 16670 ;; This function is called by:
 16671 ;;		Interrupt level 2
 16672 ;; This function uses a non-reentrant model
 16673 ;;
 16674                           
 16675                           	psect	text95
 16676  005AF4                     __ptext95:
 16677                           	callstack 0
 16678  005AF4                     _TMR5_GATE_ISR:
 16679                           	callstack 11
 16680  005AF4                     
 16681                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16682  005AF4  0139               	movlb	57	; () banked
 16683  005AF6  9FA8               	bcf	168,7,b	;volatile
 16684  005AF8                     
 16685                           ; BSR set to: 57
 16686                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16687  005AF8  0101               	movlb	1	; () banked
 16688  005AFA  518E               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16689  005AFC  118F               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16690  005AFE  B4D8               	btfsc	status,2,c
 16691  005B00  EF84  F02D         	goto	i2u713_41
 16692  005B04  EF86  F02D         	goto	i2u713_40
 16693  005B08                     i2u713_41:
 16694  005B08  EF92  F02D         	goto	i2l552
 16695  005B0C                     i2u713_40:
 16696  005B0C                     
 16697                           ; BSR set to: 1
 16698                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16699  005B0C  D802               	call	i2u714_48
 16700  005B0E  EF92  F02D         	goto	i2u714_49
 16701  005B12                     i2u714_48:
 16702  005B12  0005               	push	
 16703  005B14  6EFA               	movwf	pclath,c
 16704  005B16  518E               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16705  005B18  6EFD               	movwf	tosl,c
 16706  005B1A  518F               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16707  005B1C  6EFE               	movwf	tosh,c
 16708  005B1E  6AFF               	clrf	tosu,c
 16709  005B20  50FA               	movf	pclath,w,c
 16710  005B22  0012               	return		;indir
 16711  005B24                     i2u714_49:
 16712  005B24                     i2l552:
 16713  005B24  0011               	retfie		f
 16714  005B26                     __end_of_TMR5_GATE_ISR:
 16715                           	callstack 0
 16716                           
 16717 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16718 ;; Defined at:
 16719 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16720 ;; Parameters:    Size  Location     Type
 16721 ;;		None
 16722 ;; Auto vars:     Size  Location     Type
 16723 ;;		None
 16724 ;; Return value:  Size  Location     Type
 16725 ;;                  1    wreg      void 
 16726 ;; Registers used:
 16727 ;;		wreg, status,2, status,0, cstack
 16728 ;; Tracked objects:
 16729 ;;		On entry : 0/0
 16730 ;;		On exit  : 0/0
 16731 ;;		Unchanged: 0/0
 16732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16737 ;;Total ram usage:        0 bytes
 16738 ;; Hardware stack levels used: 1
 16739 ;; Hardware stack levels required when called: 2
 16740 ;; This function calls:
 16741 ;;		_TMR5_ReadTimer
 16742 ;;		_TMR5_Reload
 16743 ;; This function is called by:
 16744 ;;		_TMR5_Initialize
 16745 ;;		_TMR5_GATE_ISR
 16746 ;; This function uses a non-reentrant model
 16747 ;;
 16748                           
 16749                           	psect	text96
 16750  005D48                     __ptext96:
 16751                           	callstack 0
 16752  005D48                     _TMR5_DefaultGateInterruptHandler:
 16753                           	callstack 11
 16754  005D48                     
 16755                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16756  005D48  EC82  F02E         	call	_TMR5_ReadTimer	;wreg free
 16757  005D4C  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16758  005D50  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16759  005D54                     
 16760                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16761  005D54  0100               	movlb	0	; () banked
 16762  005D56  90D8               	bcf	status,0,c
 16763  005D58  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16764  005D5A  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 16765  005D5C                     
 16766                           ; BSR set to: 0
 16767                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16768  005D5C  ECFD  F02E         	call	_TMR5_Reload	;wreg free
 16769  005D60                     
 16770                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16771  005D60  0139               	movlb	57	; () banked
 16772  005D62  9FA8               	bcf	168,7,b	;volatile
 16773  005D64                     
 16774                           ; BSR set to: 57
 16775  005D64  0012               	return		;funcret
 16776  005D66                     __end_of_TMR5_DefaultGateInterruptHandler:
 16777                           	callstack 0
 16778                           
 16779 ;; *************** function _TMR5_Reload *****************
 16780 ;; Defined at:
 16781 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16782 ;; Parameters:    Size  Location     Type
 16783 ;;		None
 16784 ;; Auto vars:     Size  Location     Type
 16785 ;;		None
 16786 ;; Return value:  Size  Location     Type
 16787 ;;                  1    wreg      void 
 16788 ;; Registers used:
 16789 ;;		wreg, status,2, cstack
 16790 ;; Tracked objects:
 16791 ;;		On entry : 0/0
 16792 ;;		On exit  : 0/0
 16793 ;;		Unchanged: 0/0
 16794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16799 ;;Total ram usage:        0 bytes
 16800 ;; Hardware stack levels used: 1
 16801 ;; Hardware stack levels required when called: 1
 16802 ;; This function calls:
 16803 ;;		_TMR5_WriteTimer
 16804 ;; This function is called by:
 16805 ;;		_TMR5_DefaultGateInterruptHandler
 16806 ;; This function uses a non-reentrant model
 16807 ;;
 16808                           
 16809                           	psect	text97
 16810  005DFA                     __ptext97:
 16811                           	callstack 0
 16812  005DFA                     _TMR5_Reload:
 16813                           	callstack 11
 16814  005DFA                     
 16815                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16816  005DFA  C190  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16817  005DFE  C191  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16818  005E02  EC32  F02E         	call	_TMR5_WriteTimer	;wreg free
 16819  005E06  0012               	return		;funcret
 16820  005E08                     __end_of_TMR5_Reload:
 16821                           	callstack 0
 16822                           
 16823 ;; *************** function _TMR5_WriteTimer *****************
 16824 ;; Defined at:
 16825 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;  timerVal        2    8[COMRAM] unsigned short 
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;		None
 16830 ;; Return value:  Size  Location     Type
 16831 ;;                  1    wreg      void 
 16832 ;; Registers used:
 16833 ;;		wreg, status,2
 16834 ;; Tracked objects:
 16835 ;;		On entry : 0/0
 16836 ;;		On exit  : 0/0
 16837 ;;		Unchanged: 0/0
 16838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16843 ;;Total ram usage:        2 bytes
 16844 ;; Hardware stack levels used: 1
 16845 ;; This function calls:
 16846 ;;		Nothing
 16847 ;; This function is called by:
 16848 ;;		_TMR5_Reload
 16849 ;; This function uses a non-reentrant model
 16850 ;;
 16851                           
 16852                           	psect	text98
 16853  005C64                     __ptext98:
 16854                           	callstack 0
 16855  005C64                     _TMR5_WriteTimer:
 16856                           	callstack 11
 16857  005C64                     
 16858                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16859  005C64  A49A               	btfss	154,2,c	;volatile
 16860  005C66  EF37  F02E         	goto	i2u634_41
 16861  005C6A  EF39  F02E         	goto	i2u634_40
 16862  005C6E                     i2u634_41:
 16863  005C6E  EF42  F02E         	goto	i2l6581
 16864  005C72                     i2u634_40:
 16865  005C72                     
 16866                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16867  005C72  909A               	bcf	154,0,c	;volatile
 16868  005C74                     
 16869                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16870  005C74  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16871  005C76  6E99               	movwf	153,c	;volatile
 16872  005C78                     
 16873                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16874  005C78  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16875  005C7E                     
 16876                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16877  005C7E  809A               	bsf	154,0,c	;volatile
 16878                           
 16879                           ;mcc_generated_files/tmr5.c: 146:     }
 16880  005C80  EF47  F02E         	goto	i2l534
 16881  005C84                     i2l6581:
 16882                           
 16883                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16884  005C84  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16885  005C86  6E99               	movwf	153,c	;volatile
 16886  005C88                     
 16887                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16888  005C88  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16889  005C8E                     i2l534:
 16890  005C8E  0012               	return		;funcret
 16891  005C90                     __end_of_TMR5_WriteTimer:
 16892                           	callstack 0
 16893                           
 16894 ;; *************** function _TMR5_ReadTimer *****************
 16895 ;; Defined at:
 16896 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16897 ;; Parameters:    Size  Location     Type
 16898 ;;		None
 16899 ;; Auto vars:     Size  Location     Type
 16900 ;;  readVal         2   12[COMRAM] unsigned short 
 16901 ;;  readValLow      1   15[COMRAM] unsigned char 
 16902 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16903 ;; Return value:  Size  Location     Type
 16904 ;;                  2    8[COMRAM] unsigned short 
 16905 ;; Registers used:
 16906 ;;		wreg, status,2
 16907 ;; Tracked objects:
 16908 ;;		On entry : 0/0
 16909 ;;		On exit  : 0/0
 16910 ;;		Unchanged: 0/0
 16911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16913 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16915 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16916 ;;Total ram usage:        8 bytes
 16917 ;; Hardware stack levels used: 1
 16918 ;; This function calls:
 16919 ;;		Nothing
 16920 ;; This function is called by:
 16921 ;;		_TMR5_DefaultGateInterruptHandler
 16922 ;; This function uses a non-reentrant model
 16923 ;;
 16924                           
 16925                           	psect	text99
 16926  005D04                     __ptext99:
 16927                           	callstack 0
 16928  005D04                     _TMR5_ReadTimer:
 16929                           	callstack 12
 16930  005D04                     
 16931                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16932  005D04  829A               	bsf	154,1,c	;volatile
 16933                           
 16934                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16935  005D06  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16936                           
 16937                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16938  005D0C  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16939  005D12                     
 16940                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16941  005D12  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16942  005D14  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16943  005D16  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16944  005D18  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16945  005D1A  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16946  005D1E                     
 16947                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16948  005D1E  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16949  005D22  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16950  005D26  0012               	return		;funcret
 16951  005D28                     __end_of_TMR5_ReadTimer:
 16952                           	callstack 0
 16953                           
 16954 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16955 ;; Defined at:
 16956 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16957 ;; Parameters:    Size  Location     Type
 16958 ;;		None
 16959 ;; Auto vars:     Size  Location     Type
 16960 ;;		None
 16961 ;; Return value:  Size  Location     Type
 16962 ;;                  1    wreg      void 
 16963 ;; Registers used:
 16964 ;;		wreg, status,2, status,0
 16965 ;; Tracked objects:
 16966 ;;		On entry : 0/0
 16967 ;;		On exit  : 0/0
 16968 ;;		Unchanged: 0/0
 16969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16974 ;;Total ram usage:        0 bytes
 16975 ;; Hardware stack levels used: 1
 16976 ;; This function calls:
 16977 ;;		Nothing
 16978 ;; This function is called by:
 16979 ;;		Interrupt level 2
 16980 ;; This function uses a non-reentrant model
 16981 ;;
 16982                           
 16983                           	psect	text100
 16984  0055F8                     __ptext100:
 16985                           	callstack 0
 16986  0055F8                     _SMT1_PR_ACQ_ISR:
 16987                           	callstack 14
 16988  0055F8                     
 16989                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16990  0055F8  0139               	movlb	57	; () banked
 16991  0055FA  9DA1               	bcf	161,6,b	;volatile
 16992  0055FC                     
 16993                           ; BSR set to: 57
 16994                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16995  0055FC  013F               	movlb	63	; () banked
 16996  0055FE  5115               	movf	21,w,b	;volatile
 16997  005600  6E48               	movwf	_smtPeriod^0,c	;volatile
 16998  005602  5116               	movf	22,w,b	;volatile
 16999  005604  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17000  005606  5117               	movf	23,w,b	;volatile
 17001  005608  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17002  00560A  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 17003  00560C                     
 17004                           ; BSR set to: 63
 17005                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 17006  00560C  013C               	movlb	60	; () banked
 17007  00560E  AB60               	btfss	96,5,b	;volatile
 17008  005610  EF0C  F02B         	goto	i2u716_41
 17009  005614  EF0E  F02B         	goto	i2u716_40
 17010  005618                     i2u716_41:
 17011  005618  EF17  F02B         	goto	i2l7255
 17012  00561C                     i2u716_40:
 17013  00561C                     
 17014                           ; BSR set to: 60
 17015  00561C  0E01               	movlw	1
 17016  00561E  0101               	movlb	1	; () banked
 17017  005620  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17018  005622  0E00               	movlw	0
 17019  005624  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17020  005626  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17021  005628  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17022  00562A  EF20  F02B         	goto	i2l856
 17023  00562E                     i2l7255:
 17024                           
 17025                           ; BSR set to: 60
 17026  00562E  0EFF               	movlw	255
 17027  005630  0101               	movlb	1	; () banked
 17028  005632  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17029  005634  0EFF               	movlw	255
 17030  005636  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17031  005638  0EFF               	movlw	255
 17032  00563A  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17033  00563C  0EFF               	movlw	255
 17034  00563E  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17035  005640                     i2l856:
 17036                           
 17037                           ; BSR set to: 1
 17038  005640  0011               	retfie		f
 17039  005642                     __end_of_SMT1_PR_ACQ_ISR:
 17040                           	callstack 0
 17041                           
 17042 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 17043 ;; Defined at:
 17044 ;;		line 203 in file "mcc_generated_files/smt1.c"
 17045 ;; Parameters:    Size  Location     Type
 17046 ;;		None
 17047 ;; Auto vars:     Size  Location     Type
 17048 ;;		None
 17049 ;; Return value:  Size  Location     Type
 17050 ;;                  1    wreg      void 
 17051 ;; Registers used:
 17052 ;;		wreg, status,2, status,0
 17053 ;; Tracked objects:
 17054 ;;		On entry : 0/0
 17055 ;;		On exit  : 0/0
 17056 ;;		Unchanged: 0/0
 17057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17062 ;;Total ram usage:        0 bytes
 17063 ;; Hardware stack levels used: 1
 17064 ;; This function calls:
 17065 ;;		Nothing
 17066 ;; This function is called by:
 17067 ;;		Interrupt level 2
 17068 ;; This function uses a non-reentrant model
 17069 ;;
 17070                           
 17071                           	psect	text101
 17072  0054C4                     __ptext101:
 17073                           	callstack 0
 17074  0054C4                     _SMT1_PW_ACQ_ISR:
 17075                           	callstack 14
 17076  0054C4                     
 17077                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 17078  0054C4  0139               	movlb	57	; () banked
 17079  0054C6  9FA1               	bcf	161,7,b	;volatile
 17080  0054C8                     
 17081                           ; BSR set to: 57
 17082                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 17083  0054C8  013F               	movlb	63	; () banked
 17084  0054CA  5118               	movf	24,w,b	;volatile
 17085  0054CC  0101               	movlb	1	; () banked
 17086  0054CE  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17087  0054D0  013F               	movlb	63	; () banked
 17088  0054D2  5119               	movf	25,w,b	;volatile
 17089  0054D4  0101               	movlb	1	; () banked
 17090  0054D6  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17091  0054D8  013F               	movlb	63	; () banked
 17092  0054DA  511A               	movf	26,w,b	;volatile
 17093  0054DC  0101               	movlb	1	; () banked
 17094  0054DE  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17095  0054E0  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 17096  0054E2                     
 17097                           ; BSR set to: 1
 17098                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 17099  0054E2  013C               	movlb	60	; () banked
 17100  0054E4  AB60               	btfss	96,5,b	;volatile
 17101  0054E6  EF77  F02A         	goto	i2u717_41
 17102  0054EA  EF79  F02A         	goto	i2u717_40
 17103  0054EE                     i2u717_41:
 17104  0054EE  EF82  F02A         	goto	i2l7265
 17105  0054F2                     i2u717_40:
 17106  0054F2                     
 17107                           ; BSR set to: 60
 17108  0054F2  0E01               	movlw	1
 17109  0054F4  0101               	movlb	1	; () banked
 17110  0054F6  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17111  0054F8  0E00               	movlw	0
 17112  0054FA  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17113  0054FC  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17114  0054FE  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17115  005500  EF8B  F02A         	goto	i2l863
 17116  005504                     i2l7265:
 17117                           
 17118                           ; BSR set to: 60
 17119  005504  0EFF               	movlw	255
 17120  005506  0101               	movlb	1	; () banked
 17121  005508  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17122  00550A  0EFF               	movlw	255
 17123  00550C  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17124  00550E  0EFF               	movlw	255
 17125  005510  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17126  005512  0EFF               	movlw	255
 17127  005514  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17128  005516                     i2l863:
 17129                           
 17130                           ; BSR set to: 1
 17131  005516  0011               	retfie		f
 17132  005518                     __end_of_SMT1_PW_ACQ_ISR:
 17133                           	callstack 0
 17134                           
 17135 ;; *************** function _SMT1_Overflow_ISR *****************
 17136 ;; Defined at:
 17137 ;;		line 213 in file "mcc_generated_files/smt1.c"
 17138 ;; Parameters:    Size  Location     Type
 17139 ;;		None
 17140 ;; Auto vars:     Size  Location     Type
 17141 ;;		None
 17142 ;; Return value:  Size  Location     Type
 17143 ;;                  1    wreg      void 
 17144 ;; Registers used:
 17145 ;;		wreg, status,2
 17146 ;; Tracked objects:
 17147 ;;		On entry : 0/0
 17148 ;;		On exit  : 0/0
 17149 ;;		Unchanged: 0/0
 17150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17155 ;;Total ram usage:        0 bytes
 17156 ;; Hardware stack levels used: 1
 17157 ;; This function calls:
 17158 ;;		Nothing
 17159 ;; This function is called by:
 17160 ;;		Interrupt level 2
 17161 ;; This function uses a non-reentrant model
 17162 ;;
 17163                           
 17164                           	psect	text102
 17165  005CB8                     __ptext102:
 17166                           	callstack 0
 17167  005CB8                     _SMT1_Overflow_ISR:
 17168                           	callstack 14
 17169  005CB8                     
 17170                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 17171  005CB8  0139               	movlb	57	; () banked
 17172  005CBA  9BA1               	bcf	161,5,b	;volatile
 17173  005CBC                     
 17174                           ; BSR set to: 57
 17175                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 17176  005CBC  0E00               	movlw	0
 17177  005CBE  6E48               	movwf	_smtPeriod^0,c	;volatile
 17178  005CC0  0E00               	movlw	0
 17179  005CC2  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17180  005CC4  0E00               	movlw	0
 17181  005CC6  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17182  005CC8  0E00               	movlw	0
 17183  005CCA  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 17184                           
 17185                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 17186  005CCC  0E00               	movlw	0
 17187  005CCE  0101               	movlb	1	; () banked
 17188  005CD0  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17189  005CD2  0E00               	movlw	0
 17190  005CD4  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17191  005CD6  0E00               	movlw	0
 17192  005CD8  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17193  005CDA  0E00               	movlw	0
 17194  005CDC  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 17195  005CDE                     
 17196                           ; BSR set to: 1
 17197  005CDE  0011               	retfie		f
 17198  005CE0                     __end_of_SMT1_Overflow_ISR:
 17199                           	callstack 0
 17200                           
 17201                           ;
 17202                           ; Interrupt Vector Table @ 0x8
 17203                           ;
 17204                           
 17205                           	psect	ivt0x8
 17206  000008                     __pivt0x8:
 17207                           	callstack 0
 17208  000008                     ivt0x8_base:
 17209                           	callstack 0
 17210                           
 17211                           ; Vector 0 : SWINT
 17212  000008  17A1               	dw	_Default_ISR shr (0+2)
 17213                           
 17214                           ; Vector 1 : HLVD
 17215  00000A  17A1               	dw	_Default_ISR shr (0+2)
 17216                           
 17217                           ; Vector 2 : OSF
 17218  00000C  17A1               	dw	_Default_ISR shr (0+2)
 17219                           
 17220                           ; Vector 3 : CSW
 17221  00000E  17A1               	dw	_Default_ISR shr (0+2)
 17222                           
 17223                           ; Vector 4 : NVM
 17224  000010  17A1               	dw	_Default_ISR shr (0+2)
 17225                           
 17226                           ; Vector 5 : SCAN
 17227  000012  17A1               	dw	_Default_ISR shr (0+2)
 17228                           
 17229                           ; Vector 6 : CRC
 17230  000014  17A1               	dw	_Default_ISR shr (0+2)
 17231                           
 17232                           ; Vector 7 : IOC
 17233  000016  17A1               	dw	_Default_ISR shr (0+2)
 17234                           
 17235                           ; Vector 8 : INT0
 17236  000018  17A1               	dw	_Default_ISR shr (0+2)
 17237                           
 17238                           ; Vector 9 : ZCD
 17239  00001A  17A1               	dw	_Default_ISR shr (0+2)
 17240                           
 17241                           ; Vector 10 : AD
 17242  00001C  17A1               	dw	_Default_ISR shr (0+2)
 17243                           
 17244                           ; Vector 11 : ADT
 17245  00001E  17A1               	dw	_Default_ISR shr (0+2)
 17246                           
 17247                           ; Vector 12 : CMP1
 17248  000020  17A1               	dw	_Default_ISR shr (0+2)
 17249                           
 17250                           ; Vector 13 : SMT1
 17251  000022  172E               	dw	_SMT1_Overflow_ISR shr (0+2)
 17252                           
 17253                           ; Vector 14 : SMT1PRA
 17254  000024  157E               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17255                           
 17256                           ; Vector 15 : SMT1PRW
 17257  000026  1531               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17258                           
 17259                           ; Vector 16 : DMA1SCNT
 17260  000028  17A1               	dw	_Default_ISR shr (0+2)
 17261                           
 17262                           ; Vector 17 : DMA1DCNT
 17263  00002A  17A1               	dw	_Default_ISR shr (0+2)
 17264                           
 17265                           ; Vector 18 : DMA1OR
 17266  00002C  17A1               	dw	_Default_ISR shr (0+2)
 17267                           
 17268                           ; Vector 19 : DMA1A
 17269  00002E  17A1               	dw	_Default_ISR shr (0+2)
 17270                           
 17271                           ; Vector 20 : SPI1RX
 17272  000030  17A1               	dw	_Default_ISR shr (0+2)
 17273                           
 17274                           ; Vector 21 : SPI1TX
 17275  000032  17A1               	dw	_Default_ISR shr (0+2)
 17276                           
 17277                           ; Vector 22 : SPI1
 17278  000034  17A1               	dw	_Default_ISR shr (0+2)
 17279                           
 17280                           ; Vector 23 : I2C1RX
 17281  000036  17A1               	dw	_Default_ISR shr (0+2)
 17282                           
 17283                           ; Vector 24 : I2C1TX
 17284  000038  17A1               	dw	_Default_ISR shr (0+2)
 17285                           
 17286                           ; Vector 25 : I2C1
 17287  00003A  17A1               	dw	_Default_ISR shr (0+2)
 17288                           
 17289                           ; Vector 26 : I2C1E
 17290  00003C  17A1               	dw	_Default_ISR shr (0+2)
 17291                           
 17292                           ; Vector 27 : U1RX
 17293  00003E  15F2               	dw	_UART1_rx_vect_isr shr (0+2)
 17294                           
 17295                           ; Vector 28 : U1TX
 17296  000040  15E3               	dw	_UART1_tx_vect_isr shr (0+2)
 17297                           
 17298                           ; Vector 29 : U1E
 17299  000042  17A1               	dw	_Default_ISR shr (0+2)
 17300                           
 17301                           ; Vector 30 : U1
 17302  000044  17A1               	dw	_Default_ISR shr (0+2)
 17303                           
 17304                           ; Vector 31 : TMR0
 17305  000046  17A1               	dw	_Default_ISR shr (0+2)
 17306                           
 17307                           ; Vector 32 : TMR1
 17308  000048  17A1               	dw	_Default_ISR shr (0+2)
 17309                           
 17310                           ; Vector 33 : TMR1G
 17311  00004A  17A1               	dw	_Default_ISR shr (0+2)
 17312                           
 17313                           ; Vector 34 : TMR2
 17314  00004C  17A1               	dw	_Default_ISR shr (0+2)
 17315                           
 17316                           ; Vector 35 : CCP1
 17317  00004E  17A1               	dw	_Default_ISR shr (0+2)
 17318                           
 17319                           ; Vector 36 : Undefined
 17320  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17321                           
 17322                           ; Vector 37 : NCO1
 17323  000052  17A1               	dw	_Default_ISR shr (0+2)
 17324                           
 17325                           ; Vector 38 : CWG1
 17326  000054  17A1               	dw	_Default_ISR shr (0+2)
 17327                           
 17328                           ; Vector 39 : CLC1
 17329  000056  17A1               	dw	_Default_ISR shr (0+2)
 17330                           
 17331                           ; Vector 40 : INT1
 17332  000058  17A1               	dw	_Default_ISR shr (0+2)
 17333                           
 17334                           ; Vector 41 : CMP2
 17335  00005A  17A1               	dw	_Default_ISR shr (0+2)
 17336                           
 17337                           ; Vector 42 : DMA2SCNT
 17338  00005C  17A1               	dw	_Default_ISR shr (0+2)
 17339                           
 17340                           ; Vector 43 : DMA2DCNT
 17341  00005E  17A1               	dw	_Default_ISR shr (0+2)
 17342                           
 17343                           ; Vector 44 : DMA2OR
 17344  000060  17A1               	dw	_Default_ISR shr (0+2)
 17345                           
 17346                           ; Vector 45 : DMA2A
 17347  000062  17A1               	dw	_Default_ISR shr (0+2)
 17348                           
 17349                           ; Vector 46 : I2C2RX
 17350  000064  17A1               	dw	_Default_ISR shr (0+2)
 17351                           
 17352                           ; Vector 47 : I2C2TX
 17353  000066  17A1               	dw	_Default_ISR shr (0+2)
 17354                           
 17355                           ; Vector 48 : I2C2
 17356  000068  17A1               	dw	_Default_ISR shr (0+2)
 17357                           
 17358                           ; Vector 49 : I2C2E
 17359  00006A  17A1               	dw	_Default_ISR shr (0+2)
 17360                           
 17361                           ; Vector 50 : U2RX
 17362  00006C  17A1               	dw	_Default_ISR shr (0+2)
 17363                           
 17364                           ; Vector 51 : U2TX
 17365  00006E  17A1               	dw	_Default_ISR shr (0+2)
 17366                           
 17367                           ; Vector 52 : U2E
 17368  000070  17A1               	dw	_Default_ISR shr (0+2)
 17369                           
 17370                           ; Vector 53 : U2
 17371  000072  17A1               	dw	_Default_ISR shr (0+2)
 17372                           
 17373                           ; Vector 54 : TMR3
 17374  000074  17A1               	dw	_Default_ISR shr (0+2)
 17375                           
 17376                           ; Vector 55 : TMR3G
 17377  000076  17A1               	dw	_Default_ISR shr (0+2)
 17378                           
 17379                           ; Vector 56 : TMR4
 17380  000078  162B               	dw	_TMR4_ISR shr (0+2)
 17381                           
 17382                           ; Vector 57 : CCP2
 17383  00007A  17A1               	dw	_Default_ISR shr (0+2)
 17384                           
 17385                           ; Vector 58 : Undefined
 17386  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17387                           
 17388                           ; Vector 59 : CWG2
 17389  00007E  17A1               	dw	_Default_ISR shr (0+2)
 17390                           
 17391                           ; Vector 60 : CLC2
 17392  000080  17A1               	dw	_Default_ISR shr (0+2)
 17393                           
 17394                           ; Vector 61 : INT2
 17395  000082  17A1               	dw	_Default_ISR shr (0+2)
 17396                           
 17397                           ; Vector 62 : Undefined
 17398  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17399                           
 17400                           ; Vector 63 : Undefined
 17401  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17402                           
 17403                           ; Vector 64 : Undefined
 17404  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17405                           
 17406                           ; Vector 65 : Undefined
 17407  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17408                           
 17409                           ; Vector 66 : Undefined
 17410  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17411                           
 17412                           ; Vector 67 : Undefined
 17413  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17414                           
 17415                           ; Vector 68 : Undefined
 17416  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17417                           
 17418                           ; Vector 69 : Undefined
 17419  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17420                           
 17421                           ; Vector 70 : TMR5
 17422  000094  17A1               	dw	_Default_ISR shr (0+2)
 17423                           
 17424                           ; Vector 71 : TMR5G
 17425  000096  16BD               	dw	_TMR5_GATE_ISR shr (0+2)
 17426                           
 17427                           ; Vector 72 : TMR6
 17428  000098  17A1               	dw	_Default_ISR shr (0+2)
 17429                           
 17430                           ; Vector 73 : CCP3
 17431  00009A  1696               	dw	_CCP3_CaptureISR shr (0+2)
 17432                           
 17433                           ; Vector 74 : CWG3
 17434  00009C  17A1               	dw	_Default_ISR shr (0+2)
 17435                           
 17436                           ; Vector 75 : CLC3
 17437  00009E  17A1               	dw	_Default_ISR shr (0+2)
 17438                           
 17439                           ; Vector 76 : Undefined
 17440  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17441                           
 17442                           ; Vector 77 : Undefined
 17443  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17444                           
 17445                           ; Vector 78 : Undefined
 17446  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17447                           
 17448                           ; Vector 79 : Undefined
 17449  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17450                           
 17451                           ; Vector 80 : CCP4
 17452  0000A8  16A3               	dw	_CCP4_CaptureISR shr (0+2)
 17453                           
 17454                           ; Vector 81 : CLC4
 17455  0000AA  17A1               	dw	_Default_ISR shr (0+2)
 17456  0000AC                     ivt0x8_undefint:
 17457                           	callstack 0
 17458  0000AC  00FF               	reset	
 17459                           
 17460                           	psect	text103
 17461  000000                     __ptext103:
 17462                           	callstack 0
 17463  000000                     
 17464                           	psect	rparam
 17465  0000                     
 17466                           	psect	idloc
 17467                           
 17468                           ;Config register IDLOC0 @ 0x200000
 17469                           ;	unspecified, using default values
 17470  200000                     	org	2097152
 17471  200000  0FFF               	dw	4095
 17472                           
 17473                           ;Config register IDLOC1 @ 0x200002
 17474                           ;	unspecified, using default values
 17475  200002                     	org	2097154
 17476  200002  0FFF               	dw	4095
 17477                           
 17478                           ;Config register IDLOC2 @ 0x200004
 17479                           ;	unspecified, using default values
 17480  200004                     	org	2097156
 17481  200004  0FFF               	dw	4095
 17482                           
 17483                           ;Config register IDLOC3 @ 0x200006
 17484                           ;	unspecified, using default values
 17485  200006                     	org	2097158
 17486  200006  0FFF               	dw	4095
 17487                           
 17488                           ;Config register IDLOC4 @ 0x200008
 17489                           ;	unspecified, using default values
 17490  200008                     	org	2097160
 17491  200008  0FFF               	dw	4095
 17492                           
 17493                           ;Config register IDLOC5 @ 0x20000A
 17494                           ;	unspecified, using default values
 17495  20000A                     	org	2097162
 17496  20000A  0FFF               	dw	4095
 17497                           
 17498                           ;Config register IDLOC6 @ 0x20000C
 17499                           ;	unspecified, using default values
 17500  20000C                     	org	2097164
 17501  20000C  0FFF               	dw	4095
 17502                           
 17503                           ;Config register IDLOC7 @ 0x20000E
 17504                           ;	unspecified, using default values
 17505  20000E                     	org	2097166
 17506  20000E  0FFF               	dw	4095
 17507                           
 17508                           	psect	config
 17509                           
 17510                           ;Config register CONFIG1L @ 0x300000
 17511                           ;	External Oscillator Selection
 17512                           ;	FEXTOSC = OFF, Oscillator not enabled
 17513                           ;	Reset Oscillator Selection
 17514                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17515  300000                     	org	3145728
 17516  300000  8C                 	db	140
 17517                           
 17518                           ;Config register CONFIG1H @ 0x300001
 17519                           ;	Clock out Enable bit
 17520                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17521                           ;	PRLOCKED One-Way Set Enable bit
 17522                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17523                           ;	Clock Switch Enable bit
 17524                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17525                           ;	Fail-Safe Clock Monitor Enable bit
 17526                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17527  300001                     	org	3145729
 17528  300001  FF                 	db	255
 17529                           
 17530                           ;Config register CONFIG2L @ 0x300002
 17531                           ;	MCLR Enable bit
 17532                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17533                           ;	Power-up timer selection bits
 17534                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17535                           ;	Multi-vector enable bit
 17536                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17537                           ;	IVTLOCK bit One-way set enable bit
 17538                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17539                           ;	Low Power BOR Enable bit
 17540                           ;	LPBOREN = OFF, ULPBOR disabled
 17541                           ;	Brown-out Reset Enable bits
 17542                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17543  300002                     	org	3145730
 17544  300002  FF                 	db	255
 17545                           
 17546                           ;Config register CONFIG2H @ 0x300003
 17547                           ;	Brown-out Reset Voltage Selection bits
 17548                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17549                           ;	ZCD Disable bit
 17550                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17551                           ;	PPSLOCK bit One-Way Set Enable bit
 17552                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17553                           ;	Stack Full/Underflow Reset Enable bit
 17554                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17555                           ;	Debugger Enable bit
 17556                           ;	DEBUG = OFF, Background debugger disabled
 17557                           ;	Extended Instruction Set Enable bit
 17558                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17559  300003                     	org	3145731
 17560  300003  FF                 	db	255
 17561                           
 17562                           ;Config register CONFIG3L @ 0x300004
 17563                           ;	WDT Period selection bits
 17564                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17565                           ;	WDT operating mode
 17566                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17567  300004                     	org	3145732
 17568  300004  9F                 	db	159
 17569                           
 17570                           ;Config register CONFIG3H @ 0x300005
 17571                           ;	WDT Window Select bits
 17572                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17573                           ;	WDT input clock selector
 17574                           ;	WDTCCS = SC, Software Control
 17575  300005                     	org	3145733
 17576  300005  FF                 	db	255
 17577                           
 17578                           ;Config register CONFIG4L @ 0x300006
 17579                           ;	Boot Block Size selection bits
 17580                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17581                           ;	Boot Block enable bit
 17582                           ;	BBEN = OFF, Boot block disabled
 17583                           ;	Storage Area Flash enable bit
 17584                           ;	SAFEN = OFF, SAF disabled
 17585                           ;	Application Block write protection bit
 17586                           ;	WRTAPP = OFF, Application Block not write protected
 17587  300006                     	org	3145734
 17588  300006  FF                 	db	255
 17589                           
 17590                           ;Config register CONFIG4H @ 0x300007
 17591                           ;	Configuration Register Write Protection bit
 17592                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17593                           ;	Boot Block Write Protection bit
 17594                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17595                           ;	Data EEPROM Write Protection bit
 17596                           ;	WRTD = OFF, Data EEPROM not write-protected
 17597                           ;	SAF Write protection bit
 17598                           ;	WRTSAF = OFF, SAF not Write Protected
 17599                           ;	Low Voltage Programming Enable bit
 17600                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17601  300007                     	org	3145735
 17602  300007  FF                 	db	255
 17603                           
 17604                           ;Config register CONFIG5L @ 0x300008
 17605                           ;	PFM and Data EEPROM Code Protection bit
 17606                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17607  300008                     	org	3145736
 17608  300008  FF                 	db	255
 17609                           
 17610                           ;Config register CONFIG5H @ 0x300009
 17611                           ;	unspecified, using default values
 17612  300009                     	org	3145737
 17613  300009  FF                 	db	255
 17614                           tosu	equ	0x3FFF
 17615                           tosh	equ	0x3FFE
 17616                           tosl	equ	0x3FFD
 17617                           stkptr	equ	0x3FFC
 17618                           pclatu	equ	0x3FFB
 17619                           pclath	equ	0x3FFA
 17620                           pcl	equ	0x3FF9
 17621                           tblptru	equ	0x3FF8
 17622                           tblptrh	equ	0x3FF7
 17623                           tblptrl	equ	0x3FF6
 17624                           tablat	equ	0x3FF5
 17625                           prodh	equ	0x3FF4
 17626                           prodl	equ	0x3FF3
 17627                           indf0	equ	0x3FEF
 17628                           postinc0	equ	0x3FEE
 17629                           postdec0	equ	0x3FED
 17630                           preinc0	equ	0x3FEC
 17631                           plusw0	equ	0x3FEB
 17632                           fsr0h	equ	0x3FEA
 17633                           fsr0l	equ	0x3FE9
 17634                           wreg	equ	0x3FE8
 17635                           indf1	equ	0x3FE7
 17636                           postinc1	equ	0x3FE6
 17637                           postdec1	equ	0x3FE5
 17638                           preinc1	equ	0x3FE4
 17639                           plusw1	equ	0x3FE3
 17640                           fsr1h	equ	0x3FE2
 17641                           fsr1l	equ	0x3FE1
 17642                           bsr	equ	0x3FE0
 17643                           indf2	equ	0x3FDF
 17644                           postinc2	equ	0x3FDE
 17645                           postdec2	equ	0x3FDD
 17646                           preinc2	equ	0x3FDC
 17647                           plusw2	equ	0x3FDB
 17648                           fsr2h	equ	0x3FDA
 17649                           fsr2l	equ	0x3FD9
 17650                           status	equ	0x3FD8

Data Sizes:
    Strings     203
    Constant    0
    Data        0
    BSS         182
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3447_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_15(CODE[14]), STR_14(CODE[13]), STR_13(CODE[14]), STR_12(CODE[10]), 
		 -> STR_11(CODE[12]), STR_10(CODE[15]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_7(CODE[11]), STR_6(CODE[9]), STR_5(CODE[15]), STR_4(CODE[22]), 
		 -> STR_3(CODE[14]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_15(CODE[14]), STR_14(CODE[13]), STR_13(CODE[14]), STR_12(CODE[10]), 
		 -> STR_11(CODE[12]), STR_10(CODE[15]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_7(CODE[11]), STR_6(CODE[9]), STR_5(CODE[15]), STR_4(CODE[22]), 
		 -> STR_3(CODE[14]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_15(CODE[14]), STR_14(CODE[13]), STR_13(CODE[14]), STR_12(CODE[10]), 
		 -> STR_11(CODE[12]), STR_10(CODE[15]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_7(CODE[11]), STR_6(CODE[9]), STR_5(CODE[15]), STR_4(CODE[22]), 
		 -> STR_3(CODE[14]), STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _checkBatt->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _startAccell->_calcSteering
    _calcSteering->_setSteering
    _setSteering->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getReverse->_printf
    _getCurve->_printf
    _checkBatt->_getBatteryVoltage
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  254653
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  253506
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          2     2      0   16959
                                             48 BANK0      2     2      0
                       _calcSteering
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         4     4      0    8090
                                             44 BANK0      4     4      0
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   45034
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   45288
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   59635
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    7895
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    4     4      0   49288
                                             14 BANK1      4     4      0
           _ADCC_GetSingleConversion
                            ___fldiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   45034
                                              6 BANK1      8     2      6
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   43585
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43079
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   31700
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1346
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3083
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9600
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8359
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     906
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     787
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     805
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         ___fldiv
         ___xxtofl
         _printf
           ___xxtofl (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                 _strcpy
                 _tolower
                   _isupper
               _fputc
               _isupper
               _strncmp
               _tolower
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
     _getReverse
       _printf
     _setMotor
     _setSteering
     _startAccell
       _calcSteering
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19F      32        0.0%
DATA                 0      0     19F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 08:29:26 2024

                             _CCP4_Initialize 5B56                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 006C                                  ___fldiv@bexp 006B  
                                 _startAccell 51D4                                  ___fldiv@sign 0064  
                                          l72 5DF8                                            l75 5D02  
                                          l69 55AC                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 5464                                           l404 5562  
                                         l308 541C                                           l309 5436  
                                         l318 5E10                                           l520 55F6  
                                         l441 5BB0                                           l362 5E2E  
                                         l371 5E1A                                           l188 4BD2  
                                         l284 5016                                           l365 5E42  
                                         l359 5E38                                           l368 5E24  
                                         l712 5A54                                           l449 5E6A  
                                         l482 5B82                                           l723 5D98  
                                         l555 5E4C                                           l644 5C0A  
                                         l740 59EC                                           l709 5DB0  
                                         l581 58A8                                           l726 5A20  
                                         l479 5E60                                           l751 5DC8  
                                         l737 5DE0                                           l754 59B8  
                                         l923 5D80                                           l695 5E56  
                                         l795 5B54                                           l893 5C36  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 5712  
                                         _pad 4C98                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0019                               _TMR2_Initialize 5D66  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 5E58  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0066  
                          _UART1_Transmit_ISR 56CE                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                     __end_of_CCP4_CaptureISR 5AC0                                  ___fltol@exp1 0082  
                                        l2000 2E6A                                          l2001 2E58  
                                        l1042 54C0                                          ?_abs 0026  
                                        l1300 31AA                                          l1054 5AD0  
                                        l1230 4418                                          l2023 2BB0  
                                        l1320 43E6                                          l1057 5AF0  
                                        l1321 43F8                                          l2026 2A42  
                                        l2122 4CDC                                          l1402 3B54  
                                        l1306 3258                                          l2019 2828  
                                        l2036 2B72                                          l2028 2ABA  
                                        l2060 3BAC                                          l1332 3DA6  
                                        l2029 2AA8                                          l2125 4D1E  
                                        l2133 32FA                                          l1246 451A  
                                        l2063 3D08                                          l1255 5140  
                                        l2127 4D58                                          l2135 3302  
                                        l1263 51D2                                          l1327 3D1C  
                                        l2304 5838                                          l4001 5522  
                                        l2153 353E                                          l2217 192A  
                                        l2074 3CA0                                          l1258 52CE  
                                        l1346 3E90                                          l1274 525A  
                                        l4011 5552                                          l4003 552C  
                                        l2067 3C44                                          l2171 1D7A  
                                        l2083 5CB6                               _timer3ReloadVal 018C  
                                        l1532 417C                                          l4021 555C  
                                        l4013 5554                                          l4005 5542  
                                        l2333 53A8                                          l1702 472E  
                                        l2270 533E                                          l1286 3248  
                                        l4111 5C0C                                          l4023 555E  
                                        l4015 5556                                          l4007 5544  
                                        l4031 4B2A                                          l1367 395E  
                                        l1519 4018                                          l2319 50AC  
                                        l2327 56CC                                          l2343 4A26  
                                        l2263 2198                                          l2255 229E  
                                        l1391 3992                                          l1376 42C8  
                                        l2280 4932                                          l1392 39A6  
                                        l4025 5560                                          l4017 5558  
                                        l4009 554E                                          l4041 4B86  
                                        l4033 4B2C                                          l4121 5DCA  
                                        l1385 4B08                                          l2353 5400  
                                        l1393 3A1A                                          l4019 555A  
                                        l4051 4B94                                          l4043 4B88  
                                        l4035 4B34                                          l4027 5CE0  
                                        l2339 578A                                          l1636 4C96  
                                        l1484 4626                                          l4053 5DE2  
                                        l4045 4B8E                                          l4037 4B82  
                                        l4029 4B0A                                          l2285 5748  
                                        l2189 14EC                                          l2269 5336  
                                        l1389 396E                                          l1670 47EE  
                                        l2294 3754                                          l2358 5408  
                                        l4047 4B90                                          l4039 4B84  
                                        l2288 5750                                          l1664 4F72  
                                        l4065 5466                                          l4049 4B92  
                                        l4137 5D9A                                          l4081 5B46  
                                        l1649 4EC8                                          l2297 3698  
                                        l4091 5D82                                          l4083 5B48  
                                        l1675 4834                                          l4085 5B4C  
                                        l4077 5B26                                          l4093 5D66  
                                        l1933 2490                                          l1950 25AA  
                                        l1942 2760                                          l1934 247E  
                                        l4087 5B4E                                          l4079 5B44  
                                        l4095 5D72                                          l1935 2444  
                                        l1679 5870                                          l1960 2668  
                                        l4089 5B50                                          l4097 5D78  
                                        l4099 5DB2                                          ?_pad 0026  
                                        l1959 267A                                          l1975 5688  
                                        l1992 2D70                                          l8001 2A28  
                                        l8011 2A64                                          l8003 2A32  
                                        l1987 2F4C                                          l7061 5584  
                                        l7053 5564                                          l8021 2AD6  
                                        l8013 2A72                                          l8005 2A40  
                                        l6501 451C                                          l8101 4E1E  
                                        l1989 2DAC                                          l1998 2DF2  
                                        l7071 55A0                                          l7063 5588  
                                        l7055 5574                                          l8031 2B40  
                                        l8023 2AE4                                          l8015 2AA0  
                                        l8007 2A52                                          l6511 4550  
                                        l6503 4520                                          l8111 4E4E  
                                        l8103 4E2C                                          l7073 55A4  
                                        l7065 558C                                          l7057 5578  
                                        l8041 2B96                                          l8033 2B5A  
                                        l8025 2B0E                                          l8009 2A60  
                                        l6521 4592                                          l6513 4560  
                                        l6505 452E                                          l6601 4ABC  
                                        l8121 4E94                                          l8113 4E60  
                                        l8105 4E34                                          l7067 5594  
                                        l7059 5580                                          l8035 2B76  
                                        l8043 2B9C                                          l8019 2ACA  
                                        l8027 2B12                                          l8203 46BA  
                                        l6531 45E4                                          l6523 459E  
                                        l6515 4564                                          l6507 453E  
                                        l6603 4AC4                                          l8131 4EC0  
                                        l8123 4E9C                                          l8115 4E68  
                                        l8107 4E38                                          l8051 5654  
                                        l9011 2F9E                                          l9003 2F4E  
                                        l6701 5B72                                          l7069 5598  
                                        l8061 4BEE                                          l8045 2BA0  
                                        l8037 2B86                                          l8029 2B2C  
                                        l8221 471E                                          l8213 46E2  
                                        l8205 46C4                                          l6541 4616  
                                        l6533 45E6                                          l6525 45AC  
                                        l6517 4574                                          l6509 4542  
                                        l6437 5A22                                          l6605 4AD0  
                                        l7501 2322                                          l8125 4EA2  
                                        l8117 4E70                                          l8109 4E46  
                                        l8141 4F36                                          l8301 3688  
                                        l6381 5986                                          l9021 2FFE  
                                        l9013 2FBA                                          l9005 2F52  
                                        l9101 4310                                          l6703 5B7C  
                                        l6711 588A                                          l6551 5E26  
                                        l8071 4C14                                          l8063 4BF2  
                                        l8055 4BD4                                          l8039 2B94  
                                        l8215 46EE                                          l8207 46CE  
                                        l6535 45F0                                          l6527 45B6  
                                        l6519 458A                                          l6439 59EE  
                                        l6607 4AF0                                          l7511 2358  
                                        l7503 2328                                          l8231 4CC8  
                                        l8119 4E7E                                          l8127 4EA8  
                                        l8143 4F46                                          l8135 4ECA  
                                        l8151 4730                                          l8311 3744  
                                        l8303 36BC                                          l9031 306E  
                                        l9015 2FD2                                          l9023 3010  
                                        l9007 2F7A                                          l9111 435C  
                                        l9103 431A                                          l6705 5B80  
                                        l6713 58A4                                          l6721 55E0  
                                        l6553 5E3A                                          l6545 5E1C  
                                        l8081 4C4A                                          l8073 4C26  
                                        l8065 4C00                                          l8057 4BD8  
                                        l8217 46FE                                          l6529 45D4  
                                        l6537 45F6                                          l9201 4244  
                                        l7601 251E                                          l7521 2394  
                                        l7513 2368                                          l7505 2336  
                                        l8241 4D2C                                          l8233 4CD4  
                                        l8225 4C98                                          l8321 32C4  
                                        l8129 4EB8                                          l8145 4F6A  
                                        l8137 4EF8                                          l8161 47BC  
                                        l8153 4760                                          l8049 5642  
                                        l8305 36F8                                          l8401 117A  
                                        l9041 30BA                                          l9033 3070  
                                        l9025 302E                                          l9017 2FDE  
                                        l9009 2F80                                          l9113 4372  
                                        l9121 439E                                          l9105 4332  
                                        l6707 5872                                          l6723 55E4  
                                        l6715 55AE                                          l6547 5E12  
                                        l6731 4F78                                          l8083 4C60  
                                        l8075 4C2E                                          l8091 4C76  
                                        l8067 4C08                                          l8059 4BE6  
                                        l8219 470E                                          l6539 4606  
                                        l9211 4290                                          l9203 4258  
                                        l7603 2544                                          l7611 259A  
                                        l7531 23B2                                          l7523 23A2  
                                        l7515 236A                                          l7507 2338  
                                        l7451 544A                                          l7443 540C  
                                        l8243 4D40                                          l8235 4CE8  
                                        l8227 4CA6                                          l8331 331C  
                                        l8323 32D2                                          l8315 325A  
                                        l8147 4F70                                          l8139 4F08  
                                        l8163 47CE                                          l8155 4770  
                                        l8251 4836                                          l8307 370C  
                                        l8403 117E                                          l6379 59BA  
                                        l9051 310E                                          l9043 30CC  
                                        l9035 308E                                          l9027 304A  
                                        l9019 2FE0                                          l9123 43B4  
                                        l9115 4380                                          l9107 4336  
                                        l6565 5E62                                          l3997 5518  
                                        l6709 5886                                          l6725 55E6  
                                        l6717 55C2                                          l6549 5E30  
                                        l6741 4FA2                                          l6733 4F84  
                                        l8093 4C86                                          l8085 4C68  
                                        l8077 4C36                                          l8069 4C0C  
                                        l8181 4628                                          l9213 42AC  
                                        l9205 425C                                          l7621 25EE  
                                        l7613 25C0                                          l7605 2578  
                                        l7541 23C6                                          l7533 23B6  
                                        l7525 23A6                                          l7509 2348  
                                        l7517 2372                                          l9141 379A  
                                        l9133 3756                                          l7701 3E92  
                                        l7453 544C                                          l7445 540C  
                                        l7461 5E0A                                          l8237 4CFC  
                                        l8229 4CBA                                          l8341 3348  
                                        l8333 332A                                          l8325 32D4  
                                        l8317 327A                                          l8165 47DC  
                                        l8157 479E                                          l8173 583A  
                                        l8253 4856                                          l8309 3734  
                                        l8501 15B8                                          l8421 1234  
                                        l8413 11E4                                          l8405 1182  
                                        l9061 3174                                          l9053 3120  
                                        l9045 30D4                                          l9037 30A0  
                                        l9029 3062                                          l9125 43D2  
                                        l9117 438A                                          l9109 434A  
                                        l9221 4426                                          l6567 5E58  
                                        l3999 551A                                          l6727 55F2  
                                        l6719 55C6                                          l6751 4FB6  
                                        l6743 4FA6                                          l6735 4F94  
                                        l8095 4C8E                                          l8087 4C6A  
                                        l8079 4C44                                          l8191 4680  
                                        l8183 4640                                          l6671 510C  
                                        l6663 50AE                                          l6591 4A60  
                                        l9215 42B4                                          l9207 4268  
                                        l7631 2618                                          l7623 25FC  
                                        l7615 25D0                                          l7607 257A  
                                        l7551 23DA                                          l7543 23CA  
                                        l7535 23BA                                          l7527 23AA  
                                        l7519 2382                                          l9151 37DC  
                                        l9143 37A2                                          l9135 3764  
                                        l7711 3ED6                                          l7703 3E96  
                                        l8247 5712                                          l7455 545C  
                                        l7447 542C                                          l7471 5064  
                                        l7463 5018                                          l8239 4D00  
                                        l8351 3458                                          l8343 33CA  
                                        l8335 3330                                          l8327 32EE  
                                        l8319 32A4                                          l8167 482C  
                                        l8159 47AE                                          l8175 5850  
                                        l8255 4894                                          l8263 48D4  
                                        l8503 15CA                                          l8511 160A  
                                        l8431 12B8                                          l8415 11F6  
                                        l8407 1188                                          l9071 31C8  
                                        l9063 318A                                          l9055 3136  
                                        l9047 30E6                                          l9039 30B2  
                                        l9119 4398                                          l9231 448C  
                                        l9223 4438                                          l6681 5BA0  
                                        l6585 5E4E                                          l6569 5E44  
                                        l6761 4FCA                                          l6753 4FBA  
                                        l6745 4FAA                                          l6737 4F9A  
                                        l6729 4F74                                          l8089 4C70  
                                        l8193 4690                                          l6673 5138  
                                        l6665 50B6                                          l6593 4A68  
                                        l9217 42C0                                          l9209 4284  
                                        l7641 264A                                          l7633 2628  
                                        l7625 25FE                                          l7609 258A  
                                        l7561 242C                                          l7553 23DE  
                                        l7545 23CE                                          l7537 23BE  
                                        l7529 23AE                                          l7481 22BC  
                                        l9161 38AA                                          l9153 37F2  
                                        l9145 37B8                                          l9137 377A  
                                        l7721 3F2C                                          l7713 3EF6  
                                        l7705 3EA4                                          l8249 572C  
                                        l7457 5460                                          l7449 5438  
                                        l7473 509A                                          l7465 502A  
                                        l8361 34CA                                          l8353 3476  
                                        l8345 33D2                                          l8337 3338  
                                        l8329 330A                                          l7801 2C20  
                                        l8169 4832                                          l8177 5860  
                                        l8265 48E6                                          l8257 48BC  
                                        l8273 5340                                          l8281 53E0  
                                        l8601 1AE2                                          l8521 16F2  
                                        l8513 1612                                          l8505 15D8  
                                        l8433 12CA                                          l8417 1212  
                                        l8409 11AE                                          l8425 125C  
                                        l9081 31F8                                          l9073 31CC  
                                        l9065 319C                                          l9057 314C  
                                        l9049 30F8                                          l9129 43E0  
                                        l9241 44B8                                          l9233 4494  
                                        l9225 443C                                          l6683 5BAA  
                                        l6691 5BF8                                          l6771 5012  
                                        l6763 4FCE                                          l6755 4FBE  
                                        l6747 4FAE                                          l6739 4F9E  
                                        l8195 4694                                          l8187 4654  
                                        l6667 50CC                                          l6595 4A74  
                                        l6587 4A28                                          l7651 26A4  
                                        l7643 2660                                          l7627 260C  
                                        l7619 25E4                                          l7635 262A  
                                        l7571 2470                                          l7563 243C  
                                        l7547 23D2                                          l7539 23C2  
                                        l7555 23E2                                          l7491 22F0  
                                        l7483 22BE                                          l9155 37F6  
                                        l9147 37C4                                          l9139 377E  
                                        l9171 38C2                                          l7731 3FAE  
                                        l7723 3F40                                          l7715 3EFA  
                                        l7707 3EC4                                          l7459 5462  
                                        l7467 503C                                          l8371 3504  
                                        l8363 34D8                                          l8355 3490  
                                        l8347 33D8                                          l8339 3342  
                                        l8099 4E1A                                          l7811 2C56  
                                        l7803 2C26                                          l8259 48C8  
                                        l8291 35B8                                          l8275 5350  
                                        l8283 53F2                                          l8611 1B5C  
                                        l8603 1B16                                          l8531 17B2  
                                        l8523 1726                                          l8515 1622  
                                        l8507 15F0                                          l8451 13B4  
                                        l8435 12E6                                          l8427 1282  
                                        l8443 1330                                          l8419 122A  
                                        l9067 31BE                                          l9059 3162  
                                        l9411 3E5A                                          l9251 4502  
                                        l9243 44C6                                          l9235 449C  
                                        l9227 4440                                          l9219 43FA  
                                        l6685 5BAE                                          l6677 5B84  
                                        l6693 5BFA                                          l6765 4FD2  
                                        l6757 4FC2                                          l6749 4FB2  
                                        l8197 46A2                                          l8189 467E  
                                        l6669 50DC                                          l6589 4A44  
                                        l6597 4A84                                          l7661 2720  
                                        l7653 26DE                                          l7629 2614  
                                        l7637 2638                                          l7573 2472  
                                        l7565 2452                                          l7557 23E6  
                                        l7549 23D6                                          l7485 22CE  
                                        l7493 22F8                                          l7477 22A0  
                                        l9181 3956                                          l9165 38B6  
                                        l9157 380C                                          l9173 390C  
                                        l9149 37D0                                          l7741 3FF8  
                                        l7733 3FB0                                          l7725 3F4E  
                                        l7717 3F06                                          l7709 3EC8  
                                        l7469 5046                                          l8365 34DE  
                                        l8373 3516                                          l8357 34AA  
                                        l8349 343C                                          l7901 2F0C  
                                        l7821 2C96                                          l7813 2C66  
                                        l7805 2C34                                          l8269 492A  
                                        l8293 35CC                                          l8277 53AA  
                                        l8621 1BA0                                          l8613 1B6E  
                                        l8605 1B1E                                          l8541 184C  
                                        l8533 17C6                                          l8517 1636  
                                        l8525 172C                                          l8509 1602  
                                        l8453 13BA                                          l8461 1486  
                                        l8445 134A                                          l8437 12FE  
                                        l8381 10E8                                          l8701 49FA  
                                        l9413 3222                                          l9077 31DE  
                                        l9069 31C4                                          l9093 42CA  
                                        l9253 450A                                          l9245 44D6  
                                        l9237 44A2                                          l9229 4488  
                                        l9261 5D2C                                          l6679 5B94  
                                        l6695 5C06                                          l6687 5BE0  
                                        l6767 4FDE                                          l6759 4FC6  
                                        l6599 4AA0                                          l9191 4198  
                                        l7671 2740                                          l7663 2724  
                                        l7647 268A                                          l7655 26E0  
                                        l7639 263C                                          l7591 24FA  
                                        l7583 24C2                                          l7575 247C  
                                        l7567 245E                                          l7559 2410  
                                        l7495 2308                                          l7487 22DE  
                                        l7479 22AE                                          l9175 392A  
                                        l9159 389E                                          l7735 3FC2  
                                        l7727 3F60                                          l7719 3F24  
                                        l7751 404C                                          l8367 34F0  
                                        l8359 34B8                                          l7911 2F42  
                                        l7903 2F28                                          l7823 2CA6  
                                        l7831 2CC6                                          l7815 2C68  
                                        l7807 2C36                                          l8295 35DA  
                                        l8287 3540                                          l8631 1BE0  
                                        l8623 1BB2                                          l8615 1B7C  
                                        l8607 1B22                                          l8543 18A4  
                                        l8551 18F4                                          l8535 17F8  
                                        l8527 174A                                          l8519 169A  
                                        l8471 14C6                                          l8463 1496  
                                        l8455 1416                                          l8439 1308  
                                        l8391 1134                                          l8383 10F6  
                                        l8711 1DCE                                          l9415 3A6A  
                                        l9079 31F0                                          l9087 320A  
                                        l9095 42E2                                          l9255 450E  
                                        l9247 44EA                                          l9239 44B4  
                                        l9263 5D2E                                          l6697 5B56  
                                        l6689 5BF4                                          l6769 4FEA  
                                        l7921 2770                                          l8801 3BFA  
                                        l9193 41AC                                          l7673 274E  
                                        l7665 2732                                          l7657 26F0  
                                        l7649 2696                                          l7593 24FE  
                                        l7585 24D2                                          l7577 249E  
                                        l7569 2462                                          l7497 230E  
                                        l7489 22EE                                          l9177 3932  
                                        l9417 38D6                                          l7729 3F8E  
                                        l7737 3FC8                                          l7761 40A4  
                                        l7753 4050                                          l7745 401A  
                                        l7681 5696                                          l8369 34FC  
                                        l7905 2F2C                                          l7841 2D04  
                                        l7833 2CD6                                          l7825 2CAE  
                                        l7809 2C46                                          l7817 2C70  
                                        l8289 3560                                          l8641 1C28  
                                        l8633 1BE8                                          l8625 1BBA  
                                        l8617 1B8C                                          l8609 1B40  
                                        l8561 19AA                                          l8553 1904  
                                        l8545 18A8                                          l8537 1808  
                                        l8529 177E                                          l8481 150A  
                                        l8473 14E0                                          l8465 149A  
                                        l8457 144A                                          l8449 1380  
                                        l8393 1146                                          l8385 10FE  
                                        l8377 10CE                                          l8721 1E5E  
                                        l8713 1DD2                                          l8705 1D7C  
                                        l9097 42EC                                          l9409 3D80  
                                        l9257 4512                                          l9265 5D3C  
                                        l6699 5B66                                          l7931 27B0  
                                        l7923 277E                                          l8811 3C82  
                                        l8803 3C2C                                          l9195 41AC  
                                        l9187 417E                                          l7675 2750  
                                        l7667 2738                                          l7659 2700  
                                        l7595 250C                                          l7587 24E0  
                                        l7579 24AE                                          l7499 2320  
                                        l9179 394E                                          l7739 3FD8  
                                        l7771 4126                                          l7763 40B8  
                                        l7755 405E                                          l7747 401E  
                                        l7683 56A8                                          l7691 5762  
                                        l7907 2F3A                                          l7851 2D4C  
                                        l7843 2D14                                          l7835 2CD6  
                                        l7827 2CB2                                          l7819 2C80  
                                        l8299 364C                                          l8651 1C7E  
                                        l8643 1C44                                          l8635 1BF0  
                                        l8627 1BCA                                          l8619 1B90  
                                        l8563 19B8                                          l8571 19F4  
                                        l8555 1916                                          l8547 18DC  
                                        l8539 1818                                          l8483 151C  
                                        l8491 157A                                          l8467 14AC  
                                        l8475 14F8                                          l8459 1452  
                                        l8395 1154                                          l8387 1122  
                                        l8379 10D8                                          l8723 1E9E  
                                        l8715 1DFE                                          l8707 1DAA  
                                        l9099 42FE                                          l9259 5D28  
                                        l7941 27E0                                          l7933 27B6  
                                        l7925 2780                                          l8821 3CD8  
                                        l8813 3C90                                          l8805 3C2E  
                                        l9197 4228                                          l9189 418A  
                                        l7669 273A                                          l7597 250E  
                                        l7589 24EE                                          l7765 40C6  
                                        l7773 412C                                          l7757 407E  
                                        l7749 402C                                          l7685 56AC  
                                        l7693 577E                                          l7909 2F40  
                                        l7861 2D9A                                          l7853 2D60  
                                        l7845 2D24                                          l7781 2BB2  
                                        l8661 1CBC                                          l8653 1C84  
                                        l8645 1C4C                                          l8637 1BFC  
                                        l8629 1BD2                                          l8581 1A30  
                                        l8573 1A08                                          l8565 19CC  
                                        l8557 1922                                          l8549 18F0  
                                        l8493 1582                                          l8485 1538  
                                        l8469 14BE                                          l8397 1166  
                                        l8389 112C                                          l8741 2018  
                                        l8733 1F8E                                          l8725 1ECC  
                                        l8717 1E0E                                          l8709 1DBC  
                                        l8901 52B0                                          l7951 2818  
                                        l7943 27E2                                          l7935 27C6  
                                        l7927 2790                                          l7919 2762  
                                        l8823 3CE8                                          l8815 3CAE  
                                        l8807 3C3A                                          l9199 423C  
                                        l7599 2518                                          l7775 413C  
                                        l7767 40F4                                          l7759 409C  
                                        l7679 568A                                          l7687 5752  
                                        l7871 2DE2                                          l7863 2DAA  
                                        l7855 2D6E                                          l7847 2D34  
                                        l7839 2CEA                                          l7791 2BF0  
                                        l7783 2BC0                                          l8671 1D0E  
                                        l8663 1CC2                                          l8655 1C96  
                                        l8639 1C02                                          l8647 1C52  
                                        l8583 1A3C                                          l8575 1A16  
                                        l8591 1A5C                                          l8567 19DE  
                                        l8559 1946                                          l8495 1594  
                                        l8487 156E                                          l8399 1172  
                                        l8751 20FA                                          l8735 1FA0  
                                        l8727 1EFA                                          l8719 1E4E  
                                        l8831 52D0                                          l8911 3D60  
                                        l8903 3D0A                                          l7961 286C  
                                        l7953 2838                                          l7945 27F2  
                                        l7937 27CC                                          l7929 27A0  
                                        l8825 3CF6                                          l8817 3CB0  
                                        l8809 3C76                                          l8841 5AC8  
                                        l7777 415C                                          l7769 4114  
                                        l7689 575E                                          l7881 2E22  
                                        l7873 2DF0                                          l7865 2DBC  
                                        l7857 2D7A                                          l7849 2D3C  
                                        l7793 2C00                                          l7785 2BCE  
                                        l7697 5802                                          l8673 1D1A  
                                        l8665 1CC8                                          l8657 1CA2  
                                        l8649 1C64                                          l8681 1D56  
                                        l8593 1A6E                                          l8585 1A4C  
                                        l8577 1A26                                          l8569 19EC  
                                        l8497 15A6                                          l8489 1576  
                                        l8753 210C                                          l8761 21D8  
                                        l8737 1FC2                                          l8745 2044  
                                        l8729 1F56                                          l8833 52D8  
                                        l8921 3DD2                                          l8905 3D1C  
                                        l7971 28C4                                          l7963 2876  
                                        l7955 2848                                          l7947 2802  
                                        l7939 27D2                                          l8827 3CF8  
                                        l8819 3CB4                                          l8843 5ACC  
                                        l7891 2E94                                          l7883 2E50  
                                        l7867 2DD2                                          l7875 2E02  
                                        l7859 2D98                                          l7795 2C02  
                                        l7787 2BD0                                          l8675 1D22  
                                        l8659 1CAA                                          l8595 1A80  
                                        l8587 1A50                                          l8579 1A2A  
                                        l8499 15B4                                          l8691 496A  
                                        l8763 2206                                          l8771 223A  
                                        l8755 2154                                          l8747 2072  
                                        l8739 1FD4                                          l8835 52E6  
                                        l8851 3960                                          l8931 3E20  
                                        l8923 3DE6                                          l8907 3D38  
                                        l8915 3D6C                                          l7981 290E  
                                        l7973 28D0                                          l7965 2890  
                                        l7949 2812                                          l8845 5ACE  
                                        l7893 2EBE                                          l7877 2E10  
                                        l7869 2DD8                                          l7789 2BE0  
                                        l7797 2C0A                                          l8677 1D34  
                                        l8669 1CFC                                          l8597 1A84  
                                        l8589 1A56                                          l8693 4978  
                                        l8685 4934                                          l8773 224C  
                                        l8765 2218                                          l8757 21AC  
                                        l8837 5314                                          l8861 3A42  
                                        l8853 39AE                                          l8933 3E32  
                                        l8925 3DFA                                          l8917 3DAA  
                                        l8909 3D44                                          l7991 297C  
                                        l7983 291E                                          l7975 28DE  
                                        l7967 289C                                          l7959 285C  
                                        l8791 3BBC                                          l8847 5ADE  
                                        l8839 5AC2                                          l7887 2E7A  
                                        l7895 2EC2                                          l7879 2E14  
                                        l7799 2C1A                                          l8679 1D3A  
                                        l8599 1A8A                                          l8695 4994  
                                        l8687 495E                                          l8767 222C  
                                        l8871 3AC2                                          l8855 3A22  
                                        l8927 3E0C                                          l8919 3DBE  
                                        l7993 299C                                          l7985 293C  
                                        l7977 28EE                                          l7969 28B8  
                                        l8793 3BD2                                          l8785 3B58  
                                        l7897 2EDC                                          l7889 2E86  
                                        l8697 49B6                                          l8777 225A  
                                        l8881 3B2A                                          l8873 3ADE  
                                        l8857 3A2E                                          l8865 3A56  
                                        l8953 51D4                                          l7995 29C6  
                                        l7987 294C                                          l7979 28FE  
                                        l8787 3B68                                          l7899 2EF2  
                                        l8699 49C8                                          l8779 2288  
                                        l8883 3B32                                          l8875 3AE6  
                                        l8859 3A36                                          l8867 3A98  
                                        l8939 3E46                                          l8971 5216  
                                        l8963 51F8                                          l8955 51E6  
                                        l7997 29FC                                          l7989 296C  
                                        l8797 3BE6                                          l8789 3B76  
                                        l8893 5C90                                          l8885 3B42  
                                        l8877 3B02                                          l8869 3AB6  
                                        l8981 5142                                          l8973 5226  
                                        l8965 5200                                          l8957 51F0  
                                        l7999 2A0A                                          l8799 3BEE  
                                        l8895 5C9A                                          l8879 3B0E  
                                        l8991 51B2                                          l8983 5148  
                                        l8975 522A                                          l8967 520C  
                                        STR_1 109B                                          STR_2 1001  
                                        l8993 51BA                                          l8985 515E  
                                        l8977 5246                                          l8969 5210  
                                        STR_3 1051                                          STR_4 1001  
                                        l8899 525C                                          l8995 51CA  
                                        l8987 5166                                          l8979 524A  
                                        STR_5 1026                                          STR_6 10B0  
                                        l8989 516A                                          STR_7 1090  
                                        STR_8 106C                                          l8999 51D0  
                                        STR_9 1078                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        u6300 45AC                                          _PMD0 0039C0  
                                        u2845 554C                                          u6301 45A8  
                                        u6205 5A46                                          _PMD1 0039C1  
                                        u2846 554E                                          u6310 45D4  
                                        _PMD2 0039C2                                          u6311 45D0  
                                        u6215 5A12                                          _PMD3 0039C3  
                                        u6320 4606                                          u8000 2E10  
                                        _PMD4 0039C4                                          u6321 4602  
                                        u8001 2E0C                                          _PMD5 0039C5  
                                        u8010 2E22                                          _PMD6 0039C6  
                                        u8011 2E1E                                          u6075 59DE  
                                        _PMD7 0039C7                                          u8100 2790  
                                        u7300 22BC                                          u8020 2E50  
                                        u8101 278C                                          u7301 22B8  
                                        u8021 2E4C                                          u6085 59AA  
                                        u8110 27A0                                          u6270 452E  
                                        u6430 50CC                                          u6350 4A44  
                                        u7310 22CE                                          u7230 541C  
                                        u8030 2E66                                          u8111 279C  
                                        u6271 452A                                          u6431 50C8  
                                        u6351 4A40                                          u7311 22CA  
                                        u7231 5418                                          u8031 2E62  
                                        u8200 2A72                                          u8120 27E0  
                                        u6280 4550                                          u6440 50DC  
                                        u6360 4A60                                          u7400 2428  
                                        u7320 22DE                                          u7240 542C  
                                        u8040 2E7A                                          u9000 1154  
                                        u8201 2A6E                                          u8121 27DC  
                                        u6281 454C                                          u6441 50D8  
                                        u6361 4A5C                                          u7401 2422  
                                        u7321 22DA                                          u7241 5428  
                                        u8041 2E76                                          u9001 1150  
                                        u8210 2AA0                                          u8130 27F2  
                                        u6290 458A                                          u6370 4AA0  
                                        u7410 242A                                          u7330 2320  
                                        u7250 545C                                          u8050 2E94  
                                        u9010 1166                                          u8211 2A9C  
                                        u8131 27EE                                          u6291 4586  
                                        u6371 4A9C                                          u7331 231C  
                                        u7251 5458                                          u8051 2E90  
                                        u9011 1162                                          u8300 4C26  
                                        u8220 2AB6                                          u8140 2802  
                                        u6380 4ABC                                          u7500 2544  
                                        u7420 2452                                          u7340 2336  
                                        u7260 502A                                          u8060 2EDC  
                                        u9100 137C                                          u9020 11AE  
                                        u8301 4C22                                          u8221 2AB2  
                                        u8141 27FE                                          u6381 4AB8  
                                        u7501 2540                                          u7421 244E  
                                        u7341 2332                                          u7261 5026  
                                        u8061 2ED8                                          u9101 1378  
                                        u9021 11AA                                          u8310 4C44  
                                        u8230 2ACA                                          u8150 2838  
                                        u7510 258A                                          u7430 2470  
                                        u7350 2348                                          u7270 503C  
                                        u8070 2F0C                                          u9110 1412  
                                        u9030 11DE                                          u8311 4C40  
                                        u8231 2AC6                                          u8151 2834  
                                        u7511 2586                                          u7431 246C  
                                        u7351 2344                                          u7271 5038  
                                        u8071 2F08                                          u9111 140E  
                                        u9031 11D8                                          u8320 4C60  
                                        u8240 2AE4                                          u8160 2848  
                                        u7600 2676                                          u7520 25C0  
                                        u7440 2490                                          u7360 2358  
                                        u7280 5064                                          u8080 2F3A  
                                        u8400 4EF8                                          u9200 1594  
                                        u9120 1486                                          u9040 11E0  
                                        u8321 4C5C                                          u8241 2AE0  
                                        u8161 2844                                          u7601 2672  
                                        u7521 25BC                                          u7441 248C  
                                        u7361 2354                                          u7281 5060  
                                        u8081 2F36                                          u8401 4EF4  
                                        u9201 1590                                          u9121 1482  
                                        u8330 4C86                                          u8250 2B2C  
                                        u8170 29E6                                          u8090 277E  
                                        u7610 268A                                          u7530 25D0  
                                        u7450 249E                                          u7370 2394  
                                        u7290 509A                                          u8410 4F36  
                                        u9210 15A6                                          u9130 14AC  
                                        u9050 11F6                                          u8331 4C82  
                                        u8251 2B28                                          u8091 277A  
                                        u7611 2686                                          u7531 25CC  
                                        u7451 249A                                          u7371 2390  
                                        u7291 5096                                          u8411 4F32  
                                        u9211 15A2                                          u9131 14A8  
                                        u9051 11F2                                          u8260 2B5A  
                                        u8180 2A40                                          u8500 4674  
                                        u7620 26A4                                          u7540 25FC  
                                        u7460 24AE                                          u7380 23A2  
                                        u7700 577E                                          u8340 4E2C  
                                        u8420 4F6A                                          u9300 18A4  
                                        u9220 15B4                                          u9140 14BE  
                                        u9060 1282                                          u8261 2B56  
                                        u8181 2A3C                                          u7621 26A0  
                                        u7541 25F8                                          u7461 24AA  
                                        u7381 239E                                          u7701 577A  
                                        u8341 4E28                                          u8421 4F66  
                                        u9301 18A0                                          u9221 15B0  
                                        u9141 14BA                                          u9061 127E  
                                        u8270 2B94                                          u8190 2A60  
                                        u8510 46A2                                          u7630 26DE  
                                        u7550 260C                                          u7470 24E0  
                                        u7390 2410                                          u8350 4E46  
                                        u8430 4760                                          u7710 5832  
                                        u9310 18F0                                          u9230 15CA  
                                        u9150 14E0                                          u9070 12B2  
                                        u8271 2B90                                          u8191 2A5C  
                                        u8175 29DC                                          u8511 469E  
                                        u7631 26DA                                          u7551 2608  
                                        u7471 24DC                                          u7391 240C  
                                        u8351 4E42                                          u8431 475C  
                                        u7711 582C                                          u9311 18EC  
                                        u9231 15C6                                          u9151 14DC  
                                        u9071 12AC                                          u8280 4BE6  
                                        u8520 46B6                                          u7640 26F0  
                                        u7560 2628                                          u7480 24EE  
                                        u7800 402C                                          u8600 572C  
                                        u8360 4E60                                          u8440 479E  
                                        u7720 5834                                          u9400 1B40  
                                        u9320 1916                                          u9240 15D8  
                                        u9160 1506                                          u9080 12B4  
                                        u8281 4BE2                                          u8521 46B2  
                                        u8505 466A                                          u7641 26EC  
                                        u7561 2624                                          u7481 24EA  
                                        u7801 4028                                          u8601 5728  
                                        u8361 4E5C                                          u8441 479A  
                                        u9401 1B3C                                          u9321 1912  
                                        u9241 15D4                                          u9161 1502  
                                        u8290 4C00                                          u8530 46DE  
                                        u7650 2700                                          u7570 2638  
                                        u7490 250C                                          u7730 3EA4  
                                        u7810 405E                                          u8370 4E7E  
                                        u8450 47BC                                          u8610 4876  
                                        u9410 1B5C                                          u9330 19B8  
                                        u9250 1602                                          u9170 151C  
                                        u9090 12CA                                          u8291 4BFC  
                                        u8531 46DA                                          u7651 26FC  
                                        u7571 2634                                          u7491 2508  
                                        u7731 3EA0                                          u7811 405A  
                                        u8371 4E7A                                          u8451 47B8  
                                        u9411 1B58                                          u9331 19B4  
                                        u9251 15FE                                          u9171 1518  
                                        u9091 12C6                                          u8540 46FE  
                                        u7660 2720                                          u7580 264A  
                                        u7740 3ED6                                          u7820 409C  
                                        u8380 4E94                                          u7900 2C46  
                                        u8460 47DC                                          u8620 4894  
                                        u8700 53DA                                          u9500 1CF8  
                                        u9420 1B6E                                          u9340 19CC  
                                        u9260 174A                                          u9180 1538  
                                        u8541 46FA                                          u7661 271C  
                                        u7581 2646                                          u7741 3ED2  
                                        u7821 4098                                          u8381 4E90  
                                        u7901 2C42                                          u8461 47D8  
                                        u8621 4890                                          u8701 53D4  
                                        u9421 1B6A                                          u9341 19C8  
                                        u9261 1746                                          u9181 1534  
                                        u8550 470E                                          u7670 2732  
                                        u7590 2660                                          u7830 40C6  
                                        u8390 4EB8                                          u7910 2C56  
                                        u8470 482C                                          u8630 48BC  
                                        u8710 53DC                                          u9510 1D0E  
                                        u9430 1B7C                                          u9350 19DE  
                                        u9270 17B2                                          u9190 156E  
                                        u8551 470A                                          u7671 272E  
                                        u7591 265C                                          u7751 3F00  
                                        u7831 40C2                                          u8391 4EB4  
                                        u7911 2C52                                          u8471 4828  
                                        u8631 48B8                                          u8615 486C  
                                        u9511 1D0A                                          u9431 1B78  
                                        u9351 19DA                                          u9271 17AE  
                                        u9191 156A                                          u7680 274E  
                                        u7760 3F24                                          u7840 40F4  
                                        u8560 4CA6                                          u7920 2C96  
                                        u8480 5850                                          u8640 48E6  
                                        u8800 36DC                                          u8720 53F2  
                                        u9440 1BB2                                          u9360 19EC  
                                        u9280 17F8                                          u9520 495E  
                                        u9600 1ECC                                          u7681 274A  
                                        u7761 3F20                                          u7841 40F0  
                                        u8561 4CA2                                          u7921 2C92  
                                        u8481 584C                                          u8641 48E2  
                                        u8721 53EE                                          u9441 1BAE  
                                        u9361 19E8                                          u9281 17F4  
                                        u9521 495A                                          u9601 1EC8  
                                        u8490 4640                                          u7770 3F4E  
                                        u7850 413C                                          u7690 56CC  
                                        u8570 4CC8                                          u7930 2CD6  
                                        u8810 36F8                                          u8730 358A  
                                        u9450 1BE0                                          u9370 1A08  
                                        u9290 1808                                          u9530 4994  
                                        u9610 1EFA                                          u8491 463C  
                                        u7771 3F4A                                          u7851 4138  
                                        u7691 56C8                                          u8571 4CC4  
                                        u7931 2CD2                                          u8811 36F4  
                                        u9451 1BDC                                          u9371 1A04  
                                        u9291 1804                                          u9531 4990  
                                        u9611 1EF6                                          u9700 3BD2  
                                        u7780 3F8E                                          u8580 4D1E  
                                        u8900 3458                                          u7940 2D4C  
                                        u7860 2BCE                                          u8660 4920  
                                        u8820 3734                                          u8740 35B8  
                                        u9460 1C64                                          u9380 1A16  
                                        u9540 49B6                                          u9620 1FA0  
                                        u9701 3BCE                                          u7781 3F8A  
                                        u8581 4D1A                                          u8901 3454  
                                        u7941 2D48                                          u7861 2BCA  
                                        u8661 491A                                          u8821 3730  
                                        u8805 36D2                                          u8741 35B4  
                                        u9461 1C60                                          u9381 1A12  
                                        u9541 49B2                                          u9621 1F9C  
                                        u9710 3C28                                          u7790 3FD8  
                                        u8590 4D2C                                          u8910 3476  
                                        u8830 328C                                          u7950 2D6E  
                                        u7870 2BE0                                          u8670 4922  
                                        u8750 35DA                                          u9470 1C7E  
                                        u9390 1A6E                                          u9550 49C8  
                                        u9630 2072                                          u9711 3C24  
                                        u7791 3FD4                                          u8591 4D28  
                                        u8911 3472                                          u8831 3286  
                                        u7951 2D6A                                          u7871 2BDC  
                                        u8655 48F8                                          u8751 35D6  
                                        u8735 3580                                          u9471 1C7A  
                                        u9391 1A6A                                          u9551 49C4  
                                        u9631 206E                                          u9720 3C72  
                                        u8920 3490                                          u8840 328E  
                                        u7960 2D98                                          u7880 2BF0  
                                        u8680 5396                                          u9480 1C96  
                                        u9560 49FA                                          u9640 20F4  
                                        u9800 3AB6                                          u9721 3C6E  
                                        u8921 348C                                          u7961 2D94  
                                        u7881 2BEC                                          u9481 1C92  
                                        u9561 49F6                                          u9641 20EE  
                                        u9801 3AB2                                          u9730 3C90  
                                        u8930 34AA                                          u8850 32A4  
                                        u7970 2DBC                                          u7890 2C34  
                                        u8770 3648                                          u8690 53A8  
                                        u9490 1CF6                                          u9650 20F6  
                                        u9570 1DAA                                          u9810 3ADE  
                                        u9731 3C8C                                          u8931 34A6  
                                        u8851 32A0                                          u7971 2DB8  
                                        u7891 2C30                                          u8771 3644  
                                        u8691 53A4                                          u9491 1CF0  
                                        u9571 1DA6                                          u9811 3ADA  
                                        u9740 3CA0                                          u8940 34B8  
                                        u8860 32D2                                          u7980 2DD2  
                                        u8780 366C                                          u9660 210C  
                                        u9580 1E0E                                          u9820 3B02  
                                        u9900 525A                                          u9741 3C9C  
                                        u8941 34B4                                          u8861 32CE  
                                        u7981 2DCE                                          u8765 35EE  
                                        u9661 2108                                          u9581 1E0A  
                                        u9821 3AFE                                          u9901 5256  
                                        u9750 3CAE                                          u8950 34CA  
                                        u8870 32EE                                          u7990 2DF0  
                                        u8790 3688                                          u8766 35F8  
                                        u9670 2206                                          u9590 1E5E  
                                        u9830 3B2A                                          u9910 515E  
                                        u9751 3CAA                                          u8951 34C6  
                                        u8871 32EA                                          u7991 2DEC  
                                        u8791 3684                                          u8767 3608  
                                        u8687 5388                                          u9671 2202  
                                        u9591 1E5A                                          u9831 3B26  
                                        u9911 515A                                          u9760 3CE8  
                                        u9680 3B68                                          u8960 34D8  
                                        u8880 331C                                          u9920 51B2  
                                        u9840 3D38                                          u9761 3CE4  
                                        u9681 3B64                                          u8961 34D4  
                                        u8881 3318                                          u8785 3662  
                                        u9921 51AE                                          u9841 3D34  
                                        u9770 3CF6                                          u9690 3B76  
                                        u8970 34F0                                          u8890 332A  
                                        u9930 2F9E                                          u9850 3D60  
                                        u9771 3CF2                                          u9691 3B72  
                                        u8971 34EC                                          u8891 3326  
                                        u9931 2F9A                                          u9851 3D5C  
                                        u8980 10F6                                          u9780 5336  
                                        u9940 2FBA                                          u9860 3E0C  
                                        u8981 10F2                                          u9781 5332  
                                        u9941 2FB6                                          u9861 3E08  
                                        u9790 5ADE                                          u8990 1146  
                                        u9950 2FD2                                          u9870 3E32  
                                        u9791 5ADA                                          u8991 1142  
                                        u9951 2FCE                                          u9871 3E2E  
                                        u9960 302E                                          u9880 5226  
                                        u9961 302A                                          u9881 5222  
                                        u9970 304A                                          u9890 5246  
                                        _TMR2 003FAA                                          u9971 3046  
                                        u9891 5242                                          u9980 3062  
                                        _TMR4 003F9E                                          u9981 305E  
                                        u9990 30B2                                          u9991 30AE  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 013A  
                                        _main 5D28                                          _dtoa 325A  
                                        _loop 43FA                                          _prec 003A  
                                        _nout 0128                                          pad@i 002D  
                                        pad@p 002A                                          fsr0h 003FEA  
                                        fsr1h 003FE2                                          indf0 003FEF  
                                        fsr2h 003FDA                                          fsr0l 003FE9  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                               ___fpclassifyf 4836                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 0190                               ___fldiv@new_exp 0065  
                             _TMR3_Initialize 5872                               _PWM5_Initialize 5DCA  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                                _tolower$3690 0020                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 57C8                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 59EE                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 5DFA                                 ___fltol@sign1 0081  
                             __end_of___aldiv 4628                               __end_of___aodiv 401A  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 5BB2                               __end_of___fladd 2762  
                                       ?_main 0001                                         ?_dtoa 0060  
                                       _ADCLK 003EFF                               __end_of___aomod 417E  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 2F4E                                         _ADREF 003EFD  
                             __end_of___awdiv 4C98                               __end_of___flneg 5872  
                                       ?_loop 0001                                         STR_10 1017  
                                       STR_11 1084                                         STR_20 10BD  
                                       STR_12 10A6                                         STR_21 10C5  
                                       STR_13 1043                                         STR_14 105F  
                                       STR_15 1035                                         STR_24 10C9  
                                       STR_16 10B9                                         STR_17 10C1  
                                       STR_26 10C9                               __end_of___awmod 4ECA  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 2BB2                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___flsub 568A                               __end_of___fltol 4730  
                                       u10000 30E6                                         u10001 30E2  
                                       u10010 30F8                                         u10011 30F4  
                                       u10020 310E                                         u10100 42FE  
                                       u10021 310A                                         u10101 42FA  
                                       u10030 3120                                         u10110 4310  
                                       u10031 311C                                         u10111 430C  
                                       u10200 37B8                                         u10040 3136  
                                       u10120 4332                                         u10201 37B4  
                                       u10041 3132                                         u10121 432E  
                                       u10210 37F2                                         u10050 314C  
                                       u10130 434A                                         u10211 37EE  
                                       u10051 3148                                         u10131 4346  
                                       u10220 380C                                         u10060 3162  
                                       u10140 435C                                         u10300 4438  
                                       u10221 3808                                         u10061 315E  
                                       u10141 4358                                         u10301 4434  
                                       u10230 392A                                         u10070 318A  
                                       u10150 4372                                         u10310 4488  
                                       u10231 3926                                         u10071 3186  
                                       u10151 436E                                         u10311 4484  
                                       u10240 394E                                         u10080 31F0  
                                       u10160 43B4                                         u10320 44B4  
                                       u10241 394A                                         u10081 31EC  
                                       u10161 43B0                                         u10321 44B0  
                                       u10250 423C                                         u10170 43D2  
                                       u10090 42E2                                         u10330 44C6  
                                       u10251 4238                                         u10171 43CE  
                                       u10091 42DE                                         u10331 44C2  
                                       u10260 4258                                         u10180 377A  
                                       u10340 44FE                                         u10261 4254  
                                       u10181 3776                                         u10341 44FA  
                                       u10270 4284                                         u10190 379A  
                                       u10271 4280                                         u10191 3796  
                                       u10280 42AC                                         u10281 42A8  
                                       u10290 4426                                         u10291 4422  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 57FA  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 57BE                                         i1l333 570C  
                                       i1l350 5E7E                                         i1l343 4E18  
                                       i1l336 5710                                         i1l353 5E7C  
                                       _U1TXB 003DEA                                         i1l347 5C62  
                                       i1l356 5E7A                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 5E84  
                                       i1l692 5BDE                                         i2l534 5C8E  
                                       i2l438 594E                                         i2l446 5A8A  
                                       i2l552 5B24                                         i1l688 58DC  
                                       i2l529 5D26                                         i2l537 5E06  
                                       i1l698 5E80                                         i2l476 5984  
                                       i2l558 5D64                                         i2l487 5ABE  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 5516  
                                       i2l856 5640                                         i2l868 5CDE  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 5E84                               _TMR4_Initialize 5BE0  
                             _PWM6_Initialize 5DB2                             _UART1_tx_vect_isr 578C  
                            __end_of_TMR4_ISR 58E4                       setSteering@steeringMode 0085  
                                       _delay 00F7                                         _flags 003C  
                                       _fputc 5018                                         _fputs 568A  
                       __size_of_calcMotorPow 014C                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 00E5  
                                       _putch 5E08                                         dtoa@d 0062  
                                       dtoa@i 007A                                         dtoa@n 0072  
                                       dtoa@p 006C                                         dtoa@s 0070  
                                       dtoa@w 006E                              ?_SMT1_Initialize 0001  
                             __end_of_isupper 583A                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 00E7  
                             _curveRightCount 00F8                         __size_of_calcSteering 0188  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5E26  
                 _UART1_SetRxInterruptHandler 5E1C                       __end_of_CCP4_Initialize 5B84  
                              ?___fpclassifyf 0014                               __end_of_tolower 540A  
                             __end_of_strncmp 4A28           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 5E80     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5E7E                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 5802                               _TMR5_Initialize 55AE  
                             _PWM7_Initialize 5D9A                               __initialization 58E4  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 5D48                                  __end_of_dtoa 3540  
                                __end_of_loop 451C                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 5D82                                _roundTimeCount 003E  
                                ?_UART1_Write 0001                                        ??_main 003A  
                                      ??_dtoa 0031                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 417E  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 57C6  
                                startAccell@i 0090                               _PWM8_Initialize 5D82  
                            _UART1_Initialize 4F74                                  _calcSteering 3D0A  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      ?_fputc 0016                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 001F  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 59EE                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1249 5E74  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                       __end_of_PWM5_Initialize 5DE2  
                     __end_of_TMR3_Initialize 58AA                                        i1l7101 56F0  
                                      i1l7111 4D6A                                        i1l7103 56F2  
                                      i1l7121 4DC2                                        i1l7113 4D7A  
                                      i1l7105 5702                                        i1l7051 5E6C  
                                      i1l7123 4DDA                                        i1l7115 4D8A  
                                      i1l7107 5706                                        i1l7125 4DF6  
                                      i1l7117 4DA2                                        i1l7109 4D5A  
                                      i1l7221 57E2                                        i1l7127 4E14  
                                      i1l7119 4DB2                                        i1l7215 5792  
                                      i1l7241 58B6                                        i1l7217 57A6  
                                      i1l7243 58D0                                        i1l7219 57CE  
                                      i1l7245 58D4                                        i1l7167 5BB2  
                                      i1l7239 58B2                                        i1l7169 5BC6  
                                      i1l6561 5C5C                                        i1l7097 56CE  
                                      i1l6563 5C60                                        i1l6555 5C38  
                                      i1l7099 56DE                                        i1l6557 5C4A  
                                      i1l6559 5C4C                                        i1l6773 5E76  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      i2l7131 5928                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        i2l7141 596A  
                                      i2l7133 5934                                        _INLVLE 003A84  
                                      i2l7151 5D60                                        i2l7231 5AF4  
                                      i2l7143 597E                                        i2l7135 5948  
                                      i2l7223 5A58                                        i2l7145 5D48  
                                      i2l7233 5AF8                                        i2l7137 5950  
                                      i2l7129 591A                                        i2l7225 5A68  
                                      i2l7251 560C                                        i2l7147 5D54  
                                      i2l7235 5B0C                                        i2l7139 595E  
                                      i2l7227 5A8C                                        i2l7261 54E2  
                                      i2l7253 561C                                        i2l7149 5D5C  
                                      i2l7229 5A9C                                        i2l7263 54F2  
                                      i2l7255 562E                                        i2l7247 55F8  
                                      i2l7265 5504                                        i2l7257 54C4  
                                      i2l7249 55FC                                        i2l7267 5CB8  
                                      i2l7259 54C8                                        i2l6571 5C64  
                                      i2l7269 5CBC                                        i2l6573 5C72  
                                      i2l6581 5C84                                        i2l6583 5C88  
                                      i2l6575 5C74                                        i2l6577 5C78  
                                      i2l6579 5C7E                                        i2l6775 5D04  
                                      i2l6783 5DFA                                        i2l6777 5D12  
                                      i2l6779 5D1E                                  ?_setSteering 0083  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 5142  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 5E3A  
                            __end_of___xxtofl 3D0A                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 325A                      __end_of_CCP3_SetCallBack 5E6C  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                vfprintf@cfmt 00E3                                        ___flge 4730  
                                      ___fleq 4ECA                                     ??___aldiv 001C  
                                   ??___aodiv 0024                                     ??___fladd 0036  
                                   ??___aomod 0024                                     ??___fldiv 0032  
                                   ??___awdiv 0018                                     ??___flneg 0018  
                                   ??___awmod 0018                                     ??___flmul 0032  
                                   ??___flsub 003A                                     ??___fltol 007D  
                                      _efgtoa 10CE                                 _CCP3_CallBack 0194  
                                      _floorf 3540                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 5DCA                       __end_of_TMR4_Initialize 5C0C  
                                      clear_0 58EA                                        clear_1 58F6  
                                      clear_2 5902                              ___awdiv@quotient 001A  
                                      _motPow 012E                               ___awmod@divisor 0016  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                             ___awmod@counter 0018                                 _CCP4_CallBack 0192  
                                      _smtWay 0120                                        _printf 5C90  
                                      pad@buf 0028                                        dtoa@fp 0060  
                            ?_CCP3_Initialize 0001                                        _strcpy 5340  
                                      _strlen 5752                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 4B0A                               _ADCC_Initialize 5466  
        __end_of_TMR4_DefaultInterruptHandler 5E82         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 5E80                                        fputc@c 0016  
                              _PMD_Initialize 5CE0                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 5B26                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 5340                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 5E30         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 5E26                     _UART1_DefaultErrorHandler 5E76  
                                   ??_tolower 001C                                     ??_strncmp 001A  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 01B0                                    ___flge@ff1 006D  
                             ??___fpclassifyf 0018                                    ___flge@ff2 0071  
                     __end_of_PWM7_Initialize 5DB2                       __end_of_TMR5_Initialize 55F8  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 5564                                  ___xxtofl@val 001C  
                                  ___fleq@ff1 0014                                    ___fleq@ff2 0018  
                                  __accesstop 0060                       __end_of__initialization 5914  
                                  ___flneg@f1 0014                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0083                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 0079                               _TMR5_WriteTimer 5C64  
                          __size_of_calcSpeed 020A                     calcMotorPow@setSpeedDelta 0085  
                    __end_of_CCP4_SetCallBack 5E62                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 5BE0                            __size_of_checkBatt 0092  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 50AE                                 __end_of_fputs 56CE  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 5E12  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 5D9A  
                      __end_of_PMD_Initialize 5D04                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003A  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 019A  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                                     ??_fputc 001A                     __end_of_SYSTEM_Initialize 55AE  
                                     ??_fputs 0023                               _CLC3_Initialize 5C0C  
                                     ??_putch 0015                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 00E5                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 004C                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 018A                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 54C2  
                  __end_of_PWM6_LoadDutyValue 59BA                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 5E4E         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 5E44                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 0036                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0036                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01A6  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 4D5A  
                                  _getReverse 42CA                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 005C                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 59BA                                    _distRightM 0136  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 3960  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 0524  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 51D4                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 5C90                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01F6  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 5018                                       ___aldiv 451C  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 3E92                                       ___fladd 22A0  
                                     ___aomod 401A                                       ___fldiv 2BB2  
                                     ___awdiv 4BD4                                       ___flneg 583A  
                                     ___awmod 4E1A                                       ___flmul 2762  
                                     ___flsub 5642                                       ___fltol 4628  
                   __end_of_UART1_Receive_ISR 4E1A                                     ?_vfprintf 01A0  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                             __size_of_efgtoa 0CAE                               __size_of_floorf 0216  
                                     __pcinit 58E4                     _TMR5_GateInterruptHandler 018E  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0044                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 5D28                                       __ptext1 43FA  
                                     __ptext2 51D4                                       __ptext3 3D0A  
                                     __ptext4 42CA                                       __ptext5 2F4E  
                                     __ptext6 5142                                       __ptext7 3960  
                                     __ptext8 5986                                       __ptext9 59BA  
                             __size_of_printf 0028                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 5C38                         _OSCILLATOR_Initialize 5DE2  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                              ___awmod@dividend 0014  
               __size_of_CCP4_DefaultCallBack 0036                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                     _isupper 5802                                       efgtoa@c 0089  
                                     efgtoa@d 00A7                                       efgtoa@e 00BF  
                                     efgtoa@f 0085                                       efgtoa@g 00BB  
                                     efgtoa@h 00B1                                       efgtoa@i 00B9  
                                     efgtoa@l 00B5                                       efgtoa@m 00A1  
                                     efgtoa@n 00C1                                       efgtoa@p 00AB  
                                     efgtoa@t 009B                                       efgtoa@u 00C3  
                                     efgtoa@w 00AD                                     _IPR10bits 00398A  
                                     _smtDuty 0124                                     _T4HLTbits 003FA1  
                                  ??_getCurve 01AE                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                                       _tolower 53AA  
                                     _strncmp 4934                          end_of_initialization 5914  
                                     floorf@e 0077                                     _T2RSTbits 003FAF  
                                     floorf@m 0073                                       floorf@u 0079  
                                     floorf@x 0036                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 5E1C                   _UART1_SetTxInterruptHandler 5E12  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 22A0                                    efgtoa@mode 00B0  
                           ?_CCP3_SetCallBack 0014                                    efgtoa@sign 00A9  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003A              __end_of_ADCC_GetSingleConversion 5AF2  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 5C38  
                                     strcpy@d 001C                                       strlen@a 0016  
                                     strcpy@s 001A                                       strlen@s 0014  
                        __size_of_startAccell 0088                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0034                                   ___fladd@grs 0078  
                          getCurve@deltaRight 01B2                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                              _curveLeftCount 00F9                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 5564                                __end_of___flge 4836  
                              __end_of___fleq 4F74                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00DF  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D7C                             __size_of_TMR4_ISR 0038  
                              __end_of_floorf 3756                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 5CB8  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 53AA                                __end_of_strlen 578C  
                              _TMR5_ReadTimer 5D04                           start_initialization 58E4  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 5752                                   __end_of_pad 4D5A  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00E9  
                       __end_of___fpclassifyf 4934                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 0130                          __end_of_TMR4_10msISR 5E76  
                                 vfprintf@fmt 01A2                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 00EF  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 5A56  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 5D28                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 5AC0  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 0040  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 0196  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01A0  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5986                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 019E  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5950  
                      __size_of_TMR4_CallBack 002E                                     _calcSpeed 3756  
                           __size_of_getCurve 030C                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                   _checkBatt 5142                                  _currentSpeed 00EB  
                ?_UART1_SetRxInterruptHandler 0014                                     __pnvBANK1 018A  
                                 _efgtoa$3573 0093                                   _efgtoa$3568 008F  
                                 _efgtoa$3577 0095                                   _efgtoa$3569 0091  
                                 _efgtoa$3578 0097                                   _efgtoa$3579 0099  
                          setMotor@motorPower 0018                        _PIN_MANAGER_Initialize 4B0A  
                                   _dtoa$3544 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 5E3A         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 5E30                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 5E58  
                                    ?___fldiv 002A                                      ?___awdiv 0014  
                                   __ptext100 55F8                                     __ptext101 54C4  
                                   __ptext102 5CB8                              ___aodiv@quotient 0026  
                                    ?___flneg 0014                                     __ptext103 0000  
           CCP3_DefaultCallBack@capturedValue 0001                                      ?___awmod 0014  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___flsub 0079                                      ?___fltol 0079  
                          ??_UART1_Initialize 0016                                     _distLeftM 0138  
                                   _distFront 00FD                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F3  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FA  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                                   __smallconst 1000  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FC           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 5E7E     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 5E7C                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 55F8  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 5AF4                                     _curveMode 00FB  
                                    ?_tolower 001A                                __size_of_fputc 0096  
                                    _T2CLKCON 003FAE                                __size_of_fputs 0044  
                                    ?_strncmp 0014                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 5518  
                               ??_setSteering 0086                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 54C4                               ___aldiv@counter 001C  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 5986  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u700_28 5BCC                                      i1u700_29 5BDE  
                                    i1u710_28 57E8                                      i1u710_29 57FA  
                                    i1u633_20 5C5C                                      i1u633_21 5C58  
                                    i1u715_20 58D0                                      i1u707_20 57A6  
                                    i1u715_21 58CC                                      i1u707_21 57A2  
                                    i1u709_20 57E2                                      i1u708_28 57AC  
                                    i1u709_21 57DE                                      i1u708_29 57BE  
                                    _PIR1bits 0039A1                                      i1u690_20 4D7A  
                                    i1u690_21 4D76                                      i1u692_20 4DB2  
                                    i1u691_28 4D90                                      i1u692_21 4DAE  
                                    i1u691_29 4DA2                                      i1u694_20 4DF6  
                                    i1u693_28 4DC8                                      i1u694_21 4DF2  
                                    i1u693_29 4DDA                                      _PIR4bits 0039A4  
                                    i1u695_28 4DFC                                      i1u688_20 56DE  
                                    i1u695_29 4E10                                      i1u688_21 56DA  
                                    i2u711_48 5A76                                      i2u711_49 5A8A  
                                    i1u689_20 5702                                      i1u689_21 56FE  
                                    i2u713_40 5B0C                                      i2u712_48 5AAA  
                                    i2u713_41 5B08                                      i2u712_49 5ABE  
                                    i2u634_40 5C72                                      i2u634_41 5C6E  
                                    i1u699_20 5BC6                                      i1u699_21 5BC2  
                                    i2u714_48 5B12                                      i2u714_49 5B24  
                                    _PIR6bits 0039A6                                      i2u716_40 561C  
                                    i2u716_41 5618                                      i2u717_40 54F2  
                                    i2u717_41 54EE                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    i2u696_40 5928                                      i2u696_41 5924  
                                    i2u697_40 595E                                      i2u697_41 595A  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 5CB8  
                                    _TMR4_ISR 58AC                    __end_of_UART1_Transmit_ISR 5712  
                               _TMR4_CallBack 5BB2                                     _smtPeriod 0048  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                                     _vfpfcnvrt 1D7C  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 525C  
                                ??_getReverse 003A                                ??_calcMotorPow 0083  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 008C                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 5466  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                                    vfpfcnvrt@c 00E2  
                                  vfpfcnvrt@f 00DB                           ??_getBatteryVoltage 003A  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 000A                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 004C                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 43FA  
                                  _ADSTATbits 003EFC                                   _followCount 0130  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 5CE0  
                         __end_of_setSteering 3B56                                    vfprintf@ap 01A4  
                                    __Lrparam 0000                                    vfprintf@fp 01A0  
                                 _oldDistLeft 00F1                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 0087  
                   __end_of_getBatteryVoltage 52D0                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___aodiv 0188  
                            __size_of___fladd 04C2                              __size_of___aomod 0164  
                            __size_of___fldiv 039C                              __size_of___awdiv 00C4  
                            __size_of___flneg 0038                              __size_of___awmod 00B0  
                            __size_of___flmul 0450                              __size_of___flsub 0048  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 591A                       __end_of_SMT1_PR_ACQ_ISR 5642  
                                  ?_vfpfcnvrt 00C7                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 5E4E  
                          ___fpclassifyf@F465 011C                                      _actSpeed 50AE  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 5E6C  
                                    ___xxtofl 3B56                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 5E08                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 5518  
                                    _getCurve 2F4E                                      __ptext10 525C  
                                    __ptext11 5C90                                      __ptext20 4836  
                                    __ptext12 52D0                                      __ptext21 5642  
                                    __ptext13 1D7C                                      __ptext30 568A  
                                    __ptext22 583A                                      __ptext14 4934  
                                    __ptext31 5018                                      __ptext23 4730  
                                    __ptext15 10CE                                      __ptext40 417E  
                                    __ptext32 5E08                                      __ptext24 4ECA  
                                    __ptext16 53AA                                      __ptext41 4A28  
                                    __ptext33 540A                                      __ptext25 2BB2  
                                    __ptext17 5802                                      __ptext50 5564  
                                    __ptext42 59EE                                      __ptext34 5712  
                                    __ptext26 4E1A                                      __ptext18 5340  
                                    __ptext51 4F74                                      __ptext43 5A22  
                                    __ptext35 401A                                      __ptext27 325A  
                                    __ptext19 3540                                      __ptext60 5E4E  
                                    __ptext52 5E12                                      __ptext44 50AE  
                                    __ptext36 3E92                                      __ptext28 4C98  
                                    __ptext61 5872                                      __ptext53 5E1C  
                                    __ptext45 451C                                      __ptext37 5AC0  
                                    __ptext29 5752                                      __ptext70 5DE2  
                                    __ptext62 5D66                                      __ptext54 5E26  
                                    __ptext46 3B56                                      __ptext38 3756  
                                    __ptext71 5518                                      __ptext63 5B26  
                                    __ptext55 5E30                                      __ptext47 4628  
                                    __ptext39 22A0                                      __ptext80 57C8  
                                    __ptext72 5C0C                                      __ptext64 5D82  
                                    __ptext56 5E3A                                      __ptext48 2762  
                                    __ptext81 4D5A                                      __ptext73 5B56  
                                    __ptext65 5D9A                                      __ptext57 55AE  
                                    __ptext49 4BD4                                      __ptext90 5E84  
                                    __ptext82 5E7C                                      __ptext74 5E58  
                                    __ptext66 5DB2                                      __ptext58 5E44  
                                    __ptext91 5A58                                      __ptext83 5E7E  
                                    __ptext75 5B84                                      __ptext67 5DCA  
                                    __ptext59 5BE0                                      __ptext92 591A  
                                    __ptext84 5E76                                      __ptext76 5E62  
                                    __ptext68 5CE0                                      __ptext93 5A8C  
                                    __ptext85 5C38                                      __ptext77 5466  
                                    __ptext69 4B0A                                      __ptext94 5950  
                                    __ptext86 58AC                                      __ptext78 578C  
                                    __ptext95 5AF4                                      __ptext87 5BB2  
                                    __ptext79 56CE                                      __ptext96 5D48  
                                    __ptext88 5E6C                                      __ptext97 5DFA  
                                    __ptext89 5E80                                      __ptext98 5C64  
                                    __ptext99 5D04                              __size_of_isupper 0038  
                                    _distLeft 00F5                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 5E44  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012C  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0122  
                             _SMT1_Initialize 5B26                                   _IVTLOCKbits 003FD4  
                                    _setMotor 4A28                                      _setSpeed 00ED  
                    __size_of_TMR5_WriteTimer 002C                                      efgtoa@fp 0083  
                                    efgtoa@ne 009F                                      efgtoa@pp 009D  
                                    efgtoa@ou 00A3                     _UART1_OverrunErrorHandler 0198  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 52D0                                     printf@fmt 01A6  
                  __end_of_PWM8_LoadDutyValue 5A22                               _CCP3_CaptureISR 5A58  
                                 _UART1_Write 540A                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 5D66  
   __size_of_TMR5_DefaultGateInterruptHandler 001E            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 5D48  
                            ___aomod@dividend 0014                           __end_of_startAccell 525C  
                              _battCheckCount 0132                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0134  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3597 00D9  
                 __end_of_UART1_RxDataHandler 5C64                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 5950                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 5A22  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 3960  
                             _CCP4_CaptureISR 5A8C                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 42CA                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 3E92  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01AC                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0074  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 5E7C                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012A  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 5DFA                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 5E62  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 5B84                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 008E                        _getBatteryVoltage$4191 01AE  
                    _UART1_TxInterruptHandler 019C                                 ___fladd@signs 0075  
                         __end_of_Default_ISR 5E86                       __end_of_SMT1_Initialize 5B56  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 4BD4  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 0076  
                                ___fladd@bexp 0077                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 5A8C  
