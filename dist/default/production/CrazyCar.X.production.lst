

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 14:58:37 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=4,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=4,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=4,class=CODE,delta=1
   110                           	psect	text91,global,reloc=4,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=4,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=4,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=4,class=CODE,delta=1
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	text102,global,reloc=4,class=CODE,delta=1
   122                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   128  0000                     
   129                           ; Version 2.20
   130                           ; Generated 05/05/2020 GMT
   131                           ; 
   132                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F46K42 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataBANK0
   165  005EA6                     __pidataBANK0:
   166                           	callstack 0
   167                           
   168                           ;initializer for _driveMode
   169  005EA6  01                 	db	1
   170                           
   171                           	psect	idataBANK1
   172  005E9C                     __pidataBANK1:
   173                           	callstack 0
   174                           
   175                           ;initializer for _middleOffSet
   176  005E9C  FFF6               	dw	65526
   177                           
   178                           	psect	nvCOMRAM
   179  00004C                     __pnvCOMRAM:
   180                           	callstack 0
   181  00004C                     _uart1TxBufferRemaining:
   182                           	callstack 0
   183  00004C                     	ds	1
   184                           
   185                           	psect	nvBANK1
   186  000184                     __pnvBANK1:
   187                           	callstack 0
   188  000184                     _TMR4_InterruptHandler:
   189                           	callstack 0
   190  000184                     	ds	2
   191  000186                     _timer3ReloadVal:
   192                           	callstack 0
   193  000186                     	ds	2
   194  000188                     _TMR5_GateInterruptHandler:
   195                           	callstack 0
   196  000188                     	ds	2
   197  00018A                     _timer5ReloadVal:
   198                           	callstack 0
   199  00018A                     	ds	2
   200  00018C                     _CCP4_CallBack:
   201                           	callstack 0
   202  00018C                     	ds	2
   203  00018E                     _CCP3_CallBack:
   204                           	callstack 0
   205  00018E                     	ds	2
   206  000190                     _UART1_ErrorHandler:
   207                           	callstack 0
   208  000190                     	ds	2
   209  000192                     _UART1_OverrunErrorHandler:
   210                           	callstack 0
   211  000192                     	ds	2
   212  000194                     _UART1_FramingErrorHandler:
   213                           	callstack 0
   214  000194                     	ds	2
   215  000196                     _UART1_TxInterruptHandler:
   216                           	callstack 0
   217  000196                     	ds	2
   218  000198                     _UART1_RxInterruptHandler:
   219                           	callstack 0
   220  000198                     	ds	2
   221  0000                     _PIR4bits	set	14756
   222  0000                     _PIR1bits	set	14753
   223  0000                     _PIE1bits	set	14737
   224  0000                     _PIE7bits	set	14743
   225  0000                     _PIR7bits	set	14759
   226  0000                     _PIR6bits	set	14758
   227  0000                     _PIE8bits	set	14744
   228  0000                     _PIR8bits	set	14760
   229  0000                     _PIE10bits	set	14746
   230  0000                     _PIR10bits	set	14762
   231  0000                     _PIE9bits	set	14745
   232  0000                     _PIR9bits	set	14761
   233  0000                     _IPR9bits	set	14729
   234  0000                     _IPR7bits	set	14727
   235  0000                     _IPR8bits	set	14728
   236  0000                     _IPR10bits	set	14730
   237  0000                     _IPR1bits	set	14721
   238  0000                     _IPR3bits	set	14723
   239  0000                     _PIE3bits	set	14739
   240  0000                     _PMD7	set	14791
   241  0000                     _PMD6	set	14790
   242  0000                     _PMD5	set	14789
   243  0000                     _PMD4	set	14788
   244  0000                     _PMD3	set	14787
   245  0000                     _PMD2	set	14786
   246  0000                     _PMD1	set	14785
   247  0000                     _PMD0	set	14784
   248  0000                     _OSCTUNE	set	14814
   249  0000                     _OSCFRQ	set	14815
   250  0000                     _OSCEN	set	14813
   251  0000                     _OSCCON3	set	14811
   252  0000                     _OSCCON1	set	14809
   253  0000                     _CCP4PPS	set	15056
   254  0000                     _SMT1SIGPPS	set	15058
   255  0000                     _CLCIN2PPS	set	15067
   256  0000                     _RB3PPS	set	14859
   257  0000                     _RA3PPS	set	14851
   258  0000                     _SMT1WINPPS	set	15057
   259  0000                     _CLCIN0PPS	set	15065
   260  0000                     _RA4PPS	set	14852
   261  0000                     _T5GPPS	set	15049
   262  0000                     _RA0PPS	set	14848
   263  0000                     _U1RXPPS	set	15077
   264  0000                     _RA1PPS	set	14849
   265  0000                     _CLCIN3PPS	set	15068
   266  0000                     _CCP3PPS	set	15055
   267  0000                     _INLVLE	set	14980
   268  0000                     _INLVLD	set	14964
   269  0000                     _INLVLC	set	14948
   270  0000                     _INLVLB	set	14932
   271  0000                     _INLVLA	set	14916
   272  0000                     _SLRCONE	set	14979
   273  0000                     _SLRCOND	set	14963
   274  0000                     _SLRCONC	set	14947
   275  0000                     _SLRCONB	set	14931
   276  0000                     _SLRCONA	set	14915
   277  0000                     _ODCOND	set	14962
   278  0000                     _ODCONC	set	14946
   279  0000                     _ODCONB	set	14930
   280  0000                     _ODCONA	set	14914
   281  0000                     _ODCONE	set	14978
   282  0000                     _RD1I2C	set	14971
   283  0000                     _RD0I2C	set	14970
   284  0000                     _RC4I2C	set	14955
   285  0000                     _RC3I2C	set	14954
   286  0000                     _RB2I2C	set	14939
   287  0000                     _RB1I2C	set	14938
   288  0000                     _WPUC	set	14945
   289  0000                     _WPUA	set	14913
   290  0000                     _WPUB	set	14929
   291  0000                     _WPUE	set	14977
   292  0000                     _WPUD	set	14961
   293  0000                     _ANSELA	set	14912
   294  0000                     _ANSELE	set	14976
   295  0000                     _ANSELB	set	14928
   296  0000                     _ANSELC	set	14944
   297  0000                     _ANSELD	set	14960
   298  0000                     _CLC3CON	set	15456
   299  0000                     _CLC3GLS3	set	15465
   300  0000                     _CLC3GLS2	set	15464
   301  0000                     _CLC3GLS1	set	15463
   302  0000                     _CLC3GLS0	set	15462
   303  0000                     _CLC3SEL3	set	15461
   304  0000                     _CLC3SEL2	set	15460
   305  0000                     _CLC3SEL1	set	15459
   306  0000                     _CLC3SEL0	set	15458
   307  0000                     _CLC3POL	set	15457
   308  0000                     _CLC3CONbits	set	15456
   309  0000                     _U1RXB	set	15848
   310  0000                     _U1TXB	set	15850
   311  0000                     _U1ERRIRbits	set	15865
   312  0000                     _U1ERRIE	set	15866
   313  0000                     _U1ERRIR	set	15865
   314  0000                     _U1UIR	set	15864
   315  0000                     _U1FIFO	set	15863
   316  0000                     _U1BRGH	set	15862
   317  0000                     _U1BRGL	set	15861
   318  0000                     _U1CON2	set	15860
   319  0000                     _U1CON1	set	15859
   320  0000                     _U1CON0	set	15858
   321  0000                     _U1P3H	set	15857
   322  0000                     _U1P3L	set	15856
   323  0000                     _U1P2H	set	15855
   324  0000                     _U1P2L	set	15854
   325  0000                     _U1P1H	set	15853
   326  0000                     _U1P1L	set	15852
   327  0000                     _ADCON1bits	set	16121
   328  0000                     _ADERRL	set	16098
   329  0000                     _ADERRH	set	16099
   330  0000                     _ADPREVL	set	16109
   331  0000                     _ADPREVH	set	16110
   332  0000                     _ADFLTRL	set	16102
   333  0000                     _ADFLTRH	set	16103
   334  0000                     _ADSTATbits	set	16124
   335  0000                     _ADACCL	set	16104
   336  0000                     _ADACCH	set	16105
   337  0000                     _ADCON2bits	set	16122
   338  0000                     _ADCNT	set	16107
   339  0000                     _ADCON3bits	set	16123
   340  0000                     _ADRESL	set	16111
   341  0000                     _ADRESH	set	16112
   342  0000                     _ADCON0bits	set	16120
   343  0000                     _ADCON0	set	16120
   344  0000                     _ADCLK	set	16127
   345  0000                     _ADACT	set	16126
   346  0000                     _ADREF	set	16125
   347  0000                     _ADSTAT	set	16124
   348  0000                     _ADCON3	set	16123
   349  0000                     _ADCON2	set	16122
   350  0000                     _ADCON1	set	16121
   351  0000                     _ADPREH	set	16119
   352  0000                     _ADPREL	set	16118
   353  0000                     _ADCAP	set	16117
   354  0000                     _ADACQH	set	16116
   355  0000                     _ADACQL	set	16115
   356  0000                     _ADPCH	set	16113
   357  0000                     _ADRPT	set	16108
   358  0000                     _ADACCU	set	16106
   359  0000                     _ADSTPTH	set	16101
   360  0000                     _ADSTPTL	set	16100
   361  0000                     _ADUTHH	set	16097
   362  0000                     _ADUTHL	set	16096
   363  0000                     _ADLTHH	set	16095
   364  0000                     _ADLTHL	set	16094
   365  0000                     _SMT1TMR	set	16146
   366  0000                     _SMT1CPR	set	16149
   367  0000                     _SMT1CPW	set	16152
   368  0000                     _SMT1PR	set	16155
   369  0000                     _SMT1STATbits	set	16160
   370  0000                     _SMT1CON0bits	set	16158
   371  0000                     _SMT1CON1bits	set	16159
   372  0000                     _SMT1PRL	set	16155
   373  0000                     _SMT1PRH	set	16156
   374  0000                     _SMT1PRU	set	16157
   375  0000                     _SMT1SIG	set	16162
   376  0000                     _SMT1WIN	set	16163
   377  0000                     _SMT1CLK	set	16161
   378  0000                     _SMT1STAT	set	16160
   379  0000                     _SMT1CON1	set	16159
   380  0000                     _SMT1CON0	set	16158
   381  0000                     _CCPTMRS1bits	set	16223
   382  0000                     _CCPTMRS0bits	set	16222
   383  0000                     _PORTBbits	set	16331
   384  0000                     _PR2	set	16299
   385  0000                     _TMR2	set	16298
   386  0000                     _T2CONbits	set	16300
   387  0000                     _T2RSTbits	set	16303
   388  0000                     _T2HLTbits	set	16301
   389  0000                     _T2CON	set	16300
   390  0000                     _T2TMR	set	16298
   391  0000                     _T2PR	set	16299
   392  0000                     _T2RST	set	16303
   393  0000                     _T2HLT	set	16301
   394  0000                     _T2CLKCON	set	16302
   395  0000                     _PWM6DCL	set	16232
   396  0000                     _PWM6DCH	set	16233
   397  0000                     _PWM6CON	set	16234
   398  0000                     _PWM5DCL	set	16236
   399  0000                     _PWM5DCH	set	16237
   400  0000                     _PWM5CON	set	16238
   401  0000                     _PWM8DCL	set	16224
   402  0000                     _PWM8DCH	set	16225
   403  0000                     _PWM8CON	set	16226
   404  0000                     _PWM7DCL	set	16228
   405  0000                     _PWM7DCH	set	16229
   406  0000                     _PWM7CON	set	16230
   407  0000                     _PR4	set	16287
   408  0000                     _TMR4	set	16286
   409  0000                     _T4CONbits	set	16288
   410  0000                     _T4RSTbits	set	16291
   411  0000                     _T4HLTbits	set	16289
   412  0000                     _T4CON	set	16288
   413  0000                     _T4TMR	set	16286
   414  0000                     _T4PR	set	16287
   415  0000                     _T4RST	set	16291
   416  0000                     _T4HLT	set	16289
   417  0000                     _T4CLKCON	set	16290
   418  0000                     _T3GCONbits	set	16295
   419  0000                     _T3CONbits	set	16294
   420  0000                     _T3CON	set	16294
   421  0000                     _TMR3L	set	16292
   422  0000                     _TMR3H	set	16293
   423  0000                     _T3CLK	set	16297
   424  0000                     _T3GATE	set	16296
   425  0000                     _T3GCON	set	16295
   426  0000                     _T5GCONbits	set	16283
   427  0000                     _T5CONbits	set	16282
   428  0000                     _T5CON	set	16282
   429  0000                     _TMR5L	set	16280
   430  0000                     _TMR5H	set	16281
   431  0000                     _T5CLK	set	16285
   432  0000                     _T5GATE	set	16284
   433  0000                     _T5GCON	set	16283
   434  0000                     _CCPR4L	set	16240
   435  0000                     _CCPR4H	set	16241
   436  0000                     _CCP4CAP	set	16243
   437  0000                     _CCP4CON	set	16242
   438  0000                     _CCPR3L	set	16244
   439  0000                     _CCPR3H	set	16245
   440  0000                     _CCP3CAP	set	16247
   441  0000                     _CCP3CON	set	16246
   442  0000                     _PORTDbits	set	16333
   443  0000                     _IVTBASEL	set	16341
   444  0000                     _IVTBASEH	set	16342
   445  0000                     _IVTBASEU	set	16343
   446  0000                     _IVTLOCKbits	set	16340
   447  0000                     _IVTLOCK	set	16340
   448  0000                     _INTCON0bits	set	16338
   449  0000                     _TRISD	set	16325
   450  0000                     _TRISC	set	16324
   451  0000                     _TRISB	set	16323
   452  0000                     _TRISA	set	16322
   453  0000                     _TRISE	set	16326
   454  0000                     _LATC	set	16316
   455  0000                     _LATB	set	16315
   456  0000                     _LATA	set	16314
   457  0000                     _LATD	set	16317
   458  0000                     _LATE	set	16318
   459  0000                     _GIE	set	130711
   460                           
   461                           	psect	smallconst
   462  001000                     __psmallconst:
   463                           	callstack 0
   464  001000  00                 	db	0
   465  001001                     STR_4:
   466                           
   467                           ; BSR set to: 1
   468  001001  73                 	db	115	;'s'
   469  001002  74                 	db	116	;'t'
   470  001003  61                 	db	97	;'a'
   471  001004  72                 	db	114	;'r'
   472  001005  41                 	db	65	;'A'
   473  001006  63                 	db	99	;'c'
   474  001007  63                 	db	99	;'c'
   475  001008  65                 	db	101	;'e'
   476  001009  6C                 	db	108	;'l'
   477  00100A  50                 	db	80	;'P'
   478  00100B  6F                 	db	111	;'o'
   479  00100C  77                 	db	119	;'w'
   480  00100D  65                 	db	101	;'e'
   481  00100E  72                 	db	114	;'r'
   482  00100F  3A                 	db	58	;':'
   483  001010  20                 	db	32
   484  001011  25                 	db	37
   485  001012  64                 	db	100	;'d'
   486  001013  0A                 	db	10
   487  001014  00                 	db	0
   488  001015                     STR_5:
   489                           
   490                           ; BSR set to: 1
   491  001015  54                 	db	84	;'T'
   492  001016  69                 	db	105	;'i'
   493  001017  6D                 	db	109	;'m'
   494  001018  65                 	db	101	;'e'
   495  001019  3A                 	db	58	;':'
   496  00101A  20                 	db	32
   497  00101B  09                 	db	9
   498  00101C  25                 	db	37
   499  00101D  64                 	db	100	;'d'
   500  00101E  20                 	db	32
   501  00101F  20                 	db	32
   502  001020  20                 	db	32
   503  001021  20                 	db	32
   504  001022  20                 	db	32
   505  001023  09                 	db	9
   506  001024  00                 	db	0
   507  001025                     STR_3:
   508                           
   509                           ; BSR set to: 1
   510  001025  61                 	db	97	;'a'
   511  001026  63                 	db	99	;'c'
   512  001027  74                 	db	116	;'t'
   513  001028  4D                 	db	77	;'M'
   514  001029  50                 	db	80	;'P'
   515  00102A  6F                 	db	111	;'o'
   516  00102B  77                 	db	119	;'w'
   517  00102C  3A                 	db	58	;':'
   518  00102D  20                 	db	32
   519  00102E  25                 	db	37
   520  00102F  64                 	db	100	;'d'
   521  001030  0A                 	db	10
   522  001031  00                 	db	0
   523  001032                     STR_7:
   524                           
   525                           ; BSR set to: 1
   526  001032  73                 	db	115	;'s'
   527  001033  74                 	db	116	;'t'
   528  001034  61                 	db	97	;'a'
   529  001035  79                 	db	121	;'y'
   530  001036  20                 	db	32
   531  001037  52                 	db	82	;'R'
   532  001038  69                 	db	105	;'i'
   533  001039  67                 	db	103	;'g'
   534  00103A  68                 	db	104	;'h'
   535  00103B  74                 	db	116	;'t'
   536  00103C  0A                 	db	10
   537  00103D  00                 	db	0
   538  00103E                     STR_1:
   539                           
   540                           ; BSR set to: 1
   541  00103E  42                 	db	66	;'B'
   542  00103F  61                 	db	97	;'a'
   543  001040  74                 	db	116	;'t'
   544  001041  74                 	db	116	;'t'
   545  001042  65                 	db	101	;'e'
   546  001043  72                 	db	114	;'r'
   547  001044  79                 	db	121	;'y'
   548  001045  20                 	db	32
   549  001046  4C                 	db	76	;'L'
   550  001047  6F                 	db	111	;'o'
   551  001048  77                 	db	119	;'w'
   552  001049  00                 	db	0
   553  00104A                     STR_6:
   554                           
   555                           ; BSR set to: 1
   556  00104A  73                 	db	115	;'s'
   557  00104B  74                 	db	116	;'t'
   558  00104C  61                 	db	97	;'a'
   559  00104D  79                 	db	121	;'y'
   560  00104E  20                 	db	32
   561  00104F  4C                 	db	76	;'L'
   562  001050  65                 	db	101	;'e'
   563  001051  66                 	db	102	;'f'
   564  001052  74                 	db	116	;'t'
   565  001053  0A                 	db	10
   566  001054  00                 	db	0
   567  001055                     STR_2:
   568                           
   569                           ; BSR set to: 1
   570  001055  4D                 	db	77	;'M'
   571  001056  50                 	db	80	;'P'
   572  001057  6F                 	db	111	;'o'
   573  001058  77                 	db	119	;'w'
   574  001059  3A                 	db	58	;':'
   575  00105A  20                 	db	32
   576  00105B  25                 	db	37
   577  00105C  66                 	db	102	;'f'
   578  00105D  0A                 	db	10
   579  00105E  00                 	db	0
   580  00105F                     STR_8:
   581                           
   582                           ; BSR set to: 1
   583  00105F  49                 	db	73	;'I'
   584  001060  4E                 	db	78	;'N'
   585  001061  46                 	db	70	;'F'
   586  001062  00                 	db	0
   587  001063                     STR_12:
   588                           
   589                           ; BSR set to: 1
   590  001063  4E                 	db	78	;'N'
   591  001064  41                 	db	65	;'A'
   592  001065  4E                 	db	78	;'N'
   593  001066  00                 	db	0
   594  001067                     STR_9:
   595                           
   596                           ; BSR set to: 1
   597  001067  69                 	db	105	;'i'
   598  001068  6E                 	db	110	;'n'
   599  001069  66                 	db	102	;'f'
   600  00106A  00                 	db	0
   601  00106B                     STR_13:
   602                           
   603                           ; BSR set to: 1
   604  00106B  6E                 	db	110	;'n'
   605  00106C  61                 	db	97	;'a'
   606  00106D  6E                 	db	110	;'n'
   607  00106E  00                 	db	0
   608  00106F                     STR_16:
   609                           
   610                           ; BSR set to: 1
   611  00106F  6C                 	db	108	;'l'
   612  001070  66                 	db	102	;'f'
   613  001071  00                 	db	0
   614  001072  00                 	db	0	; dummy byte at the end
   615  0000                     
   616                           ; #config settings
   617                           
   618                           	psect	cinit
   619  00539C                     __pcinit:
   620                           	callstack 0
   621  00539C                     start_initialization:
   622                           	callstack 0
   623  00539C                     __initialization:
   624                           	callstack 0
   625                           
   626                           ; Initialize objects allocated to BANK1 (2 bytes)
   627                           ; load TBLPTR registers with __pidataBANK1
   628  00539C  0E9C               	movlw	low __pidataBANK1
   629  00539E  6EF6               	movwf	tblptrl,c
   630  0053A0  0E5E               	movlw	high __pidataBANK1
   631  0053A2  6EF7               	movwf	tblptrh,c
   632  0053A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   633  0053A6  6EF8               	movwf	tblptru,c
   634  0053A8  0009               	tblrd		*+	;fetch initializer
   635  0053AA  006F FFD4  F1AE    	movff	tablat,__pdataBANK1
   636  0053B0  0009               	tblrd		*+	;fetch initializer
   637  0053B2  006F FFD4  F1AF    	movff	tablat,__pdataBANK1+1
   638                           
   639                           ; Initialize objects allocated to BANK0 (1 bytes)
   640                           ; load TBLPTR registers with __pidataBANK0
   641  0053B8  0EA6               	movlw	low __pidataBANK0
   642  0053BA  6EF6               	movwf	tblptrl,c
   643  0053BC  0E5E               	movlw	high __pidataBANK0
   644  0053BE  6EF7               	movwf	tblptrh,c
   645  0053C0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   646  0053C2  6EF8               	movwf	tblptru,c
   647  0053C4  0009               	tblrd		*+	;fetch initializer
   648  0053C6  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   649                           
   650                           ; Clear objects allocated to BANK1 (132 bytes)
   651  0053CC  EE00  F100         	lfsr	0,__pbssBANK1
   652  0053D0  0E84               	movlw	132
   653  0053D2                     clear_0:
   654  0053D2  6AEE               	clrf	postinc0,c
   655  0053D4  06E8               	decf	wreg,f,c
   656  0053D6  E1FD               	bnz	clear_0
   657                           
   658                           ; Clear objects allocated to BANK0 (25 bytes)
   659  0053D8  EE00  F0E5         	lfsr	0,__pbssBANK0
   660  0053DC  0E19               	movlw	25
   661  0053DE                     clear_1:
   662  0053DE  6AEE               	clrf	postinc0,c
   663  0053E0  06E8               	decf	wreg,f,c
   664  0053E2  E1FD               	bnz	clear_1
   665                           
   666                           ; Clear objects allocated to COMRAM (18 bytes)
   667  0053E4  EE00  F03A         	lfsr	0,__pbssCOMRAM
   668  0053E8  0E12               	movlw	18
   669  0053EA                     clear_2:
   670  0053EA  6AEE               	clrf	postinc0,c
   671  0053EC  06E8               	decf	wreg,f,c
   672  0053EE  E1FD               	bnz	clear_2
   673                           
   674                           ;
   675                           ; Setup IVTBASE
   676                           ;
   677  0053F0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   678  0053F2  6ED5               	movwf	213,c
   679  0053F4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   680  0053F6  6ED6               	movwf	214,c
   681  0053F8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   682  0053FA  6ED7               	movwf	215,c
   683  0053FC                     end_of_initialization:
   684                           	callstack 0
   685  0053FC                     __end_of__initialization:
   686                           	callstack 0
   687  0053FC  0100               	movlb	0
   688  0053FE  EF9E  F02E         	goto	_main	;jump to C main() function
   689                           
   690                           	psect	bssCOMRAM
   691  00003A                     __pbssCOMRAM:
   692                           	callstack 0
   693  00003A                     _width:
   694                           	callstack 0
   695  00003A                     	ds	2
   696  00003C                     _prec:
   697                           	callstack 0
   698  00003C                     	ds	2
   699  00003E                     _flags:
   700                           	callstack 0
   701  00003E                     	ds	2
   702  000040                     TMR4_ISR@CountCallBack:
   703                           	callstack 0
   704  000040                     	ds	2
   705  000042                     _uart1RxLastError:
   706                           	callstack 0
   707  000042                     	ds	1
   708  000043                     _uart1RxCount:
   709                           	callstack 0
   710  000043                     	ds	1
   711  000044                     _uart1RxTail:
   712                           	callstack 0
   713  000044                     	ds	1
   714  000045                     _uart1RxHead:
   715                           	callstack 0
   716  000045                     	ds	1
   717  000046                     _uart1TxTail:
   718                           	callstack 0
   719  000046                     	ds	1
   720  000047                     _uart1TxHead:
   721                           	callstack 0
   722  000047                     	ds	1
   723  000048                     _smtPeriod:
   724                           	callstack 0
   725  000048                     	ds	4
   726                           
   727                           	psect	bssBANK0
   728  0000E5                     __pbssBANK0:
   729                           	callstack 0
   730  0000E5                     _BatteryVolt:
   731                           	callstack 0
   732  0000E5                     	ds	2
   733  0000E7                     _actMotorPow:
   734                           	callstack 0
   735  0000E7                     	ds	2
   736  0000E9                     _currentSpeed:
   737                           	callstack 0
   738  0000E9                     	ds	2
   739  0000EB                     _setSpeed:
   740                           	callstack 0
   741  0000EB                     	ds	2
   742  0000ED                     _oldDistRight:
   743                           	callstack 0
   744  0000ED                     	ds	2
   745  0000EF                     _oldDistLeft:
   746                           	callstack 0
   747  0000EF                     	ds	2
   748  0000F1                     _distRightM:
   749                           	callstack 0
   750  0000F1                     	ds	2
   751  0000F3                     _distRight:
   752                           	callstack 0
   753  0000F3                     	ds	2
   754  0000F5                     _distLeftM:
   755                           	callstack 0
   756  0000F5                     	ds	2
   757  0000F7                     _distLeft:
   758                           	callstack 0
   759  0000F7                     	ds	2
   760  0000F9                     _delay:
   761                           	callstack 0
   762  0000F9                     	ds	1
   763  0000FA                     _cycle10ms:
   764                           	callstack 0
   765  0000FA                     	ds	1
   766  0000FB                     _curveMode:
   767                           	callstack 0
   768  0000FB                     	ds	1
   769  0000FC                     _distFront:
   770                           	callstack 0
   771  0000FC                     	ds	2
   772                           
   773                           	psect	dataBANK0
   774  0000FE                     __pdataBANK0:
   775                           	callstack 0
   776  0000FE                     _driveMode:
   777                           	callstack 0
   778  0000FE                     	ds	1
   779                           
   780                           	psect	bssBANK1
   781  000100                     __pbssBANK1:
   782                           	callstack 0
   783  000100                     _uart1RxStatusBuffer:
   784                           	callstack 0
   785  000100                     	ds	8
   786  000108                     _uart1RxBuffer:
   787                           	callstack 0
   788  000108                     	ds	8
   789  000110                     _uart1TxBuffer:
   790                           	callstack 0
   791  000110                     	ds	8
   792  000118                     floorf@F527:
   793                           	callstack 0
   794  000118                     	ds	4
   795  00011C                     ___fpclassifyf@F465:
   796                           	callstack 0
   797  00011C                     	ds	4
   798  000120                     _smtWay:
   799                           	callstack 0
   800  000120                     	ds	4
   801  000124                     _smtDuty:
   802                           	callstack 0
   803  000124                     	ds	4
   804  000128                     _nout:
   805                           	callstack 0
   806  000128                     	ds	2
   807  00012A                     _reverseTime:
   808                           	callstack 0
   809  00012A                     	ds	2
   810  00012C                     _oldSpeed:
   811                           	callstack 0
   812  00012C                     	ds	2
   813  00012E                     _motPow:
   814                           	callstack 0
   815  00012E                     	ds	2
   816  000130                     _battCheckCount:
   817                           	callstack 0
   818  000130                     	ds	2
   819  000132                     _reverseCount:
   820                           	callstack 0
   821  000132                     	ds	2
   822  000134                     _dbuf:
   823                           	callstack 0
   824  000134                     	ds	80
   825                           
   826                           	psect	dataBANK1
   827  0001AE                     __pdataBANK1:
   828                           	callstack 0
   829  0001AE                     _middleOffSet:
   830                           	callstack 0
   831  0001AE                     	ds	2
   832                           
   833                           	psect	cstackBANK1
   834  00019A                     __pcstackBANK1:
   835                           	callstack 0
   836  00019A                     ?_vfprintf:
   837                           	callstack 0
   838  00019A                     vfprintf@fp:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x0
   842  00019A                     	ds	2
   843  00019C                     vfprintf@fmt:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x2
   847  00019C                     	ds	2
   848  00019E                     vfprintf@ap:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x4
   852  00019E                     	ds	2
   853  0001A0                     ?_printf:
   854                           	callstack 0
   855  0001A0                     printf@fmt:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x6
   859  0001A0                     	ds	6
   860  0001A6                     printf@ap:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0xC
   864  0001A6                     	ds	2
   865  0001A8                     ??_getCurve:
   866  0001A8                     startAccell@MPow:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xE
   870  0001A8                     	ds	2
   871  0001AA                     getCurve@deltaRight:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x10
   875  0001AA                     	ds	2
   876  0001AC                     getCurve@deltaLeft:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x12
   880  0001AC                     	ds	2
   881                           
   882                           	psect	cstackBANK0
   883  000060                     __pcstackBANK0:
   884                           	callstack 0
   885  000060                     ?_dtoa:
   886                           	callstack 0
   887  000060                     ___flmul@sign:
   888                           	callstack 0
   889  000060                     dtoa@fp:
   890                           	callstack 0
   891  000060                     floorf@m:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x0
   895  000060                     	ds	1
   896  000061                     ___flmul@aexp:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x1
   900  000061                     	ds	1
   901  000062                     ___flmul@grs:
   902                           	callstack 0
   903  000062                     dtoa@d:
   904                           	callstack 0
   905                           
   906                           ; 8 bytes @ 0x2
   907  000062                     	ds	2
   908  000064                     floorf@e:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x4
   912  000064                     	ds	2
   913  000066                     ___flmul@bexp:
   914                           	callstack 0
   915  000066                     floorf@u:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x6
   919  000066                     	ds	1
   920  000067                     ___flmul@prod:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x7
   924  000067                     	ds	3
   925  00006A                     _dtoa$3530:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0xA
   929  00006A                     	ds	1
   930  00006B                     ___flmul@temp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xB
   934  00006B                     	ds	1
   935  00006C                     dtoa@p:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0xC
   939  00006C                     	ds	1
   940  00006D                     ?___fladd:
   941                           	callstack 0
   942  00006D                     ___flge@ff1:
   943                           	callstack 0
   944  00006D                     ___fladd@b:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0xD
   948  00006D                     	ds	1
   949  00006E                     dtoa@w:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0xE
   953  00006E                     	ds	2
   954  000070                     dtoa@s:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x10
   958  000070                     	ds	1
   959  000071                     ___flge@ff2:
   960                           	callstack 0
   961  000071                     ___fladd@a:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x11
   965  000071                     	ds	1
   966  000072                     dtoa@n:
   967                           	callstack 0
   968                           
   969                           ; 8 bytes @ 0x12
   970  000072                     	ds	3
   971  000075                     ___fladd@signs:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x15
   975  000075                     	ds	1
   976  000076                     ___fladd@aexp:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x16
   980  000076                     	ds	1
   981  000077                     ___fladd@bexp:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x17
   985  000077                     	ds	1
   986  000078                     ___fladd@grs:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x18
   990  000078                     	ds	1
   991  000079                     ?___flsub:
   992                           	callstack 0
   993  000079                     ?___fltol:
   994                           	callstack 0
   995  000079                     ___fltol@f1:
   996                           	callstack 0
   997  000079                     ___flsub@b:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x19
  1001  000079                     	ds	1
  1002  00007A                     dtoa@i:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x1A
  1006  00007A                     	ds	3
  1007  00007D                     ??___fltol:
  1008  00007D                     ___flsub@a:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x1D
  1012  00007D                     	ds	4
  1013  000081                     ___fltol@sign1:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x21
  1017  000081                     	ds	1
  1018  000082                     ___fltol@exp1:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x22
  1022  000082                     	ds	1
  1023  000083                     ??_calcSteering:
  1024  000083                     ??_calcSpeed:
  1025  000083                     ??_calcMotorPow:
  1026  000083                     ?_efgtoa:
  1027                           	callstack 0
  1028  000083                     efgtoa@fp:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x23
  1032  000083                     	ds	2
  1033  000085                     calcMotorPow@setSpeedDelta:
  1034                           	callstack 0
  1035  000085                     _calcSteering$4174:
  1036                           	callstack 0
  1037  000085                     efgtoa@f:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x25
  1041  000085                     	ds	2
  1042  000087                     calcSteering@delta:
  1043                           	callstack 0
  1044  000087                     calcSpeed@speed:
  1045                           	callstack 0
  1046  000087                     calcMotorPow@oldSpeedDelta:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x27
  1050  000087                     	ds	2
  1051  000089                     calcMotorPow@addMPow:
  1052                           	callstack 0
  1053  000089                     efgtoa@c:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x29
  1057  000089                     	ds	1
  1058  00008A                     ??_efgtoa:
  1059                           
  1060                           ; 1 bytes @ 0x2A
  1061  00008A                     	ds	5
  1062  00008F                     _efgtoa$3554:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x2F
  1066  00008F                     	ds	2
  1067  000091                     _efgtoa$3555:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x31
  1071  000091                     	ds	2
  1072  000093                     _efgtoa$3559:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x33
  1076  000093                     	ds	2
  1077  000095                     _efgtoa$3563:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x35
  1081  000095                     	ds	2
  1082  000097                     _efgtoa$3564:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x37
  1086  000097                     	ds	2
  1087  000099                     _efgtoa$3565:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x39
  1091  000099                     	ds	2
  1092  00009B                     efgtoa@t:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x3B
  1096  00009B                     	ds	2
  1097  00009D                     efgtoa@pp:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x3D
  1101  00009D                     	ds	2
  1102  00009F                     efgtoa@ne:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x3F
  1106  00009F                     	ds	2
  1107  0000A1                     efgtoa@m:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x41
  1111  0000A1                     	ds	2
  1112  0000A3                     efgtoa@ou:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x43
  1116  0000A3                     	ds	4
  1117  0000A7                     efgtoa@d:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x47
  1121  0000A7                     	ds	2
  1122  0000A9                     efgtoa@sign:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x49
  1126  0000A9                     	ds	2
  1127  0000AB                     efgtoa@p:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x4B
  1131  0000AB                     	ds	2
  1132  0000AD                     efgtoa@w:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x4D
  1136  0000AD                     	ds	2
  1137  0000AF                     efgtoa@nmode:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x4F
  1141  0000AF                     	ds	1
  1142  0000B0                     efgtoa@mode:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x50
  1146  0000B0                     	ds	1
  1147  0000B1                     efgtoa@h:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x51
  1151  0000B1                     	ds	4
  1152  0000B5                     efgtoa@l:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x55
  1156  0000B5                     	ds	4
  1157  0000B9                     efgtoa@i:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x59
  1161  0000B9                     	ds	2
  1162  0000BB                     efgtoa@g:
  1163                           	callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x5B
  1166  0000BB                     	ds	4
  1167  0000BF                     efgtoa@e:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x5F
  1171  0000BF                     	ds	2
  1172  0000C1                     efgtoa@n:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x61
  1176  0000C1                     	ds	2
  1177  0000C3                     efgtoa@u:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x63
  1181  0000C3                     	ds	4
  1182  0000C7                     ?_vfpfcnvrt:
  1183                           	callstack 0
  1184  0000C7                     vfpfcnvrt@fp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x67
  1188  0000C7                     	ds	2
  1189  0000C9                     vfpfcnvrt@fmt:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x69
  1193  0000C9                     	ds	2
  1194  0000CB                     vfpfcnvrt@ap:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x6B
  1198  0000CB                     	ds	2
  1199  0000CD                     ??_vfpfcnvrt:
  1200                           
  1201                           ; 1 bytes @ 0x6D
  1202  0000CD                     	ds	4
  1203  0000D1                     vfpfcnvrt@ll:
  1204                           	callstack 0
  1205                           
  1206                           ; 8 bytes @ 0x71
  1207  0000D1                     	ds	8
  1208  0000D9                     _vfpfcnvrt$3583:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x79
  1212  0000D9                     	ds	2
  1213  0000DB                     vfpfcnvrt@f:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x7B
  1217  0000DB                     	ds	4
  1218  0000DF                     vfpfcnvrt@ct:
  1219                           	callstack 0
  1220                           
  1221                           ; 3 bytes @ 0x7F
  1222  0000DF                     	ds	3
  1223  0000E2                     vfpfcnvrt@c:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x82
  1227  0000E2                     	ds	1
  1228  0000E3                     vfprintf@cfmt:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x83
  1232  0000E3                     	ds	2
  1233                           
  1234                           	psect	cstackCOMRAM
  1235  000001                     __pcstackCOMRAM:
  1236                           	callstack 0
  1237  000001                     CCP3_DefaultCallBack@capturedValue:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241  000001                     	ds	2
  1242  000003                     CCP3_CaptureISR@module:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x2
  1246  000003                     	ds	2
  1247  000005                     CCP4_DefaultCallBack@capturedValue:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x4
  1251  000005                     	ds	2
  1252  000007                     CCP4_CaptureISR@module:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x6
  1256  000007                     	ds	2
  1257  000009                     ?_TMR5_ReadTimer:
  1258                           	callstack 0
  1259  000009                     TMR5_WriteTimer@timerVal:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x8
  1263  000009                     	ds	2
  1264  00000B                     ??_TMR5_ReadTimer:
  1265  00000B                     
  1266                           ; 1 bytes @ 0xA
  1267  00000B                     	ds	2
  1268  00000D                     TMR5_ReadTimer@readVal:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0xC
  1272  00000D                     	ds	2
  1273  00000F                     TMR5_ReadTimer@readValHigh:
  1274                           	callstack 0
  1275                           
  1276                           ; 1 bytes @ 0xE
  1277  00000F                     	ds	1
  1278  000010                     TMR5_ReadTimer@readValLow:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0xF
  1282  000010                     	ds	1
  1283  000011                     ??_UART1_tx_vect_isr:
  1284  000011                     
  1285                           ; 1 bytes @ 0x10
  1286  000011                     	ds	1
  1287  000012                     ??_UART1_rx_vect_isr:
  1288                           
  1289                           ; 1 bytes @ 0x11
  1290  000012                     	ds	1
  1291  000013                     ??_TMR4_ISR:
  1292                           
  1293                           ; 1 bytes @ 0x12
  1294  000013                     	ds	1
  1295  000014                     ??_TMR3_Initialize:
  1296  000014                     ?_strlen:
  1297                           	callstack 0
  1298  000014                     ?___fpclassifyf:
  1299                           	callstack 0
  1300  000014                     ?_isupper:
  1301                           	callstack 0
  1302  000014                     ?_strncmp:
  1303                           	callstack 0
  1304  000014                     ?_ADCC_GetSingleConversion:
  1305                           	callstack 0
  1306  000014                     ?___awdiv:
  1307                           	callstack 0
  1308  000014                     ?___awmod:
  1309                           	callstack 0
  1310  000014                     ?___fldiv:
  1311                           	callstack 0
  1312  000014                     ?___aldiv:
  1313                           	callstack 0
  1314  000014                     ?___flneg:
  1315                           	callstack 0
  1316  000014                     ?___aodiv:
  1317                           	callstack 0
  1318  000014                     ?___aomod:
  1319                           	callstack 0
  1320  000014                     UART1_Write@txData:
  1321                           	callstack 0
  1322  000014                     INTERRUPT_Initialize@state:
  1323                           	callstack 0
  1324  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1325                           	callstack 0
  1326  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1327                           	callstack 0
  1328  000014                     UART1_SetErrorHandler@interruptHandler:
  1329                           	callstack 0
  1330  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1331                           	callstack 0
  1332  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1333                           	callstack 0
  1334  000014                     CCP3_SetCallBack@customCallBack:
  1335                           	callstack 0
  1336  000014                     CCP4_SetCallBack@customCallBack:
  1337                           	callstack 0
  1338  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1339                           	callstack 0
  1340  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1341                           	callstack 0
  1342  000014                     PWM7_LoadDutyValue@dutyValue:
  1343                           	callstack 0
  1344  000014                     PWM8_LoadDutyValue@dutyValue:
  1345                           	callstack 0
  1346  000014                     PWM5_LoadDutyValue@dutyValue:
  1347                           	callstack 0
  1348  000014                     PWM6_LoadDutyValue@dutyValue:
  1349                           	callstack 0
  1350  000014                     ___awdiv@dividend:
  1351                           	callstack 0
  1352  000014                     ___awmod@dividend:
  1353                           	callstack 0
  1354  000014                     isupper@c:
  1355                           	callstack 0
  1356  000014                     strcpy@dest:
  1357                           	callstack 0
  1358  000014                     strlen@s:
  1359                           	callstack 0
  1360  000014                     strncmp@_l:
  1361                           	callstack 0
  1362  000014                     ___aldiv@dividend:
  1363                           	callstack 0
  1364  000014                     ___fleq@ff1:
  1365                           	callstack 0
  1366  000014                     ___flneg@f1:
  1367                           	callstack 0
  1368  000014                     ___fldiv@b:
  1369                           	callstack 0
  1370  000014                     ___fpclassifyf@x:
  1371                           	callstack 0
  1372  000014                     ___aodiv@dividend:
  1373                           	callstack 0
  1374  000014                     ___aomod@dividend:
  1375                           	callstack 0
  1376                           
  1377                           ; 8 bytes @ 0x13
  1378  000014                     	ds	1
  1379  000015                     putch@txData:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x14
  1383  000015                     	ds	1
  1384  000016                     ??_TMR5_Initialize:
  1385  000016                     ??_isupper:
  1386  000016                     ??_PWM7_LoadDutyValue:
  1387  000016                     ??_PWM8_LoadDutyValue:
  1388  000016                     ??_PWM5_LoadDutyValue:
  1389  000016                     ??_PWM6_LoadDutyValue:
  1390  000016                     ??_ADCC_GetSingleConversion:
  1391  000016                     ___awdiv@divisor:
  1392                           	callstack 0
  1393  000016                     ___awmod@divisor:
  1394                           	callstack 0
  1395  000016                     fputc@c:
  1396                           	callstack 0
  1397  000016                     strcpy@src:
  1398                           	callstack 0
  1399  000016                     strlen@a:
  1400                           	callstack 0
  1401  000016                     strncmp@_r:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x15
  1405  000016                     	ds	2
  1406  000018                     ??___fpclassifyf:
  1407  000018                     ??_strcpy:
  1408  000018                     ADCC_GetSingleConversion@channel:
  1409                           	callstack 0
  1410  000018                     ___awdiv@counter:
  1411                           	callstack 0
  1412  000018                     ___awmod@counter:
  1413                           	callstack 0
  1414  000018                     setMotor@motorPower:
  1415                           	callstack 0
  1416  000018                     fputc@fp:
  1417                           	callstack 0
  1418  000018                     strncmp@n:
  1419                           	callstack 0
  1420  000018                     ___aldiv@divisor:
  1421                           	callstack 0
  1422  000018                     ___fleq@ff2:
  1423                           	callstack 0
  1424  000018                     ___fldiv@a:
  1425                           	callstack 0
  1426                           
  1427                           ; 4 bytes @ 0x17
  1428  000018                     	ds	1
  1429  000019                     ___awdiv@sign:
  1430                           	callstack 0
  1431  000019                     ___awmod@sign:
  1432                           	callstack 0
  1433                           
  1434                           ; 1 bytes @ 0x18
  1435  000019                     	ds	1
  1436  00001A                     ??_setMotor:
  1437  00001A                     ??_fputc:
  1438  00001A                     ??_strncmp:
  1439  00001A                     ?_tolower:
  1440                           	callstack 0
  1441  00001A                     ___awdiv@quotient:
  1442                           	callstack 0
  1443  00001A                     strcpy@s:
  1444                           	callstack 0
  1445  00001A                     tolower@c:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x19
  1449  00001A                     	ds	1
  1450  00001B                     strncmp@l:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x1A
  1454  00001B                     	ds	1
  1455  00001C                     ??___fldiv:
  1456  00001C                     ??_tolower:
  1457  00001C                     ??___fleq:
  1458  00001C                     ?___xxtofl:
  1459                           	callstack 0
  1460  00001C                     ___aldiv@counter:
  1461                           	callstack 0
  1462  00001C                     setSteering@steering:
  1463                           	callstack 0
  1464  00001C                     ___fpclassifyf@e:
  1465                           	callstack 0
  1466  00001C                     strcpy@d:
  1467                           	callstack 0
  1468  00001C                     ___xxtofl@val:
  1469                           	callstack 0
  1470  00001C                     ___aodiv@divisor:
  1471                           	callstack 0
  1472  00001C                     ___aomod@divisor:
  1473                           	callstack 0
  1474                           
  1475                           ; 8 bytes @ 0x1B
  1476  00001C                     	ds	1
  1477  00001D                     ___aldiv@sign:
  1478                           	callstack 0
  1479  00001D                     strncmp@r:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x1C
  1483  00001D                     	ds	1
  1484  00001E                     setSteering@steeringMode:
  1485                           	callstack 0
  1486  00001E                     ___aldiv@quotient:
  1487                           	callstack 0
  1488  00001E                     ___fpclassifyf@u:
  1489                           	callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x1D
  1492  00001E                     	ds	1
  1493  00001F                     ??_setSteering:
  1494  00001F                     fputs@s:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x1E
  1498  00001F                     	ds	1
  1499  000020                     ??___xxtofl:
  1500  000020                     _tolower$3676:
  1501                           	callstack 0
  1502  000020                     ___fldiv@rem:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x1F
  1506  000020                     	ds	1
  1507  000021                     setSteering@steeringF:
  1508                           	callstack 0
  1509  000021                     fputs@fp:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x20
  1513  000021                     	ds	1
  1514  000022                     ?_actSpeed:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x21
  1518  000022                     	ds	1
  1519  000023                     fputs@c:
  1520                           	callstack 0
  1521  000023                     setSteering@steeringB:
  1522                           	callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x22
  1525  000023                     	ds	1
  1526  000024                     ___aodiv@counter:
  1527                           	callstack 0
  1528  000024                     ___aomod@counter:
  1529                           	callstack 0
  1530  000024                     ___fldiv@sign:
  1531                           	callstack 0
  1532  000024                     ___xxtofl@sign:
  1533                           	callstack 0
  1534  000024                     actSpeed@speed:
  1535                           	callstack 0
  1536  000024                     fputs@i:
  1537                           	callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x23
  1540  000024                     	ds	1
  1541  000025                     ___aodiv@sign:
  1542                           	callstack 0
  1543  000025                     ___aomod@sign:
  1544                           	callstack 0
  1545  000025                     ___xxtofl@exp:
  1546                           	callstack 0
  1547  000025                     ___fldiv@new_exp:
  1548                           	callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x24
  1551  000025                     	ds	1
  1552  000026                     ?_abs:
  1553                           	callstack 0
  1554  000026                     ?_pad:
  1555                           	callstack 0
  1556  000026                     pad@fp:
  1557                           	callstack 0
  1558  000026                     abs@a:
  1559                           	callstack 0
  1560  000026                     ___xxtofl@arg:
  1561                           	callstack 0
  1562  000026                     ___aodiv@quotient:
  1563                           	callstack 0
  1564                           
  1565                           ; 8 bytes @ 0x25
  1566  000026                     	ds	1
  1567  000027                     ___fldiv@grs:
  1568                           	callstack 0
  1569                           
  1570                           ; 4 bytes @ 0x26
  1571  000027                     	ds	1
  1572  000028                     ??_abs:
  1573  000028                     pad@buf:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x27
  1577  000028                     	ds	2
  1578  00002A                     ?___flmul:
  1579                           	callstack 0
  1580  00002A                     pad@p:
  1581                           	callstack 0
  1582  00002A                     ___flmul@b:
  1583                           	callstack 0
  1584                           
  1585                           ; 4 bytes @ 0x29
  1586  00002A                     	ds	1
  1587  00002B                     ___fldiv@bexp:
  1588                           	callstack 0
  1589                           
  1590                           ; 1 bytes @ 0x2A
  1591  00002B                     	ds	1
  1592  00002C                     ??_pad:
  1593  00002C                     ___fldiv@aexp:
  1594                           	callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x2B
  1597  00002C                     	ds	1
  1598  00002D                     ?_floorf:
  1599                           	callstack 0
  1600  00002D                     pad@i:
  1601                           	callstack 0
  1602  00002D                     floorf@x:
  1603                           	callstack 0
  1604                           
  1605                           ; 4 bytes @ 0x2C
  1606  00002D                     	ds	1
  1607  00002E                     ___flmul@a:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x2D
  1611  00002E                     	ds	1
  1612  00002F                     pad@w:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x2E
  1616  00002F                     	ds	2
  1617  000031                     ??_floorf:
  1618  000031                     ??_dtoa:
  1619                           
  1620                           ; 1 bytes @ 0x30
  1621  000031                     	ds	1
  1622  000032                     ??___flmul:
  1623                           
  1624                           ; 1 bytes @ 0x31
  1625  000032                     	ds	4
  1626  000036                     ??___fladd:
  1627  000036                     ??___flge:
  1628                           
  1629                           ; 1 bytes @ 0x35
  1630  000036                     	ds	4
  1631  00003A                     
  1632                           ; 1 bytes @ 0x39
  1633 ;;
  1634 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1635 ;;
  1636 ;; *************** function _main *****************
  1637 ;; Defined at:
  1638 ;;		line 8 in file "main.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels required when called: 19
  1658 ;; This function calls:
  1659 ;;		_SYSTEM_Initialize
  1660 ;;		_TMR4_SetInterruptHandler
  1661 ;;		_loop
  1662 ;; This function is called by:
  1663 ;;		Startup code after reset
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text0
  1668  005D3C                     __ptext0:
  1669                           	callstack 0
  1670  005D3C                     _main:
  1671                           	callstack 12
  1672  005D3C                     
  1673                           ;main.c: 9:     SYSTEM_Initialize();
  1674  005D3C  ECDE  F02A         	call	_SYSTEM_Initialize	;wreg free
  1675  005D40                     
  1676                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1677  005D40  8ED2               	bsf	210,7,c	;volatile
  1678  005D42                     
  1679                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1680  005D42  8CD2               	bsf	210,6,c	;volatile
  1681                           
  1682                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1683  005D44  0E96               	movlw	low _TMR4_10msISR
  1684  005D46  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1685  005D48  0E5E               	movlw	high _TMR4_10msISR
  1686  005D4A  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1687  005D4C  EC39  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
  1688  005D50                     l9199:
  1689                           
  1690                           ;main.c: 15:         loop();
  1691  005D50  ECE7  F021         	call	_loop	;wreg free
  1692  005D54  EFA8  F02E         	goto	l9199
  1693  005D58  EF57  F000         	goto	start
  1694  005D5C                     __end_of_main:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _loop *****************
  1698 ;; Defined at:
  1699 ;;		line 19 in file "main.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 18
  1720 ;; This function calls:
  1721 ;;		___flge
  1722 ;;		___xxtofl
  1723 ;;		_calcMotorPow
  1724 ;;		_calcSpeed
  1725 ;;		_calcSteering
  1726 ;;		_checkBatt
  1727 ;;		_getBatteryVoltage
  1728 ;;		_getCurve
  1729 ;;		_getReverse
  1730 ;;		_printf
  1731 ;;		_setMotor
  1732 ;;		_setSteering
  1733 ;;		_startAccell
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text1
  1740  0043CE                     __ptext1:
  1741                           	callstack 0
  1742  0043CE                     _loop:
  1743                           	callstack 12
  1744  0043CE                     
  1745                           ;main.c: 20:     setMotor(0);
  1746  0043CE  0E00               	movlw	0
  1747  0043D0  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1748  0043D2  0E00               	movlw	0
  1749  0043D4  6E18               	movwf	setMotor@motorPower^0,c
  1750  0043D6  EC8B  F025         	call	_setMotor	;wreg free
  1751                           
  1752                           ;main.c: 21:     setSteering(0, Front);
  1753  0043DA  0E00               	movlw	0
  1754  0043DC  6E1D               	movwf	(setSteering@steering+1)^0,c
  1755  0043DE  0E00               	movlw	0
  1756  0043E0  6E1C               	movwf	setSteering@steering^0,c
  1757  0043E2  0E03               	movlw	3
  1758  0043E4  6E1E               	movwf	setSteering@steeringMode^0,c
  1759  0043E6  EC3A  F01E         	call	_setSteering	;wreg free
  1760  0043EA                     l1224:
  1761  0043EA  B8CB               	btfsc	203,4,c	;volatile
  1762  0043EC  EFFA  F021         	goto	u10231
  1763  0043F0  EFFC  F021         	goto	u10230
  1764  0043F4                     u10231:
  1765  0043F4  EFF5  F021         	goto	l1224
  1766  0043F8                     u10230:
  1767  0043F8                     l9149:
  1768  0043F8  0100               	movlb	0	; () banked
  1769  0043FA  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1770  0043FC  B4D8               	btfsc	status,2,c
  1771  0043FE  EF03  F022         	goto	u10241
  1772  004402  EF05  F022         	goto	u10240
  1773  004406                     u10241:
  1774  004406  EFFC  F021         	goto	l9149
  1775  00440A                     u10240:
  1776  00440A                     
  1777                           ; BSR set to: 0
  1778                           ;main.c: 26:         cycle10ms = 0;
  1779  00440A  0E00               	movlw	0
  1780  00440C  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1781  00440E                     
  1782                           ; BSR set to: 0
  1783                           ;main.c: 28:         getBatteryVoltage();
  1784  00440E  EC07  F02F         	call	_getBatteryVoltage	;wreg free
  1785  004412                     
  1786                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1787  004412  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  1788  004416  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1789  00441A  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1790  00441C  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1791  00441E  0E00               	movlw	0
  1792  004420  EC60  F01D         	call	___xxtofl
  1793  004424  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1794  004428  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1795  00442C  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1796  004430  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1797  004434  0E7B               	movlw	123
  1798  004436  0100               	movlb	0	; () banked
  1799  004438  6F71               	movwf	___flge@ff2& (0+255),b
  1800  00443A  0E14               	movlw	20
  1801  00443C  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1802  00443E  0E2E               	movlw	46
  1803  004440  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1804  004442  0E45               	movlw	69
  1805  004444  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1806  004446  EC0F  F024         	call	___flge	;wreg free
  1807  00444A  0100               	movlb	0	; () banked
  1808  00444C  A0D8               	btfss	status,0,c
  1809  00444E  EF2B  F022         	goto	u10251
  1810  004452  EF2D  F022         	goto	u10250
  1811  004456                     u10251:
  1812  004456  EFFC  F021         	goto	l9149
  1813  00445A                     u10250:
  1814  00445A                     
  1815                           ; BSR set to: 0
  1816                           ;main.c: 31:     startAccell();
  1817  00445A  ECD0  F01F         	call	_startAccell	;wreg free
  1818  00445E                     
  1819                           ;main.c: 32:     driveMode = Straight;
  1820  00445E  0E01               	movlw	1
  1821  004460  0100               	movlb	0	; () banked
  1822  004462  6FFE               	movwf	_driveMode& (0+255),b
  1823  004464                     
  1824                           ; BSR set to: 0
  1825                           ;main.c: 33:     curveMode = OutCurve;
  1826  004464  0E00               	movlw	0
  1827  004466  6FFB               	movwf	_curveMode& (0+255),b
  1828  004468                     
  1829                           ; BSR set to: 0
  1830                           ;main.c: 34:     oldDistLeft = distLeft;
  1831  004468  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  1832  00446C  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1833  004470                     
  1834                           ; BSR set to: 0
  1835                           ;main.c: 35:     oldDistRight = distRight;
  1836  004470  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  1837  004474  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  1838  004478                     
  1839                           ; BSR set to: 0
  1840                           ;main.c: 36:     cycle10ms = 0;
  1841  004478  0E00               	movlw	0
  1842  00447A  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1843  00447C                     l9169:
  1844  00447C  0100               	movlb	0	; () banked
  1845  00447E  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1846  004480  B4D8               	btfsc	status,2,c
  1847  004482  EF45  F022         	goto	u10261
  1848  004486  EF47  F022         	goto	u10260
  1849  00448A                     u10261:
  1850  00448A  EF3E  F022         	goto	l9169
  1851  00448E                     u10260:
  1852  00448E                     
  1853                           ; BSR set to: 0
  1854                           ;main.c: 39:         cycle10ms = 0;
  1855  00448E  0E00               	movlw	0
  1856  004490  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1857  004492                     
  1858                           ; BSR set to: 0
  1859                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1860  004492  BACB               	btfsc	203,5,c	;volatile
  1861  004494  EF4E  F022         	goto	u10271
  1862  004498  EF50  F022         	goto	u10270
  1863  00449C                     u10271:
  1864  00449C  EF62  F022         	goto	l9179
  1865  0044A0                     u10270:
  1866  0044A0                     
  1867                           ; BSR set to: 0
  1868                           ;main.c: 42:             setSpeed = 0;
  1869  0044A0  0E00               	movlw	0
  1870  0044A2  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  1871  0044A4  0E00               	movlw	0
  1872  0044A6  6FEB               	movwf	_setSpeed& (0+255),b
  1873                           
  1874                           ;main.c: 43:             actMotorPow = 0;
  1875  0044A8  0E00               	movlw	0
  1876  0044AA  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1877  0044AC  0E00               	movlw	0
  1878  0044AE  6FE7               	movwf	_actMotorPow& (0+255),b
  1879  0044B0                     
  1880                           ; BSR set to: 0
  1881                           ;main.c: 44:             setSteering(0, Front);
  1882  0044B0  0E00               	movlw	0
  1883  0044B2  6E1D               	movwf	(setSteering@steering+1)^0,c
  1884  0044B4  0E00               	movlw	0
  1885  0044B6  6E1C               	movwf	setSteering@steering^0,c
  1886  0044B8  0E03               	movlw	3
  1887  0044BA  6E1E               	movwf	setSteering@steeringMode^0,c
  1888  0044BC  EC3A  F01E         	call	_setSteering	;wreg free
  1889                           
  1890                           ;main.c: 45:             break;
  1891  0044C0  EF81  F022         	goto	l1240
  1892  0044C4                     l9179:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main.c: 48:         if (checkBatt()) {
  1896  0044C4  EC18  F029         	call	_checkBatt	;wreg free
  1897  0044C8  0900               	iorlw	0
  1898  0044CA  B4D8               	btfsc	status,2,c
  1899  0044CC  EF6A  F022         	goto	u10281
  1900  0044D0  EF6C  F022         	goto	u10280
  1901  0044D4                     u10281:
  1902  0044D4  EF75  F022         	goto	l9183
  1903  0044D8                     u10280:
  1904  0044D8                     
  1905                           ;main.c: 49:             printf("Battery Low");
  1906  0044D8  0E3E               	movlw	low STR_1
  1907  0044DA  0101               	movlb	1	; () banked
  1908  0044DC  6FA0               	movwf	printf@fmt& (0+255),b
  1909  0044DE  0E10               	movlw	high STR_1
  1910  0044E0  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1911  0044E2  EC52  F02E         	call	_printf	;wreg free
  1912                           
  1913                           ;main.c: 50:             break;
  1914  0044E6  EF81  F022         	goto	l1240
  1915  0044EA                     l9183:
  1916                           
  1917                           ;main.c: 53:         getCurve();
  1918  0044EA  ECEB  F018         	call	_getCurve	;wreg free
  1919  0044EE                     
  1920                           ;main.c: 54:         getReverse();
  1921  0044EE  EC8C  F023         	call	_getReverse	;wreg free
  1922  0044F2                     
  1923                           ;main.c: 56:         calcSteering();
  1924  0044F2  EC38  F01A         	call	_calcSteering	;wreg free
  1925  0044F6                     
  1926                           ;main.c: 57:         calcSpeed();
  1927  0044F6  EC5B  F01C         	call	_calcSpeed	;wreg free
  1928  0044FA                     
  1929                           ;main.c: 58:         calcMotorPow();
  1930  0044FA  EC41  F021         	call	_calcMotorPow	;wreg free
  1931  0044FE  EF3E  F022         	goto	l9169
  1932  004502                     l1240:
  1933  004502  0012               	return		;funcret
  1934  004504                     __end_of_loop:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _startAccell *****************
  1938 ;; Defined at:
  1939 ;;		line 98 in file "main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  MPow            4   14[BANK1 ] float 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;Total ram usage:        4 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 17
  1960 ;; This function calls:
  1961 ;;		___flge
  1962 ;;		___flmul
  1963 ;;		___fltol
  1964 ;;		___xxtofl
  1965 ;;		_calcSteering
  1966 ;;		_printf
  1967 ;;		_setMotor
  1968 ;;		_setSteering
  1969 ;; This function is called by:
  1970 ;;		_loop
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text2
  1975  003FA0                     __ptext2:
  1976                           	callstack 0
  1977  003FA0                     _startAccell:
  1978                           	callstack 12
  1979  003FA0                     
  1980                           ;main.c: 99:     setSteering(0, Front);
  1981  003FA0  0E00               	movlw	0
  1982  003FA2  6E1D               	movwf	(setSteering@steering+1)^0,c
  1983  003FA4  0E00               	movlw	0
  1984  003FA6  6E1C               	movwf	setSteering@steering^0,c
  1985  003FA8  0E03               	movlw	3
  1986  003FAA  6E1E               	movwf	setSteering@steeringMode^0,c
  1987  003FAC  EC3A  F01E         	call	_setSteering	;wreg free
  1988  003FB0                     
  1989                           ;main.c: 100:     driveMode = Accel;
  1990  003FB0  0E00               	movlw	0
  1991  003FB2  0100               	movlb	0	; () banked
  1992  003FB4  6FFE               	movwf	_driveMode& (0+255),b
  1993  003FB6                     
  1994                           ; BSR set to: 0
  1995                           ;main.c: 102:     actMotorPow = (40);
  1996  003FB6  0E00               	movlw	0
  1997  003FB8  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1998  003FBA  0E28               	movlw	40
  1999  003FBC  6FE7               	movwf	_actMotorPow& (0+255),b
  2000                           
  2001                           ;main.c: 103:     float MPow = actMotorPow;
  2002  003FBE  C0E7  F01C         	movff	_actMotorPow,___xxtofl@val
  2003  003FC2  C0E8  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  2004  003FC6  0E00               	movlw	0
  2005  003FC8  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  2006  003FCA  0EFF               	movlw	-1
  2007  003FCC  6E1E               	movwf	(___xxtofl@val+2)^0,c
  2008  003FCE  6E1F               	movwf	(___xxtofl@val+3)^0,c
  2009  003FD0  0E01               	movlw	1
  2010  003FD2  EC60  F01D         	call	___xxtofl
  2011  003FD6  C01C  F1A8         	movff	?___xxtofl,startAccell@MPow
  2012  003FDA  C01D  F1A9         	movff	?___xxtofl+1,startAccell@MPow+1
  2013  003FDE  C01E  F1AA         	movff	?___xxtofl+2,startAccell@MPow+2
  2014  003FE2  C01F  F1AB         	movff	?___xxtofl+3,startAccell@MPow+3
  2015  003FE6                     
  2016                           ;main.c: 104:         printf("MPow: %f\n",MPow);
  2017  003FE6  0E55               	movlw	low STR_2
  2018  003FE8  0101               	movlb	1	; () banked
  2019  003FEA  6FA0               	movwf	printf@fmt& (0+255),b
  2020  003FEC  0E10               	movlw	high STR_2
  2021  003FEE  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2022  003FF0  C1A8  F1A2         	movff	startAccell@MPow,?_printf+2
  2023  003FF4  C1A9  F1A3         	movff	startAccell@MPow+1,?_printf+3
  2024  003FF8  C1AA  F1A4         	movff	startAccell@MPow+2,?_printf+4
  2025  003FFC  C1AB  F1A5         	movff	startAccell@MPow+3,?_printf+5
  2026  004000  EC52  F02E         	call	_printf	;wreg free
  2027                           
  2028                           ;main.c: 105:     while (MPow < (250)) {
  2029  004004  EF4A  F020         	goto	l8945
  2030  004008                     l8931:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;main.c: 106:         MPow *= (1.1);
  2034  004008  C1A8  F02A         	movff	startAccell@MPow,___flmul@b
  2035  00400C  C1A9  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  2036  004010  C1AA  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  2037  004014  C1AB  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  2038  004018  0ECD               	movlw	205
  2039  00401A  6E2E               	movwf	___flmul@a^0,c
  2040  00401C  0ECC               	movlw	204
  2041  00401E  6E2F               	movwf	(___flmul@a+1)^0,c
  2042  004020  0E8C               	movlw	140
  2043  004022  6E30               	movwf	(___flmul@a+2)^0,c
  2044  004024  0E3F               	movlw	63
  2045  004026  6E31               	movwf	(___flmul@a+3)^0,c
  2046  004028  EC83  F013         	call	___flmul	;wreg free
  2047  00402C  C02A  F1A8         	movff	?___flmul,startAccell@MPow
  2048  004030  C02B  F1A9         	movff	?___flmul+1,startAccell@MPow+1
  2049  004034  C02C  F1AA         	movff	?___flmul+2,startAccell@MPow+2
  2050  004038  C02D  F1AB         	movff	?___flmul+3,startAccell@MPow+3
  2051  00403C                     
  2052                           ;main.c: 107:         actMotorPow = (int16_t) MPow;
  2053  00403C  C1A8  F079         	movff	startAccell@MPow,___fltol@f1
  2054  004040  C1A9  F07A         	movff	startAccell@MPow+1,___fltol@f1+1
  2055  004044  C1AA  F07B         	movff	startAccell@MPow+2,___fltol@f1+2
  2056  004048  C1AB  F07C         	movff	startAccell@MPow+3,___fltol@f1+3
  2057  00404C  EC08  F023         	call	___fltol	;wreg free
  2058  004050  C079  F0E7         	movff	?___fltol,_actMotorPow
  2059  004054  C07A  F0E8         	movff	?___fltol+1,_actMotorPow+1
  2060  004058                     
  2061                           ;main.c: 108:         setMotor(actMotorPow);
  2062  004058  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2063  00405C  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2064  004060  EC8B  F025         	call	_setMotor	;wreg free
  2065  004064                     
  2066                           ;main.c: 109:         printf("actMPow: %d\n",actMotorPow);
  2067  004064  0E25               	movlw	low STR_3
  2068  004066  0101               	movlb	1	; () banked
  2069  004068  6FA0               	movwf	printf@fmt& (0+255),b
  2070  00406A  0E10               	movlw	high STR_3
  2071  00406C  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2072  00406E  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2073  004072  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2074  004076  EC52  F02E         	call	_printf	;wreg free
  2075  00407A                     
  2076                           ;main.c: 110:         calcSteering();
  2077  00407A  EC38  F01A         	call	_calcSteering	;wreg free
  2078  00407E                     
  2079                           ;main.c: 112:         cycle10ms = 0;
  2080  00407E  0E00               	movlw	0
  2081  004080  0100               	movlb	0	; () banked
  2082  004082  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2083  004084                     l8943:
  2084                           
  2085                           ; BSR set to: 0
  2086  004084  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  2087  004086  B4D8               	btfsc	status,2,c
  2088  004088  EF48  F020         	goto	u9901
  2089  00408C  EF4A  F020         	goto	u9900
  2090  004090                     u9901:
  2091  004090  EF42  F020         	goto	l8943
  2092  004094                     u9900:
  2093  004094                     l8945:
  2094                           
  2095                           ;main.c: 105:     while (MPow < (250)) {
  2096  004094  C1A8  F06D         	movff	startAccell@MPow,___flge@ff1
  2097  004098  C1A9  F06E         	movff	startAccell@MPow+1,___flge@ff1+1
  2098  00409C  C1AA  F06F         	movff	startAccell@MPow+2,___flge@ff1+2
  2099  0040A0  C1AB  F070         	movff	startAccell@MPow+3,___flge@ff1+3
  2100  0040A4  0E00               	movlw	0
  2101  0040A6  0100               	movlb	0	; () banked
  2102  0040A8  6F71               	movwf	___flge@ff2& (0+255),b
  2103  0040AA  0E00               	movlw	0
  2104  0040AC  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2105  0040AE  0E7A               	movlw	122
  2106  0040B0  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2107  0040B2  0E43               	movlw	67
  2108  0040B4  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2109  0040B6  EC0F  F024         	call	___flge	;wreg free
  2110  0040BA  0100               	movlb	0	; () banked
  2111  0040BC  A0D8               	btfss	status,0,c
  2112  0040BE  EF63  F020         	goto	u9911
  2113  0040C2  EF65  F020         	goto	u9910
  2114  0040C6                     u9911:
  2115  0040C6  EF04  F020         	goto	l8931
  2116  0040CA                     u9910:
  2117  0040CA                     
  2118                           ; BSR set to: 0
  2119                           ;main.c: 116:     actMotorPow = (250);
  2120  0040CA  0E00               	movlw	0
  2121  0040CC  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  2122  0040CE  0EFA               	movlw	250
  2123  0040D0  6FE7               	movwf	_actMotorPow& (0+255),b
  2124  0040D2                     
  2125                           ; BSR set to: 0
  2126                           ;main.c: 117:     setMotor(actMotorPow);
  2127  0040D2  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2128  0040D6  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2129  0040DA  EC8B  F025         	call	_setMotor	;wreg free
  2130  0040DE                     
  2131                           ;main.c: 118:     printf("starAccelPower: %d\n", actMotorPow);
  2132  0040DE  0E01               	movlw	low STR_4
  2133  0040E0  0101               	movlb	1	; () banked
  2134  0040E2  6FA0               	movwf	printf@fmt& (0+255),b
  2135  0040E4  0E10               	movlw	high STR_4
  2136  0040E6  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2137  0040E8  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2138  0040EC  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2139  0040F0  EC52  F02E         	call	_printf	;wreg free
  2140  0040F4                     
  2141                           ;main.c: 120:     cycle10ms = 0;
  2142  0040F4  0E00               	movlw	0
  2143  0040F6  0100               	movlb	0	; () banked
  2144  0040F8  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2145                           
  2146                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2147  0040FA  EF81  F020         	goto	l8957
  2148  0040FE                     l8955:
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 122:         calcSteering();
  2152  0040FE  EC38  F01A         	call	_calcSteering	;wreg free
  2153  004102                     l8957:
  2154                           
  2155                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2156  004102  0E1D               	movlw	29
  2157  004104  0100               	movlb	0	; () banked
  2158  004106  65FA               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2159  004108  EF88  F020         	goto	u9921
  2160  00410C  EF8A  F020         	goto	u9920
  2161  004110                     u9921:
  2162  004110  EF7F  F020         	goto	l8955
  2163  004114                     u9920:
  2164  004114                     
  2165                           ; BSR set to: 0
  2166                           ;main.c: 124:     driveMode = Straight;
  2167  004114  0E01               	movlw	1
  2168  004116  6FFE               	movwf	_driveMode& (0+255),b
  2169  004118                     
  2170                           ; BSR set to: 0
  2171                           ;main.c: 125:     calcSteering();
  2172  004118  EC38  F01A         	call	_calcSteering	;wreg free
  2173  00411C  0012               	return		;funcret
  2174  00411E                     __end_of_startAccell:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _calcSteering *****************
  2178 ;; Defined at:
  2179 ;;		line 234 in file "main.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  delta           2   39[BANK0 ] short 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        6 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 10
  2200 ;; This function calls:
  2201 ;;		___awdiv
  2202 ;;		___flmul
  2203 ;;		___fltol
  2204 ;;		___xxtofl
  2205 ;;		_setSteering
  2206 ;; This function is called by:
  2207 ;;		_loop
  2208 ;;		_startAccell
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text3
  2213  003470                     __ptext3:
  2214                           	callstack 0
  2215  003470                     _calcSteering:
  2216                           	callstack 18
  2217  003470                     
  2218                           ;main.c: 235:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  2219  003470  0EF3               	movlw	243
  2220  003472  6E2E               	movwf	___flmul@a^0,c
  2221  003474  0E04               	movlw	4
  2222  003476  6E2F               	movwf	(___flmul@a+1)^0,c
  2223  003478  0EB5               	movlw	181
  2224  00347A  6E30               	movwf	(___flmul@a+2)^0,c
  2225  00347C  0E3F               	movlw	63
  2226  00347E  6E31               	movwf	(___flmul@a+3)^0,c
  2227  003480  C1AE  F01C         	movff	_middleOffSet,___xxtofl@val
  2228  003484  C1AF  F01D         	movff	_middleOffSet+1,___xxtofl@val+1
  2229  003488  0E00               	movlw	0
  2230  00348A  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  2231  00348C  0EFF               	movlw	-1
  2232  00348E  6E1E               	movwf	(___xxtofl@val+2)^0,c
  2233  003490  6E1F               	movwf	(___xxtofl@val+3)^0,c
  2234  003492  0E01               	movlw	1
  2235  003494  EC60  F01D         	call	___xxtofl
  2236  003498  C01C  F02A         	movff	?___xxtofl,___flmul@b
  2237  00349C  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  2238  0034A0  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  2239  0034A4  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  2240  0034A8  EC83  F013         	call	___flmul	;wreg free
  2241  0034AC  C02A  F079         	movff	?___flmul,___fltol@f1
  2242  0034B0  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
  2243  0034B4  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
  2244  0034B8  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
  2245  0034BC  EC08  F023         	call	___fltol	;wreg free
  2246  0034C0  C0F3  F083         	movff	_distRight,??_calcSteering	;volatile
  2247  0034C4  C0F4  F084         	movff	_distRight+1,??_calcSteering+1	;volatile
  2248  0034C8  0100               	movlb	0	; () banked
  2249  0034CA  1F83               	comf	??_calcSteering& (0+255),f,b
  2250  0034CC  1F84               	comf	(??_calcSteering+1)& (0+255),f,b
  2251  0034CE  4B83               	infsnz	??_calcSteering& (0+255),f,b
  2252  0034D0  2B84               	incf	(??_calcSteering+1)& (0+255),f,b
  2253  0034D2  5179               	movf	?___fltol& (0+255),w,b
  2254  0034D4  5F83               	subwf	??_calcSteering& (0+255),f,b
  2255  0034D6  517A               	movf	(?___fltol+1)& (0+255),w,b
  2256  0034D8  5B84               	subwfb	(??_calcSteering+1)& (0+255),f,b
  2257  0034DA  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2258  0034DC  2583               	addwf	??_calcSteering& (0+255),w,b
  2259  0034DE  6F87               	movwf	calcSteering@delta& (0+255),b
  2260  0034E0  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2261  0034E2  2184               	addwfc	(??_calcSteering+1)& (0+255),w,b
  2262  0034E4  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2263                           
  2264                           ;main.c: 239:     switch (driveMode) {
  2265  0034E6  EF9D  F01A         	goto	l8883
  2266  0034EA                     l1320:
  2267  0034EA                     l8873:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;main.c: 245:             if (delta > (40)) {
  2271  0034EA  BF88               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  2272  0034EC  EF81  F01A         	goto	u9861
  2273  0034F0  5188               	movf	(calcSteering@delta+1)& (0+255),w,b
  2274  0034F2  E109               	bnz	u9860
  2275  0034F4  0E29               	movlw	41
  2276  0034F6  5D87               	subwf	calcSteering@delta& (0+255),w,b
  2277  0034F8  A0D8               	btfss	status,0,c
  2278  0034FA  EF81  F01A         	goto	u9861
  2279  0034FE  EF83  F01A         	goto	u9860
  2280  003502                     u9861:
  2281  003502  EF89  F01A         	goto	l8877
  2282  003506                     u9860:
  2283  003506                     
  2284                           ; BSR set to: 0
  2285                           ;main.c: 246:                 delta = (40);
  2286  003506  0E00               	movlw	0
  2287  003508  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2288  00350A  0E28               	movlw	40
  2289  00350C  6F87               	movwf	calcSteering@delta& (0+255),b
  2290                           
  2291                           ;main.c: 247:             } else if (delta < -(40)) {
  2292  00350E  EF26  F01B         	goto	l8909
  2293  003512                     l8877:
  2294                           
  2295                           ; BSR set to: 0
  2296  003512  AF88               	btfss	(calcSteering@delta+1)& (0+255),7,b
  2297  003514  EF95  F01A         	goto	u9871
  2298  003518  0ED8               	movlw	216
  2299  00351A  5D87               	subwf	calcSteering@delta& (0+255),w,b
  2300  00351C  0EFF               	movlw	255
  2301  00351E  5988               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  2302  003520  B0D8               	btfsc	status,0,c
  2303  003522  EF95  F01A         	goto	u9871
  2304  003526  EF97  F01A         	goto	u9870
  2305  00352A                     u9871:
  2306  00352A  EFBE  F01A         	goto	l1325
  2307  00352E                     u9870:
  2308  00352E                     
  2309                           ; BSR set to: 0
  2310                           ;main.c: 248:                 delta = -(40);
  2311  00352E  0EFF               	movlw	255
  2312  003530  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2313  003532  0ED8               	movlw	216
  2314  003534  6F87               	movwf	calcSteering@delta& (0+255),b
  2315  003536  EF26  F01B         	goto	l8909
  2316  00353A                     l8883:
  2317                           
  2318                           ; BSR set to: 0
  2319  00353A  51FE               	movf	_driveMode& (0+255),w,b
  2320  00353C  6F83               	movwf	??_calcSteering& (0+255),b
  2321  00353E  6B84               	clrf	(??_calcSteering+1)& (0+255),b
  2322                           
  2323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2324                           ; Switch size 1, requested type "simple"
  2325                           ; Number of cases is 1, Range of values is 0 to 0
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte            4     3 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330  003540  5184               	movf	(??_calcSteering+1)& (0+255),w,b
  2331  003542  0A00               	xorlw	0	; case 0
  2332  003544  B4D8               	btfsc	status,2,c
  2333  003546  EFA7  F01A         	goto	l9321
  2334  00354A  EF26  F01B         	goto	l8909
  2335  00354E                     l9321:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 5, Range of values is 0 to 6
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte           16     9 (average)
  2343                           ;	Chosen strategy is simple_byte
  2344  00354E  5183               	movf	??_calcSteering& (0+255),w,b
  2345  003550  0A00               	xorlw	0	; case 0
  2346  003552  B4D8               	btfsc	status,2,c
  2347  003554  EF75  F01A         	goto	l1320
  2348  003558  0A01               	xorlw	1	; case 1
  2349  00355A  B4D8               	btfsc	status,2,c
  2350  00355C  EF75  F01A         	goto	l8873
  2351  003560  0A03               	xorlw	3	; case 2
  2352  003562  B4D8               	btfsc	status,2,c
  2353  003564  EF75  F01A         	goto	l8873
  2354  003568  0A07               	xorlw	7	; case 5
  2355  00356A  B4D8               	btfsc	status,2,c
  2356  00356C  EF75  F01A         	goto	l8873
  2357  003570  0A03               	xorlw	3	; case 6
  2358  003572  B4D8               	btfsc	status,2,c
  2359  003574  EF75  F01A         	goto	l8873
  2360  003578  EF26  F01B         	goto	l8909
  2361  00357C                     l1325:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;main.c: 255:     switch (driveMode) {
  2365  00357C  EF26  F01B         	goto	l8909
  2366  003580                     l8885:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;main.c: 257:             setSteering(delta, Ratio);
  2370  003580  C087  F01C         	movff	calcSteering@delta,setSteering@steering
  2371  003584  C088  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2372  003588  0E02               	movlw	2
  2373  00358A  6E1E               	movwf	setSteering@steeringMode^0,c
  2374  00358C  EC3A  F01E         	call	_setSteering	;wreg free
  2375                           
  2376                           ;main.c: 258:             break;
  2377  003590  EF4F  F01B         	goto	l1340
  2378  003594                     l8887:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;main.c: 260:             setSteering(delta, Front);
  2382  003594  C087  F01C         	movff	calcSteering@delta,setSteering@steering
  2383  003598  C088  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2384  00359C  0E03               	movlw	3
  2385  00359E  6E1E               	movwf	setSteering@steeringMode^0,c
  2386  0035A0  EC3A  F01E         	call	_setSteering	;wreg free
  2387                           
  2388                           ;main.c: 261:             break;
  2389  0035A4  EF4F  F01B         	goto	l1340
  2390  0035A8                     l8889:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;main.c: 263:             setSteering(delta / (2), Front);
  2394  0035A8  C087  F014         	movff	calcSteering@delta,___awdiv@dividend
  2395  0035AC  C088  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  2396  0035B0  0E00               	movlw	0
  2397  0035B2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  2398  0035B4  0E02               	movlw	2
  2399  0035B6  6E16               	movwf	___awdiv@divisor^0,c
  2400  0035B8  EC61  F026         	call	___awdiv	;wreg free
  2401  0035BC  C014  F085         	movff	?___awdiv,_calcSteering$4174
  2402  0035C0  C015  F086         	movff	?___awdiv+1,_calcSteering$4174+1
  2403                           
  2404                           ;main.c: 263:             setSteering(delta / (2), Front);
  2405  0035C4  C085  F01C         	movff	_calcSteering$4174,setSteering@steering
  2406  0035C8  C086  F01D         	movff	_calcSteering$4174+1,setSteering@steering+1
  2407  0035CC  0E03               	movlw	3
  2408  0035CE  6E1E               	movwf	setSteering@steeringMode^0,c
  2409  0035D0  EC3A  F01E         	call	_setSteering	;wreg free
  2410                           
  2411                           ;main.c: 265:             break;
  2412  0035D4  EF4F  F01B         	goto	l1340
  2413  0035D8                     l8891:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;main.c: 267:             setSteering(-(65), Inverted);
  2417  0035D8  0EFF               	movlw	255
  2418  0035DA  6E1D               	movwf	(setSteering@steering+1)^0,c
  2419  0035DC  0EBF               	movlw	191
  2420  0035DE  6E1C               	movwf	setSteering@steering^0,c
  2421  0035E0  0E00               	movlw	0
  2422  0035E2  6E1E               	movwf	setSteering@steeringMode^0,c
  2423  0035E4  EC3A  F01E         	call	_setSteering	;wreg free
  2424                           
  2425                           ;main.c: 268:             break;
  2426  0035E8  EF4F  F01B         	goto	l1340
  2427  0035EC                     l8893:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 270:             setSteering((65), Inverted);
  2431  0035EC  0E00               	movlw	0
  2432  0035EE  6E1D               	movwf	(setSteering@steering+1)^0,c
  2433  0035F0  0E41               	movlw	65
  2434  0035F2  6E1C               	movwf	setSteering@steering^0,c
  2435  0035F4  0E00               	movlw	0
  2436  0035F6  6E1E               	movwf	setSteering@steeringMode^0,c
  2437  0035F8  EC3A  F01E         	call	_setSteering	;wreg free
  2438                           
  2439                           ;main.c: 271:             break;
  2440  0035FC  EF4F  F01B         	goto	l1340
  2441  003600                     l8895:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 273:             if (curveMode == InCurve) {
  2445  003600  0E02               	movlw	2
  2446  003602  19FB               	xorwf	_curveMode& (0+255),w,b
  2447  003604  A4D8               	btfss	status,2,c
  2448  003606  EF07  F01B         	goto	u9881
  2449  00360A  EF09  F01B         	goto	u9880
  2450  00360E                     u9881:
  2451  00360E  EFC0  F01A         	goto	l8885
  2452  003612                     u9880:
  2453  003612                     
  2454                           ; BSR set to: 0
  2455                           ;main.c: 274:                 setSteering((65), Ratio);
  2456  003612  0E00               	movlw	0
  2457  003614  6E1D               	movwf	(setSteering@steering+1)^0,c
  2458  003616  0E41               	movlw	65
  2459  003618  6E1C               	movwf	setSteering@steering^0,c
  2460  00361A  0E02               	movlw	2
  2461  00361C  6E1E               	movwf	setSteering@steeringMode^0,c
  2462  00361E  EC3A  F01E         	call	_setSteering	;wreg free
  2463                           
  2464                           ;main.c: 275:             } else {
  2465  003622  EF4F  F01B         	goto	l1340
  2466  003626                     l8901:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;main.c: 280:             if (curveMode == InCurve) {
  2470  003626  0E02               	movlw	2
  2471  003628  19FB               	xorwf	_curveMode& (0+255),w,b
  2472  00362A  A4D8               	btfss	status,2,c
  2473  00362C  EF1A  F01B         	goto	u9891
  2474  003630  EF1C  F01B         	goto	u9890
  2475  003634                     u9891:
  2476  003634  EFC0  F01A         	goto	l8885
  2477  003638                     u9890:
  2478  003638                     
  2479                           ; BSR set to: 0
  2480                           ;main.c: 281:                 setSteering(-(65), Ratio);
  2481  003638  0EFF               	movlw	255
  2482  00363A  6E1D               	movwf	(setSteering@steering+1)^0,c
  2483  00363C  0EBF               	movlw	191
  2484  00363E  6E1C               	movwf	setSteering@steering^0,c
  2485  003640  0E02               	movlw	2
  2486  003642  6E1E               	movwf	setSteering@steeringMode^0,c
  2487  003644  EC3A  F01E         	call	_setSteering	;wreg free
  2488                           
  2489                           ;main.c: 282:             } else {
  2490  003648  EF4F  F01B         	goto	l1340
  2491  00364C                     l8909:
  2492                           
  2493                           ; BSR set to: 0
  2494  00364C  51FE               	movf	_driveMode& (0+255),w,b
  2495  00364E  6F83               	movwf	??_calcSteering& (0+255),b
  2496  003650  6B84               	clrf	(??_calcSteering+1)& (0+255),b
  2497                           
  2498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2499                           ; Switch size 1, requested type "simple"
  2500                           ; Number of cases is 1, Range of values is 0 to 0
  2501                           ; switch strategies available:
  2502                           ; Name         Instructions Cycles
  2503                           ; simple_byte            4     3 (average)
  2504                           ;	Chosen strategy is simple_byte
  2505  003652  5184               	movf	(??_calcSteering+1)& (0+255),w,b
  2506  003654  0A00               	xorlw	0	; case 0
  2507  003656  B4D8               	btfsc	status,2,c
  2508  003658  EF30  F01B         	goto	l9323
  2509  00365C  EF4F  F01B         	goto	l1340
  2510  003660                     l9323:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 7, Range of values is 0 to 6
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte           22    12 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  003660  5183               	movf	??_calcSteering& (0+255),w,b
  2520  003662  0A00               	xorlw	0	; case 0
  2521  003664  B4D8               	btfsc	status,2,c
  2522  003666  EFD4  F01A         	goto	l8889
  2523  00366A  0A01               	xorlw	1	; case 1
  2524  00366C  B4D8               	btfsc	status,2,c
  2525  00366E  EFCA  F01A         	goto	l8887
  2526  003672  0A03               	xorlw	3	; case 2
  2527  003674  B4D8               	btfsc	status,2,c
  2528  003676  EFC0  F01A         	goto	l8885
  2529  00367A  0A01               	xorlw	1	; case 3
  2530  00367C  B4D8               	btfsc	status,2,c
  2531  00367E  EFEC  F01A         	goto	l8891
  2532  003682  0A07               	xorlw	7	; case 4
  2533  003684  B4D8               	btfsc	status,2,c
  2534  003686  EFF6  F01A         	goto	l8893
  2535  00368A  0A01               	xorlw	1	; case 5
  2536  00368C  B4D8               	btfsc	status,2,c
  2537  00368E  EF00  F01B         	goto	l8895
  2538  003692  0A03               	xorlw	3	; case 6
  2539  003694  B4D8               	btfsc	status,2,c
  2540  003696  EF13  F01B         	goto	l8901
  2541  00369A  EF4F  F01B         	goto	l1340
  2542  00369E                     l1340:
  2543  00369E  0012               	return		;funcret
  2544  0036A0                     __end_of_calcSteering:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _getReverse *****************
  2548 ;; Defined at:
  2549 ;;		line 200 in file "main.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 8
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_loop
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text4
  2578  004718                     __ptext4:
  2579                           	callstack 0
  2580  004718                     _getReverse:
  2581                           	callstack 21
  2582  004718                     
  2583                           ;main.c: 201:     if (distFront < (15)) {
  2584  004718  0100               	movlb	0	; () banked
  2585  00471A  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2586  00471C  E107               	bnz	u6661
  2587  00471E  0E0F               	movlw	15
  2588  004720  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2589  004722  B0D8               	btfsc	status,0,c
  2590  004724  EF96  F023         	goto	u6661
  2591  004728  EF98  F023         	goto	u6660
  2592  00472C                     u6661:
  2593  00472C  EF9D  F023         	goto	l6929
  2594  004730                     u6660:
  2595  004730                     
  2596                           ; BSR set to: 0
  2597                           ;main.c: 202:         ++reverseCount;
  2598  004730  0101               	movlb	1	; () banked
  2599  004732  4B32               	infsnz	_reverseCount& (0+255),f,b
  2600  004734  2B33               	incf	(_reverseCount+1)& (0+255),f,b
  2601                           
  2602                           ;main.c: 203:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2603  004736  EFB4  F023         	goto	l6935
  2604  00473A                     l6929:
  2605                           
  2606                           ; BSR set to: 0
  2607  00473A  0E03               	movlw	3
  2608  00473C  19FE               	xorwf	_driveMode& (0+255),w,b
  2609  00473E  B4D8               	btfsc	status,2,c
  2610  004740  EFA4  F023         	goto	u6671
  2611  004744  EFA6  F023         	goto	u6670
  2612  004748                     u6671:
  2613  004748  EFB4  F023         	goto	l6935
  2614  00474C                     u6670:
  2615  00474C                     
  2616                           ; BSR set to: 0
  2617  00474C  0E04               	movlw	4
  2618  00474E  19FE               	xorwf	_driveMode& (0+255),w,b
  2619  004750  B4D8               	btfsc	status,2,c
  2620  004752  EFAD  F023         	goto	u6681
  2621  004756  EFAF  F023         	goto	u6680
  2622  00475A                     u6681:
  2623  00475A  EFB4  F023         	goto	l6935
  2624  00475E                     u6680:
  2625  00475E                     
  2626                           ; BSR set to: 0
  2627                           ;main.c: 204:         reverseCount = 0;
  2628  00475E  0E00               	movlw	0
  2629  004760  0101               	movlb	1	; () banked
  2630  004762  6F33               	movwf	(_reverseCount+1)& (0+255),b
  2631  004764  0E00               	movlw	0
  2632  004766  6F32               	movwf	_reverseCount& (0+255),b
  2633  004768                     l6935:
  2634                           
  2635                           ;main.c: 207:     if (reverseCount > (50)) {
  2636  004768  0101               	movlb	1	; () banked
  2637  00476A  5133               	movf	(_reverseCount+1)& (0+255),w,b
  2638  00476C  E109               	bnz	u6690
  2639  00476E  0E33               	movlw	51
  2640  004770  5D32               	subwf	_reverseCount& (0+255),w,b
  2641  004772  A0D8               	btfss	status,0,c
  2642  004774  EFBE  F023         	goto	u6691
  2643  004778  EFC0  F023         	goto	u6690
  2644  00477C                     u6691:
  2645  00477C  EF0E  F024         	goto	l1313
  2646  004780                     u6690:
  2647  004780                     
  2648                           ; BSR set to: 1
  2649                           ;main.c: 208:         ++reverseTime;
  2650  004780  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2651  004782  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2652  004784                     
  2653                           ; BSR set to: 1
  2654                           ;main.c: 210:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2655  004784  0E03               	movlw	3
  2656  004786  0100               	movlb	0	; () banked
  2657  004788  19FE               	xorwf	_driveMode& (0+255),w,b
  2658  00478A  B4D8               	btfsc	status,2,c
  2659  00478C  EFCA  F023         	goto	u6701
  2660  004790  EFCC  F023         	goto	u6700
  2661  004794                     u6701:
  2662  004794  EFE6  F023         	goto	l6949
  2663  004798                     u6700:
  2664  004798                     
  2665                           ; BSR set to: 0
  2666  004798  0E04               	movlw	4
  2667  00479A  19FE               	xorwf	_driveMode& (0+255),w,b
  2668  00479C  B4D8               	btfsc	status,2,c
  2669  00479E  EFD3  F023         	goto	u6711
  2670  0047A2  EFD5  F023         	goto	u6710
  2671  0047A6                     u6711:
  2672  0047A6  EFE6  F023         	goto	l6949
  2673  0047AA                     u6710:
  2674  0047AA                     
  2675                           ; BSR set to: 0
  2676                           ;main.c: 211:             if (distLeft > distRight) {
  2677  0047AA  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2678  0047AC  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2679  0047AE  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2680  0047B0  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2681  0047B2  B0D8               	btfsc	status,0,c
  2682  0047B4  EFDE  F023         	goto	u6721
  2683  0047B8  EFE0  F023         	goto	u6720
  2684  0047BC                     u6721:
  2685  0047BC  EFE4  F023         	goto	l6947
  2686  0047C0                     u6720:
  2687  0047C0                     
  2688                           ; BSR set to: 0
  2689                           ;main.c: 213:                 driveMode = ReverseRight;
  2690  0047C0  0E03               	movlw	3
  2691  0047C2  6FFE               	movwf	_driveMode& (0+255),b
  2692                           
  2693                           ;main.c: 214:             } else {
  2694  0047C4  EFE6  F023         	goto	l6949
  2695  0047C8                     l6947:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 216:                 driveMode = ReverseLeft;
  2699  0047C8  0E04               	movlw	4
  2700  0047CA  6FFE               	movwf	_driveMode& (0+255),b
  2701  0047CC                     l6949:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;main.c: 220:         if (distFront > (35) || reverseTime > (300)) {
  2705  0047CC  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2706  0047CE  E107               	bnz	u6731
  2707  0047D0  0E24               	movlw	36
  2708  0047D2  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2709  0047D4  B0D8               	btfsc	status,0,c
  2710  0047D6  EFEF  F023         	goto	u6731
  2711  0047DA  EFF1  F023         	goto	u6730
  2712  0047DE                     u6731:
  2713  0047DE  EF02  F024         	goto	l6953
  2714  0047E2                     u6730:
  2715  0047E2                     
  2716                           ; BSR set to: 0
  2717  0047E2  0101               	movlb	1	; () banked
  2718  0047E4  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2719  0047E6  EFFE  F023         	goto	u6741
  2720  0047EA  0E2D               	movlw	45
  2721  0047EC  5D2A               	subwf	_reverseTime& (0+255),w,b
  2722  0047EE  0E01               	movlw	1
  2723  0047F0  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2724  0047F2  A0D8               	btfss	status,0,c
  2725  0047F4  EFFE  F023         	goto	u6741
  2726  0047F8  EF00  F024         	goto	u6740
  2727  0047FC                     u6741:
  2728  0047FC  EF0E  F024         	goto	l1313
  2729  004800                     u6740:
  2730  004800  EF02  F024         	goto	l6955
  2731  004804                     l6953:
  2732  004804                     l6955:
  2733                           
  2734                           ;main.c: 223:                 driveMode = Straight;
  2735  004804  0E01               	movlw	1
  2736  004806  0100               	movlb	0	; () banked
  2737  004808  6FFE               	movwf	_driveMode& (0+255),b
  2738  00480A                     
  2739                           ; BSR set to: 0
  2740                           ;main.c: 228:             reverseCount = 0;
  2741  00480A  0E00               	movlw	0
  2742  00480C  0101               	movlb	1	; () banked
  2743  00480E  6F33               	movwf	(_reverseCount+1)& (0+255),b
  2744  004810  0E00               	movlw	0
  2745  004812  6F32               	movwf	_reverseCount& (0+255),b
  2746                           
  2747                           ;main.c: 229:             reverseTime = 0;
  2748  004814  0E00               	movlw	0
  2749  004816  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2750  004818  0E00               	movlw	0
  2751  00481A  6F2A               	movwf	_reverseTime& (0+255),b
  2752  00481C                     l1313:
  2753                           
  2754                           ; BSR set to: 1
  2755  00481C  0012               	return		;funcret
  2756  00481E                     __end_of_getReverse:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _getCurve *****************
  2760 ;; Defined at:
  2761 ;;		line 128 in file "main.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  deltaLeft       2   18[BANK1 ] short 
  2766 ;;  deltaRight      2   16[BANK1 ] short 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;Total ram usage:        6 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 17
  2783 ;; This function calls:
  2784 ;;		_printf
  2785 ;; This function is called by:
  2786 ;;		_loop
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text5
  2791  0031D6                     __ptext5:
  2792                           	callstack 0
  2793  0031D6                     _getCurve:
  2794                           	callstack 12
  2795  0031D6                     
  2796                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2797  0031D6  0100               	movlb	0	; () banked
  2798  0031D8  51EF               	movf	_oldDistLeft& (0+255),w,b
  2799  0031DA  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2800  0031DC  0101               	movlb	1	; () banked
  2801  0031DE  6FAC               	movwf	getCurve@deltaLeft& (0+255),b
  2802  0031E0  0100               	movlb	0	; () banked
  2803  0031E2  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2804  0031E4  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2805  0031E6  0101               	movlb	1	; () banked
  2806  0031E8  6FAD               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2807                           
  2808                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2809  0031EA  0100               	movlb	0	; () banked
  2810  0031EC  51ED               	movf	_oldDistRight& (0+255),w,b
  2811  0031EE  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2812  0031F0  0101               	movlb	1	; () banked
  2813  0031F2  6FAA               	movwf	getCurve@deltaRight& (0+255),b
  2814  0031F4  0100               	movlb	0	; () banked
  2815  0031F6  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2816  0031F8  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2817  0031FA  0101               	movlb	1	; () banked
  2818  0031FC  6FAB               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2819                           
  2820                           ;main.c: 132:     switch (curveMode) {
  2821  0031FE  EF10  F01A         	goto	l9055
  2822  003202                     l8987:
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2826  003202  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2827  003204  EF0D  F019         	goto	u9951
  2828  003208  51AD               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2829  00320A  E109               	bnz	u9950
  2830  00320C  0E1F               	movlw	31
  2831  00320E  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  2832  003210  A0D8               	btfss	status,0,c
  2833  003212  EF0D  F019         	goto	u9951
  2834  003216  EF0F  F019         	goto	u9950
  2835  00321A                     u9951:
  2836  00321A  EF32  F019         	goto	l8995
  2837  00321E                     u9950:
  2838  00321E                     
  2839                           ; BSR set to: 1
  2840  00321E  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2841  003220  EF1D  F019         	goto	u9960
  2842  003224  0E2C               	movlw	44
  2843  003226  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  2844  003228  0E01               	movlw	1
  2845  00322A  59AD               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2846  00322C  B0D8               	btfsc	status,0,c
  2847  00322E  EF1B  F019         	goto	u9961
  2848  003232  EF1D  F019         	goto	u9960
  2849  003236                     u9961:
  2850  003236  EF32  F019         	goto	l8995
  2851  00323A                     u9960:
  2852  00323A                     
  2853                           ; BSR set to: 1
  2854  00323A  0100               	movlb	0	; () banked
  2855  00323C  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2856  00323E  E107               	bnz	u9971
  2857  003240  0E7D               	movlw	125
  2858  003242  5DEF               	subwf	_oldDistLeft& (0+255),w,b
  2859  003244  B0D8               	btfsc	status,0,c
  2860  003246  EF27  F019         	goto	u9971
  2861  00324A  EF29  F019         	goto	u9970
  2862  00324E                     u9971:
  2863  00324E  EF32  F019         	goto	l8995
  2864  003252                     u9970:
  2865  003252                     l8993:
  2866                           
  2867                           ;main.c: 135:                 delay = 0;
  2868  003252  0E00               	movlw	0
  2869  003254  0100               	movlb	0	; () banked
  2870  003256  6FF9               	movwf	_delay& (0+255),b
  2871                           
  2872                           ;main.c: 136:                 curveMode = BeforeCurve;
  2873  003258  0E01               	movlw	1
  2874  00325A  6FFB               	movwf	_curveMode& (0+255),b
  2875                           
  2876                           ;main.c: 137:                 driveMode = CurveLeft;
  2877  00325C  0E05               	movlw	5
  2878  00325E  6FFE               	movwf	_driveMode& (0+255),b
  2879                           
  2880                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2881  003260  EF2F  F01A         	goto	l1277
  2882  003264                     l8995:
  2883  003264  0101               	movlb	1	; () banked
  2884  003266  BFAB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2885  003268  EF3F  F019         	goto	u9981
  2886  00326C  51AB               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2887  00326E  E109               	bnz	u9980
  2888  003270  0E1F               	movlw	31
  2889  003272  5DAA               	subwf	getCurve@deltaRight& (0+255),w,b
  2890  003274  A0D8               	btfss	status,0,c
  2891  003276  EF3F  F019         	goto	u9981
  2892  00327A  EF41  F019         	goto	u9980
  2893  00327E                     u9981:
  2894  00327E  EF2F  F01A         	goto	l1277
  2895  003282                     u9980:
  2896  003282                     
  2897                           ; BSR set to: 1
  2898  003282  BFAB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2899  003284  EF4F  F019         	goto	u9990
  2900  003288  0E2C               	movlw	44
  2901  00328A  5DAA               	subwf	getCurve@deltaRight& (0+255),w,b
  2902  00328C  0E01               	movlw	1
  2903  00328E  59AB               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2904  003290  B0D8               	btfsc	status,0,c
  2905  003292  EF4D  F019         	goto	u9991
  2906  003296  EF4F  F019         	goto	u9990
  2907  00329A                     u9991:
  2908  00329A  EF2F  F01A         	goto	l1277
  2909  00329E                     u9990:
  2910  00329E                     
  2911                           ; BSR set to: 1
  2912  00329E  0100               	movlb	0	; () banked
  2913  0032A0  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2914  0032A2  E107               	bnz	u10001
  2915  0032A4  0E7D               	movlw	125
  2916  0032A6  5DED               	subwf	_oldDistRight& (0+255),w,b
  2917  0032A8  B0D8               	btfsc	status,0,c
  2918  0032AA  EF59  F019         	goto	u10001
  2919  0032AE  EF5B  F019         	goto	u10000
  2920  0032B2                     u10001:
  2921  0032B2  EF2F  F01A         	goto	l1277
  2922  0032B6                     u10000:
  2923  0032B6                     
  2924                           ; BSR set to: 0
  2925                           ;main.c: 141:                 delay = 0;
  2926  0032B6  0E00               	movlw	0
  2927  0032B8  6FF9               	movwf	_delay& (0+255),b
  2928                           
  2929                           ;main.c: 142:                 curveMode = BeforeCurve;
  2930  0032BA  0E01               	movlw	1
  2931  0032BC  6FFB               	movwf	_curveMode& (0+255),b
  2932                           
  2933                           ;main.c: 143:                 driveMode = CurveRight;
  2934  0032BE  0E06               	movlw	6
  2935  0032C0  6FFE               	movwf	_driveMode& (0+255),b
  2936  0032C2  EF2F  F01A         	goto	l1277
  2937  0032C6                     l9003:
  2938                           
  2939                           ; BSR set to: 1
  2940                           ;main.c: 150:             if (delay >= (15)) {
  2941  0032C6  0E0E               	movlw	14
  2942  0032C8  0100               	movlb	0	; () banked
  2943  0032CA  65F9               	cpfsgt	_delay& (0+255),b
  2944  0032CC  EF6A  F019         	goto	u10011
  2945  0032D0  EF6C  F019         	goto	u10010
  2946  0032D4                     u10011:
  2947  0032D4  EF72  F019         	goto	l9007
  2948  0032D8                     u10010:
  2949  0032D8                     
  2950                           ; BSR set to: 0
  2951                           ;main.c: 151:                 delay = 0;
  2952  0032D8  0E00               	movlw	0
  2953  0032DA  6FF9               	movwf	_delay& (0+255),b
  2954                           
  2955                           ;main.c: 152:                 curveMode = InCurve;
  2956  0032DC  0E02               	movlw	2
  2957  0032DE  6FFB               	movwf	_curveMode& (0+255),b
  2958                           
  2959                           ;main.c: 154:             } else {
  2960  0032E0  EF2F  F01A         	goto	l1277
  2961  0032E4                     l9007:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;main.c: 155:                 ++delay;
  2965  0032E4  2BF9               	incf	_delay& (0+255),f,b
  2966  0032E6  EF2F  F01A         	goto	l1277
  2967  0032EA                     l9009:
  2968                           
  2969                           ; BSR set to: 1
  2970                           ;main.c: 159:             if (delay >= (30)) {
  2971  0032EA  0E1D               	movlw	29
  2972  0032EC  0100               	movlb	0	; () banked
  2973  0032EE  65F9               	cpfsgt	_delay& (0+255),b
  2974  0032F0  EF7C  F019         	goto	u10021
  2975  0032F4  EF7E  F019         	goto	u10020
  2976  0032F8                     u10021:
  2977  0032F8  EF72  F019         	goto	l9007
  2978  0032FC                     u10020:
  2979  0032FC                     
  2980                           ; BSR set to: 0
  2981                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (300)) {
  2982  0032FC  0E05               	movlw	5
  2983  0032FE  19FE               	xorwf	_driveMode& (0+255),w,b
  2984  003300  A4D8               	btfss	status,2,c
  2985  003302  EF85  F019         	goto	u10031
  2986  003306  EF87  F019         	goto	u10030
  2987  00330A                     u10031:
  2988  00330A  EF92  F019         	goto	l9015
  2989  00330E                     u10030:
  2990  00330E                     
  2991                           ; BSR set to: 0
  2992  00330E  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2993  003310  E109               	bnz	u10040
  2994  003312  0E2D               	movlw	45
  2995  003314  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2996  003316  A0D8               	btfss	status,0,c
  2997  003318  EF90  F019         	goto	u10041
  2998  00331C  EF92  F019         	goto	u10040
  2999  003320                     u10041:
  3000  003320  EFB1  F019         	goto	l9021
  3001  003324                     u10040:
  3002  003324                     l9015:
  3003                           
  3004                           ; BSR set to: 0
  3005  003324  0E06               	movlw	6
  3006  003326  19FE               	xorwf	_driveMode& (0+255),w,b
  3007  003328  A4D8               	btfss	status,2,c
  3008  00332A  EF99  F019         	goto	u10051
  3009  00332E  EF9B  F019         	goto	u10050
  3010  003332                     u10051:
  3011  003332  EFA6  F019         	goto	l9019
  3012  003336                     u10050:
  3013  003336                     
  3014                           ; BSR set to: 0
  3015  003336  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  3016  003338  E109               	bnz	u10060
  3017  00333A  0E2D               	movlw	45
  3018  00333C  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  3019  00333E  A0D8               	btfss	status,0,c
  3020  003340  EFA4  F019         	goto	u10061
  3021  003344  EFA6  F019         	goto	u10060
  3022  003348                     u10061:
  3023  003348  EFB1  F019         	goto	l9021
  3024  00334C                     u10060:
  3025  00334C                     l9019:
  3026                           
  3027                           ; BSR set to: 0
  3028  00334C  0E2D               	movlw	45
  3029  00334E  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  3030  003350  0E01               	movlw	1
  3031  003352  59FD               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  3032  003354  A0D8               	btfss	status,0,c
  3033  003356  EFAF  F019         	goto	u10071
  3034  00335A  EFB1  F019         	goto	u10070
  3035  00335E                     u10071:
  3036  00335E  EFE7  F019         	goto	l9039
  3037  003362                     u10070:
  3038  003362                     l9021:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;main.c: 161:                     printf("Time: \t%d     \t", delay);
  3042  003362  0E15               	movlw	low STR_5
  3043  003364  0101               	movlb	1	; () banked
  3044  003366  6FA0               	movwf	printf@fmt& (0+255),b
  3045  003368  0E10               	movlw	high STR_5
  3046  00336A  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3047  00336C  C0F9  F1A2         	movff	_delay,?_printf+2
  3048  003370  6BA3               	clrf	(?_printf+3)& (0+255),b
  3049  003372  EC52  F02E         	call	_printf	;wreg free
  3050  003376                     
  3051                           ;main.c: 162:                     if (delay >= 90) {
  3052  003376  0E59               	movlw	89
  3053  003378  0100               	movlb	0	; () banked
  3054  00337A  65F9               	cpfsgt	_delay& (0+255),b
  3055  00337C  EFC2  F019         	goto	u10081
  3056  003380  EFC4  F019         	goto	u10080
  3057  003384                     u10081:
  3058  003384  EFD2  F019         	goto	l9029
  3059  003388                     u10080:
  3060  003388                     
  3061                           ; BSR set to: 0
  3062                           ;main.c: 163:                         printf("stay Left\n");
  3063  003388  0E4A               	movlw	low STR_6
  3064  00338A  0101               	movlb	1	; () banked
  3065  00338C  6FA0               	movwf	printf@fmt& (0+255),b
  3066  00338E  0E10               	movlw	high STR_6
  3067  003390  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3068  003392  EC52  F02E         	call	_printf	;wreg free
  3069  003396                     
  3070                           ;main.c: 164:                         middleOffSet = -10;
  3071  003396  0EFF               	movlw	255
  3072  003398  0101               	movlb	1	; () banked
  3073  00339A  6FAF               	movwf	(_middleOffSet+1)& (0+255),b
  3074  00339C  0EF6               	movlw	246
  3075  00339E  6FAE               	movwf	_middleOffSet& (0+255),b
  3076                           
  3077                           ;main.c: 165:                     } else {
  3078  0033A0  EFDE  F019         	goto	l9033
  3079  0033A4                     l9029:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;main.c: 166:                         printf("stay Right\n");
  3083  0033A4  0E32               	movlw	low STR_7
  3084  0033A6  0101               	movlb	1	; () banked
  3085  0033A8  6FA0               	movwf	printf@fmt& (0+255),b
  3086  0033AA  0E10               	movlw	high STR_7
  3087  0033AC  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3088  0033AE  EC52  F02E         	call	_printf	;wreg free
  3089  0033B2                     
  3090                           ;main.c: 167:                         middleOffSet = 10;
  3091  0033B2  0E00               	movlw	0
  3092  0033B4  0101               	movlb	1	; () banked
  3093  0033B6  6FAF               	movwf	(_middleOffSet+1)& (0+255),b
  3094  0033B8  0E0A               	movlw	10
  3095  0033BA  6FAE               	movwf	_middleOffSet& (0+255),b
  3096  0033BC                     l9033:
  3097                           
  3098                           ; BSR set to: 1
  3099                           ;main.c: 170:                     delay = 0;
  3100  0033BC  0E00               	movlw	0
  3101  0033BE  0100               	movlb	0	; () banked
  3102  0033C0  6FF9               	movwf	_delay& (0+255),b
  3103  0033C2                     
  3104                           ; BSR set to: 0
  3105                           ;main.c: 171:                     curveMode = AfterCurve;
  3106  0033C2  0E03               	movlw	3
  3107  0033C4  6FFB               	movwf	_curveMode& (0+255),b
  3108  0033C6                     
  3109                           ; BSR set to: 0
  3110                           ;main.c: 172:                     driveMode = Straight;
  3111  0033C6  0E01               	movlw	1
  3112  0033C8  6FFE               	movwf	_driveMode& (0+255),b
  3113                           
  3114                           ;main.c: 175:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  3115  0033CA  EF2F  F01A         	goto	l1277
  3116  0033CE                     l9039:
  3117                           
  3118                           ; BSR set to: 0
  3119  0033CE  0E06               	movlw	6
  3120  0033D0  19FE               	xorwf	_driveMode& (0+255),w,b
  3121  0033D2  A4D8               	btfss	status,2,c
  3122  0033D4  EFEE  F019         	goto	u10091
  3123  0033D8  EFF0  F019         	goto	u10090
  3124  0033DC                     u10091:
  3125  0033DC  EF2F  F01A         	goto	l1277
  3126  0033E0                     u10090:
  3127  0033E0                     
  3128                           ; BSR set to: 0
  3129  0033E0  0101               	movlb	1	; () banked
  3130  0033E2  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  3131  0033E4  EFFD  F019         	goto	u10101
  3132  0033E8  51AD               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  3133  0033EA  E109               	bnz	u10100
  3134  0033EC  0E1F               	movlw	31
  3135  0033EE  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  3136  0033F0  A0D8               	btfss	status,0,c
  3137  0033F2  EFFD  F019         	goto	u10101
  3138  0033F6  EFFF  F019         	goto	u10100
  3139  0033FA                     u10101:
  3140  0033FA  EF2F  F01A         	goto	l1277
  3141  0033FE                     u10100:
  3142  0033FE  EF29  F019         	goto	l8993
  3143  003402                     l9047:
  3144                           
  3145                           ; BSR set to: 1
  3146                           ;main.c: 187:             if (delay >= (1)) {
  3147  003402  0100               	movlb	0	; () banked
  3148  003404  51F9               	movf	_delay& (0+255),w,b
  3149  003406  B4D8               	btfsc	status,2,c
  3150  003408  EF08  F01A         	goto	u10111
  3151  00340C  EF0A  F01A         	goto	u10110
  3152  003410                     u10111:
  3153  003410  EF72  F019         	goto	l9007
  3154  003414                     u10110:
  3155  003414                     
  3156                           ; BSR set to: 0
  3157                           ;main.c: 188:                 delay = 0;
  3158  003414  0E00               	movlw	0
  3159  003416  6FF9               	movwf	_delay& (0+255),b
  3160                           
  3161                           ;main.c: 189:                 curveMode = OutCurve;
  3162  003418  0E00               	movlw	0
  3163  00341A  6FFB               	movwf	_curveMode& (0+255),b
  3164                           
  3165                           ;main.c: 191:             } else {
  3166  00341C  EF2F  F01A         	goto	l1277
  3167  003420                     l9055:
  3168                           
  3169                           ; BSR set to: 1
  3170  003420  0100               	movlb	0	; () banked
  3171  003422  51FB               	movf	_curveMode& (0+255),w,b
  3172  003424  0101               	movlb	1	; () banked
  3173  003426  6FA8               	movwf	??_getCurve& (0+255),b
  3174  003428  6BA9               	clrf	(??_getCurve+1)& (0+255),b
  3175                           
  3176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3177                           ; Switch size 1, requested type "simple"
  3178                           ; Number of cases is 1, Range of values is 0 to 0
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte            4     3 (average)
  3182                           ;	Chosen strategy is simple_byte
  3183  00342A  51A9               	movf	(??_getCurve+1)& (0+255),w,b
  3184  00342C  0A00               	xorlw	0	; case 0
  3185  00342E  B4D8               	btfsc	status,2,c
  3186  003430  EF1C  F01A         	goto	l9325
  3187  003434  EF2F  F01A         	goto	l1277
  3188  003438                     l9325:
  3189                           
  3190                           ; BSR set to: 1
  3191                           ; Switch size 1, requested type "simple"
  3192                           ; Number of cases is 4, Range of values is 0 to 3
  3193                           ; switch strategies available:
  3194                           ; Name         Instructions Cycles
  3195                           ; simple_byte           13     7 (average)
  3196                           ;	Chosen strategy is simple_byte
  3197  003438  51A8               	movf	??_getCurve& (0+255),w,b
  3198  00343A  0A00               	xorlw	0	; case 0
  3199  00343C  B4D8               	btfsc	status,2,c
  3200  00343E  EF01  F019         	goto	l8987
  3201  003442  0A01               	xorlw	1	; case 1
  3202  003444  B4D8               	btfsc	status,2,c
  3203  003446  EF63  F019         	goto	l9003
  3204  00344A  0A03               	xorlw	3	; case 2
  3205  00344C  B4D8               	btfsc	status,2,c
  3206  00344E  EF75  F019         	goto	l9009
  3207  003452  0A01               	xorlw	1	; case 3
  3208  003454  B4D8               	btfsc	status,2,c
  3209  003456  EF01  F01A         	goto	l9047
  3210  00345A  EF2F  F01A         	goto	l1277
  3211  00345E                     l1277:
  3212                           
  3213                           ;main.c: 196:     oldDistLeft = distLeft;
  3214  00345E  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  3215  003462  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  3216                           
  3217                           ;main.c: 197:     oldDistRight = distRight;
  3218  003466  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  3219  00346A  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  3220  00346E  0012               	return		;funcret
  3221  003470                     __end_of_getCurve:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _printf *****************
  3225 ;; Defined at:
  3226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  3229 ;;		 -> STR_7(12), STR_6(11), STR_5(16), STR_4(20), 
  3230 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  ap              2   12[BANK1 ] PTR void [1]
  3233 ;;		 -> ?_printf(2), 
  3234 ;;  ret             2    0        int 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  2    6[BANK1 ] int 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3244 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;Total ram usage:        8 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 16
  3251 ;; This function calls:
  3252 ;;		_vfprintf
  3253 ;; This function is called by:
  3254 ;;		_loop
  3255 ;;		_startAccell
  3256 ;;		_getCurve
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text6
  3261  005CA4                     __ptext6:
  3262                           	callstack 0
  3263  005CA4                     _printf:
  3264                           	callstack 12
  3265  005CA4  0EA2               	movlw	low (?_printf+2)
  3266  005CA6  0101               	movlb	1	; () banked
  3267  005CA8  6FA6               	movwf	printf@ap& (0+255),b
  3268  005CAA  0E01               	movlw	high (?_printf+2)
  3269  005CAC  6FA7               	movwf	(printf@ap+1)& (0+255),b
  3270  005CAE                     
  3271                           ; BSR set to: 1
  3272  005CAE  0E00               	movlw	0
  3273  005CB0  6F9A               	movwf	vfprintf@fp& (0+255),b
  3274  005CB2  0E00               	movlw	0
  3275  005CB4  6F9B               	movwf	(vfprintf@fp+1)& (0+255),b
  3276  005CB6  C1A0  F19C         	movff	printf@fmt,vfprintf@fmt
  3277  005CBA  C1A1  F19D         	movff	printf@fmt+1,vfprintf@fmt+1
  3278  005CBE  0EA6               	movlw	low printf@ap
  3279  005CC0  6F9E               	movwf	vfprintf@ap& (0+255),b
  3280  005CC2  0E01               	movlw	high printf@ap
  3281  005CC4  6F9F               	movwf	(vfprintf@ap+1)& (0+255),b
  3282  005CC6  EC61  F029         	call	_vfprintf	;wreg free
  3283  005CCA  0012               	return		;funcret
  3284  005CCC                     __end_of_printf:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function _vfprintf *****************
  3288 ;; Defined at:
  3289 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3292 ;;		 -> NULL(0), 
  3293 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3294 ;;		 -> STR_7(12), STR_6(11), STR_5(16), STR_4(20), 
  3295 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3296 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3297 ;;		 -> printf@ap(2), 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  3300 ;;		 -> STR_7(12), STR_6(11), STR_5(16), STR_4(20), 
  3301 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  2    0[BANK1 ] int 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3311 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;Total ram usage:        8 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; Hardware stack levels required when called: 15
  3318 ;; This function calls:
  3319 ;;		_vfpfcnvrt
  3320 ;; This function is called by:
  3321 ;;		_printf
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text7
  3326  0052C2                     __ptext7:
  3327                           	callstack 0
  3328  0052C2                     _vfprintf:
  3329                           	callstack 12
  3330  0052C2                     
  3331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3332  0052C2  C19C  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  3333  0052C6  C19D  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3334  0052CA                     
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3336  0052CA  0E00               	movlw	0
  3337  0052CC  0101               	movlb	1	; () banked
  3338  0052CE  6F29               	movwf	(_nout+1)& (0+255),b
  3339  0052D0  0E00               	movlw	0
  3340  0052D2  6F28               	movwf	_nout& (0+255),b
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3343  0052D4  EF83  F029         	goto	l8841
  3344  0052D8                     l8839:
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3348  0052D8  C19A  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3349  0052DC  C19B  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3350  0052E0  0EE3               	movlw	low vfprintf@cfmt
  3351  0052E2  0100               	movlb	0	; () banked
  3352  0052E4  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3353  0052E6  0E00               	movlw	high vfprintf@cfmt
  3354  0052E8  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3355  0052EA  C19E  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3356  0052EE  C19F  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3357  0052F2  EC91  F00E         	call	_vfpfcnvrt	;wreg free
  3358  0052F6  0100               	movlb	0	; () banked
  3359  0052F8  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3360  0052FA  0101               	movlb	1	; () banked
  3361  0052FC  2728               	addwf	_nout& (0+255),f,b
  3362  0052FE  0100               	movlb	0	; () banked
  3363  005300  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3364  005302  0101               	movlb	1	; () banked
  3365  005304  2329               	addwfc	(_nout+1)& (0+255),f,b
  3366  005306                     l8841:
  3367                           
  3368                           ; BSR set to: 1
  3369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3370  005306  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  3371  00530C  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3372  005312                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3373  005312  6AF8               	clrf	tblptru,c
  3374  005314                     	endif
  3375  005314                     	if	0	;tblptru may be non-zero
  3376  005314                     	endif
  3377  005314  0008               	tblrd		*
  3378  005316  50F5               	movf	tablat,w,c
  3379  005318  0900               	iorlw	0
  3380  00531A  A4D8               	btfss	status,2,c
  3381  00531C  EF92  F029         	goto	u9811
  3382  005320  EF94  F029         	goto	u9810
  3383  005324                     u9811:
  3384  005324  EF6C  F029         	goto	l8839
  3385  005328                     u9810:
  3386  005328                     
  3387                           ; BSR set to: 1
  3388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3389  005328  C128  F19A         	movff	_nout,?_vfprintf
  3390  00532C  C129  F19B         	movff	_nout+1,?_vfprintf+1
  3391  005330                     
  3392                           ; BSR set to: 1
  3393  005330  0012               	return		;funcret
  3394  005332                     __end_of_vfprintf:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _vfpfcnvrt *****************
  3398 ;; Defined at:
  3399 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3402 ;;		 -> NULL(0), 
  3403 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3404 ;;		 -> vfprintf@cfmt(2), 
  3405 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3406 ;;		 -> printf@ap(2), 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  ll              8  113[BANK0 ] long long 
  3409 ;;  llu             8    0        unsigned long long 
  3410 ;;  f               4  123[BANK0 ] unsigned long long 
  3411 ;;  ct              3  127[BANK0 ] unsigned char [3]
  3412 ;;  vp              3    0        PTR void 
  3413 ;;  cp              3    0        PTR unsigned char 
  3414 ;;  i               2    0        int 
  3415 ;;  done            2    0        int 
  3416 ;;  c               1  130[BANK0 ] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  2  103[BANK0 ] int 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3426 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;Total ram usage:       28 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 14
  3433 ;; This function calls:
  3434 ;;		_dtoa
  3435 ;;		_efgtoa
  3436 ;;		_fputc
  3437 ;;		_isupper
  3438 ;;		_strncmp
  3439 ;;		_tolower
  3440 ;; This function is called by:
  3441 ;;		_vfprintf
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text8
  3446  001D22                     __ptext8:
  3447                           	callstack 0
  3448  001D22                     _vfpfcnvrt:
  3449                           	callstack 12
  3450  001D22                     
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3452  001D22  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3453  001D28  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3454  001D2E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3455  001D34  006F FF77 FFF7     	movff	postdec2,tblptrh
  3456  001D3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3457  001D3A  6AF8               	clrf	tblptru,c
  3458  001D3C                     	endif
  3459  001D3C                     	if	0	;tblptru may be non-zero
  3460  001D3C                     	endif
  3461  001D3C  0008               	tblrd		*
  3462  001D3E  50F5               	movf	tablat,w,c
  3463  001D40  0A25               	xorlw	37
  3464  001D42  A4D8               	btfss	status,2,c
  3465  001D44  EFA6  F00E         	goto	u9541
  3466  001D48  EFA8  F00E         	goto	u9540
  3467  001D4C                     u9541:
  3468  001D4C  EFFF  F010         	goto	l8737
  3469  001D50                     u9540:
  3470  001D50                     
  3471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3472  001D50  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3473  001D56  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3474  001D5C  2ADE               	incf	postinc2,f,c
  3475  001D5E  0E00               	movlw	0
  3476  001D60  22DD               	addwfc	postdec2,f,c
  3477  001D62                     
  3478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3479  001D62  0E00               	movlw	0
  3480  001D64  6E3B               	movwf	(_width+1)^0,c
  3481  001D66  0E00               	movlw	0
  3482  001D68  6E3A               	movwf	_width^0,c
  3483  001D6A  C03A  F03E         	movff	_width,_flags
  3484  001D6E  C03B  F03F         	movff	_width+1,_flags+1
  3485  001D72                     
  3486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3487  001D72  683C               	setf	_prec^0,c
  3488  001D74  683D               	setf	(_prec+1)^0,c
  3489  001D76                     
  3490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3491  001D76  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3492  001D7C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3493  001D82  006F FF7B FFF6     	movff	postinc2,tblptrl
  3494  001D88  006F FF77 FFF7     	movff	postdec2,tblptrh
  3495  001D8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3496  001D8E  6AF8               	clrf	tblptru,c
  3497  001D90                     	endif
  3498  001D90                     	if	0	;tblptru may be non-zero
  3499  001D90                     	endif
  3500  001D90  0008               	tblrd		*
  3501  001D92  50F5               	movf	tablat,w,c
  3502  001D94  6E1A               	movwf	tolower@c^0,c
  3503  001D96  6A1B               	clrf	(tolower@c+1)^0,c
  3504  001D98  EC01  F02A         	call	_tolower	;wreg free
  3505  001D9C  501A               	movf	?_tolower^0,w,c
  3506  001D9E  0100               	movlb	0	; () banked
  3507  001DA0  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  3508  001DA2                     
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3511  001DA2  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  3512  001DA4  B4D8               	btfsc	status,2,c
  3513  001DA6  EFD7  F00E         	goto	u9551
  3514  001DAA  EFD9  F00E         	goto	u9550
  3515  001DAE                     u9551:
  3516  001DAE  EF21  F00F         	goto	l8683
  3517  001DB2                     u9550:
  3518  001DB2                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3521  001DB2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3522  001DB8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3523  001DBE  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3524  001DC4  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3525  001DCA  0E01               	movlw	1
  3526  001DCC  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3527  001DCE  0E00               	movlw	0
  3528  001DD0  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3529  001DD2  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3530  001DD8  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3531  001DDE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3532  001DDE  6AF8               	clrf	tblptru,c
  3533  001DE0                     	endif
  3534  001DE0                     	if	0	;tblptru may be non-zero
  3535  001DE0                     	endif
  3536  001DE0  0008               	tblrd		*
  3537  001DE2  50F5               	movf	tablat,w,c
  3538  001DE4  6E1A               	movwf	tolower@c^0,c
  3539  001DE6  6A1B               	clrf	(tolower@c+1)^0,c
  3540  001DE8  EC01  F02A         	call	_tolower	;wreg free
  3541  001DEC  501A               	movf	?_tolower^0,w,c
  3542  001DEE  0100               	movlb	0	; () banked
  3543  001DF0  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3544  001DF2                     
  3545                           ; BSR set to: 0
  3546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3547  001DF2  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3548  001DF4  B4D8               	btfsc	status,2,c
  3549  001DF6  EFFF  F00E         	goto	u9561
  3550  001DFA  EF01  F00F         	goto	u9560
  3551  001DFE                     u9561:
  3552  001DFE  EF21  F00F         	goto	l8683
  3553  001E02                     u9560:
  3554  001E02                     
  3555                           ; BSR set to: 0
  3556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3557  001E02  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3558  001E08  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3559  001E0E  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3560  001E14  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3561  001E1A  0E02               	movlw	2
  3562  001E1C  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3563  001E1E  0E00               	movlw	0
  3564  001E20  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3565  001E22  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3566  001E28  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3567  001E2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3568  001E2E  6AF8               	clrf	tblptru,c
  3569  001E30                     	endif
  3570  001E30                     	if	0	;tblptru may be non-zero
  3571  001E30                     	endif
  3572  001E30  0008               	tblrd		*
  3573  001E32  50F5               	movf	tablat,w,c
  3574  001E34  6E1A               	movwf	tolower@c^0,c
  3575  001E36  6A1B               	clrf	(tolower@c+1)^0,c
  3576  001E38  EC01  F02A         	call	_tolower	;wreg free
  3577  001E3C  501A               	movf	?_tolower^0,w,c
  3578  001E3E  0100               	movlb	0	; () banked
  3579  001E40  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3580  001E42                     l8683:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3584  001E42  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3585  001E48  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3586  001E4E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3587  001E54  006F FF77 FFF7     	movff	postdec2,tblptrh
  3588  001E5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3589  001E5A  6AF8               	clrf	tblptru,c
  3590  001E5C                     	endif
  3591  001E5C                     	if	0	;tblptru may be non-zero
  3592  001E5C                     	endif
  3593  001E5C  0008               	tblrd		*
  3594  001E5E  50F5               	movf	tablat,w,c
  3595  001E60  0A64               	xorlw	100
  3596  001E62  B4D8               	btfsc	status,2,c
  3597  001E64  EF36  F00F         	goto	u9571
  3598  001E68  EF38  F00F         	goto	u9570
  3599  001E6C                     u9571:
  3600  001E6C  EF4F  F00F         	goto	l8687
  3601  001E70                     u9570:
  3602  001E70                     
  3603                           ; BSR set to: 0
  3604  001E70  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3605  001E76  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3606  001E7C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3607  001E82  006F FF77 FFF7     	movff	postdec2,tblptrh
  3608  001E88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3609  001E88  6AF8               	clrf	tblptru,c
  3610  001E8A                     	endif
  3611  001E8A                     	if	0	;tblptru may be non-zero
  3612  001E8A                     	endif
  3613  001E8A  0008               	tblrd		*
  3614  001E8C  50F5               	movf	tablat,w,c
  3615  001E8E  0A69               	xorlw	105
  3616  001E90  A4D8               	btfss	status,2,c
  3617  001E92  EF4D  F00F         	goto	u9581
  3618  001E96  EF4F  F00F         	goto	u9580
  3619  001E9A                     u9581:
  3620  001E9A  EF99  F00F         	goto	l8693
  3621  001E9E                     u9580:
  3622  001E9E                     l8687:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3626  001E9E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3627  001EA4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3628  001EAA  2ADE               	incf	postinc2,f,c
  3629  001EAC  0E00               	movlw	0
  3630  001EAE  22DD               	addwfc	postdec2,f,c
  3631                           
  3632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3633  001EB0  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3634  001EB6  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3635  001EBC  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3636  001EC2  0E02               	movlw	2
  3637  001EC4  26DE               	addwf	postinc2,f,c
  3638  001EC6  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3639  001ECC  0E00               	movlw	0
  3640  001ECE  22DD               	addwfc	postdec2,f,c
  3641  001ED0  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3642  001ED6  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3643  001EDC  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3644  001EE2  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3645  001EE8  0E00               	movlw	0
  3646  001EEA  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3647  001EEC  0EFF               	movlw	-1
  3648  001EEE  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3649  001EF0  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3650  001EF2  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3651  001EF4  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3652  001EF6  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3653  001EF8  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3654  001EFA                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3657  001EFA  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3658  001EFE  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3659  001F02  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3660  001F06  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3661  001F0A  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3662  001F0E  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3663  001F12  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3664  001F16  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3665  001F1A  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3666  001F1E  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3667  001F22  EC78  F017         	call	_dtoa	;wreg free
  3668  001F26  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3669  001F2A  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3670  001F2E  EF21  F011         	goto	l2249
  3671  001F32                     l8693:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3675  001F32  0E66               	movlw	102
  3676  001F34  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3677  001F36  A4D8               	btfss	status,2,c
  3678  001F38  EFA0  F00F         	goto	u9591
  3679  001F3C  EFA2  F00F         	goto	u9590
  3680  001F40                     u9591:
  3681  001F40  EFF4  F00F         	goto	l8705
  3682  001F44                     u9590:
  3683  001F44                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3686  001F44  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3687  001F4A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3688  001F50  006F FF7B FFF6     	movff	postinc2,tblptrl
  3689  001F56  006F FF77 FFF7     	movff	postdec2,tblptrh
  3690  001F5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3691  001F5C  6AF8               	clrf	tblptru,c
  3692  001F5E                     	endif
  3693  001F5E                     	if	0	;tblptru may be non-zero
  3694  001F5E                     	endif
  3695  001F5E  0008               	tblrd		*
  3696  001F60  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3697  001F66                     
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3700  001F66  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3701  001F6C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3702  001F72  2ADE               	incf	postinc2,f,c
  3703  001F74  0E00               	movlw	0
  3704  001F76  22DD               	addwfc	postdec2,f,c
  3705  001F78                     
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3708  001F78  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3709  001F7E  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3710  001F84  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3711  001F8A  0E04               	movlw	4
  3712  001F8C  26DE               	addwf	postinc2,f,c
  3713  001F8E  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3714  001F94  0E00               	movlw	0
  3715  001F96  22DD               	addwfc	postdec2,f,c
  3716  001F98  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3717  001F9E  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3718  001FA4  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3719  001FAA  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3720  001FB0  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3721  001FB6  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3722  001FBC                     
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3725  001FBC  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3726  001FC0  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3727  001FC4  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3728  001FC8  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3729  001FCC  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3730  001FD0  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3731  001FD4  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3732  001FD8  EC3A  F008         	call	_efgtoa	;wreg free
  3733  001FDC  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3734  001FE0  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3735  001FE4  EF21  F011         	goto	l2249
  3736  001FE8                     l8705:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3740  001FE8  0EDF               	movlw	low vfpfcnvrt@ct
  3741  001FEA  6E14               	movwf	strncmp@_l^0,c
  3742  001FEC  0E00               	movlw	high vfpfcnvrt@ct
  3743  001FEE  6E15               	movwf	(strncmp@_l+1)^0,c
  3744  001FF0  0E6F               	movlw	low STR_16
  3745  001FF2  6E16               	movwf	strncmp@_r^0,c
  3746  001FF4  0E10               	movlw	high STR_16
  3747  001FF6  6E17               	movwf	(strncmp@_r+1)^0,c
  3748  001FF8  0E00               	movlw	0
  3749  001FFA  6E19               	movwf	(strncmp@n+1)^0,c
  3750  001FFC  0E02               	movlw	2
  3751  001FFE  6E18               	movwf	strncmp@n^0,c
  3752  002000  EC11  F025         	call	_strncmp	;wreg free
  3753  002004  5014               	movf	?_strncmp^0,w,c
  3754  002006  1015               	iorwf	(?_strncmp+1)^0,w,c
  3755  002008  A4D8               	btfss	status,2,c
  3756  00200A  EF09  F010         	goto	u9601
  3757  00200E  EF0B  F010         	goto	u9600
  3758  002012                     u9601:
  3759  002012  EFBE  F010         	goto	l8721
  3760  002016                     u9600:
  3761  002016                     
  3762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3763  002016  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3764  00201C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3765  002022  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3766  002028  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3767  00202E  0E01               	movlw	1
  3768  002030  0100               	movlb	0	; () banked
  3769  002032  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3770  002034  0E00               	movlw	0
  3771  002036  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3772  002038  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3773  00203E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3774  002044                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3775  002044  6AF8               	clrf	tblptru,c
  3776  002046                     	endif
  3777  002046                     	if	0	;tblptru may be non-zero
  3778  002046                     	endif
  3779  002046  0008               	tblrd		*
  3780  002048  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3781  00204E  0EBF               	movlw	191
  3782  002050  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3783  002052  0EFF               	movlw	255
  3784  002054  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3785  002056  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3786  00205C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3787  002062  006F FF7B FFF6     	movff	postinc2,tblptrl
  3788  002068  006F FF77 FFF7     	movff	postdec2,tblptrh
  3789  00206E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3790  00206E  6AF8               	clrf	tblptru,c
  3791  002070                     	endif
  3792  002070                     	if	0	;tblptru may be non-zero
  3793  002070                     	endif
  3794  002070  0008               	tblrd		*
  3795  002072  50F5               	movf	tablat,w,c
  3796  002074  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3797  002076  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3798  002078  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3799  00207A  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3800  00207C  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3801  00207E  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3802  002080  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3803  002082  E10A               	bnz	u9610
  3804  002084  0E1A               	movlw	26
  3805  002086  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3806  002088  A0D8               	btfss	status,0,c
  3807  00208A  EF49  F010         	goto	u9611
  3808  00208E  EF4C  F010         	goto	u9610
  3809  002092                     u9611:
  3810  002092  0E01               	movlw	1
  3811  002094  EF4D  F010         	goto	u9620
  3812  002098                     u9610:
  3813  002098  0E00               	movlw	0
  3814  00209A                     u9620:
  3815  00209A  6FD9               	movwf	_vfpfcnvrt$3583& (0+255),b
  3816  00209C  6BDA               	clrf	(_vfpfcnvrt$3583+1)& (0+255),b
  3817  00209E                     
  3818                           ; BSR set to: 0
  3819  00209E  51D9               	movf	_vfpfcnvrt$3583& (0+255),w,b
  3820  0020A0  11DA               	iorwf	(_vfpfcnvrt$3583+1)& (0+255),w,b
  3821  0020A2  B4D8               	btfsc	status,2,c
  3822  0020A4  EF56  F010         	goto	u9631
  3823  0020A8  EF58  F010         	goto	u9630
  3824  0020AC                     u9631:
  3825  0020AC  EF7C  F010         	goto	l8715
  3826  0020B0                     u9630:
  3827  0020B0                     
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3830  0020B0  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3831  0020B6  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3832  0020BC  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3833  0020C2  0E04               	movlw	4
  3834  0020C4  26DE               	addwf	postinc2,f,c
  3835  0020C6  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3836  0020CC  0E00               	movlw	0
  3837  0020CE  22DD               	addwfc	postdec2,f,c
  3838  0020D0  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3839  0020D6  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3840  0020DC  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3841  0020E2  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3842  0020E8  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3843  0020EE  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3846  0020F4  EF9E  F010         	goto	l2257
  3847  0020F8                     l8715:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3851  0020F8  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3852  0020FE  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3853  002104  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3854  00210A  0E04               	movlw	4
  3855  00210C  26DE               	addwf	postinc2,f,c
  3856  00210E  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3857  002114  0E00               	movlw	0
  3858  002116  22DD               	addwfc	postdec2,f,c
  3859  002118  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3860  00211E  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3861  002124  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3862  00212A  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3863  002130  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3864  002136  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3865  00213C                     l2257:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3869  00213C  0E02               	movlw	2
  3870  00213E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3871  002144  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3872  00214A  26DE               	addwf	postinc2,f,c
  3873  00214C  0E00               	movlw	0
  3874  00214E  22DD               	addwfc	postdec2,f,c
  3875  002150                     
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3878  002150  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3879  002154  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3880  002158  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3881  00215C  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3882  002160  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3883  002164  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3884  002168  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3885  00216C  EC3A  F008         	call	_efgtoa	;wreg free
  3886  002170  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3887  002174  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3888  002178  EF21  F011         	goto	l2249
  3889  00217C                     l8721:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3892  00217C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3893  002182  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3894  002188  006F FF7B FFF6     	movff	postinc2,tblptrl
  3895  00218E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3896  002194                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3897  002194  6AF8               	clrf	tblptru,c
  3898  002196                     	endif
  3899  002196                     	if	0	;tblptru may be non-zero
  3900  002196                     	endif
  3901  002196  0008               	tblrd		*
  3902  002198  50F5               	movf	tablat,w,c
  3903  00219A  0A25               	xorlw	37
  3904  00219C  A4D8               	btfss	status,2,c
  3905  00219E  EFD3  F010         	goto	u9641
  3906  0021A2  EFD5  F010         	goto	u9640
  3907  0021A6                     u9641:
  3908  0021A6  EFEF  F010         	goto	l8731
  3909  0021AA                     u9640:
  3910  0021AA                     
  3911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3912  0021AA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3913  0021B0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3914  0021B6  2ADE               	incf	postinc2,f,c
  3915  0021B8  0E00               	movlw	0
  3916  0021BA  22DD               	addwfc	postdec2,f,c
  3917  0021BC                     
  3918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3919  0021BC  0E00               	movlw	0
  3920  0021BE  6E17               	movwf	(fputc@c+1)^0,c
  3921  0021C0  0E25               	movlw	37
  3922  0021C2  6E16               	movwf	fputc@c^0,c
  3923  0021C4  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3924  0021C8  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3925  0021CC  EC83  F028         	call	_fputc	;wreg free
  3926  0021D0                     l8727:
  3927                           
  3928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3929  0021D0  0E00               	movlw	0
  3930  0021D2  0100               	movlb	0	; () banked
  3931  0021D4  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3932  0021D6  0E01               	movlw	1
  3933  0021D8  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3934  0021DA  EF21  F011         	goto	l2249
  3935  0021DE                     l8731:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3938  0021DE  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3939  0021E4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3940  0021EA  2ADE               	incf	postinc2,f,c
  3941  0021EC  0E00               	movlw	0
  3942  0021EE  22DD               	addwfc	postdec2,f,c
  3943  0021F0                     
  3944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3945  0021F0  0E00               	movlw	0
  3946  0021F2  0100               	movlb	0	; () banked
  3947  0021F4  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3948  0021F6  0E00               	movlw	0
  3949  0021F8  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3950  0021FA  EF21  F011         	goto	l2249
  3951  0021FE                     l8737:
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3954  0021FE  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3955  002204  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3956  00220A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3957  002210  006F FF77 FFF7     	movff	postdec2,tblptrh
  3958  002216                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3959  002216  6AF8               	clrf	tblptru,c
  3960  002218                     	endif
  3961  002218                     	if	0	;tblptru may be non-zero
  3962  002218                     	endif
  3963  002218  0008               	tblrd		*
  3964  00221A  50F5               	movf	tablat,w,c
  3965  00221C  6E16               	movwf	fputc@c^0,c
  3966  00221E  6A17               	clrf	(fputc@c+1)^0,c
  3967  002220  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3968  002224  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3969  002228  EC83  F028         	call	_fputc	;wreg free
  3970  00222C                     
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3972  00222C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3973  002232  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3974  002238  2ADE               	incf	postinc2,f,c
  3975  00223A  0E00               	movlw	0
  3976  00223C  22DD               	addwfc	postdec2,f,c
  3977  00223E  EFE8  F010         	goto	l8727
  3978  002242                     l2249:
  3979  002242  0012               	return		;funcret
  3980  002244                     __end_of_vfpfcnvrt:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _strncmp *****************
  3984 ;; Defined at:
  3985 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3988 ;;		 -> vfpfcnvrt@ct(3), 
  3989 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  3990 ;;		 -> STR_18(3), 
  3991 ;;  n               2   23[COMRAM] unsigned int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  r               2   28[COMRAM] PTR const unsigned char 
  3994 ;;		 -> STR_18(3), 
  3995 ;;  l               2   26[COMRAM] PTR const unsigned char 
  3996 ;;		 -> vfpfcnvrt@ct(3), 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  2   19[COMRAM] int 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;Total ram usage:       11 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; Hardware stack levels required when called: 8
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_vfpfcnvrt
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text9
  4021  004A22                     __ptext9:
  4022                           	callstack 0
  4023  004A22                     _strncmp:
  4024                           	callstack 17
  4025  004A22  C014  F01B         	movff	strncmp@_l,strncmp@l
  4026  004A26  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4027  004A2A  C016  F01D         	movff	strncmp@_r,strncmp@r
  4028  004A2E  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4029  004A32  0618               	decf	strncmp@n^0,f,c
  4030  004A34  A0D8               	btfss	status,0,c
  4031  004A36  0619               	decf	(strncmp@n+1)^0,f,c
  4032  004A38  2818               	incf	strncmp@n^0,w,c
  4033  004A3A  E106               	bnz	u9471
  4034  004A3C  2819               	incf	(strncmp@n+1)^0,w,c
  4035  004A3E  A4D8               	btfss	status,2,c
  4036  004A40  EF24  F025         	goto	u9471
  4037  004A44  EF26  F025         	goto	u9470
  4038  004A48                     u9471:
  4039  004A48  EF33  F025         	goto	l8649
  4040  004A4C                     u9470:
  4041  004A4C  0E00               	movlw	0
  4042  004A4E  6E15               	movwf	(?_strncmp+1)^0,c
  4043  004A50  0E00               	movlw	0
  4044  004A52  6E14               	movwf	?_strncmp^0,c
  4045  004A54  EF8A  F025         	goto	l2337
  4046  004A58                     l8647:
  4047  004A58  4A1B               	infsnz	strncmp@l^0,f,c
  4048  004A5A  2A1C               	incf	(strncmp@l+1)^0,f,c
  4049  004A5C  4A1D               	infsnz	strncmp@r^0,f,c
  4050  004A5E  2A1E               	incf	(strncmp@r+1)^0,f,c
  4051  004A60  0618               	decf	strncmp@n^0,f,c
  4052  004A62  A0D8               	btfss	status,0,c
  4053  004A64  0619               	decf	(strncmp@n+1)^0,f,c
  4054  004A66                     l8649:
  4055  004A66  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4056  004A6C  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4057  004A72  50DF               	movf	indf2,w,c
  4058  004A74  B4D8               	btfsc	status,2,c
  4059  004A76  EF3F  F025         	goto	u9481
  4060  004A7A  EF41  F025         	goto	u9480
  4061  004A7E                     u9481:
  4062  004A7E  EF74  F025         	goto	l8657
  4063  004A82                     u9480:
  4064  004A82  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4065  004A88  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4066  004A8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4067  004A8E  6AF8               	clrf	tblptru,c
  4068  004A90                     	endif
  4069  004A90                     	if	0	;tblptru may be non-zero
  4070  004A90                     	endif
  4071  004A90  0008               	tblrd		*
  4072  004A92  50F5               	movf	tablat,w,c
  4073  004A94  0900               	iorlw	0
  4074  004A96  B4D8               	btfsc	status,2,c
  4075  004A98  EF50  F025         	goto	u9491
  4076  004A9C  EF52  F025         	goto	u9490
  4077  004AA0                     u9491:
  4078  004AA0  EF74  F025         	goto	l8657
  4079  004AA4                     u9490:
  4080  004AA4  5018               	movf	strncmp@n^0,w,c
  4081  004AA6  1019               	iorwf	(strncmp@n+1)^0,w,c
  4082  004AA8  B4D8               	btfsc	status,2,c
  4083  004AAA  EF59  F025         	goto	u9501
  4084  004AAE  EF5B  F025         	goto	u9500
  4085  004AB2                     u9501:
  4086  004AB2  EF74  F025         	goto	l8657
  4087  004AB6                     u9500:
  4088  004AB6  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4089  004ABC  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4090  004AC2  50DF               	movf	indf2,w,c
  4091  004AC4  6E1A               	movwf	??_strncmp^0,c
  4092  004AC6  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4093  004ACC  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4094  004AD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4095  004AD2  6AF8               	clrf	tblptru,c
  4096  004AD4                     	endif
  4097  004AD4                     	if	0	;tblptru may be non-zero
  4098  004AD4                     	endif
  4099  004AD4  0008               	tblrd		*
  4100  004AD6  50F5               	movf	tablat,w,c
  4101  004AD8  181A               	xorwf	??_strncmp^0,w,c
  4102  004ADA  B4D8               	btfsc	status,2,c
  4103  004ADC  EF72  F025         	goto	u9511
  4104  004AE0  EF74  F025         	goto	u9510
  4105  004AE4                     u9511:
  4106  004AE4  EF2C  F025         	goto	l8647
  4107  004AE8                     u9510:
  4108  004AE8                     l8657:
  4109  004AE8  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4110  004AEE  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4111  004AF4  50DF               	movf	indf2,w,c
  4112  004AF6  6E1A               	movwf	??_strncmp^0,c
  4113  004AF8  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4114  004AFE  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4115  004B04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4116  004B04  6AF8               	clrf	tblptru,c
  4117  004B06                     	endif
  4118  004B06                     	if	0	;tblptru may be non-zero
  4119  004B06                     	endif
  4120  004B06  0008               	tblrd		*
  4121  004B08  50F5               	movf	tablat,w,c
  4122  004B0A  5C1A               	subwf	??_strncmp^0,w,c
  4123  004B0C  6E14               	movwf	?_strncmp^0,c
  4124  004B0E  6A15               	clrf	(?_strncmp+1)^0,c
  4125  004B10  A0D8               	btfss	status,0,c
  4126  004B12  0615               	decf	(?_strncmp+1)^0,f,c
  4127  004B14                     l2337:
  4128  004B14  0012               	return		;funcret
  4129  004B16                     __end_of_strncmp:
  4130                           	callstack 0
  4131                           
  4132 ;; *************** function _efgtoa *****************
  4133 ;; Defined at:
  4134 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4137 ;;		 -> NULL(0), 
  4138 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4139 ;;  c               1   41[BANK0 ] unsigned char 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  u               4   99[BANK0 ] unsigned char 
  4142 ;;  g               4   91[BANK0 ] unsigned char 
  4143 ;;  l               4   85[BANK0 ] unsigned char 
  4144 ;;  h               4   81[BANK0 ] unsigned char 
  4145 ;;  ou              4   67[BANK0 ] unsigned char 
  4146 ;;  n               2   97[BANK0 ] int 
  4147 ;;  e               2   95[BANK0 ] int 
  4148 ;;  i               2   89[BANK0 ] int 
  4149 ;;  w               2   77[BANK0 ] int 
  4150 ;;  p               2   75[BANK0 ] int 
  4151 ;;  sign            2   73[BANK0 ] int 
  4152 ;;  d               2   71[BANK0 ] int 
  4153 ;;  m               2   65[BANK0 ] int 
  4154 ;;  ne              2   63[BANK0 ] int 
  4155 ;;  pp              2   61[BANK0 ] int 
  4156 ;;  t               2   59[BANK0 ] int 
  4157 ;;  mode            1   80[BANK0 ] unsigned char 
  4158 ;;  nmode           1   79[BANK0 ] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  2   35[BANK0 ] int 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4168 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;Total ram usage:       68 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 13
  4175 ;; This function calls:
  4176 ;;		___awdiv
  4177 ;;		___awmod
  4178 ;;		___fladd
  4179 ;;		___fldiv
  4180 ;;		___fleq
  4181 ;;		___flge
  4182 ;;		___flmul
  4183 ;;		___flneg
  4184 ;;		___flsub
  4185 ;;		___fltol
  4186 ;;		___fpclassifyf
  4187 ;;		_floorf
  4188 ;;		_isupper
  4189 ;;		_pad
  4190 ;;		_strcpy
  4191 ;;		_tolower
  4192 ;; This function is called by:
  4193 ;;		_vfpfcnvrt
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text10
  4198  001074                     __ptext10:
  4199                           	callstack 0
  4200  001074                     _efgtoa:
  4201                           	callstack 12
  4202  001074                     
  4203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4204  001074  0E00               	movlw	0
  4205  001076  0100               	movlb	0	; () banked
  4206  001078  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4207  00107A  0E00               	movlw	0
  4208  00107C  6FA9               	movwf	efgtoa@sign& (0+255),b
  4209  00107E                     
  4210                           ; BSR set to: 0
  4211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4212  00107E  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4213  001082  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4214  001086  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4215  00108A  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4216  00108E                     
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4219  00108E  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4220  001090  EF4E  F008         	goto	u8930
  4221  001094  EF4C  F008         	goto	u8931
  4222  001098                     u8931:
  4223  001098  EF64  F008         	goto	l8343
  4224  00109C                     u8930:
  4225  00109C                     
  4226                           ; BSR set to: 0
  4227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4228  00109C  0E00               	movlw	0
  4229  00109E  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4230  0010A0  0E01               	movlw	1
  4231  0010A2  6FA9               	movwf	efgtoa@sign& (0+255),b
  4232  0010A4                     
  4233                           ; BSR set to: 0
  4234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4235  0010A4  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4236  0010A8  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4237  0010AC  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4238  0010B0  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4239  0010B4  EC49  F02C         	call	___flneg	;wreg free
  4240  0010B8  C014  F0BB         	movff	?___flneg,efgtoa@g
  4241  0010BC  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4242  0010C0  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4243  0010C4  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4244  0010C8                     l8343:
  4245                           
  4246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4247  0010C8  0E00               	movlw	0
  4248  0010CA  0100               	movlb	0	; () banked
  4249  0010CC  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4250  0010CE  0E00               	movlw	0
  4251  0010D0  6FC1               	movwf	efgtoa@n& (0+255),b
  4252  0010D2                     
  4253                           ; BSR set to: 0
  4254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4255  0010D2  C03A  F0AD         	movff	_width,efgtoa@w
  4256  0010D6  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4257  0010DA                     
  4258                           ; BSR set to: 0
  4259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4260  0010DA  51A9               	movf	efgtoa@sign& (0+255),w,b
  4261  0010DC  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4262  0010DE  A4D8               	btfss	status,2,c
  4263  0010E0  EF74  F008         	goto	u8941
  4264  0010E4  EF76  F008         	goto	u8940
  4265  0010E8                     u8941:
  4266  0010E8  EF7D  F008         	goto	l8351
  4267  0010EC                     u8940:
  4268  0010EC                     
  4269                           ; BSR set to: 0
  4270  0010EC  A43E               	btfss	_flags^0,2,c
  4271  0010EE  EF7B  F008         	goto	u8951
  4272  0010F2  EF7D  F008         	goto	u8950
  4273  0010F6                     u8951:
  4274  0010F6  EF97  F008         	goto	l8363
  4275  0010FA                     u8950:
  4276  0010FA                     l8351:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4280  0010FA  51A9               	movf	efgtoa@sign& (0+255),w,b
  4281  0010FC  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4282  0010FE  A4D8               	btfss	status,2,c
  4283  001100  EF84  F008         	goto	u8961
  4284  001104  EF86  F008         	goto	u8960
  4285  001108                     u8961:
  4286  001108  EF8C  F008         	goto	l8355
  4287  00110C                     u8960:
  4288  00110C                     
  4289                           ; BSR set to: 0
  4290  00110C  0E00               	movlw	0
  4291  00110E  6F90               	movwf	(_efgtoa$3554+1)& (0+255),b
  4292  001110  0E2B               	movlw	43
  4293  001112  6F8F               	movwf	_efgtoa$3554& (0+255),b
  4294  001114  EF90  F008         	goto	l8357
  4295  001118                     l8355:
  4296                           
  4297                           ; BSR set to: 0
  4298  001118  0E00               	movlw	0
  4299  00111A  6F90               	movwf	(_efgtoa$3554+1)& (0+255),b
  4300  00111C  0E2D               	movlw	45
  4301  00111E  6F8F               	movwf	_efgtoa$3554& (0+255),b
  4302  001120                     l8357:
  4303                           
  4304                           ; BSR set to: 0
  4305  001120  C08F  F134         	movff	_efgtoa$3554,_dbuf
  4306  001124                     
  4307                           ; BSR set to: 0
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4309  001124  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4310  001126  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4311  001128                     
  4312                           ; BSR set to: 0
  4313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4314  001128  07AD               	decf	efgtoa@w& (0+255),f,b
  4315  00112A  A0D8               	btfss	status,0,c
  4316  00112C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4317  00112E                     l8363:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4321  00112E  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4322  001132  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4323  001136  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4324  00113A  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4325  00113E  EC92  F024         	call	___fpclassifyf	;wreg free
  4326  001142  0414               	decf	?___fpclassifyf^0,w,c
  4327  001144  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4328  001146  A4D8               	btfss	status,2,c
  4329  001148  EFA8  F008         	goto	u8971
  4330  00114C  EFAA  F008         	goto	u8970
  4331  001150                     u8971:
  4332  001150  EF01  F009         	goto	l8381
  4333  001154                     u8970:
  4334  001154  0EBF               	movlw	191
  4335  001156  0100               	movlb	0	; () banked
  4336  001158  6F8A               	movwf	??_efgtoa& (0+255),b
  4337  00115A  0EFF               	movlw	255
  4338  00115C  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4339  00115E  5189               	movf	efgtoa@c& (0+255),w,b
  4340  001160  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4341  001162  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4342  001164  518A               	movf	??_efgtoa& (0+255),w,b
  4343  001166  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4344  001168  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4345  00116A  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4346  00116C  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4347  00116E  E10A               	bnz	u8980
  4348  001170  0E1A               	movlw	26
  4349  001172  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4350  001174  A0D8               	btfss	status,0,c
  4351  001176  EFBF  F008         	goto	u8981
  4352  00117A  EFC2  F008         	goto	u8980
  4353  00117E                     u8981:
  4354  00117E  0E01               	movlw	1
  4355  001180  EFC3  F008         	goto	u8990
  4356  001184                     u8980:
  4357  001184  0E00               	movlw	0
  4358  001186                     u8990:
  4359  001186  6F91               	movwf	_efgtoa$3555& (0+255),b
  4360  001188  6B92               	clrf	(_efgtoa$3555+1)& (0+255),b
  4361  00118A                     
  4362                           ; BSR set to: 0
  4363  00118A  5191               	movf	_efgtoa$3555& (0+255),w,b
  4364  00118C  1192               	iorwf	(_efgtoa$3555+1)& (0+255),w,b
  4365  00118E  B4D8               	btfsc	status,2,c
  4366  001190  EFCC  F008         	goto	u9001
  4367  001194  EFCE  F008         	goto	u9000
  4368  001198                     u9001:
  4369  001198  EFDC  F008         	goto	l8373
  4370  00119C                     u9000:
  4371  00119C                     
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4374  00119C  0E34               	movlw	low _dbuf
  4375  00119E  25C1               	addwf	efgtoa@n& (0+255),w,b
  4376  0011A0  6E14               	movwf	strcpy@dest^0,c
  4377  0011A2  0E01               	movlw	high _dbuf
  4378  0011A4  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4379  0011A6  6E15               	movwf	(strcpy@dest+1)^0,c
  4380  0011A8  0E5F               	movlw	low STR_8
  4381  0011AA  6E16               	movwf	strcpy@src^0,c
  4382  0011AC  0E10               	movlw	high STR_8
  4383  0011AE  6E17               	movwf	(strcpy@src+1)^0,c
  4384  0011B0  EC99  F029         	call	_strcpy	;wreg free
  4385                           
  4386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4387  0011B4  EFE8  F008         	goto	l8375
  4388  0011B8                     l8373:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4392  0011B8  0E34               	movlw	low _dbuf
  4393  0011BA  25C1               	addwf	efgtoa@n& (0+255),w,b
  4394  0011BC  6E14               	movwf	strcpy@dest^0,c
  4395  0011BE  0E01               	movlw	high _dbuf
  4396  0011C0  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4397  0011C2  6E15               	movwf	(strcpy@dest+1)^0,c
  4398  0011C4  0E67               	movlw	low STR_9
  4399  0011C6  6E16               	movwf	strcpy@src^0,c
  4400  0011C8  0E10               	movlw	high STR_9
  4401  0011CA  6E17               	movwf	(strcpy@src+1)^0,c
  4402  0011CC  EC99  F029         	call	_strcpy	;wreg free
  4403  0011D0                     l8375:
  4404                           
  4405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4406  0011D0  0100               	movlb	0	; () banked
  4407  0011D2  0EFD               	movlw	253
  4408  0011D4  27AD               	addwf	efgtoa@w& (0+255),f,b
  4409  0011D6  0EFF               	movlw	255
  4410  0011D8  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4411  0011DA                     
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4414  0011DA  C083  F026         	movff	efgtoa@fp,pad@fp
  4415  0011DE  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4416  0011E2  0E34               	movlw	low _dbuf
  4417  0011E4  6E28               	movwf	pad@buf^0,c
  4418  0011E6  0E01               	movlw	high _dbuf
  4419  0011E8  6E29               	movwf	(pad@buf+1)^0,c
  4420  0011EA  C0AD  F02A         	movff	efgtoa@w,pad@p
  4421  0011EE  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4422  0011F2  ECC3  F026         	call	_pad	;wreg free
  4423  0011F6  C026  F083         	movff	?_pad,?_efgtoa
  4424  0011FA  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4425  0011FE  EF90  F00E         	goto	l2165
  4426  001202                     l8381:
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4429  001202  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4430  001206  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4431  00120A  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4432  00120E  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4433  001212  EC92  F024         	call	___fpclassifyf	;wreg free
  4434  001216  5014               	movf	?___fpclassifyf^0,w,c
  4435  001218  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4436  00121A  A4D8               	btfss	status,2,c
  4437  00121C  EF12  F009         	goto	u9011
  4438  001220  EF14  F009         	goto	u9010
  4439  001224                     u9011:
  4440  001224  EF6B  F009         	goto	l8399
  4441  001228                     u9010:
  4442  001228  0EBF               	movlw	191
  4443  00122A  0100               	movlb	0	; () banked
  4444  00122C  6F8A               	movwf	??_efgtoa& (0+255),b
  4445  00122E  0EFF               	movlw	255
  4446  001230  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4447  001232  5189               	movf	efgtoa@c& (0+255),w,b
  4448  001234  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4449  001236  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4450  001238  518A               	movf	??_efgtoa& (0+255),w,b
  4451  00123A  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4452  00123C  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4453  00123E  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4454  001240  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4455  001242  E10A               	bnz	u9020
  4456  001244  0E1A               	movlw	26
  4457  001246  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4458  001248  A0D8               	btfss	status,0,c
  4459  00124A  EF29  F009         	goto	u9021
  4460  00124E  EF2C  F009         	goto	u9020
  4461  001252                     u9021:
  4462  001252  0E01               	movlw	1
  4463  001254  EF2D  F009         	goto	u9030
  4464  001258                     u9020:
  4465  001258  0E00               	movlw	0
  4466  00125A                     u9030:
  4467  00125A  6F93               	movwf	_efgtoa$3559& (0+255),b
  4468  00125C  6B94               	clrf	(_efgtoa$3559+1)& (0+255),b
  4469  00125E                     
  4470                           ; BSR set to: 0
  4471  00125E  5193               	movf	_efgtoa$3559& (0+255),w,b
  4472  001260  1194               	iorwf	(_efgtoa$3559+1)& (0+255),w,b
  4473  001262  B4D8               	btfsc	status,2,c
  4474  001264  EF36  F009         	goto	u9041
  4475  001268  EF38  F009         	goto	u9040
  4476  00126C                     u9041:
  4477  00126C  EF46  F009         	goto	l8391
  4478  001270                     u9040:
  4479  001270                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4482  001270  0E34               	movlw	low _dbuf
  4483  001272  25C1               	addwf	efgtoa@n& (0+255),w,b
  4484  001274  6E14               	movwf	strcpy@dest^0,c
  4485  001276  0E01               	movlw	high _dbuf
  4486  001278  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4487  00127A  6E15               	movwf	(strcpy@dest+1)^0,c
  4488  00127C  0E63               	movlw	low STR_12
  4489  00127E  6E16               	movwf	strcpy@src^0,c
  4490  001280  0E10               	movlw	high STR_12
  4491  001282  6E17               	movwf	(strcpy@src+1)^0,c
  4492  001284  EC99  F029         	call	_strcpy	;wreg free
  4493                           
  4494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4495  001288  EF52  F009         	goto	l8393
  4496  00128C                     l8391:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4500  00128C  0E34               	movlw	low _dbuf
  4501  00128E  25C1               	addwf	efgtoa@n& (0+255),w,b
  4502  001290  6E14               	movwf	strcpy@dest^0,c
  4503  001292  0E01               	movlw	high _dbuf
  4504  001294  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4505  001296  6E15               	movwf	(strcpy@dest+1)^0,c
  4506  001298  0E6B               	movlw	low STR_13
  4507  00129A  6E16               	movwf	strcpy@src^0,c
  4508  00129C  0E10               	movlw	high STR_13
  4509  00129E  6E17               	movwf	(strcpy@src+1)^0,c
  4510  0012A0  EC99  F029         	call	_strcpy	;wreg free
  4511  0012A4                     l8393:
  4512                           
  4513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4514  0012A4  0100               	movlb	0	; () banked
  4515  0012A6  0EFD               	movlw	253
  4516  0012A8  27AD               	addwf	efgtoa@w& (0+255),f,b
  4517  0012AA  0EFF               	movlw	255
  4518  0012AC  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4519  0012AE                     
  4520                           ; BSR set to: 0
  4521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4522  0012AE  C083  F026         	movff	efgtoa@fp,pad@fp
  4523  0012B2  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4524  0012B6  0E34               	movlw	low _dbuf
  4525  0012B8  6E28               	movwf	pad@buf^0,c
  4526  0012BA  0E01               	movlw	high _dbuf
  4527  0012BC  6E29               	movwf	(pad@buf+1)^0,c
  4528  0012BE  C0AD  F02A         	movff	efgtoa@w,pad@p
  4529  0012C2  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4530  0012C6  ECC3  F026         	call	_pad	;wreg free
  4531  0012CA  C026  F083         	movff	?_pad,?_efgtoa
  4532  0012CE  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4533  0012D2  EF90  F00E         	goto	l2165
  4534  0012D6                     l8399:
  4535                           
  4536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4537  0012D6  0E00               	movlw	0
  4538  0012D8  0100               	movlb	0	; () banked
  4539  0012DA  6FC3               	movwf	efgtoa@u& (0+255),b
  4540  0012DC  0E00               	movlw	0
  4541  0012DE  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4542  0012E0  0E80               	movlw	128
  4543  0012E2  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4544  0012E4  0E3F               	movlw	63
  4545  0012E6  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4546                           
  4547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4548  0012E8  0E00               	movlw	0
  4549  0012EA  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4550  0012EC  0E00               	movlw	0
  4551  0012EE  6FBF               	movwf	efgtoa@e& (0+255),b
  4552  0012F0                     
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4555  0012F0  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4556  0012F4  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4557  0012F8  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4558  0012FC  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4559  001300  0E00               	movlw	0
  4560  001302  6E18               	movwf	___fleq@ff2^0,c
  4561  001304  0E00               	movlw	0
  4562  001306  6E19               	movwf	(___fleq@ff2+1)^0,c
  4563  001308  0E00               	movlw	0
  4564  00130A  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4565  00130C  0E00               	movlw	0
  4566  00130E  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4567  001310  ECDC  F027         	call	___fleq	;wreg free
  4568  001314  B0D8               	btfsc	status,0,c
  4569  001316  EF8F  F009         	goto	u9051
  4570  00131A  EF91  F009         	goto	u9050
  4571  00131E                     u9051:
  4572  00131E  EF16  F00A         	goto	l8417
  4573  001322                     u9050:
  4574  001322  EFB0  F009         	goto	l8409
  4575  001326                     l8405:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4579  001326  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4580  00132A  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4581  00132E  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4582  001332  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4583  001336  0E00               	movlw	0
  4584  001338  6E2E               	movwf	___flmul@a^0,c
  4585  00133A  0E00               	movlw	0
  4586  00133C  6E2F               	movwf	(___flmul@a+1)^0,c
  4587  00133E  0E20               	movlw	32
  4588  001340  6E30               	movwf	(___flmul@a+2)^0,c
  4589  001342  0E41               	movlw	65
  4590  001344  6E31               	movwf	(___flmul@a+3)^0,c
  4591  001346  EC83  F013         	call	___flmul	;wreg free
  4592  00134A  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4593  00134E  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4594  001352  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4595  001356  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4596  00135A                     
  4597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4598  00135A  0100               	movlb	0	; () banked
  4599  00135C  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4600  00135E  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4601  001360                     l8409:
  4602                           
  4603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4604  001360  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4605  001364  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4606  001368  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4607  00136C  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4608  001370  0E00               	movlw	0
  4609  001372  6E2E               	movwf	___flmul@a^0,c
  4610  001374  0E00               	movlw	0
  4611  001376  6E2F               	movwf	(___flmul@a+1)^0,c
  4612  001378  0E20               	movlw	32
  4613  00137A  6E30               	movwf	(___flmul@a+2)^0,c
  4614  00137C  0E41               	movlw	65
  4615  00137E  6E31               	movwf	(___flmul@a+3)^0,c
  4616  001380  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4617  001384  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4618  001388  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4619  00138C  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4620  001390  EC83  F013         	call	___flmul	;wreg free
  4621  001394  C02A  F071         	movff	?___flmul,___flge@ff2
  4622  001398  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4623  00139C  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4624  0013A0  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4625  0013A4  EC0F  F024         	call	___flge	;wreg free
  4626  0013A8  0100               	movlb	0	; () banked
  4627  0013AA  B0D8               	btfsc	status,0,c
  4628  0013AC  EFDA  F009         	goto	u9061
  4629  0013B0  EFDC  F009         	goto	u9060
  4630  0013B4                     u9061:
  4631  0013B4  EF93  F009         	goto	l8405
  4632  0013B8                     u9060:
  4633  0013B8  EFFC  F009         	goto	l8415
  4634  0013BC                     l8411:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4638  0013BC  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  4639  0013C0  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  4640  0013C4  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  4641  0013C8  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  4642  0013CC  0E00               	movlw	0
  4643  0013CE  6E18               	movwf	___fldiv@a^0,c
  4644  0013D0  0E00               	movlw	0
  4645  0013D2  6E19               	movwf	(___fldiv@a+1)^0,c
  4646  0013D4  0E20               	movlw	32
  4647  0013D6  6E1A               	movwf	(___fldiv@a+2)^0,c
  4648  0013D8  0E41               	movlw	65
  4649  0013DA  6E1B               	movwf	(___fldiv@a+3)^0,c
  4650  0013DC  ECAB  F015         	call	___fldiv	;wreg free
  4651  0013E0  C014  F0C3         	movff	?___fldiv,efgtoa@u
  4652  0013E4  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4653  0013E8  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4654  0013EC  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4655  0013F0                     
  4656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4657  0013F0  0100               	movlb	0	; () banked
  4658  0013F2  07BF               	decf	efgtoa@e& (0+255),f,b
  4659  0013F4  A0D8               	btfss	status,0,c
  4660  0013F6  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4661  0013F8                     l8415:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4665  0013F8  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4666  0013FC  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4667  001400  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4668  001404  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4669  001408  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4670  00140C  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4671  001410  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4672  001414  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4673  001418  EC0F  F024         	call	___flge	;wreg free
  4674  00141C  0100               	movlb	0	; () banked
  4675  00141E  A0D8               	btfss	status,0,c
  4676  001420  EF14  F00A         	goto	u9071
  4677  001424  EF16  F00A         	goto	u9070
  4678  001428                     u9071:
  4679  001428  EFDE  F009         	goto	l8411
  4680  00142C                     u9070:
  4681  00142C                     l8417:
  4682                           
  4683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4684  00142C  C089  F01A         	movff	efgtoa@c,tolower@c
  4685  001430  6A1B               	clrf	(tolower@c+1)^0,c
  4686  001432  EC01  F02A         	call	_tolower	;wreg free
  4687  001436  501A               	movf	?_tolower^0,w,c
  4688  001438  0100               	movlb	0	; () banked
  4689  00143A  6FB0               	movwf	efgtoa@mode& (0+255),b
  4690  00143C                     
  4691                           ; BSR set to: 0
  4692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4693  00143C  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  4694  001440                     
  4695                           ; BSR set to: 0
  4696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4697  001440  0E67               	movlw	103
  4698  001442  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4699  001444  A4D8               	btfss	status,2,c
  4700  001446  EF27  F00A         	goto	u9081
  4701  00144A  EF29  F00A         	goto	u9080
  4702  00144E                     u9081:
  4703  00144E  EF4F  F00A         	goto	l8431
  4704  001452                     u9080:
  4705  001452                     
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4708  001452  503C               	movf	_prec^0,w,c
  4709  001454  103D               	iorwf	(_prec+1)^0,w,c
  4710  001456  A4D8               	btfss	status,2,c
  4711  001458  EF30  F00A         	goto	u9091
  4712  00145C  EF32  F00A         	goto	u9090
  4713  001460                     u9091:
  4714  001460  EF36  F00A         	goto	l8427
  4715  001464                     u9090:
  4716  001464                     
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4719  001464  0E00               	movlw	0
  4720  001466  6E3D               	movwf	(_prec+1)^0,c
  4721  001468  0E01               	movlw	1
  4722  00146A  6E3C               	movwf	_prec^0,c
  4723  00146C                     l8427:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4727  00146C  BE3D               	btfsc	(_prec+1)^0,7,c
  4728  00146E  EF43  F00A         	goto	u9100
  4729  001472  503D               	movf	(_prec+1)^0,w,c
  4730  001474  E106               	bnz	u9101
  4731  001476  043C               	decf	_prec^0,w,c
  4732  001478  B0D8               	btfsc	status,0,c
  4733  00147A  EF41  F00A         	goto	u9101
  4734  00147E  EF43  F00A         	goto	u9100
  4735  001482                     u9101:
  4736  001482  EF49  F00A         	goto	l2183
  4737  001486                     u9100:
  4738  001486                     l8429:
  4739                           
  4740                           ; BSR set to: 0
  4741  001486  0E00               	movlw	0
  4742  001488  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  4743  00148A  0E06               	movlw	6
  4744  00148C  6FAB               	movwf	efgtoa@p& (0+255),b
  4745  00148E  EF58  F00A         	goto	l8437
  4746  001492                     l2183:
  4747                           
  4748                           ; BSR set to: 0
  4749  001492  C03C  F0AB         	movff	_prec,efgtoa@p
  4750  001496  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  4751  00149A  EF58  F00A         	goto	l8437
  4752  00149E                     l8431:
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4756  00149E  BE3D               	btfsc	(_prec+1)^0,7,c
  4757  0014A0  EF54  F00A         	goto	u9111
  4758  0014A4  EF56  F00A         	goto	u9110
  4759  0014A8                     u9111:
  4760  0014A8  EF43  F00A         	goto	l8429
  4761  0014AC                     u9110:
  4762  0014AC  EF49  F00A         	goto	l2183
  4763  0014B0                     l8437:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4767  0014B0  0E67               	movlw	103
  4768  0014B2  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4769  0014B4  A4D8               	btfss	status,2,c
  4770  0014B6  EF5F  F00A         	goto	u9121
  4771  0014BA  EF61  F00A         	goto	u9120
  4772  0014BE                     u9121:
  4773  0014BE  EF90  F00A         	goto	l8447
  4774  0014C2                     u9120:
  4775  0014C2                     
  4776                           ; BSR set to: 0
  4777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4778  0014C2  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  4779  0014C4  EF6F  F00A         	goto	u9130
  4780  0014C8  0EFC               	movlw	252
  4781  0014CA  5DBF               	subwf	efgtoa@e& (0+255),w,b
  4782  0014CC  0EFF               	movlw	255
  4783  0014CE  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4784  0014D0  A0D8               	btfss	status,0,c
  4785  0014D2  EF6D  F00A         	goto	u9131
  4786  0014D6  EF6F  F00A         	goto	u9130
  4787  0014DA                     u9131:
  4788  0014DA  EF8E  F00A         	goto	l8445
  4789  0014DE                     u9130:
  4790  0014DE                     
  4791                           ; BSR set to: 0
  4792  0014DE  0EFF               	movlw	255
  4793  0014E0  6F8A               	movwf	??_efgtoa& (0+255),b
  4794  0014E2  0EFF               	movlw	255
  4795  0014E4  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4796  0014E6  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  4797  0014EA  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  4798  0014EE  518A               	movf	??_efgtoa& (0+255),w,b
  4799  0014F0  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4800  0014F2  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4801  0014F4  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4802  0014F6  51BF               	movf	efgtoa@e& (0+255),w,b
  4803  0014F8  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4804  0014FA  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4805  0014FC  0A80               	xorlw	128
  4806  0014FE  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  4807  001500  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4808  001502  0A80               	xorlw	128
  4809  001504  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4810  001506  A0D8               	btfss	status,0,c
  4811  001508  EF88  F00A         	goto	u9141
  4812  00150C  EF8A  F00A         	goto	u9140
  4813  001510                     u9141:
  4814  001510  EF8E  F00A         	goto	l8445
  4815  001514                     u9140:
  4816  001514                     
  4817                           ; BSR set to: 0
  4818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4819  001514  0E66               	movlw	102
  4820  001516  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4821                           
  4822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4823  001518  EF90  F00A         	goto	l8447
  4824  00151C                     l8445:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4828  00151C  0E65               	movlw	101
  4829  00151E  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4830  001520                     l8447:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4834  001520  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  4835  001524  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  4836  001528                     
  4837                           ; BSR set to: 0
  4838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4839  001528  0E67               	movlw	103
  4840  00152A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4841  00152C  A4D8               	btfss	status,2,c
  4842  00152E  EF9B  F00A         	goto	u9151
  4843  001532  EF9D  F00A         	goto	u9150
  4844  001536                     u9151:
  4845  001536  EFAD  F00A         	goto	l8455
  4846  00153A                     u9150:
  4847  00153A                     
  4848                           ; BSR set to: 0
  4849  00153A  0E66               	movlw	102
  4850  00153C  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4851  00153E  A4D8               	btfss	status,2,c
  4852  001540  EFA4  F00A         	goto	u9161
  4853  001544  EFA6  F00A         	goto	u9160
  4854  001548                     u9161:
  4855  001548  EFAF  F00A         	goto	l8457
  4856  00154C                     u9160:
  4857  00154C                     
  4858                           ; BSR set to: 0
  4859  00154C  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4860  00154E  EFAD  F00A         	goto	u9170
  4861  001552  EFAB  F00A         	goto	u9171
  4862  001556                     u9171:
  4863  001556  EFAF  F00A         	goto	l8457
  4864  00155A                     u9170:
  4865  00155A                     l8455:
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4869  00155A  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4870  00155C  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4871  00155E                     l8457:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4875  00155E  0E66               	movlw	102
  4876  001560  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4877  001562  A4D8               	btfss	status,2,c
  4878  001564  EFB6  F00A         	goto	u9181
  4879  001568  EFB8  F00A         	goto	u9180
  4880  00156C                     u9181:
  4881  00156C  EFD8  F00A         	goto	l8467
  4882  001570                     u9180:
  4883  001570                     
  4884                           ; BSR set to: 0
  4885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4886  001570  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4887  001572  EFBF  F00A         	goto	u9190
  4888  001576  EFBD  F00A         	goto	u9191
  4889  00157A                     u9191:
  4890  00157A  EFCB  F00A         	goto	l8463
  4891  00157E                     u9190:
  4892  00157E                     
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4895  00157E  0E00               	movlw	0
  4896  001580  6FC3               	movwf	efgtoa@u& (0+255),b
  4897  001582  0E00               	movlw	0
  4898  001584  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4899  001586  0E80               	movlw	128
  4900  001588  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4901  00158A  0E3F               	movlw	63
  4902  00158C  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4903                           
  4904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4905  00158E  0E00               	movlw	0
  4906  001590  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4907  001592  0E00               	movlw	0
  4908  001594  6FBF               	movwf	efgtoa@e& (0+255),b
  4909  001596                     l8463:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4913  001596  0E67               	movlw	103
  4914  001598  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4915  00159A  B4D8               	btfsc	status,2,c
  4916  00159C  EFD2  F00A         	goto	u9201
  4917  0015A0  EFD4  F00A         	goto	u9200
  4918  0015A4                     u9201:
  4919  0015A4  EFD8  F00A         	goto	l8467
  4920  0015A8                     u9200:
  4921  0015A8                     
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4924  0015A8  51BF               	movf	efgtoa@e& (0+255),w,b
  4925  0015AA  27A1               	addwf	efgtoa@m& (0+255),f,b
  4926  0015AC  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4927  0015AE  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4928  0015B0                     l8467:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4932  0015B0  0E00               	movlw	0
  4933  0015B2  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4934  0015B4  0E00               	movlw	0
  4935  0015B6  6FB9               	movwf	efgtoa@i& (0+255),b
  4936  0015B8                     
  4937                           ; BSR set to: 0
  4938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4939  0015B8  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  4940  0015BC  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  4941  0015C0  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  4942  0015C4  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  4943  0015C8                     
  4944                           ; BSR set to: 0
  4945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4946  0015C8  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  4947  0015CC  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  4948  0015D0  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  4949  0015D4  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  4950                           
  4951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4952  0015D8  EF69  F00B         	goto	l8481
  4953  0015DC                     l8473:
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4957  0015DC  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  4958  0015E0  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  4959  0015E4  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  4960  0015E8  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  4961  0015EC  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  4962  0015F0  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  4963  0015F4  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  4964  0015F8  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  4965  0015FC  ECAB  F015         	call	___fldiv	;wreg free
  4966  001600  C014  F02D         	movff	?___fldiv,floorf@x
  4967  001604  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  4968  001608  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  4969  00160C  C017  F030         	movff	?___fldiv+3,floorf@x+3
  4970  001610  EC50  F01B         	call	_floorf	;wreg free
  4971  001614  C02D  F0B5         	movff	?_floorf,efgtoa@l
  4972  001618  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4973  00161C  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4974  001620  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4975                           
  4976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4977  001624  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4978  001628  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4979  00162C  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4980  001630  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4981  001634  EC08  F023         	call	___fltol	;wreg free
  4982  001638  C079  F0A7         	movff	?___fltol,efgtoa@d
  4983  00163C  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4984  001640                     
  4985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4986  001640  C0B1  F079         	movff	efgtoa@h,___flsub@b
  4987  001644  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  4988  001648  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  4989  00164C  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  4990  001650  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  4991  001654  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  4992  001658  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  4993  00165C  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  4994  001660  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  4995  001664  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  4996  001668  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  4997  00166C  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  4998  001670  EC83  F013         	call	___flmul	;wreg free
  4999  001674  C02A  F07D         	movff	?___flmul,___flsub@a
  5000  001678  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5001  00167C  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5002  001680  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5003  001684  EC4D  F02B         	call	___flsub	;wreg free
  5004  001688  C079  F0B1         	movff	?___flsub,efgtoa@h
  5005  00168C  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5006  001690  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5007  001694  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5008  001698                     
  5009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5010  001698  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  5011  00169C  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  5012  0016A0  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  5013  0016A4  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  5014  0016A8  0E00               	movlw	0
  5015  0016AA  6E18               	movwf	___fldiv@a^0,c
  5016  0016AC  0E00               	movlw	0
  5017  0016AE  6E19               	movwf	(___fldiv@a+1)^0,c
  5018  0016B0  0E20               	movlw	32
  5019  0016B2  6E1A               	movwf	(___fldiv@a+2)^0,c
  5020  0016B4  0E41               	movlw	65
  5021  0016B6  6E1B               	movwf	(___fldiv@a+3)^0,c
  5022  0016B8  ECAB  F015         	call	___fldiv	;wreg free
  5023  0016BC  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5024  0016C0  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5025  0016C4  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5026  0016C8  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5027  0016CC                     
  5028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5029  0016CC  0100               	movlb	0	; () banked
  5030  0016CE  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5031  0016D0  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5032  0016D2                     l8481:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5036  0016D2  51A1               	movf	efgtoa@m& (0+255),w,b
  5037  0016D4  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5038  0016D6  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5039  0016D8  0A80               	xorlw	128
  5040  0016DA  6F8A               	movwf	??_efgtoa& (0+255),b
  5041  0016DC  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5042  0016DE  0A80               	xorlw	128
  5043  0016E0  598A               	subwfb	??_efgtoa& (0+255),w,b
  5044  0016E2  A0D8               	btfss	status,0,c
  5045  0016E4  EF76  F00B         	goto	u9211
  5046  0016E8  EF78  F00B         	goto	u9210
  5047  0016EC                     u9211:
  5048  0016EC  EFEE  F00A         	goto	l8473
  5049  0016F0                     u9210:
  5050  0016F0                     
  5051                           ; BSR set to: 0
  5052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5053  0016F0  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5054  0016F4  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5055  0016F8  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5056  0016FC  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5057  001700  0E00               	movlw	0
  5058  001702  6E2E               	movwf	___flmul@a^0,c
  5059  001704  0E00               	movlw	0
  5060  001706  6E2F               	movwf	(___flmul@a+1)^0,c
  5061  001708  0EA0               	movlw	160
  5062  00170A  6E30               	movwf	(___flmul@a+2)^0,c
  5063  00170C  0E40               	movlw	64
  5064  00170E  6E31               	movwf	(___flmul@a+3)^0,c
  5065  001710  EC83  F013         	call	___flmul	;wreg free
  5066  001714  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5067  001718  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5068  00171C  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5069  001720  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5070  001724                     
  5071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5072  001724  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5073  001728  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5074  00172C  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5075  001730  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5076  001734  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5077  001738  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5078  00173C  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5079  001740  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5080  001744  EC0F  F024         	call	___flge	;wreg free
  5081  001748  0100               	movlb	0	; () banked
  5082  00174A  B0D8               	btfsc	status,0,c
  5083  00174C  EFAA  F00B         	goto	u9221
  5084  001750  EFAC  F00B         	goto	u9220
  5085  001754                     u9221:
  5086  001754  EFB6  F00B         	goto	l8489
  5087  001758                     u9220:
  5088  001758                     
  5089                           ; BSR set to: 0
  5090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5091  001758  0E00               	movlw	0
  5092  00175A  6FB5               	movwf	efgtoa@l& (0+255),b
  5093  00175C  0E00               	movlw	0
  5094  00175E  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5095  001760  0E00               	movlw	0
  5096  001762  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5097  001764  0E00               	movlw	0
  5098  001766  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5099                           
  5100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5101  001768  EFDF  F00B         	goto	l8495
  5102  00176C                     l8489:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5106  00176C  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5107  001770  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5108  001774  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5109  001778  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5110  00177C  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5111  001780  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5112  001784  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5113  001788  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5114  00178C  ECDC  F027         	call	___fleq	;wreg free
  5115  001790  A0D8               	btfss	status,0,c
  5116  001792  EFCD  F00B         	goto	u9231
  5117  001796  EFCF  F00B         	goto	u9230
  5118  00179A                     u9231:
  5119  00179A  EFDF  F00B         	goto	l8495
  5120  00179E                     u9230:
  5121  00179E  0100               	movlb	0	; () banked
  5122  0017A0  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5123  0017A2  EFD5  F00B         	goto	u9241
  5124  0017A6  EFD7  F00B         	goto	u9240
  5125  0017AA                     u9241:
  5126  0017AA  EFDF  F00B         	goto	l8495
  5127  0017AE                     u9240:
  5128  0017AE                     
  5129                           ; BSR set to: 0
  5130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5131  0017AE  0E00               	movlw	0
  5132  0017B0  6FB5               	movwf	efgtoa@l& (0+255),b
  5133  0017B2  0E00               	movlw	0
  5134  0017B4  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5135  0017B6  0E00               	movlw	0
  5136  0017B8  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5137  0017BA  0E00               	movlw	0
  5138  0017BC  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5139  0017BE                     l8495:
  5140                           
  5141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5142  0017BE  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5143  0017C2  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5144  0017C6  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5145  0017CA  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5146  0017CE  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5147  0017D2  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5148  0017D6  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5149  0017DA  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5150  0017DE  EC22  F011         	call	___fladd	;wreg free
  5151  0017E2  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5152  0017E6  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5153  0017EA  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5154  0017EE  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5155  0017F2                     
  5156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5157  0017F2  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5158  0017F6  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5159  0017FA  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5160  0017FE  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5161  001802  0E00               	movlw	0
  5162  001804  6E2E               	movwf	___flmul@a^0,c
  5163  001806  0E00               	movlw	0
  5164  001808  6E2F               	movwf	(___flmul@a+1)^0,c
  5165  00180A  0E20               	movlw	32
  5166  00180C  6E30               	movwf	(___flmul@a+2)^0,c
  5167  00180E  0E41               	movlw	65
  5168  001810  6E31               	movwf	(___flmul@a+3)^0,c
  5169  001812  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5170  001816  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5171  00181A  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5172  00181E  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5173  001822  EC83  F013         	call	___flmul	;wreg free
  5174  001826  C02A  F071         	movff	?___flmul,___flge@ff2
  5175  00182A  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5176  00182E  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5177  001832  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5178  001836  EC0F  F024         	call	___flge	;wreg free
  5179  00183A  0100               	movlb	0	; () banked
  5180  00183C  A0D8               	btfss	status,0,c
  5181  00183E  EF23  F00C         	goto	u9251
  5182  001842  EF25  F00C         	goto	u9250
  5183  001846                     u9251:
  5184  001846  EF4D  F00C         	goto	l8507
  5185  00184A                     u9250:
  5186  00184A                     
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5189  00184A  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5190  00184C  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5191  00184E                     
  5192                           ; BSR set to: 0
  5193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5194  00184E  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5195  001852  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5196  001856  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5197  00185A  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5198  00185E  0E00               	movlw	0
  5199  001860  6E2E               	movwf	___flmul@a^0,c
  5200  001862  0E00               	movlw	0
  5201  001864  6E2F               	movwf	(___flmul@a+1)^0,c
  5202  001866  0E20               	movlw	32
  5203  001868  6E30               	movwf	(___flmul@a+2)^0,c
  5204  00186A  0E41               	movlw	65
  5205  00186C  6E31               	movwf	(___flmul@a+3)^0,c
  5206  00186E  EC83  F013         	call	___flmul	;wreg free
  5207  001872  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5208  001876  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5209  00187A  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5210  00187E  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5211  001882                     
  5212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5213  001882  0E66               	movlw	102
  5214  001884  0100               	movlb	0	; () banked
  5215  001886  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5216  001888  A4D8               	btfss	status,2,c
  5217  00188A  EF49  F00C         	goto	u9261
  5218  00188E  EF4B  F00C         	goto	u9260
  5219  001892                     u9261:
  5220  001892  EF4D  F00C         	goto	l8507
  5221  001896                     u9260:
  5222  001896                     
  5223                           ; BSR set to: 0
  5224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5225  001896  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5226  001898  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5227  00189A                     l8507:
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5231  00189A  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5232  00189E  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5233  0018A2  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5234  0018A6  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5235  0018AA                     
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5238  0018AA  0E65               	movlw	101
  5239  0018AC  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5240  0018AE  B4D8               	btfsc	status,2,c
  5241  0018B0  EF5C  F00C         	goto	u9271
  5242  0018B4  EF5E  F00C         	goto	u9270
  5243  0018B8                     u9271:
  5244  0018B8  EF64  F00C         	goto	l8513
  5245  0018BC                     u9270:
  5246  0018BC                     
  5247                           ; BSR set to: 0
  5248  0018BC  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5249  0018C0  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5250  0018C4  EF68  F00C         	goto	l2211
  5251  0018C8                     l8513:
  5252                           
  5253                           ; BSR set to: 0
  5254  0018C8  0E00               	movlw	0
  5255  0018CA  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5256  0018CC  0E00               	movlw	0
  5257  0018CE  6F9F               	movwf	efgtoa@ne& (0+255),b
  5258  0018D0                     l2211:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5262  0018D0  0E00               	movlw	0
  5263  0018D2  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5264  0018D4  0E00               	movlw	0
  5265  0018D6  6F9D               	movwf	efgtoa@pp& (0+255),b
  5266                           
  5267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5268  0018D8  0E00               	movlw	0
  5269  0018DA  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5270  0018DC  0E00               	movlw	0
  5271  0018DE  6F9B               	movwf	efgtoa@t& (0+255),b
  5272                           
  5273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5274  0018E0  0E00               	movlw	0
  5275  0018E2  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5276  0018E4  0E00               	movlw	0
  5277  0018E6  6FB9               	movwf	efgtoa@i& (0+255),b
  5278                           
  5279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5280  0018E8  EF64  F00D         	goto	l8563
  5281  0018EC                     l8515:
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5285  0018EC  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  5286  0018F0  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  5287  0018F4  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  5288  0018F8  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  5289  0018FC  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  5290  001900  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  5291  001904  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  5292  001908  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  5293  00190C  ECAB  F015         	call	___fldiv	;wreg free
  5294  001910  C014  F02D         	movff	?___fldiv,floorf@x
  5295  001914  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  5296  001918  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  5297  00191C  C017  F030         	movff	?___fldiv+3,floorf@x+3
  5298  001920  EC50  F01B         	call	_floorf	;wreg free
  5299  001924  C02D  F0B5         	movff	?_floorf,efgtoa@l
  5300  001928  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5301  00192C  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5302  001930  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5305  001934  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5306  001938  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5307  00193C  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5308  001940  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5309  001944  EC08  F023         	call	___fltol	;wreg free
  5310  001948  C079  F0A7         	movff	?___fltol,efgtoa@d
  5311  00194C  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5312  001950                     
  5313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5314  001950  B83E               	btfsc	_flags^0,4,c
  5315  001952  EFAD  F00C         	goto	u9281
  5316  001956  EFAF  F00C         	goto	u9280
  5317  00195A                     u9281:
  5318  00195A  EFCD  F00C         	goto	l8527
  5319  00195E                     u9280:
  5320  00195E  0100               	movlb	0	; () banked
  5321  001960  51A7               	movf	efgtoa@d& (0+255),w,b
  5322  001962  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5323  001964  A4D8               	btfss	status,2,c
  5324  001966  EFB7  F00C         	goto	u9291
  5325  00196A  EFB9  F00C         	goto	u9290
  5326  00196E                     u9291:
  5327  00196E  EFCD  F00C         	goto	l8527
  5328  001972                     u9290:
  5329  001972                     
  5330                           ; BSR set to: 0
  5331  001972  0E67               	movlw	103
  5332  001974  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5333  001976  A4D8               	btfss	status,2,c
  5334  001978  EFC0  F00C         	goto	u9301
  5335  00197C  EFC2  F00C         	goto	u9300
  5336  001980                     u9301:
  5337  001980  EFCD  F00C         	goto	l8527
  5338  001984                     u9300:
  5339  001984                     
  5340                           ; BSR set to: 0
  5341  001984  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5342  001986  EFC9  F00C         	goto	u9310
  5343  00198A  EFC7  F00C         	goto	u9311
  5344  00198E                     u9311:
  5345  00198E  EFCD  F00C         	goto	l8527
  5346  001992                     u9310:
  5347  001992                     
  5348                           ; BSR set to: 0
  5349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5350  001992  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5351  001994  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5352                           
  5353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5354  001996  EF18  F00D         	goto	l8555
  5355  00199A                     l8527:
  5356                           
  5357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5358  00199A  0100               	movlb	0	; () banked
  5359  00199C  519D               	movf	efgtoa@pp& (0+255),w,b
  5360  00199E  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5361  0019A0  A4D8               	btfss	status,2,c
  5362  0019A2  EFD5  F00C         	goto	u9321
  5363  0019A6  EFD7  F00C         	goto	u9320
  5364  0019AA                     u9321:
  5365  0019AA  EF01  F00D         	goto	l8547
  5366  0019AE                     u9320:
  5367  0019AE                     
  5368                           ; BSR set to: 0
  5369  0019AE  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5370  0019B0  EFDE  F00C         	goto	u9330
  5371  0019B4  EFDC  F00C         	goto	u9331
  5372  0019B8                     u9331:
  5373  0019B8  EF01  F00D         	goto	l8547
  5374  0019BC                     u9330:
  5375  0019BC                     
  5376                           ; BSR set to: 0
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5378  0019BC  0E34               	movlw	low _dbuf
  5379  0019BE  25C1               	addwf	efgtoa@n& (0+255),w,b
  5380  0019C0  6ED9               	movwf	fsr2l,c
  5381  0019C2  0E01               	movlw	high _dbuf
  5382  0019C4  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5383  0019C6  6EDA               	movwf	fsr2h,c
  5384  0019C8  0E2E               	movlw	46
  5385  0019CA  6EDF               	movwf	indf2,c
  5386  0019CC                     
  5387                           ; BSR set to: 0
  5388  0019CC  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5389  0019CE  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5390  0019D0                     
  5391                           ; BSR set to: 0
  5392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5393  0019D0  07AD               	decf	efgtoa@w& (0+255),f,b
  5394  0019D2  A0D8               	btfss	status,0,c
  5395  0019D4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5396  0019D6                     
  5397                           ; BSR set to: 0
  5398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5399  0019D6  0E00               	movlw	0
  5400  0019D8  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5401  0019DA  0E01               	movlw	1
  5402  0019DC  6F9D               	movwf	efgtoa@pp& (0+255),b
  5403  0019DE  EF01  F00D         	goto	l8547
  5404  0019E2                     l8539:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5408  0019E2  0E34               	movlw	low _dbuf
  5409  0019E4  25C1               	addwf	efgtoa@n& (0+255),w,b
  5410  0019E6  6ED9               	movwf	fsr2l,c
  5411  0019E8  0E01               	movlw	high _dbuf
  5412  0019EA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5413  0019EC  6EDA               	movwf	fsr2h,c
  5414  0019EE  0E30               	movlw	48
  5415  0019F0  6EDF               	movwf	indf2,c
  5416  0019F2                     
  5417                           ; BSR set to: 0
  5418  0019F2  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5419  0019F4  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5420  0019F6                     
  5421                           ; BSR set to: 0
  5422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5423  0019F6  07AD               	decf	efgtoa@w& (0+255),f,b
  5424  0019F8  A0D8               	btfss	status,0,c
  5425  0019FA  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5426  0019FC                     
  5427                           ; BSR set to: 0
  5428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5429  0019FC  079B               	decf	efgtoa@t& (0+255),f,b
  5430  0019FE  A0D8               	btfss	status,0,c
  5431  001A00  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5432  001A02                     l8547:
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5436  001A02  519B               	movf	efgtoa@t& (0+255),w,b
  5437  001A04  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5438  001A06  A4D8               	btfss	status,2,c
  5439  001A08  EF08  F00D         	goto	u9341
  5440  001A0C  EF0A  F00D         	goto	u9340
  5441  001A10                     u9341:
  5442  001A10  EFF1  F00C         	goto	l8539
  5443  001A14                     u9340:
  5444  001A14                     
  5445                           ; BSR set to: 0
  5446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5447  001A14  0E34               	movlw	low _dbuf
  5448  001A16  25C1               	addwf	efgtoa@n& (0+255),w,b
  5449  001A18  6ED9               	movwf	fsr2l,c
  5450  001A1A  0E01               	movlw	high _dbuf
  5451  001A1C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5452  001A1E  6EDA               	movwf	fsr2h,c
  5453  001A20  51A7               	movf	efgtoa@d& (0+255),w,b
  5454  001A22  0F30               	addlw	48
  5455  001A24  6EDF               	movwf	indf2,c
  5456  001A26                     
  5457                           ; BSR set to: 0
  5458  001A26  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5459  001A28  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5460  001A2A                     
  5461                           ; BSR set to: 0
  5462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5463  001A2A  07AD               	decf	efgtoa@w& (0+255),f,b
  5464  001A2C  A0D8               	btfss	status,0,c
  5465  001A2E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5466  001A30                     l8555:
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5470  001A30  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5471  001A34  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5472  001A38  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5473  001A3C  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5474  001A40  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5475  001A44  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5476  001A48  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5477  001A4C  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5478  001A50  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5479  001A54  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5480  001A58  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5481  001A5C  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5482  001A60  EC83  F013         	call	___flmul	;wreg free
  5483  001A64  C02A  F07D         	movff	?___flmul,___flsub@a
  5484  001A68  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5485  001A6C  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5486  001A70  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5487  001A74  EC4D  F02B         	call	___flsub	;wreg free
  5488  001A78  C079  F0B1         	movff	?___flsub,efgtoa@h
  5489  001A7C  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5490  001A80  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5491  001A84  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5492  001A88                     
  5493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5494  001A88  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  5495  001A8C  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  5496  001A90  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  5497  001A94  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  5498  001A98  0E00               	movlw	0
  5499  001A9A  6E18               	movwf	___fldiv@a^0,c
  5500  001A9C  0E00               	movlw	0
  5501  001A9E  6E19               	movwf	(___fldiv@a+1)^0,c
  5502  001AA0  0E20               	movlw	32
  5503  001AA2  6E1A               	movwf	(___fldiv@a+2)^0,c
  5504  001AA4  0E41               	movlw	65
  5505  001AA6  6E1B               	movwf	(___fldiv@a+3)^0,c
  5506  001AA8  ECAB  F015         	call	___fldiv	;wreg free
  5507  001AAC  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5508  001AB0  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5509  001AB4  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5510  001AB8  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5511  001ABC                     
  5512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5513  001ABC  0100               	movlb	0	; () banked
  5514  001ABE  079F               	decf	efgtoa@ne& (0+255),f,b
  5515  001AC0  A0D8               	btfss	status,0,c
  5516  001AC2  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5517  001AC4                     
  5518                           ; BSR set to: 0
  5519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5520  001AC4  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5521  001AC6  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5522  001AC8                     l8563:
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5526  001AC8  51A1               	movf	efgtoa@m& (0+255),w,b
  5527  001ACA  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5528  001ACC  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5529  001ACE  0A80               	xorlw	128
  5530  001AD0  6F8A               	movwf	??_efgtoa& (0+255),b
  5531  001AD2  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5532  001AD4  0A80               	xorlw	128
  5533  001AD6  598A               	subwfb	??_efgtoa& (0+255),w,b
  5534  001AD8  B0D8               	btfsc	status,0,c
  5535  001ADA  EF71  F00D         	goto	u9351
  5536  001ADE  EF73  F00D         	goto	u9350
  5537  001AE2                     u9351:
  5538  001AE2  EF81  F00D         	goto	l8567
  5539  001AE6                     u9350:
  5540  001AE6                     
  5541                           ; BSR set to: 0
  5542  001AE6  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5543  001AE8  EF7F  F00D         	goto	u9361
  5544  001AEC  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5545  001AEE  E109               	bnz	u9360
  5546  001AF0  0E4B               	movlw	75
  5547  001AF2  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5548  001AF4  A0D8               	btfss	status,0,c
  5549  001AF6  EF7F  F00D         	goto	u9361
  5550  001AFA  EF81  F00D         	goto	u9360
  5551  001AFE                     u9361:
  5552  001AFE  EF76  F00C         	goto	l8515
  5553  001B02                     u9360:
  5554  001B02                     l8567:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5558  001B02  519D               	movf	efgtoa@pp& (0+255),w,b
  5559  001B04  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5560  001B06  A4D8               	btfss	status,2,c
  5561  001B08  EF88  F00D         	goto	u9371
  5562  001B0C  EF8A  F00D         	goto	u9370
  5563  001B10                     u9371:
  5564  001B10  EF9B  F00D         	goto	l8575
  5565  001B14                     u9370:
  5566  001B14                     
  5567                           ; BSR set to: 0
  5568  001B14  A83E               	btfss	_flags^0,4,c
  5569  001B16  EF8F  F00D         	goto	u9381
  5570  001B1A  EF91  F00D         	goto	u9380
  5571  001B1E                     u9381:
  5572  001B1E  EF9B  F00D         	goto	l8575
  5573  001B22                     u9380:
  5574  001B22                     
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5577  001B22  0E34               	movlw	low _dbuf
  5578  001B24  25C1               	addwf	efgtoa@n& (0+255),w,b
  5579  001B26  6ED9               	movwf	fsr2l,c
  5580  001B28  0E01               	movlw	high _dbuf
  5581  001B2A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5582  001B2C  6EDA               	movwf	fsr2h,c
  5583  001B2E  0E2E               	movlw	46
  5584  001B30  6EDF               	movwf	indf2,c
  5585  001B32                     
  5586                           ; BSR set to: 0
  5587  001B32  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5588  001B34  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5589  001B36                     l8575:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5593  001B36  0E34               	movlw	low _dbuf
  5594  001B38  25C1               	addwf	efgtoa@n& (0+255),w,b
  5595  001B3A  6ED9               	movwf	fsr2l,c
  5596  001B3C  0E01               	movlw	high _dbuf
  5597  001B3E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5598  001B40  6EDA               	movwf	fsr2h,c
  5599  001B42  0E00               	movlw	0
  5600  001B44  6EDF               	movwf	indf2,c
  5601  001B46                     
  5602                           ; BSR set to: 0
  5603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5604  001B46  0E65               	movlw	101
  5605  001B48  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5606  001B4A  A4D8               	btfss	status,2,c
  5607  001B4C  EFAA  F00D         	goto	u9391
  5608  001B50  EFAC  F00D         	goto	u9390
  5609  001B54                     u9391:
  5610  001B54  EF7E  F00E         	goto	l8637
  5611  001B58                     u9390:
  5612  001B58                     
  5613                           ; BSR set to: 0
  5614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5615  001B58  0E00               	movlw	0
  5616  001B5A  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5617  001B5C  0E4F               	movlw	79
  5618  001B5E  6FB9               	movwf	efgtoa@i& (0+255),b
  5619  001B60                     
  5620                           ; BSR set to: 0
  5621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5622  001B60  0E34               	movlw	low _dbuf
  5623  001B62  25B9               	addwf	efgtoa@i& (0+255),w,b
  5624  001B64  6ED9               	movwf	fsr2l,c
  5625  001B66  0E01               	movlw	high _dbuf
  5626  001B68  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5627  001B6A  6EDA               	movwf	fsr2h,c
  5628  001B6C  0E00               	movlw	0
  5629  001B6E  6EDF               	movwf	indf2,c
  5630  001B70                     
  5631                           ; BSR set to: 0
  5632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5633  001B70  0E00               	movlw	0
  5634  001B72  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5635  001B74  0E00               	movlw	0
  5636  001B76  6FA9               	movwf	efgtoa@sign& (0+255),b
  5637  001B78                     
  5638                           ; BSR set to: 0
  5639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5640  001B78  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5641  001B7A  EFC3  F00D         	goto	u9400
  5642  001B7E  EFC1  F00D         	goto	u9401
  5643  001B82                     u9401:
  5644  001B82  EFCB  F00D         	goto	l8591
  5645  001B86                     u9400:
  5646  001B86                     
  5647                           ; BSR set to: 0
  5648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5649  001B86  0E00               	movlw	0
  5650  001B88  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5651  001B8A  0E01               	movlw	1
  5652  001B8C  6FA9               	movwf	efgtoa@sign& (0+255),b
  5653  001B8E                     
  5654                           ; BSR set to: 0
  5655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5656  001B8E  6DBF               	negf	efgtoa@e& (0+255),b
  5657  001B90  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5658  001B92  B0D8               	btfsc	status,0,c
  5659  001B94  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5660  001B96                     l8591:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5664  001B96  0E00               	movlw	0
  5665  001B98  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5666  001B9A  0E02               	movlw	2
  5667  001B9C  6FAB               	movwf	efgtoa@p& (0+255),b
  5668                           
  5669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5670  001B9E  EFFC  F00D         	goto	l8603
  5671  001BA2                     l8593:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5675  001BA2  07B9               	decf	efgtoa@i& (0+255),f,b
  5676  001BA4  A0D8               	btfss	status,0,c
  5677  001BA6  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5678  001BA8                     
  5679                           ; BSR set to: 0
  5680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5681  001BA8  0E34               	movlw	low _dbuf
  5682  001BAA  25B9               	addwf	efgtoa@i& (0+255),w,b
  5683  001BAC  6ED9               	movwf	fsr2l,c
  5684  001BAE  0E01               	movlw	high _dbuf
  5685  001BB0  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5686  001BB2  6EDA               	movwf	fsr2h,c
  5687  001BB4  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5688  001BB8  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5689  001BBC  0E00               	movlw	0
  5690  001BBE  6E17               	movwf	(___awmod@divisor+1)^0,c
  5691  001BC0  0E0A               	movlw	10
  5692  001BC2  6E16               	movwf	___awmod@divisor^0,c
  5693  001BC4  EC84  F027         	call	___awmod	;wreg free
  5694  001BC8  5014               	movf	?___awmod^0,w,c
  5695  001BCA  0F30               	addlw	48
  5696  001BCC  6EDF               	movwf	indf2,c
  5697  001BCE                     
  5698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5699  001BCE  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  5700  001BD2  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  5701  001BD6  0E00               	movlw	0
  5702  001BD8  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5703  001BDA  0E0A               	movlw	10
  5704  001BDC  6E16               	movwf	___awdiv@divisor^0,c
  5705  001BDE  EC61  F026         	call	___awdiv	;wreg free
  5706  001BE2  C014  F0BF         	movff	?___awdiv,efgtoa@e
  5707  001BE6  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  5708  001BEA                     
  5709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5710  001BEA  0100               	movlb	0	; () banked
  5711  001BEC  07AB               	decf	efgtoa@p& (0+255),f,b
  5712  001BEE  A0D8               	btfss	status,0,c
  5713  001BF0  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  5714  001BF2                     
  5715                           ; BSR set to: 0
  5716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5717  001BF2  07AD               	decf	efgtoa@w& (0+255),f,b
  5718  001BF4  A0D8               	btfss	status,0,c
  5719  001BF6  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5720  001BF8                     l8603:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5724  001BF8  51BF               	movf	efgtoa@e& (0+255),w,b
  5725  001BFA  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5726  001BFC  A4D8               	btfss	status,2,c
  5727  001BFE  EF03  F00E         	goto	u9411
  5728  001C02  EF05  F00E         	goto	u9410
  5729  001C06                     u9411:
  5730  001C06  EFD1  F00D         	goto	l8593
  5731  001C0A                     u9410:
  5732  001C0A                     
  5733                           ; BSR set to: 0
  5734  001C0A  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5735  001C0C  EF12  F00E         	goto	u9420
  5736  001C10  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  5737  001C12  E106               	bnz	u9421
  5738  001C14  05AB               	decf	efgtoa@p& (0+255),w,b
  5739  001C16  B0D8               	btfsc	status,0,c
  5740  001C18  EF10  F00E         	goto	u9421
  5741  001C1C  EF12  F00E         	goto	u9420
  5742  001C20                     u9421:
  5743  001C20  EFD1  F00D         	goto	l8593
  5744  001C24                     u9420:
  5745  001C24                     
  5746                           ; BSR set to: 0
  5747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5748  001C24  07B9               	decf	efgtoa@i& (0+255),f,b
  5749  001C26  A0D8               	btfss	status,0,c
  5750  001C28  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5751  001C2A                     
  5752                           ; BSR set to: 0
  5753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5754  001C2A  51A9               	movf	efgtoa@sign& (0+255),w,b
  5755  001C2C  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5756  001C2E  A4D8               	btfss	status,2,c
  5757  001C30  EF1C  F00E         	goto	u9431
  5758  001C34  EF1E  F00E         	goto	u9430
  5759  001C38                     u9431:
  5760  001C38  EF24  F00E         	goto	l8613
  5761  001C3C                     u9430:
  5762  001C3C                     
  5763                           ; BSR set to: 0
  5764  001C3C  0E00               	movlw	0
  5765  001C3E  6F96               	movwf	(_efgtoa$3563+1)& (0+255),b
  5766  001C40  0E2B               	movlw	43
  5767  001C42  6F95               	movwf	_efgtoa$3563& (0+255),b
  5768  001C44  EF28  F00E         	goto	l8615
  5769  001C48                     l8613:
  5770                           
  5771                           ; BSR set to: 0
  5772  001C48  0E00               	movlw	0
  5773  001C4A  6F96               	movwf	(_efgtoa$3563+1)& (0+255),b
  5774  001C4C  0E2D               	movlw	45
  5775  001C4E  6F95               	movwf	_efgtoa$3563& (0+255),b
  5776  001C50                     l8615:
  5777                           
  5778                           ; BSR set to: 0
  5779  001C50  0E34               	movlw	low _dbuf
  5780  001C52  25B9               	addwf	efgtoa@i& (0+255),w,b
  5781  001C54  6ED9               	movwf	fsr2l,c
  5782  001C56  0E01               	movlw	high _dbuf
  5783  001C58  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5784  001C5A  6EDA               	movwf	fsr2h,c
  5785  001C5C  0060  F257  FFDF   	movff	_efgtoa$3563,indf2
  5786  001C62                     
  5787                           ; BSR set to: 0
  5788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5789  001C62  07AD               	decf	efgtoa@w& (0+255),f,b
  5790  001C64  A0D8               	btfss	status,0,c
  5791  001C66  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5792  001C68                     
  5793                           ; BSR set to: 0
  5794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5795  001C68  07B9               	decf	efgtoa@i& (0+255),f,b
  5796  001C6A  A0D8               	btfss	status,0,c
  5797  001C6C  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5798  001C6E                     
  5799                           ; BSR set to: 0
  5800  001C6E  0EBF               	movlw	191
  5801  001C70  6F8A               	movwf	??_efgtoa& (0+255),b
  5802  001C72  0EFF               	movlw	255
  5803  001C74  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5804  001C76  5189               	movf	efgtoa@c& (0+255),w,b
  5805  001C78  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5806  001C7A  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5807  001C7C  518A               	movf	??_efgtoa& (0+255),w,b
  5808  001C7E  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5809  001C80  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5810  001C82  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5811  001C84  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5812  001C86  E10A               	bnz	u9440
  5813  001C88  0E1A               	movlw	26
  5814  001C8A  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5815  001C8C  A0D8               	btfss	status,0,c
  5816  001C8E  EF4B  F00E         	goto	u9441
  5817  001C92  EF4E  F00E         	goto	u9440
  5818  001C96                     u9441:
  5819  001C96  0E01               	movlw	1
  5820  001C98  EF4F  F00E         	goto	u9450
  5821  001C9C                     u9440:
  5822  001C9C  0E00               	movlw	0
  5823  001C9E                     u9450:
  5824  001C9E  6F99               	movwf	_efgtoa$3565& (0+255),b
  5825  001CA0  6B9A               	clrf	(_efgtoa$3565+1)& (0+255),b
  5826  001CA2                     
  5827                           ; BSR set to: 0
  5828  001CA2  5199               	movf	_efgtoa$3565& (0+255),w,b
  5829  001CA4  119A               	iorwf	(_efgtoa$3565+1)& (0+255),w,b
  5830  001CA6  A4D8               	btfss	status,2,c
  5831  001CA8  EF58  F00E         	goto	u9461
  5832  001CAC  EF5A  F00E         	goto	u9460
  5833  001CB0                     u9461:
  5834  001CB0  EF60  F00E         	goto	l8629
  5835  001CB4                     u9460:
  5836  001CB4                     
  5837                           ; BSR set to: 0
  5838  001CB4  0E00               	movlw	0
  5839  001CB6  6F98               	movwf	(_efgtoa$3564+1)& (0+255),b
  5840  001CB8  0E65               	movlw	101
  5841  001CBA  6F97               	movwf	_efgtoa$3564& (0+255),b
  5842  001CBC  EF64  F00E         	goto	l8631
  5843  001CC0                     l8629:
  5844                           
  5845                           ; BSR set to: 0
  5846  001CC0  0E00               	movlw	0
  5847  001CC2  6F98               	movwf	(_efgtoa$3564+1)& (0+255),b
  5848  001CC4  0E45               	movlw	69
  5849  001CC6  6F97               	movwf	_efgtoa$3564& (0+255),b
  5850  001CC8                     l8631:
  5851                           
  5852                           ; BSR set to: 0
  5853  001CC8  0E34               	movlw	low _dbuf
  5854  001CCA  25B9               	addwf	efgtoa@i& (0+255),w,b
  5855  001CCC  6ED9               	movwf	fsr2l,c
  5856  001CCE  0E01               	movlw	high _dbuf
  5857  001CD0  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5858  001CD2  6EDA               	movwf	fsr2h,c
  5859  001CD4  0060  F25F  FFDF   	movff	_efgtoa$3564,indf2
  5860  001CDA                     
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5863  001CDA  07AD               	decf	efgtoa@w& (0+255),f,b
  5864  001CDC  A0D8               	btfss	status,0,c
  5865  001CDE  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5866  001CE0                     
  5867                           ; BSR set to: 0
  5868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5869  001CE0  0E34               	movlw	low _dbuf
  5870  001CE2  25C1               	addwf	efgtoa@n& (0+255),w,b
  5871  001CE4  6E14               	movwf	strcpy@dest^0,c
  5872  001CE6  0E01               	movlw	high _dbuf
  5873  001CE8  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5874  001CEA  6E15               	movwf	(strcpy@dest+1)^0,c
  5875  001CEC  0E34               	movlw	low _dbuf
  5876  001CEE  25B9               	addwf	efgtoa@i& (0+255),w,b
  5877  001CF0  6E16               	movwf	strcpy@src^0,c
  5878  001CF2  0E01               	movlw	high _dbuf
  5879  001CF4  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5880  001CF6  6E17               	movwf	(strcpy@src+1)^0,c
  5881  001CF8  EC99  F029         	call	_strcpy	;wreg free
  5882  001CFC                     l8637:
  5883                           
  5884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5885  001CFC  C083  F026         	movff	efgtoa@fp,pad@fp
  5886  001D00  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5887  001D04  0E34               	movlw	low _dbuf
  5888  001D06  6E28               	movwf	pad@buf^0,c
  5889  001D08  0E01               	movlw	high _dbuf
  5890  001D0A  6E29               	movwf	(pad@buf+1)^0,c
  5891  001D0C  C0AD  F02A         	movff	efgtoa@w,pad@p
  5892  001D10  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5893  001D14  ECC3  F026         	call	_pad	;wreg free
  5894  001D18  C026  F083         	movff	?_pad,?_efgtoa
  5895  001D1C  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5896  001D20                     l2165:
  5897  001D20  0012               	return		;funcret
  5898  001D22                     __end_of_efgtoa:
  5899                           	callstack 0
  5900                           
  5901 ;; *************** function _tolower *****************
  5902 ;; Defined at:
  5903 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  c               2   25[COMRAM] int 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  2   25[COMRAM] int 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;Total ram usage:        8 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 9
  5924 ;; This function calls:
  5925 ;;		_isupper
  5926 ;; This function is called by:
  5927 ;;		_efgtoa
  5928 ;;		_vfpfcnvrt
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text11
  5933  005402                     __ptext11:
  5934                           	callstack 0
  5935  005402                     _tolower:
  5936                           	callstack 16
  5937  005402  0EBF               	movlw	191
  5938  005404  6E1C               	movwf	??_tolower^0,c
  5939  005406  0EFF               	movlw	255
  5940  005408  6E1D               	movwf	(??_tolower+1)^0,c
  5941  00540A  C01A  F01E         	movff	tolower@c,??_tolower+2
  5942  00540E  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  5943  005412  501C               	movf	??_tolower^0,w,c
  5944  005414  261E               	addwf	(??_tolower+2)^0,f,c
  5945  005416  501D               	movf	(??_tolower+1)^0,w,c
  5946  005418  221F               	addwfc	(??_tolower+3)^0,f,c
  5947  00541A  501F               	movf	(??_tolower+3)^0,w,c
  5948  00541C  E10A               	bnz	u8650
  5949  00541E  0E1A               	movlw	26
  5950  005420  5C1E               	subwf	(??_tolower+2)^0,w,c
  5951  005422  A0D8               	btfss	status,0,c
  5952  005424  EF16  F02A         	goto	u8651
  5953  005428  EF19  F02A         	goto	u8650
  5954  00542C                     u8651:
  5955  00542C  0E01               	movlw	1
  5956  00542E  EF1A  F02A         	goto	u8660
  5957  005432                     u8650:
  5958  005432  0E00               	movlw	0
  5959  005434                     u8660:
  5960  005434  6E20               	movwf	_tolower$3676^0,c
  5961  005436  6A21               	clrf	(_tolower$3676+1)^0,c
  5962  005438  5020               	movf	_tolower$3676^0,w,c
  5963  00543A  1021               	iorwf	(_tolower$3676+1)^0,w,c
  5964  00543C  B4D8               	btfsc	status,2,c
  5965  00543E  EF23  F02A         	goto	u8671
  5966  005442  EF25  F02A         	goto	u8670
  5967  005446                     u8671:
  5968  005446  EF2C  F02A         	goto	l2347
  5969  00544A                     u8670:
  5970  00544A  0E20               	movlw	32
  5971  00544C  101A               	iorwf	tolower@c^0,w,c
  5972  00544E  6E1A               	movwf	?_tolower^0,c
  5973  005450  501B               	movf	(tolower@c+1)^0,w,c
  5974  005452  6E1B               	movwf	(?_tolower+1)^0,c
  5975  005454  EF30  F02A         	goto	l2352
  5976  005458                     l2347:
  5977  005458  C01A  F01A         	movff	tolower@c,?_tolower
  5978  00545C  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5979  005460                     l2352:
  5980  005460  0012               	return		;funcret
  5981  005462                     __end_of_tolower:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _isupper *****************
  5985 ;; Defined at:
  5986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  c               2   19[COMRAM] int 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  2   19[COMRAM] int 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;Total ram usage:        6 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 8
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_efgtoa
  6011 ;;		_vfpfcnvrt
  6012 ;;		_tolower
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text12
  6017  00585A                     __ptext12:
  6018                           	callstack 0
  6019  00585A                     _isupper:
  6020                           	callstack 16
  6021  00585A  0EBF               	movlw	191
  6022  00585C  6E16               	movwf	??_isupper^0,c
  6023  00585E  0EFF               	movlw	255
  6024  005860  6E17               	movwf	(??_isupper+1)^0,c
  6025  005862  C014  F018         	movff	isupper@c,??_isupper+2
  6026  005866  C015  F019         	movff	isupper@c+1,??_isupper+3
  6027  00586A  5016               	movf	??_isupper^0,w,c
  6028  00586C  2618               	addwf	(??_isupper+2)^0,f,c
  6029  00586E  5017               	movf	(??_isupper+1)^0,w,c
  6030  005870  2219               	addwfc	(??_isupper+3)^0,f,c
  6031  005872  5019               	movf	(??_isupper+3)^0,w,c
  6032  005874  E10A               	bnz	u7660
  6033  005876  0E1A               	movlw	26
  6034  005878  5C18               	subwf	(??_isupper+2)^0,w,c
  6035  00587A  A0D8               	btfss	status,0,c
  6036  00587C  EF42  F02C         	goto	u7661
  6037  005880  EF45  F02C         	goto	u7660
  6038  005884                     u7661:
  6039  005884  0E01               	movlw	1
  6040  005886  EF46  F02C         	goto	u7670
  6041  00588A                     u7660:
  6042  00588A  0E00               	movlw	0
  6043  00588C                     u7670:
  6044  00588C  6E14               	movwf	?_isupper^0,c
  6045  00588E  6A15               	clrf	(?_isupper+1)^0,c
  6046  005890  0012               	return		;funcret
  6047  005892                     __end_of_isupper:
  6048                           	callstack 0
  6049                           
  6050 ;; *************** function _strcpy *****************
  6051 ;; Defined at:
  6052 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6055 ;;		 -> dbuf(80), 
  6056 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6057 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6058 ;;		 -> dbuf(80), 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  d               2   27[COMRAM] PTR unsigned char 
  6061 ;;		 -> dbuf(80), 
  6062 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6063 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6064 ;;		 -> dbuf(80), 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  2   19[COMRAM] PTR unsigned char 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;Total ram usage:       10 bytes
  6079 ;; Hardware stack levels used: 1
  6080 ;; Hardware stack levels required when called: 8
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_efgtoa
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text13
  6089  005332                     __ptext13:
  6090                           	callstack 0
  6091  005332                     _strcpy:
  6092                           	callstack 16
  6093  005332  C016  F01A         	movff	strcpy@src,strcpy@s
  6094  005336  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6095  00533A  C014  F01C         	movff	strcpy@dest,strcpy@d
  6096  00533E  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6097  005342                     l8231:
  6098  005342  501A               	movf	strcpy@s^0,w,c
  6099  005344  6E18               	movwf	??_strcpy^0,c
  6100  005346  501B               	movf	(strcpy@s+1)^0,w,c
  6101  005348  6E19               	movwf	(??_strcpy+1)^0,c
  6102  00534A  4A1A               	infsnz	strcpy@s^0,f,c
  6103  00534C  2A1B               	incf	(strcpy@s+1)^0,f,c
  6104  00534E  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6105  005354  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6106  00535A  0E00               	movlw	low (__smallconst shr (0+16))
  6107  00535C  6EF8               	movwf	tblptru,c
  6108  00535E  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6109  005364  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6110  00536A  4A1C               	infsnz	strcpy@d^0,f,c
  6111  00536C  2A1D               	incf	(strcpy@d+1)^0,f,c
  6112  00536E  0E0F               	movlw	(high __ramtop+-1)
  6113  005370  64F7               	cpfsgt	tblptrh,c
  6114  005372  D003               	bra	u8637
  6115  005374  0008               	tblrd		*
  6116  005376  50F5               	movf	tablat,w,c
  6117  005378  D007               	bra	u8630
  6118  00537A                     u8637:
  6119  00537A  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6120  005380  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6121  005386  50E7               	movf	indf1,w,c
  6122  005388                     u8630:
  6123  005388  6EDF               	movwf	indf2,c
  6124  00538A  50DF               	movf	indf2,w,c
  6125  00538C  A4D8               	btfss	status,2,c
  6126  00538E  EFCB  F029         	goto	u8641
  6127  005392  EFCD  F029         	goto	u8640
  6128  005396                     u8641:
  6129  005396  EFA1  F029         	goto	l8231
  6130  00539A                     u8640:
  6131  00539A  0012               	return		;funcret
  6132  00539C                     __end_of_strcpy:
  6133                           	callstack 0
  6134                           
  6135 ;; *************** function _floorf *****************
  6136 ;; Defined at:
  6137 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  x               4   44[COMRAM] float 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  u               4    6[BANK0 ] struct .
  6142 ;;  m               4    0[BANK0 ] unsigned long 
  6143 ;;  e               2    4[BANK0 ] int 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  4   44[COMRAM] float 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;Total ram usage:       20 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; Hardware stack levels required when called: 8
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_efgtoa
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text14
  6168  0036A0                     __ptext14:
  6169                           	callstack 0
  6170  0036A0                     _floorf:
  6171                           	callstack 16
  6172  0036A0  C118  F066         	movff	floorf@F527,floorf@u
  6173  0036A4  C119  F067         	movff	floorf@F527+1,floorf@u+1
  6174  0036A8  C11A  F068         	movff	floorf@F527+2,floorf@u+2
  6175  0036AC  C11B  F069         	movff	floorf@F527+3,floorf@u+3
  6176  0036B0  C02D  F066         	movff	floorf@x,floorf@u
  6177  0036B4  C02E  F067         	movff	floorf@x+1,floorf@u+1
  6178  0036B8  C02F  F068         	movff	floorf@x+2,floorf@u+2
  6179  0036BC  C030  F069         	movff	floorf@x+3,floorf@u+3
  6180  0036C0  0E81               	movlw	129
  6181  0036C2  6E31               	movwf	??_floorf^0,c
  6182  0036C4  0EFF               	movlw	255
  6183  0036C6  6E32               	movwf	(??_floorf+1)^0,c
  6184  0036C8  C066  F033         	movff	floorf@u,??_floorf+2
  6185  0036CC  C067  F034         	movff	floorf@u+1,??_floorf+3
  6186  0036D0  C068  F035         	movff	floorf@u+2,??_floorf+4
  6187  0036D4  C069  F036         	movff	floorf@u+3,??_floorf+5
  6188  0036D8  0E18               	movlw	24
  6189  0036DA  EF74  F01B         	goto	u8680
  6190  0036DE                     u8685:
  6191  0036DE  90D8               	bcf	status,0,c
  6192  0036E0  3236               	rrcf	(??_floorf+5)^0,f,c
  6193  0036E2  3235               	rrcf	(??_floorf+4)^0,f,c
  6194  0036E4  3234               	rrcf	(??_floorf+3)^0,f,c
  6195  0036E6  3233               	rrcf	(??_floorf+2)^0,f,c
  6196  0036E8                     u8680:
  6197  0036E8  2EE8               	decfsz	wreg,f,c
  6198  0036EA  EF6F  F01B         	goto	u8685
  6199  0036EE  5033               	movf	(??_floorf+2)^0,w,c
  6200  0036F0  2431               	addwf	??_floorf^0,w,c
  6201  0036F2  0100               	movlb	0	; () banked
  6202  0036F4  6F64               	movwf	floorf@e& (0+255),b
  6203  0036F6  0E00               	movlw	0
  6204  0036F8  2032               	addwfc	(??_floorf+1)^0,w,c
  6205  0036FA  6F65               	movwf	(floorf@e+1)& (0+255),b
  6206  0036FC  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6207  0036FE  EF8A  F01B         	goto	u8691
  6208  003702  5165               	movf	(floorf@e+1)& (0+255),w,b
  6209  003704  E109               	bnz	u8690
  6210  003706  0E17               	movlw	23
  6211  003708  5D64               	subwf	floorf@e& (0+255),w,b
  6212  00370A  A0D8               	btfss	status,0,c
  6213  00370C  EF8A  F01B         	goto	u8691
  6214  003710  EF8C  F01B         	goto	u8690
  6215  003714                     u8691:
  6216  003714  EF96  F01B         	goto	l8249
  6217  003718                     u8690:
  6218  003718                     l8247:
  6219                           
  6220                           ; BSR set to: 0
  6221  003718  C02D  F02D         	movff	floorf@x,?_floorf
  6222  00371C  C02E  F02E         	movff	floorf@x+1,?_floorf+1
  6223  003720  C02F  F02F         	movff	floorf@x+2,?_floorf+2
  6224  003724  C030  F030         	movff	floorf@x+3,?_floorf+3
  6225  003728  EF5A  F01C         	goto	l2288
  6226  00372C                     l8249:
  6227                           
  6228                           ; BSR set to: 0
  6229  00372C  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6230  00372E  EF9B  F01B         	goto	u8701
  6231  003732  EF9D  F01B         	goto	u8700
  6232  003736                     u8701:
  6233  003736  EF0E  F01C         	goto	l8259
  6234  00373A                     u8700:
  6235  00373A                     
  6236                           ; BSR set to: 0
  6237  00373A  C064  F031         	movff	floorf@e,??_floorf
  6238  00373E  0EFF               	movlw	255
  6239  003740  6E32               	movwf	(??_floorf+1)^0,c
  6240  003742  0EFF               	movlw	255
  6241  003744  6E33               	movwf	(??_floorf+2)^0,c
  6242  003746  0E7F               	movlw	127
  6243  003748  6E34               	movwf	(??_floorf+3)^0,c
  6244  00374A  0E00               	movlw	0
  6245  00374C  6E35               	movwf	(??_floorf+4)^0,c
  6246  00374E                     u8715:
  6247  00374E  6631               	tstfsz	??_floorf^0,c
  6248  003750  EFAC  F01B         	goto	u8716
  6249  003754  EFB4  F01B         	goto	u8717
  6250  003758                     u8716:
  6251  003758  3435               	rlcf	(??_floorf+4)^0,w,c
  6252  00375A  3235               	rrcf	(??_floorf+4)^0,f,c
  6253  00375C  3234               	rrcf	(??_floorf+3)^0,f,c
  6254  00375E  3233               	rrcf	(??_floorf+2)^0,f,c
  6255  003760  3232               	rrcf	(??_floorf+1)^0,f,c
  6256  003762  2E31               	decfsz	??_floorf^0,f,c
  6257  003764  EFA7  F01B         	goto	u8715
  6258  003768                     u8717:
  6259  003768  C032  F060         	movff	??_floorf+1,floorf@m
  6260  00376C  C033  F061         	movff	??_floorf+2,floorf@m+1
  6261  003770  C034  F062         	movff	??_floorf+3,floorf@m+2
  6262  003774  C035  F063         	movff	??_floorf+4,floorf@m+3
  6263  003778  0100               	movlb	0	; () banked
  6264  00377A  5160               	movf	floorf@m& (0+255),w,b
  6265  00377C  1566               	andwf	floorf@u& (0+255),w,b
  6266  00377E  6E31               	movwf	??_floorf^0,c
  6267  003780  5161               	movf	(floorf@m+1)& (0+255),w,b
  6268  003782  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6269  003784  6E32               	movwf	(??_floorf+1)^0,c
  6270  003786  5162               	movf	(floorf@m+2)& (0+255),w,b
  6271  003788  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6272  00378A  6E33               	movwf	(??_floorf+2)^0,c
  6273  00378C  5163               	movf	(floorf@m+3)& (0+255),w,b
  6274  00378E  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6275  003790  6E34               	movwf	(??_floorf+3)^0,c
  6276  003792  5031               	movf	??_floorf^0,w,c
  6277  003794  1032               	iorwf	(??_floorf+1)^0,w,c
  6278  003796  1033               	iorwf	(??_floorf+2)^0,w,c
  6279  003798  1034               	iorwf	(??_floorf+3)^0,w,c
  6280  00379A  A4D8               	btfss	status,2,c
  6281  00379C  EFD2  F01B         	goto	u8721
  6282  0037A0  EFD4  F01B         	goto	u8720
  6283  0037A4                     u8721:
  6284  0037A4  EFD6  F01B         	goto	l8255
  6285  0037A8                     u8720:
  6286  0037A8  EF8C  F01B         	goto	l8247
  6287  0037AC                     l8255:
  6288                           
  6289                           ; BSR set to: 0
  6290  0037AC  C066  F031         	movff	floorf@u,??_floorf
  6291  0037B0  C067  F032         	movff	floorf@u+1,??_floorf+1
  6292  0037B4  C068  F033         	movff	floorf@u+2,??_floorf+2
  6293  0037B8  C069  F034         	movff	floorf@u+3,??_floorf+3
  6294  0037BC  0E20               	movlw	32
  6295  0037BE  EFE6  F01B         	goto	u8730
  6296  0037C2                     u8735:
  6297  0037C2  90D8               	bcf	status,0,c
  6298  0037C4  3234               	rrcf	(??_floorf+3)^0,f,c
  6299  0037C6  3233               	rrcf	(??_floorf+2)^0,f,c
  6300  0037C8  3232               	rrcf	(??_floorf+1)^0,f,c
  6301  0037CA  3231               	rrcf	??_floorf^0,f,c
  6302  0037CC                     u8730:
  6303  0037CC  2EE8               	decfsz	wreg,f,c
  6304  0037CE  EFE1  F01B         	goto	u8735
  6305  0037D2  5031               	movf	??_floorf^0,w,c
  6306  0037D4  1032               	iorwf	(??_floorf+1)^0,w,c
  6307  0037D6  1033               	iorwf	(??_floorf+2)^0,w,c
  6308  0037D8  1034               	iorwf	(??_floorf+3)^0,w,c
  6309  0037DA  B4D8               	btfsc	status,2,c
  6310  0037DC  EFF2  F01B         	goto	u8741
  6311  0037E0  EFF4  F01B         	goto	u8740
  6312  0037E4                     u8741:
  6313  0037E4  EFFC  F01B         	goto	l2291
  6314  0037E8                     u8740:
  6315  0037E8                     
  6316                           ; BSR set to: 0
  6317  0037E8  5160               	movf	floorf@m& (0+255),w,b
  6318  0037EA  2766               	addwf	floorf@u& (0+255),f,b
  6319  0037EC  5161               	movf	(floorf@m+1)& (0+255),w,b
  6320  0037EE  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6321  0037F0  5162               	movf	(floorf@m+2)& (0+255),w,b
  6322  0037F2  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6323  0037F4  5163               	movf	(floorf@m+3)& (0+255),w,b
  6324  0037F6  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6325  0037F8                     l2291:
  6326                           
  6327                           ; BSR set to: 0
  6328  0037F8  1D60               	comf	floorf@m& (0+255),w,b
  6329  0037FA  6E31               	movwf	??_floorf^0,c
  6330  0037FC  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6331  0037FE  6E32               	movwf	(??_floorf+1)^0,c
  6332  003800  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6333  003802  6E33               	movwf	(??_floorf+2)^0,c
  6334  003804  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6335  003806  6E34               	movwf	(??_floorf+3)^0,c
  6336  003808  5031               	movf	??_floorf^0,w,c
  6337  00380A  1766               	andwf	floorf@u& (0+255),f,b
  6338  00380C  5032               	movf	(??_floorf+1)^0,w,c
  6339  00380E  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6340  003810  5033               	movf	(??_floorf+2)^0,w,c
  6341  003812  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6342  003814  5034               	movf	(??_floorf+3)^0,w,c
  6343  003816  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6344  003818  EF52  F01C         	goto	l8267
  6345  00381C                     l8259:
  6346                           
  6347                           ; BSR set to: 0
  6348  00381C  C066  F031         	movff	floorf@u,??_floorf
  6349  003820  C067  F032         	movff	floorf@u+1,??_floorf+1
  6350  003824  C068  F033         	movff	floorf@u+2,??_floorf+2
  6351  003828  C069  F034         	movff	floorf@u+3,??_floorf+3
  6352  00382C  0E20               	movlw	32
  6353  00382E  EF1E  F01C         	goto	u8750
  6354  003832                     u8755:
  6355  003832  90D8               	bcf	status,0,c
  6356  003834  3234               	rrcf	(??_floorf+3)^0,f,c
  6357  003836  3233               	rrcf	(??_floorf+2)^0,f,c
  6358  003838  3232               	rrcf	(??_floorf+1)^0,f,c
  6359  00383A  3231               	rrcf	??_floorf^0,f,c
  6360  00383C                     u8750:
  6361  00383C  2EE8               	decfsz	wreg,f,c
  6362  00383E  EF19  F01C         	goto	u8755
  6363  003842  5031               	movf	??_floorf^0,w,c
  6364  003844  1032               	iorwf	(??_floorf+1)^0,w,c
  6365  003846  1033               	iorwf	(??_floorf+2)^0,w,c
  6366  003848  1034               	iorwf	(??_floorf+3)^0,w,c
  6367  00384A  A4D8               	btfss	status,2,c
  6368  00384C  EF2A  F01C         	goto	u8761
  6369  003850  EF2C  F01C         	goto	u8760
  6370  003854                     u8761:
  6371  003854  EF36  F01C         	goto	l8263
  6372  003858                     u8760:
  6373  003858                     
  6374                           ; BSR set to: 0
  6375  003858  0E00               	movlw	0
  6376  00385A  6F66               	movwf	floorf@u& (0+255),b
  6377  00385C  0E00               	movlw	0
  6378  00385E  6F67               	movwf	(floorf@u+1)& (0+255),b
  6379  003860  0E00               	movlw	0
  6380  003862  6F68               	movwf	(floorf@u+2)& (0+255),b
  6381  003864  0E00               	movlw	0
  6382  003866  6F69               	movwf	(floorf@u+3)& (0+255),b
  6383  003868  EF52  F01C         	goto	l8267
  6384  00386C                     l8263:
  6385                           
  6386                           ; BSR set to: 0
  6387  00386C  90D8               	bcf	status,0,c
  6388  00386E  3566               	rlcf	floorf@u& (0+255),w,b
  6389  003870  6E31               	movwf	??_floorf^0,c
  6390  003872  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6391  003874  6E32               	movwf	(??_floorf+1)^0,c
  6392  003876  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6393  003878  6E33               	movwf	(??_floorf+2)^0,c
  6394  00387A  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6395  00387C  6E34               	movwf	(??_floorf+3)^0,c
  6396  00387E  5031               	movf	??_floorf^0,w,c
  6397  003880  1032               	iorwf	(??_floorf+1)^0,w,c
  6398  003882  1033               	iorwf	(??_floorf+2)^0,w,c
  6399  003884  1034               	iorwf	(??_floorf+3)^0,w,c
  6400  003886  B4D8               	btfsc	status,2,c
  6401  003888  EF48  F01C         	goto	u8771
  6402  00388C  EF4A  F01C         	goto	u8770
  6403  003890                     u8771:
  6404  003890  EF52  F01C         	goto	l8267
  6405  003894                     u8770:
  6406  003894                     
  6407                           ; BSR set to: 0
  6408  003894  0E00               	movlw	0
  6409  003896  6F66               	movwf	floorf@u& (0+255),b
  6410  003898  0E00               	movlw	0
  6411  00389A  6F67               	movwf	(floorf@u+1)& (0+255),b
  6412  00389C  0E80               	movlw	128
  6413  00389E  6F68               	movwf	(floorf@u+2)& (0+255),b
  6414  0038A0  0EBF               	movlw	191
  6415  0038A2  6F69               	movwf	(floorf@u+3)& (0+255),b
  6416  0038A4                     l8267:
  6417                           
  6418                           ; BSR set to: 0
  6419  0038A4  C066  F02D         	movff	floorf@u,?_floorf
  6420  0038A8  C067  F02E         	movff	floorf@u+1,?_floorf+1
  6421  0038AC  C068  F02F         	movff	floorf@u+2,?_floorf+2
  6422  0038B0  C069  F030         	movff	floorf@u+3,?_floorf+3
  6423  0038B4                     l2288:
  6424                           
  6425                           ; BSR set to: 0
  6426  0038B4  0012               	return		;funcret
  6427  0038B6                     __end_of_floorf:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function ___fpclassifyf *****************
  6431 ;; Defined at:
  6432 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  x               4   19[COMRAM] float 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  u               4   29[COMRAM] struct .
  6437 ;;  e               2   27[COMRAM] int 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  2   19[COMRAM] int 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;Total ram usage:       14 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; Hardware stack levels required when called: 8
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_efgtoa
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text15
  6462  004924                     __ptext15:
  6463                           	callstack 0
  6464  004924                     ___fpclassifyf:
  6465                           	callstack 16
  6466  004924  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6467  004928  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6468  00492C  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6469  004930  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6470  004934  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6471  004938  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6472  00493C  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6473  004940  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6474  004944  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6475  004948  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6476  00494C  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6477  004950  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6478  004954  0E18               	movlw	24
  6479  004956  EFB2  F024         	goto	u8560
  6480  00495A                     u8565:
  6481  00495A  90D8               	bcf	status,0,c
  6482  00495C  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6483  00495E  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6484  004960  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6485  004962  3218               	rrcf	??___fpclassifyf^0,f,c
  6486  004964                     u8560:
  6487  004964  2EE8               	decfsz	wreg,f,c
  6488  004966  EFAD  F024         	goto	u8565
  6489  00496A  5018               	movf	??___fpclassifyf^0,w,c
  6490  00496C  6E1C               	movwf	___fpclassifyf@e^0,c
  6491  00496E  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6492  004970  501C               	movf	___fpclassifyf@e^0,w,c
  6493  004972  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6494  004974  A4D8               	btfss	status,2,c
  6495  004976  EFBF  F024         	goto	u8571
  6496  00497A  EFC1  F024         	goto	u8570
  6497  00497E                     u8571:
  6498  00497E  EFE1  F024         	goto	l8219
  6499  004982                     u8570:
  6500  004982  90D8               	bcf	status,0,c
  6501  004984  341E               	rlcf	___fpclassifyf@u^0,w,c
  6502  004986  6E18               	movwf	??___fpclassifyf^0,c
  6503  004988  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6504  00498A  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6505  00498C  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6506  00498E  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6507  004990  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6508  004992  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6509  004994  5018               	movf	??___fpclassifyf^0,w,c
  6510  004996  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6511  004998  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6512  00499A  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6513  00499C  A4D8               	btfss	status,2,c
  6514  00499E  EFD3  F024         	goto	u8581
  6515  0049A2  EFD5  F024         	goto	u8580
  6516  0049A6                     u8581:
  6517  0049A6  EFDB  F024         	goto	l8215
  6518  0049AA                     u8580:
  6519  0049AA  0E00               	movlw	0
  6520  0049AC  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6521  0049AE  0E02               	movlw	2
  6522  0049B0  6E14               	movwf	?___fpclassifyf^0,c
  6523  0049B2  EF10  F025         	goto	l2274
  6524  0049B6                     l8215:
  6525  0049B6  0E00               	movlw	0
  6526  0049B8  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6527  0049BA  0E03               	movlw	3
  6528  0049BC  6E14               	movwf	?___fpclassifyf^0,c
  6529  0049BE  EF10  F025         	goto	l2274
  6530  0049C2                     l8219:
  6531  0049C2  281C               	incf	___fpclassifyf@e^0,w,c
  6532  0049C4  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6533  0049C6  A4D8               	btfss	status,2,c
  6534  0049C8  EFE8  F024         	goto	u8591
  6535  0049CC  EFEA  F024         	goto	u8590
  6536  0049D0                     u8591:
  6537  0049D0  EF0C  F025         	goto	l8225
  6538  0049D4                     u8590:
  6539  0049D4  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6540  0049D8  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6541  0049DC  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6542  0049E0  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6543  0049E4  0E09               	movlw	9
  6544  0049E6                     u8605:
  6545  0049E6  90D8               	bcf	status,0,c
  6546  0049E8  3618               	rlcf	??___fpclassifyf^0,f,c
  6547  0049EA  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6548  0049EC  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6549  0049EE  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6550  0049F0  2EE8               	decfsz	wreg,f,c
  6551  0049F2  EFF3  F024         	goto	u8605
  6552  0049F6  5018               	movf	??___fpclassifyf^0,w,c
  6553  0049F8  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6554  0049FA  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6555  0049FC  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6556  0049FE  B4D8               	btfsc	status,2,c
  6557  004A00  EF04  F025         	goto	u8611
  6558  004A04  EF07  F025         	goto	u8610
  6559  004A08                     u8611:
  6560  004A08  0E01               	movlw	1
  6561  004A0A  EF08  F025         	goto	u8620
  6562  004A0E                     u8610:
  6563  004A0E  0E00               	movlw	0
  6564  004A10                     u8620:
  6565  004A10  6E14               	movwf	?___fpclassifyf^0,c
  6566  004A12  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6567  004A14  EF10  F025         	goto	l2274
  6568  004A18                     l8225:
  6569  004A18  0E00               	movlw	0
  6570  004A1A  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6571  004A1C  0E04               	movlw	4
  6572  004A1E  6E14               	movwf	?___fpclassifyf^0,c
  6573  004A20                     l2274:
  6574  004A20  0012               	return		;funcret
  6575  004A22                     __end_of___fpclassifyf:
  6576                           	callstack 0
  6577                           
  6578 ;; *************** function ___flsub *****************
  6579 ;; Defined at:
  6580 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  b               4   25[BANK0 ] int 
  6583 ;;  a               4   29[BANK0 ] int 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  4   25[BANK0 ] int 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6595 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;Total ram usage:        8 bytes
  6600 ;; Hardware stack levels used: 1
  6601 ;; Hardware stack levels required when called: 9
  6602 ;; This function calls:
  6603 ;;		___fladd
  6604 ;; This function is called by:
  6605 ;;		_efgtoa
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text16
  6610  00569A                     __ptext16:
  6611                           	callstack 0
  6612  00569A                     ___flsub:
  6613                           	callstack 15
  6614  00569A  0E00               	movlw	0
  6615  00569C  0100               	movlb	0	; () banked
  6616  00569E  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6617  0056A0  0E00               	movlw	0
  6618  0056A2  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6619  0056A4  0E00               	movlw	0
  6620  0056A6  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6621  0056A8  0E80               	movlw	128
  6622  0056AA  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6623  0056AC                     
  6624                           ; BSR set to: 0
  6625  0056AC  C079  F06D         	movff	___flsub@b,___fladd@b
  6626  0056B0  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6627  0056B4  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6628  0056B8  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6629  0056BC  C07D  F071         	movff	___flsub@a,___fladd@a
  6630  0056C0  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6631  0056C4  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6632  0056C8  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6633  0056CC  EC22  F011         	call	___fladd	;wreg free
  6634  0056D0  C06D  F079         	movff	?___fladd,?___flsub
  6635  0056D4  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6636  0056D8  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6637  0056DC  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6638  0056E0  0012               	return		;funcret
  6639  0056E2                     __end_of___flsub:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function ___flneg *****************
  6643 ;; Defined at:
  6644 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  f1              4   19[COMRAM] int 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  4   19[COMRAM] int 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;Total ram usage:        4 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; Hardware stack levels required when called: 8
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_efgtoa
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text17
  6673  005892                     __ptext17:
  6674                           	callstack 0
  6675  005892                     ___flneg:
  6676                           	callstack 16
  6677  005892  5014               	movf	___flneg@f1^0,w,c
  6678  005894  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6679  005896  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6680  005898  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6681  00589A  B4D8               	btfsc	status,2,c
  6682  00589C  EF52  F02C         	goto	u8431
  6683  0058A0  EF54  F02C         	goto	u8430
  6684  0058A4                     u8431:
  6685  0058A4  EF5C  F02C         	goto	l8133
  6686  0058A8                     u8430:
  6687  0058A8  0E00               	movlw	0
  6688  0058AA  1A14               	xorwf	___flneg@f1^0,f,c
  6689  0058AC  0E00               	movlw	0
  6690  0058AE  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6691  0058B0  0E00               	movlw	0
  6692  0058B2  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6693  0058B4  0E80               	movlw	128
  6694  0058B6  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6695  0058B8                     l8133:
  6696  0058B8  C014  F014         	movff	___flneg@f1,?___flneg
  6697  0058BC  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  6698  0058C0  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  6699  0058C4  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  6700  0058C8  0012               	return		;funcret
  6701  0058CA                     __end_of___flneg:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function ___fleq *****************
  6705 ;; Defined at:
  6706 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  ff1             4   19[COMRAM] int 
  6709 ;;  ff2             4   23[COMRAM] int 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;		None               void
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6721 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;Total ram usage:       12 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 8
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_efgtoa
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text18
  6736  004FB8                     __ptext18:
  6737                           	callstack 0
  6738  004FB8                     ___fleq:
  6739                           	callstack 16
  6740  004FB8  0E00               	movlw	0
  6741  004FBA  1414               	andwf	___fleq@ff1^0,w,c
  6742  004FBC  6E1C               	movwf	??___fleq^0,c
  6743  004FBE  0E00               	movlw	0
  6744  004FC0  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6745  004FC2  6E1D               	movwf	(??___fleq+1)^0,c
  6746  004FC4  0E80               	movlw	128
  6747  004FC6  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6748  004FC8  6E1E               	movwf	(??___fleq+2)^0,c
  6749  004FCA  0E7F               	movlw	127
  6750  004FCC  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6751  004FCE  6E1F               	movwf	(??___fleq+3)^0,c
  6752  004FD0  501C               	movf	??___fleq^0,w,c
  6753  004FD2  101D               	iorwf	(??___fleq+1)^0,w,c
  6754  004FD4  101E               	iorwf	(??___fleq+2)^0,w,c
  6755  004FD6  101F               	iorwf	(??___fleq+3)^0,w,c
  6756  004FD8  A4D8               	btfss	status,2,c
  6757  004FDA  EFF1  F027         	goto	u8351
  6758  004FDE  EFF3  F027         	goto	u8350
  6759  004FE2                     u8351:
  6760  004FE2  EFFB  F027         	goto	l8095
  6761  004FE6                     u8350:
  6762  004FE6  0E00               	movlw	0
  6763  004FE8  6E14               	movwf	___fleq@ff1^0,c
  6764  004FEA  0E00               	movlw	0
  6765  004FEC  6E15               	movwf	(___fleq@ff1+1)^0,c
  6766  004FEE  0E00               	movlw	0
  6767  004FF0  6E16               	movwf	(___fleq@ff1+2)^0,c
  6768  004FF2  0E00               	movlw	0
  6769  004FF4  6E17               	movwf	(___fleq@ff1+3)^0,c
  6770  004FF6                     l8095:
  6771  004FF6  0E00               	movlw	0
  6772  004FF8  1418               	andwf	___fleq@ff2^0,w,c
  6773  004FFA  6E1C               	movwf	??___fleq^0,c
  6774  004FFC  0E00               	movlw	0
  6775  004FFE  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6776  005000  6E1D               	movwf	(??___fleq+1)^0,c
  6777  005002  0E80               	movlw	128
  6778  005004  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6779  005006  6E1E               	movwf	(??___fleq+2)^0,c
  6780  005008  0E7F               	movlw	127
  6781  00500A  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6782  00500C  6E1F               	movwf	(??___fleq+3)^0,c
  6783  00500E  501C               	movf	??___fleq^0,w,c
  6784  005010  101D               	iorwf	(??___fleq+1)^0,w,c
  6785  005012  101E               	iorwf	(??___fleq+2)^0,w,c
  6786  005014  101F               	iorwf	(??___fleq+3)^0,w,c
  6787  005016  A4D8               	btfss	status,2,c
  6788  005018  EF10  F028         	goto	u8361
  6789  00501C  EF12  F028         	goto	u8360
  6790  005020                     u8361:
  6791  005020  EF1A  F028         	goto	l8099
  6792  005024                     u8360:
  6793  005024  0E00               	movlw	0
  6794  005026  6E18               	movwf	___fleq@ff2^0,c
  6795  005028  0E00               	movlw	0
  6796  00502A  6E19               	movwf	(___fleq@ff2+1)^0,c
  6797  00502C  0E00               	movlw	0
  6798  00502E  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6799  005030  0E00               	movlw	0
  6800  005032  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6801  005034                     l8099:
  6802  005034  5018               	movf	___fleq@ff2^0,w,c
  6803  005036  1814               	xorwf	___fleq@ff1^0,w,c
  6804  005038  E10F               	bnz	u8370
  6805  00503A  5019               	movf	(___fleq@ff2+1)^0,w,c
  6806  00503C  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6807  00503E  E10C               	bnz	u8370
  6808  005040  501A               	movf	(___fleq@ff2+2)^0,w,c
  6809  005042  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6810  005044  E109               	bnz	u8370
  6811  005046  501B               	movf	(___fleq@ff2+3)^0,w,c
  6812  005048  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6813  00504A  B4D8               	btfsc	status,2,c
  6814  00504C  EF2A  F028         	goto	u8371
  6815  005050  EF2C  F028         	goto	u8370
  6816  005054                     u8371:
  6817  005054  EF2F  F028         	goto	l8103
  6818  005058                     u8370:
  6819  005058  90D8               	bcf	status,0,c
  6820  00505A  EF30  F028         	goto	l1658
  6821  00505E                     l8103:
  6822  00505E  80D8               	bsf	status,0,c
  6823  005060                     l1658:
  6824  005060  0012               	return		;funcret
  6825  005062                     __end_of___fleq:
  6826                           	callstack 0
  6827                           
  6828 ;; *************** function ___fldiv *****************
  6829 ;; Defined at:
  6830 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  b               4   19[COMRAM] int 
  6833 ;;  a               4   23[COMRAM] int 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;  grs             4   38[COMRAM] unsigned long 
  6836 ;;  rem             4   31[COMRAM] unsigned long 
  6837 ;;  new_exp         2   36[COMRAM] short 
  6838 ;;  aexp            1   43[COMRAM] unsigned char 
  6839 ;;  bexp            1   42[COMRAM] unsigned char 
  6840 ;;  sign            1   35[COMRAM] unsigned char 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  4   19[COMRAM] unsigned char 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6850 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;Total ram usage:       25 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 8
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_efgtoa
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text19
  6865  002B56                     __ptext19:
  6866                           	callstack 0
  6867  002B56                     ___fldiv:
  6868                           	callstack 16
  6869  002B56  5017               	movf	(___fldiv@b+3)^0,w,c
  6870  002B58  0B80               	andlw	128
  6871  002B5A  6E24               	movwf	___fldiv@sign^0,c
  6872  002B5C  5017               	movf	(___fldiv@b+3)^0,w,c
  6873  002B5E  2417               	addwf	(___fldiv@b+3)^0,w,c
  6874  002B60  6E2B               	movwf	___fldiv@bexp^0,c
  6875  002B62  AE16               	btfss	(___fldiv@b+2)^0,7,c
  6876  002B64  EFB6  F015         	goto	u7811
  6877  002B68  EFB8  F015         	goto	u7810
  6878  002B6C                     u7811:
  6879  002B6C  EFB9  F015         	goto	l7743
  6880  002B70                     u7810:
  6881  002B70  802B               	bsf	___fldiv@bexp^0,0,c
  6882  002B72                     l7743:
  6883  002B72  502B               	movf	___fldiv@bexp^0,w,c
  6884  002B74  B4D8               	btfsc	status,2,c
  6885  002B76  EFBF  F015         	goto	u7821
  6886  002B7A  EFC1  F015         	goto	u7820
  6887  002B7E                     u7821:
  6888  002B7E  EFD6  F015         	goto	l7753
  6889  002B82                     u7820:
  6890  002B82  282B               	incf	___fldiv@bexp^0,w,c
  6891  002B84  A4D8               	btfss	status,2,c
  6892  002B86  EFC7  F015         	goto	u7831
  6893  002B8A  EFC9  F015         	goto	u7830
  6894  002B8E                     u7831:
  6895  002B8E  EFD1  F015         	goto	l7749
  6896  002B92                     u7830:
  6897  002B92  0E00               	movlw	0
  6898  002B94  6E14               	movwf	___fldiv@b^0,c
  6899  002B96  0E00               	movlw	0
  6900  002B98  6E15               	movwf	(___fldiv@b+1)^0,c
  6901  002B9A  0E00               	movlw	0
  6902  002B9C  6E16               	movwf	(___fldiv@b+2)^0,c
  6903  002B9E  0E00               	movlw	0
  6904  002BA0  6E17               	movwf	(___fldiv@b+3)^0,c
  6905  002BA2                     l7749:
  6906  002BA2  8E16               	bsf	(___fldiv@b+2)^0,7,c
  6907  002BA4  0E00               	movlw	0
  6908  002BA6  6E17               	movwf	(___fldiv@b+3)^0,c
  6909  002BA8  EFDE  F015         	goto	l7755
  6910  002BAC                     l7753:
  6911  002BAC  0E00               	movlw	0
  6912  002BAE  6E14               	movwf	___fldiv@b^0,c
  6913  002BB0  0E00               	movlw	0
  6914  002BB2  6E15               	movwf	(___fldiv@b+1)^0,c
  6915  002BB4  0E00               	movlw	0
  6916  002BB6  6E16               	movwf	(___fldiv@b+2)^0,c
  6917  002BB8  0E00               	movlw	0
  6918  002BBA  6E17               	movwf	(___fldiv@b+3)^0,c
  6919  002BBC                     l7755:
  6920  002BBC  501B               	movf	(___fldiv@a+3)^0,w,c
  6921  002BBE  0B80               	andlw	128
  6922  002BC0  1A24               	xorwf	___fldiv@sign^0,f,c
  6923  002BC2  501B               	movf	(___fldiv@a+3)^0,w,c
  6924  002BC4  241B               	addwf	(___fldiv@a+3)^0,w,c
  6925  002BC6  6E2C               	movwf	___fldiv@aexp^0,c
  6926  002BC8  AE1A               	btfss	(___fldiv@a+2)^0,7,c
  6927  002BCA  EFE9  F015         	goto	u7841
  6928  002BCE  EFEB  F015         	goto	u7840
  6929  002BD2                     u7841:
  6930  002BD2  EFEC  F015         	goto	l7763
  6931  002BD6                     u7840:
  6932  002BD6  802C               	bsf	___fldiv@aexp^0,0,c
  6933  002BD8                     l7763:
  6934  002BD8  502C               	movf	___fldiv@aexp^0,w,c
  6935  002BDA  B4D8               	btfsc	status,2,c
  6936  002BDC  EFF2  F015         	goto	u7851
  6937  002BE0  EFF4  F015         	goto	u7850
  6938  002BE4                     u7851:
  6939  002BE4  EF09  F016         	goto	l7773
  6940  002BE8                     u7850:
  6941  002BE8  282C               	incf	___fldiv@aexp^0,w,c
  6942  002BEA  A4D8               	btfss	status,2,c
  6943  002BEC  EFFA  F015         	goto	u7861
  6944  002BF0  EFFC  F015         	goto	u7860
  6945  002BF4                     u7861:
  6946  002BF4  EF04  F016         	goto	l7769
  6947  002BF8                     u7860:
  6948  002BF8  0E00               	movlw	0
  6949  002BFA  6E18               	movwf	___fldiv@a^0,c
  6950  002BFC  0E00               	movlw	0
  6951  002BFE  6E19               	movwf	(___fldiv@a+1)^0,c
  6952  002C00  0E00               	movlw	0
  6953  002C02  6E1A               	movwf	(___fldiv@a+2)^0,c
  6954  002C04  0E00               	movlw	0
  6955  002C06  6E1B               	movwf	(___fldiv@a+3)^0,c
  6956  002C08                     l7769:
  6957  002C08  8E1A               	bsf	(___fldiv@a+2)^0,7,c
  6958  002C0A  0E00               	movlw	0
  6959  002C0C  6E1B               	movwf	(___fldiv@a+3)^0,c
  6960  002C0E  EF11  F016         	goto	l7775
  6961  002C12                     l7773:
  6962  002C12  0E00               	movlw	0
  6963  002C14  6E18               	movwf	___fldiv@a^0,c
  6964  002C16  0E00               	movlw	0
  6965  002C18  6E19               	movwf	(___fldiv@a+1)^0,c
  6966  002C1A  0E00               	movlw	0
  6967  002C1C  6E1A               	movwf	(___fldiv@a+2)^0,c
  6968  002C1E  0E00               	movlw	0
  6969  002C20  6E1B               	movwf	(___fldiv@a+3)^0,c
  6970  002C22                     l7775:
  6971  002C22  5018               	movf	___fldiv@a^0,w,c
  6972  002C24  1019               	iorwf	(___fldiv@a+1)^0,w,c
  6973  002C26  101A               	iorwf	(___fldiv@a+2)^0,w,c
  6974  002C28  101B               	iorwf	(___fldiv@a+3)^0,w,c
  6975  002C2A  A4D8               	btfss	status,2,c
  6976  002C2C  EF1A  F016         	goto	u7871
  6977  002C30  EF1C  F016         	goto	u7870
  6978  002C34                     u7871:
  6979  002C34  EF34  F016         	goto	l7787
  6980  002C38                     u7870:
  6981  002C38  0E00               	movlw	0
  6982  002C3A  6E14               	movwf	___fldiv@b^0,c
  6983  002C3C  0E00               	movlw	0
  6984  002C3E  6E15               	movwf	(___fldiv@b+1)^0,c
  6985  002C40  0E00               	movlw	0
  6986  002C42  6E16               	movwf	(___fldiv@b+2)^0,c
  6987  002C44  0E00               	movlw	0
  6988  002C46  6E17               	movwf	(___fldiv@b+3)^0,c
  6989  002C48  0E80               	movlw	128
  6990  002C4A  1216               	iorwf	(___fldiv@b+2)^0,f,c
  6991  002C4C  0E7F               	movlw	127
  6992  002C4E  1217               	iorwf	(___fldiv@b+3)^0,f,c
  6993  002C50                     l7781:
  6994  002C50  5024               	movf	___fldiv@sign^0,w,c
  6995  002C52  1217               	iorwf	(___fldiv@b+3)^0,f,c
  6996  002C54  C014  F014         	movff	___fldiv@b,?___fldiv
  6997  002C58  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  6998  002C5C  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  6999  002C60  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  7000  002C64  EF77  F017         	goto	l1981
  7001  002C68                     l7787:
  7002  002C68  502B               	movf	___fldiv@bexp^0,w,c
  7003  002C6A  A4D8               	btfss	status,2,c
  7004  002C6C  EF3A  F016         	goto	u7881
  7005  002C70  EF3C  F016         	goto	u7880
  7006  002C74                     u7881:
  7007  002C74  EF46  F016         	goto	l7795
  7008  002C78                     u7880:
  7009  002C78  0E00               	movlw	0
  7010  002C7A  6E14               	movwf	?___fldiv^0,c
  7011  002C7C  0E00               	movlw	0
  7012  002C7E  6E15               	movwf	(?___fldiv+1)^0,c
  7013  002C80  0E00               	movlw	0
  7014  002C82  6E16               	movwf	(?___fldiv+2)^0,c
  7015  002C84  0E00               	movlw	0
  7016  002C86  6E17               	movwf	(?___fldiv+3)^0,c
  7017  002C88  EF77  F017         	goto	l1981
  7018  002C8C                     l7795:
  7019  002C8C  502C               	movf	___fldiv@aexp^0,w,c
  7020  002C8E  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  7021  002C92  6A1D               	clrf	(??___fldiv+1)^0,c
  7022  002C94  5E1C               	subwf	??___fldiv^0,f,c
  7023  002C96  0E00               	movlw	0
  7024  002C98  5A1D               	subwfb	(??___fldiv+1)^0,f,c
  7025  002C9A  0E7F               	movlw	127
  7026  002C9C  241C               	addwf	??___fldiv^0,w,c
  7027  002C9E  6E25               	movwf	___fldiv@new_exp^0,c
  7028  002CA0  0E00               	movlw	0
  7029  002CA2  201D               	addwfc	(??___fldiv+1)^0,w,c
  7030  002CA4  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7031  002CA6  C014  F020         	movff	___fldiv@b,___fldiv@rem
  7032  002CAA  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  7033  002CAE  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  7034  002CB2  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  7035  002CB6  0E00               	movlw	0
  7036  002CB8  6E14               	movwf	___fldiv@b^0,c
  7037  002CBA  0E00               	movlw	0
  7038  002CBC  6E15               	movwf	(___fldiv@b+1)^0,c
  7039  002CBE  0E00               	movlw	0
  7040  002CC0  6E16               	movwf	(___fldiv@b+2)^0,c
  7041  002CC2  0E00               	movlw	0
  7042  002CC4  6E17               	movwf	(___fldiv@b+3)^0,c
  7043  002CC6  0E00               	movlw	0
  7044  002CC8  6E27               	movwf	___fldiv@grs^0,c
  7045  002CCA  0E00               	movlw	0
  7046  002CCC  6E28               	movwf	(___fldiv@grs+1)^0,c
  7047  002CCE  0E00               	movlw	0
  7048  002CD0  6E29               	movwf	(___fldiv@grs+2)^0,c
  7049  002CD2  0E00               	movlw	0
  7050  002CD4  6E2A               	movwf	(___fldiv@grs+3)^0,c
  7051  002CD6  0E00               	movlw	0
  7052  002CD8  6E2C               	movwf	___fldiv@aexp^0,c
  7053  002CDA  EFA7  F016         	goto	l1983
  7054  002CDE                     l7805:
  7055  002CDE  502C               	movf	___fldiv@aexp^0,w,c
  7056  002CE0  B4D8               	btfsc	status,2,c
  7057  002CE2  EF75  F016         	goto	u7891
  7058  002CE6  EF77  F016         	goto	u7890
  7059  002CEA                     u7891:
  7060  002CEA  EF8E  F016         	goto	l7813
  7061  002CEE                     u7890:
  7062  002CEE  90D8               	bcf	status,0,c
  7063  002CF0  3620               	rlcf	___fldiv@rem^0,f,c
  7064  002CF2  3621               	rlcf	(___fldiv@rem+1)^0,f,c
  7065  002CF4  3622               	rlcf	(___fldiv@rem+2)^0,f,c
  7066  002CF6  3623               	rlcf	(___fldiv@rem+3)^0,f,c
  7067  002CF8  90D8               	bcf	status,0,c
  7068  002CFA  3614               	rlcf	___fldiv@b^0,f,c
  7069  002CFC  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7070  002CFE  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7071  002D00  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7072  002D02  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7073  002D04  EF86  F016         	goto	u7901
  7074  002D08  EF88  F016         	goto	u7900
  7075  002D0C                     u7901:
  7076  002D0C  EF89  F016         	goto	l1986
  7077  002D10                     u7900:
  7078  002D10  8014               	bsf	___fldiv@b^0,0,c
  7079  002D12                     l1986:
  7080  002D12  90D8               	bcf	status,0,c
  7081  002D14  3627               	rlcf	___fldiv@grs^0,f,c
  7082  002D16  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7083  002D18  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7084  002D1A  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7085  002D1C                     l7813:
  7086  002D1C  5018               	movf	___fldiv@a^0,w,c
  7087  002D1E  5C20               	subwf	___fldiv@rem^0,w,c
  7088  002D20  5019               	movf	(___fldiv@a+1)^0,w,c
  7089  002D22  5821               	subwfb	(___fldiv@rem+1)^0,w,c
  7090  002D24  501A               	movf	(___fldiv@a+2)^0,w,c
  7091  002D26  5822               	subwfb	(___fldiv@rem+2)^0,w,c
  7092  002D28  501B               	movf	(___fldiv@a+3)^0,w,c
  7093  002D2A  5823               	subwfb	(___fldiv@rem+3)^0,w,c
  7094  002D2C  A0D8               	btfss	status,0,c
  7095  002D2E  EF9B  F016         	goto	u7911
  7096  002D32  EF9D  F016         	goto	u7910
  7097  002D36                     u7911:
  7098  002D36  EFA6  F016         	goto	l7819
  7099  002D3A                     u7910:
  7100  002D3A  8C2A               	bsf	(___fldiv@grs+3)^0,6,c
  7101  002D3C  5018               	movf	___fldiv@a^0,w,c
  7102  002D3E  5E20               	subwf	___fldiv@rem^0,f,c
  7103  002D40  5019               	movf	(___fldiv@a+1)^0,w,c
  7104  002D42  5A21               	subwfb	(___fldiv@rem+1)^0,f,c
  7105  002D44  501A               	movf	(___fldiv@a+2)^0,w,c
  7106  002D46  5A22               	subwfb	(___fldiv@rem+2)^0,f,c
  7107  002D48  501B               	movf	(___fldiv@a+3)^0,w,c
  7108  002D4A  5A23               	subwfb	(___fldiv@rem+3)^0,f,c
  7109  002D4C                     l7819:
  7110  002D4C  2A2C               	incf	___fldiv@aexp^0,f,c
  7111  002D4E                     l1983:
  7112  002D4E  0E19               	movlw	25
  7113  002D50  642C               	cpfsgt	___fldiv@aexp^0,c
  7114  002D52  EFAD  F016         	goto	u7921
  7115  002D56  EFAF  F016         	goto	u7920
  7116  002D5A                     u7921:
  7117  002D5A  EF6F  F016         	goto	l7805
  7118  002D5E                     u7920:
  7119  002D5E  5020               	movf	___fldiv@rem^0,w,c
  7120  002D60  1021               	iorwf	(___fldiv@rem+1)^0,w,c
  7121  002D62  1022               	iorwf	(___fldiv@rem+2)^0,w,c
  7122  002D64  1023               	iorwf	(___fldiv@rem+3)^0,w,c
  7123  002D66  B4D8               	btfsc	status,2,c
  7124  002D68  EFB8  F016         	goto	u7931
  7125  002D6C  EFBA  F016         	goto	u7930
  7126  002D70                     u7931:
  7127  002D70  EFD2  F016         	goto	l7831
  7128  002D74                     u7930:
  7129  002D74  8027               	bsf	___fldiv@grs^0,0,c
  7130  002D76  EFD2  F016         	goto	l7831
  7131  002D7A                     l7825:
  7132  002D7A  90D8               	bcf	status,0,c
  7133  002D7C  3614               	rlcf	___fldiv@b^0,f,c
  7134  002D7E  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7135  002D80  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7136  002D82  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7137  002D84  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7138  002D86  EFC7  F016         	goto	u7941
  7139  002D8A  EFC9  F016         	goto	u7940
  7140  002D8E                     u7941:
  7141  002D8E  EFCA  F016         	goto	l1992
  7142  002D92                     u7940:
  7143  002D92  8014               	bsf	___fldiv@b^0,0,c
  7144  002D94                     l1992:
  7145  002D94  90D8               	bcf	status,0,c
  7146  002D96  3627               	rlcf	___fldiv@grs^0,f,c
  7147  002D98  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7148  002D9A  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7149  002D9C  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7150  002D9E  0625               	decf	___fldiv@new_exp^0,f,c
  7151  002DA0  A0D8               	btfss	status,0,c
  7152  002DA2  0626               	decf	(___fldiv@new_exp+1)^0,f,c
  7153  002DA4                     l7831:
  7154  002DA4  AE16               	btfss	(___fldiv@b+2)^0,7,c
  7155  002DA6  EFD7  F016         	goto	u7951
  7156  002DAA  EFD9  F016         	goto	u7950
  7157  002DAE                     u7951:
  7158  002DAE  EFBD  F016         	goto	l7825
  7159  002DB2                     u7950:
  7160  002DB2  0E00               	movlw	0
  7161  002DB4  6E2C               	movwf	___fldiv@aexp^0,c
  7162  002DB6  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7163  002DB8  EFE0  F016         	goto	u7961
  7164  002DBC  EFE2  F016         	goto	u7960
  7165  002DC0                     u7961:
  7166  002DC0  EF06  F017         	goto	l1994
  7167  002DC4                     u7960:
  7168  002DC4  0EFF               	movlw	255
  7169  002DC6  1427               	andwf	___fldiv@grs^0,w,c
  7170  002DC8  6E1C               	movwf	??___fldiv^0,c
  7171  002DCA  0EFF               	movlw	255
  7172  002DCC  1428               	andwf	(___fldiv@grs+1)^0,w,c
  7173  002DCE  6E1D               	movwf	(??___fldiv+1)^0,c
  7174  002DD0  0EFF               	movlw	255
  7175  002DD2  1429               	andwf	(___fldiv@grs+2)^0,w,c
  7176  002DD4  6E1E               	movwf	(??___fldiv+2)^0,c
  7177  002DD6  0E7F               	movlw	127
  7178  002DD8  142A               	andwf	(___fldiv@grs+3)^0,w,c
  7179  002DDA  6E1F               	movwf	(??___fldiv+3)^0,c
  7180  002DDC  501C               	movf	??___fldiv^0,w,c
  7181  002DDE  101D               	iorwf	(??___fldiv+1)^0,w,c
  7182  002DE0  101E               	iorwf	(??___fldiv+2)^0,w,c
  7183  002DE2  101F               	iorwf	(??___fldiv+3)^0,w,c
  7184  002DE4  B4D8               	btfsc	status,2,c
  7185  002DE6  EFF7  F016         	goto	u7971
  7186  002DEA  EFF9  F016         	goto	u7970
  7187  002DEE                     u7971:
  7188  002DEE  EFFD  F016         	goto	l1995
  7189  002DF2                     u7970:
  7190  002DF2                     l7839:
  7191  002DF2  0E01               	movlw	1
  7192  002DF4  6E2C               	movwf	___fldiv@aexp^0,c
  7193  002DF6  EF06  F017         	goto	l1994
  7194  002DFA                     l1995:
  7195  002DFA  A014               	btfss	___fldiv@b^0,0,c
  7196  002DFC  EF02  F017         	goto	u7981
  7197  002E00  EF04  F017         	goto	u7980
  7198  002E04                     u7981:
  7199  002E04  EF06  F017         	goto	l1994
  7200  002E08                     u7980:
  7201  002E08  EFF9  F016         	goto	l7839
  7202  002E0C                     l1994:
  7203  002E0C  502C               	movf	___fldiv@aexp^0,w,c
  7204  002E0E  B4D8               	btfsc	status,2,c
  7205  002E10  EF0C  F017         	goto	u7991
  7206  002E14  EF0E  F017         	goto	u7990
  7207  002E18                     u7991:
  7208  002E18  EF32  F017         	goto	l7851
  7209  002E1C                     u7990:
  7210  002E1C  0E01               	movlw	1
  7211  002E1E  2614               	addwf	___fldiv@b^0,f,c
  7212  002E20  0E00               	movlw	0
  7213  002E22  2215               	addwfc	(___fldiv@b+1)^0,f,c
  7214  002E24  2216               	addwfc	(___fldiv@b+2)^0,f,c
  7215  002E26  2217               	addwfc	(___fldiv@b+3)^0,f,c
  7216  002E28  A017               	btfss	(___fldiv@b+3)^0,0,c
  7217  002E2A  EF19  F017         	goto	u8001
  7218  002E2E  EF1B  F017         	goto	u8000
  7219  002E32                     u8001:
  7220  002E32  EF32  F017         	goto	l7851
  7221  002E36                     u8000:
  7222  002E36  C014  F01C         	movff	___fldiv@b,??___fldiv
  7223  002E3A  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  7224  002E3E  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  7225  002E42  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  7226  002E46  341F               	rlcf	(??___fldiv+3)^0,w,c
  7227  002E48  321F               	rrcf	(??___fldiv+3)^0,f,c
  7228  002E4A  321E               	rrcf	(??___fldiv+2)^0,f,c
  7229  002E4C  321D               	rrcf	(??___fldiv+1)^0,f,c
  7230  002E4E  321C               	rrcf	??___fldiv^0,f,c
  7231  002E50  C01C  F014         	movff	??___fldiv,___fldiv@b
  7232  002E54  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  7233  002E58  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  7234  002E5C  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  7235  002E60  4A25               	infsnz	___fldiv@new_exp^0,f,c
  7236  002E62  2A26               	incf	(___fldiv@new_exp+1)^0,f,c
  7237  002E64                     l7851:
  7238  002E64  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7239  002E66  EF3D  F017         	goto	u8011
  7240  002E6A  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7241  002E6C  E108               	bnz	u8010
  7242  002E6E  2825               	incf	___fldiv@new_exp^0,w,c
  7243  002E70  A0D8               	btfss	status,0,c
  7244  002E72  EF3D  F017         	goto	u8011
  7245  002E76  EF3F  F017         	goto	u8010
  7246  002E7A                     u8011:
  7247  002E7A  EF4A  F017         	goto	l7855
  7248  002E7E                     u8010:
  7249  002E7E  0E00               	movlw	0
  7250  002E80  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7251  002E82  6825               	setf	___fldiv@new_exp^0,c
  7252  002E84  0E00               	movlw	0
  7253  002E86  6E14               	movwf	___fldiv@b^0,c
  7254  002E88  0E00               	movlw	0
  7255  002E8A  6E15               	movwf	(___fldiv@b+1)^0,c
  7256  002E8C  0E00               	movlw	0
  7257  002E8E  6E16               	movwf	(___fldiv@b+2)^0,c
  7258  002E90  0E00               	movlw	0
  7259  002E92  6E17               	movwf	(___fldiv@b+3)^0,c
  7260  002E94                     l7855:
  7261  002E94  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7262  002E96  EF57  F017         	goto	u8020
  7263  002E9A  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7264  002E9C  E106               	bnz	u8021
  7265  002E9E  0425               	decf	___fldiv@new_exp^0,w,c
  7266  002EA0  B0D8               	btfsc	status,0,c
  7267  002EA2  EF55  F017         	goto	u8021
  7268  002EA6  EF57  F017         	goto	u8020
  7269  002EAA                     u8021:
  7270  002EAA  EF65  F017         	goto	l7859
  7271  002EAE                     u8020:
  7272  002EAE  0E00               	movlw	0
  7273  002EB0  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7274  002EB2  0E00               	movlw	0
  7275  002EB4  6E25               	movwf	___fldiv@new_exp^0,c
  7276  002EB6  0E00               	movlw	0
  7277  002EB8  6E14               	movwf	___fldiv@b^0,c
  7278  002EBA  0E00               	movlw	0
  7279  002EBC  6E15               	movwf	(___fldiv@b+1)^0,c
  7280  002EBE  0E00               	movlw	0
  7281  002EC0  6E16               	movwf	(___fldiv@b+2)^0,c
  7282  002EC2  0E00               	movlw	0
  7283  002EC4  6E17               	movwf	(___fldiv@b+3)^0,c
  7284  002EC6  0E00               	movlw	0
  7285  002EC8  6E24               	movwf	___fldiv@sign^0,c
  7286  002ECA                     l7859:
  7287  002ECA  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  7288  002ECE  A02B               	btfss	___fldiv@bexp^0,0,c
  7289  002ED0  EF6C  F017         	goto	u8031
  7290  002ED4  EF6E  F017         	goto	u8030
  7291  002ED8                     u8031:
  7292  002ED8  EF71  F017         	goto	l7865
  7293  002EDC                     u8030:
  7294  002EDC  8E16               	bsf	(___fldiv@b+2)^0,7,c
  7295  002EDE  EF72  F017         	goto	l7867
  7296  002EE2                     l7865:
  7297  002EE2  9E16               	bcf	(___fldiv@b+2)^0,7,c
  7298  002EE4                     l7867:
  7299  002EE4  90D8               	bcf	status,0,c
  7300  002EE6  302B               	rrcf	___fldiv@bexp^0,w,c
  7301  002EE8  6E17               	movwf	(___fldiv@b+3)^0,c
  7302  002EEA  EF28  F016         	goto	l7781
  7303  002EEE                     l1981:
  7304  002EEE  0012               	return		;funcret
  7305  002EF0                     __end_of___fldiv:
  7306                           	callstack 0
  7307                           
  7308 ;; *************** function ___awmod *****************
  7309 ;; Defined at:
  7310 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  dividend        2   19[COMRAM] int 
  7313 ;;  divisor         2   21[COMRAM] int 
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;  sign            1   24[COMRAM] unsigned char 
  7316 ;;  counter         1   23[COMRAM] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  2   19[COMRAM] int 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;Total ram usage:        6 bytes
  7331 ;; Hardware stack levels used: 1
  7332 ;; Hardware stack levels required when called: 8
  7333 ;; This function calls:
  7334 ;;		Nothing
  7335 ;; This function is called by:
  7336 ;;		_efgtoa
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text20
  7341  004F08                     __ptext20:
  7342                           	callstack 0
  7343  004F08                     ___awmod:
  7344                           	callstack 16
  7345  004F08  0E00               	movlw	0
  7346  004F0A  6E19               	movwf	___awmod@sign^0,c
  7347  004F0C  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7348  004F0E  EF8D  F027         	goto	u8290
  7349  004F12  EF8B  F027         	goto	u8291
  7350  004F16                     u8291:
  7351  004F16  EF93  F027         	goto	l8063
  7352  004F1A                     u8290:
  7353  004F1A  6C14               	negf	___awmod@dividend^0,c
  7354  004F1C  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7355  004F1E  B0D8               	btfsc	status,0,c
  7356  004F20  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7357  004F22  0E01               	movlw	1
  7358  004F24  6E19               	movwf	___awmod@sign^0,c
  7359  004F26                     l8063:
  7360  004F26  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7361  004F28  EF9A  F027         	goto	u8300
  7362  004F2C  EF98  F027         	goto	u8301
  7363  004F30                     u8301:
  7364  004F30  EF9E  F027         	goto	l8067
  7365  004F34                     u8300:
  7366  004F34  6C16               	negf	___awmod@divisor^0,c
  7367  004F36  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7368  004F38  B0D8               	btfsc	status,0,c
  7369  004F3A  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7370  004F3C                     l8067:
  7371  004F3C  5016               	movf	___awmod@divisor^0,w,c
  7372  004F3E  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7373  004F40  B4D8               	btfsc	status,2,c
  7374  004F42  EFA5  F027         	goto	u8311
  7375  004F46  EFA7  F027         	goto	u8310
  7376  004F4A                     u8311:
  7377  004F4A  EFCB  F027         	goto	l8083
  7378  004F4E                     u8310:
  7379  004F4E  0E01               	movlw	1
  7380  004F50  6E18               	movwf	___awmod@counter^0,c
  7381  004F52  EFAF  F027         	goto	l8073
  7382  004F56                     l8071:
  7383  004F56  90D8               	bcf	status,0,c
  7384  004F58  3616               	rlcf	___awmod@divisor^0,f,c
  7385  004F5A  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7386  004F5C  2A18               	incf	___awmod@counter^0,f,c
  7387  004F5E                     l8073:
  7388  004F5E  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7389  004F60  EFB4  F027         	goto	u8321
  7390  004F64  EFB6  F027         	goto	u8320
  7391  004F68                     u8321:
  7392  004F68  EFAB  F027         	goto	l8071
  7393  004F6C                     u8320:
  7394  004F6C                     l8075:
  7395  004F6C  5016               	movf	___awmod@divisor^0,w,c
  7396  004F6E  5C14               	subwf	___awmod@dividend^0,w,c
  7397  004F70  5017               	movf	(___awmod@divisor+1)^0,w,c
  7398  004F72  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7399  004F74  A0D8               	btfss	status,0,c
  7400  004F76  EFBF  F027         	goto	u8331
  7401  004F7A  EFC1  F027         	goto	u8330
  7402  004F7E                     u8331:
  7403  004F7E  EFC5  F027         	goto	l8079
  7404  004F82                     u8330:
  7405  004F82  5016               	movf	___awmod@divisor^0,w,c
  7406  004F84  5E14               	subwf	___awmod@dividend^0,f,c
  7407  004F86  5017               	movf	(___awmod@divisor+1)^0,w,c
  7408  004F88  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7409  004F8A                     l8079:
  7410  004F8A  90D8               	bcf	status,0,c
  7411  004F8C  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7412  004F8E  3216               	rrcf	___awmod@divisor^0,f,c
  7413  004F90  2E18               	decfsz	___awmod@counter^0,f,c
  7414  004F92  EFB6  F027         	goto	l8075
  7415  004F96                     l8083:
  7416  004F96  5019               	movf	___awmod@sign^0,w,c
  7417  004F98  B4D8               	btfsc	status,2,c
  7418  004F9A  EFD1  F027         	goto	u8341
  7419  004F9E  EFD3  F027         	goto	u8340
  7420  004FA2                     u8341:
  7421  004FA2  EFD7  F027         	goto	l8087
  7422  004FA6                     u8340:
  7423  004FA6  6C14               	negf	___awmod@dividend^0,c
  7424  004FA8  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7425  004FAA  B0D8               	btfsc	status,0,c
  7426  004FAC  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7427  004FAE                     l8087:
  7428  004FAE  C014  F014         	movff	___awmod@dividend,?___awmod
  7429  004FB2  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7430  004FB6  0012               	return		;funcret
  7431  004FB8                     __end_of___awmod:
  7432                           	callstack 0
  7433                           
  7434 ;; *************** function _dtoa *****************
  7435 ;; Defined at:
  7436 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7439 ;;		 -> NULL(0), 
  7440 ;;  d               8    2[BANK0 ] long long 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  n               8   18[BANK0 ] long long 
  7443 ;;  i               2   26[BANK0 ] int 
  7444 ;;  s               2   16[BANK0 ] int 
  7445 ;;  w               2   14[BANK0 ] int 
  7446 ;;  p               2   12[BANK0 ] int 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  2    0[BANK0 ] int 
  7449 ;; Registers used:
  7450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7456 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7457 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7458 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;Total ram usage:       36 bytes
  7461 ;; Hardware stack levels used: 1
  7462 ;; Hardware stack levels required when called: 13
  7463 ;; This function calls:
  7464 ;;		___aodiv
  7465 ;;		___aomod
  7466 ;;		_abs
  7467 ;;		_pad
  7468 ;; This function is called by:
  7469 ;;		_vfpfcnvrt
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text21
  7474  002EF0                     __ptext21:
  7475                           	callstack 0
  7476  002EF0                     _dtoa:
  7477                           	callstack 12
  7478  002EF0                     
  7479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7480  002EF0  C062  F072         	movff	dtoa@d,dtoa@n
  7481  002EF4  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7482  002EF8  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7483  002EFC  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7484  002F00  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7485  002F04  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7486  002F08  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7487  002F0C  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7488  002F10                     
  7489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7490  002F10  0100               	movlb	0	; () banked
  7491  002F12  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7492  002F14  EF8E  F017         	goto	u8781
  7493  002F18  EF91  F017         	goto	u8780
  7494  002F1C                     u8781:
  7495  002F1C  0E01               	movlw	1
  7496  002F1E  EF92  F017         	goto	u8790
  7497  002F22                     u8780:
  7498  002F22  0E00               	movlw	0
  7499  002F24                     u8790:
  7500  002F24  6F70               	movwf	dtoa@s& (0+255),b
  7501  002F26  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7502                           
  7503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7504  002F28  5170               	movf	dtoa@s& (0+255),w,b
  7505  002F2A  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7506  002F2C  B4D8               	btfsc	status,2,c
  7507  002F2E  EF9B  F017         	goto	u8801
  7508  002F32  EF9D  F017         	goto	u8800
  7509  002F36                     u8801:
  7510  002F36  EFAD  F017         	goto	l8277
  7511  002F3A                     u8800:
  7512  002F3A                     
  7513                           ; BSR set to: 0
  7514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7515  002F3A  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7516  002F3C  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7517  002F3E  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7518  002F40  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7519  002F42  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7520  002F44  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7521  002F46  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7522  002F48  6D72               	negf	dtoa@n& (0+255),b
  7523  002F4A  0E00               	movlw	0
  7524  002F4C  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7525  002F4E  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7526  002F50  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7527  002F52  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7528  002F54  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7529  002F56  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7530  002F58  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7531  002F5A                     l8277:
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7535  002F5A  BE3D               	btfsc	(_prec+1)^0,7,c
  7536  002F5C  EFB2  F017         	goto	u8811
  7537  002F60  EFB4  F017         	goto	u8810
  7538  002F64                     u8811:
  7539  002F64  EFB5  F017         	goto	l8281
  7540  002F68                     u8810:
  7541  002F68                     
  7542                           ; BSR set to: 0
  7543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7544  002F68  923E               	bcf	_flags^0,1,c
  7545  002F6A                     l8281:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7549  002F6A  BE3D               	btfsc	(_prec+1)^0,7,c
  7550  002F6C  EFC2  F017         	goto	u8820
  7551  002F70  503D               	movf	(_prec+1)^0,w,c
  7552  002F72  E106               	bnz	u8821
  7553  002F74  043C               	decf	_prec^0,w,c
  7554  002F76  B0D8               	btfsc	status,0,c
  7555  002F78  EFC0  F017         	goto	u8821
  7556  002F7C  EFC2  F017         	goto	u8820
  7557  002F80                     u8821:
  7558  002F80  EFC8  F017         	goto	l2127
  7559  002F84                     u8820:
  7560  002F84                     
  7561                           ; BSR set to: 0
  7562  002F84  0E00               	movlw	0
  7563  002F86  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7564  002F88  0E01               	movlw	1
  7565  002F8A  6F6C               	movwf	dtoa@p& (0+255),b
  7566  002F8C  EFCC  F017         	goto	l2129
  7567  002F90                     l2127:
  7568                           
  7569                           ; BSR set to: 0
  7570  002F90  C03C  F06C         	movff	_prec,dtoa@p
  7571  002F94  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7572  002F98                     l2129:
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7576  002F98  C03A  F06E         	movff	_width,dtoa@w
  7577  002F9C  C03B  F06F         	movff	_width+1,dtoa@w+1
  7578  002FA0                     
  7579                           ; BSR set to: 0
  7580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7581  002FA0  5170               	movf	dtoa@s& (0+255),w,b
  7582  002FA2  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7583  002FA4  A4D8               	btfss	status,2,c
  7584  002FA6  EFD7  F017         	goto	u8831
  7585  002FAA  EFD9  F017         	goto	u8830
  7586  002FAE                     u8831:
  7587  002FAE  EFE0  F017         	goto	l8289
  7588  002FB2                     u8830:
  7589  002FB2                     
  7590                           ; BSR set to: 0
  7591  002FB2  A43E               	btfss	_flags^0,2,c
  7592  002FB4  EFDE  F017         	goto	u8841
  7593  002FB8  EFE0  F017         	goto	u8840
  7594  002FBC                     u8841:
  7595  002FBC  EFE3  F017         	goto	l8291
  7596  002FC0                     u8840:
  7597  002FC0                     l8289:
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7601  002FC0  076E               	decf	dtoa@w& (0+255),f,b
  7602  002FC2  A0D8               	btfss	status,0,c
  7603  002FC4  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7604  002FC6                     l8291:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7608  002FC6  0E00               	movlw	0
  7609  002FC8  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7610  002FCA  0E4F               	movlw	79
  7611  002FCC  6F7A               	movwf	dtoa@i& (0+255),b
  7612  002FCE                     
  7613                           ; BSR set to: 0
  7614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7615  002FCE  0E00               	movlw	0
  7616  002FD0  0101               	movlb	1	; () banked
  7617  002FD2  6F83               	movwf	(_dbuf+79)& (0+255),b
  7618                           
  7619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7620  002FD4  EF69  F018         	goto	l8305
  7621  002FD8                     l8295:
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7625  002FD8  077A               	decf	dtoa@i& (0+255),f,b
  7626  002FDA  A0D8               	btfss	status,0,c
  7627  002FDC  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7628  002FDE                     
  7629                           ; BSR set to: 0
  7630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7631  002FDE  0E34               	movlw	low _dbuf
  7632  002FE0  257A               	addwf	dtoa@i& (0+255),w,b
  7633  002FE2  6ED9               	movwf	fsr2l,c
  7634  002FE4  0E01               	movlw	high _dbuf
  7635  002FE6  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7636  002FE8  6EDA               	movwf	fsr2h,c
  7637  002FEA  C072  F014         	movff	dtoa@n,___aomod@dividend
  7638  002FEE  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7639  002FF2  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7640  002FF6  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7641  002FFA  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7642  002FFE  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7643  003002  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7644  003006  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7645  00300A  0E0A               	movlw	10
  7646  00300C  6E1C               	movwf	___aomod@divisor^0,c
  7647  00300E  0E00               	movlw	0
  7648  003010  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7649  003012  0E00               	movlw	0
  7650  003014  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7651  003016  0E00               	movlw	0
  7652  003018  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7653  00301A  0E00               	movlw	0
  7654  00301C  6E20               	movwf	(___aomod@divisor+4)^0,c
  7655  00301E  0E00               	movlw	0
  7656  003020  6E21               	movwf	(___aomod@divisor+5)^0,c
  7657  003022  0E00               	movlw	0
  7658  003024  6E22               	movwf	(___aomod@divisor+6)^0,c
  7659  003026  0E00               	movlw	0
  7660  003028  6E23               	movwf	(___aomod@divisor+7)^0,c
  7661  00302A  EC8F  F020         	call	___aomod	;wreg free
  7662  00302E  C014  F031         	movff	?___aomod,??_dtoa
  7663  003032  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7664  003036  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7665  00303A  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7666  00303E  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7667  003042  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7668  003046  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7669  00304A  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7670  00304E  C031  F026         	movff	??_dtoa,abs@a
  7671  003052  C033  F027         	movff	??_dtoa+2,abs@a+1
  7672  003056  ECB5  F02B         	call	_abs	;wreg free
  7673  00305A  5026               	movf	?_abs^0,w,c
  7674  00305C  0F30               	addlw	48
  7675  00305E  6EDF               	movwf	indf2,c
  7676  003060                     
  7677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7678  003060  0100               	movlb	0	; () banked
  7679  003062  076C               	decf	dtoa@p& (0+255),f,b
  7680  003064  A0D8               	btfss	status,0,c
  7681  003066  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7682  003068                     
  7683                           ; BSR set to: 0
  7684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7685  003068  076E               	decf	dtoa@w& (0+255),f,b
  7686  00306A  A0D8               	btfss	status,0,c
  7687  00306C  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7688  00306E                     
  7689                           ; BSR set to: 0
  7690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7691  00306E  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7692  003072  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7693  003076  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7694  00307A  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7695  00307E  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7696  003082  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7697  003086  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7698  00308A  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7699  00308E  0E0A               	movlw	10
  7700  003090  6E1C               	movwf	___aodiv@divisor^0,c
  7701  003092  0E00               	movlw	0
  7702  003094  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7703  003096  0E00               	movlw	0
  7704  003098  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7705  00309A  0E00               	movlw	0
  7706  00309C  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7707  00309E  0E00               	movlw	0
  7708  0030A0  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7709  0030A2  0E00               	movlw	0
  7710  0030A4  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7711  0030A6  0E00               	movlw	0
  7712  0030A8  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7713  0030AA  0E00               	movlw	0
  7714  0030AC  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7715  0030AE  EC0C  F01F         	call	___aodiv	;wreg free
  7716  0030B2  C014  F072         	movff	?___aodiv,dtoa@n
  7717  0030B6  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7718  0030BA  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7719  0030BE  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7720  0030C2  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7721  0030C6  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7722  0030CA  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7723  0030CE  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7724  0030D2                     l8305:
  7725                           
  7726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7727  0030D2  0100               	movlb	0	; () banked
  7728  0030D4  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7729  0030D6  EF75  F018         	goto	u8851
  7730  0030DA  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7731  0030DC  E108               	bnz	u8850
  7732  0030DE  057A               	decf	dtoa@i& (0+255),w,b
  7733  0030E0  A0D8               	btfss	status,0,c
  7734  0030E2  EF75  F018         	goto	u8851
  7735  0030E6  EF77  F018         	goto	u8850
  7736  0030EA                     u8851:
  7737  0030EA  EFA7  F018         	goto	l8315
  7738  0030EE                     u8850:
  7739  0030EE                     
  7740                           ; BSR set to: 0
  7741  0030EE  5172               	movf	dtoa@n& (0+255),w,b
  7742  0030F0  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7743  0030F2  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7744  0030F4  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7745  0030F6  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7746  0030F8  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7747  0030FA  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7748  0030FC  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7749  0030FE  A4D8               	btfss	status,2,c
  7750  003100  EF84  F018         	goto	u8861
  7751  003104  EF86  F018         	goto	u8860
  7752  003108                     u8861:
  7753  003108  EFEC  F017         	goto	l8295
  7754  00310C                     u8860:
  7755  00310C                     
  7756                           ; BSR set to: 0
  7757  00310C  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7758  00310E  EF93  F018         	goto	u8870
  7759  003112  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7760  003114  E106               	bnz	u8871
  7761  003116  056C               	decf	dtoa@p& (0+255),w,b
  7762  003118  B0D8               	btfsc	status,0,c
  7763  00311A  EF91  F018         	goto	u8871
  7764  00311E  EF93  F018         	goto	u8870
  7765  003122                     u8871:
  7766  003122  EFEC  F017         	goto	l8295
  7767  003126                     u8870:
  7768  003126                     
  7769                           ; BSR set to: 0
  7770  003126  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7771  003128  EF9E  F018         	goto	u8881
  7772  00312C  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7773  00312E  E108               	bnz	u8880
  7774  003130  056E               	decf	dtoa@w& (0+255),w,b
  7775  003132  A0D8               	btfss	status,0,c
  7776  003134  EF9E  F018         	goto	u8881
  7777  003138  EFA0  F018         	goto	u8880
  7778  00313C                     u8881:
  7779  00313C  EFA7  F018         	goto	l8315
  7780  003140                     u8880:
  7781  003140                     
  7782                           ; BSR set to: 0
  7783  003140  B23E               	btfsc	_flags^0,1,c
  7784  003142  EFA5  F018         	goto	u8891
  7785  003146  EFA7  F018         	goto	u8890
  7786  00314A                     u8891:
  7787  00314A  EFEC  F017         	goto	l8295
  7788  00314E                     u8890:
  7789  00314E                     l8315:
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7793  00314E  5170               	movf	dtoa@s& (0+255),w,b
  7794  003150  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7795  003152  A4D8               	btfss	status,2,c
  7796  003154  EFAE  F018         	goto	u8901
  7797  003158  EFB0  F018         	goto	u8900
  7798  00315C                     u8901:
  7799  00315C  EFB7  F018         	goto	l8319
  7800  003160                     u8900:
  7801  003160                     
  7802                           ; BSR set to: 0
  7803  003160  A43E               	btfss	_flags^0,2,c
  7804  003162  EFB5  F018         	goto	u8911
  7805  003166  EFB7  F018         	goto	u8910
  7806  00316A                     u8911:
  7807  00316A  EFD6  F018         	goto	l8329
  7808  00316E                     u8910:
  7809  00316E                     l8319:
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7813  00316E  077A               	decf	dtoa@i& (0+255),f,b
  7814  003170  A0D8               	btfss	status,0,c
  7815  003172  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7816  003174                     
  7817                           ; BSR set to: 0
  7818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7819  003174  5170               	movf	dtoa@s& (0+255),w,b
  7820  003176  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7821  003178  A4D8               	btfss	status,2,c
  7822  00317A  EFC1  F018         	goto	u8921
  7823  00317E  EFC3  F018         	goto	u8920
  7824  003182                     u8921:
  7825  003182  EFC9  F018         	goto	l8325
  7826  003186                     u8920:
  7827  003186                     
  7828                           ; BSR set to: 0
  7829  003186  0E00               	movlw	0
  7830  003188  6F6B               	movwf	(_dtoa$3530+1)& (0+255),b
  7831  00318A  0E2B               	movlw	43
  7832  00318C  6F6A               	movwf	_dtoa$3530& (0+255),b
  7833  00318E  EFCD  F018         	goto	l8327
  7834  003192                     l8325:
  7835                           
  7836                           ; BSR set to: 0
  7837  003192  0E00               	movlw	0
  7838  003194  6F6B               	movwf	(_dtoa$3530+1)& (0+255),b
  7839  003196  0E2D               	movlw	45
  7840  003198  6F6A               	movwf	_dtoa$3530& (0+255),b
  7841  00319A                     l8327:
  7842                           
  7843                           ; BSR set to: 0
  7844  00319A  0E34               	movlw	low _dbuf
  7845  00319C  257A               	addwf	dtoa@i& (0+255),w,b
  7846  00319E  6ED9               	movwf	fsr2l,c
  7847  0031A0  0E01               	movlw	high _dbuf
  7848  0031A2  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7849  0031A4  6EDA               	movwf	fsr2h,c
  7850  0031A6  0060  F1AB  FFDF   	movff	_dtoa$3530,indf2
  7851  0031AC                     l8329:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7855  0031AC  C060  F026         	movff	dtoa@fp,pad@fp
  7856  0031B0  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7857  0031B4  0E34               	movlw	low _dbuf
  7858  0031B6  257A               	addwf	dtoa@i& (0+255),w,b
  7859  0031B8  6E28               	movwf	pad@buf^0,c
  7860  0031BA  0E01               	movlw	high _dbuf
  7861  0031BC  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7862  0031BE  6E29               	movwf	(pad@buf+1)^0,c
  7863  0031C0  C06E  F02A         	movff	dtoa@w,pad@p
  7864  0031C4  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7865  0031C8  ECC3  F026         	call	_pad	;wreg free
  7866  0031CC  C026  F060         	movff	?_pad,?_dtoa
  7867  0031D0  C027  F061         	movff	?_pad+1,?_dtoa+1
  7868  0031D4  0012               	return		;funcret
  7869  0031D6                     __end_of_dtoa:
  7870                           	callstack 0
  7871                           
  7872 ;; *************** function _pad *****************
  7873 ;; Defined at:
  7874 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7877 ;;		 -> NULL(0), 
  7878 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7879 ;;		 -> dbuf(80), 
  7880 ;;  p               2   41[COMRAM] int 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  w               2   46[COMRAM] int 
  7883 ;;  i               2   44[COMRAM] int 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  2   37[COMRAM] int 
  7886 ;; Registers used:
  7887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7893 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;Total ram usage:       11 bytes
  7898 ;; Hardware stack levels used: 1
  7899 ;; Hardware stack levels required when called: 12
  7900 ;; This function calls:
  7901 ;;		_fputc
  7902 ;;		_fputs
  7903 ;;		_strlen
  7904 ;; This function is called by:
  7905 ;;		_dtoa
  7906 ;;		_efgtoa
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text22
  7911  004D86                     __ptext22:
  7912                           	callstack 0
  7913  004D86                     _pad:
  7914                           	callstack 12
  7915  004D86                     
  7916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7917  004D86  A03E               	btfss	_flags^0,0,c
  7918  004D88  EFC8  F026         	goto	u8511
  7919  004D8C  EFCA  F026         	goto	u8510
  7920  004D90                     u8511:
  7921  004D90  EFD4  F026         	goto	l8185
  7922  004D94                     u8510:
  7923  004D94                     
  7924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7925  004D94  C028  F01F         	movff	pad@buf,fputs@s
  7926  004D98  C029  F020         	movff	pad@buf+1,fputs@s+1
  7927  004D9C  C026  F021         	movff	pad@fp,fputs@fp
  7928  004DA0  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7929  004DA4  EC71  F02B         	call	_fputs	;wreg free
  7930  004DA8                     l8185:
  7931                           
  7932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7933  004DA8  BE2B               	btfsc	(pad@p+1)^0,7,c
  7934  004DAA  EFD9  F026         	goto	u8521
  7935  004DAE  EFDB  F026         	goto	u8520
  7936  004DB2                     u8521:
  7937  004DB2  EFE1  F026         	goto	l8189
  7938  004DB6                     u8520:
  7939  004DB6  C02A  F02F         	movff	pad@p,pad@w
  7940  004DBA  C02B  F030         	movff	pad@p+1,pad@w+1
  7941  004DBE  EFE5  F026         	goto	l2116
  7942  004DC2                     l8189:
  7943  004DC2  0E00               	movlw	0
  7944  004DC4  6E30               	movwf	(pad@w+1)^0,c
  7945  004DC6  0E00               	movlw	0
  7946  004DC8  6E2F               	movwf	pad@w^0,c
  7947  004DCA                     l2116:
  7948                           
  7949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7950  004DCA  0E00               	movlw	0
  7951  004DCC  6E2E               	movwf	(pad@i+1)^0,c
  7952  004DCE  0E00               	movlw	0
  7953  004DD0  6E2D               	movwf	pad@i^0,c
  7954                           
  7955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7956  004DD2  EFF7  F026         	goto	l8195
  7957  004DD6                     l8191:
  7958                           
  7959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7960  004DD6  0E00               	movlw	0
  7961  004DD8  6E17               	movwf	(fputc@c+1)^0,c
  7962  004DDA  0E20               	movlw	32
  7963  004DDC  6E16               	movwf	fputc@c^0,c
  7964  004DDE  C026  F018         	movff	pad@fp,fputc@fp
  7965  004DE2  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7966  004DE6  EC83  F028         	call	_fputc	;wreg free
  7967  004DEA                     
  7968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7969  004DEA  4A2D               	infsnz	pad@i^0,f,c
  7970  004DEC  2A2E               	incf	(pad@i+1)^0,f,c
  7971  004DEE                     l8195:
  7972                           
  7973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7974  004DEE  502F               	movf	pad@w^0,w,c
  7975  004DF0  5C2D               	subwf	pad@i^0,w,c
  7976  004DF2  502E               	movf	(pad@i+1)^0,w,c
  7977  004DF4  0A80               	xorlw	128
  7978  004DF6  6E2C               	movwf	??_pad^0,c
  7979  004DF8  5030               	movf	(pad@w+1)^0,w,c
  7980  004DFA  0A80               	xorlw	128
  7981  004DFC  582C               	subwfb	??_pad^0,w,c
  7982  004DFE  A0D8               	btfss	status,0,c
  7983  004E00  EF04  F027         	goto	u8531
  7984  004E04  EF06  F027         	goto	u8530
  7985  004E08                     u8531:
  7986  004E08  EFEB  F026         	goto	l8191
  7987  004E0C                     u8530:
  7988  004E0C                     
  7989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7990  004E0C  B03E               	btfsc	_flags^0,0,c
  7991  004E0E  EF0B  F027         	goto	u8541
  7992  004E12  EF0D  F027         	goto	u8540
  7993  004E16                     u8541:
  7994  004E16  EF17  F027         	goto	l8199
  7995  004E1A                     u8540:
  7996  004E1A                     
  7997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7998  004E1A  C028  F01F         	movff	pad@buf,fputs@s
  7999  004E1E  C029  F020         	movff	pad@buf+1,fputs@s+1
  8000  004E22  C026  F021         	movff	pad@fp,fputs@fp
  8001  004E26  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8002  004E2A  EC71  F02B         	call	_fputs	;wreg free
  8003  004E2E                     l8199:
  8004                           
  8005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8006  004E2E  C028  F014         	movff	pad@buf,strlen@s
  8007  004E32  C029  F015         	movff	pad@buf+1,strlen@s+1
  8008  004E36  ECD5  F02B         	call	_strlen	;wreg free
  8009  004E3A  502F               	movf	pad@w^0,w,c
  8010  004E3C  2414               	addwf	?_strlen^0,w,c
  8011  004E3E  6E26               	movwf	?_pad^0,c
  8012  004E40  5030               	movf	(pad@w+1)^0,w,c
  8013  004E42  2015               	addwfc	(?_strlen+1)^0,w,c
  8014  004E44  6E27               	movwf	(?_pad+1)^0,c
  8015  004E46  0012               	return		;funcret
  8016  004E48                     __end_of_pad:
  8017                           	callstack 0
  8018                           
  8019 ;; *************** function _strlen *****************
  8020 ;; Defined at:
  8021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;  s               2   19[COMRAM] PTR const unsigned char 
  8024 ;;		 -> dbuf(80), 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  a               2   21[COMRAM] PTR const unsigned char 
  8027 ;;		 -> dbuf(80), 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  2   19[COMRAM] unsigned int 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;Total ram usage:        4 bytes
  8042 ;; Hardware stack levels used: 1
  8043 ;; Hardware stack levels required when called: 8
  8044 ;; This function calls:
  8045 ;;		Nothing
  8046 ;; This function is called by:
  8047 ;;		_pad
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text23
  8052  0057AA                     __ptext23:
  8053                           	callstack 0
  8054  0057AA                     _strlen:
  8055                           	callstack 15
  8056  0057AA  C014  F016         	movff	strlen@s,strlen@a
  8057  0057AE  C015  F017         	movff	strlen@s+1,strlen@a+1
  8058  0057B2  EFDD  F02B         	goto	l7647
  8059  0057B6                     l7645:
  8060  0057B6  4A14               	infsnz	strlen@s^0,f,c
  8061  0057B8  2A15               	incf	(strlen@s+1)^0,f,c
  8062  0057BA                     l7647:
  8063  0057BA  0060  F053  FFD9   	movff	strlen@s,fsr2l
  8064  0057C0  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  8065  0057C6  50DF               	movf	indf2,w,c
  8066  0057C8  A4D8               	btfss	status,2,c
  8067  0057CA  EFE9  F02B         	goto	u7651
  8068  0057CE  EFEB  F02B         	goto	u7650
  8069  0057D2                     u7651:
  8070  0057D2  EFDB  F02B         	goto	l7645
  8071  0057D6                     u7650:
  8072  0057D6  5016               	movf	strlen@a^0,w,c
  8073  0057D8  5C14               	subwf	strlen@s^0,w,c
  8074  0057DA  6E14               	movwf	?_strlen^0,c
  8075  0057DC  5017               	movf	(strlen@a+1)^0,w,c
  8076  0057DE  5815               	subwfb	(strlen@s+1)^0,w,c
  8077  0057E0  6E15               	movwf	(?_strlen+1)^0,c
  8078  0057E2  0012               	return		;funcret
  8079  0057E4                     __end_of_strlen:
  8080                           	callstack 0
  8081                           
  8082 ;; *************** function _fputs *****************
  8083 ;; Defined at:
  8084 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8087 ;;		 -> dbuf(80), 
  8088 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8089 ;;		 -> NULL(0), 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  i               2   35[COMRAM] int 
  8092 ;;  c               1   34[COMRAM] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  2   30[COMRAM] int 
  8095 ;; Registers used:
  8096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;Total ram usage:        7 bytes
  8107 ;; Hardware stack levels used: 1
  8108 ;; Hardware stack levels required when called: 11
  8109 ;; This function calls:
  8110 ;;		_fputc
  8111 ;; This function is called by:
  8112 ;;		_pad
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text24
  8117  0056E2                     __ptext24:
  8118                           	callstack 0
  8119  0056E2                     _fputs:
  8120                           	callstack 12
  8121  0056E2  0E00               	movlw	0
  8122  0056E4  6E25               	movwf	(fputs@i+1)^0,c
  8123  0056E6  0E00               	movlw	0
  8124  0056E8  6E24               	movwf	fputs@i^0,c
  8125  0056EA  EF82  F02B         	goto	l7641
  8126  0056EE                     l7637:
  8127  0056EE  C023  F016         	movff	fputs@c,fputc@c
  8128  0056F2  6A17               	clrf	(fputc@c+1)^0,c
  8129  0056F4  C021  F018         	movff	fputs@fp,fputc@fp
  8130  0056F8  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8131  0056FC  EC83  F028         	call	_fputc	;wreg free
  8132  005700  4A24               	infsnz	fputs@i^0,f,c
  8133  005702  2A25               	incf	(fputs@i+1)^0,f,c
  8134  005704                     l7641:
  8135  005704  5024               	movf	fputs@i^0,w,c
  8136  005706  241F               	addwf	fputs@s^0,w,c
  8137  005708  6ED9               	movwf	fsr2l,c
  8138  00570A  5025               	movf	(fputs@i+1)^0,w,c
  8139  00570C  2020               	addwfc	(fputs@s+1)^0,w,c
  8140  00570E  6EDA               	movwf	fsr2h,c
  8141  005710  50DF               	movf	indf2,w,c
  8142  005712  6E23               	movwf	fputs@c^0,c
  8143  005714  5023               	movf	fputs@c^0,w,c
  8144  005716  A4D8               	btfss	status,2,c
  8145  005718  EF90  F02B         	goto	u7641
  8146  00571C  EF92  F02B         	goto	u7640
  8147  005720                     u7641:
  8148  005720  EF77  F02B         	goto	l7637
  8149  005724                     u7640:
  8150  005724  0012               	return		;funcret
  8151  005726                     __end_of_fputs:
  8152                           	callstack 0
  8153                           
  8154 ;; *************** function _fputc *****************
  8155 ;; Defined at:
  8156 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;  c               2   21[COMRAM] int 
  8159 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8160 ;;		 -> NULL(0), 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  2   21[COMRAM] int 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8174 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8175 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8176 ;;Total ram usage:        9 bytes
  8177 ;; Hardware stack levels used: 1
  8178 ;; Hardware stack levels required when called: 10
  8179 ;; This function calls:
  8180 ;;		_putch
  8181 ;; This function is called by:
  8182 ;;		_pad
  8183 ;;		_vfpfcnvrt
  8184 ;;		_fputs
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text25
  8189  005106                     __ptext25:
  8190                           	callstack 0
  8191  005106                     _fputc:
  8192                           	callstack 15
  8193  005106  5018               	movf	fputc@fp^0,w,c
  8194  005108  1019               	iorwf	(fputc@fp+1)^0,w,c
  8195  00510A  B4D8               	btfsc	status,2,c
  8196  00510C  EF8A  F028         	goto	u7211
  8197  005110  EF8C  F028         	goto	u7210
  8198  005114                     u7211:
  8199  005114  EF95  F028         	goto	l7423
  8200  005118                     u7210:
  8201  005118  5018               	movf	fputc@fp^0,w,c
  8202  00511A  1019               	iorwf	(fputc@fp+1)^0,w,c
  8203  00511C  A4D8               	btfss	status,2,c
  8204  00511E  EF93  F028         	goto	u7221
  8205  005122  EF95  F028         	goto	u7220
  8206  005126                     u7221:
  8207  005126  EF9A  F028         	goto	l7425
  8208  00512A                     u7220:
  8209  00512A                     l7423:
  8210  00512A  5016               	movf	fputc@c^0,w,c
  8211  00512C  EC16  F02F         	call	_putch
  8212  005130  EFCD  F028         	goto	l2313
  8213  005134                     l7425:
  8214  005134  EE20 F004          	lfsr	2,4
  8215  005138  5018               	movf	fputc@fp^0,w,c
  8216  00513A  26D9               	addwf	fsr2l,f,c
  8217  00513C  5019               	movf	(fputc@fp+1)^0,w,c
  8218  00513E  22DA               	addwfc	fsr2h,f,c
  8219  005140  50DE               	movf	postinc2,w,c
  8220  005142  10DE               	iorwf	postinc2,w,c
  8221  005144  B4D8               	btfsc	status,2,c
  8222  005146  EFA7  F028         	goto	u7231
  8223  00514A  EFA9  F028         	goto	u7230
  8224  00514E                     u7231:
  8225  00514E  EFC4  F028         	goto	l7429
  8226  005152                     u7230:
  8227  005152  EE20 F004          	lfsr	2,4
  8228  005156  5018               	movf	fputc@fp^0,w,c
  8229  005158  26D9               	addwf	fsr2l,f,c
  8230  00515A  5019               	movf	(fputc@fp+1)^0,w,c
  8231  00515C  22DA               	addwfc	fsr2h,f,c
  8232  00515E  EE10 F002          	lfsr	1,2
  8233  005162  5018               	movf	fputc@fp^0,w,c
  8234  005164  26E1               	addwf	fsr1l,f,c
  8235  005166  5019               	movf	(fputc@fp+1)^0,w,c
  8236  005168  22E2               	addwfc	fsr1h,f,c
  8237  00516A  50DE               	movf	postinc2,w,c
  8238  00516C  5CE6               	subwf	postinc1,w,c
  8239  00516E  50E6               	movf	postinc1,w,c
  8240  005170  0A80               	xorlw	128
  8241  005172  6E1E               	movwf	(??_fputc+4)^0,c
  8242  005174  50DE               	movf	postinc2,w,c
  8243  005176  0A80               	xorlw	128
  8244  005178  581E               	subwfb	(??_fputc+4)^0,w,c
  8245  00517A  B0D8               	btfsc	status,0,c
  8246  00517C  EFC2  F028         	goto	u7241
  8247  005180  EFC4  F028         	goto	u7240
  8248  005184                     u7241:
  8249  005184  EFCD  F028         	goto	l2313
  8250  005188                     u7240:
  8251  005188                     l7429:
  8252  005188  EE20 F002          	lfsr	2,2
  8253  00518C  5018               	movf	fputc@fp^0,w,c
  8254  00518E  26D9               	addwf	fsr2l,f,c
  8255  005190  5019               	movf	(fputc@fp+1)^0,w,c
  8256  005192  22DA               	addwfc	fsr2h,f,c
  8257  005194  2ADE               	incf	postinc2,f,c
  8258  005196  0E00               	movlw	0
  8259  005198  22DD               	addwfc	postdec2,f,c
  8260  00519A                     l2313:
  8261  00519A  0012               	return		;funcret
  8262  00519C                     __end_of_fputc:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _putch *****************
  8266 ;; Defined at:
  8267 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  txData          1    wreg     unsigned char 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  txData          1   20[COMRAM] unsigned char 
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8285 ;;Total ram usage:        1 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; Hardware stack levels required when called: 9
  8288 ;; This function calls:
  8289 ;;		_UART1_Write
  8290 ;; This function is called by:
  8291 ;;		_fputc
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text26
  8296  005E2C                     __ptext26:
  8297                           	callstack 0
  8298  005E2C                     _putch:
  8299                           	callstack 15
  8300                           
  8301                           ;incstack = 0
  8302                           ;putch@txData stored from wreg
  8303  005E2C  6E15               	movwf	putch@txData^0,c
  8304  005E2E                     
  8305                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8306  005E2E  5015               	movf	putch@txData^0,w,c
  8307  005E30  EC31  F02A         	call	_UART1_Write
  8308  005E34  0012               	return		;funcret
  8309  005E36                     __end_of_putch:
  8310                           	callstack 0
  8311                           
  8312 ;; *************** function _UART1_Write *****************
  8313 ;; Defined at:
  8314 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  txData          1    wreg     unsigned char 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  txData          1   19[COMRAM] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      void 
  8321 ;; Registers used:
  8322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;Total ram usage:        1 bytes
  8333 ;; Hardware stack levels used: 1
  8334 ;; Hardware stack levels required when called: 8
  8335 ;; This function calls:
  8336 ;;		Nothing
  8337 ;; This function is called by:
  8338 ;;		_putch
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           	psect	text27
  8343  005462                     __ptext27:
  8344                           	callstack 0
  8345  005462                     _UART1_Write:
  8346                           	callstack 15
  8347                           
  8348                           ;incstack = 0
  8349                           ;UART1_Write@txData stored from wreg
  8350  005462  6E14               	movwf	UART1_Write@txData^0,c
  8351  005464                     l7401:
  8352                           
  8353                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8354  005464  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8355  005466  B4D8               	btfsc	status,2,c
  8356  005468  EF38  F02A         	goto	u7181
  8357  00546C  EF3A  F02A         	goto	u7180
  8358  005470                     u7181:
  8359  005470  EF32  F02A         	goto	l7401
  8360  005474                     u7180:
  8361  005474                     
  8362                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8363  005474  0139               	movlb	57	; () banked
  8364  005476  B993               	btfsc	147,4,b	;volatile
  8365  005478  EF40  F02A         	goto	u7191
  8366  00547C  EF42  F02A         	goto	u7190
  8367  005480                     u7191:
  8368  005480  EF47  F02A         	goto	l309
  8369  005484                     u7190:
  8370  005484                     
  8371                           ; BSR set to: 57
  8372                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8373  005484  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8374                           
  8375                           ;mcc_generated_files/uart1.c: 211:     }
  8376  00548A  EF5D  F02A         	goto	l7415
  8377  00548E                     l309:
  8378                           
  8379                           ; BSR set to: 57
  8380                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8381  00548E  9993               	bcf	147,4,b	;volatile
  8382  005490                     
  8383                           ; BSR set to: 57
  8384                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8385  005490  0E10               	movlw	low _uart1TxBuffer
  8386  005492  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8387  005494  6ED9               	movwf	fsr2l,c
  8388  005496  6ADA               	clrf	fsr2h,c
  8389  005498  0E01               	movlw	high _uart1TxBuffer
  8390  00549A  22DA               	addwfc	fsr2h,f,c
  8391  00549C  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8392  0054A2                     
  8393                           ; BSR set to: 57
  8394  0054A2  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8395  0054A4                     
  8396                           ; BSR set to: 57
  8397                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8398  0054A4  0E07               	movlw	7
  8399  0054A6  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8400  0054A8  EF58  F02A         	goto	u7201
  8401  0054AC  EF5A  F02A         	goto	u7200
  8402  0054B0                     u7201:
  8403  0054B0  EF5C  F02A         	goto	l7413
  8404  0054B4                     u7200:
  8405  0054B4                     
  8406                           ; BSR set to: 57
  8407                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8408  0054B4  0E00               	movlw	0
  8409  0054B6  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8410  0054B8                     l7413:
  8411                           
  8412                           ; BSR set to: 57
  8413                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8414  0054B8  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8415  0054BA                     l7415:
  8416                           
  8417                           ; BSR set to: 57
  8418                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8419  0054BA  8993               	bsf	147,4,b	;volatile
  8420  0054BC                     
  8421                           ; BSR set to: 57
  8422  0054BC  0012               	return		;funcret
  8423  0054BE                     __end_of_UART1_Write:
  8424                           	callstack 0
  8425                           
  8426 ;; *************** function _abs *****************
  8427 ;; Defined at:
  8428 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  a               2   37[COMRAM] int 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  2   37[COMRAM] int 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;Total ram usage:        4 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 8
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		_dtoa
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text28
  8457  00576A                     __ptext28:
  8458                           	callstack 0
  8459  00576A                     _abs:
  8460                           	callstack 16
  8461  00576A  BE27               	btfsc	(abs@a+1)^0,7,c
  8462  00576C  EFC2  F02B         	goto	u8550
  8463  005770  5027               	movf	(abs@a+1)^0,w,c
  8464  005772  E106               	bnz	u8551
  8465  005774  0426               	decf	abs@a^0,w,c
  8466  005776  B0D8               	btfsc	status,0,c
  8467  005778  EFC0  F02B         	goto	u8551
  8468  00577C  EFC2  F02B         	goto	u8550
  8469  005780                     u8551:
  8470  005780  EFD0  F02B         	goto	l2279
  8471  005784                     u8550:
  8472  005784  C026  F028         	movff	abs@a,??_abs
  8473  005788  C027  F029         	movff	abs@a+1,??_abs+1
  8474  00578C  1E28               	comf	??_abs^0,f,c
  8475  00578E  1E29               	comf	(??_abs+1)^0,f,c
  8476  005790  4A28               	infsnz	??_abs^0,f,c
  8477  005792  2A29               	incf	(??_abs+1)^0,f,c
  8478  005794  C028  F026         	movff	??_abs,?_abs
  8479  005798  C029  F027         	movff	??_abs+1,?_abs+1
  8480  00579C  EFD4  F02B         	goto	l2282
  8481  0057A0                     l2279:
  8482  0057A0  C026  F026         	movff	abs@a,?_abs
  8483  0057A4  C027  F027         	movff	abs@a+1,?_abs+1
  8484  0057A8                     l2282:
  8485  0057A8  0012               	return		;funcret
  8486  0057AA                     __end_of_abs:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function ___aomod *****************
  8490 ;; Defined at:
  8491 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  dividend        8   19[COMRAM] long long 
  8494 ;;  divisor         8   27[COMRAM] long long 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  sign            1   36[COMRAM] unsigned char 
  8497 ;;  counter         1   35[COMRAM] unsigned char 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  8   19[COMRAM] long long 
  8500 ;; Registers used:
  8501 ;;		wreg, status,2, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8507 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;Total ram usage:       18 bytes
  8512 ;; Hardware stack levels used: 1
  8513 ;; Hardware stack levels required when called: 8
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_dtoa
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text29
  8522  00411E                     __ptext29:
  8523                           	callstack 0
  8524  00411E                     ___aomod:
  8525                           	callstack 16
  8526  00411E  0E00               	movlw	0
  8527  004120  6E25               	movwf	___aomod@sign^0,c
  8528  004122  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8529  004124  EF98  F020         	goto	u7750
  8530  004128  EF96  F020         	goto	u7751
  8531  00412C                     u7751:
  8532  00412C  EFAA  F020         	goto	l7709
  8533  004130                     u7750:
  8534  004130  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8535  004132  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8536  004134  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8537  004136  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8538  004138  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8539  00413A  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8540  00413C  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8541  00413E  6C14               	negf	___aomod@dividend^0,c
  8542  004140  0E00               	movlw	0
  8543  004142  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8544  004144  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8545  004146  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8546  004148  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8547  00414A  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8548  00414C  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8549  00414E  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8550  004150  0E01               	movlw	1
  8551  004152  6E25               	movwf	___aomod@sign^0,c
  8552  004154                     l7709:
  8553  004154  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8554  004156  EFB1  F020         	goto	u7760
  8555  00415A  EFAF  F020         	goto	u7761
  8556  00415E                     u7761:
  8557  00415E  EFC1  F020         	goto	l7713
  8558  004162                     u7760:
  8559  004162  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8560  004164  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8561  004166  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8562  004168  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8563  00416A  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8564  00416C  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8565  00416E  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8566  004170  6C1C               	negf	___aomod@divisor^0,c
  8567  004172  0E00               	movlw	0
  8568  004174  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8569  004176  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8570  004178  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8571  00417A  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8572  00417C  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8573  00417E  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8574  004180  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8575  004182                     l7713:
  8576  004182  501C               	movf	___aomod@divisor^0,w,c
  8577  004184  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8578  004186  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8579  004188  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8580  00418A  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8581  00418C  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8582  00418E  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8583  004190  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8584  004192  B4D8               	btfsc	status,2,c
  8585  004194  EFCE  F020         	goto	u7771
  8586  004198  EFD0  F020         	goto	u7770
  8587  00419C                     u7771:
  8588  00419C  EF18  F021         	goto	l7729
  8589  0041A0                     u7770:
  8590  0041A0  0E01               	movlw	1
  8591  0041A2  6E24               	movwf	___aomod@counter^0,c
  8592  0041A4  EFDE  F020         	goto	l7719
  8593  0041A8                     l7717:
  8594  0041A8  90D8               	bcf	status,0,c
  8595  0041AA  361C               	rlcf	___aomod@divisor^0,f,c
  8596  0041AC  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8597  0041AE  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8598  0041B0  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8599  0041B2  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8600  0041B4  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8601  0041B6  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8602  0041B8  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8603  0041BA  2A24               	incf	___aomod@counter^0,f,c
  8604  0041BC                     l7719:
  8605  0041BC  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8606  0041BE  EFE3  F020         	goto	u7781
  8607  0041C2  EFE5  F020         	goto	u7780
  8608  0041C6                     u7781:
  8609  0041C6  EFD4  F020         	goto	l7717
  8610  0041CA                     u7780:
  8611  0041CA                     l7721:
  8612  0041CA  501C               	movf	___aomod@divisor^0,w,c
  8613  0041CC  5C14               	subwf	___aomod@dividend^0,w,c
  8614  0041CE  501D               	movf	(___aomod@divisor+1)^0,w,c
  8615  0041D0  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8616  0041D2  501E               	movf	(___aomod@divisor+2)^0,w,c
  8617  0041D4  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8618  0041D6  501F               	movf	(___aomod@divisor+3)^0,w,c
  8619  0041D8  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8620  0041DA  5020               	movf	(___aomod@divisor+4)^0,w,c
  8621  0041DC  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8622  0041DE  5021               	movf	(___aomod@divisor+5)^0,w,c
  8623  0041E0  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8624  0041E2  5022               	movf	(___aomod@divisor+6)^0,w,c
  8625  0041E4  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8626  0041E6  5023               	movf	(___aomod@divisor+7)^0,w,c
  8627  0041E8  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8628  0041EA  A0D8               	btfss	status,0,c
  8629  0041EC  EFFA  F020         	goto	u7791
  8630  0041F0  EFFC  F020         	goto	u7790
  8631  0041F4                     u7791:
  8632  0041F4  EF0C  F021         	goto	l7725
  8633  0041F8                     u7790:
  8634  0041F8  501C               	movf	___aomod@divisor^0,w,c
  8635  0041FA  5E14               	subwf	___aomod@dividend^0,f,c
  8636  0041FC  501D               	movf	(___aomod@divisor+1)^0,w,c
  8637  0041FE  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8638  004200  501E               	movf	(___aomod@divisor+2)^0,w,c
  8639  004202  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8640  004204  501F               	movf	(___aomod@divisor+3)^0,w,c
  8641  004206  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8642  004208  5020               	movf	(___aomod@divisor+4)^0,w,c
  8643  00420A  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8644  00420C  5021               	movf	(___aomod@divisor+5)^0,w,c
  8645  00420E  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8646  004210  5022               	movf	(___aomod@divisor+6)^0,w,c
  8647  004212  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8648  004214  5023               	movf	(___aomod@divisor+7)^0,w,c
  8649  004216  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8650  004218                     l7725:
  8651  004218  90D8               	bcf	status,0,c
  8652  00421A  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8653  00421C  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8654  00421E  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8655  004220  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8656  004222  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8657  004224  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8658  004226  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8659  004228  321C               	rrcf	___aomod@divisor^0,f,c
  8660  00422A  2E24               	decfsz	___aomod@counter^0,f,c
  8661  00422C  EFE5  F020         	goto	l7721
  8662  004230                     l7729:
  8663  004230  5025               	movf	___aomod@sign^0,w,c
  8664  004232  B4D8               	btfsc	status,2,c
  8665  004234  EF1E  F021         	goto	u7801
  8666  004238  EF20  F021         	goto	u7800
  8667  00423C                     u7801:
  8668  00423C  EF30  F021         	goto	l7733
  8669  004240                     u7800:
  8670  004240  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8671  004242  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8672  004244  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8673  004246  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8674  004248  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8675  00424A  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8676  00424C  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8677  00424E  6C14               	negf	___aomod@dividend^0,c
  8678  004250  0E00               	movlw	0
  8679  004252  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8680  004254  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8681  004256  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8682  004258  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8683  00425A  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8684  00425C  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8685  00425E  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8686  004260                     l7733:
  8687  004260  C014  F014         	movff	___aomod@dividend,?___aomod
  8688  004264  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8689  004268  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8690  00426C  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8691  004270  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8692  004274  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8693  004278  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8694  00427C  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8695  004280  0012               	return		;funcret
  8696  004282                     __end_of___aomod:
  8697                           	callstack 0
  8698                           
  8699 ;; *************** function ___aodiv *****************
  8700 ;; Defined at:
  8701 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  dividend        8   19[COMRAM] long long 
  8704 ;;  divisor         8   27[COMRAM] long long 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  quotient        8   37[COMRAM] long long 
  8707 ;;  sign            1   36[COMRAM] unsigned char 
  8708 ;;  counter         1   35[COMRAM] unsigned char 
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  8   19[COMRAM] long long 
  8711 ;; Registers used:
  8712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8718 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8721 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8722 ;;Total ram usage:       26 bytes
  8723 ;; Hardware stack levels used: 1
  8724 ;; Hardware stack levels required when called: 8
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		_dtoa
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text30
  8733  003E18                     __ptext30:
  8734                           	callstack 0
  8735  003E18                     ___aodiv:
  8736                           	callstack 16
  8737  003E18  0E00               	movlw	0
  8738  003E1A  6E25               	movwf	___aodiv@sign^0,c
  8739  003E1C  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8740  003E1E  EF15  F01F         	goto	u7680
  8741  003E22  EF13  F01F         	goto	u7681
  8742  003E26                     u7681:
  8743  003E26  EF27  F01F         	goto	l7665
  8744  003E2A                     u7680:
  8745  003E2A  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8746  003E2C  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8747  003E2E  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8748  003E30  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8749  003E32  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8750  003E34  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8751  003E36  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8752  003E38  6C1C               	negf	___aodiv@divisor^0,c
  8753  003E3A  0E00               	movlw	0
  8754  003E3C  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8755  003E3E  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8756  003E40  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8757  003E42  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8758  003E44  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8759  003E46  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8760  003E48  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8761  003E4A  0E01               	movlw	1
  8762  003E4C  6E25               	movwf	___aodiv@sign^0,c
  8763  003E4E                     l7665:
  8764  003E4E  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8765  003E50  EF2E  F01F         	goto	u7690
  8766  003E54  EF2C  F01F         	goto	u7691
  8767  003E58                     u7691:
  8768  003E58  EF40  F01F         	goto	l7671
  8769  003E5C                     u7690:
  8770  003E5C  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8771  003E5E  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8772  003E60  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8773  003E62  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8774  003E64  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8775  003E66  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8776  003E68  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8777  003E6A  6C14               	negf	___aodiv@dividend^0,c
  8778  003E6C  0E00               	movlw	0
  8779  003E6E  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8780  003E70  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8781  003E72  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8782  003E74  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8783  003E76  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8784  003E78  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8785  003E7A  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8786  003E7C  0E01               	movlw	1
  8787  003E7E  1A25               	xorwf	___aodiv@sign^0,f,c
  8788  003E80                     l7671:
  8789  003E80  EE20  F026         	lfsr	2,___aodiv@quotient
  8790  003E84  0E07               	movlw	7
  8791  003E86                     u7701:
  8792  003E86  6ADE               	clrf	postinc2,c
  8793  003E88  06E8               	decf	wreg,f,c
  8794  003E8A  E2FD               	bc	u7701
  8795  003E8C  501C               	movf	___aodiv@divisor^0,w,c
  8796  003E8E  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8797  003E90  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8798  003E92  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8799  003E94  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8800  003E96  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8801  003E98  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8802  003E9A  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8803  003E9C  B4D8               	btfsc	status,2,c
  8804  003E9E  EF53  F01F         	goto	u7711
  8805  003EA2  EF55  F01F         	goto	u7710
  8806  003EA6                     u7711:
  8807  003EA6  EFA7  F01F         	goto	l7693
  8808  003EAA                     u7710:
  8809  003EAA  0E01               	movlw	1
  8810  003EAC  6E24               	movwf	___aodiv@counter^0,c
  8811  003EAE  EF63  F01F         	goto	l7679
  8812  003EB2                     l7677:
  8813  003EB2  90D8               	bcf	status,0,c
  8814  003EB4  361C               	rlcf	___aodiv@divisor^0,f,c
  8815  003EB6  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8816  003EB8  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8817  003EBA  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8818  003EBC  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8819  003EBE  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8820  003EC0  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8821  003EC2  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8822  003EC4  2A24               	incf	___aodiv@counter^0,f,c
  8823  003EC6                     l7679:
  8824  003EC6  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8825  003EC8  EF68  F01F         	goto	u7721
  8826  003ECC  EF6A  F01F         	goto	u7720
  8827  003ED0                     u7721:
  8828  003ED0  EF59  F01F         	goto	l7677
  8829  003ED4                     u7720:
  8830  003ED4                     l7681:
  8831  003ED4  90D8               	bcf	status,0,c
  8832  003ED6  3626               	rlcf	___aodiv@quotient^0,f,c
  8833  003ED8  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8834  003EDA  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8835  003EDC  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8836  003EDE  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8837  003EE0  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8838  003EE2  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8839  003EE4  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8840  003EE6  501C               	movf	___aodiv@divisor^0,w,c
  8841  003EE8  5C14               	subwf	___aodiv@dividend^0,w,c
  8842  003EEA  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8843  003EEC  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8844  003EEE  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8845  003EF0  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8846  003EF2  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8847  003EF4  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8848  003EF6  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8849  003EF8  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8850  003EFA  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8851  003EFC  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8852  003EFE  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8853  003F00  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8854  003F02  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8855  003F04  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8856  003F06  A0D8               	btfss	status,0,c
  8857  003F08  EF88  F01F         	goto	u7731
  8858  003F0C  EF8A  F01F         	goto	u7730
  8859  003F10                     u7731:
  8860  003F10  EF9B  F01F         	goto	l7689
  8861  003F14                     u7730:
  8862  003F14  501C               	movf	___aodiv@divisor^0,w,c
  8863  003F16  5E14               	subwf	___aodiv@dividend^0,f,c
  8864  003F18  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8865  003F1A  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8866  003F1C  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8867  003F1E  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8868  003F20  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8869  003F22  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8870  003F24  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8871  003F26  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8872  003F28  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8873  003F2A  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8874  003F2C  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8875  003F2E  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8876  003F30  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8877  003F32  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8878  003F34  8026               	bsf	___aodiv@quotient^0,0,c
  8879  003F36                     l7689:
  8880  003F36  90D8               	bcf	status,0,c
  8881  003F38  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8882  003F3A  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8883  003F3C  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8884  003F3E  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8885  003F40  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8886  003F42  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8887  003F44  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8888  003F46  321C               	rrcf	___aodiv@divisor^0,f,c
  8889  003F48  2E24               	decfsz	___aodiv@counter^0,f,c
  8890  003F4A  EF6A  F01F         	goto	l7681
  8891  003F4E                     l7693:
  8892  003F4E  5025               	movf	___aodiv@sign^0,w,c
  8893  003F50  B4D8               	btfsc	status,2,c
  8894  003F52  EFAD  F01F         	goto	u7741
  8895  003F56  EFAF  F01F         	goto	u7740
  8896  003F5A                     u7741:
  8897  003F5A  EFBF  F01F         	goto	l7697
  8898  003F5E                     u7740:
  8899  003F5E  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8900  003F60  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8901  003F62  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8902  003F64  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8903  003F66  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8904  003F68  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8905  003F6A  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8906  003F6C  6C26               	negf	___aodiv@quotient^0,c
  8907  003F6E  0E00               	movlw	0
  8908  003F70  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8909  003F72  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8910  003F74  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8911  003F76  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8912  003F78  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8913  003F7A  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8914  003F7C  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8915  003F7E                     l7697:
  8916  003F7E  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8917  003F82  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8918  003F86  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8919  003F8A  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8920  003F8E  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8921  003F92  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8922  003F96  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8923  003F9A  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8924  003F9E  0012               	return		;funcret
  8925  003FA0                     __end_of___aodiv:
  8926                           	callstack 0
  8927                           
  8928 ;; *************** function _checkBatt *****************
  8929 ;; Defined at:
  8930 ;;		line 83 in file "main.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;		None
  8933 ;; Auto vars:     Size  Location     Type
  8934 ;;		None
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  1    wreg      _Bool 
  8937 ;; Registers used:
  8938 ;;		wreg, status,2, status,0, cstack
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;Total ram usage:        0 bytes
  8949 ;; Hardware stack levels used: 1
  8950 ;; Hardware stack levels required when called: 10
  8951 ;; This function calls:
  8952 ;;		___flge
  8953 ;;		___xxtofl
  8954 ;;		_getBatteryVoltage
  8955 ;;		_setSteering
  8956 ;; This function is called by:
  8957 ;;		_loop
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           	psect	text31
  8962  005230                     __ptext31:
  8963                           	callstack 0
  8964  005230                     _checkBatt:
  8965                           	callstack 19
  8966  005230                     
  8967                           ;main.c: 84:     ++battCheckCount;
  8968  005230  0101               	movlb	1	; () banked
  8969  005232  4B30               	infsnz	_battCheckCount& (0+255),f,b
  8970  005234  2B31               	incf	(_battCheckCount+1)& (0+255),f,b
  8971  005236                     
  8972                           ; BSR set to: 1
  8973                           ;main.c: 85:     if (battCheckCount > (500)) {
  8974  005236  0EF5               	movlw	245
  8975  005238  5D30               	subwf	_battCheckCount& (0+255),w,b
  8976  00523A  0E01               	movlw	1
  8977  00523C  5931               	subwfb	(_battCheckCount+1)& (0+255),w,b
  8978  00523E  A0D8               	btfss	status,0,c
  8979  005240  EF24  F029         	goto	u9931
  8980  005244  EF26  F029         	goto	u9930
  8981  005248                     u9931:
  8982  005248  EF5F  F029         	goto	l8981
  8983  00524C                     u9930:
  8984  00524C                     
  8985                           ; BSR set to: 1
  8986                           ;main.c: 86:         battCheckCount = 0;
  8987  00524C  0E00               	movlw	0
  8988  00524E  6F31               	movwf	(_battCheckCount+1)& (0+255),b
  8989  005250  0E00               	movlw	0
  8990  005252  6F30               	movwf	_battCheckCount& (0+255),b
  8991  005254                     
  8992                           ; BSR set to: 1
  8993                           ;main.c: 87:         getBatteryVoltage();
  8994  005254  EC07  F02F         	call	_getBatteryVoltage	;wreg free
  8995  005258                     
  8996                           ;main.c: 89:         if (BatteryVolt < (6.8) * 409.6f) {
  8997  005258  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  8998  00525C  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  8999  005260  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9000  005262  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9001  005264  0E00               	movlw	0
  9002  005266  EC60  F01D         	call	___xxtofl
  9003  00526A  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  9004  00526E  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  9005  005272  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  9006  005276  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  9007  00527A  0E7B               	movlw	123
  9008  00527C  0100               	movlb	0	; () banked
  9009  00527E  6F71               	movwf	___flge@ff2& (0+255),b
  9010  005280  0E14               	movlw	20
  9011  005282  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9012  005284  0E2E               	movlw	46
  9013  005286  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9014  005288  0E45               	movlw	69
  9015  00528A  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9016  00528C  EC0F  F024         	call	___flge	;wreg free
  9017  005290  0100               	movlb	0	; () banked
  9018  005292  B0D8               	btfsc	status,0,c
  9019  005294  EF4E  F029         	goto	u9941
  9020  005298  EF50  F029         	goto	u9940
  9021  00529C                     u9941:
  9022  00529C  EF5F  F029         	goto	l8981
  9023  0052A0                     u9940:
  9024  0052A0                     
  9025                           ; BSR set to: 0
  9026                           ;main.c: 90:             setSpeed = 0;
  9027  0052A0  0E00               	movlw	0
  9028  0052A2  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  9029  0052A4  0E00               	movlw	0
  9030  0052A6  6FEB               	movwf	_setSpeed& (0+255),b
  9031  0052A8                     
  9032                           ; BSR set to: 0
  9033                           ;main.c: 91:             setSteering(0, Front);
  9034  0052A8  0E00               	movlw	0
  9035  0052AA  6E1D               	movwf	(setSteering@steering+1)^0,c
  9036  0052AC  0E00               	movlw	0
  9037  0052AE  6E1C               	movwf	setSteering@steering^0,c
  9038  0052B0  0E03               	movlw	3
  9039  0052B2  6E1E               	movwf	setSteering@steeringMode^0,c
  9040  0052B4  EC3A  F01E         	call	_setSteering	;wreg free
  9041  0052B8                     
  9042                           ;main.c: 92:             return 1;
  9043  0052B8  0E01               	movlw	1
  9044  0052BA  EF60  F029         	goto	l1257
  9045  0052BE                     l8981:
  9046                           
  9047                           ;main.c: 95:     return 0;
  9048  0052BE  0E00               	movlw	0
  9049  0052C0                     l1257:
  9050  0052C0  0012               	return		;funcret
  9051  0052C2                     __end_of_checkBatt:
  9052                           	callstack 0
  9053                           
  9054 ;; *************** function _setSteering *****************
  9055 ;; Defined at:
  9056 ;;		line 397 in file "main.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  steering        2   27[COMRAM] short 
  9059 ;;  steeringMode    1   29[COMRAM] enum E17304
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  steeringB       2   34[COMRAM] short 
  9062 ;;  steeringF       2   32[COMRAM] short 
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, status,0, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9072 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9073 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9075 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;Total ram usage:        9 bytes
  9077 ;; Hardware stack levels used: 1
  9078 ;; Hardware stack levels required when called: 9
  9079 ;; This function calls:
  9080 ;;		_PWM5_LoadDutyValue
  9081 ;;		_PWM6_LoadDutyValue
  9082 ;;		___awdiv
  9083 ;; This function is called by:
  9084 ;;		_loop
  9085 ;;		_checkBatt
  9086 ;;		_startAccell
  9087 ;;		_calcSteering
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text32
  9092  003C74                     __ptext32:
  9093                           	callstack 0
  9094  003C74                     _setSteering:
  9095                           	callstack 19
  9096  003C74  0E00               	movlw	0
  9097  003C76  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9098  003C78  0E00               	movlw	0
  9099  003C7A  6E23               	movwf	setSteering@steeringB^0,c
  9100                           
  9101                           ;main.c: 399:     switch (steeringMode) {
  9102  003C7C  EF8E  F01E         	goto	l8763
  9103  003C80                     l1383:
  9104                           
  9105                           ;main.c: 401:             steeringF = (+steering);
  9106  003C80  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9107  003C84  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9108                           
  9109                           ;main.c: 402:             steeringB = -steering;
  9110  003C88  C01C  F01F         	movff	setSteering@steering,??_setSteering
  9111  003C8C  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  9112  003C90  1E1F               	comf	??_setSteering^0,f,c
  9113  003C92  1E20               	comf	(??_setSteering+1)^0,f,c
  9114  003C94  4A1F               	infsnz	??_setSteering^0,f,c
  9115  003C96  2A20               	incf	(??_setSteering+1)^0,f,c
  9116  003C98  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  9117  003C9C  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  9118                           
  9119                           ;main.c: 403:             break;
  9120  003CA0  EFAF  F01E         	goto	l8765
  9121  003CA4                     l1385:
  9122                           
  9123                           ;main.c: 405:             steeringF = (+steering);
  9124  003CA4  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9125  003CA8  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9126                           
  9127                           ;main.c: 406:             steeringB = (+steering);
  9128  003CAC  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9129  003CB0  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9130                           
  9131                           ;main.c: 407:             break;
  9132  003CB4  EFAF  F01E         	goto	l8765
  9133  003CB8                     l1386:
  9134                           
  9135                           ;main.c: 409:             steeringF = (+steering);
  9136  003CB8  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9137  003CBC  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9138  003CC0                     
  9139                           ;main.c: 410:             steeringB = (-steering / (2));
  9140  003CC0  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  9141  003CC4  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  9142  003CC8  0EFF               	movlw	255
  9143  003CCA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  9144  003CCC  0EFE               	movlw	254
  9145  003CCE  6E16               	movwf	___awdiv@divisor^0,c
  9146  003CD0  EC61  F026         	call	___awdiv	;wreg free
  9147  003CD4  C014  F023         	movff	?___awdiv,setSteering@steeringB
  9148  003CD8  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  9149                           
  9150                           ;main.c: 411:             break;
  9151  003CDC  EFAF  F01E         	goto	l8765
  9152  003CE0                     l1387:
  9153                           
  9154                           ;main.c: 413:             steeringF = (+steering);
  9155  003CE0  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9156  003CE4  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9157  003CE8                     
  9158                           ;main.c: 414:             steeringB = 0;
  9159  003CE8  0E00               	movlw	0
  9160  003CEA  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9161  003CEC  0E00               	movlw	0
  9162  003CEE  6E23               	movwf	setSteering@steeringB^0,c
  9163                           
  9164                           ;main.c: 415:             break;
  9165  003CF0  EFAF  F01E         	goto	l8765
  9166  003CF4                     l8755:
  9167                           
  9168                           ;main.c: 417:             steeringF = 0;
  9169  003CF4  0E00               	movlw	0
  9170  003CF6  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9171  003CF8  0E00               	movlw	0
  9172  003CFA  6E21               	movwf	setSteering@steeringF^0,c
  9173  003CFC                     
  9174                           ;main.c: 418:             steeringB = (+steering);
  9175  003CFC  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9176  003D00  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9177                           
  9178                           ;main.c: 419:             break;
  9179  003D04  EFAF  F01E         	goto	l8765
  9180  003D08                     l8759:
  9181                           
  9182                           ;main.c: 421:             steeringF = 0;
  9183  003D08  0E00               	movlw	0
  9184  003D0A  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9185  003D0C  0E00               	movlw	0
  9186  003D0E  6E21               	movwf	setSteering@steeringF^0,c
  9187                           
  9188                           ;main.c: 422:             steeringB = 0;
  9189  003D10  0E00               	movlw	0
  9190  003D12  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9191  003D14  0E00               	movlw	0
  9192  003D16  6E23               	movwf	setSteering@steeringB^0,c
  9193                           
  9194                           ;main.c: 423:             break;
  9195  003D18  EFAF  F01E         	goto	l8765
  9196  003D1C                     l8763:
  9197  003D1C  501E               	movf	setSteering@steeringMode^0,w,c
  9198  003D1E  6E1F               	movwf	??_setSteering^0,c
  9199  003D20  6A20               	clrf	(??_setSteering+1)^0,c
  9200                           
  9201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9202                           ; Switch size 1, requested type "simple"
  9203                           ; Number of cases is 1, Range of values is 0 to 0
  9204                           ; switch strategies available:
  9205                           ; Name         Instructions Cycles
  9206                           ; simple_byte            4     3 (average)
  9207                           ;	Chosen strategy is simple_byte
  9208  003D22  5020               	movf	(??_setSteering+1)^0,w,c
  9209  003D24  0A00               	xorlw	0	; case 0
  9210  003D26  B4D8               	btfsc	status,2,c
  9211  003D28  EF98  F01E         	goto	l9327
  9212  003D2C  EF84  F01E         	goto	l8759
  9213  003D30                     l9327:
  9214                           
  9215                           ; Switch size 1, requested type "simple"
  9216                           ; Number of cases is 5, Range of values is 0 to 4
  9217                           ; switch strategies available:
  9218                           ; Name         Instructions Cycles
  9219                           ; simple_byte           16     9 (average)
  9220                           ;	Chosen strategy is simple_byte
  9221  003D30  501F               	movf	??_setSteering^0,w,c
  9222  003D32  0A00               	xorlw	0	; case 0
  9223  003D34  B4D8               	btfsc	status,2,c
  9224  003D36  EF40  F01E         	goto	l1383
  9225  003D3A  0A01               	xorlw	1	; case 1
  9226  003D3C  B4D8               	btfsc	status,2,c
  9227  003D3E  EF52  F01E         	goto	l1385
  9228  003D42  0A03               	xorlw	3	; case 2
  9229  003D44  B4D8               	btfsc	status,2,c
  9230  003D46  EF5C  F01E         	goto	l1386
  9231  003D4A  0A01               	xorlw	1	; case 3
  9232  003D4C  B4D8               	btfsc	status,2,c
  9233  003D4E  EF70  F01E         	goto	l1387
  9234  003D52  0A07               	xorlw	7	; case 4
  9235  003D54  B4D8               	btfsc	status,2,c
  9236  003D56  EF7A  F01E         	goto	l8755
  9237  003D5A  EF84  F01E         	goto	l8759
  9238  003D5E                     l8765:
  9239                           
  9240                           ;main.c: 426:     if (steeringF > ((65))) {
  9241  003D5E  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  9242  003D60  EFBB  F01E         	goto	u9671
  9243  003D64  5022               	movf	(setSteering@steeringF+1)^0,w,c
  9244  003D66  E109               	bnz	u9670
  9245  003D68  0E42               	movlw	66
  9246  003D6A  5C21               	subwf	setSteering@steeringF^0,w,c
  9247  003D6C  A0D8               	btfss	status,0,c
  9248  003D6E  EFBB  F01E         	goto	u9671
  9249  003D72  EFBD  F01E         	goto	u9670
  9250  003D76                     u9671:
  9251  003D76  EFC3  F01E         	goto	l8769
  9252  003D7A                     u9670:
  9253  003D7A                     
  9254                           ;main.c: 427:         steeringF = ((65));
  9255  003D7A  0E00               	movlw	0
  9256  003D7C  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9257  003D7E  0E41               	movlw	65
  9258  003D80  6E21               	movwf	setSteering@steeringF^0,c
  9259                           
  9260                           ;main.c: 428:     } else if (steeringF < (-(65))) {
  9261  003D82  EFD5  F01E         	goto	l8773
  9262  003D86                     l8769:
  9263  003D86  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  9264  003D88  EFCF  F01E         	goto	u9681
  9265  003D8C  0EBF               	movlw	191
  9266  003D8E  5C21               	subwf	setSteering@steeringF^0,w,c
  9267  003D90  0EFF               	movlw	255
  9268  003D92  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  9269  003D94  B0D8               	btfsc	status,0,c
  9270  003D96  EFCF  F01E         	goto	u9681
  9271  003D9A  EFD1  F01E         	goto	u9680
  9272  003D9E                     u9681:
  9273  003D9E  EFD5  F01E         	goto	l8773
  9274  003DA2                     u9680:
  9275  003DA2                     
  9276                           ;main.c: 429:         steeringF = (-(65));
  9277  003DA2  0EFF               	movlw	255
  9278  003DA4  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9279  003DA6  0EBF               	movlw	191
  9280  003DA8  6E21               	movwf	setSteering@steeringF^0,c
  9281  003DAA                     l8773:
  9282                           
  9283                           ;main.c: 432:     if (steeringB > ((40))) {
  9284  003DAA  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  9285  003DAC  EFE1  F01E         	goto	u9691
  9286  003DB0  5024               	movf	(setSteering@steeringB+1)^0,w,c
  9287  003DB2  E109               	bnz	u9690
  9288  003DB4  0E29               	movlw	41
  9289  003DB6  5C23               	subwf	setSteering@steeringB^0,w,c
  9290  003DB8  A0D8               	btfss	status,0,c
  9291  003DBA  EFE1  F01E         	goto	u9691
  9292  003DBE  EFE3  F01E         	goto	u9690
  9293  003DC2                     u9691:
  9294  003DC2  EFE9  F01E         	goto	l8777
  9295  003DC6                     u9690:
  9296  003DC6                     
  9297                           ;main.c: 433:         steeringB = ((40));
  9298  003DC6  0E00               	movlw	0
  9299  003DC8  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9300  003DCA  0E28               	movlw	40
  9301  003DCC  6E23               	movwf	setSteering@steeringB^0,c
  9302                           
  9303                           ;main.c: 434:     } else if (steeringB < (-(40))) {
  9304  003DCE  EFFB  F01E         	goto	l8781
  9305  003DD2                     l8777:
  9306  003DD2  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  9307  003DD4  EFF5  F01E         	goto	u9701
  9308  003DD8  0ED8               	movlw	216
  9309  003DDA  5C23               	subwf	setSteering@steeringB^0,w,c
  9310  003DDC  0EFF               	movlw	255
  9311  003DDE  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  9312  003DE0  B0D8               	btfsc	status,0,c
  9313  003DE2  EFF5  F01E         	goto	u9701
  9314  003DE6  EFF7  F01E         	goto	u9700
  9315  003DEA                     u9701:
  9316  003DEA  EFFB  F01E         	goto	l8781
  9317  003DEE                     u9700:
  9318  003DEE                     
  9319                           ;main.c: 435:         steeringB = (-(40));
  9320  003DEE  0EFF               	movlw	255
  9321  003DF0  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9322  003DF2  0ED8               	movlw	216
  9323  003DF4  6E23               	movwf	setSteering@steeringB^0,c
  9324  003DF6                     l8781:
  9325                           
  9326                           ;main.c: 439:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9327  003DF6  0E60               	movlw	96
  9328  003DF8  2421               	addwf	setSteering@steeringF^0,w,c
  9329  003DFA  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9330  003DFC  0E01               	movlw	1
  9331  003DFE  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  9332  003E00  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9333  003E02  EC9E  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  9334  003E06                     
  9335                           ;main.c: 440:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9336  003E06  0E65               	movlw	101
  9337  003E08  2423               	addwf	setSteering@steeringB^0,w,c
  9338  003E0A  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9339  003E0C  0E01               	movlw	1
  9340  003E0E  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  9341  003E10  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9342  003E12  ECB8  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  9343  003E16  0012               	return		;funcret
  9344  003E18                     __end_of_setSteering:
  9345                           	callstack 0
  9346                           
  9347 ;; *************** function _PWM6_LoadDutyValue *****************
  9348 ;; Defined at:
  9349 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		wreg, status,2, status,0
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;Total ram usage:        4 bytes
  9368 ;; Hardware stack levels used: 1
  9369 ;; Hardware stack levels required when called: 8
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		_setSteering
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text33
  9378  00593C                     __ptext33:
  9379                           	callstack 0
  9380  00593C                     _PWM6_LoadDutyValue:
  9381                           	callstack 19
  9382  00593C                     
  9383                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9384  00593C  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9385  005940  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  9386  005944  90D8               	bcf	status,0,c
  9387  005946  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9388  005948  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9389  00594A  90D8               	bcf	status,0,c
  9390  00594C  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9391  00594E  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9392  005950  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9393  005952  6E69               	movwf	105,c	;volatile
  9394                           
  9395                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9396  005954  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9397  005958  0E03               	movlw	3
  9398  00595A  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  9399  00595C  0E06               	movlw	6
  9400  00595E  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  9401  005960                     u9535:
  9402  005960  90D8               	bcf	status,0,c
  9403  005962  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  9404  005964  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  9405  005966  EFB0  F02C         	goto	u9535
  9406  00596A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9407  00596C  6E68               	movwf	104,c	;volatile
  9408  00596E  0012               	return		;funcret
  9409  005970                     __end_of_PWM6_LoadDutyValue:
  9410                           	callstack 0
  9411                           
  9412 ;; *************** function _PWM5_LoadDutyValue *****************
  9413 ;; Defined at:
  9414 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;		None
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  1    wreg      void 
  9421 ;; Registers used:
  9422 ;;		wreg, status,2, status,0
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9432 ;;Total ram usage:        4 bytes
  9433 ;; Hardware stack levels used: 1
  9434 ;; Hardware stack levels required when called: 8
  9435 ;; This function calls:
  9436 ;;		Nothing
  9437 ;; This function is called by:
  9438 ;;		_setSteering
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442                           	psect	text34
  9443  005970                     __ptext34:
  9444                           	callstack 0
  9445  005970                     _PWM5_LoadDutyValue:
  9446                           	callstack 19
  9447  005970                     
  9448                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9449  005970  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9450  005974  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  9451  005978  90D8               	bcf	status,0,c
  9452  00597A  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9453  00597C  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9454  00597E  90D8               	bcf	status,0,c
  9455  005980  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9456  005982  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9457  005984  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9458  005986  6E6D               	movwf	109,c	;volatile
  9459                           
  9460                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9461  005988  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9462  00598C  0E03               	movlw	3
  9463  00598E  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  9464  005990  0E06               	movlw	6
  9465  005992  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  9466  005994                     u9525:
  9467  005994  90D8               	bcf	status,0,c
  9468  005996  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  9469  005998  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  9470  00599A  EFCA  F02C         	goto	u9525
  9471  00599E  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9472  0059A0  6E6C               	movwf	108,c	;volatile
  9473  0059A2  0012               	return		;funcret
  9474  0059A4                     __end_of_PWM5_LoadDutyValue:
  9475                           	callstack 0
  9476                           
  9477 ;; *************** function _getBatteryVoltage *****************
  9478 ;; Defined at:
  9479 ;;		line 78 in file "main.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;		None
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9497 ;;Total ram usage:        0 bytes
  9498 ;; Hardware stack levels used: 1
  9499 ;; Hardware stack levels required when called: 9
  9500 ;; This function calls:
  9501 ;;		_ADCC_GetSingleConversion
  9502 ;; This function is called by:
  9503 ;;		_loop
  9504 ;;		_checkBatt
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text35
  9509  005E0E                     __ptext35:
  9510                           	callstack 0
  9511  005E0E                     _getBatteryVoltage:
  9512                           	callstack 20
  9513  005E0E                     
  9514                           ;main.c: 79:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9515  005E0E  0E22               	movlw	34
  9516  005E10  EC3A  F02D         	call	_ADCC_GetSingleConversion
  9517  005E14  C014  F0E5         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9518  005E18  C015  F0E6         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9519  005E1C  0012               	return		;funcret
  9520  005E1E                     __end_of_getBatteryVoltage:
  9521                           	callstack 0
  9522                           
  9523 ;; *************** function _ADCC_GetSingleConversion *****************
  9524 ;; Defined at:
  9525 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;  channel         1    wreg     enum E16058
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;  channel         1   23[COMRAM] enum E16058
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  2   19[COMRAM] unsigned short 
  9532 ;; Registers used:
  9533 ;;		wreg, status,2, status,0
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9543 ;;Total ram usage:        5 bytes
  9544 ;; Hardware stack levels used: 1
  9545 ;; Hardware stack levels required when called: 8
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_getBatteryVoltage
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text36
  9554  005A74                     __ptext36:
  9555                           	callstack 0
  9556  005A74                     _ADCC_GetSingleConversion:
  9557                           	callstack 20
  9558                           
  9559                           ;incstack = 0
  9560                           ;ADCC_GetSingleConversion@channel stored from wreg
  9561  005A74  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9562  005A76                     
  9563                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9564  005A76  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9565  005A7C                     
  9566                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9567  005A7C  013E               	movlb	62	; () banked
  9568  005A7E  8FF8               	bsf	248,7,b	;volatile
  9569  005A80                     
  9570                           ; BSR set to: 62
  9571                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9572  005A80  9DF8               	bcf	248,6,b	;volatile
  9573  005A82                     
  9574                           ; BSR set to: 62
  9575                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9576  005A82  81F8               	bsf	248,0,b	;volatile
  9577  005A84                     l1054:
  9578                           
  9579                           ; BSR set to: 62
  9580                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9581  005A84  B1F8               	btfsc	248,0,b	;volatile
  9582  005A86  EF47  F02D         	goto	u6101
  9583  005A8A  EF49  F02D         	goto	u6100
  9584  005A8E                     u6101:
  9585  005A8E  EF42  F02D         	goto	l1054
  9586  005A92                     u6100:
  9587  005A92                     
  9588                           ; BSR set to: 62
  9589                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9590  005A92  51F0               	movf	240,w,b	;volatile
  9591  005A94  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9592  005A96  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9593  005A98  51EF               	movf	239,w,b	;volatile
  9594  005A9A  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9595  005A9C  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9596  005A9E  0E00               	movlw	0
  9597  005AA0  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9598  005AA2  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9599  005AA4                     
  9600                           ; BSR set to: 62
  9601  005AA4  0012               	return		;funcret
  9602  005AA6                     __end_of_ADCC_GetSingleConversion:
  9603                           	callstack 0
  9604                           
  9605 ;; *************** function ___flge *****************
  9606 ;; Defined at:
  9607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  ff1             4   13[BANK0 ] unsigned short 
  9610 ;;  ff2             4   17[BANK0 ] unsigned short 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;		None
  9613 ;; Return value:  Size  Location     Type
  9614 ;;		None               void
  9615 ;; Registers used:
  9616 ;;		wreg, status,2, status,0
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;Total ram usage:       12 bytes
  9627 ;; Hardware stack levels used: 1
  9628 ;; Hardware stack levels required when called: 8
  9629 ;; This function calls:
  9630 ;;		Nothing
  9631 ;; This function is called by:
  9632 ;;		_loop
  9633 ;;		_checkBatt
  9634 ;;		_startAccell
  9635 ;;		_efgtoa
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text37
  9640  00481E                     __ptext37:
  9641                           	callstack 0
  9642  00481E                     ___flge:
  9643                           	callstack 16
  9644  00481E  0E00               	movlw	0
  9645  004820  0100               	movlb	0	; () banked
  9646  004822  156D               	andwf	___flge@ff1& (0+255),w,b
  9647  004824  6E36               	movwf	??___flge^0,c
  9648  004826  0E00               	movlw	0
  9649  004828  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9650  00482A  6E37               	movwf	(??___flge+1)^0,c
  9651  00482C  0E80               	movlw	128
  9652  00482E  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9653  004830  6E38               	movwf	(??___flge+2)^0,c
  9654  004832  0E7F               	movlw	127
  9655  004834  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9656  004836  6E39               	movwf	(??___flge+3)^0,c
  9657  004838  5036               	movf	??___flge^0,w,c
  9658  00483A  1037               	iorwf	(??___flge+1)^0,w,c
  9659  00483C  1038               	iorwf	(??___flge+2)^0,w,c
  9660  00483E  1039               	iorwf	(??___flge+3)^0,w,c
  9661  004840  A4D8               	btfss	status,2,c
  9662  004842  EF25  F024         	goto	u8381
  9663  004846  EF27  F024         	goto	u8380
  9664  00484A                     u8381:
  9665  00484A  EF2F  F024         	goto	l8111
  9666  00484E                     u8380:
  9667  00484E                     
  9668                           ; BSR set to: 0
  9669  00484E  0E00               	movlw	0
  9670  004850  6F6D               	movwf	___flge@ff1& (0+255),b
  9671  004852  0E00               	movlw	0
  9672  004854  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9673  004856  0E00               	movlw	0
  9674  004858  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9675  00485A  0E00               	movlw	0
  9676  00485C  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9677  00485E                     l8111:
  9678                           
  9679                           ; BSR set to: 0
  9680  00485E  0E00               	movlw	0
  9681  004860  1571               	andwf	___flge@ff2& (0+255),w,b
  9682  004862  6E36               	movwf	??___flge^0,c
  9683  004864  0E00               	movlw	0
  9684  004866  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9685  004868  6E37               	movwf	(??___flge+1)^0,c
  9686  00486A  0E80               	movlw	128
  9687  00486C  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9688  00486E  6E38               	movwf	(??___flge+2)^0,c
  9689  004870  0E7F               	movlw	127
  9690  004872  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9691  004874  6E39               	movwf	(??___flge+3)^0,c
  9692  004876  5036               	movf	??___flge^0,w,c
  9693  004878  1037               	iorwf	(??___flge+1)^0,w,c
  9694  00487A  1038               	iorwf	(??___flge+2)^0,w,c
  9695  00487C  1039               	iorwf	(??___flge+3)^0,w,c
  9696  00487E  A4D8               	btfss	status,2,c
  9697  004880  EF44  F024         	goto	u8391
  9698  004884  EF46  F024         	goto	u8390
  9699  004888                     u8391:
  9700  004888  EF4E  F024         	goto	l8115
  9701  00488C                     u8390:
  9702  00488C                     
  9703                           ; BSR set to: 0
  9704  00488C  0E00               	movlw	0
  9705  00488E  6F71               	movwf	___flge@ff2& (0+255),b
  9706  004890  0E00               	movlw	0
  9707  004892  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9708  004894  0E00               	movlw	0
  9709  004896  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9710  004898  0E00               	movlw	0
  9711  00489A  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9712  00489C                     l8115:
  9713                           
  9714                           ; BSR set to: 0
  9715  00489C  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9716  00489E  EF53  F024         	goto	u8401
  9717  0048A2  EF55  F024         	goto	u8400
  9718  0048A6                     u8401:
  9719  0048A6  EF5E  F024         	goto	l8119
  9720  0048AA                     u8400:
  9721  0048AA                     
  9722                           ; BSR set to: 0
  9723  0048AA  6D6D               	negf	___flge@ff1& (0+255),b
  9724  0048AC  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9725  0048AE  B0D8               	btfsc	status,0,c
  9726  0048B0  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9727  0048B2  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9728  0048B4  B0D8               	btfsc	status,0,c
  9729  0048B6  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9730  0048B8  0E80               	movlw	128
  9731  0048BA  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9732  0048BC                     l8119:
  9733                           
  9734                           ; BSR set to: 0
  9735  0048BC  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9736  0048BE  EF63  F024         	goto	u8411
  9737  0048C2  EF65  F024         	goto	u8410
  9738  0048C6                     u8411:
  9739  0048C6  EF6E  F024         	goto	l1664
  9740  0048CA                     u8410:
  9741  0048CA                     
  9742                           ; BSR set to: 0
  9743  0048CA  6D71               	negf	___flge@ff2& (0+255),b
  9744  0048CC  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9745  0048CE  B0D8               	btfsc	status,0,c
  9746  0048D0  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9747  0048D2  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9748  0048D4  B0D8               	btfsc	status,0,c
  9749  0048D6  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9750  0048D8  0E80               	movlw	128
  9751  0048DA  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9752  0048DC                     l1664:
  9753                           
  9754                           ; BSR set to: 0
  9755  0048DC  0E00               	movlw	0
  9756  0048DE  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9757  0048E0  0E00               	movlw	0
  9758  0048E2  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9759  0048E4  0E00               	movlw	0
  9760  0048E6  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9761  0048E8  0E80               	movlw	128
  9762  0048EA  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9763  0048EC  0E00               	movlw	0
  9764  0048EE  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9765  0048F0  0E00               	movlw	0
  9766  0048F2  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9767  0048F4  0E00               	movlw	0
  9768  0048F6  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9769  0048F8  0E80               	movlw	128
  9770  0048FA  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9771  0048FC  5171               	movf	___flge@ff2& (0+255),w,b
  9772  0048FE  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9773  004900  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9774  004902  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9775  004904  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9776  004906  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9777  004908  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9778  00490A  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9779  00490C  B0D8               	btfsc	status,0,c
  9780  00490E  EF8B  F024         	goto	u8421
  9781  004912  EF8D  F024         	goto	u8420
  9782  004916                     u8421:
  9783  004916  EF90  F024         	goto	l8125
  9784  00491A                     u8420:
  9785  00491A                     
  9786                           ; BSR set to: 0
  9787  00491A  90D8               	bcf	status,0,c
  9788  00491C  EF91  F024         	goto	l1669
  9789  004920                     l8125:
  9790                           
  9791                           ; BSR set to: 0
  9792  004920  80D8               	bsf	status,0,c
  9793  004922                     l1669:
  9794                           
  9795                           ; BSR set to: 0
  9796  004922  0012               	return		;funcret
  9797  004924                     __end_of___flge:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _calcSpeed *****************
  9801 ;; Defined at:
  9802 ;;		line 289 in file "main.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;		None
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;  speed           2   39[BANK0 ] short 
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  1    wreg      void 
  9809 ;; Registers used:
  9810 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;Total ram usage:        6 bytes
  9821 ;; Hardware stack levels used: 1
  9822 ;; Hardware stack levels required when called: 9
  9823 ;; This function calls:
  9824 ;;		___fladd
  9825 ;;		___flmul
  9826 ;;		___fltol
  9827 ;;		___xxtofl
  9828 ;; This function is called by:
  9829 ;;		_loop
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text38
  9834  0038B6                     __ptext38:
  9835                           	callstack 0
  9836  0038B6                     _calcSpeed:
  9837                           	callstack 20
  9838  0038B6                     
  9839                           ;main.c: 290:     int16_t speed = 0;
  9840  0038B6  0E00               	movlw	0
  9841  0038B8  0100               	movlb	0	; () banked
  9842  0038BA  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9843  0038BC  0E00               	movlw	0
  9844  0038BE  6F87               	movwf	calcSpeed@speed& (0+255),b
  9845                           
  9846                           ;main.c: 292:     switch (driveMode) {
  9847  0038C0  EF11  F01D         	goto	l9099
  9848  0038C4                     l9063:
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;main.c: 294:             if (distFront > (30)) {
  9852  0038C4  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9853  0038C6  E109               	bnz	u10120
  9854  0038C8  0E1F               	movlw	31
  9855  0038CA  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9856  0038CC  A0D8               	btfss	status,0,c
  9857  0038CE  EF6B  F01C         	goto	u10121
  9858  0038D2  EF6D  F01C         	goto	u10120
  9859  0038D6                     u10121:
  9860  0038D6  EF6F  F01C         	goto	l9067
  9861  0038DA                     u10120:
  9862  0038DA                     
  9863                           ; BSR set to: 0
  9864                           ;main.c: 295:                 driveMode = Straight;
  9865  0038DA  0E01               	movlw	1
  9866  0038DC  6FFE               	movwf	_driveMode& (0+255),b
  9867  0038DE                     l9067:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;main.c: 297:             if (setSpeed > (100)) {
  9871  0038DE  BFEC               	btfsc	(_setSpeed+1)& (0+255),7,b
  9872  0038E0  EF7B  F01C         	goto	u10131
  9873  0038E4  51EC               	movf	(_setSpeed+1)& (0+255),w,b
  9874  0038E6  E109               	bnz	u10130
  9875  0038E8  0E65               	movlw	101
  9876  0038EA  5DEB               	subwf	_setSpeed& (0+255),w,b
  9877  0038EC  A0D8               	btfss	status,0,c
  9878  0038EE  EF7B  F01C         	goto	u10131
  9879  0038F2  EF7D  F01C         	goto	u10130
  9880  0038F6                     u10131:
  9881  0038F6  EF98  F01C         	goto	l9077
  9882  0038FA                     u10130:
  9883  0038FA                     
  9884                           ; BSR set to: 0
  9885                           ;main.c: 298:                     speed = setSpeed;
  9886  0038FA  C0EB  F087         	movff	_setSpeed,calcSpeed@speed
  9887  0038FE  C0EC  F088         	movff	_setSpeed+1,calcSpeed@speed+1
  9888  003902                     
  9889                           ; BSR set to: 0
  9890                           ;main.c: 299:                 if (distFront < (15)) {
  9891  003902  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9892  003904  E107               	bnz	u10141
  9893  003906  0E0F               	movlw	15
  9894  003908  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9895  00390A  B0D8               	btfsc	status,0,c
  9896  00390C  EF8A  F01C         	goto	u10141
  9897  003910  EF8C  F01C         	goto	u10140
  9898  003914                     u10141:
  9899  003914  EF92  F01C         	goto	l9075
  9900  003918                     u10140:
  9901  003918                     
  9902                           ; BSR set to: 0
  9903                           ;main.c: 300:                     speed -= 4;
  9904  003918  0EFC               	movlw	252
  9905  00391A  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9906  00391C  0EFF               	movlw	255
  9907  00391E  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9908                           
  9909                           ;main.c: 301:                 } else {
  9910  003920  EF36  F01D         	goto	l9101
  9911  003924                     l9075:
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;main.c: 302:                     speed -= 2;
  9915  003924  0EFE               	movlw	254
  9916  003926  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9917  003928  0EFF               	movlw	255
  9918  00392A  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9919  00392C  EF36  F01D         	goto	l9101
  9920  003930                     l9077:
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;main.c: 305:                 speed = (100);
  9924  003930  0E00               	movlw	0
  9925  003932  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9926  003934  0E64               	movlw	100
  9927  003936  6F87               	movwf	calcSpeed@speed& (0+255),b
  9928  003938  EF36  F01D         	goto	l9101
  9929  00393C                     l9079:
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;main.c: 309:             if (distFront < (30)) {
  9933  00393C  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9934  00393E  E107               	bnz	u10151
  9935  003940  0E1E               	movlw	30
  9936  003942  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9937  003944  B0D8               	btfsc	status,0,c
  9938  003946  EFA7  F01C         	goto	u10151
  9939  00394A  EFA9  F01C         	goto	u10150
  9940  00394E                     u10151:
  9941  00394E  EFAB  F01C         	goto	l9083
  9942  003952                     u10150:
  9943  003952                     
  9944                           ; BSR set to: 0
  9945                           ;main.c: 310:                 driveMode = Brake;
  9946  003952  0E02               	movlw	2
  9947  003954  6FFE               	movwf	_driveMode& (0+255),b
  9948  003956                     l9083:
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;main.c: 313:             if (distFront >= (150)) {
  9952  003956  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9953  003958  E109               	bnz	u10160
  9954  00395A  0E96               	movlw	150
  9955  00395C  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9956  00395E  A0D8               	btfss	status,0,c
  9957  003960  EFB4  F01C         	goto	u10161
  9958  003964  EFB6  F01C         	goto	u10160
  9959  003968                     u10161:
  9960  003968  EFFF  F01C         	goto	l9087
  9961  00396C                     u10160:
  9962  00396C                     
  9963                           ; BSR set to: 0
  9964                           ;main.c: 314:                 speed = (int16_t) ((0.7) * (distFront - (150)) + (275));
  9965  00396C  0E00               	movlw	0
  9966  00396E  6F71               	movwf	___fladd@a& (0+255),b
  9967  003970  0E80               	movlw	128
  9968  003972  6F72               	movwf	(___fladd@a+1)& (0+255),b
  9969  003974  0E89               	movlw	137
  9970  003976  6F73               	movwf	(___fladd@a+2)& (0+255),b
  9971  003978  0E43               	movlw	67
  9972  00397A  6F74               	movwf	(___fladd@a+3)& (0+255),b
  9973  00397C  0E33               	movlw	51
  9974  00397E  6E2E               	movwf	___flmul@a^0,c
  9975  003980  0E33               	movlw	51
  9976  003982  6E2F               	movwf	(___flmul@a+1)^0,c
  9977  003984  0E33               	movlw	51
  9978  003986  6E30               	movwf	(___flmul@a+2)^0,c
  9979  003988  0E3F               	movlw	63
  9980  00398A  6E31               	movwf	(___flmul@a+3)^0,c
  9981  00398C  0E6A               	movlw	106
  9982  00398E  6F83               	movwf	??_calcSpeed& (0+255),b
  9983  003990  0EFF               	movlw	255
  9984  003992  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
  9985  003994  C0FC  F085         	movff	_distFront,??_calcSpeed+2	;volatile
  9986  003998  C0FD  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
  9987  00399C  5183               	movf	??_calcSpeed& (0+255),w,b
  9988  00399E  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
  9989  0039A0  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
  9990  0039A2  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  9991  0039A4  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  9992  0039A8  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  9993  0039AC  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9994  0039AE  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9995  0039B0  0E00               	movlw	0
  9996  0039B2  EC60  F01D         	call	___xxtofl
  9997  0039B6  C01C  F02A         	movff	?___xxtofl,___flmul@b
  9998  0039BA  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  9999  0039BE  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10000  0039C2  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10001  0039C6  EC83  F013         	call	___flmul	;wreg free
 10002  0039CA  C02A  F06D         	movff	?___flmul,___fladd@b
 10003  0039CE  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10004  0039D2  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10005  0039D6  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10006  0039DA  EC22  F011         	call	___fladd	;wreg free
 10007  0039DE  C06D  F079         	movff	?___fladd,___fltol@f1
 10008  0039E2  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10009  0039E6  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10010  0039EA  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10011  0039EE  EC08  F023         	call	___fltol	;wreg free
 10012  0039F2  C079  F087         	movff	?___fltol,calcSpeed@speed
 10013  0039F6  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10014                           
 10015                           ;main.c: 315:             } else {
 10016  0039FA  EF36  F01D         	goto	l9101
 10017  0039FE                     l9087:
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;main.c: 316:                 speed = (275);
 10021  0039FE  0E01               	movlw	1
 10022  003A00  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10023  003A02  0E13               	movlw	19
 10024  003A04  6F87               	movwf	calcSpeed@speed& (0+255),b
 10025  003A06  EF36  F01D         	goto	l9101
 10026  003A0A                     l9089:
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;main.c: 321:             speed = (-125);
 10030  003A0A  0EFF               	movlw	255
 10031  003A0C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10032  003A0E  0E83               	movlw	131
 10033  003A10  6F87               	movwf	calcSpeed@speed& (0+255),b
 10034                           
 10035                           ;main.c: 322:             break;
 10036  003A12  EF36  F01D         	goto	l9101
 10037  003A16                     l9093:
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;main.c: 327:             speed = (200);
 10041  003A16  0E00               	movlw	0
 10042  003A18  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10043  003A1A  0EC8               	movlw	200
 10044  003A1C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10045                           
 10046                           ;main.c: 328:             break;
 10047  003A1E  EF36  F01D         	goto	l9101
 10048  003A22                     l9099:
 10049                           
 10050                           ; BSR set to: 0
 10051  003A22  51FE               	movf	_driveMode& (0+255),w,b
 10052  003A24  6F83               	movwf	??_calcSpeed& (0+255),b
 10053  003A26  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10054                           
 10055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10056                           ; Switch size 1, requested type "simple"
 10057                           ; Number of cases is 1, Range of values is 0 to 0
 10058                           ; switch strategies available:
 10059                           ; Name         Instructions Cycles
 10060                           ; simple_byte            4     3 (average)
 10061                           ;	Chosen strategy is simple_byte
 10062  003A28  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10063  003A2A  0A00               	xorlw	0	; case 0
 10064  003A2C  B4D8               	btfsc	status,2,c
 10065  003A2E  EF1B  F01D         	goto	l9329
 10066  003A32  EF36  F01D         	goto	l9101
 10067  003A36                     l9329:
 10068                           
 10069                           ; BSR set to: 0
 10070                           ; Switch size 1, requested type "simple"
 10071                           ; Number of cases is 6, Range of values is 1 to 6
 10072                           ; switch strategies available:
 10073                           ; Name         Instructions Cycles
 10074                           ; simple_byte           19    10 (average)
 10075                           ;	Chosen strategy is simple_byte
 10076  003A36  5183               	movf	??_calcSpeed& (0+255),w,b
 10077  003A38  0A01               	xorlw	1	; case 1
 10078  003A3A  B4D8               	btfsc	status,2,c
 10079  003A3C  EF9E  F01C         	goto	l9079
 10080  003A40  0A03               	xorlw	3	; case 2
 10081  003A42  B4D8               	btfsc	status,2,c
 10082  003A44  EF62  F01C         	goto	l9063
 10083  003A48  0A01               	xorlw	1	; case 3
 10084  003A4A  B4D8               	btfsc	status,2,c
 10085  003A4C  EF05  F01D         	goto	l9089
 10086  003A50  0A07               	xorlw	7	; case 4
 10087  003A52  B4D8               	btfsc	status,2,c
 10088  003A54  EF05  F01D         	goto	l9089
 10089  003A58  0A01               	xorlw	1	; case 5
 10090  003A5A  B4D8               	btfsc	status,2,c
 10091  003A5C  EF0B  F01D         	goto	l9093
 10092  003A60  0A03               	xorlw	3	; case 6
 10093  003A62  B4D8               	btfsc	status,2,c
 10094  003A64  EF0B  F01D         	goto	l9093
 10095  003A68  EF36  F01D         	goto	l9101
 10096  003A6C                     l9101:
 10097                           
 10098                           ;main.c: 334:     if (speed > (400)) {
 10099  003A6C  0100               	movlb	0	; () banked
 10100  003A6E  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10101  003A70  EF43  F01D         	goto	u10171
 10102  003A74  0E91               	movlw	145
 10103  003A76  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10104  003A78  0E01               	movlw	1
 10105  003A7A  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10106  003A7C  A0D8               	btfss	status,0,c
 10107  003A7E  EF43  F01D         	goto	u10171
 10108  003A82  EF45  F01D         	goto	u10170
 10109  003A86                     u10171:
 10110  003A86  EF49  F01D         	goto	l9105
 10111  003A8A                     u10170:
 10112  003A8A                     
 10113                           ; BSR set to: 0
 10114                           ;main.c: 335:         speed = (400);
 10115  003A8A  0E01               	movlw	1
 10116  003A8C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10117  003A8E  0E90               	movlw	144
 10118  003A90  6F87               	movwf	calcSpeed@speed& (0+255),b
 10119  003A92                     l9105:
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;main.c: 337:     if (speed < (-250)) {
 10123  003A92  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10124  003A94  EF55  F01D         	goto	u10181
 10125  003A98  0E06               	movlw	6
 10126  003A9A  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10127  003A9C  0EFF               	movlw	255
 10128  003A9E  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10129  003AA0  B0D8               	btfsc	status,0,c
 10130  003AA2  EF55  F01D         	goto	u10181
 10131  003AA6  EF57  F01D         	goto	u10180
 10132  003AAA                     u10181:
 10133  003AAA  EF5B  F01D         	goto	l9109
 10134  003AAE                     u10180:
 10135  003AAE                     
 10136                           ; BSR set to: 0
 10137                           ;main.c: 338:         speed = (-250);
 10138  003AAE  0EFF               	movlw	255
 10139  003AB0  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10140  003AB2  0E06               	movlw	6
 10141  003AB4  6F87               	movwf	calcSpeed@speed& (0+255),b
 10142  003AB6                     l9109:
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;main.c: 340:     setSpeed = speed;
 10146  003AB6  C087  F0EB         	movff	calcSpeed@speed,_setSpeed
 10147  003ABA  C088  F0EC         	movff	calcSpeed@speed+1,_setSpeed+1
 10148  003ABE                     
 10149                           ; BSR set to: 0
 10150  003ABE  0012               	return		;funcret
 10151  003AC0                     __end_of_calcSpeed:
 10152                           	callstack 0
 10153                           
 10154 ;; *************** function ___fladd *****************
 10155 ;; Defined at:
 10156 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;  b               4   13[BANK0 ] void 
 10159 ;;  a               4   17[BANK0 ] void 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  grs             1   24[BANK0 ] unsigned char 
 10162 ;;  bexp            1   23[BANK0 ] unsigned char 
 10163 ;;  aexp            1   22[BANK0 ] unsigned char 
 10164 ;;  signs           1   21[BANK0 ] unsigned char 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  4   13[BANK0 ] unsigned char 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10174 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;Total ram usage:       16 bytes
 10179 ;; Hardware stack levels used: 1
 10180 ;; Hardware stack levels required when called: 8
 10181 ;; This function calls:
 10182 ;;		Nothing
 10183 ;; This function is called by:
 10184 ;;		_calcSpeed
 10185 ;;		___flsub
 10186 ;;		_efgtoa
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text39
 10191  002244                     __ptext39:
 10192                           	callstack 0
 10193  002244                     ___fladd:
 10194                           	callstack 15
 10195  002244  0100               	movlb	0	; () banked
 10196  002246  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10197  002248  0B80               	andlw	128
 10198  00224A  6F75               	movwf	___fladd@signs& (0+255),b
 10199  00224C  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10200  00224E  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10201  002250  6F77               	movwf	___fladd@bexp& (0+255),b
 10202  002252                     
 10203                           ; BSR set to: 0
 10204  002252  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10205  002254  EF2E  F011         	goto	u7251
 10206  002258  EF30  F011         	goto	u7250
 10207  00225C                     u7251:
 10208  00225C  EF31  F011         	goto	l7439
 10209  002260                     u7250:
 10210  002260                     
 10211                           ; BSR set to: 0
 10212  002260  8177               	bsf	___fladd@bexp& (0+255),0,b
 10213  002262                     l7439:
 10214                           
 10215                           ; BSR set to: 0
 10216  002262  5177               	movf	___fladd@bexp& (0+255),w,b
 10217  002264  B4D8               	btfsc	status,2,c
 10218  002266  EF37  F011         	goto	u7261
 10219  00226A  EF39  F011         	goto	u7260
 10220  00226E                     u7261:
 10221  00226E  EF4E  F011         	goto	l7449
 10222  002272                     u7260:
 10223  002272                     
 10224                           ; BSR set to: 0
 10225  002272  2977               	incf	___fladd@bexp& (0+255),w,b
 10226  002274  A4D8               	btfss	status,2,c
 10227  002276  EF3F  F011         	goto	u7271
 10228  00227A  EF41  F011         	goto	u7270
 10229  00227E                     u7271:
 10230  00227E  EF49  F011         	goto	l7445
 10231  002282                     u7270:
 10232  002282                     
 10233                           ; BSR set to: 0
 10234  002282  0E00               	movlw	0
 10235  002284  6F6D               	movwf	___fladd@b& (0+255),b
 10236  002286  0E00               	movlw	0
 10237  002288  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10238  00228A  0E00               	movlw	0
 10239  00228C  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10240  00228E  0E00               	movlw	0
 10241  002290  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10242  002292                     l7445:
 10243                           
 10244                           ; BSR set to: 0
 10245  002292  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10246  002294                     
 10247                           ; BSR set to: 0
 10248  002294  0E00               	movlw	0
 10249  002296  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10250  002298  EF56  F011         	goto	l7451
 10251  00229C                     l7449:
 10252                           
 10253                           ; BSR set to: 0
 10254  00229C  0E00               	movlw	0
 10255  00229E  6F6D               	movwf	___fladd@b& (0+255),b
 10256  0022A0  0E00               	movlw	0
 10257  0022A2  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10258  0022A4  0E00               	movlw	0
 10259  0022A6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10260  0022A8  0E00               	movlw	0
 10261  0022AA  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10262  0022AC                     l7451:
 10263                           
 10264                           ; BSR set to: 0
 10265  0022AC  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10266  0022AE  0B80               	andlw	128
 10267  0022B0  6F76               	movwf	___fladd@aexp& (0+255),b
 10268  0022B2                     
 10269                           ; BSR set to: 0
 10270  0022B2  5175               	movf	___fladd@signs& (0+255),w,b
 10271  0022B4  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10272  0022B6  B4D8               	btfsc	status,2,c
 10273  0022B8  EF60  F011         	goto	u7281
 10274  0022BC  EF62  F011         	goto	u7280
 10275  0022C0                     u7281:
 10276  0022C0  EF63  F011         	goto	l7457
 10277  0022C4                     u7280:
 10278  0022C4                     
 10279                           ; BSR set to: 0
 10280  0022C4  8D75               	bsf	___fladd@signs& (0+255),6,b
 10281  0022C6                     l7457:
 10282                           
 10283                           ; BSR set to: 0
 10284  0022C6  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10285  0022C8  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10286  0022CA  6F76               	movwf	___fladd@aexp& (0+255),b
 10287  0022CC                     
 10288                           ; BSR set to: 0
 10289  0022CC  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10290  0022CE  EF6B  F011         	goto	u7291
 10291  0022D2  EF6D  F011         	goto	u7290
 10292  0022D6                     u7291:
 10293  0022D6  EF6E  F011         	goto	l7463
 10294  0022DA                     u7290:
 10295  0022DA                     
 10296                           ; BSR set to: 0
 10297  0022DA  8176               	bsf	___fladd@aexp& (0+255),0,b
 10298  0022DC                     l7463:
 10299                           
 10300                           ; BSR set to: 0
 10301  0022DC  5176               	movf	___fladd@aexp& (0+255),w,b
 10302  0022DE  B4D8               	btfsc	status,2,c
 10303  0022E0  EF74  F011         	goto	u7301
 10304  0022E4  EF76  F011         	goto	u7300
 10305  0022E8                     u7301:
 10306  0022E8  EF8B  F011         	goto	l7473
 10307  0022EC                     u7300:
 10308  0022EC                     
 10309                           ; BSR set to: 0
 10310  0022EC  2976               	incf	___fladd@aexp& (0+255),w,b
 10311  0022EE  A4D8               	btfss	status,2,c
 10312  0022F0  EF7C  F011         	goto	u7311
 10313  0022F4  EF7E  F011         	goto	u7310
 10314  0022F8                     u7311:
 10315  0022F8  EF86  F011         	goto	l7469
 10316  0022FC                     u7310:
 10317  0022FC                     
 10318                           ; BSR set to: 0
 10319  0022FC  0E00               	movlw	0
 10320  0022FE  6F71               	movwf	___fladd@a& (0+255),b
 10321  002300  0E00               	movlw	0
 10322  002302  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10323  002304  0E00               	movlw	0
 10324  002306  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10325  002308  0E00               	movlw	0
 10326  00230A  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10327  00230C                     l7469:
 10328                           
 10329                           ; BSR set to: 0
 10330  00230C  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10331  00230E                     
 10332                           ; BSR set to: 0
 10333  00230E  0E00               	movlw	0
 10334  002310  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10335  002312  EF93  F011         	goto	l7475
 10336  002316                     l7473:
 10337                           
 10338                           ; BSR set to: 0
 10339  002316  0E00               	movlw	0
 10340  002318  6F71               	movwf	___fladd@a& (0+255),b
 10341  00231A  0E00               	movlw	0
 10342  00231C  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10343  00231E  0E00               	movlw	0
 10344  002320  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10345  002322  0E00               	movlw	0
 10346  002324  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10347  002326                     l7475:
 10348                           
 10349                           ; BSR set to: 0
 10350  002326  5177               	movf	___fladd@bexp& (0+255),w,b
 10351  002328  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10352  00232A  B0D8               	btfsc	status,0,c
 10353  00232C  EF9A  F011         	goto	u7321
 10354  002330  EF9C  F011         	goto	u7320
 10355  002334                     u7321:
 10356  002334  EFC3  F011         	goto	l7511
 10357  002338                     u7320:
 10358  002338                     
 10359                           ; BSR set to: 0
 10360  002338  AD75               	btfss	___fladd@signs& (0+255),6,b
 10361  00233A  EFA1  F011         	goto	u7331
 10362  00233E  EFA3  F011         	goto	u7330
 10363  002342                     u7331:
 10364  002342  EFA5  F011         	goto	l7481
 10365  002346                     u7330:
 10366  002346                     
 10367                           ; BSR set to: 0
 10368  002346  0E80               	movlw	128
 10369  002348  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10370  00234A                     l7481:
 10371                           
 10372                           ; BSR set to: 0
 10373  00234A  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10374  00234E                     
 10375                           ; BSR set to: 0
 10376  00234E  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10377  002352                     
 10378                           ; BSR set to: 0
 10379  002352  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10380  002356                     
 10381                           ; BSR set to: 0
 10382  002356  C06D  F078         	movff	___fladd@b,___fladd@grs
 10383  00235A                     
 10384                           ; BSR set to: 0
 10385  00235A  C071  F06D         	movff	___fladd@a,___fladd@b
 10386  00235E                     
 10387                           ; BSR set to: 0
 10388  00235E  C078  F071         	movff	___fladd@grs,___fladd@a
 10389  002362                     
 10390                           ; BSR set to: 0
 10391  002362  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10392  002366                     
 10393                           ; BSR set to: 0
 10394  002366  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10395  00236A                     
 10396                           ; BSR set to: 0
 10397  00236A  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10398  00236E                     
 10399                           ; BSR set to: 0
 10400  00236E  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10401  002372                     
 10402                           ; BSR set to: 0
 10403  002372  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10404  002376                     
 10405                           ; BSR set to: 0
 10406  002376  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10407  00237A                     
 10408                           ; BSR set to: 0
 10409  00237A  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10410  00237E                     
 10411                           ; BSR set to: 0
 10412  00237E  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10413  002382                     
 10414                           ; BSR set to: 0
 10415  002382  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10416  002386                     l7511:
 10417                           
 10418                           ; BSR set to: 0
 10419  002386  0E00               	movlw	0
 10420  002388  6F78               	movwf	___fladd@grs& (0+255),b
 10421  00238A                     
 10422                           ; BSR set to: 0
 10423  00238A  5177               	movf	___fladd@bexp& (0+255),w,b
 10424  00238C  C076  F036         	movff	___fladd@aexp,??___fladd
 10425  002390  6A37               	clrf	(??___fladd+1)^0,c
 10426  002392  5E36               	subwf	??___fladd^0,f,c
 10427  002394  0E00               	movlw	0
 10428  002396  5A37               	subwfb	(??___fladd+1)^0,f,c
 10429  002398  BE37               	btfsc	(??___fladd+1)^0,7,c
 10430  00239A  EFD8  F011         	goto	u7341
 10431  00239E  5037               	movf	(??___fladd+1)^0,w,c
 10432  0023A0  E109               	bnz	u7340
 10433  0023A2  0E1A               	movlw	26
 10434  0023A4  5C36               	subwf	??___fladd^0,w,c
 10435  0023A6  A0D8               	btfss	status,0,c
 10436  0023A8  EFD8  F011         	goto	u7341
 10437  0023AC  EFDA  F011         	goto	u7340
 10438  0023B0                     u7341:
 10439  0023B0  EF11  F012         	goto	l1928
 10440  0023B4                     u7340:
 10441  0023B4                     
 10442                           ; BSR set to: 0
 10443  0023B4  516D               	movf	___fladd@b& (0+255),w,b
 10444  0023B6  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10445  0023B8  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10446  0023BA  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10447  0023BC  A4D8               	btfss	status,2,c
 10448  0023BE  EFE3  F011         	goto	u7351
 10449  0023C2  EFE6  F011         	goto	u7350
 10450  0023C6                     u7351:
 10451  0023C6  0E01               	movlw	1
 10452  0023C8  EFE7  F011         	goto	u7360
 10453  0023CC                     u7350:
 10454  0023CC  0E00               	movlw	0
 10455  0023CE                     u7360:
 10456  0023CE  6F78               	movwf	___fladd@grs& (0+255),b
 10457  0023D0                     
 10458                           ; BSR set to: 0
 10459  0023D0  0E00               	movlw	0
 10460  0023D2  6F6D               	movwf	___fladd@b& (0+255),b
 10461  0023D4  0E00               	movlw	0
 10462  0023D6  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10463  0023D8  0E00               	movlw	0
 10464  0023DA  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10465  0023DC  0E00               	movlw	0
 10466  0023DE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10467  0023E0                     
 10468                           ; BSR set to: 0
 10469  0023E0  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10470  0023E4  EF1A  F012         	goto	l1927
 10471  0023E8                     l1929:
 10472                           
 10473                           ; BSR set to: 0
 10474  0023E8  A178               	btfss	___fladd@grs& (0+255),0,b
 10475  0023EA  EFF9  F011         	goto	u7371
 10476  0023EE  EFFB  F011         	goto	u7370
 10477  0023F2                     u7371:
 10478  0023F2  EF01  F012         	goto	l7523
 10479  0023F6                     u7370:
 10480  0023F6                     
 10481                           ; BSR set to: 0
 10482  0023F6  90D8               	bcf	status,0,c
 10483  0023F8  3178               	rrcf	___fladd@grs& (0+255),w,b
 10484  0023FA  0901               	iorlw	1
 10485  0023FC  6F78               	movwf	___fladd@grs& (0+255),b
 10486  0023FE  EF03  F012         	goto	l7525
 10487  002402                     l7523:
 10488                           
 10489                           ; BSR set to: 0
 10490  002402  90D8               	bcf	status,0,c
 10491  002404  3378               	rrcf	___fladd@grs& (0+255),f,b
 10492  002406                     l7525:
 10493                           
 10494                           ; BSR set to: 0
 10495  002406  A16D               	btfss	___fladd@b& (0+255),0,b
 10496  002408  EF08  F012         	goto	u7381
 10497  00240C  EF0A  F012         	goto	u7380
 10498  002410                     u7381:
 10499  002410  EF0B  F012         	goto	l7529
 10500  002414                     u7380:
 10501  002414                     
 10502                           ; BSR set to: 0
 10503  002414  8F78               	bsf	___fladd@grs& (0+255),7,b
 10504  002416                     l7529:
 10505                           
 10506                           ; BSR set to: 0
 10507  002416  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10508  002418  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10509  00241A  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10510  00241C  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10511  00241E  336D               	rrcf	___fladd@b& (0+255),f,b
 10512  002420                     
 10513                           ; BSR set to: 0
 10514  002420  2B77               	incf	___fladd@bexp& (0+255),f,b
 10515  002422                     l1928:
 10516                           
 10517                           ; BSR set to: 0
 10518  002422  5176               	movf	___fladd@aexp& (0+255),w,b
 10519  002424  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10520  002426  A0D8               	btfss	status,0,c
 10521  002428  EF18  F012         	goto	u7391
 10522  00242C  EF1A  F012         	goto	u7390
 10523  002430                     u7391:
 10524  002430  EFF4  F011         	goto	l1929
 10525  002434                     u7390:
 10526  002434                     l1927:
 10527                           
 10528                           ; BSR set to: 0
 10529  002434  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10530  002436  EF1F  F012         	goto	u7401
 10531  00243A  EF21  F012         	goto	u7400
 10532  00243E                     u7401:
 10533  00243E  EF61  F012         	goto	l7557
 10534  002442                     u7400:
 10535  002442                     
 10536                           ; BSR set to: 0
 10537  002442  5177               	movf	___fladd@bexp& (0+255),w,b
 10538  002444  A4D8               	btfss	status,2,c
 10539  002446  EF27  F012         	goto	u7411
 10540  00244A  EF29  F012         	goto	u7410
 10541  00244E                     u7411:
 10542  00244E  EF33  F012         	goto	l7539
 10543  002452                     u7410:
 10544  002452                     
 10545                           ; BSR set to: 0
 10546  002452  0E00               	movlw	0
 10547  002454  6F6D               	movwf	?___fladd& (0+255),b
 10548  002456  0E00               	movlw	0
 10549  002458  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10550  00245A  0E00               	movlw	0
 10551  00245C  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10552  00245E  0E00               	movlw	0
 10553  002460  6F70               	movwf	(?___fladd+3)& (0+255),b
 10554  002462  EF82  F013         	goto	l1936
 10555  002466                     l7539:
 10556                           
 10557                           ; BSR set to: 0
 10558  002466  5171               	movf	___fladd@a& (0+255),w,b
 10559  002468  276D               	addwf	___fladd@b& (0+255),f,b
 10560  00246A  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10561  00246C  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10562  00246E  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10563  002470  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10564  002472  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10565  002474  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10566  002476                     
 10567                           ; BSR set to: 0
 10568  002476  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10569  002478  EF40  F012         	goto	u7421
 10570  00247C  EF42  F012         	goto	u7420
 10571  002480                     u7421:
 10572  002480  EFEE  F012         	goto	l7593
 10573  002484                     u7420:
 10574  002484                     
 10575                           ; BSR set to: 0
 10576  002484  A178               	btfss	___fladd@grs& (0+255),0,b
 10577  002486  EF47  F012         	goto	u7431
 10578  00248A  EF49  F012         	goto	u7430
 10579  00248E                     u7431:
 10580  00248E  EF4F  F012         	goto	l7547
 10581  002492                     u7430:
 10582  002492                     
 10583                           ; BSR set to: 0
 10584  002492  90D8               	bcf	status,0,c
 10585  002494  3178               	rrcf	___fladd@grs& (0+255),w,b
 10586  002496  0901               	iorlw	1
 10587  002498  6F78               	movwf	___fladd@grs& (0+255),b
 10588  00249A  EF51  F012         	goto	l7549
 10589  00249E                     l7547:
 10590                           
 10591                           ; BSR set to: 0
 10592  00249E  90D8               	bcf	status,0,c
 10593  0024A0  3378               	rrcf	___fladd@grs& (0+255),f,b
 10594  0024A2                     l7549:
 10595                           
 10596                           ; BSR set to: 0
 10597  0024A2  A16D               	btfss	___fladd@b& (0+255),0,b
 10598  0024A4  EF56  F012         	goto	u7441
 10599  0024A8  EF58  F012         	goto	u7440
 10600  0024AC                     u7441:
 10601  0024AC  EF59  F012         	goto	l7553
 10602  0024B0                     u7440:
 10603  0024B0                     
 10604                           ; BSR set to: 0
 10605  0024B0  8F78               	bsf	___fladd@grs& (0+255),7,b
 10606  0024B2                     l7553:
 10607                           
 10608                           ; BSR set to: 0
 10609  0024B2  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10610  0024B4  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10611  0024B6  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10612  0024B8  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10613  0024BA  336D               	rrcf	___fladd@b& (0+255),f,b
 10614  0024BC                     
 10615                           ; BSR set to: 0
 10616  0024BC  2B77               	incf	___fladd@bexp& (0+255),f,b
 10617  0024BE  EFEE  F012         	goto	l7593
 10618  0024C2                     l7557:
 10619                           
 10620                           ; BSR set to: 0
 10621  0024C2  5171               	movf	___fladd@a& (0+255),w,b
 10622  0024C4  5D6D               	subwf	___fladd@b& (0+255),w,b
 10623  0024C6  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10624  0024C8  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10625  0024CA  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10626  0024CC  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10627  0024CE  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10628  0024D0  0A80               	xorlw	128
 10629  0024D2  6E36               	movwf	??___fladd^0,c
 10630  0024D4  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10631  0024D6  0A80               	xorlw	128
 10632  0024D8  5836               	subwfb	??___fladd^0,w,c
 10633  0024DA  B0D8               	btfsc	status,0,c
 10634  0024DC  EF72  F012         	goto	u7451
 10635  0024E0  EF74  F012         	goto	u7450
 10636  0024E4                     u7451:
 10637  0024E4  EF9F  F012         	goto	l7567
 10638  0024E8                     u7450:
 10639  0024E8                     
 10640                           ; BSR set to: 0
 10641  0024E8  516D               	movf	___fladd@b& (0+255),w,b
 10642  0024EA  5D71               	subwf	___fladd@a& (0+255),w,b
 10643  0024EC  6E36               	movwf	??___fladd^0,c
 10644  0024EE  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10645  0024F0  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10646  0024F2  6E37               	movwf	(??___fladd+1)^0,c
 10647  0024F4  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10648  0024F6  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10649  0024F8  6E38               	movwf	(??___fladd+2)^0,c
 10650  0024FA  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10651  0024FC  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10652  0024FE  6E39               	movwf	(??___fladd+3)^0,c
 10653  002500  0EFF               	movlw	255
 10654  002502  2436               	addwf	??___fladd^0,w,c
 10655  002504  6F6D               	movwf	___fladd@b& (0+255),b
 10656  002506  0EFF               	movlw	255
 10657  002508  2037               	addwfc	(??___fladd+1)^0,w,c
 10658  00250A  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10659  00250C  0EFF               	movlw	255
 10660  00250E  2038               	addwfc	(??___fladd+2)^0,w,c
 10661  002510  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10662  002512  0EFF               	movlw	255
 10663  002514  2039               	addwfc	(??___fladd+3)^0,w,c
 10664  002516  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10665  002518  0E80               	movlw	128
 10666  00251A  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10667  00251C                     
 10668                           ; BSR set to: 0
 10669  00251C  6D78               	negf	___fladd@grs& (0+255),b
 10670  00251E                     
 10671                           ; BSR set to: 0
 10672  00251E  5178               	movf	___fladd@grs& (0+255),w,b
 10673  002520  A4D8               	btfss	status,2,c
 10674  002522  EF95  F012         	goto	u7461
 10675  002526  EF97  F012         	goto	u7460
 10676  00252A                     u7461:
 10677  00252A  EFA7  F012         	goto	l1944
 10678  00252E                     u7460:
 10679  00252E                     
 10680                           ; BSR set to: 0
 10681  00252E  0E01               	movlw	1
 10682  002530  276D               	addwf	___fladd@b& (0+255),f,b
 10683  002532  0E00               	movlw	0
 10684  002534  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10685  002536  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10686  002538  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10687  00253A  EFA7  F012         	goto	l1944
 10688  00253E                     l7567:
 10689                           
 10690                           ; BSR set to: 0
 10691  00253E  5171               	movf	___fladd@a& (0+255),w,b
 10692  002540  5F6D               	subwf	___fladd@b& (0+255),f,b
 10693  002542  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10694  002544  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10695  002546  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10696  002548  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10697  00254A  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10698  00254C  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10699  00254E                     l1944:
 10700                           
 10701                           ; BSR set to: 0
 10702  00254E  516D               	movf	___fladd@b& (0+255),w,b
 10703  002550  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10704  002552  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10705  002554  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10706  002556  A4D8               	btfss	status,2,c
 10707  002558  EFB0  F012         	goto	u7471
 10708  00255C  EFB2  F012         	goto	u7470
 10709  002560                     u7471:
 10710  002560  EFE7  F012         	goto	l7591
 10711  002564                     u7470:
 10712  002564                     
 10713                           ; BSR set to: 0
 10714  002564  5178               	movf	___fladd@grs& (0+255),w,b
 10715  002566  A4D8               	btfss	status,2,c
 10716  002568  EFB8  F012         	goto	u7481
 10717  00256C  EFBA  F012         	goto	u7480
 10718  002570                     u7481:
 10719  002570  EFE7  F012         	goto	l7591
 10720  002574                     u7480:
 10721  002574                     
 10722                           ; BSR set to: 0
 10723  002574  0E00               	movlw	0
 10724  002576  6F6D               	movwf	?___fladd& (0+255),b
 10725  002578  0E00               	movlw	0
 10726  00257A  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10727  00257C  0E00               	movlw	0
 10728  00257E  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10729  002580  0E00               	movlw	0
 10730  002582  6F70               	movwf	(?___fladd+3)& (0+255),b
 10731  002584  EF82  F013         	goto	l1936
 10732  002588                     l7575:
 10733                           
 10734                           ; BSR set to: 0
 10735  002588  90D8               	bcf	status,0,c
 10736  00258A  376D               	rlcf	___fladd@b& (0+255),f,b
 10737  00258C  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10738  00258E  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10739  002590  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10740  002592                     
 10741                           ; BSR set to: 0
 10742  002592  AF78               	btfss	___fladd@grs& (0+255),7,b
 10743  002594  EFCE  F012         	goto	u7491
 10744  002598  EFD0  F012         	goto	u7490
 10745  00259C                     u7491:
 10746  00259C  EFD1  F012         	goto	l7581
 10747  0025A0                     u7490:
 10748  0025A0                     
 10749                           ; BSR set to: 0
 10750  0025A0  816D               	bsf	___fladd@b& (0+255),0,b
 10751  0025A2                     l7581:
 10752                           
 10753                           ; BSR set to: 0
 10754  0025A2  A178               	btfss	___fladd@grs& (0+255),0,b
 10755  0025A4  EFD6  F012         	goto	u7501
 10756  0025A8  EFD8  F012         	goto	u7500
 10757  0025AC                     u7501:
 10758  0025AC  EFDC  F012         	goto	l7585
 10759  0025B0                     u7500:
 10760  0025B0                     
 10761                           ; BSR set to: 0
 10762  0025B0  80D8               	bsf	status,0,c
 10763  0025B2  3778               	rlcf	___fladd@grs& (0+255),f,b
 10764  0025B4  EFDE  F012         	goto	l7587
 10765  0025B8                     l7585:
 10766                           
 10767                           ; BSR set to: 0
 10768  0025B8  90D8               	bcf	status,0,c
 10769  0025BA  3778               	rlcf	___fladd@grs& (0+255),f,b
 10770  0025BC                     l7587:
 10771                           
 10772                           ; BSR set to: 0
 10773  0025BC  5177               	movf	___fladd@bexp& (0+255),w,b
 10774  0025BE  B4D8               	btfsc	status,2,c
 10775  0025C0  EFE4  F012         	goto	u7511
 10776  0025C4  EFE6  F012         	goto	u7510
 10777  0025C8                     u7511:
 10778  0025C8  EFE7  F012         	goto	l7591
 10779  0025CC                     u7510:
 10780  0025CC                     
 10781                           ; BSR set to: 0
 10782  0025CC  0777               	decf	___fladd@bexp& (0+255),f,b
 10783  0025CE                     l7591:
 10784                           
 10785                           ; BSR set to: 0
 10786  0025CE  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10787  0025D0  EFEC  F012         	goto	u7521
 10788  0025D4  EFEE  F012         	goto	u7520
 10789  0025D8                     u7521:
 10790  0025D8  EFC4  F012         	goto	l7575
 10791  0025DC                     u7520:
 10792  0025DC                     l7593:
 10793                           
 10794                           ; BSR set to: 0
 10795  0025DC  0E00               	movlw	0
 10796  0025DE  6F76               	movwf	___fladd@aexp& (0+255),b
 10797  0025E0                     
 10798                           ; BSR set to: 0
 10799  0025E0  AF78               	btfss	___fladd@grs& (0+255),7,b
 10800  0025E2  EFF5  F012         	goto	u7531
 10801  0025E6  EFF7  F012         	goto	u7530
 10802  0025EA                     u7531:
 10803  0025EA  EF0F  F013         	goto	l1953
 10804  0025EE                     u7530:
 10805  0025EE                     
 10806                           ; BSR set to: 0
 10807  0025EE  C078  F036         	movff	___fladd@grs,??___fladd
 10808  0025F2  0E7F               	movlw	127
 10809  0025F4  1636               	andwf	??___fladd^0,f,c
 10810  0025F6  B4D8               	btfsc	status,2,c
 10811  0025F8  EF00  F013         	goto	u7541
 10812  0025FC  EF02  F013         	goto	u7540
 10813  002600                     u7541:
 10814  002600  EF06  F013         	goto	l1954
 10815  002604                     u7540:
 10816  002604                     l7599:
 10817                           
 10818                           ; BSR set to: 0
 10819  002604  0E01               	movlw	1
 10820  002606  6F76               	movwf	___fladd@aexp& (0+255),b
 10821  002608  EF0F  F013         	goto	l1953
 10822  00260C                     l1954:
 10823                           
 10824                           ; BSR set to: 0
 10825  00260C  A16D               	btfss	___fladd@b& (0+255),0,b
 10826  00260E  EF0B  F013         	goto	u7551
 10827  002612  EF0D  F013         	goto	u7550
 10828  002616                     u7551:
 10829  002616  EF0F  F013         	goto	l1953
 10830  00261A                     u7550:
 10831  00261A  EF02  F013         	goto	l7599
 10832  00261E                     l1953:
 10833                           
 10834                           ; BSR set to: 0
 10835  00261E  5176               	movf	___fladd@aexp& (0+255),w,b
 10836  002620  B4D8               	btfsc	status,2,c
 10837  002622  EF15  F013         	goto	u7561
 10838  002626  EF17  F013         	goto	u7560
 10839  00262A                     u7561:
 10840  00262A  EF42  F013         	goto	l7611
 10841  00262E                     u7560:
 10842  00262E                     
 10843                           ; BSR set to: 0
 10844  00262E  0E01               	movlw	1
 10845  002630  276D               	addwf	___fladd@b& (0+255),f,b
 10846  002632  0E00               	movlw	0
 10847  002634  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10848  002636  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10849  002638  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10850  00263A                     
 10851                           ; BSR set to: 0
 10852  00263A  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10853  00263C  EF22  F013         	goto	u7571
 10854  002640  EF24  F013         	goto	u7570
 10855  002644                     u7571:
 10856  002644  EF42  F013         	goto	l7611
 10857  002648                     u7570:
 10858  002648                     
 10859                           ; BSR set to: 0
 10860  002648  C06D  F036         	movff	___fladd@b,??___fladd
 10861  00264C  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 10862  002650  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 10863  002654  C070  F039         	movff	___fladd@b+3,??___fladd+3
 10864  002658  3439               	rlcf	(??___fladd+3)^0,w,c
 10865  00265A  3239               	rrcf	(??___fladd+3)^0,f,c
 10866  00265C  3238               	rrcf	(??___fladd+2)^0,f,c
 10867  00265E  3237               	rrcf	(??___fladd+1)^0,f,c
 10868  002660  3236               	rrcf	??___fladd^0,f,c
 10869  002662  C036  F06D         	movff	??___fladd,___fladd@b
 10870  002666  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 10871  00266A  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 10872  00266E  C039  F070         	movff	??___fladd+3,___fladd@b+3
 10873  002672  2977               	incf	___fladd@bexp& (0+255),w,b
 10874  002674  B4D8               	btfsc	status,2,c
 10875  002676  EF3F  F013         	goto	u7581
 10876  00267A  EF41  F013         	goto	u7580
 10877  00267E                     u7581:
 10878  00267E  EF42  F013         	goto	l7611
 10879  002682                     u7580:
 10880  002682                     
 10881                           ; BSR set to: 0
 10882  002682  2B77               	incf	___fladd@bexp& (0+255),f,b
 10883  002684                     l7611:
 10884                           
 10885                           ; BSR set to: 0
 10886  002684  2977               	incf	___fladd@bexp& (0+255),w,b
 10887  002686  B4D8               	btfsc	status,2,c
 10888  002688  EF48  F013         	goto	u7591
 10889  00268C  EF4A  F013         	goto	u7590
 10890  002690                     u7591:
 10891  002690  EF52  F013         	goto	l7615
 10892  002694                     u7590:
 10893  002694                     
 10894                           ; BSR set to: 0
 10895  002694  5177               	movf	___fladd@bexp& (0+255),w,b
 10896  002696  A4D8               	btfss	status,2,c
 10897  002698  EF50  F013         	goto	u7601
 10898  00269C  EF52  F013         	goto	u7600
 10899  0026A0                     u7601:
 10900  0026A0  EF64  F013         	goto	l7619
 10901  0026A4                     u7600:
 10902  0026A4                     l7615:
 10903                           
 10904                           ; BSR set to: 0
 10905  0026A4  0E00               	movlw	0
 10906  0026A6  6F6D               	movwf	___fladd@b& (0+255),b
 10907  0026A8  0E00               	movlw	0
 10908  0026AA  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10909  0026AC  0E00               	movlw	0
 10910  0026AE  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10911  0026B0  0E00               	movlw	0
 10912  0026B2  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10913  0026B4  5177               	movf	___fladd@bexp& (0+255),w,b
 10914  0026B6  A4D8               	btfss	status,2,c
 10915  0026B8  EF60  F013         	goto	u7611
 10916  0026BC  EF62  F013         	goto	u7610
 10917  0026C0                     u7611:
 10918  0026C0  EF64  F013         	goto	l7619
 10919  0026C4                     u7610:
 10920  0026C4                     
 10921                           ; BSR set to: 0
 10922  0026C4  0E00               	movlw	0
 10923  0026C6  6F75               	movwf	___fladd@signs& (0+255),b
 10924  0026C8                     l7619:
 10925                           
 10926                           ; BSR set to: 0
 10927  0026C8  A177               	btfss	___fladd@bexp& (0+255),0,b
 10928  0026CA  EF69  F013         	goto	u7621
 10929  0026CE  EF6B  F013         	goto	u7620
 10930  0026D2                     u7621:
 10931  0026D2  EF6E  F013         	goto	l7623
 10932  0026D6                     u7620:
 10933  0026D6                     
 10934                           ; BSR set to: 0
 10935  0026D6  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10936  0026D8  EF6F  F013         	goto	l7625
 10937  0026DC                     l7623:
 10938                           
 10939                           ; BSR set to: 0
 10940  0026DC  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 10941  0026DE                     l7625:
 10942                           
 10943                           ; BSR set to: 0
 10944  0026DE  90D8               	bcf	status,0,c
 10945  0026E0  3177               	rrcf	___fladd@bexp& (0+255),w,b
 10946  0026E2  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10947  0026E4                     
 10948                           ; BSR set to: 0
 10949  0026E4  AF75               	btfss	___fladd@signs& (0+255),7,b
 10950  0026E6  EF77  F013         	goto	u7631
 10951  0026EA  EF79  F013         	goto	u7630
 10952  0026EE                     u7631:
 10953  0026EE  EF7A  F013         	goto	l7631
 10954  0026F2                     u7630:
 10955  0026F2                     
 10956                           ; BSR set to: 0
 10957  0026F2  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 10958  0026F4                     l7631:
 10959                           
 10960                           ; BSR set to: 0
 10961  0026F4  C06D  F06D         	movff	___fladd@b,?___fladd
 10962  0026F8  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 10963  0026FC  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 10964  002700  C070  F070         	movff	___fladd@b+3,?___fladd+3
 10965  002704                     l1936:
 10966                           
 10967                           ; BSR set to: 0
 10968  002704  0012               	return		;funcret
 10969  002706                     __end_of___fladd:
 10970                           	callstack 0
 10971                           
 10972 ;; *************** function _calcMotorPow *****************
 10973 ;; Defined at:
 10974 ;;		line 343 in file "main.c"
 10975 ;; Parameters:    Size  Location     Type
 10976 ;;		None
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 10979 ;;  setSpeedDelt    2   37[BANK0 ] short 
 10980 ;;  addMPow         1   41[BANK0 ] char 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  1    wreg      void 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10991 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10993 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;Total ram usage:        7 bytes
 10995 ;; Hardware stack levels used: 1
 10996 ;; Hardware stack levels required when called: 10
 10997 ;; This function calls:
 10998 ;;		___awdiv
 10999 ;;		___flmul
 11000 ;;		___fltol
 11001 ;;		___xxtofl
 11002 ;;		_actSpeed
 11003 ;;		_setMotor
 11004 ;; This function is called by:
 11005 ;;		_loop
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009                           	psect	text40
 11010  004282                     __ptext40:
 11011                           	callstack 0
 11012  004282                     _calcMotorPow:
 11013                           	callstack 19
 11014  004282                     
 11015                           ;main.c: 344:     currentSpeed = actSpeed();
 11016  004282  ECCE  F028         	call	_actSpeed	;wreg free
 11017  004286  C022  F0E9         	movff	?_actSpeed,_currentSpeed
 11018  00428A  C023  F0EA         	movff	?_actSpeed+1,_currentSpeed+1
 11019  00428E                     
 11020                           ;main.c: 346:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11021  00428E  0100               	movlb	0	; () banked
 11022  004290  51E9               	movf	_currentSpeed& (0+255),w,b
 11023  004292  5DEB               	subwf	_setSpeed& (0+255),w,b
 11024  004294  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11025  004296  51EA               	movf	(_currentSpeed+1)& (0+255),w,b
 11026  004298  59EC               	subwfb	(_setSpeed+1)& (0+255),w,b
 11027  00429A  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11028  00429C                     
 11029                           ; BSR set to: 0
 11030                           ;main.c: 347:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11031  00429C  0101               	movlb	1	; () banked
 11032  00429E  512C               	movf	_oldSpeed& (0+255),w,b
 11033  0042A0  0100               	movlb	0	; () banked
 11034  0042A2  5DE9               	subwf	_currentSpeed& (0+255),w,b
 11035  0042A4  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11036  0042A6  0101               	movlb	1	; () banked
 11037  0042A8  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11038  0042AA  0100               	movlb	0	; () banked
 11039  0042AC  59EA               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11040  0042AE  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11041  0042B0                     
 11042                           ; BSR set to: 0
 11043                           ;main.c: 353:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11044  0042B0  0E0A               	movlw	10
 11045  0042B2  6E2E               	movwf	___flmul@a^0,c
 11046  0042B4  0ED7               	movlw	215
 11047  0042B6  6E2F               	movwf	(___flmul@a+1)^0,c
 11048  0042B8  0EA3               	movlw	163
 11049  0042BA  6E30               	movwf	(___flmul@a+2)^0,c
 11050  0042BC  0E3C               	movlw	60
 11051  0042BE  6E31               	movwf	(___flmul@a+3)^0,c
 11052  0042C0  0E00               	movlw	0
 11053  0042C2  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11054  0042C4  0E02               	movlw	2
 11055  0042C6  6E16               	movwf	___awdiv@divisor^0,c
 11056  0042C8  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11057  0042CC  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11058  0042D0  EC61  F026         	call	___awdiv	;wreg free
 11059  0042D4  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11060  0042D8  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11061  0042DC  5014               	movf	?___awdiv^0,w,c
 11062  0042DE  0100               	movlb	0	; () banked
 11063  0042E0  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11064  0042E2  5015               	movf	(?___awdiv+1)^0,w,c
 11065  0042E4  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11066  0042E6  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11067  0042EA  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11068  0042EE  0E00               	movlw	0
 11069  0042F0  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11070  0042F2  0EFF               	movlw	-1
 11071  0042F4  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11072  0042F6  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11073  0042F8  0E01               	movlw	1
 11074  0042FA  EC60  F01D         	call	___xxtofl
 11075  0042FE  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11076  004302  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11077  004306  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11078  00430A  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11079  00430E  EC83  F013         	call	___flmul	;wreg free
 11080  004312  C02A  F079         	movff	?___flmul,___fltol@f1
 11081  004316  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11082  00431A  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11083  00431E  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11084  004322  EC08  F023         	call	___fltol	;wreg free
 11085  004326  0100               	movlb	0	; () banked
 11086  004328  5179               	movf	?___fltol& (0+255),w,b
 11087  00432A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11088  00432C                     
 11089                           ; BSR set to: 0
 11090                           ;main.c: 355:     if (addMPow > (3)) {
 11091  00432C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11092  00432E  0A80               	xorlw	128
 11093  004330  0F7C               	addlw	-132
 11094  004332  A0D8               	btfss	status,0,c
 11095  004334  EF9E  F021         	goto	u10191
 11096  004338  EFA0  F021         	goto	u10190
 11097  00433C                     u10191:
 11098  00433C  EFA4  F021         	goto	l9129
 11099  004340                     u10190:
 11100  004340                     
 11101                           ; BSR set to: 0
 11102                           ;main.c: 356:         addMPow = (3);
 11103  004340  0E03               	movlw	3
 11104  004342  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11105                           
 11106                           ;main.c: 357:     } else if (addMPow < -(3)) {
 11107  004344  EFB0  F021         	goto	l9133
 11108  004348                     l9129:
 11109                           
 11110                           ; BSR set to: 0
 11111  004348  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11112  00434A  0A80               	xorlw	128
 11113  00434C  0F83               	addlw	131
 11114  00434E  B0D8               	btfsc	status,0,c
 11115  004350  EFAC  F021         	goto	u10201
 11116  004354  EFAE  F021         	goto	u10200
 11117  004358                     u10201:
 11118  004358  EFB0  F021         	goto	l9133
 11119  00435C                     u10200:
 11120  00435C                     
 11121                           ; BSR set to: 0
 11122                           ;main.c: 358:         addMPow = -(3);
 11123  00435C  0EFD               	movlw	253
 11124  00435E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11125  004360                     l9133:
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;main.c: 361:     actMotorPow += addMPow;
 11129  004360  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11130  004362  27E7               	addwf	_actMotorPow& (0+255),f,b
 11131  004364  0E00               	movlw	0
 11132  004366  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11133  004368  0EFF               	movlw	255
 11134  00436A  23E8               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11135  00436C                     
 11136                           ; BSR set to: 0
 11137                           ;main.c: 363:     if (actMotorPow > (700)) {
 11138  00436C  BFE8               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11139  00436E  EFC2  F021         	goto	u10211
 11140  004372  0EBD               	movlw	189
 11141  004374  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11142  004376  0E02               	movlw	2
 11143  004378  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11144  00437A  A0D8               	btfss	status,0,c
 11145  00437C  EFC2  F021         	goto	u10211
 11146  004380  EFC4  F021         	goto	u10210
 11147  004384                     u10211:
 11148  004384  EFCA  F021         	goto	l9139
 11149  004388                     u10210:
 11150  004388                     
 11151                           ; BSR set to: 0
 11152                           ;main.c: 364:         actMotorPow = (700);
 11153  004388  0E02               	movlw	2
 11154  00438A  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11155  00438C  0EBC               	movlw	188
 11156  00438E  6FE7               	movwf	_actMotorPow& (0+255),b
 11157                           
 11158                           ;main.c: 365:     } else if (actMotorPow < (-400)) {
 11159  004390  EFDC  F021         	goto	l9143
 11160  004394                     l9139:
 11161                           
 11162                           ; BSR set to: 0
 11163  004394  AFE8               	btfss	(_actMotorPow+1)& (0+255),7,b
 11164  004396  EFD6  F021         	goto	u10221
 11165  00439A  0E70               	movlw	112
 11166  00439C  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11167  00439E  0EFE               	movlw	254
 11168  0043A0  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11169  0043A2  B0D8               	btfsc	status,0,c
 11170  0043A4  EFD6  F021         	goto	u10221
 11171  0043A8  EFD8  F021         	goto	u10220
 11172  0043AC                     u10221:
 11173  0043AC  EFDC  F021         	goto	l9143
 11174  0043B0                     u10220:
 11175  0043B0                     
 11176                           ; BSR set to: 0
 11177                           ;main.c: 366:         actMotorPow = (-400);
 11178  0043B0  0EFE               	movlw	254
 11179  0043B2  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11180  0043B4  0E70               	movlw	112
 11181  0043B6  6FE7               	movwf	_actMotorPow& (0+255),b
 11182  0043B8                     l9143:
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;main.c: 369:     setMotor(actMotorPow);
 11186  0043B8  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
 11187  0043BC  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11188  0043C0  EC8B  F025         	call	_setMotor	;wreg free
 11189  0043C4                     
 11190                           ;main.c: 371:     oldSpeed = currentSpeed;
 11191  0043C4  C0E9  F12C         	movff	_currentSpeed,_oldSpeed
 11192  0043C8  C0EA  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11193  0043CC  0012               	return		;funcret
 11194  0043CE                     __end_of_calcMotorPow:
 11195                           	callstack 0
 11196                           
 11197 ;; *************** function _setMotor *****************
 11198 ;; Defined at:
 11199 ;;		line 374 in file "main.c"
 11200 ;; Parameters:    Size  Location     Type
 11201 ;;  motorPower      2   23[COMRAM] short 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;		None
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  1    wreg      void 
 11206 ;; Registers used:
 11207 ;;		wreg, status,2, status,0, cstack
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;Total ram usage:        4 bytes
 11218 ;; Hardware stack levels used: 1
 11219 ;; Hardware stack levels required when called: 9
 11220 ;; This function calls:
 11221 ;;		_PWM7_LoadDutyValue
 11222 ;;		_PWM8_LoadDutyValue
 11223 ;; This function is called by:
 11224 ;;		_loop
 11225 ;;		_startAccell
 11226 ;;		_calcMotorPow
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text41
 11231  004B16                     __ptext41:
 11232                           	callstack 0
 11233  004B16                     _setMotor:
 11234                           	callstack 19
 11235  004B16                     
 11236                           ;main.c: 375:     if (motorPower >= (40)) {
 11237  004B16  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11238  004B18  EF97  F025         	goto	u9821
 11239  004B1C  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11240  004B1E  E109               	bnz	u9820
 11241  004B20  0E28               	movlw	40
 11242  004B22  5C18               	subwf	setMotor@motorPower^0,w,c
 11243  004B24  A0D8               	btfss	status,0,c
 11244  004B26  EF97  F025         	goto	u9821
 11245  004B2A  EF99  F025         	goto	u9820
 11246  004B2E                     u9821:
 11247  004B2E  EFB9  F025         	goto	l8853
 11248  004B32                     u9820:
 11249  004B32                     
 11250                           ;main.c: 376:         if (motorPower > (700)) {
 11251  004B32  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11252  004B34  EFA5  F025         	goto	u9831
 11253  004B38  0EBD               	movlw	189
 11254  004B3A  5C18               	subwf	setMotor@motorPower^0,w,c
 11255  004B3C  0E02               	movlw	2
 11256  004B3E  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11257  004B40  A0D8               	btfss	status,0,c
 11258  004B42  EFA5  F025         	goto	u9831
 11259  004B46  EFA7  F025         	goto	u9830
 11260  004B4A                     u9831:
 11261  004B4A  EFAB  F025         	goto	l8849
 11262  004B4E                     u9830:
 11263  004B4E                     
 11264                           ;main.c: 377:             motorPower = (700);
 11265  004B4E  0E02               	movlw	2
 11266  004B50  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11267  004B52  0EBC               	movlw	188
 11268  004B54  6E18               	movwf	setMotor@motorPower^0,c
 11269  004B56                     l8849:
 11270                           
 11271                           ;main.c: 379:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11272  004B56  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11273  004B5A  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11274  004B5E  ECEC  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11275  004B62                     
 11276                           ;main.c: 380:         PWM8_LoadDutyValue(0);
 11277  004B62  0E00               	movlw	0
 11278  004B64  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11279  004B66  0E00               	movlw	0
 11280  004B68  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11281  004B6A  ECD2  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11282                           
 11283                           ;main.c: 381:     } else if (motorPower <= -(40)) {
 11284  004B6E  EFFB  F025         	goto	l1379
 11285  004B72                     l8853:
 11286  004B72  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11287  004B74  EFC5  F025         	goto	u9841
 11288  004B78  0ED9               	movlw	217
 11289  004B7A  5C18               	subwf	setMotor@motorPower^0,w,c
 11290  004B7C  0EFF               	movlw	255
 11291  004B7E  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11292  004B80  B0D8               	btfsc	status,0,c
 11293  004B82  EFC5  F025         	goto	u9841
 11294  004B86  EFC7  F025         	goto	u9840
 11295  004B8A                     u9841:
 11296  004B8A  EFEF  F025         	goto	l8863
 11297  004B8E                     u9840:
 11298  004B8E                     
 11299                           ;main.c: 382:         if (motorPower < (-400)) {
 11300  004B8E  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11301  004B90  EFD3  F025         	goto	u9851
 11302  004B94  0E70               	movlw	112
 11303  004B96  5C18               	subwf	setMotor@motorPower^0,w,c
 11304  004B98  0EFE               	movlw	254
 11305  004B9A  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11306  004B9C  B0D8               	btfsc	status,0,c
 11307  004B9E  EFD3  F025         	goto	u9851
 11308  004BA2  EFD5  F025         	goto	u9850
 11309  004BA6                     u9851:
 11310  004BA6  EFD9  F025         	goto	l8859
 11311  004BAA                     u9850:
 11312  004BAA                     
 11313                           ;main.c: 383:             motorPower = (-400);
 11314  004BAA  0EFE               	movlw	254
 11315  004BAC  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11316  004BAE  0E70               	movlw	112
 11317  004BB0  6E18               	movwf	setMotor@motorPower^0,c
 11318  004BB2                     l8859:
 11319                           
 11320                           ;main.c: 385:         PWM7_LoadDutyValue(0);
 11321  004BB2  0E00               	movlw	0
 11322  004BB4  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11323  004BB6  0E00               	movlw	0
 11324  004BB8  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11325  004BBA  ECEC  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11326  004BBE                     
 11327                           ;main.c: 386:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11328  004BBE  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11329  004BC2  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11330  004BC6  1E1A               	comf	??_setMotor^0,f,c
 11331  004BC8  1E1B               	comf	(??_setMotor+1)^0,f,c
 11332  004BCA  4A1A               	infsnz	??_setMotor^0,f,c
 11333  004BCC  2A1B               	incf	(??_setMotor+1)^0,f,c
 11334  004BCE  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11335  004BD2  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11336  004BD6  ECD2  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11337                           
 11338                           ;main.c: 387:     } else {
 11339  004BDA  EFFB  F025         	goto	l1379
 11340  004BDE                     l8863:
 11341                           
 11342                           ;main.c: 389:         PWM7_LoadDutyValue(0);
 11343  004BDE  0E00               	movlw	0
 11344  004BE0  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11345  004BE2  0E00               	movlw	0
 11346  004BE4  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11347  004BE6  ECEC  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11348                           
 11349                           ;main.c: 390:         PWM8_LoadDutyValue(0);
 11350  004BEA  0E00               	movlw	0
 11351  004BEC  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11352  004BEE  0E00               	movlw	0
 11353  004BF0  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11354  004BF2  ECD2  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11355  004BF6                     l1379:
 11356  004BF6  0012               	return		;funcret
 11357  004BF8                     __end_of_setMotor:
 11358                           	callstack 0
 11359                           
 11360 ;; *************** function _PWM8_LoadDutyValue *****************
 11361 ;; Defined at:
 11362 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11365 ;; Auto vars:     Size  Location     Type
 11366 ;;		None
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  1    wreg      void 
 11369 ;; Registers used:
 11370 ;;		wreg, status,2, status,0
 11371 ;; Tracked objects:
 11372 ;;		On entry : 0/0
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11380 ;;Total ram usage:        4 bytes
 11381 ;; Hardware stack levels used: 1
 11382 ;; Hardware stack levels required when called: 8
 11383 ;; This function calls:
 11384 ;;		Nothing
 11385 ;; This function is called by:
 11386 ;;		_setMotor
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           	psect	text42
 11391  0059A4                     __ptext42:
 11392                           	callstack 0
 11393  0059A4                     _PWM8_LoadDutyValue:
 11394                           	callstack 19
 11395  0059A4                     
 11396                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11397  0059A4  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11398  0059A8  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11399  0059AC  90D8               	bcf	status,0,c
 11400  0059AE  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11401  0059B0  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11402  0059B2  90D8               	bcf	status,0,c
 11403  0059B4  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11404  0059B6  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11405  0059B8  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11406  0059BA  6E61               	movwf	97,c	;volatile
 11407                           
 11408                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11409  0059BC  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11410  0059C0  0E03               	movlw	3
 11411  0059C2  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11412  0059C4  0E06               	movlw	6
 11413  0059C6  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11414  0059C8                     u9665:
 11415  0059C8  90D8               	bcf	status,0,c
 11416  0059CA  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11417  0059CC  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11418  0059CE  EFE4  F02C         	goto	u9665
 11419  0059D2  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11420  0059D4  6E60               	movwf	96,c	;volatile
 11421  0059D6  0012               	return		;funcret
 11422  0059D8                     __end_of_PWM8_LoadDutyValue:
 11423                           	callstack 0
 11424                           
 11425 ;; *************** function _PWM7_LoadDutyValue *****************
 11426 ;; Defined at:
 11427 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		wreg, status,2, status,0
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;Total ram usage:        4 bytes
 11446 ;; Hardware stack levels used: 1
 11447 ;; Hardware stack levels required when called: 8
 11448 ;; This function calls:
 11449 ;;		Nothing
 11450 ;; This function is called by:
 11451 ;;		_setMotor
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           	psect	text43
 11456  0059D8                     __ptext43:
 11457                           	callstack 0
 11458  0059D8                     _PWM7_LoadDutyValue:
 11459                           	callstack 19
 11460  0059D8                     
 11461                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11462  0059D8  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11463  0059DC  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11464  0059E0  90D8               	bcf	status,0,c
 11465  0059E2  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11466  0059E4  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11467  0059E6  90D8               	bcf	status,0,c
 11468  0059E8  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11469  0059EA  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11470  0059EC  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11471  0059EE  6E65               	movwf	101,c	;volatile
 11472                           
 11473                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11474  0059F0  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11475  0059F4  0E03               	movlw	3
 11476  0059F6  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11477  0059F8  0E06               	movlw	6
 11478  0059FA  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11479  0059FC                     u9655:
 11480  0059FC  90D8               	bcf	status,0,c
 11481  0059FE  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11482  005A00  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11483  005A02  EFFE  F02C         	goto	u9655
 11484  005A06  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11485  005A08  6E64               	movwf	100,c	;volatile
 11486  005A0A  0012               	return		;funcret
 11487  005A0C                     __end_of_PWM7_LoadDutyValue:
 11488                           	callstack 0
 11489                           
 11490 ;; *************** function _actSpeed *****************
 11491 ;; Defined at:
 11492 ;;		line 66 in file "main.c"
 11493 ;; Parameters:    Size  Location     Type
 11494 ;;		None
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;  speed           2   35[COMRAM] short 
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  2   33[COMRAM] short 
 11499 ;; Registers used:
 11500 ;;		wreg, status,2, status,0, cstack
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;Total ram usage:        4 bytes
 11511 ;; Hardware stack levels used: 1
 11512 ;; Hardware stack levels required when called: 9
 11513 ;; This function calls:
 11514 ;;		___aldiv
 11515 ;; This function is called by:
 11516 ;;		_calcMotorPow
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text44
 11521  00519C                     __ptext44:
 11522                           	callstack 0
 11523  00519C                     _actSpeed:
 11524                           	callstack 19
 11525  00519C                     
 11526                           ;main.c: 67:     int16_t speed = 0;
 11527  00519C  0E00               	movlw	0
 11528  00519E  6E25               	movwf	(actSpeed@speed+1)^0,c
 11529  0051A0  0E00               	movlw	0
 11530  0051A2  6E24               	movwf	actSpeed@speed^0,c
 11531  0051A4                     
 11532                           ;main.c: 68:     if (smtPeriod) {
 11533  0051A4  5048               	movf	_smtPeriod^0,w,c	;volatile
 11534  0051A6  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11535  0051A8  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11536  0051AA  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11537  0051AC  B4D8               	btfsc	status,2,c
 11538  0051AE  EFDB  F028         	goto	u6421
 11539  0051B2  EFDD  F028         	goto	u6420
 11540  0051B6                     u6421:
 11541  0051B6  EF13  F029         	goto	l6675
 11542  0051BA                     u6420:
 11543  0051BA                     
 11544                           ;main.c: 69:         if (CLC3CONbits.LC3OUT) {
 11545  0051BA  013C               	movlb	60	; () banked
 11546  0051BC  AB60               	btfss	96,5,b	;volatile
 11547  0051BE  EFE3  F028         	goto	u6431
 11548  0051C2  EFE5  F028         	goto	u6430
 11549  0051C6                     u6431:
 11550  0051C6  EFFD  F028         	goto	l6673
 11551  0051CA                     u6430:
 11552  0051CA                     
 11553                           ; BSR set to: 60
 11554                           ;main.c: 70:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11555  0051CA  0E20               	movlw	32
 11556  0051CC  6E14               	movwf	___aldiv@dividend^0,c
 11557  0051CE  0EA1               	movlw	161
 11558  0051D0  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11559  0051D2  0E07               	movlw	7
 11560  0051D4  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11561  0051D6  0E00               	movlw	0
 11562  0051D8  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11563  0051DA  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11564  0051DE  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11565  0051E2  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11566  0051E6  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11567  0051EA  EC82  F022         	call	___aldiv	;wreg free
 11568  0051EE  C014  F024         	movff	?___aldiv,actSpeed@speed
 11569  0051F2  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11570                           
 11571                           ;main.c: 71:         } else {
 11572  0051F6  EF13  F029         	goto	l6675
 11573  0051FA                     l6673:
 11574                           
 11575                           ; BSR set to: 60
 11576                           ;main.c: 72:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11577  0051FA  0EE0               	movlw	224
 11578  0051FC  6E14               	movwf	___aldiv@dividend^0,c
 11579  0051FE  0E5E               	movlw	94
 11580  005200  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11581  005202  0EF8               	movlw	248
 11582  005204  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11583  005206  0EFF               	movlw	255
 11584  005208  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11585  00520A  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11586  00520E  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11587  005212  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11588  005216  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11589  00521A  EC82  F022         	call	___aldiv	;wreg free
 11590  00521E  C014  F024         	movff	?___aldiv,actSpeed@speed
 11591  005222  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11592  005226                     l6675:
 11593                           
 11594                           ;main.c: 75:     return speed;
 11595  005226  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11596  00522A  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11597  00522E  0012               	return		;funcret
 11598  005230                     __end_of_actSpeed:
 11599                           	callstack 0
 11600                           
 11601 ;; *************** function ___aldiv *****************
 11602 ;; Defined at:
 11603 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  dividend        4   19[COMRAM] long 
 11606 ;;  divisor         4   23[COMRAM] long 
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;  quotient        4   29[COMRAM] long 
 11609 ;;  sign            1   28[COMRAM] unsigned char 
 11610 ;;  counter         1   27[COMRAM] unsigned char 
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  4   19[COMRAM] long 
 11613 ;; Registers used:
 11614 ;;		wreg, status,2, status,0
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/0
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11620 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11621 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11623 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11624 ;;Total ram usage:       14 bytes
 11625 ;; Hardware stack levels used: 1
 11626 ;; Hardware stack levels required when called: 8
 11627 ;; This function calls:
 11628 ;;		Nothing
 11629 ;; This function is called by:
 11630 ;;		_actSpeed
 11631 ;; This function uses a non-reentrant model
 11632 ;;
 11633                           
 11634                           	psect	text45
 11635  004504                     __ptext45:
 11636                           	callstack 0
 11637  004504                     ___aldiv:
 11638                           	callstack 19
 11639  004504  0E00               	movlw	0
 11640  004506  6E1D               	movwf	___aldiv@sign^0,c
 11641  004508  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11642  00450A  EF8B  F022         	goto	u6150
 11643  00450E  EF89  F022         	goto	u6151
 11644  004512                     u6151:
 11645  004512  EF95  F022         	goto	l6451
 11646  004516                     u6150:
 11647  004516  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11648  004518  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11649  00451A  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11650  00451C  6C18               	negf	___aldiv@divisor^0,c
 11651  00451E  0E00               	movlw	0
 11652  004520  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11653  004522  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11654  004524  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11655  004526  0E01               	movlw	1
 11656  004528  6E1D               	movwf	___aldiv@sign^0,c
 11657  00452A                     l6451:
 11658  00452A  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11659  00452C  EF9C  F022         	goto	u6160
 11660  004530  EF9A  F022         	goto	u6161
 11661  004534                     u6161:
 11662  004534  EFA6  F022         	goto	l6457
 11663  004538                     u6160:
 11664  004538  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11665  00453A  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11666  00453C  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11667  00453E  6C14               	negf	___aldiv@dividend^0,c
 11668  004540  0E00               	movlw	0
 11669  004542  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11670  004544  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11671  004546  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11672  004548  0E01               	movlw	1
 11673  00454A  1A1D               	xorwf	___aldiv@sign^0,f,c
 11674  00454C                     l6457:
 11675  00454C  0E00               	movlw	0
 11676  00454E  6E1E               	movwf	___aldiv@quotient^0,c
 11677  004550  0E00               	movlw	0
 11678  004552  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11679  004554  0E00               	movlw	0
 11680  004556  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11681  004558  0E00               	movlw	0
 11682  00455A  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11683  00455C  5018               	movf	___aldiv@divisor^0,w,c
 11684  00455E  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11685  004560  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11686  004562  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11687  004564  B4D8               	btfsc	status,2,c
 11688  004566  EFB7  F022         	goto	u6171
 11689  00456A  EFB9  F022         	goto	u6170
 11690  00456E                     u6171:
 11691  00456E  EFEF  F022         	goto	l6479
 11692  004572                     u6170:
 11693  004572  0E01               	movlw	1
 11694  004574  6E1C               	movwf	___aldiv@counter^0,c
 11695  004576  EFC3  F022         	goto	l6465
 11696  00457A                     l6463:
 11697  00457A  90D8               	bcf	status,0,c
 11698  00457C  3618               	rlcf	___aldiv@divisor^0,f,c
 11699  00457E  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11700  004580  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11701  004582  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11702  004584  2A1C               	incf	___aldiv@counter^0,f,c
 11703  004586                     l6465:
 11704  004586  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11705  004588  EFC8  F022         	goto	u6181
 11706  00458C  EFCA  F022         	goto	u6180
 11707  004590                     u6181:
 11708  004590  EFBD  F022         	goto	l6463
 11709  004594                     u6180:
 11710  004594                     l6467:
 11711  004594  90D8               	bcf	status,0,c
 11712  004596  361E               	rlcf	___aldiv@quotient^0,f,c
 11713  004598  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11714  00459A  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11715  00459C  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11716  00459E  5018               	movf	___aldiv@divisor^0,w,c
 11717  0045A0  5C14               	subwf	___aldiv@dividend^0,w,c
 11718  0045A2  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11719  0045A4  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11720  0045A6  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11721  0045A8  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11722  0045AA  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11723  0045AC  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11724  0045AE  A0D8               	btfss	status,0,c
 11725  0045B0  EFDC  F022         	goto	u6191
 11726  0045B4  EFDE  F022         	goto	u6190
 11727  0045B8                     u6191:
 11728  0045B8  EFE7  F022         	goto	l6475
 11729  0045BC                     u6190:
 11730  0045BC  5018               	movf	___aldiv@divisor^0,w,c
 11731  0045BE  5E14               	subwf	___aldiv@dividend^0,f,c
 11732  0045C0  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11733  0045C2  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11734  0045C4  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11735  0045C6  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11736  0045C8  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11737  0045CA  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11738  0045CC  801E               	bsf	___aldiv@quotient^0,0,c
 11739  0045CE                     l6475:
 11740  0045CE  90D8               	bcf	status,0,c
 11741  0045D0  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11742  0045D2  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11743  0045D4  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11744  0045D6  3218               	rrcf	___aldiv@divisor^0,f,c
 11745  0045D8  2E1C               	decfsz	___aldiv@counter^0,f,c
 11746  0045DA  EFCA  F022         	goto	l6467
 11747  0045DE                     l6479:
 11748  0045DE  501D               	movf	___aldiv@sign^0,w,c
 11749  0045E0  B4D8               	btfsc	status,2,c
 11750  0045E2  EFF5  F022         	goto	u6201
 11751  0045E6  EFF7  F022         	goto	u6200
 11752  0045EA                     u6201:
 11753  0045EA  EFFF  F022         	goto	l6483
 11754  0045EE                     u6200:
 11755  0045EE  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11756  0045F0  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11757  0045F2  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11758  0045F4  6C1E               	negf	___aldiv@quotient^0,c
 11759  0045F6  0E00               	movlw	0
 11760  0045F8  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11761  0045FA  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11762  0045FC  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11763  0045FE                     l6483:
 11764  0045FE  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11765  004602  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11766  004606  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11767  00460A  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11768  00460E  0012               	return		;funcret
 11769  004610                     __end_of___aldiv:
 11770                           	callstack 0
 11771                           
 11772 ;; *************** function ___xxtofl *****************
 11773 ;; Defined at:
 11774 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  sign            1    wreg     unsigned char 
 11777 ;;  val             4   27[COMRAM] long 
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;  sign            1   35[COMRAM] unsigned char 
 11780 ;;  arg             4   37[COMRAM] unsigned long 
 11781 ;;  exp             1   36[COMRAM] unsigned char 
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  4   27[COMRAM] unsigned char 
 11784 ;; Registers used:
 11785 ;;		wreg, status,2, status,0
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11792 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11794 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11795 ;;Total ram usage:       14 bytes
 11796 ;; Hardware stack levels used: 1
 11797 ;; Hardware stack levels required when called: 8
 11798 ;; This function calls:
 11799 ;;		Nothing
 11800 ;; This function is called by:
 11801 ;;		_loop
 11802 ;;		_checkBatt
 11803 ;;		_startAccell
 11804 ;;		_calcSteering
 11805 ;;		_calcSpeed
 11806 ;;		_calcMotorPow
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           	psect	text46
 11811  003AC0                     __ptext46:
 11812                           	callstack 0
 11813  003AC0                     ___xxtofl:
 11814                           	callstack 19
 11815                           
 11816                           ;incstack = 0
 11817                           ;___xxtofl@sign stored from wreg
 11818  003AC0  6E24               	movwf	___xxtofl@sign^0,c
 11819  003AC2  5024               	movf	___xxtofl@sign^0,w,c
 11820  003AC4  B4D8               	btfsc	status,2,c
 11821  003AC6  EF67  F01D         	goto	u9711
 11822  003ACA  EF69  F01D         	goto	u9710
 11823  003ACE                     u9711:
 11824  003ACE  EF8B  F01D         	goto	l2054
 11825  003AD2                     u9710:
 11826  003AD2  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11827  003AD4  EF70  F01D         	goto	u9720
 11828  003AD8  EF6E  F01D         	goto	u9721
 11829  003ADC                     u9721:
 11830  003ADC  EF8B  F01D         	goto	l2054
 11831  003AE0                     u9720:
 11832  003AE0  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 11833  003AE4  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 11834  003AE8  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 11835  003AEC  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 11836  003AF0  1E20               	comf	??___xxtofl^0,f,c
 11837  003AF2  1E21               	comf	(??___xxtofl+1)^0,f,c
 11838  003AF4  1E22               	comf	(??___xxtofl+2)^0,f,c
 11839  003AF6  1E23               	comf	(??___xxtofl+3)^0,f,c
 11840  003AF8  2A20               	incf	??___xxtofl^0,f,c
 11841  003AFA  0E00               	movlw	0
 11842  003AFC  2221               	addwfc	(??___xxtofl+1)^0,f,c
 11843  003AFE  2222               	addwfc	(??___xxtofl+2)^0,f,c
 11844  003B00  2223               	addwfc	(??___xxtofl+3)^0,f,c
 11845  003B02  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 11846  003B06  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 11847  003B0A  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 11848  003B0E  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 11849  003B12  EF93  F01D         	goto	l8795
 11850  003B16                     l2054:
 11851  003B16  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 11852  003B1A  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11853  003B1E  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11854  003B22  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11855  003B26                     l8795:
 11856  003B26  501C               	movf	___xxtofl@val^0,w,c
 11857  003B28  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 11858  003B2A  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 11859  003B2C  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 11860  003B2E  A4D8               	btfss	status,2,c
 11861  003B30  EF9C  F01D         	goto	u9731
 11862  003B34  EF9E  F01D         	goto	u9730
 11863  003B38                     u9731:
 11864  003B38  EFA8  F01D         	goto	l8801
 11865  003B3C                     u9730:
 11866  003B3C  0E00               	movlw	0
 11867  003B3E  6E1C               	movwf	?___xxtofl^0,c
 11868  003B40  0E00               	movlw	0
 11869  003B42  6E1D               	movwf	(?___xxtofl+1)^0,c
 11870  003B44  0E00               	movlw	0
 11871  003B46  6E1E               	movwf	(?___xxtofl+2)^0,c
 11872  003B48  0E00               	movlw	0
 11873  003B4A  6E1F               	movwf	(?___xxtofl+3)^0,c
 11874  003B4C  EF39  F01E         	goto	l2057
 11875  003B50                     l8801:
 11876  003B50  0E96               	movlw	150
 11877  003B52  6E25               	movwf	___xxtofl@exp^0,c
 11878  003B54  EFB2  F01D         	goto	l8805
 11879  003B58                     l8803:
 11880  003B58  2A25               	incf	___xxtofl@exp^0,f,c
 11881  003B5A  90D8               	bcf	status,0,c
 11882  003B5C  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11883  003B5E  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11884  003B60  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11885  003B62  3226               	rrcf	___xxtofl@arg^0,f,c
 11886  003B64                     l8805:
 11887  003B64  0E00               	movlw	0
 11888  003B66  1426               	andwf	___xxtofl@arg^0,w,c
 11889  003B68  6E20               	movwf	??___xxtofl^0,c
 11890  003B6A  0E00               	movlw	0
 11891  003B6C  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11892  003B6E  6E21               	movwf	(??___xxtofl+1)^0,c
 11893  003B70  0E00               	movlw	0
 11894  003B72  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11895  003B74  6E22               	movwf	(??___xxtofl+2)^0,c
 11896  003B76  0EFE               	movlw	254
 11897  003B78  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11898  003B7A  6E23               	movwf	(??___xxtofl+3)^0,c
 11899  003B7C  5020               	movf	??___xxtofl^0,w,c
 11900  003B7E  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11901  003B80  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11902  003B82  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11903  003B84  A4D8               	btfss	status,2,c
 11904  003B86  EFC7  F01D         	goto	u9741
 11905  003B8A  EFC9  F01D         	goto	u9740
 11906  003B8E                     u9741:
 11907  003B8E  EFAC  F01D         	goto	l8803
 11908  003B92                     u9740:
 11909  003B92  EFD7  F01D         	goto	l2061
 11910  003B96                     l8807:
 11911  003B96  2A25               	incf	___xxtofl@exp^0,f,c
 11912  003B98  0E01               	movlw	1
 11913  003B9A  2626               	addwf	___xxtofl@arg^0,f,c
 11914  003B9C  0E00               	movlw	0
 11915  003B9E  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 11916  003BA0  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 11917  003BA2  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 11918  003BA4  90D8               	bcf	status,0,c
 11919  003BA6  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11920  003BA8  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11921  003BAA  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11922  003BAC  3226               	rrcf	___xxtofl@arg^0,f,c
 11923  003BAE                     l2061:
 11924  003BAE  0E00               	movlw	0
 11925  003BB0  1426               	andwf	___xxtofl@arg^0,w,c
 11926  003BB2  6E20               	movwf	??___xxtofl^0,c
 11927  003BB4  0E00               	movlw	0
 11928  003BB6  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11929  003BB8  6E21               	movwf	(??___xxtofl+1)^0,c
 11930  003BBA  0E00               	movlw	0
 11931  003BBC  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11932  003BBE  6E22               	movwf	(??___xxtofl+2)^0,c
 11933  003BC0  0EFF               	movlw	255
 11934  003BC2  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11935  003BC4  6E23               	movwf	(??___xxtofl+3)^0,c
 11936  003BC6  5020               	movf	??___xxtofl^0,w,c
 11937  003BC8  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11938  003BCA  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11939  003BCC  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11940  003BCE  A4D8               	btfss	status,2,c
 11941  003BD0  EFEC  F01D         	goto	u9751
 11942  003BD4  EFEE  F01D         	goto	u9750
 11943  003BD8                     u9751:
 11944  003BD8  EFCB  F01D         	goto	l8807
 11945  003BDC                     u9750:
 11946  003BDC  EFF6  F01D         	goto	l8815
 11947  003BE0                     l8813:
 11948  003BE0  0625               	decf	___xxtofl@exp^0,f,c
 11949  003BE2  90D8               	bcf	status,0,c
 11950  003BE4  3626               	rlcf	___xxtofl@arg^0,f,c
 11951  003BE6  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 11952  003BE8  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 11953  003BEA  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 11954  003BEC                     l8815:
 11955  003BEC  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 11956  003BEE  EFFB  F01D         	goto	u9761
 11957  003BF2  EFFD  F01D         	goto	u9760
 11958  003BF6                     u9761:
 11959  003BF6  EF05  F01E         	goto	l2068
 11960  003BFA                     u9760:
 11961  003BFA  0E02               	movlw	2
 11962  003BFC  6025               	cpfslt	___xxtofl@exp^0,c
 11963  003BFE  EF03  F01E         	goto	u9771
 11964  003C02  EF05  F01E         	goto	u9770
 11965  003C06                     u9771:
 11966  003C06  EFF0  F01D         	goto	l8813
 11967  003C0A                     u9770:
 11968  003C0A                     l2068:
 11969  003C0A  B025               	btfsc	___xxtofl@exp^0,0,c
 11970  003C0C  EF0A  F01E         	goto	u9781
 11971  003C10  EF0C  F01E         	goto	u9780
 11972  003C14                     u9781:
 11973  003C14  EF0D  F01E         	goto	l8821
 11974  003C18                     u9780:
 11975  003C18  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 11976  003C1A                     l8821:
 11977  003C1A  90D8               	bcf	status,0,c
 11978  003C1C  3225               	rrcf	___xxtofl@exp^0,f,c
 11979  003C1E  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 11980  003C22  6A21               	clrf	(??___xxtofl+1)^0,c
 11981  003C24  6A22               	clrf	(??___xxtofl+2)^0,c
 11982  003C26  6A23               	clrf	(??___xxtofl+3)^0,c
 11983  003C28  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 11984  003C2C  6A22               	clrf	(??___xxtofl+2)^0,c
 11985  003C2E  6A21               	clrf	(??___xxtofl+1)^0,c
 11986  003C30  6A20               	clrf	??___xxtofl^0,c
 11987  003C32  5020               	movf	??___xxtofl^0,w,c
 11988  003C34  1226               	iorwf	___xxtofl@arg^0,f,c
 11989  003C36  5021               	movf	(??___xxtofl+1)^0,w,c
 11990  003C38  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 11991  003C3A  5022               	movf	(??___xxtofl+2)^0,w,c
 11992  003C3C  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 11993  003C3E  5023               	movf	(??___xxtofl+3)^0,w,c
 11994  003C40  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 11995  003C42  5024               	movf	___xxtofl@sign^0,w,c
 11996  003C44  B4D8               	btfsc	status,2,c
 11997  003C46  EF27  F01E         	goto	u9791
 11998  003C4A  EF29  F01E         	goto	u9790
 11999  003C4E                     u9791:
 12000  003C4E  EF31  F01E         	goto	l8831
 12001  003C52                     u9790:
 12002  003C52  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12003  003C54  EF30  F01E         	goto	u9800
 12004  003C58  EF2E  F01E         	goto	u9801
 12005  003C5C                     u9801:
 12006  003C5C  EF31  F01E         	goto	l8831
 12007  003C60                     u9800:
 12008  003C60  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12009  003C62                     l8831:
 12010  003C62  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12011  003C66  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12012  003C6A  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12013  003C6E  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12014  003C72                     l2057:
 12015  003C72  0012               	return		;funcret
 12016  003C74                     __end_of___xxtofl:
 12017                           	callstack 0
 12018                           
 12019 ;; *************** function ___fltol *****************
 12020 ;; Defined at:
 12021 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  f1              4   25[BANK0 ] unsigned char 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;  exp1            1   34[BANK0 ] unsigned char 
 12026 ;;  sign1           1   33[BANK0 ] unsigned char 
 12027 ;; Return value:  Size  Location     Type
 12028 ;;                  4   25[BANK0 ] long 
 12029 ;; Registers used:
 12030 ;;		wreg, status,2, status,0
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12036 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;Total ram usage:       10 bytes
 12041 ;; Hardware stack levels used: 1
 12042 ;; Hardware stack levels required when called: 8
 12043 ;; This function calls:
 12044 ;;		Nothing
 12045 ;; This function is called by:
 12046 ;;		_startAccell
 12047 ;;		_calcSteering
 12048 ;;		_calcSpeed
 12049 ;;		_calcMotorPow
 12050 ;;		_efgtoa
 12051 ;; This function uses a non-reentrant model
 12052 ;;
 12053                           
 12054                           	psect	text47
 12055  004610                     __ptext47:
 12056                           	callstack 0
 12057  004610                     ___fltol:
 12058                           	callstack 16
 12059  004610  0100               	movlb	0	; () banked
 12060  004612  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12061  004614  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12062  004616  6F82               	movwf	___fltol@exp1& (0+255),b
 12063  004618  5182               	movf	___fltol@exp1& (0+255),w,b
 12064  00461A  A4D8               	btfss	status,2,c
 12065  00461C  EF12  F023         	goto	u8441
 12066  004620  EF14  F023         	goto	u8440
 12067  004624                     u8441:
 12068  004624  EF1E  F023         	goto	l8143
 12069  004628                     u8440:
 12070  004628                     l8139:
 12071                           
 12072                           ; BSR set to: 0
 12073  004628  0E00               	movlw	0
 12074  00462A  6F79               	movwf	?___fltol& (0+255),b
 12075  00462C  0E00               	movlw	0
 12076  00462E  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12077  004630  0E00               	movlw	0
 12078  004632  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12079  004634  0E00               	movlw	0
 12080  004636  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12081  004638  EF8B  F023         	goto	l1696
 12082  00463C                     l8143:
 12083                           
 12084                           ; BSR set to: 0
 12085  00463C  C079  F07D         	movff	___fltol@f1,??___fltol
 12086  004640  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12087  004644  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12088  004648  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12089  00464C  0E20               	movlw	32
 12090  00464E  EF2E  F023         	goto	u8450
 12091  004652                     u8455:
 12092  004652  90D8               	bcf	status,0,c
 12093  004654  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12094  004656  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12095  004658  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12096  00465A  337D               	rrcf	??___fltol& (0+255),f,b
 12097  00465C                     u8450:
 12098  00465C  2EE8               	decfsz	wreg,f,c
 12099  00465E  EF29  F023         	goto	u8455
 12100  004662  517D               	movf	??___fltol& (0+255),w,b
 12101  004664  6F81               	movwf	___fltol@sign1& (0+255),b
 12102  004666                     
 12103                           ; BSR set to: 0
 12104  004666  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12105  004668                     
 12106                           ; BSR set to: 0
 12107  004668  0EFF               	movlw	255
 12108  00466A  1779               	andwf	___fltol@f1& (0+255),f,b
 12109  00466C  0EFF               	movlw	255
 12110  00466E  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12111  004670  0EFF               	movlw	255
 12112  004672  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12113  004674  0E00               	movlw	0
 12114  004676  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12115  004678                     
 12116                           ; BSR set to: 0
 12117  004678  0E96               	movlw	150
 12118  00467A  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12119  00467C                     
 12120                           ; BSR set to: 0
 12121  00467C  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12122  00467E  EF45  F023         	goto	u8460
 12123  004682  EF43  F023         	goto	u8461
 12124  004686                     u8461:
 12125  004686  EF5B  F023         	goto	l8163
 12126  00468A                     u8460:
 12127  00468A                     
 12128                           ; BSR set to: 0
 12129  00468A  5182               	movf	___fltol@exp1& (0+255),w,b
 12130  00468C  0A80               	xorlw	128
 12131  00468E  0F97               	addlw	151
 12132  004690  B0D8               	btfsc	status,0,c
 12133  004692  EF4D  F023         	goto	u8471
 12134  004696  EF4F  F023         	goto	u8470
 12135  00469A                     u8471:
 12136  00469A  EF51  F023         	goto	l8159
 12137  00469E                     u8470:
 12138  00469E  EF14  F023         	goto	l8139
 12139  0046A2                     l8159:
 12140                           
 12141                           ; BSR set to: 0
 12142  0046A2  90D8               	bcf	status,0,c
 12143  0046A4  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12144  0046A6  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12145  0046A8  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12146  0046AA  3379               	rrcf	___fltol@f1& (0+255),f,b
 12147  0046AC                     
 12148                           ; BSR set to: 0
 12149  0046AC  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12150  0046AE  EF51  F023         	goto	l8159
 12151  0046B2  EF73  F023         	goto	l8173
 12152  0046B6                     l8163:
 12153                           
 12154                           ; BSR set to: 0
 12155  0046B6  0E1F               	movlw	31
 12156  0046B8  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12157  0046BA  EF61  F023         	goto	u8481
 12158  0046BE  EF63  F023         	goto	u8480
 12159  0046C2                     u8481:
 12160  0046C2  EF6B  F023         	goto	l8171
 12161  0046C6                     u8480:
 12162  0046C6  EF14  F023         	goto	l8139
 12163  0046CA                     l8169:
 12164                           
 12165                           ; BSR set to: 0
 12166  0046CA  90D8               	bcf	status,0,c
 12167  0046CC  3779               	rlcf	___fltol@f1& (0+255),f,b
 12168  0046CE  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12169  0046D0  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12170  0046D2  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12171  0046D4  0782               	decf	___fltol@exp1& (0+255),f,b
 12172  0046D6                     l8171:
 12173                           
 12174                           ; BSR set to: 0
 12175  0046D6  5182               	movf	___fltol@exp1& (0+255),w,b
 12176  0046D8  A4D8               	btfss	status,2,c
 12177  0046DA  EF71  F023         	goto	u8491
 12178  0046DE  EF73  F023         	goto	u8490
 12179  0046E2                     u8491:
 12180  0046E2  EF65  F023         	goto	l8169
 12181  0046E6                     u8490:
 12182  0046E6                     l8173:
 12183                           
 12184                           ; BSR set to: 0
 12185  0046E6  5181               	movf	___fltol@sign1& (0+255),w,b
 12186  0046E8  B4D8               	btfsc	status,2,c
 12187  0046EA  EF79  F023         	goto	u8501
 12188  0046EE  EF7B  F023         	goto	u8500
 12189  0046F2                     u8501:
 12190  0046F2  EF83  F023         	goto	l8177
 12191  0046F6                     u8500:
 12192  0046F6                     
 12193                           ; BSR set to: 0
 12194  0046F6  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12195  0046F8  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12196  0046FA  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12197  0046FC  6D79               	negf	___fltol@f1& (0+255),b
 12198  0046FE  0E00               	movlw	0
 12199  004700  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12200  004702  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12201  004704  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12202  004706                     l8177:
 12203                           
 12204                           ; BSR set to: 0
 12205  004706  C079  F079         	movff	___fltol@f1,?___fltol
 12206  00470A  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12207  00470E  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12208  004712  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12209  004716                     l1696:
 12210                           
 12211                           ; BSR set to: 0
 12212  004716  0012               	return		;funcret
 12213  004718                     __end_of___fltol:
 12214                           	callstack 0
 12215                           
 12216 ;; *************** function ___flmul *****************
 12217 ;; Defined at:
 12218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;  b               4   41[COMRAM] long 
 12221 ;;  a               4   45[COMRAM] long 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;  prod            4    7[BANK0 ] struct .
 12224 ;;  grs             4    2[BANK0 ] unsigned long 
 12225 ;;  temp            2   11[BANK0 ] struct .
 12226 ;;  bexp            1    6[BANK0 ] unsigned char 
 12227 ;;  aexp            1    1[BANK0 ] unsigned char 
 12228 ;;  sign            1    0[BANK0 ] unsigned char 
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  4   41[COMRAM] unsigned char 
 12231 ;; Registers used:
 12232 ;;		wreg, status,2, status,0, prodl, prodh
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/0
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12238 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;Total ram usage:       25 bytes
 12243 ;; Hardware stack levels used: 1
 12244 ;; Hardware stack levels required when called: 8
 12245 ;; This function calls:
 12246 ;;		Nothing
 12247 ;; This function is called by:
 12248 ;;		_startAccell
 12249 ;;		_calcSteering
 12250 ;;		_calcSpeed
 12251 ;;		_calcMotorPow
 12252 ;;		_efgtoa
 12253 ;; This function uses a non-reentrant model
 12254 ;;
 12255                           
 12256                           	psect	text48
 12257  002706                     __ptext48:
 12258                           	callstack 0
 12259  002706                     ___flmul:
 12260                           	callstack 16
 12261  002706  502D               	movf	(___flmul@b+3)^0,w,c
 12262  002708  0B80               	andlw	128
 12263  00270A  0100               	movlb	0	; () banked
 12264  00270C  6F60               	movwf	___flmul@sign& (0+255),b
 12265  00270E  502D               	movf	(___flmul@b+3)^0,w,c
 12266  002710  242D               	addwf	(___flmul@b+3)^0,w,c
 12267  002712  6F66               	movwf	___flmul@bexp& (0+255),b
 12268  002714                     
 12269                           ; BSR set to: 0
 12270  002714  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12271  002716  EF8F  F013         	goto	u8041
 12272  00271A  EF91  F013         	goto	u8040
 12273  00271E                     u8041:
 12274  00271E  EF92  F013         	goto	l7881
 12275  002722                     u8040:
 12276  002722                     
 12277                           ; BSR set to: 0
 12278  002722  8166               	bsf	___flmul@bexp& (0+255),0,b
 12279  002724                     l7881:
 12280                           
 12281                           ; BSR set to: 0
 12282  002724  5166               	movf	___flmul@bexp& (0+255),w,b
 12283  002726  B4D8               	btfsc	status,2,c
 12284  002728  EF98  F013         	goto	u8051
 12285  00272C  EF9A  F013         	goto	u8050
 12286  002730                     u8051:
 12287  002730  EFAD  F013         	goto	l7889
 12288  002734                     u8050:
 12289  002734                     
 12290                           ; BSR set to: 0
 12291  002734  2966               	incf	___flmul@bexp& (0+255),w,b
 12292  002736  A4D8               	btfss	status,2,c
 12293  002738  EFA0  F013         	goto	u8061
 12294  00273C  EFA2  F013         	goto	u8060
 12295  002740                     u8061:
 12296  002740  EFAA  F013         	goto	l7887
 12297  002744                     u8060:
 12298  002744                     
 12299                           ; BSR set to: 0
 12300  002744  0E00               	movlw	0
 12301  002746  6E2A               	movwf	___flmul@b^0,c
 12302  002748  0E00               	movlw	0
 12303  00274A  6E2B               	movwf	(___flmul@b+1)^0,c
 12304  00274C  0E00               	movlw	0
 12305  00274E  6E2C               	movwf	(___flmul@b+2)^0,c
 12306  002750  0E00               	movlw	0
 12307  002752  6E2D               	movwf	(___flmul@b+3)^0,c
 12308  002754                     l7887:
 12309                           
 12310                           ; BSR set to: 0
 12311  002754  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12312  002756  EFB5  F013         	goto	l7891
 12313  00275A                     l7889:
 12314                           
 12315                           ; BSR set to: 0
 12316  00275A  0E00               	movlw	0
 12317  00275C  6E2A               	movwf	___flmul@b^0,c
 12318  00275E  0E00               	movlw	0
 12319  002760  6E2B               	movwf	(___flmul@b+1)^0,c
 12320  002762  0E00               	movlw	0
 12321  002764  6E2C               	movwf	(___flmul@b+2)^0,c
 12322  002766  0E00               	movlw	0
 12323  002768  6E2D               	movwf	(___flmul@b+3)^0,c
 12324  00276A                     l7891:
 12325                           
 12326                           ; BSR set to: 0
 12327  00276A  5031               	movf	(___flmul@a+3)^0,w,c
 12328  00276C  0B80               	andlw	128
 12329  00276E  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12330  002770                     
 12331                           ; BSR set to: 0
 12332  002770  5031               	movf	(___flmul@a+3)^0,w,c
 12333  002772  2431               	addwf	(___flmul@a+3)^0,w,c
 12334  002774  6F61               	movwf	___flmul@aexp& (0+255),b
 12335  002776                     
 12336                           ; BSR set to: 0
 12337  002776  AE30               	btfss	(___flmul@a+2)^0,7,c
 12338  002778  EFC0  F013         	goto	u8071
 12339  00277C  EFC2  F013         	goto	u8070
 12340  002780                     u8071:
 12341  002780  EFC3  F013         	goto	l7899
 12342  002784                     u8070:
 12343  002784                     
 12344                           ; BSR set to: 0
 12345  002784  8161               	bsf	___flmul@aexp& (0+255),0,b
 12346  002786                     l7899:
 12347                           
 12348                           ; BSR set to: 0
 12349  002786  5161               	movf	___flmul@aexp& (0+255),w,b
 12350  002788  B4D8               	btfsc	status,2,c
 12351  00278A  EFC9  F013         	goto	u8081
 12352  00278E  EFCB  F013         	goto	u8080
 12353  002792                     u8081:
 12354  002792  EFDE  F013         	goto	l7907
 12355  002796                     u8080:
 12356  002796                     
 12357                           ; BSR set to: 0
 12358  002796  2961               	incf	___flmul@aexp& (0+255),w,b
 12359  002798  A4D8               	btfss	status,2,c
 12360  00279A  EFD1  F013         	goto	u8091
 12361  00279E  EFD3  F013         	goto	u8090
 12362  0027A2                     u8091:
 12363  0027A2  EFDB  F013         	goto	l7905
 12364  0027A6                     u8090:
 12365  0027A6                     
 12366                           ; BSR set to: 0
 12367  0027A6  0E00               	movlw	0
 12368  0027A8  6E2E               	movwf	___flmul@a^0,c
 12369  0027AA  0E00               	movlw	0
 12370  0027AC  6E2F               	movwf	(___flmul@a+1)^0,c
 12371  0027AE  0E00               	movlw	0
 12372  0027B0  6E30               	movwf	(___flmul@a+2)^0,c
 12373  0027B2  0E00               	movlw	0
 12374  0027B4  6E31               	movwf	(___flmul@a+3)^0,c
 12375  0027B6                     l7905:
 12376                           
 12377                           ; BSR set to: 0
 12378  0027B6  8E30               	bsf	(___flmul@a+2)^0,7,c
 12379  0027B8  EFE6  F013         	goto	l2013
 12380  0027BC                     l7907:
 12381                           
 12382                           ; BSR set to: 0
 12383  0027BC  0E00               	movlw	0
 12384  0027BE  6E2E               	movwf	___flmul@a^0,c
 12385  0027C0  0E00               	movlw	0
 12386  0027C2  6E2F               	movwf	(___flmul@a+1)^0,c
 12387  0027C4  0E00               	movlw	0
 12388  0027C6  6E30               	movwf	(___flmul@a+2)^0,c
 12389  0027C8  0E00               	movlw	0
 12390  0027CA  6E31               	movwf	(___flmul@a+3)^0,c
 12391  0027CC                     l2013:
 12392                           
 12393                           ; BSR set to: 0
 12394  0027CC  5161               	movf	___flmul@aexp& (0+255),w,b
 12395  0027CE  B4D8               	btfsc	status,2,c
 12396  0027D0  EFEC  F013         	goto	u8101
 12397  0027D4  EFEE  F013         	goto	u8100
 12398  0027D8                     u8101:
 12399  0027D8  EFF6  F013         	goto	l7911
 12400  0027DC                     u8100:
 12401  0027DC                     
 12402                           ; BSR set to: 0
 12403  0027DC  5166               	movf	___flmul@bexp& (0+255),w,b
 12404  0027DE  A4D8               	btfss	status,2,c
 12405  0027E0  EFF4  F013         	goto	u8111
 12406  0027E4  EFF6  F013         	goto	u8110
 12407  0027E8                     u8111:
 12408  0027E8  EF00  F014         	goto	l7915
 12409  0027EC                     u8110:
 12410  0027EC                     l7911:
 12411                           
 12412                           ; BSR set to: 0
 12413  0027EC  0E00               	movlw	0
 12414  0027EE  6E2A               	movwf	?___flmul^0,c
 12415  0027F0  0E00               	movlw	0
 12416  0027F2  6E2B               	movwf	(?___flmul+1)^0,c
 12417  0027F4  0E00               	movlw	0
 12418  0027F6  6E2C               	movwf	(?___flmul+2)^0,c
 12419  0027F8  0E00               	movlw	0
 12420  0027FA  6E2D               	movwf	(?___flmul+3)^0,c
 12421  0027FC  EFAA  F015         	goto	l2017
 12422  002800                     l7915:
 12423                           
 12424                           ; BSR set to: 0
 12425  002800  5030               	movf	(___flmul@a+2)^0,w,c
 12426  002802  022A               	mulwf	___flmul@b^0,c
 12427  002804  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12428  00280A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12429  002810                     
 12430                           ; BSR set to: 0
 12431  002810  516B               	movf	___flmul@temp& (0+255),w,b
 12432  002812  6F62               	movwf	___flmul@grs& (0+255),b
 12433  002814  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12434  002816  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12435  002818  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12436  00281A                     
 12437                           ; BSR set to: 0
 12438  00281A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12439  00281C  6F67               	movwf	___flmul@prod& (0+255),b
 12440  00281E  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12441  002820  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12442  002822  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12443  002824  502F               	movf	(___flmul@a+1)^0,w,c
 12444  002826  022B               	mulwf	(___flmul@b+1)^0,c
 12445  002828  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12446  00282E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12447  002834                     
 12448                           ; BSR set to: 0
 12449  002834  516B               	movf	___flmul@temp& (0+255),w,b
 12450  002836  2762               	addwf	___flmul@grs& (0+255),f,b
 12451  002838  0E00               	movlw	0
 12452  00283A  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12453  00283C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12454  00283E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12455  002840                     
 12456                           ; BSR set to: 0
 12457  002840  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12458  002842  2767               	addwf	___flmul@prod& (0+255),f,b
 12459  002844  0E00               	movlw	0
 12460  002846  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12461  002848  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12462  00284A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12463  00284C  502E               	movf	___flmul@a^0,w,c
 12464  00284E  022C               	mulwf	(___flmul@b+2)^0,c
 12465  002850  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12466  002856  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12467  00285C                     
 12468                           ; BSR set to: 0
 12469  00285C  516B               	movf	___flmul@temp& (0+255),w,b
 12470  00285E  2762               	addwf	___flmul@grs& (0+255),f,b
 12471  002860  0E00               	movlw	0
 12472  002862  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12473  002864  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12474  002866  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12475  002868                     
 12476                           ; BSR set to: 0
 12477  002868  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12478  00286A  2767               	addwf	___flmul@prod& (0+255),f,b
 12479  00286C  0E00               	movlw	0
 12480  00286E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12481  002870  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12482  002872  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12483  002874                     
 12484                           ; BSR set to: 0
 12485  002874  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12486  002878  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12487  00287C  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12488  002880  6B62               	clrf	___flmul@grs& (0+255),b
 12489  002882                     
 12490                           ; BSR set to: 0
 12491  002882  502E               	movf	___flmul@a^0,w,c
 12492  002884  022B               	mulwf	(___flmul@b+1)^0,c
 12493  002886  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12494  00288C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12495  002892                     
 12496                           ; BSR set to: 0
 12497  002892  516B               	movf	___flmul@temp& (0+255),w,b
 12498  002894  2762               	addwf	___flmul@grs& (0+255),f,b
 12499  002896  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12500  002898  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12501  00289A  0E00               	movlw	0
 12502  00289C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12503  00289E  0E00               	movlw	0
 12504  0028A0  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12505  0028A2                     
 12506                           ; BSR set to: 0
 12507  0028A2  502F               	movf	(___flmul@a+1)^0,w,c
 12508  0028A4  022A               	mulwf	___flmul@b^0,c
 12509  0028A6  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12510  0028AC  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12511  0028B2                     
 12512                           ; BSR set to: 0
 12513  0028B2  516B               	movf	___flmul@temp& (0+255),w,b
 12514  0028B4  2762               	addwf	___flmul@grs& (0+255),f,b
 12515  0028B6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12516  0028B8  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12517  0028BA  0E00               	movlw	0
 12518  0028BC  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12519  0028BE  0E00               	movlw	0
 12520  0028C0  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12521  0028C2                     
 12522                           ; BSR set to: 0
 12523  0028C2  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12524  0028C6  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12525  0028CA  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12526  0028CE  6B62               	clrf	___flmul@grs& (0+255),b
 12527  0028D0  502E               	movf	___flmul@a^0,w,c
 12528  0028D2  022A               	mulwf	___flmul@b^0,c
 12529  0028D4  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12530  0028DA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12531  0028E0                     
 12532                           ; BSR set to: 0
 12533  0028E0  516B               	movf	___flmul@temp& (0+255),w,b
 12534  0028E2  2762               	addwf	___flmul@grs& (0+255),f,b
 12535  0028E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12536  0028E6  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12537  0028E8  0E00               	movlw	0
 12538  0028EA  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12539  0028EC  0E00               	movlw	0
 12540  0028EE  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12541  0028F0                     
 12542                           ; BSR set to: 0
 12543  0028F0  5030               	movf	(___flmul@a+2)^0,w,c
 12544  0028F2  022B               	mulwf	(___flmul@b+1)^0,c
 12545  0028F4  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12546  0028FA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12547  002900  516B               	movf	___flmul@temp& (0+255),w,b
 12548  002902  2767               	addwf	___flmul@prod& (0+255),f,b
 12549  002904  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12550  002906  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12551  002908  0E00               	movlw	0
 12552  00290A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12553  00290C  0E00               	movlw	0
 12554  00290E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12555  002910                     
 12556                           ; BSR set to: 0
 12557  002910  502F               	movf	(___flmul@a+1)^0,w,c
 12558  002912  022C               	mulwf	(___flmul@b+2)^0,c
 12559  002914  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12560  00291A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12561  002920                     
 12562                           ; BSR set to: 0
 12563  002920  516B               	movf	___flmul@temp& (0+255),w,b
 12564  002922  2767               	addwf	___flmul@prod& (0+255),f,b
 12565  002924  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12566  002926  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12567  002928  0E00               	movlw	0
 12568  00292A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12569  00292C  0E00               	movlw	0
 12570  00292E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12571  002930  5030               	movf	(___flmul@a+2)^0,w,c
 12572  002932  022C               	mulwf	(___flmul@b+2)^0,c
 12573  002934  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12574  00293A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12575  002940                     
 12576                           ; BSR set to: 0
 12577  002940  516B               	movf	___flmul@temp& (0+255),w,b
 12578  002942  6E32               	movwf	??___flmul^0,c
 12579  002944  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12580  002946  6E33               	movwf	(??___flmul+1)^0,c
 12581  002948  6A34               	clrf	(??___flmul+2)^0,c
 12582  00294A  6A35               	clrf	(??___flmul+3)^0,c
 12583  00294C  C034  F035         	movff	??___flmul+2,??___flmul+3
 12584  002950  C033  F034         	movff	??___flmul+1,??___flmul+2
 12585  002954  C032  F033         	movff	??___flmul,??___flmul+1
 12586  002958  6A32               	clrf	??___flmul^0,c
 12587  00295A  5032               	movf	??___flmul^0,w,c
 12588  00295C  2767               	addwf	___flmul@prod& (0+255),f,b
 12589  00295E  5033               	movf	(??___flmul+1)^0,w,c
 12590  002960  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12591  002962  5034               	movf	(??___flmul+2)^0,w,c
 12592  002964  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12593  002966  5035               	movf	(??___flmul+3)^0,w,c
 12594  002968  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12595  00296A                     
 12596                           ; BSR set to: 0
 12597  00296A  C062  F032         	movff	___flmul@grs,??___flmul
 12598  00296E  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12599  002972  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12600  002976  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12601  00297A  0E19               	movlw	25
 12602  00297C  EFC5  F014         	goto	u8120
 12603  002980                     u8125:
 12604  002980  90D8               	bcf	status,0,c
 12605  002982  3235               	rrcf	(??___flmul+3)^0,f,c
 12606  002984  3234               	rrcf	(??___flmul+2)^0,f,c
 12607  002986  3233               	rrcf	(??___flmul+1)^0,f,c
 12608  002988  3232               	rrcf	??___flmul^0,f,c
 12609  00298A                     u8120:
 12610  00298A  2EE8               	decfsz	wreg,f,c
 12611  00298C  EFC0  F014         	goto	u8125
 12612  002990  5032               	movf	??___flmul^0,w,c
 12613  002992  2767               	addwf	___flmul@prod& (0+255),f,b
 12614  002994  5033               	movf	(??___flmul+1)^0,w,c
 12615  002996  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12616  002998  5034               	movf	(??___flmul+2)^0,w,c
 12617  00299A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12618  00299C  5035               	movf	(??___flmul+3)^0,w,c
 12619  00299E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12620  0029A0                     
 12621                           ; BSR set to: 0
 12622  0029A0  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12623  0029A4  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12624  0029A8  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12625  0029AC  6B62               	clrf	___flmul@grs& (0+255),b
 12626  0029AE                     
 12627                           ; BSR set to: 0
 12628  0029AE  5161               	movf	___flmul@aexp& (0+255),w,b
 12629  0029B0  C066  F032         	movff	___flmul@bexp,??___flmul
 12630  0029B4  6A33               	clrf	(??___flmul+1)^0,c
 12631  0029B6  2632               	addwf	??___flmul^0,f,c
 12632  0029B8  0E00               	movlw	0
 12633  0029BA  2233               	addwfc	(??___flmul+1)^0,f,c
 12634  0029BC  0E82               	movlw	130
 12635  0029BE  2432               	addwf	??___flmul^0,w,c
 12636  0029C0  6F6B               	movwf	___flmul@temp& (0+255),b
 12637  0029C2  0EFF               	movlw	255
 12638  0029C4  2033               	addwfc	(??___flmul+1)^0,w,c
 12639  0029C6  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12640  0029C8  EFFB  F014         	goto	l7963
 12641  0029CC                     l7957:
 12642                           
 12643                           ; BSR set to: 0
 12644  0029CC  90D8               	bcf	status,0,c
 12645  0029CE  3767               	rlcf	___flmul@prod& (0+255),f,b
 12646  0029D0  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12647  0029D2  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12648  0029D4  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12649  0029D6                     
 12650                           ; BSR set to: 0
 12651  0029D6  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12652  0029D8  EFF0  F014         	goto	u8131
 12653  0029DC  EFF2  F014         	goto	u8130
 12654  0029E0                     u8131:
 12655  0029E0  EFF3  F014         	goto	l2020
 12656  0029E4                     u8130:
 12657  0029E4                     
 12658                           ; BSR set to: 0
 12659  0029E4  8167               	bsf	___flmul@prod& (0+255),0,b
 12660  0029E6                     l2020:
 12661                           
 12662                           ; BSR set to: 0
 12663  0029E6  90D8               	bcf	status,0,c
 12664  0029E8  3762               	rlcf	___flmul@grs& (0+255),f,b
 12665  0029EA  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12666  0029EC  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12667  0029EE  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12668  0029F0  076B               	decf	___flmul@temp& (0+255),f,b
 12669  0029F2  A0D8               	btfss	status,0,c
 12670  0029F4  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12671  0029F6                     l7963:
 12672                           
 12673                           ; BSR set to: 0
 12674  0029F6  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12675  0029F8  EF00  F015         	goto	u8141
 12676  0029FC  EF02  F015         	goto	u8140
 12677  002A00                     u8141:
 12678  002A00  EFE6  F014         	goto	l7957
 12679  002A04                     u8140:
 12680  002A04                     
 12681                           ; BSR set to: 0
 12682  002A04  0E00               	movlw	0
 12683  002A06  6F61               	movwf	___flmul@aexp& (0+255),b
 12684  002A08                     
 12685                           ; BSR set to: 0
 12686  002A08  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12687  002A0A  EF09  F015         	goto	u8151
 12688  002A0E  EF0B  F015         	goto	u8150
 12689  002A12                     u8151:
 12690  002A12  EF2F  F015         	goto	l2022
 12691  002A16                     u8150:
 12692  002A16                     
 12693                           ; BSR set to: 0
 12694  002A16  0EFF               	movlw	255
 12695  002A18  1562               	andwf	___flmul@grs& (0+255),w,b
 12696  002A1A  6E32               	movwf	??___flmul^0,c
 12697  002A1C  0EFF               	movlw	255
 12698  002A1E  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12699  002A20  6E33               	movwf	(??___flmul+1)^0,c
 12700  002A22  0EFF               	movlw	255
 12701  002A24  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12702  002A26  6E34               	movwf	(??___flmul+2)^0,c
 12703  002A28  0E7F               	movlw	127
 12704  002A2A  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12705  002A2C  6E35               	movwf	(??___flmul+3)^0,c
 12706  002A2E  5032               	movf	??___flmul^0,w,c
 12707  002A30  1033               	iorwf	(??___flmul+1)^0,w,c
 12708  002A32  1034               	iorwf	(??___flmul+2)^0,w,c
 12709  002A34  1035               	iorwf	(??___flmul+3)^0,w,c
 12710  002A36  B4D8               	btfsc	status,2,c
 12711  002A38  EF20  F015         	goto	u8161
 12712  002A3C  EF22  F015         	goto	u8160
 12713  002A40                     u8161:
 12714  002A40  EF26  F015         	goto	l2023
 12715  002A44                     u8160:
 12716  002A44                     l7971:
 12717                           
 12718                           ; BSR set to: 0
 12719  002A44  0E01               	movlw	1
 12720  002A46  6F61               	movwf	___flmul@aexp& (0+255),b
 12721  002A48  EF2F  F015         	goto	l2022
 12722  002A4C                     l2023:
 12723                           
 12724                           ; BSR set to: 0
 12725  002A4C  A167               	btfss	___flmul@prod& (0+255),0,b
 12726  002A4E  EF2B  F015         	goto	u8171
 12727  002A52  EF2D  F015         	goto	u8170
 12728  002A56                     u8171:
 12729  002A56  EF2F  F015         	goto	l2022
 12730  002A5A                     u8170:
 12731  002A5A  EF22  F015         	goto	l7971
 12732  002A5E                     l2022:
 12733                           
 12734                           ; BSR set to: 0
 12735  002A5E  5161               	movf	___flmul@aexp& (0+255),w,b
 12736  002A60  B4D8               	btfsc	status,2,c
 12737  002A62  EF35  F015         	goto	u8181
 12738  002A66  EF37  F015         	goto	u8180
 12739  002A6A                     u8181:
 12740  002A6A  EF5B  F015         	goto	l7983
 12741  002A6E                     u8180:
 12742  002A6E                     
 12743                           ; BSR set to: 0
 12744  002A6E  0E01               	movlw	1
 12745  002A70  2767               	addwf	___flmul@prod& (0+255),f,b
 12746  002A72  0E00               	movlw	0
 12747  002A74  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12748  002A76  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12749  002A78  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12750  002A7A                     
 12751                           ; BSR set to: 0
 12752  002A7A  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12753  002A7C  EF42  F015         	goto	u8191
 12754  002A80  EF44  F015         	goto	u8190
 12755  002A84                     u8191:
 12756  002A84  EF5B  F015         	goto	l7983
 12757  002A88                     u8190:
 12758  002A88                     
 12759                           ; BSR set to: 0
 12760  002A88  C067  F032         	movff	___flmul@prod,??___flmul
 12761  002A8C  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12762  002A90  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12763  002A94  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12764  002A98  3435               	rlcf	(??___flmul+3)^0,w,c
 12765  002A9A  3235               	rrcf	(??___flmul+3)^0,f,c
 12766  002A9C  3234               	rrcf	(??___flmul+2)^0,f,c
 12767  002A9E  3233               	rrcf	(??___flmul+1)^0,f,c
 12768  002AA0  3232               	rrcf	??___flmul^0,f,c
 12769  002AA2  C032  F067         	movff	??___flmul,___flmul@prod
 12770  002AA6  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12771  002AAA  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12772  002AAE  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12773  002AB2                     
 12774                           ; BSR set to: 0
 12775  002AB2  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12776  002AB4  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12777  002AB6                     l7983:
 12778                           
 12779                           ; BSR set to: 0
 12780  002AB6  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12781  002AB8  EF66  F015         	goto	u8201
 12782  002ABC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12783  002ABE  E108               	bnz	u8200
 12784  002AC0  296B               	incf	___flmul@temp& (0+255),w,b
 12785  002AC2  A0D8               	btfss	status,0,c
 12786  002AC4  EF66  F015         	goto	u8201
 12787  002AC8  EF68  F015         	goto	u8200
 12788  002ACC                     u8201:
 12789  002ACC  EF72  F015         	goto	l7987
 12790  002AD0                     u8200:
 12791  002AD0                     
 12792                           ; BSR set to: 0
 12793  002AD0  0E00               	movlw	0
 12794  002AD2  6F67               	movwf	___flmul@prod& (0+255),b
 12795  002AD4  0E00               	movlw	0
 12796  002AD6  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12797  002AD8  0E80               	movlw	128
 12798  002ADA  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12799  002ADC  0E7F               	movlw	127
 12800  002ADE  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12801  002AE0  EFA0  F015         	goto	l7999
 12802  002AE4                     l7987:
 12803                           
 12804                           ; BSR set to: 0
 12805  002AE4  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12806  002AE6  EF7F  F015         	goto	u8210
 12807  002AEA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12808  002AEC  E106               	bnz	u8211
 12809  002AEE  056B               	decf	___flmul@temp& (0+255),w,b
 12810  002AF0  B0D8               	btfsc	status,0,c
 12811  002AF2  EF7D  F015         	goto	u8211
 12812  002AF6  EF7F  F015         	goto	u8210
 12813  002AFA                     u8211:
 12814  002AFA  EF8B  F015         	goto	l2030
 12815  002AFE                     u8210:
 12816  002AFE                     
 12817                           ; BSR set to: 0
 12818  002AFE  0E00               	movlw	0
 12819  002B00  6F67               	movwf	___flmul@prod& (0+255),b
 12820  002B02  0E00               	movlw	0
 12821  002B04  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12822  002B06  0E00               	movlw	0
 12823  002B08  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12824  002B0A  0E00               	movlw	0
 12825  002B0C  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12826  002B0E  0E00               	movlw	0
 12827  002B10  6F60               	movwf	___flmul@sign& (0+255),b
 12828  002B12  EFA0  F015         	goto	l7999
 12829  002B16                     l2030:
 12830                           
 12831                           ; BSR set to: 0
 12832  002B16  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12833  002B1A                     
 12834                           ; BSR set to: 0
 12835  002B1A  0EFF               	movlw	255
 12836  002B1C  1767               	andwf	___flmul@prod& (0+255),f,b
 12837  002B1E  0EFF               	movlw	255
 12838  002B20  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12839  002B22  0E7F               	movlw	127
 12840  002B24  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12841  002B26  0E00               	movlw	0
 12842  002B28  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12843  002B2A                     
 12844                           ; BSR set to: 0
 12845  002B2A  A166               	btfss	___flmul@bexp& (0+255),0,b
 12846  002B2C  EF9A  F015         	goto	u8221
 12847  002B30  EF9C  F015         	goto	u8220
 12848  002B34                     u8221:
 12849  002B34  EF9D  F015         	goto	l7997
 12850  002B38                     u8220:
 12851  002B38                     
 12852                           ; BSR set to: 0
 12853  002B38  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12854  002B3A                     l7997:
 12855                           
 12856                           ; BSR set to: 0
 12857  002B3A  90D8               	bcf	status,0,c
 12858  002B3C  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12859  002B3E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12860  002B40                     l7999:
 12861                           
 12862                           ; BSR set to: 0
 12863  002B40  5160               	movf	___flmul@sign& (0+255),w,b
 12864  002B42  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12865  002B44                     
 12866                           ; BSR set to: 0
 12867  002B44  C067  F02A         	movff	___flmul@prod,?___flmul
 12868  002B48  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 12869  002B4C  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 12870  002B50  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 12871  002B54                     l2017:
 12872                           
 12873                           ; BSR set to: 0
 12874  002B54  0012               	return		;funcret
 12875  002B56                     __end_of___flmul:
 12876                           	callstack 0
 12877                           
 12878 ;; *************** function ___awdiv *****************
 12879 ;; Defined at:
 12880 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  dividend        2   19[COMRAM] int 
 12883 ;;  divisor         2   21[COMRAM] int 
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  quotient        2   25[COMRAM] int 
 12886 ;;  sign            1   24[COMRAM] unsigned char 
 12887 ;;  counter         1   23[COMRAM] unsigned char 
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  2   19[COMRAM] int 
 12890 ;; Registers used:
 12891 ;;		wreg, status,2, status,0
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12900 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12901 ;;Total ram usage:        8 bytes
 12902 ;; Hardware stack levels used: 1
 12903 ;; Hardware stack levels required when called: 8
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		_calcSteering
 12908 ;;		_calcMotorPow
 12909 ;;		_setSteering
 12910 ;;		_efgtoa
 12911 ;; This function uses a non-reentrant model
 12912 ;;
 12913                           
 12914                           	psect	text49
 12915  004CC2                     __ptext49:
 12916                           	callstack 0
 12917  004CC2                     ___awdiv:
 12918                           	callstack 19
 12919  004CC2  0E00               	movlw	0
 12920  004CC4  6E19               	movwf	___awdiv@sign^0,c
 12921  004CC6  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 12922  004CC8  EF6A  F026         	goto	u8230
 12923  004CCC  EF68  F026         	goto	u8231
 12924  004CD0                     u8231:
 12925  004CD0  EF70  F026         	goto	l8019
 12926  004CD4                     u8230:
 12927  004CD4  6C16               	negf	___awdiv@divisor^0,c
 12928  004CD6  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 12929  004CD8  B0D8               	btfsc	status,0,c
 12930  004CDA  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 12931  004CDC  0E01               	movlw	1
 12932  004CDE  6E19               	movwf	___awdiv@sign^0,c
 12933  004CE0                     l8019:
 12934  004CE0  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 12935  004CE2  EF77  F026         	goto	u8240
 12936  004CE6  EF75  F026         	goto	u8241
 12937  004CEA                     u8241:
 12938  004CEA  EF7D  F026         	goto	l8025
 12939  004CEE                     u8240:
 12940  004CEE  6C14               	negf	___awdiv@dividend^0,c
 12941  004CF0  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 12942  004CF2  B0D8               	btfsc	status,0,c
 12943  004CF4  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 12944  004CF6  0E01               	movlw	1
 12945  004CF8  1A19               	xorwf	___awdiv@sign^0,f,c
 12946  004CFA                     l8025:
 12947  004CFA  0E00               	movlw	0
 12948  004CFC  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 12949  004CFE  0E00               	movlw	0
 12950  004D00  6E1A               	movwf	___awdiv@quotient^0,c
 12951  004D02  5016               	movf	___awdiv@divisor^0,w,c
 12952  004D04  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 12953  004D06  B4D8               	btfsc	status,2,c
 12954  004D08  EF88  F026         	goto	u8251
 12955  004D0C  EF8A  F026         	goto	u8250
 12956  004D10                     u8251:
 12957  004D10  EFB2  F026         	goto	l8047
 12958  004D14                     u8250:
 12959  004D14  0E01               	movlw	1
 12960  004D16  6E18               	movwf	___awdiv@counter^0,c
 12961  004D18  EF92  F026         	goto	l8033
 12962  004D1C                     l8031:
 12963  004D1C  90D8               	bcf	status,0,c
 12964  004D1E  3616               	rlcf	___awdiv@divisor^0,f,c
 12965  004D20  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 12966  004D22  2A18               	incf	___awdiv@counter^0,f,c
 12967  004D24                     l8033:
 12968  004D24  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 12969  004D26  EF97  F026         	goto	u8261
 12970  004D2A  EF99  F026         	goto	u8260
 12971  004D2E                     u8261:
 12972  004D2E  EF8E  F026         	goto	l8031
 12973  004D32                     u8260:
 12974  004D32                     l8035:
 12975  004D32  90D8               	bcf	status,0,c
 12976  004D34  361A               	rlcf	___awdiv@quotient^0,f,c
 12977  004D36  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12978  004D38  5016               	movf	___awdiv@divisor^0,w,c
 12979  004D3A  5C14               	subwf	___awdiv@dividend^0,w,c
 12980  004D3C  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12981  004D3E  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 12982  004D40  A0D8               	btfss	status,0,c
 12983  004D42  EFA5  F026         	goto	u8271
 12984  004D46  EFA7  F026         	goto	u8270
 12985  004D4A                     u8271:
 12986  004D4A  EFAC  F026         	goto	l8043
 12987  004D4E                     u8270:
 12988  004D4E  5016               	movf	___awdiv@divisor^0,w,c
 12989  004D50  5E14               	subwf	___awdiv@dividend^0,f,c
 12990  004D52  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12991  004D54  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 12992  004D56  801A               	bsf	___awdiv@quotient^0,0,c
 12993  004D58                     l8043:
 12994  004D58  90D8               	bcf	status,0,c
 12995  004D5A  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 12996  004D5C  3216               	rrcf	___awdiv@divisor^0,f,c
 12997  004D5E  2E18               	decfsz	___awdiv@counter^0,f,c
 12998  004D60  EF99  F026         	goto	l8035
 12999  004D64                     l8047:
 13000  004D64  5019               	movf	___awdiv@sign^0,w,c
 13001  004D66  B4D8               	btfsc	status,2,c
 13002  004D68  EFB8  F026         	goto	u8281
 13003  004D6C  EFBA  F026         	goto	u8280
 13004  004D70                     u8281:
 13005  004D70  EFBE  F026         	goto	l8051
 13006  004D74                     u8280:
 13007  004D74  6C1A               	negf	___awdiv@quotient^0,c
 13008  004D76  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13009  004D78  B0D8               	btfsc	status,0,c
 13010  004D7A  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13011  004D7C                     l8051:
 13012  004D7C  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13013  004D80  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13014  004D84  0012               	return		;funcret
 13015  004D86                     __end_of___awdiv:
 13016                           	callstack 0
 13017                           
 13018 ;; *************** function _SYSTEM_Initialize *****************
 13019 ;; Defined at:
 13020 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13021 ;; Parameters:    Size  Location     Type
 13022 ;;		None
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;		None
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  1    wreg      void 
 13027 ;; Registers used:
 13028 ;;		wreg, status,2, status,0, cstack
 13029 ;; Tracked objects:
 13030 ;;		On entry : 0/0
 13031 ;;		On exit  : 0/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13038 ;;Total ram usage:        0 bytes
 13039 ;; Hardware stack levels used: 1
 13040 ;; Hardware stack levels required when called: 10
 13041 ;; This function calls:
 13042 ;;		_ADCC_Initialize
 13043 ;;		_CCP3_Initialize
 13044 ;;		_CCP4_Initialize
 13045 ;;		_CLC3_Initialize
 13046 ;;		_INTERRUPT_Initialize
 13047 ;;		_OSCILLATOR_Initialize
 13048 ;;		_PIN_MANAGER_Initialize
 13049 ;;		_PMD_Initialize
 13050 ;;		_PWM5_Initialize
 13051 ;;		_PWM6_Initialize
 13052 ;;		_PWM7_Initialize
 13053 ;;		_PWM8_Initialize
 13054 ;;		_SMT1_Initialize
 13055 ;;		_TMR2_Initialize
 13056 ;;		_TMR3_Initialize
 13057 ;;		_TMR4_Initialize
 13058 ;;		_TMR5_Initialize
 13059 ;;		_UART1_Initialize
 13060 ;; This function is called by:
 13061 ;;		_main
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           	psect	text50
 13066  0055BC                     __ptext50:
 13067                           	callstack 0
 13068  0055BC                     _SYSTEM_Initialize:
 13069                           	callstack 20
 13070  0055BC                     
 13071                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13072  0055BC  ECB8  F02A         	call	_INTERRUPT_Initialize	;wreg free
 13073                           
 13074                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13075  0055C0  EC7A  F02E         	call	_PMD_Initialize	;wreg free
 13076                           
 13077                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13078  0055C4  ECFC  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 13079                           
 13080                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13081  0055C8  ECFB  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 13082  0055CC                     
 13083                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13084  0055CC  ECCC  F02D         	call	_CCP3_Initialize	;wreg free
 13085  0055D0                     
 13086                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13087  0055D0  EC5F  F02A         	call	_ADCC_Initialize	;wreg free
 13088                           
 13089                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13090  0055D4  ECFA  F02D         	call	_TMR4_Initialize	;wreg free
 13091  0055D8                     
 13092                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13093  0055D8  EC6D  F02D         	call	_SMT1_Initialize	;wreg free
 13094  0055DC                     
 13095                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13096  0055DC  ECCB  F02E         	call	_PWM8_Initialize	;wreg free
 13097  0055E0                     
 13098                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13099  0055E0  ECBD  F02E         	call	_TMR2_Initialize	;wreg free
 13100  0055E4                     
 13101                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13102  0055E4  ECE3  F02E         	call	_PWM6_Initialize	;wreg free
 13103                           
 13104                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13105  0055E8  ECB5  F02D         	call	_CCP4_Initialize	;wreg free
 13106  0055EC                     
 13107                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13108  0055EC  EC10  F02E         	call	_CLC3_Initialize	;wreg free
 13109  0055F0                     
 13110                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13111  0055F0  EC65  F02C         	call	_TMR3_Initialize	;wreg free
 13112                           
 13113                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13114  0055F4  ECEF  F02E         	call	_PWM5_Initialize	;wreg free
 13115  0055F8                     
 13116                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13117  0055F8  EC03  F02B         	call	_TMR5_Initialize	;wreg free
 13118  0055FC                     
 13119                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13120  0055FC  ECD7  F02E         	call	_PWM7_Initialize	;wreg free
 13121                           
 13122                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13123  005600  EC31  F028         	call	_UART1_Initialize	;wreg free
 13124  005604  0012               	return		;funcret
 13125  005606                     __end_of_SYSTEM_Initialize:
 13126                           	callstack 0
 13127                           
 13128 ;; *************** function _UART1_Initialize *****************
 13129 ;; Defined at:
 13130 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13131 ;; Parameters:    Size  Location     Type
 13132 ;;		None
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;		None
 13135 ;; Return value:  Size  Location     Type
 13136 ;;                  1    wreg      void 
 13137 ;; Registers used:
 13138 ;;		wreg, status,2, status,0, cstack
 13139 ;; Tracked objects:
 13140 ;;		On entry : 0/0
 13141 ;;		On exit  : 0/0
 13142 ;;		Unchanged: 0/0
 13143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13148 ;;Total ram usage:        0 bytes
 13149 ;; Hardware stack levels used: 1
 13150 ;; Hardware stack levels required when called: 9
 13151 ;; This function calls:
 13152 ;;		_UART1_SetErrorHandler
 13153 ;;		_UART1_SetFramingErrorHandler
 13154 ;;		_UART1_SetOverrunErrorHandler
 13155 ;;		_UART1_SetRxInterruptHandler
 13156 ;;		_UART1_SetTxInterruptHandler
 13157 ;; This function is called by:
 13158 ;;		_SYSTEM_Initialize
 13159 ;; This function uses a non-reentrant model
 13160 ;;
 13161                           
 13162                           	psect	text51
 13163  005062                     __ptext51:
 13164                           	callstack 0
 13165  005062                     _UART1_Initialize:
 13166                           	callstack 20
 13167  005062                     
 13168                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13169  005062  0139               	movlb	57	; () banked
 13170  005064  9793               	bcf	147,3,b	;volatile
 13171  005066                     
 13172                           ; BSR set to: 57
 13173                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13174  005066  0E48               	movlw	low _UART1_Receive_ISR
 13175  005068  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13176  00506A  0E4E               	movlw	high _UART1_Receive_ISR
 13177  00506C  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13178  00506E  EC20  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13179  005072                     
 13180                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13181  005072  0139               	movlb	57	; () banked
 13182  005074  9993               	bcf	147,4,b	;volatile
 13183                           
 13184                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13185  005076  0E26               	movlw	low _UART1_Transmit_ISR
 13186  005078  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13187  00507A  0E57               	movlw	high _UART1_Transmit_ISR
 13188  00507C  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13189  00507E  EC1B  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13190  005082                     
 13191                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13192  005082  0E00               	movlw	0
 13193  005084  013D               	movlb	61	; () banked
 13194  005086  6FEC               	movwf	236,b	;volatile
 13195  005088                     
 13196                           ; BSR set to: 61
 13197                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13198  005088  0E00               	movlw	0
 13199  00508A  6FED               	movwf	237,b	;volatile
 13200  00508C                     
 13201                           ; BSR set to: 61
 13202                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13203  00508C  0E00               	movlw	0
 13204  00508E  6FEE               	movwf	238,b	;volatile
 13205  005090                     
 13206                           ; BSR set to: 61
 13207                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13208  005090  0E00               	movlw	0
 13209  005092  6FEF               	movwf	239,b	;volatile
 13210  005094                     
 13211                           ; BSR set to: 61
 13212                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13213  005094  0E00               	movlw	0
 13214  005096  6FF0               	movwf	240,b	;volatile
 13215  005098                     
 13216                           ; BSR set to: 61
 13217                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13218  005098  0E00               	movlw	0
 13219  00509A  6FF1               	movwf	241,b	;volatile
 13220  00509C                     
 13221                           ; BSR set to: 61
 13222                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13223  00509C  0EB0               	movlw	176
 13224  00509E  6FF2               	movwf	242,b	;volatile
 13225  0050A0                     
 13226                           ; BSR set to: 61
 13227                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13228  0050A0  0E80               	movlw	128
 13229  0050A2  6FF3               	movwf	243,b	;volatile
 13230  0050A4                     
 13231                           ; BSR set to: 61
 13232                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13233  0050A4  0E00               	movlw	0
 13234  0050A6  6FF4               	movwf	244,b	;volatile
 13235  0050A8                     
 13236                           ; BSR set to: 61
 13237                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13238  0050A8  0E8A               	movlw	138
 13239  0050AA  6FF5               	movwf	245,b	;volatile
 13240  0050AC                     
 13241                           ; BSR set to: 61
 13242                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13243  0050AC  0E00               	movlw	0
 13244  0050AE  6FF6               	movwf	246,b	;volatile
 13245  0050B0                     
 13246                           ; BSR set to: 61
 13247                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13248  0050B0  0E00               	movlw	0
 13249  0050B2  6FF7               	movwf	247,b	;volatile
 13250  0050B4                     
 13251                           ; BSR set to: 61
 13252                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13253  0050B4  0E00               	movlw	0
 13254  0050B6  6FF8               	movwf	248,b	;volatile
 13255  0050B8                     
 13256                           ; BSR set to: 61
 13257                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13258  0050B8  0E00               	movlw	0
 13259  0050BA  6FF9               	movwf	249,b	;volatile
 13260  0050BC                     
 13261                           ; BSR set to: 61
 13262                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13263  0050BC  0E00               	movlw	0
 13264  0050BE  6FFA               	movwf	250,b	;volatile
 13265  0050C0                     
 13266                           ; BSR set to: 61
 13267                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13268  0050C0  0EA0               	movlw	low _UART1_DefaultFramingErrorHandler
 13269  0050C2  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13270  0050C4  0E5E               	movlw	high _UART1_DefaultFramingErrorHandler
 13271  0050C6  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13272  0050C8  EC2A  F02F         	call	_UART1_SetFramingErrorHandler	;wreg free
 13273  0050CC                     
 13274                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13275  0050CC  0E9E               	movlw	low _UART1_DefaultOverrunErrorHandler
 13276  0050CE  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13277  0050D0  0E5E               	movlw	high _UART1_DefaultOverrunErrorHandler
 13278  0050D2  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13279  0050D4  EC25  F02F         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13280  0050D8                     
 13281                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13282  0050D8  0E90               	movlw	low _UART1_DefaultErrorHandler
 13283  0050DA  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13284  0050DC  0E5E               	movlw	high _UART1_DefaultErrorHandler
 13285  0050DE  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13286  0050E0  EC2F  F02F         	call	_UART1_SetErrorHandler	;wreg free
 13287                           
 13288                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13289  0050E4  0E00               	movlw	0
 13290  0050E6  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13291                           
 13292                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13293  0050E8  0E00               	movlw	0
 13294  0050EA  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13295                           
 13296                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13297  0050EC  0E00               	movlw	0
 13298  0050EE  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13299                           
 13300                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13301  0050F0  0E08               	movlw	8
 13302  0050F2  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13303                           
 13304                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13305  0050F4  0E00               	movlw	0
 13306  0050F6  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13307                           
 13308                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13309  0050F8  0E00               	movlw	0
 13310  0050FA  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13311                           
 13312                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13313  0050FC  0E00               	movlw	0
 13314  0050FE  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13315  005100                     
 13316                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13317  005100  0139               	movlb	57	; () banked
 13318  005102  8793               	bsf	147,3,b	;volatile
 13319  005104                     
 13320                           ; BSR set to: 57
 13321  005104  0012               	return		;funcret
 13322  005106                     __end_of_UART1_Initialize:
 13323                           	callstack 0
 13324                           
 13325 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13326 ;; Defined at:
 13327 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13330 ;;		 -> UART1_Transmit_ISR(1), 
 13331 ;; Auto vars:     Size  Location     Type
 13332 ;;		None
 13333 ;; Return value:  Size  Location     Type
 13334 ;;                  1    wreg      void 
 13335 ;; Registers used:
 13336 ;;		wreg, status,2, status,0
 13337 ;; Tracked objects:
 13338 ;;		On entry : 0/0
 13339 ;;		On exit  : 0/0
 13340 ;;		Unchanged: 0/0
 13341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13346 ;;Total ram usage:        2 bytes
 13347 ;; Hardware stack levels used: 1
 13348 ;; Hardware stack levels required when called: 8
 13349 ;; This function calls:
 13350 ;;		Nothing
 13351 ;; This function is called by:
 13352 ;;		_UART1_Initialize
 13353 ;; This function uses a non-reentrant model
 13354 ;;
 13355                           
 13356                           	psect	text52
 13357  005E36                     __ptext52:
 13358                           	callstack 0
 13359  005E36                     _UART1_SetTxInterruptHandler:
 13360                           	callstack 20
 13361  005E36                     
 13362                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13363  005E36  C014  F196         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13364  005E3A  C015  F197         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13365  005E3E  0012               	return		;funcret
 13366  005E40                     __end_of_UART1_SetTxInterruptHandler:
 13367                           	callstack 0
 13368                           
 13369 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13370 ;; Defined at:
 13371 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13374 ;;		 -> UART1_Receive_ISR(1), 
 13375 ;; Auto vars:     Size  Location     Type
 13376 ;;		None
 13377 ;; Return value:  Size  Location     Type
 13378 ;;                  1    wreg      void 
 13379 ;; Registers used:
 13380 ;;		wreg, status,2, status,0
 13381 ;; Tracked objects:
 13382 ;;		On entry : 0/0
 13383 ;;		On exit  : 0/0
 13384 ;;		Unchanged: 0/0
 13385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13390 ;;Total ram usage:        2 bytes
 13391 ;; Hardware stack levels used: 1
 13392 ;; Hardware stack levels required when called: 8
 13393 ;; This function calls:
 13394 ;;		Nothing
 13395 ;; This function is called by:
 13396 ;;		_UART1_Initialize
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           	psect	text53
 13401  005E40                     __ptext53:
 13402                           	callstack 0
 13403  005E40                     _UART1_SetRxInterruptHandler:
 13404                           	callstack 20
 13405  005E40                     
 13406                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13407  005E40  C014  F198         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13408  005E44  C015  F199         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13409  005E48  0012               	return		;funcret
 13410  005E4A                     __end_of_UART1_SetRxInterruptHandler:
 13411                           	callstack 0
 13412                           
 13413 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13414 ;; Defined at:
 13415 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13418 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;		None
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  1    wreg      void 
 13423 ;; Registers used:
 13424 ;;		wreg, status,2, status,0
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13434 ;;Total ram usage:        2 bytes
 13435 ;; Hardware stack levels used: 1
 13436 ;; Hardware stack levels required when called: 8
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_UART1_Initialize
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           	psect	text54
 13445  005E4A                     __ptext54:
 13446                           	callstack 0
 13447  005E4A                     _UART1_SetOverrunErrorHandler:
 13448                           	callstack 20
 13449  005E4A                     
 13450                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13451  005E4A  C014  F192         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13452  005E4E  C015  F193         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13453  005E52  0012               	return		;funcret
 13454  005E54                     __end_of_UART1_SetOverrunErrorHandler:
 13455                           	callstack 0
 13456                           
 13457 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13458 ;; Defined at:
 13459 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13462 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;		None
 13465 ;; Return value:  Size  Location     Type
 13466 ;;                  1    wreg      void 
 13467 ;; Registers used:
 13468 ;;		wreg, status,2, status,0
 13469 ;; Tracked objects:
 13470 ;;		On entry : 0/0
 13471 ;;		On exit  : 0/0
 13472 ;;		Unchanged: 0/0
 13473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13478 ;;Total ram usage:        2 bytes
 13479 ;; Hardware stack levels used: 1
 13480 ;; Hardware stack levels required when called: 8
 13481 ;; This function calls:
 13482 ;;		Nothing
 13483 ;; This function is called by:
 13484 ;;		_UART1_Initialize
 13485 ;; This function uses a non-reentrant model
 13486 ;;
 13487                           
 13488                           	psect	text55
 13489  005E54                     __ptext55:
 13490                           	callstack 0
 13491  005E54                     _UART1_SetFramingErrorHandler:
 13492                           	callstack 20
 13493  005E54                     
 13494                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13495  005E54  C014  F194         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13496  005E58  C015  F195         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13497  005E5C  0012               	return		;funcret
 13498  005E5E                     __end_of_UART1_SetFramingErrorHandler:
 13499                           	callstack 0
 13500                           
 13501 ;; *************** function _UART1_SetErrorHandler *****************
 13502 ;; Defined at:
 13503 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13506 ;;		 -> UART1_DefaultErrorHandler(1), 
 13507 ;; Auto vars:     Size  Location     Type
 13508 ;;		None
 13509 ;; Return value:  Size  Location     Type
 13510 ;;                  1    wreg      void 
 13511 ;; Registers used:
 13512 ;;		wreg, status,2, status,0
 13513 ;; Tracked objects:
 13514 ;;		On entry : 0/0
 13515 ;;		On exit  : 0/0
 13516 ;;		Unchanged: 0/0
 13517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13522 ;;Total ram usage:        2 bytes
 13523 ;; Hardware stack levels used: 1
 13524 ;; Hardware stack levels required when called: 8
 13525 ;; This function calls:
 13526 ;;		Nothing
 13527 ;; This function is called by:
 13528 ;;		_UART1_Initialize
 13529 ;; This function uses a non-reentrant model
 13530 ;;
 13531                           
 13532                           	psect	text56
 13533  005E5E                     __ptext56:
 13534                           	callstack 0
 13535  005E5E                     _UART1_SetErrorHandler:
 13536                           	callstack 20
 13537  005E5E                     
 13538                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13539  005E5E  C014  F190         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13540  005E62  C015  F191         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13541  005E66  0012               	return		;funcret
 13542  005E68                     __end_of_UART1_SetErrorHandler:
 13543                           	callstack 0
 13544                           
 13545 ;; *************** function _TMR5_Initialize *****************
 13546 ;; Defined at:
 13547 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;		None
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;		None
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  1    wreg      void 
 13554 ;; Registers used:
 13555 ;;		wreg, status,2, status,0, cstack
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13565 ;;Total ram usage:        2 bytes
 13566 ;; Hardware stack levels used: 1
 13567 ;; Hardware stack levels required when called: 9
 13568 ;; This function calls:
 13569 ;;		_TMR5_SetGateInterruptHandler
 13570 ;; This function is called by:
 13571 ;;		_SYSTEM_Initialize
 13572 ;; This function uses a non-reentrant model
 13573 ;;
 13574                           
 13575                           	psect	text57
 13576  005606                     __ptext57:
 13577                           	callstack 0
 13578  005606                     _TMR5_Initialize:
 13579                           	callstack 20
 13580  005606                     
 13581                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13582  005606  0EC0               	movlw	192
 13583  005608  6E9B               	movwf	155,c	;volatile
 13584                           
 13585                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13586  00560A  0E00               	movlw	0
 13587  00560C  6E9C               	movwf	156,c	;volatile
 13588                           
 13589                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13590  00560E  0E05               	movlw	5
 13591  005610  6E9D               	movwf	157,c	;volatile
 13592                           
 13593                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13594  005612  0E00               	movlw	0
 13595  005614  6E99               	movwf	153,c	;volatile
 13596                           
 13597                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13598  005616  0E00               	movlw	0
 13599  005618  6E98               	movwf	152,c	;volatile
 13600  00561A                     
 13601                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13602  00561A  0139               	movlb	57	; () banked
 13603  00561C  9DA8               	bcf	168,6,b	;volatile
 13604  00561E                     
 13605                           ; BSR set to: 57
 13606                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13607  00561E  5098               	movf	152,w,c	;volatile
 13608  005620  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13609  005626  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13610  005628  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13611  00562C  6A16               	clrf	??_TMR5_Initialize^0,c
 13612  00562E  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13613  005630  0101               	movlb	1	; () banked
 13614  005632  6F8A               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13615  005634  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13616  005636  6F8B               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13617  005638                     
 13618                           ; BSR set to: 1
 13619                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13620  005638  0139               	movlb	57	; () banked
 13621  00563A  9FA8               	bcf	168,7,b	;volatile
 13622  00563C                     
 13623                           ; BSR set to: 57
 13624                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13625  00563C  8F98               	bsf	152,7,b	;volatile
 13626  00563E                     
 13627                           ; BSR set to: 57
 13628                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13629  00563E  0E5C               	movlw	low _TMR5_DefaultGateInterruptHandler
 13630  005640  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13631  005642  0E5D               	movlw	high _TMR5_DefaultGateInterruptHandler
 13632  005644  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13633  005646  EC34  F02F         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13634  00564A                     
 13635                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13636  00564A  0E03               	movlw	3
 13637  00564C  6E9A               	movwf	154,c	;volatile
 13638  00564E  0012               	return		;funcret
 13639  005650                     __end_of_TMR5_Initialize:
 13640                           	callstack 0
 13641                           
 13642 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13643 ;; Defined at:
 13644 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13645 ;; Parameters:    Size  Location     Type
 13646 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13647 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;		None
 13650 ;; Return value:  Size  Location     Type
 13651 ;;                  1    wreg      void 
 13652 ;; Registers used:
 13653 ;;		wreg, status,2, status,0
 13654 ;; Tracked objects:
 13655 ;;		On entry : 0/0
 13656 ;;		On exit  : 0/0
 13657 ;;		Unchanged: 0/0
 13658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13663 ;;Total ram usage:        2 bytes
 13664 ;; Hardware stack levels used: 1
 13665 ;; Hardware stack levels required when called: 8
 13666 ;; This function calls:
 13667 ;;		Nothing
 13668 ;; This function is called by:
 13669 ;;		_TMR5_Initialize
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           	psect	text58
 13674  005E68                     __ptext58:
 13675                           	callstack 0
 13676  005E68                     _TMR5_SetGateInterruptHandler:
 13677                           	callstack 20
 13678  005E68                     
 13679                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13680  005E68  C014  F188         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13681  005E6C  C015  F189         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13682  005E70  0012               	return		;funcret
 13683  005E72                     __end_of_TMR5_SetGateInterruptHandler:
 13684                           	callstack 0
 13685                           
 13686 ;; *************** function _TMR4_Initialize *****************
 13687 ;; Defined at:
 13688 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;		None
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;		None
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  1    wreg      void 
 13695 ;; Registers used:
 13696 ;;		wreg, status,2, status,0, cstack
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/0
 13699 ;;		On exit  : 0/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13706 ;;Total ram usage:        0 bytes
 13707 ;; Hardware stack levels used: 1
 13708 ;; Hardware stack levels required when called: 9
 13709 ;; This function calls:
 13710 ;;		_TMR4_SetInterruptHandler
 13711 ;; This function is called by:
 13712 ;;		_SYSTEM_Initialize
 13713 ;; This function uses a non-reentrant model
 13714 ;;
 13715                           
 13716                           	psect	text59
 13717  005BF4                     __ptext59:
 13718                           	callstack 0
 13719  005BF4                     _TMR4_Initialize:
 13720                           	callstack 20
 13721  005BF4                     
 13722                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13723  005BF4  0E01               	movlw	1
 13724  005BF6  6EA2               	movwf	162,c	;volatile
 13725                           
 13726                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13727  005BF8  0E00               	movlw	0
 13728  005BFA  6EA1               	movwf	161,c	;volatile
 13729                           
 13730                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13731  005BFC  0E00               	movlw	0
 13732  005BFE  6EA3               	movwf	163,c	;volatile
 13733                           
 13734                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13735  005C00  0EF9               	movlw	249
 13736  005C02  6E9F               	movwf	159,c	;volatile
 13737                           
 13738                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13739  005C04  0E00               	movlw	0
 13740  005C06  6E9E               	movwf	158,c	;volatile
 13741  005C08                     
 13742                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13743  005C08  0139               	movlb	57	; () banked
 13744  005C0A  91A7               	bcf	167,0,b	;volatile
 13745  005C0C                     
 13746                           ; BSR set to: 57
 13747                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13748  005C0C  8197               	bsf	151,0,b	;volatile
 13749  005C0E                     
 13750                           ; BSR set to: 57
 13751                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13752  005C0E  0EA2               	movlw	low _TMR4_DefaultInterruptHandler
 13753  005C10  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13754  005C12  0E5E               	movlw	high _TMR4_DefaultInterruptHandler
 13755  005C14  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13756  005C16  EC39  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
 13757  005C1A                     
 13758                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13759  005C1A  0EE0               	movlw	224
 13760  005C1C  6EA0               	movwf	160,c	;volatile
 13761  005C1E  0012               	return		;funcret
 13762  005C20                     __end_of_TMR4_Initialize:
 13763                           	callstack 0
 13764                           
 13765 ;; *************** function _TMR4_SetInterruptHandler *****************
 13766 ;; Defined at:
 13767 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13770 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13771 ;; Auto vars:     Size  Location     Type
 13772 ;;		None
 13773 ;; Return value:  Size  Location     Type
 13774 ;;                  1    wreg      void 
 13775 ;; Registers used:
 13776 ;;		wreg, status,2, status,0
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;Total ram usage:        2 bytes
 13787 ;; Hardware stack levels used: 1
 13788 ;; Hardware stack levels required when called: 8
 13789 ;; This function calls:
 13790 ;;		Nothing
 13791 ;; This function is called by:
 13792 ;;		_TMR4_Initialize
 13793 ;;		_main
 13794 ;; This function uses a non-reentrant model
 13795 ;;
 13796                           
 13797                           	psect	text60
 13798  005E72                     __ptext60:
 13799                           	callstack 0
 13800  005E72                     _TMR4_SetInterruptHandler:
 13801                           	callstack 22
 13802  005E72                     
 13803                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 13804  005E72  C014  F184         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 13805  005E76  C015  F185         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 13806  005E7A  0012               	return		;funcret
 13807  005E7C                     __end_of_TMR4_SetInterruptHandler:
 13808                           	callstack 0
 13809                           
 13810 ;; *************** function _TMR3_Initialize *****************
 13811 ;; Defined at:
 13812 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 13813 ;; Parameters:    Size  Location     Type
 13814 ;;		None
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;		None
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  1    wreg      void 
 13819 ;; Registers used:
 13820 ;;		wreg, status,2, status,0
 13821 ;; Tracked objects:
 13822 ;;		On entry : 0/0
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13830 ;;Total ram usage:        2 bytes
 13831 ;; Hardware stack levels used: 1
 13832 ;; Hardware stack levels required when called: 8
 13833 ;; This function calls:
 13834 ;;		Nothing
 13835 ;; This function is called by:
 13836 ;;		_SYSTEM_Initialize
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           	psect	text61
 13841  0058CA                     __ptext61:
 13842                           	callstack 0
 13843  0058CA                     _TMR3_Initialize:
 13844                           	callstack 21
 13845  0058CA                     
 13846                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 13847  0058CA  0E00               	movlw	0
 13848  0058CC  6EA7               	movwf	167,c	;volatile
 13849                           
 13850                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 13851  0058CE  0E00               	movlw	0
 13852  0058D0  6EA8               	movwf	168,c	;volatile
 13853                           
 13854                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 13855  0058D2  0E05               	movlw	5
 13856  0058D4  6EA9               	movwf	169,c	;volatile
 13857                           
 13858                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 13859  0058D6  0E00               	movlw	0
 13860  0058D8  6EA5               	movwf	165,c	;volatile
 13861                           
 13862                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 13863  0058DA  0E00               	movlw	0
 13864  0058DC  6EA4               	movwf	164,c	;volatile
 13865  0058DE                     
 13866                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 13867  0058DE  0139               	movlb	57	; () banked
 13868  0058E0  9DA6               	bcf	166,6,b	;volatile
 13869  0058E2                     
 13870                           ; BSR set to: 57
 13871                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13872  0058E2  50A4               	movf	164,w,c	;volatile
 13873  0058E4  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 13874  0058EA  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 13875  0058EC  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13876  0058F0  6A14               	clrf	??_TMR3_Initialize^0,c
 13877  0058F2  1014               	iorwf	??_TMR3_Initialize^0,w,c
 13878  0058F4  0101               	movlb	1	; () banked
 13879  0058F6  6F86               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13880  0058F8  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 13881  0058FA  6F87               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13882  0058FC                     
 13883                           ; BSR set to: 1
 13884                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 13885  0058FC  0E01               	movlw	1
 13886  0058FE  6EA6               	movwf	166,c	;volatile
 13887  005900                     
 13888                           ; BSR set to: 1
 13889  005900  0012               	return		;funcret
 13890  005902                     __end_of_TMR3_Initialize:
 13891                           	callstack 0
 13892                           
 13893 ;; *************** function _TMR2_Initialize *****************
 13894 ;; Defined at:
 13895 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13896 ;; Parameters:    Size  Location     Type
 13897 ;;		None
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;		None
 13900 ;; Return value:  Size  Location     Type
 13901 ;;                  1    wreg      void 
 13902 ;; Registers used:
 13903 ;;		wreg, status,2
 13904 ;; Tracked objects:
 13905 ;;		On entry : 0/0
 13906 ;;		On exit  : 0/0
 13907 ;;		Unchanged: 0/0
 13908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13913 ;;Total ram usage:        0 bytes
 13914 ;; Hardware stack levels used: 1
 13915 ;; Hardware stack levels required when called: 8
 13916 ;; This function calls:
 13917 ;;		Nothing
 13918 ;; This function is called by:
 13919 ;;		_SYSTEM_Initialize
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text62
 13924  005D7A                     __ptext62:
 13925                           	callstack 0
 13926  005D7A                     _TMR2_Initialize:
 13927                           	callstack 21
 13928  005D7A                     
 13929                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 13930  005D7A  0E05               	movlw	5
 13931  005D7C  6EAE               	movwf	174,c	;volatile
 13932                           
 13933                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13934  005D7E  0E00               	movlw	0
 13935  005D80  6EAD               	movwf	173,c	;volatile
 13936                           
 13937                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13938  005D82  0E00               	movlw	0
 13939  005D84  6EAF               	movwf	175,c	;volatile
 13940  005D86                     
 13941                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 13942  005D86  68AB               	setf	171,c	;volatile
 13943                           
 13944                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13945  005D88  0E00               	movlw	0
 13946  005D8A  6EAA               	movwf	170,c	;volatile
 13947  005D8C                     
 13948                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13949  005D8C  0139               	movlb	57	; () banked
 13950  005D8E  95A4               	bcf	164,2,b	;volatile
 13951                           
 13952                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 13953  005D90  0EB0               	movlw	176
 13954  005D92  6EAC               	movwf	172,c	;volatile
 13955  005D94                     
 13956                           ; BSR set to: 57
 13957  005D94  0012               	return		;funcret
 13958  005D96                     __end_of_TMR2_Initialize:
 13959                           	callstack 0
 13960                           
 13961 ;; *************** function _SMT1_Initialize *****************
 13962 ;; Defined at:
 13963 ;;		line 60 in file "mcc_generated_files/smt1.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;		None
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;		None
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  1    wreg      void 
 13970 ;; Registers used:
 13971 ;;		wreg, status,2
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;Total ram usage:        0 bytes
 13982 ;; Hardware stack levels used: 1
 13983 ;; Hardware stack levels required when called: 8
 13984 ;; This function calls:
 13985 ;;		Nothing
 13986 ;; This function is called by:
 13987 ;;		_SYSTEM_Initialize
 13988 ;; This function uses a non-reentrant model
 13989 ;;
 13990                           
 13991                           	psect	text63
 13992  005ADA                     __ptext63:
 13993                           	callstack 0
 13994  005ADA                     _SMT1_Initialize:
 13995                           	callstack 21
 13996  005ADA                     
 13997                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 13998  005ADA  0E80               	movlw	128
 13999  005ADC  013F               	movlb	63	; () banked
 14000  005ADE  6F1E               	movwf	30,b	;volatile
 14001                           
 14002                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14003  005AE0  0E42               	movlw	66
 14004  005AE2  6F1F               	movwf	31,b	;volatile
 14005                           
 14006                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14007  005AE4  0E00               	movlw	0
 14008  005AE6  6F20               	movwf	32,b	;volatile
 14009                           
 14010                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14011  005AE8  0E04               	movlw	4
 14012  005AEA  6F21               	movwf	33,b	;volatile
 14013                           
 14014                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14015  005AEC  0E00               	movlw	0
 14016  005AEE  6F23               	movwf	35,b	;volatile
 14017                           
 14018                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14019  005AF0  0E00               	movlw	0
 14020  005AF2  6F22               	movwf	34,b	;volatile
 14021                           
 14022                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14023  005AF4  0E01               	movlw	1
 14024  005AF6  6F1D               	movwf	29,b	;volatile
 14025  005AF8                     
 14026                           ; BSR set to: 63
 14027                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14028  005AF8  691C               	setf	28,b	;volatile
 14029  005AFA                     
 14030                           ; BSR set to: 63
 14031                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14032  005AFA  691B               	setf	27,b	;volatile
 14033  005AFC                     
 14034                           ; BSR set to: 63
 14035                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14036  005AFC  0139               	movlb	57	; () banked
 14037  005AFE  8B91               	bsf	145,5,b	;volatile
 14038  005B00                     
 14039                           ; BSR set to: 57
 14040                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14041  005B00  8F91               	bsf	145,7,b	;volatile
 14042  005B02                     
 14043                           ; BSR set to: 57
 14044                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14045  005B02  8D91               	bsf	145,6,b	;volatile
 14046  005B04                     
 14047                           ; BSR set to: 57
 14048                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14049  005B04  013F               	movlb	63	; () banked
 14050  005B06  8F1F               	bsf	31,7,b	;volatile
 14051  005B08                     
 14052                           ; BSR set to: 63
 14053  005B08  0012               	return		;funcret
 14054  005B0A                     __end_of_SMT1_Initialize:
 14055                           	callstack 0
 14056                           
 14057 ;; *************** function _PWM8_Initialize *****************
 14058 ;; Defined at:
 14059 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;		None
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;		None
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1    wreg      void 
 14066 ;; Registers used:
 14067 ;;		wreg, status,2
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 0/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14077 ;;Total ram usage:        0 bytes
 14078 ;; Hardware stack levels used: 1
 14079 ;; Hardware stack levels required when called: 8
 14080 ;; This function calls:
 14081 ;;		Nothing
 14082 ;; This function is called by:
 14083 ;;		_SYSTEM_Initialize
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text64
 14088  005D96                     __ptext64:
 14089                           	callstack 0
 14090  005D96                     _PWM8_Initialize:
 14091                           	callstack 21
 14092  005D96                     
 14093                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14094  005D96  0E80               	movlw	128
 14095  005D98  6E62               	movwf	98,c	;volatile
 14096                           
 14097                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14098  005D9A  0E00               	movlw	0
 14099  005D9C  6E61               	movwf	97,c	;volatile
 14100                           
 14101                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14102  005D9E  0E00               	movlw	0
 14103  005DA0  6E60               	movwf	96,c	;volatile
 14104                           
 14105                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14106  005DA2  013F               	movlb	63	; () banked
 14107  005DA4  515F               	movf	95,w,b	;volatile
 14108  005DA6  0B3F               	andlw	-193
 14109  005DA8  0980               	iorlw	128
 14110  005DAA  6F5F               	movwf	95,b	;volatile
 14111  005DAC                     
 14112                           ; BSR set to: 63
 14113  005DAC  0012               	return		;funcret
 14114  005DAE                     __end_of_PWM8_Initialize:
 14115                           	callstack 0
 14116                           
 14117 ;; *************** function _PWM7_Initialize *****************
 14118 ;; Defined at:
 14119 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14120 ;; Parameters:    Size  Location     Type
 14121 ;;		None
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;		None
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  1    wreg      void 
 14126 ;; Registers used:
 14127 ;;		wreg, status,2
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14137 ;;Total ram usage:        0 bytes
 14138 ;; Hardware stack levels used: 1
 14139 ;; Hardware stack levels required when called: 8
 14140 ;; This function calls:
 14141 ;;		Nothing
 14142 ;; This function is called by:
 14143 ;;		_SYSTEM_Initialize
 14144 ;; This function uses a non-reentrant model
 14145 ;;
 14146                           
 14147                           	psect	text65
 14148  005DAE                     __ptext65:
 14149                           	callstack 0
 14150  005DAE                     _PWM7_Initialize:
 14151                           	callstack 21
 14152  005DAE                     
 14153                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14154  005DAE  0E80               	movlw	128
 14155  005DB0  6E66               	movwf	102,c	;volatile
 14156                           
 14157                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14158  005DB2  0E00               	movlw	0
 14159  005DB4  6E65               	movwf	101,c	;volatile
 14160                           
 14161                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14162  005DB6  0E00               	movlw	0
 14163  005DB8  6E64               	movwf	100,c	;volatile
 14164                           
 14165                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14166  005DBA  013F               	movlb	63	; () banked
 14167  005DBC  515F               	movf	95,w,b	;volatile
 14168  005DBE  0BCF               	andlw	-49
 14169  005DC0  0920               	iorlw	32
 14170  005DC2  6F5F               	movwf	95,b	;volatile
 14171  005DC4                     
 14172                           ; BSR set to: 63
 14173  005DC4  0012               	return		;funcret
 14174  005DC6                     __end_of_PWM7_Initialize:
 14175                           	callstack 0
 14176                           
 14177 ;; *************** function _PWM6_Initialize *****************
 14178 ;; Defined at:
 14179 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;		None
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;		None
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  1    wreg      void 
 14186 ;; Registers used:
 14187 ;;		wreg, status,2
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14197 ;;Total ram usage:        0 bytes
 14198 ;; Hardware stack levels used: 1
 14199 ;; Hardware stack levels required when called: 8
 14200 ;; This function calls:
 14201 ;;		Nothing
 14202 ;; This function is called by:
 14203 ;;		_SYSTEM_Initialize
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           	psect	text66
 14208  005DC6                     __ptext66:
 14209                           	callstack 0
 14210  005DC6                     _PWM6_Initialize:
 14211                           	callstack 21
 14212  005DC6                     
 14213                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14214  005DC6  0E80               	movlw	128
 14215  005DC8  6E6A               	movwf	106,c	;volatile
 14216                           
 14217                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14218  005DCA  0E59               	movlw	89
 14219  005DCC  6E69               	movwf	105,c	;volatile
 14220                           
 14221                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14222  005DCE  0E40               	movlw	64
 14223  005DD0  6E68               	movwf	104,c	;volatile
 14224                           
 14225                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14226  005DD2  013F               	movlb	63	; () banked
 14227  005DD4  515F               	movf	95,w,b	;volatile
 14228  005DD6  0BF3               	andlw	-13
 14229  005DD8  0904               	iorlw	4
 14230  005DDA  6F5F               	movwf	95,b	;volatile
 14231  005DDC                     
 14232                           ; BSR set to: 63
 14233  005DDC  0012               	return		;funcret
 14234  005DDE                     __end_of_PWM6_Initialize:
 14235                           	callstack 0
 14236                           
 14237 ;; *************** function _PWM5_Initialize *****************
 14238 ;; Defined at:
 14239 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;		None
 14242 ;; Auto vars:     Size  Location     Type
 14243 ;;		None
 14244 ;; Return value:  Size  Location     Type
 14245 ;;                  1    wreg      void 
 14246 ;; Registers used:
 14247 ;;		wreg, status,2
 14248 ;; Tracked objects:
 14249 ;;		On entry : 0/0
 14250 ;;		On exit  : 0/0
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14257 ;;Total ram usage:        0 bytes
 14258 ;; Hardware stack levels used: 1
 14259 ;; Hardware stack levels required when called: 8
 14260 ;; This function calls:
 14261 ;;		Nothing
 14262 ;; This function is called by:
 14263 ;;		_SYSTEM_Initialize
 14264 ;; This function uses a non-reentrant model
 14265 ;;
 14266                           
 14267                           	psect	text67
 14268  005DDE                     __ptext67:
 14269                           	callstack 0
 14270  005DDE                     _PWM5_Initialize:
 14271                           	callstack 21
 14272  005DDE                     
 14273                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14274  005DDE  0E80               	movlw	128
 14275  005DE0  6E6E               	movwf	110,c	;volatile
 14276                           
 14277                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14278  005DE2  0E59               	movlw	89
 14279  005DE4  6E6D               	movwf	109,c	;volatile
 14280                           
 14281                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14282  005DE6  0E40               	movlw	64
 14283  005DE8  6E6C               	movwf	108,c	;volatile
 14284                           
 14285                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14286  005DEA  013F               	movlb	63	; () banked
 14287  005DEC  515F               	movf	95,w,b	;volatile
 14288  005DEE  0BFC               	andlw	-4
 14289  005DF0  0901               	iorlw	1
 14290  005DF2  6F5F               	movwf	95,b	;volatile
 14291  005DF4                     
 14292                           ; BSR set to: 63
 14293  005DF4  0012               	return		;funcret
 14294  005DF6                     __end_of_PWM5_Initialize:
 14295                           	callstack 0
 14296                           
 14297 ;; *************** function _PMD_Initialize *****************
 14298 ;; Defined at:
 14299 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;		None
 14302 ;; Auto vars:     Size  Location     Type
 14303 ;;		None
 14304 ;; Return value:  Size  Location     Type
 14305 ;;                  1    wreg      void 
 14306 ;; Registers used:
 14307 ;;		wreg, status,2
 14308 ;; Tracked objects:
 14309 ;;		On entry : 0/0
 14310 ;;		On exit  : 0/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14317 ;;Total ram usage:        0 bytes
 14318 ;; Hardware stack levels used: 1
 14319 ;; Hardware stack levels required when called: 8
 14320 ;; This function calls:
 14321 ;;		Nothing
 14322 ;; This function is called by:
 14323 ;;		_SYSTEM_Initialize
 14324 ;; This function uses a non-reentrant model
 14325 ;;
 14326                           
 14327                           	psect	text68
 14328  005CF4                     __ptext68:
 14329                           	callstack 0
 14330  005CF4                     _PMD_Initialize:
 14331                           	callstack 21
 14332  005CF4                     
 14333                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14334  005CF4  0E00               	movlw	0
 14335  005CF6  0139               	movlb	57	; () banked
 14336  005CF8  6FC0               	movwf	192,b	;volatile
 14337                           
 14338                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14339  005CFA  0E00               	movlw	0
 14340  005CFC  6FC1               	movwf	193,b	;volatile
 14341                           
 14342                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14343  005CFE  0E00               	movlw	0
 14344  005D00  6FC2               	movwf	194,b	;volatile
 14345                           
 14346                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14347  005D02  0E00               	movlw	0
 14348  005D04  6FC3               	movwf	195,b	;volatile
 14349                           
 14350                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14351  005D06  0E00               	movlw	0
 14352  005D08  6FC4               	movwf	196,b	;volatile
 14353                           
 14354                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14355  005D0A  0E00               	movlw	0
 14356  005D0C  6FC5               	movwf	197,b	;volatile
 14357                           
 14358                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14359  005D0E  0E00               	movlw	0
 14360  005D10  6FC6               	movwf	198,b	;volatile
 14361                           
 14362                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14363  005D12  0E00               	movlw	0
 14364  005D14  6FC7               	movwf	199,b	;volatile
 14365  005D16                     
 14366                           ; BSR set to: 57
 14367  005D16  0012               	return		;funcret
 14368  005D18                     __end_of_PMD_Initialize:
 14369                           	callstack 0
 14370                           
 14371 ;; *************** function _PIN_MANAGER_Initialize *****************
 14372 ;; Defined at:
 14373 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;		None
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;		None
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  1    wreg      void 
 14380 ;; Registers used:
 14381 ;;		wreg, status,2
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14391 ;;Total ram usage:        0 bytes
 14392 ;; Hardware stack levels used: 1
 14393 ;; Hardware stack levels required when called: 8
 14394 ;; This function calls:
 14395 ;;		Nothing
 14396 ;; This function is called by:
 14397 ;;		_SYSTEM_Initialize
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401                           	psect	text69
 14402  004BF8                     __ptext69:
 14403                           	callstack 0
 14404  004BF8                     _PIN_MANAGER_Initialize:
 14405                           	callstack 21
 14406  004BF8                     
 14407                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14408  004BF8  0E00               	movlw	0
 14409  004BFA  6EBE               	movwf	190,c	;volatile
 14410                           
 14411                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14412  004BFC  0E00               	movlw	0
 14413  004BFE  6EBD               	movwf	189,c	;volatile
 14414                           
 14415                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14416  004C00  0E24               	movlw	36
 14417  004C02  6EBA               	movwf	186,c	;volatile
 14418                           
 14419                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14420  004C04  0E00               	movlw	0
 14421  004C06  6EBB               	movwf	187,c	;volatile
 14422                           
 14423                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14424  004C08  0E00               	movlw	0
 14425  004C0A  6EBC               	movwf	188,c	;volatile
 14426                           
 14427                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14428  004C0C  0E07               	movlw	7
 14429  004C0E  6EC6               	movwf	198,c	;volatile
 14430                           
 14431                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14432  004C10  0EC0               	movlw	192
 14433  004C12  6EC2               	movwf	194,c	;volatile
 14434                           
 14435                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14436  004C14  0EF7               	movlw	247
 14437  004C16  6EC3               	movwf	195,c	;volatile
 14438  004C18                     
 14439                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14440  004C18  68C4               	setf	196,c	;volatile
 14441  004C1A                     
 14442                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14443  004C1A  68C5               	setf	197,c	;volatile
 14444                           
 14445                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14446  004C1C  0E1F               	movlw	31
 14447  004C1E  013A               	movlb	58	; () banked
 14448  004C20  6F70               	movwf	112,b	;volatile
 14449  004C22                     
 14450                           ; BSR set to: 58
 14451                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14452  004C22  6960               	setf	96,b	;volatile
 14453                           
 14454                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14455  004C24  0EC0               	movlw	192
 14456  004C26  6F50               	movwf	80,b	;volatile
 14457                           
 14458                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14459  004C28  0E07               	movlw	7
 14460  004C2A  6F80               	movwf	128,b	;volatile
 14461                           
 14462                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14463  004C2C  0E7F               	movlw	127
 14464  004C2E  6F40               	movwf	64,b	;volatile
 14465                           
 14466                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14467  004C30  0E00               	movlw	0
 14468  004C32  6F71               	movwf	113,b	;volatile
 14469                           
 14470                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14471  004C34  0E00               	movlw	0
 14472  004C36  6F81               	movwf	129,b	;volatile
 14473                           
 14474                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14475  004C38  0E00               	movlw	0
 14476  004C3A  6F51               	movwf	81,b	;volatile
 14477                           
 14478                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14479  004C3C  0E00               	movlw	0
 14480  004C3E  6F41               	movwf	65,b	;volatile
 14481                           
 14482                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14483  004C40  0E00               	movlw	0
 14484  004C42  6F61               	movwf	97,b	;volatile
 14485                           
 14486                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14487  004C44  0E00               	movlw	0
 14488  004C46  6F5A               	movwf	90,b	;volatile
 14489                           
 14490                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14491  004C48  0E00               	movlw	0
 14492  004C4A  6F5B               	movwf	91,b	;volatile
 14493                           
 14494                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14495  004C4C  0E00               	movlw	0
 14496  004C4E  6F6A               	movwf	106,b	;volatile
 14497                           
 14498                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14499  004C50  0E00               	movlw	0
 14500  004C52  6F6B               	movwf	107,b	;volatile
 14501                           
 14502                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14503  004C54  0E00               	movlw	0
 14504  004C56  6F7A               	movwf	122,b	;volatile
 14505                           
 14506                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14507  004C58  0E00               	movlw	0
 14508  004C5A  6F7B               	movwf	123,b	;volatile
 14509                           
 14510                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14511  004C5C  0E00               	movlw	0
 14512  004C5E  6F82               	movwf	130,b	;volatile
 14513                           
 14514                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14515  004C60  0E00               	movlw	0
 14516  004C62  6F42               	movwf	66,b	;volatile
 14517                           
 14518                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14519  004C64  0E00               	movlw	0
 14520  004C66  6F52               	movwf	82,b	;volatile
 14521                           
 14522                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14523  004C68  0E00               	movlw	0
 14524  004C6A  6F62               	movwf	98,b	;volatile
 14525                           
 14526                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14527  004C6C  0E00               	movlw	0
 14528  004C6E  6F72               	movwf	114,b	;volatile
 14529  004C70                     
 14530                           ; BSR set to: 58
 14531                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14532  004C70  6943               	setf	67,b	;volatile
 14533  004C72                     
 14534                           ; BSR set to: 58
 14535                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14536  004C72  6953               	setf	83,b	;volatile
 14537  004C74                     
 14538                           ; BSR set to: 58
 14539                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14540  004C74  6963               	setf	99,b	;volatile
 14541  004C76                     
 14542                           ; BSR set to: 58
 14543                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14544  004C76  6973               	setf	115,b	;volatile
 14545                           
 14546                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14547  004C78  0E07               	movlw	7
 14548  004C7A  6F83               	movwf	131,b	;volatile
 14549  004C7C                     
 14550                           ; BSR set to: 58
 14551                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14552  004C7C  6944               	setf	68,b	;volatile
 14553  004C7E                     
 14554                           ; BSR set to: 58
 14555                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14556  004C7E  6954               	setf	84,b	;volatile
 14557  004C80                     
 14558                           ; BSR set to: 58
 14559                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14560  004C80  6964               	setf	100,b	;volatile
 14561  004C82                     
 14562                           ; BSR set to: 58
 14563                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14564  004C82  6974               	setf	116,b	;volatile
 14565                           
 14566                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14567  004C84  0E0F               	movlw	15
 14568  004C86  6F84               	movwf	132,b	;volatile
 14569                           
 14570                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14571  004C88  0E1F               	movlw	31
 14572  004C8A  6FCF               	movwf	207,b	;volatile
 14573                           
 14574                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14575  004C8C  0E09               	movlw	9
 14576  004C8E  6FDC               	movwf	220,b	;volatile
 14577                           
 14578                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14579  004C90  0E0E               	movlw	14
 14580  004C92  6F01               	movwf	1,b	;volatile
 14581                           
 14582                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14583  004C94  0E0A               	movlw	10
 14584  004C96  6FE5               	movwf	229,b	;volatile
 14585                           
 14586                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14587  004C98  0E0D               	movlw	13
 14588  004C9A  6F00               	movwf	0,b	;volatile
 14589                           
 14590                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14591  004C9C  0E1D               	movlw	29
 14592  004C9E  6FC9               	movwf	201,b	;volatile
 14593                           
 14594                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14595  004CA0  0E10               	movlw	16
 14596  004CA2  6F04               	movwf	4,b	;volatile
 14597                           
 14598                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14599  004CA4  0E07               	movlw	7
 14600  004CA6  6FD9               	movwf	217,b	;volatile
 14601                           
 14602                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14603  004CA8  0E09               	movlw	9
 14604  004CAA  6FD1               	movwf	209,b	;volatile
 14605                           
 14606                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14607  004CAC  0E0F               	movlw	15
 14608  004CAE  6F03               	movwf	3,b	;volatile
 14609                           
 14610                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14611  004CB0  0E13               	movlw	19
 14612  004CB2  6F0B               	movwf	11,b	;volatile
 14613                           
 14614                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14615  004CB4  0E08               	movlw	8
 14616  004CB6  6FDB               	movwf	219,b	;volatile
 14617                           
 14618                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14619  004CB8  0E08               	movlw	8
 14620  004CBA  6FD2               	movwf	210,b	;volatile
 14621                           
 14622                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14623  004CBC  0E1E               	movlw	30
 14624  004CBE  6FD0               	movwf	208,b	;volatile
 14625  004CC0                     
 14626                           ; BSR set to: 58
 14627  004CC0  0012               	return		;funcret
 14628  004CC2                     __end_of_PIN_MANAGER_Initialize:
 14629                           	callstack 0
 14630                           
 14631 ;; *************** function _OSCILLATOR_Initialize *****************
 14632 ;; Defined at:
 14633 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14634 ;; Parameters:    Size  Location     Type
 14635 ;;		None
 14636 ;; Auto vars:     Size  Location     Type
 14637 ;;		None
 14638 ;; Return value:  Size  Location     Type
 14639 ;;                  1    wreg      void 
 14640 ;; Registers used:
 14641 ;;		wreg, status,2
 14642 ;; Tracked objects:
 14643 ;;		On entry : 0/0
 14644 ;;		On exit  : 0/0
 14645 ;;		Unchanged: 0/0
 14646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14651 ;;Total ram usage:        0 bytes
 14652 ;; Hardware stack levels used: 1
 14653 ;; Hardware stack levels required when called: 8
 14654 ;; This function calls:
 14655 ;;		Nothing
 14656 ;; This function is called by:
 14657 ;;		_SYSTEM_Initialize
 14658 ;; This function uses a non-reentrant model
 14659 ;;
 14660                           
 14661                           	psect	text70
 14662  005DF6                     __ptext70:
 14663                           	callstack 0
 14664  005DF6                     _OSCILLATOR_Initialize:
 14665                           	callstack 21
 14666  005DF6                     
 14667                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14668  005DF6  0E60               	movlw	96
 14669  005DF8  0139               	movlb	57	; () banked
 14670  005DFA  6FD9               	movwf	217,b	;volatile
 14671                           
 14672                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14673  005DFC  0E00               	movlw	0
 14674  005DFE  6FDB               	movwf	219,b	;volatile
 14675                           
 14676                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14677  005E00  0E00               	movlw	0
 14678  005E02  6FDD               	movwf	221,b	;volatile
 14679                           
 14680                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14681  005E04  0E08               	movlw	8
 14682  005E06  6FDF               	movwf	223,b	;volatile
 14683                           
 14684                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14685  005E08  0E00               	movlw	0
 14686  005E0A  6FDE               	movwf	222,b	;volatile
 14687  005E0C                     
 14688                           ; BSR set to: 57
 14689  005E0C  0012               	return		;funcret
 14690  005E0E                     __end_of_OSCILLATOR_Initialize:
 14691                           	callstack 0
 14692                           
 14693 ;; *************** function _INTERRUPT_Initialize *****************
 14694 ;; Defined at:
 14695 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;		None
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;  state           1   19[COMRAM] _Bool 
 14700 ;; Return value:  Size  Location     Type
 14701 ;;                  1    wreg      void 
 14702 ;; Registers used:
 14703 ;;		wreg, status,2
 14704 ;; Tracked objects:
 14705 ;;		On entry : 0/0
 14706 ;;		On exit  : 0/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14713 ;;Total ram usage:        1 bytes
 14714 ;; Hardware stack levels used: 1
 14715 ;; Hardware stack levels required when called: 8
 14716 ;; This function calls:
 14717 ;;		Nothing
 14718 ;; This function is called by:
 14719 ;;		_SYSTEM_Initialize
 14720 ;; This function uses a non-reentrant model
 14721 ;;
 14722                           
 14723                           	psect	text71
 14724  005570                     __ptext71:
 14725                           	callstack 0
 14726  005570                     _INTERRUPT_Initialize:
 14727                           	callstack 21
 14728  005570                     
 14729                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14730  005570  8AD2               	bsf	210,5,c	;volatile
 14731  005572                     
 14732                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14733  005572  0E00               	movlw	0
 14734  005574  BED2               	btfsc	16338,7,c	;volatile
 14735  005576  0E01               	movlw	1
 14736  005578  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14737  00557A                     
 14738                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14739  00557A  9ED2               	bcf	16338,7,c	;volatile
 14740                           
 14741                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14742  00557C  0E55               	movlw	85
 14743  00557E  6ED4               	movwf	212,c	;volatile
 14744                           
 14745                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14746  005580  0EAA               	movlw	170
 14747  005582  6ED4               	movwf	212,c	;volatile
 14748  005584                     
 14749                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14750  005584  90D4               	bcf	212,0,c	;volatile
 14751                           
 14752                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14753  005586  0E00               	movlw	0
 14754  005588  6ED7               	movwf	215,c	;volatile
 14755                           
 14756                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14757  00558A  0E00               	movlw	0
 14758  00558C  6ED6               	movwf	214,c	;volatile
 14759                           
 14760                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14761  00558E  0E08               	movlw	8
 14762  005590  6ED5               	movwf	213,c	;volatile
 14763                           
 14764                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14765  005592  0E55               	movlw	85
 14766  005594  6ED4               	movwf	212,c	;volatile
 14767                           
 14768                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14769  005596  0EAA               	movlw	170
 14770  005598  6ED4               	movwf	212,c	;volatile
 14771  00559A                     
 14772                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14773  00559A  80D4               	bsf	212,0,c	;volatile
 14774  00559C                     
 14775                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14776  00559C  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14777  00559E  D002               	bra	u2845
 14778  0055A0  9ED2               	bcf	16338,7,c	;volatile
 14779  0055A2  D001               	bra	u2846
 14780  0055A4                     u2845:
 14781  0055A4  8ED2               	bsf	16338,7,c	;volatile
 14782  0055A6                     u2846:
 14783  0055A6                     
 14784                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14785  0055A6  0139               	movlb	57	; () banked
 14786  0055A8  9983               	bcf	131,4,b	;volatile
 14787  0055AA                     
 14788                           ; BSR set to: 57
 14789                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14790  0055AA  9783               	bcf	131,3,b	;volatile
 14791  0055AC                     
 14792                           ; BSR set to: 57
 14793                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 14794  0055AC  8F81               	bsf	129,7,b	;volatile
 14795  0055AE                     
 14796                           ; BSR set to: 57
 14797                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 14798  0055AE  8B81               	bsf	129,5,b	;volatile
 14799  0055B0                     
 14800                           ; BSR set to: 57
 14801                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 14802  0055B0  8D81               	bsf	129,6,b	;volatile
 14803  0055B2                     
 14804                           ; BSR set to: 57
 14805                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 14806  0055B2  818A               	bsf	138,0,b	;volatile
 14807  0055B4                     
 14808                           ; BSR set to: 57
 14809                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 14810  0055B4  8F88               	bsf	136,7,b	;volatile
 14811  0055B6                     
 14812                           ; BSR set to: 57
 14813                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 14814  0055B6  9187               	bcf	135,0,b	;volatile
 14815  0055B8                     
 14816                           ; BSR set to: 57
 14817                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 14818  0055B8  8389               	bsf	137,1,b	;volatile
 14819  0055BA                     
 14820                           ; BSR set to: 57
 14821  0055BA  0012               	return		;funcret
 14822  0055BC                     __end_of_INTERRUPT_Initialize:
 14823                           	callstack 0
 14824                           
 14825 ;; *************** function _CLC3_Initialize *****************
 14826 ;; Defined at:
 14827 ;;		line 58 in file "mcc_generated_files/clc3.c"
 14828 ;; Parameters:    Size  Location     Type
 14829 ;;		None
 14830 ;; Auto vars:     Size  Location     Type
 14831 ;;		None
 14832 ;; Return value:  Size  Location     Type
 14833 ;;                  1    wreg      void 
 14834 ;; Registers used:
 14835 ;;		wreg, status,2
 14836 ;; Tracked objects:
 14837 ;;		On entry : 0/0
 14838 ;;		On exit  : 0/0
 14839 ;;		Unchanged: 0/0
 14840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14845 ;;Total ram usage:        0 bytes
 14846 ;; Hardware stack levels used: 1
 14847 ;; Hardware stack levels required when called: 8
 14848 ;; This function calls:
 14849 ;;		Nothing
 14850 ;; This function is called by:
 14851 ;;		_SYSTEM_Initialize
 14852 ;; This function uses a non-reentrant model
 14853 ;;
 14854                           
 14855                           	psect	text72
 14856  005C20                     __ptext72:
 14857                           	callstack 0
 14858  005C20                     _CLC3_Initialize:
 14859                           	callstack 21
 14860  005C20                     
 14861                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 14862  005C20  0E00               	movlw	0
 14863  005C22  013C               	movlb	60	; () banked
 14864  005C24  6F61               	movwf	97,b	;volatile
 14865                           
 14866                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 14867  005C26  0E03               	movlw	3
 14868  005C28  6F62               	movwf	98,b	;volatile
 14869                           
 14870                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 14871  005C2A  0E02               	movlw	2
 14872  005C2C  6F63               	movwf	99,b	;volatile
 14873                           
 14874                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 14875  005C2E  0E00               	movlw	0
 14876  005C30  6F64               	movwf	100,b	;volatile
 14877                           
 14878                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 14879  005C32  0E00               	movlw	0
 14880  005C34  6F65               	movwf	101,b	;volatile
 14881                           
 14882                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 14883  005C36  0E02               	movlw	2
 14884  005C38  6F66               	movwf	102,b	;volatile
 14885                           
 14886                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 14887  005C3A  0E08               	movlw	8
 14888  005C3C  6F67               	movwf	103,b	;volatile
 14889                           
 14890                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 14891  005C3E  0E00               	movlw	0
 14892  005C40  6F68               	movwf	104,b	;volatile
 14893                           
 14894                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 14895  005C42  0E00               	movlw	0
 14896  005C44  6F69               	movwf	105,b	;volatile
 14897                           
 14898                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 14899  005C46  0E85               	movlw	133
 14900  005C48  6F60               	movwf	96,b	;volatile
 14901  005C4A                     
 14902                           ; BSR set to: 60
 14903  005C4A  0012               	return		;funcret
 14904  005C4C                     __end_of_CLC3_Initialize:
 14905                           	callstack 0
 14906                           
 14907 ;; *************** function _CCP4_Initialize *****************
 14908 ;; Defined at:
 14909 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;		None
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;		None
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  1    wreg      void 
 14916 ;; Registers used:
 14917 ;;		wreg, status,2, status,0, cstack
 14918 ;; Tracked objects:
 14919 ;;		On entry : 0/0
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14927 ;;Total ram usage:        0 bytes
 14928 ;; Hardware stack levels used: 1
 14929 ;; Hardware stack levels required when called: 9
 14930 ;; This function calls:
 14931 ;;		_CCP4_SetCallBack
 14932 ;; This function is called by:
 14933 ;;		_SYSTEM_Initialize
 14934 ;; This function uses a non-reentrant model
 14935 ;;
 14936                           
 14937                           	psect	text73
 14938  005B6A                     __ptext73:
 14939                           	callstack 0
 14940  005B6A                     _CCP4_Initialize:
 14941                           	callstack 20
 14942  005B6A                     
 14943                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 14944  005B6A  0E83               	movlw	131
 14945  005B6C  6E72               	movwf	114,c	;volatile
 14946                           
 14947                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 14948  005B6E  0E00               	movlw	0
 14949  005B70  6E73               	movwf	115,c	;volatile
 14950                           
 14951                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 14952  005B72  0E00               	movlw	0
 14953  005B74  6E71               	movwf	113,c	;volatile
 14954                           
 14955                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 14956  005B76  0E00               	movlw	0
 14957  005B78  6E70               	movwf	112,c	;volatile
 14958  005B7A                     
 14959                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 14960  005B7A  0E3A               	movlw	low _CCP4_DefaultCallBack
 14961  005B7C  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 14962  005B7E  0E5B               	movlw	high _CCP4_DefaultCallBack
 14963  005B80  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 14964  005B82  EC3E  F02F         	call	_CCP4_SetCallBack	;wreg free
 14965  005B86                     
 14966                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 14967  005B86  013F               	movlb	63	; () banked
 14968  005B88  515E               	movf	94,w,b	;volatile
 14969  005B8A  0B3F               	andlw	-193
 14970  005B8C  0980               	iorlw	128
 14971  005B8E  6F5E               	movwf	94,b	;volatile
 14972  005B90                     
 14973                           ; BSR set to: 63
 14974                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 14975  005B90  0139               	movlb	57	; () banked
 14976  005B92  91AA               	bcf	170,0,b	;volatile
 14977  005B94                     
 14978                           ; BSR set to: 57
 14979                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 14980  005B94  819A               	bsf	154,0,b	;volatile
 14981  005B96                     
 14982                           ; BSR set to: 57
 14983  005B96  0012               	return		;funcret
 14984  005B98                     __end_of_CCP4_Initialize:
 14985                           	callstack 0
 14986                           
 14987 ;; *************** function _CCP4_SetCallBack *****************
 14988 ;; Defined at:
 14989 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 14992 ;;		 -> CCP4_DefaultCallBack(1), 
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;		None
 14995 ;; Return value:  Size  Location     Type
 14996 ;;                  1    wreg      void 
 14997 ;; Registers used:
 14998 ;;		wreg, status,2, status,0
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15008 ;;Total ram usage:        2 bytes
 15009 ;; Hardware stack levels used: 1
 15010 ;; Hardware stack levels required when called: 8
 15011 ;; This function calls:
 15012 ;;		Nothing
 15013 ;; This function is called by:
 15014 ;;		_CCP4_Initialize
 15015 ;; This function uses a non-reentrant model
 15016 ;;
 15017                           
 15018                           	psect	text74
 15019  005E7C                     __ptext74:
 15020                           	callstack 0
 15021  005E7C                     _CCP4_SetCallBack:
 15022                           	callstack 20
 15023  005E7C                     
 15024                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15025  005E7C  C014  F18C         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15026  005E80  C015  F18D         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15027  005E84  0012               	return		;funcret
 15028  005E86                     __end_of_CCP4_SetCallBack:
 15029                           	callstack 0
 15030                           
 15031 ;; *************** function _CCP3_Initialize *****************
 15032 ;; Defined at:
 15033 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;		None
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      void 
 15040 ;; Registers used:
 15041 ;;		wreg, status,2, status,0, cstack
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15051 ;;Total ram usage:        0 bytes
 15052 ;; Hardware stack levels used: 1
 15053 ;; Hardware stack levels required when called: 9
 15054 ;; This function calls:
 15055 ;;		_CCP3_SetCallBack
 15056 ;; This function is called by:
 15057 ;;		_SYSTEM_Initialize
 15058 ;; This function uses a non-reentrant model
 15059 ;;
 15060                           
 15061                           	psect	text75
 15062  005B98                     __ptext75:
 15063                           	callstack 0
 15064  005B98                     _CCP3_Initialize:
 15065                           	callstack 20
 15066  005B98                     
 15067                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15068  005B98  0E83               	movlw	131
 15069  005B9A  6E76               	movwf	118,c	;volatile
 15070                           
 15071                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15072  005B9C  0E00               	movlw	0
 15073  005B9E  6E77               	movwf	119,c	;volatile
 15074                           
 15075                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15076  005BA0  0E00               	movlw	0
 15077  005BA2  6E75               	movwf	117,c	;volatile
 15078                           
 15079                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15080  005BA4  0E00               	movlw	0
 15081  005BA6  6E74               	movwf	116,c	;volatile
 15082  005BA8                     
 15083                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15084  005BA8  0E0A               	movlw	low _CCP3_DefaultCallBack
 15085  005BAA  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15086  005BAC  0E5B               	movlw	high _CCP3_DefaultCallBack
 15087  005BAE  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15088  005BB0  EC43  F02F         	call	_CCP3_SetCallBack	;wreg free
 15089  005BB4                     
 15090                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15091  005BB4  013F               	movlb	63	; () banked
 15092  005BB6  515E               	movf	94,w,b	;volatile
 15093  005BB8  0BCF               	andlw	-49
 15094  005BBA  0920               	iorlw	32
 15095  005BBC  6F5E               	movwf	94,b	;volatile
 15096  005BBE                     
 15097                           ; BSR set to: 63
 15098                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15099  005BBE  0139               	movlb	57	; () banked
 15100  005BC0  93A9               	bcf	169,1,b	;volatile
 15101  005BC2                     
 15102                           ; BSR set to: 57
 15103                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15104  005BC2  8399               	bsf	153,1,b	;volatile
 15105  005BC4                     
 15106                           ; BSR set to: 57
 15107  005BC4  0012               	return		;funcret
 15108  005BC6                     __end_of_CCP3_Initialize:
 15109                           	callstack 0
 15110                           
 15111 ;; *************** function _CCP3_SetCallBack *****************
 15112 ;; Defined at:
 15113 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15114 ;; Parameters:    Size  Location     Type
 15115 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15116 ;;		 -> CCP3_DefaultCallBack(1), 
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      void 
 15121 ;; Registers used:
 15122 ;;		wreg, status,2, status,0
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15132 ;;Total ram usage:        2 bytes
 15133 ;; Hardware stack levels used: 1
 15134 ;; Hardware stack levels required when called: 8
 15135 ;; This function calls:
 15136 ;;		Nothing
 15137 ;; This function is called by:
 15138 ;;		_CCP3_Initialize
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text76
 15143  005E86                     __ptext76:
 15144                           	callstack 0
 15145  005E86                     _CCP3_SetCallBack:
 15146                           	callstack 20
 15147  005E86                     
 15148                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15149  005E86  C014  F18E         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15150  005E8A  C015  F18F         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15151  005E8E  0012               	return		;funcret
 15152  005E90                     __end_of_CCP3_SetCallBack:
 15153                           	callstack 0
 15154                           
 15155 ;; *************** function _ADCC_Initialize *****************
 15156 ;; Defined at:
 15157 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15158 ;; Parameters:    Size  Location     Type
 15159 ;;		None
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;		None
 15162 ;; Return value:  Size  Location     Type
 15163 ;;                  1    wreg      void 
 15164 ;; Registers used:
 15165 ;;		wreg, status,2
 15166 ;; Tracked objects:
 15167 ;;		On entry : 0/0
 15168 ;;		On exit  : 0/0
 15169 ;;		Unchanged: 0/0
 15170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15175 ;;Total ram usage:        0 bytes
 15176 ;; Hardware stack levels used: 1
 15177 ;; Hardware stack levels required when called: 8
 15178 ;; This function calls:
 15179 ;;		Nothing
 15180 ;; This function is called by:
 15181 ;;		_SYSTEM_Initialize
 15182 ;; This function uses a non-reentrant model
 15183 ;;
 15184                           
 15185                           	psect	text77
 15186  0054BE                     __ptext77:
 15187                           	callstack 0
 15188  0054BE                     _ADCC_Initialize:
 15189                           	callstack 21
 15190  0054BE                     
 15191                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15192  0054BE  0E00               	movlw	0
 15193  0054C0  013E               	movlb	62	; () banked
 15194  0054C2  6FDE               	movwf	222,b	;volatile
 15195                           
 15196                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15197  0054C4  0E00               	movlw	0
 15198  0054C6  6FDF               	movwf	223,b	;volatile
 15199                           
 15200                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15201  0054C8  0E00               	movlw	0
 15202  0054CA  6FE0               	movwf	224,b	;volatile
 15203                           
 15204                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15205  0054CC  0E00               	movlw	0
 15206  0054CE  6FE1               	movwf	225,b	;volatile
 15207                           
 15208                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15209  0054D0  0E00               	movlw	0
 15210  0054D2  6FE4               	movwf	228,b	;volatile
 15211                           
 15212                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15213  0054D4  0E00               	movlw	0
 15214  0054D6  6FE5               	movwf	229,b	;volatile
 15215                           
 15216                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15217  0054D8  0E00               	movlw	0
 15218  0054DA  6FEA               	movwf	234,b	;volatile
 15219                           
 15220                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15221  0054DC  0E00               	movlw	0
 15222  0054DE  6FEC               	movwf	236,b	;volatile
 15223                           
 15224                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15225  0054E0  0E00               	movlw	0
 15226  0054E2  6FF1               	movwf	241,b	;volatile
 15227                           
 15228                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15229  0054E4  0E58               	movlw	88
 15230  0054E6  6FF3               	movwf	243,b	;volatile
 15231                           
 15232                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15233  0054E8  0E02               	movlw	2
 15234  0054EA  6FF4               	movwf	244,b	;volatile
 15235                           
 15236                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15237  0054EC  0E00               	movlw	0
 15238  0054EE  6FF5               	movwf	245,b	;volatile
 15239                           
 15240                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15241  0054F0  0E00               	movlw	0
 15242  0054F2  6FF6               	movwf	246,b	;volatile
 15243                           
 15244                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15245  0054F4  0E00               	movlw	0
 15246  0054F6  6FF7               	movwf	247,b	;volatile
 15247                           
 15248                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15249  0054F8  0E00               	movlw	0
 15250  0054FA  6FF9               	movwf	249,b	;volatile
 15251                           
 15252                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15253  0054FC  0E00               	movlw	0
 15254  0054FE  6FFA               	movwf	250,b	;volatile
 15255                           
 15256                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15257  005500  0E00               	movlw	0
 15258  005502  6FFB               	movwf	251,b	;volatile
 15259                           
 15260                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15261  005504  0E00               	movlw	0
 15262  005506  6FFC               	movwf	252,b	;volatile
 15263                           
 15264                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15265  005508  0E00               	movlw	0
 15266  00550A  6FFD               	movwf	253,b	;volatile
 15267                           
 15268                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15269  00550C  0E00               	movlw	0
 15270  00550E  6FFE               	movwf	254,b	;volatile
 15271                           
 15272                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15273  005510  0E1F               	movlw	31
 15274  005512  6FFF               	movwf	255,b	;volatile
 15275                           
 15276                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15277  005514  0E84               	movlw	132
 15278  005516  6FF8               	movwf	248,b	;volatile
 15279  005518                     
 15280                           ; BSR set to: 62
 15281  005518  0012               	return		;funcret
 15282  00551A                     __end_of_ADCC_Initialize:
 15283                           	callstack 0
 15284                           
 15285 ;; *************** function _UART1_tx_vect_isr *****************
 15286 ;; Defined at:
 15287 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15288 ;; Parameters:    Size  Location     Type
 15289 ;;		None
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;		None
 15292 ;; Return value:  Size  Location     Type
 15293 ;;                  1    wreg      void 
 15294 ;; Registers used:
 15295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15296 ;; Tracked objects:
 15297 ;;		On entry : 0/0
 15298 ;;		On exit  : 0/0
 15299 ;;		Unchanged: 0/0
 15300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15305 ;;Total ram usage:        1 bytes
 15306 ;; Hardware stack levels used: 1
 15307 ;; Hardware stack levels required when called: 5
 15308 ;; This function calls:
 15309 ;;		Absolute function
 15310 ;;		_UART1_Transmit_ISR
 15311 ;; This function is called by:
 15312 ;;		Interrupt level 1
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           	psect	text78
 15317  0057E4                     __ptext78:
 15318                           	callstack 0
 15319  0057E4                     _UART1_tx_vect_isr:
 15320                           	callstack 14
 15321                           
 15322                           ; BSR set to: 62
 15323                           ;incstack = 0
 15324  0057E4  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15325  0057EA                     
 15326                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15327  0057EA  0101               	movlb	1	; () banked
 15328  0057EC  5196               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15329  0057EE  1197               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15330  0057F0  B4D8               	btfsc	status,2,c
 15331  0057F2  EFFD  F02B         	goto	i1u707_21
 15332  0057F6  EFFF  F02B         	goto	i1u707_20
 15333  0057FA                     i1u707_21:
 15334  0057FA  EF0B  F02C         	goto	i1l324
 15335  0057FE                     i1u707_20:
 15336  0057FE                     
 15337                           ; BSR set to: 1
 15338                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15339  0057FE  D802               	call	i1u708_28
 15340  005800  EF0B  F02C         	goto	i1u708_29
 15341  005804                     i1u708_28:
 15342  005804  0005               	push	
 15343  005806  6EFA               	movwf	pclath,c
 15344  005808  5196               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15345  00580A  6EFD               	movwf	tosl,c
 15346  00580C  5197               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15347  00580E  6EFE               	movwf	tosh,c
 15348  005810  6AFF               	clrf	tosu,c
 15349  005812  50FA               	movf	pclath,w,c
 15350  005814  0012               	return		;indir
 15351  005816                     i1u708_29:
 15352  005816                     i1l324:
 15353  005816  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15354  00581C  0011               	retfie		f
 15355  00581E                     __end_of_UART1_tx_vect_isr:
 15356                           	callstack 0
 15357                           
 15358 ;; *************** function _UART1_Transmit_ISR *****************
 15359 ;; Defined at:
 15360 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15361 ;; Parameters:    Size  Location     Type
 15362 ;;		None
 15363 ;; Auto vars:     Size  Location     Type
 15364 ;;		None
 15365 ;; Return value:  Size  Location     Type
 15366 ;;                  1    wreg      void 
 15367 ;; Registers used:
 15368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15369 ;; Tracked objects:
 15370 ;;		On entry : 0/0
 15371 ;;		On exit  : 0/0
 15372 ;;		Unchanged: 0/0
 15373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15378 ;;Total ram usage:        0 bytes
 15379 ;; Hardware stack levels used: 1
 15380 ;; Hardware stack levels required when called: 4
 15381 ;; This function calls:
 15382 ;;		Nothing
 15383 ;; This function is called by:
 15384 ;;		_UART1_Initialize
 15385 ;;		_UART1_tx_vect_isr
 15386 ;; This function uses a non-reentrant model
 15387 ;;
 15388                           
 15389                           	psect	text79
 15390  005726                     __ptext79:
 15391                           	callstack 0
 15392  005726                     _UART1_Transmit_ISR:
 15393                           	callstack 14
 15394  005726                     
 15395                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15396  005726  0E08               	movlw	8
 15397  005728  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15398  00572A  EF99  F02B         	goto	i1u688_21
 15399  00572E  EF9B  F02B         	goto	i1u688_20
 15400  005732                     i1u688_21:
 15401  005732  EFB2  F02B         	goto	i1l333
 15402  005736                     i1u688_20:
 15403  005736                     
 15404                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15405  005736  0E10               	movlw	low _uart1TxBuffer
 15406  005738  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15407  00573A  6ED9               	movwf	fsr2l,c
 15408  00573C  6ADA               	clrf	fsr2h,c
 15409  00573E  0E01               	movlw	high _uart1TxBuffer
 15410  005740  22DA               	addwfc	fsr2h,f,c
 15411  005742  50DF               	movf	indf2,w,c
 15412  005744  013D               	movlb	61	; () banked
 15413  005746  6FEA               	movwf	234,b	;volatile
 15414  005748                     
 15415                           ; BSR set to: 61
 15416  005748  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15417  00574A                     
 15418                           ; BSR set to: 61
 15419                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15420  00574A  0E07               	movlw	7
 15421  00574C  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15422  00574E  EFAB  F02B         	goto	i1u689_21
 15423  005752  EFAD  F02B         	goto	i1u689_20
 15424  005756                     i1u689_21:
 15425  005756  EFAF  F02B         	goto	i1l7101
 15426  00575A                     i1u689_20:
 15427  00575A                     
 15428                           ; BSR set to: 61
 15429                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15430  00575A  0E00               	movlw	0
 15431  00575C  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15432  00575E                     i1l7101:
 15433                           
 15434                           ; BSR set to: 61
 15435                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15436  00575E  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15437                           
 15438                           ;mcc_generated_files/uart1.c: 264:     }
 15439  005760  EFB4  F02B         	goto	i1l336
 15440  005764                     i1l333:
 15441                           
 15442                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15443  005764  0139               	movlb	57	; () banked
 15444  005766  9993               	bcf	147,4,b	;volatile
 15445  005768                     i1l336:
 15446  005768  0012               	return		;funcret
 15447  00576A                     __end_of_UART1_Transmit_ISR:
 15448                           	callstack 0
 15449                           
 15450 ;; *************** function _UART1_rx_vect_isr *****************
 15451 ;; Defined at:
 15452 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;		None
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;		None
 15457 ;; Return value:  Size  Location     Type
 15458 ;;                  1    wreg      void 
 15459 ;; Registers used:
 15460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15461 ;; Tracked objects:
 15462 ;;		On entry : 0/0
 15463 ;;		On exit  : 0/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15470 ;;Total ram usage:        1 bytes
 15471 ;; Hardware stack levels used: 1
 15472 ;; Hardware stack levels required when called: 7
 15473 ;; This function calls:
 15474 ;;		Absolute function
 15475 ;;		_UART1_Receive_ISR
 15476 ;; This function is called by:
 15477 ;;		Interrupt level 1
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           	psect	text80
 15482  005820                     __ptext80:
 15483                           	callstack 0
 15484  005820                     _UART1_rx_vect_isr:
 15485                           	callstack 12
 15486                           
 15487                           ;incstack = 0
 15488  005820  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15489  005826                     
 15490                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15491  005826  0101               	movlb	1	; () banked
 15492  005828  5198               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15493  00582A  1199               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15494  00582C  B4D8               	btfsc	status,2,c
 15495  00582E  EF1B  F02C         	goto	i1u709_21
 15496  005832  EF1D  F02C         	goto	i1u709_20
 15497  005836                     i1u709_21:
 15498  005836  EF29  F02C         	goto	i1l330
 15499  00583A                     i1u709_20:
 15500  00583A                     
 15501                           ; BSR set to: 1
 15502                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15503  00583A  D802               	call	i1u710_28
 15504  00583C  EF29  F02C         	goto	i1u710_29
 15505  005840                     i1u710_28:
 15506  005840  0005               	push	
 15507  005842  6EFA               	movwf	pclath,c
 15508  005844  5198               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15509  005846  6EFD               	movwf	tosl,c
 15510  005848  5199               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15511  00584A  6EFE               	movwf	tosh,c
 15512  00584C  6AFF               	clrf	tosu,c
 15513  00584E  50FA               	movf	pclath,w,c
 15514  005850  0012               	return		;indir
 15515  005852                     i1u710_29:
 15516  005852                     i1l330:
 15517  005852  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15518  005858  0011               	retfie		f
 15519  00585A                     __end_of_UART1_rx_vect_isr:
 15520                           	callstack 0
 15521                           
 15522 ;; *************** function _UART1_Receive_ISR *****************
 15523 ;; Defined at:
 15524 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15525 ;; Parameters:    Size  Location     Type
 15526 ;;		None
 15527 ;; Auto vars:     Size  Location     Type
 15528 ;;		None
 15529 ;; Return value:  Size  Location     Type
 15530 ;;                  1    wreg      void 
 15531 ;; Registers used:
 15532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15533 ;; Tracked objects:
 15534 ;;		On entry : 0/0
 15535 ;;		On exit  : 0/0
 15536 ;;		Unchanged: 0/0
 15537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15542 ;;Total ram usage:        0 bytes
 15543 ;; Hardware stack levels used: 1
 15544 ;; Hardware stack levels required when called: 6
 15545 ;; This function calls:
 15546 ;;		Absolute function
 15547 ;;		_UART1_DefaultErrorHandler
 15548 ;;		_UART1_DefaultFramingErrorHandler
 15549 ;;		_UART1_DefaultOverrunErrorHandler
 15550 ;;		_UART1_RxDataHandler
 15551 ;; This function is called by:
 15552 ;;		_UART1_Initialize
 15553 ;;		_UART1_rx_vect_isr
 15554 ;; This function uses a non-reentrant model
 15555 ;;
 15556                           
 15557                           	psect	text81
 15558  004E48                     __ptext81:
 15559                           	callstack 0
 15560  004E48                     _UART1_Receive_ISR:
 15561                           	callstack 12
 15562  004E48                     
 15563                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15564  004E48  0E00               	movlw	low _uart1RxStatusBuffer
 15565  004E4A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15566  004E4C  6ED9               	movwf	fsr2l,c
 15567  004E4E  6ADA               	clrf	fsr2h,c
 15568  004E50  0E01               	movlw	high _uart1RxStatusBuffer
 15569  004E52  22DA               	addwfc	fsr2h,f,c
 15570  004E54  0E00               	movlw	0
 15571  004E56  6EDF               	movwf	indf2,c
 15572  004E58                     
 15573                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15574  004E58  013D               	movlb	61	; () banked
 15575  004E5A  A7F9               	btfss	249,3,b	;volatile
 15576  004E5C  EF32  F027         	goto	i1u690_21
 15577  004E60  EF34  F027         	goto	i1u690_20
 15578  004E64                     i1u690_21:
 15579  004E64  EF48  F027         	goto	i1l7111
 15580  004E68                     i1u690_20:
 15581  004E68                     
 15582                           ; BSR set to: 61
 15583                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15584  004E68  0E00               	movlw	low _uart1RxStatusBuffer
 15585  004E6A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15586  004E6C  6ED9               	movwf	fsr2l,c
 15587  004E6E  6ADA               	clrf	fsr2h,c
 15588  004E70  0E01               	movlw	high _uart1RxStatusBuffer
 15589  004E72  22DA               	addwfc	fsr2h,f,c
 15590  004E74  0101               	movlb	1	; () banked
 15591  004E76  82DF               	bsf	indf2,1,c
 15592  004E78                     
 15593                           ; BSR set to: 1
 15594                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15595  004E78  D802               	call	i1u691_28
 15596  004E7A  EF48  F027         	goto	i1u691_29
 15597  004E7E                     i1u691_28:
 15598  004E7E  0005               	push	
 15599  004E80  6EFA               	movwf	pclath,c
 15600  004E82  5194               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15601  004E84  6EFD               	movwf	tosl,c
 15602  004E86  5195               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15603  004E88  6EFE               	movwf	tosh,c
 15604  004E8A  6AFF               	clrf	tosu,c
 15605  004E8C  50FA               	movf	pclath,w,c
 15606  004E8E  0012               	return		;indir
 15607  004E90                     i1u691_29:
 15608  004E90                     i1l7111:
 15609                           
 15610                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15611  004E90  013D               	movlb	61	; () banked
 15612  004E92  A3F9               	btfss	249,1,b	;volatile
 15613  004E94  EF4E  F027         	goto	i1u692_21
 15614  004E98  EF50  F027         	goto	i1u692_20
 15615  004E9C                     i1u692_21:
 15616  004E9C  EF64  F027         	goto	i1l7117
 15617  004EA0                     i1u692_20:
 15618  004EA0                     
 15619                           ; BSR set to: 61
 15620                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15621  004EA0  0E00               	movlw	low _uart1RxStatusBuffer
 15622  004EA2  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15623  004EA4  6ED9               	movwf	fsr2l,c
 15624  004EA6  6ADA               	clrf	fsr2h,c
 15625  004EA8  0E01               	movlw	high _uart1RxStatusBuffer
 15626  004EAA  22DA               	addwfc	fsr2h,f,c
 15627  004EAC  0101               	movlb	1	; () banked
 15628  004EAE  84DF               	bsf	indf2,2,c
 15629  004EB0                     
 15630                           ; BSR set to: 1
 15631                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15632  004EB0  D802               	call	i1u693_28
 15633  004EB2  EF64  F027         	goto	i1u693_29
 15634  004EB6                     i1u693_28:
 15635  004EB6  0005               	push	
 15636  004EB8  6EFA               	movwf	pclath,c
 15637  004EBA  5192               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15638  004EBC  6EFD               	movwf	tosl,c
 15639  004EBE  5193               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15640  004EC0  6EFE               	movwf	tosh,c
 15641  004EC2  6AFF               	clrf	tosu,c
 15642  004EC4  50FA               	movf	pclath,w,c
 15643  004EC6  0012               	return		;indir
 15644  004EC8                     i1u693_29:
 15645  004EC8                     i1l7117:
 15646                           
 15647                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15648  004EC8  0E00               	movlw	low _uart1RxStatusBuffer
 15649  004ECA  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15650  004ECC  6ED9               	movwf	fsr2l,c
 15651  004ECE  6ADA               	clrf	fsr2h,c
 15652  004ED0  0E01               	movlw	high _uart1RxStatusBuffer
 15653  004ED2  22DA               	addwfc	fsr2h,f,c
 15654  004ED4  50DF               	movf	indf2,w,c
 15655  004ED6  B4D8               	btfsc	status,2,c
 15656  004ED8  EF70  F027         	goto	i1u694_21
 15657  004EDC  EF72  F027         	goto	i1u694_20
 15658  004EE0                     i1u694_21:
 15659  004EE0  EF81  F027         	goto	i1l7121
 15660  004EE4                     i1u694_20:
 15661  004EE4                     
 15662                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15663  004EE4  D802               	call	i1u695_28
 15664  004EE6  EF7F  F027         	goto	i1u695_29
 15665  004EEA                     i1u695_28:
 15666  004EEA  0005               	push	
 15667  004EEC  6EFA               	movwf	pclath,c
 15668  004EEE  0101               	movlb	1	; () banked
 15669  004EF0  5190               	movf	_UART1_ErrorHandler& (0+255),w,b
 15670  004EF2  6EFD               	movwf	tosl,c
 15671  004EF4  5191               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15672  004EF6  6EFE               	movwf	tosh,c
 15673  004EF8  6AFF               	clrf	tosu,c
 15674  004EFA  50FA               	movf	pclath,w,c
 15675  004EFC  0012               	return		;indir
 15676  004EFE                     i1u695_29:
 15677                           
 15678                           ;mcc_generated_files/uart1.c: 290:     } else {
 15679  004EFE  EF83  F027         	goto	i1l343
 15680  004F02                     i1l7121:
 15681                           
 15682                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15683  004F02  EC26  F02E         	call	_UART1_RxDataHandler	;wreg free
 15684  004F06                     i1l343:
 15685  004F06  0012               	return		;funcret
 15686  004F08                     __end_of_UART1_Receive_ISR:
 15687                           	callstack 0
 15688                           
 15689 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15690 ;; Defined at:
 15691 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15692 ;; Parameters:    Size  Location     Type
 15693 ;;		None
 15694 ;; Auto vars:     Size  Location     Type
 15695 ;;		None
 15696 ;; Return value:  Size  Location     Type
 15697 ;;                  1    wreg      void 
 15698 ;; Registers used:
 15699 ;;		None
 15700 ;; Tracked objects:
 15701 ;;		On entry : 0/0
 15702 ;;		On exit  : 0/0
 15703 ;;		Unchanged: 0/0
 15704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15709 ;;Total ram usage:        0 bytes
 15710 ;; Hardware stack levels used: 1
 15711 ;; Hardware stack levels required when called: 4
 15712 ;; This function calls:
 15713 ;;		Nothing
 15714 ;; This function is called by:
 15715 ;;		_UART1_Initialize
 15716 ;;		_UART1_Receive_ISR
 15717 ;; This function uses a non-reentrant model
 15718 ;;
 15719                           
 15720                           	psect	text82
 15721  005E9E                     __ptext82:
 15722                           	callstack 0
 15723  005E9E                     _UART1_DefaultOverrunErrorHandler:
 15724                           	callstack 13
 15725  005E9E  0012               	return		;funcret
 15726  005EA0                     __end_of_UART1_DefaultOverrunErrorHandler:
 15727                           	callstack 0
 15728                           
 15729 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15730 ;; Defined at:
 15731 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15732 ;; Parameters:    Size  Location     Type
 15733 ;;		None
 15734 ;; Auto vars:     Size  Location     Type
 15735 ;;		None
 15736 ;; Return value:  Size  Location     Type
 15737 ;;                  1    wreg      void 
 15738 ;; Registers used:
 15739 ;;		None
 15740 ;; Tracked objects:
 15741 ;;		On entry : 0/0
 15742 ;;		On exit  : 0/0
 15743 ;;		Unchanged: 0/0
 15744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15749 ;;Total ram usage:        0 bytes
 15750 ;; Hardware stack levels used: 1
 15751 ;; Hardware stack levels required when called: 4
 15752 ;; This function calls:
 15753 ;;		Nothing
 15754 ;; This function is called by:
 15755 ;;		_UART1_Initialize
 15756 ;;		_UART1_Receive_ISR
 15757 ;; This function uses a non-reentrant model
 15758 ;;
 15759                           
 15760                           	psect	text83
 15761  005EA0                     __ptext83:
 15762                           	callstack 0
 15763  005EA0                     _UART1_DefaultFramingErrorHandler:
 15764                           	callstack 13
 15765  005EA0  0012               	return		;funcret
 15766  005EA2                     __end_of_UART1_DefaultFramingErrorHandler:
 15767                           	callstack 0
 15768                           
 15769 ;; *************** function _UART1_DefaultErrorHandler *****************
 15770 ;; Defined at:
 15771 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;		None
 15774 ;; Auto vars:     Size  Location     Type
 15775 ;;		None
 15776 ;; Return value:  Size  Location     Type
 15777 ;;                  1    wreg      void 
 15778 ;; Registers used:
 15779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15780 ;; Tracked objects:
 15781 ;;		On entry : 0/0
 15782 ;;		On exit  : 0/0
 15783 ;;		Unchanged: 0/0
 15784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15789 ;;Total ram usage:        0 bytes
 15790 ;; Hardware stack levels used: 1
 15791 ;; Hardware stack levels required when called: 5
 15792 ;; This function calls:
 15793 ;;		_UART1_RxDataHandler
 15794 ;; This function is called by:
 15795 ;;		_UART1_Initialize
 15796 ;;		_UART1_Receive_ISR
 15797 ;; This function uses a non-reentrant model
 15798 ;;
 15799                           
 15800                           	psect	text84
 15801  005E90                     __ptext84:
 15802                           	callstack 0
 15803  005E90                     _UART1_DefaultErrorHandler:
 15804                           	callstack 12
 15805  005E90                     
 15806                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15807  005E90  EC26  F02E         	call	_UART1_RxDataHandler	;wreg free
 15808  005E94  0012               	return		;funcret
 15809  005E96                     __end_of_UART1_DefaultErrorHandler:
 15810                           	callstack 0
 15811                           
 15812 ;; *************** function _UART1_RxDataHandler *****************
 15813 ;; Defined at:
 15814 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15815 ;; Parameters:    Size  Location     Type
 15816 ;;		None
 15817 ;; Auto vars:     Size  Location     Type
 15818 ;;		None
 15819 ;; Return value:  Size  Location     Type
 15820 ;;                  1    wreg      void 
 15821 ;; Registers used:
 15822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15823 ;; Tracked objects:
 15824 ;;		On entry : 0/0
 15825 ;;		On exit  : 0/0
 15826 ;;		Unchanged: 0/0
 15827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15832 ;;Total ram usage:        0 bytes
 15833 ;; Hardware stack levels used: 1
 15834 ;; Hardware stack levels required when called: 4
 15835 ;; This function calls:
 15836 ;;		Nothing
 15837 ;; This function is called by:
 15838 ;;		_UART1_Receive_ISR
 15839 ;;		_UART1_DefaultErrorHandler
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           	psect	text85
 15844  005C4C                     __ptext85:
 15845                           	callstack 0
 15846  005C4C                     _UART1_RxDataHandler:
 15847                           	callstack 13
 15848  005C4C                     
 15849                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15850  005C4C  0E08               	movlw	low _uart1RxBuffer
 15851  005C4E  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15852  005C50  6ED9               	movwf	fsr2l,c
 15853  005C52  6ADA               	clrf	fsr2h,c
 15854  005C54  0E01               	movlw	high _uart1RxBuffer
 15855  005C56  22DA               	addwfc	fsr2h,f,c
 15856  005C58  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15857  005C5E  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 15858  005C60                     
 15859                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15860  005C60  0E07               	movlw	7
 15861  005C62  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 15862  005C64  EF36  F02E         	goto	i1u632_21
 15863  005C68  EF38  F02E         	goto	i1u632_20
 15864  005C6C                     i1u632_21:
 15865  005C6C  EF3A  F02E         	goto	i1l6559
 15866  005C70                     i1u632_20:
 15867  005C70                     
 15868                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15869  005C70  0E00               	movlw	0
 15870  005C72  6E45               	movwf	_uart1RxHead^0,c	;volatile
 15871  005C74                     i1l6559:
 15872                           
 15873                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15874  005C74  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 15875  005C76  0012               	return		;funcret
 15876  005C78                     __end_of_UART1_RxDataHandler:
 15877                           	callstack 0
 15878                           
 15879 ;; *************** function _TMR4_ISR *****************
 15880 ;; Defined at:
 15881 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 15882 ;; Parameters:    Size  Location     Type
 15883 ;;		None
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;		None
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  1    wreg      void 
 15888 ;; Registers used:
 15889 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15899 ;;Total ram usage:        1 bytes
 15900 ;; Hardware stack levels used: 1
 15901 ;; Hardware stack levels required when called: 6
 15902 ;; This function calls:
 15903 ;;		_TMR4_CallBack
 15904 ;; This function is called by:
 15905 ;;		Interrupt level 1
 15906 ;; This function uses a non-reentrant model
 15907 ;;
 15908                           
 15909                           	psect	text86
 15910  005904                     __ptext86:
 15911                           	callstack 0
 15912  005904                     _TMR4_ISR:
 15913                           	callstack 13
 15914                           
 15915                           ;incstack = 0
 15916  005904  006F FF60  F013    	movff	status,??_TMR4_ISR
 15917  00590A                     
 15918                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 15919  00590A  0139               	movlb	57	; () banked
 15920  00590C  91A7               	bcf	167,0,b	;volatile
 15921  00590E                     
 15922                           ; BSR set to: 57
 15923                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 15924  00590E  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 15925  005910  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 15926  005912  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 15927  005914  E109               	bnz	i1u715_20
 15928  005916  0E0A               	movlw	10
 15929  005918  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 15930  00591A  A0D8               	btfss	status,0,c
 15931  00591C  EF92  F02C         	goto	i1u715_21
 15932  005920  EF94  F02C         	goto	i1u715_20
 15933  005924                     i1u715_21:
 15934  005924  EF9A  F02C         	goto	i1l688
 15935  005928                     i1u715_20:
 15936  005928                     
 15937                           ; BSR set to: 57
 15938                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 15939  005928  ECE3  F02D         	call	_TMR4_CallBack	;wreg free
 15940  00592C                     
 15941                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 15942  00592C  0E00               	movlw	0
 15943  00592E  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 15944  005930  0E00               	movlw	0
 15945  005932  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 15946  005934                     i1l688:
 15947  005934  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 15948  00593A  0011               	retfie		f
 15949  00593C                     __end_of_TMR4_ISR:
 15950                           	callstack 0
 15951                           
 15952 ;; *************** function _TMR4_CallBack *****************
 15953 ;; Defined at:
 15954 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;		None
 15957 ;; Auto vars:     Size  Location     Type
 15958 ;;		None
 15959 ;; Return value:  Size  Location     Type
 15960 ;;                  1    wreg      void 
 15961 ;; Registers used:
 15962 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15963 ;; Tracked objects:
 15964 ;;		On entry : 0/0
 15965 ;;		On exit  : 0/0
 15966 ;;		Unchanged: 0/0
 15967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15972 ;;Total ram usage:        0 bytes
 15973 ;; Hardware stack levels used: 1
 15974 ;; Hardware stack levels required when called: 5
 15975 ;; This function calls:
 15976 ;;		Absolute function
 15977 ;;		_TMR4_10msISR
 15978 ;;		_TMR4_DefaultInterruptHandler
 15979 ;; This function is called by:
 15980 ;;		_TMR4_ISR
 15981 ;; This function uses a non-reentrant model
 15982 ;;
 15983                           
 15984                           	psect	text87
 15985  005BC6                     __ptext87:
 15986                           	callstack 0
 15987  005BC6                     _TMR4_CallBack:
 15988                           	callstack 13
 15989  005BC6                     
 15990                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 15991  005BC6  0101               	movlb	1	; () banked
 15992  005BC8  5184               	movf	_TMR4_InterruptHandler& (0+255),w,b
 15993  005BCA  1185               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 15994  005BCC  B4D8               	btfsc	status,2,c
 15995  005BCE  EFEB  F02D         	goto	i1u699_21
 15996  005BD2  EFED  F02D         	goto	i1u699_20
 15997  005BD6                     i1u699_21:
 15998  005BD6  EFF9  F02D         	goto	i1l692
 15999  005BDA                     i1u699_20:
 16000  005BDA                     
 16001                           ; BSR set to: 1
 16002                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16003  005BDA  D802               	call	i1u700_28
 16004  005BDC  EFF9  F02D         	goto	i1u700_29
 16005  005BE0                     i1u700_28:
 16006  005BE0  0005               	push	
 16007  005BE2  6EFA               	movwf	pclath,c
 16008  005BE4  5184               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16009  005BE6  6EFD               	movwf	tosl,c
 16010  005BE8  5185               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16011  005BEA  6EFE               	movwf	tosh,c
 16012  005BEC  6AFF               	clrf	tosu,c
 16013  005BEE  50FA               	movf	pclath,w,c
 16014  005BF0  0012               	return		;indir
 16015  005BF2                     i1u700_29:
 16016  005BF2                     i1l692:
 16017  005BF2  0012               	return		;funcret
 16018  005BF4                     __end_of_TMR4_CallBack:
 16019                           	callstack 0
 16020                           
 16021 ;; *************** function _TMR4_10msISR *****************
 16022 ;; Defined at:
 16023 ;;		line 62 in file "main.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;		None
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;		None
 16028 ;; Return value:  Size  Location     Type
 16029 ;;                  1    wreg      void 
 16030 ;; Registers used:
 16031 ;;		status,2, status,0
 16032 ;; Tracked objects:
 16033 ;;		On entry : 0/0
 16034 ;;		On exit  : 0/0
 16035 ;;		Unchanged: 0/0
 16036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;Total ram usage:        0 bytes
 16042 ;; Hardware stack levels used: 1
 16043 ;; Hardware stack levels required when called: 4
 16044 ;; This function calls:
 16045 ;;		Nothing
 16046 ;; This function is called by:
 16047 ;;		_main
 16048 ;;		_TMR4_CallBack
 16049 ;; This function uses a non-reentrant model
 16050 ;;
 16051                           
 16052                           	psect	text88
 16053  005E96                     __ptext88:
 16054                           	callstack 0
 16055  005E96                     _TMR4_10msISR:
 16056                           	callstack 13
 16057  005E96                     
 16058                           ;main.c: 63:     ++cycle10ms;
 16059  005E96  0100               	movlb	0	; () banked
 16060  005E98  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 16061  005E9A                     
 16062                           ; BSR set to: 0
 16063  005E9A  0012               	return		;funcret
 16064  005E9C                     __end_of_TMR4_10msISR:
 16065                           	callstack 0
 16066                           
 16067 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16068 ;; Defined at:
 16069 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16070 ;; Parameters:    Size  Location     Type
 16071 ;;		None
 16072 ;; Auto vars:     Size  Location     Type
 16073 ;;		None
 16074 ;; Return value:  Size  Location     Type
 16075 ;;                  1    wreg      void 
 16076 ;; Registers used:
 16077 ;;		None
 16078 ;; Tracked objects:
 16079 ;;		On entry : 0/0
 16080 ;;		On exit  : 0/0
 16081 ;;		Unchanged: 0/0
 16082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16087 ;;Total ram usage:        0 bytes
 16088 ;; Hardware stack levels used: 1
 16089 ;; Hardware stack levels required when called: 4
 16090 ;; This function calls:
 16091 ;;		Nothing
 16092 ;; This function is called by:
 16093 ;;		_TMR4_Initialize
 16094 ;;		_TMR4_CallBack
 16095 ;; This function uses a non-reentrant model
 16096 ;;
 16097                           
 16098                           	psect	text89
 16099  005EA2                     __ptext89:
 16100                           	callstack 0
 16101  005EA2                     _TMR4_DefaultInterruptHandler:
 16102                           	callstack 13
 16103  005EA2  0012               	return		;funcret
 16104  005EA4                     __end_of_TMR4_DefaultInterruptHandler:
 16105                           	callstack 0
 16106                           
 16107 ;; *************** function _Default_ISR *****************
 16108 ;; Defined at:
 16109 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16110 ;; Parameters:    Size  Location     Type
 16111 ;;		None
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;		None
 16114 ;; Return value:  Size  Location     Type
 16115 ;;                  1    wreg      void 
 16116 ;; Registers used:
 16117 ;;		None
 16118 ;; Tracked objects:
 16119 ;;		On entry : 0/0
 16120 ;;		On exit  : 0/0
 16121 ;;		Unchanged: 0/0
 16122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16127 ;;Total ram usage:        0 bytes
 16128 ;; Hardware stack levels used: 1
 16129 ;; This function calls:
 16130 ;;		Nothing
 16131 ;; This function is called by:
 16132 ;;		Interrupt level 2
 16133 ;; This function uses a non-reentrant model
 16134 ;;
 16135                           
 16136                           	psect	text90
 16137  005EA4                     __ptext90:
 16138                           	callstack 0
 16139  005EA4                     _Default_ISR:
 16140                           	callstack 15
 16141  005EA4  0011               	retfie		f
 16142  005EA6                     __end_of_Default_ISR:
 16143                           	callstack 0
 16144                           
 16145 ;; *************** function _CCP3_CaptureISR *****************
 16146 ;; Defined at:
 16147 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16148 ;; Parameters:    Size  Location     Type
 16149 ;;		None
 16150 ;; Auto vars:     Size  Location     Type
 16151 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16152 ;; Return value:  Size  Location     Type
 16153 ;;                  1    wreg      void 
 16154 ;; Registers used:
 16155 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16156 ;; Tracked objects:
 16157 ;;		On entry : 0/0
 16158 ;;		On exit  : 0/0
 16159 ;;		Unchanged: 0/0
 16160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16165 ;;Total ram usage:        2 bytes
 16166 ;; Hardware stack levels used: 1
 16167 ;; Hardware stack levels required when called: 1
 16168 ;; This function calls:
 16169 ;;		Absolute function
 16170 ;;		_CCP3_DefaultCallBack
 16171 ;; This function is called by:
 16172 ;;		Interrupt level 2
 16173 ;; This function uses a non-reentrant model
 16174 ;;
 16175                           
 16176                           	psect	text91
 16177  005A0C                     __ptext91:
 16178                           	callstack 0
 16179  005A0C                     _CCP3_CaptureISR:
 16180                           	callstack 14
 16181  005A0C                     
 16182                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16183  005A0C  0139               	movlb	57	; () banked
 16184  005A0E  93A9               	bcf	169,1,b	;volatile
 16185                           
 16186                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16187  005A10  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16188                           
 16189                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16190  005A16  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16191  005A1C                     
 16192                           ; BSR set to: 57
 16193                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16194  005A1C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16195  005A20  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16196  005A24  D802               	call	i2u711_48
 16197  005A26  EF1F  F02D         	goto	i2u711_49
 16198  005A2A                     i2u711_48:
 16199  005A2A  0005               	push	
 16200  005A2C  6EFA               	movwf	pclath,c
 16201  005A2E  0101               	movlb	1	; () banked
 16202  005A30  518E               	movf	_CCP3_CallBack& (0+255),w,b
 16203  005A32  6EFD               	movwf	tosl,c
 16204  005A34  518F               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16205  005A36  6EFE               	movwf	tosh,c
 16206  005A38  6AFF               	clrf	tosu,c
 16207  005A3A  50FA               	movf	pclath,w,c
 16208  005A3C  0012               	return		;indir
 16209  005A3E                     i2u711_49:
 16210  005A3E  0011               	retfie		f
 16211  005A40                     __end_of_CCP3_CaptureISR:
 16212                           	callstack 0
 16213                           
 16214 ;; *************** function _CCP3_DefaultCallBack *****************
 16215 ;; Defined at:
 16216 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;		None
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1    wreg      void 
 16223 ;; Registers used:
 16224 ;;		wreg, status,2, status,0
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16234 ;;Total ram usage:        2 bytes
 16235 ;; Hardware stack levels used: 1
 16236 ;; This function calls:
 16237 ;;		Nothing
 16238 ;; This function is called by:
 16239 ;;		_CCP3_Initialize
 16240 ;;		_CCP3_CaptureISR
 16241 ;; This function uses a non-reentrant model
 16242 ;;
 16243                           
 16244                           	psect	text92
 16245  005B0A                     __ptext92:
 16246                           	callstack 0
 16247  005B0A                     _CCP3_DefaultCallBack:
 16248                           	callstack 14
 16249  005B0A                     
 16250                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16251  005B0A  AECD               	btfss	205,7,c	;volatile
 16252  005B0C  EF8A  F02D         	goto	i2u696_41
 16253  005B10  EF8C  F02D         	goto	i2u696_40
 16254  005B14                     i2u696_41:
 16255  005B14  EF92  F02D         	goto	i2l7127
 16256  005B18                     i2u696_40:
 16257  005B18                     
 16258                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16259  005B18  C001  F0F5         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16260  005B1C  C002  F0F6         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16261                           
 16262                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16263  005B20  EF9C  F02D         	goto	i2l438
 16264  005B24                     i2l7127:
 16265                           
 16266                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16267  005B24  0100               	movlb	0	; () banked
 16268  005B26  51F5               	movf	_distLeftM& (0+255),w,b
 16269  005B28  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16270  005B2A  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 16271  005B2C  51F6               	movf	(_distLeftM+1)& (0+255),w,b
 16272  005B2E  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16273  005B30  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16274  005B32                     
 16275                           ; BSR set to: 0
 16276                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16277  005B32  90D8               	bcf	status,0,c
 16278  005B34  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16279  005B36  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 16280  005B38                     i2l438:
 16281  005B38  0012               	return		;funcret
 16282  005B3A                     __end_of_CCP3_DefaultCallBack:
 16283                           	callstack 0
 16284                           
 16285 ;; *************** function _CCP4_CaptureISR *****************
 16286 ;; Defined at:
 16287 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16288 ;; Parameters:    Size  Location     Type
 16289 ;;		None
 16290 ;; Auto vars:     Size  Location     Type
 16291 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16292 ;; Return value:  Size  Location     Type
 16293 ;;                  1    wreg      void 
 16294 ;; Registers used:
 16295 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16296 ;; Tracked objects:
 16297 ;;		On entry : 0/0
 16298 ;;		On exit  : 0/0
 16299 ;;		Unchanged: 0/0
 16300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16305 ;;Total ram usage:        2 bytes
 16306 ;; Hardware stack levels used: 1
 16307 ;; Hardware stack levels required when called: 1
 16308 ;; This function calls:
 16309 ;;		Absolute function
 16310 ;;		_CCP4_DefaultCallBack
 16311 ;; This function is called by:
 16312 ;;		Interrupt level 2
 16313 ;; This function uses a non-reentrant model
 16314 ;;
 16315                           
 16316                           	psect	text93
 16317  005A40                     __ptext93:
 16318                           	callstack 0
 16319  005A40                     _CCP4_CaptureISR:
 16320                           	callstack 14
 16321  005A40                     
 16322                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16323  005A40  0139               	movlb	57	; () banked
 16324  005A42  91AA               	bcf	170,0,b	;volatile
 16325                           
 16326                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16327  005A44  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16328                           
 16329                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16330  005A4A  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16331  005A50                     
 16332                           ; BSR set to: 57
 16333                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16334  005A50  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16335  005A54  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16336  005A58  D802               	call	i2u712_48
 16337  005A5A  EF39  F02D         	goto	i2u712_49
 16338  005A5E                     i2u712_48:
 16339  005A5E  0005               	push	
 16340  005A60  6EFA               	movwf	pclath,c
 16341  005A62  0101               	movlb	1	; () banked
 16342  005A64  518C               	movf	_CCP4_CallBack& (0+255),w,b
 16343  005A66  6EFD               	movwf	tosl,c
 16344  005A68  518D               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16345  005A6A  6EFE               	movwf	tosh,c
 16346  005A6C  6AFF               	clrf	tosu,c
 16347  005A6E  50FA               	movf	pclath,w,c
 16348  005A70  0012               	return		;indir
 16349  005A72                     i2u712_49:
 16350  005A72  0011               	retfie		f
 16351  005A74                     __end_of_CCP4_CaptureISR:
 16352                           	callstack 0
 16353                           
 16354 ;; *************** function _CCP4_DefaultCallBack *****************
 16355 ;; Defined at:
 16356 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16357 ;; Parameters:    Size  Location     Type
 16358 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16359 ;; Auto vars:     Size  Location     Type
 16360 ;;		None
 16361 ;; Return value:  Size  Location     Type
 16362 ;;                  1    wreg      void 
 16363 ;; Registers used:
 16364 ;;		wreg, status,2, status,0
 16365 ;; Tracked objects:
 16366 ;;		On entry : 0/0
 16367 ;;		On exit  : 0/0
 16368 ;;		Unchanged: 0/0
 16369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16374 ;;Total ram usage:        2 bytes
 16375 ;; Hardware stack levels used: 1
 16376 ;; This function calls:
 16377 ;;		Nothing
 16378 ;; This function is called by:
 16379 ;;		_CCP4_Initialize
 16380 ;;		_CCP4_CaptureISR
 16381 ;; This function uses a non-reentrant model
 16382 ;;
 16383                           
 16384                           	psect	text94
 16385  005B3A                     __ptext94:
 16386                           	callstack 0
 16387  005B3A                     _CCP4_DefaultCallBack:
 16388                           	callstack 14
 16389  005B3A                     
 16390                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16391  005B3A  ACCD               	btfss	205,6,c	;volatile
 16392  005B3C  EFA2  F02D         	goto	i2u697_41
 16393  005B40  EFA4  F02D         	goto	i2u697_40
 16394  005B44                     i2u697_41:
 16395  005B44  EFAA  F02D         	goto	i2l7135
 16396  005B48                     i2u697_40:
 16397  005B48                     
 16398                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16399  005B48  C005  F0F1         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16400  005B4C  C006  F0F2         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16401                           
 16402                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16403  005B50  EFB4  F02D         	goto	i2l476
 16404  005B54                     i2l7135:
 16405                           
 16406                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16407  005B54  0100               	movlb	0	; () banked
 16408  005B56  51F1               	movf	_distRightM& (0+255),w,b
 16409  005B58  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16410  005B5A  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16411  005B5C  51F2               	movf	(_distRightM+1)& (0+255),w,b
 16412  005B5E  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16413  005B60  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16414  005B62                     
 16415                           ; BSR set to: 0
 16416                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16417  005B62  90D8               	bcf	status,0,c
 16418  005B64  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16419  005B66  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16420  005B68                     i2l476:
 16421  005B68  0012               	return		;funcret
 16422  005B6A                     __end_of_CCP4_DefaultCallBack:
 16423                           	callstack 0
 16424                           
 16425 ;; *************** function _TMR5_GATE_ISR *****************
 16426 ;; Defined at:
 16427 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;		None
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;		None
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  1    wreg      void 
 16434 ;; Registers used:
 16435 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16445 ;;Total ram usage:        0 bytes
 16446 ;; Hardware stack levels used: 1
 16447 ;; Hardware stack levels required when called: 3
 16448 ;; This function calls:
 16449 ;;		Absolute function
 16450 ;;		_TMR5_DefaultGateInterruptHandler
 16451 ;; This function is called by:
 16452 ;;		Interrupt level 2
 16453 ;; This function uses a non-reentrant model
 16454 ;;
 16455                           
 16456                           	psect	text95
 16457  005AA8                     __ptext95:
 16458                           	callstack 0
 16459  005AA8                     _TMR5_GATE_ISR:
 16460                           	callstack 12
 16461  005AA8                     
 16462                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16463  005AA8  0139               	movlb	57	; () banked
 16464  005AAA  9FA8               	bcf	168,7,b	;volatile
 16465  005AAC                     
 16466                           ; BSR set to: 57
 16467                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16468  005AAC  0101               	movlb	1	; () banked
 16469  005AAE  5188               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16470  005AB0  1189               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16471  005AB2  B4D8               	btfsc	status,2,c
 16472  005AB4  EF5E  F02D         	goto	i2u713_41
 16473  005AB8  EF60  F02D         	goto	i2u713_40
 16474  005ABC                     i2u713_41:
 16475  005ABC  EF6C  F02D         	goto	i2l552
 16476  005AC0                     i2u713_40:
 16477  005AC0                     
 16478                           ; BSR set to: 1
 16479                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16480  005AC0  D802               	call	i2u714_48
 16481  005AC2  EF6C  F02D         	goto	i2u714_49
 16482  005AC6                     i2u714_48:
 16483  005AC6  0005               	push	
 16484  005AC8  6EFA               	movwf	pclath,c
 16485  005ACA  5188               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16486  005ACC  6EFD               	movwf	tosl,c
 16487  005ACE  5189               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16488  005AD0  6EFE               	movwf	tosh,c
 16489  005AD2  6AFF               	clrf	tosu,c
 16490  005AD4  50FA               	movf	pclath,w,c
 16491  005AD6  0012               	return		;indir
 16492  005AD8                     i2u714_49:
 16493  005AD8                     i2l552:
 16494  005AD8  0011               	retfie		f
 16495  005ADA                     __end_of_TMR5_GATE_ISR:
 16496                           	callstack 0
 16497                           
 16498 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16499 ;; Defined at:
 16500 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;		None
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      void 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;Total ram usage:        0 bytes
 16519 ;; Hardware stack levels used: 1
 16520 ;; Hardware stack levels required when called: 2
 16521 ;; This function calls:
 16522 ;;		_TMR5_ReadTimer
 16523 ;;		_TMR5_Reload
 16524 ;; This function is called by:
 16525 ;;		_TMR5_Initialize
 16526 ;;		_TMR5_GATE_ISR
 16527 ;; This function uses a non-reentrant model
 16528 ;;
 16529                           
 16530                           	psect	text96
 16531  005D5C                     __ptext96:
 16532                           	callstack 0
 16533  005D5C                     _TMR5_DefaultGateInterruptHandler:
 16534                           	callstack 12
 16535  005D5C                     
 16536                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16537  005D5C  EC8C  F02E         	call	_TMR5_ReadTimer	;wreg free
 16538  005D60  C009  F0FC         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16539  005D64  C00A  F0FD         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16540  005D68                     
 16541                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16542  005D68  0100               	movlb	0	; () banked
 16543  005D6A  90D8               	bcf	status,0,c
 16544  005D6C  33FD               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16545  005D6E  33FC               	rrcf	_distFront& (0+255),f,b	;volatile
 16546  005D70                     
 16547                           ; BSR set to: 0
 16548                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16549  005D70  EC0F  F02F         	call	_TMR5_Reload	;wreg free
 16550  005D74                     
 16551                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16552  005D74  0139               	movlb	57	; () banked
 16553  005D76  9FA8               	bcf	168,7,b	;volatile
 16554  005D78                     
 16555                           ; BSR set to: 57
 16556  005D78  0012               	return		;funcret
 16557  005D7A                     __end_of_TMR5_DefaultGateInterruptHandler:
 16558                           	callstack 0
 16559                           
 16560 ;; *************** function _TMR5_Reload *****************
 16561 ;; Defined at:
 16562 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;		None
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;		None
 16567 ;; Return value:  Size  Location     Type
 16568 ;;                  1    wreg      void 
 16569 ;; Registers used:
 16570 ;;		wreg, status,2, cstack
 16571 ;; Tracked objects:
 16572 ;;		On entry : 0/0
 16573 ;;		On exit  : 0/0
 16574 ;;		Unchanged: 0/0
 16575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;Total ram usage:        0 bytes
 16581 ;; Hardware stack levels used: 1
 16582 ;; Hardware stack levels required when called: 1
 16583 ;; This function calls:
 16584 ;;		_TMR5_WriteTimer
 16585 ;; This function is called by:
 16586 ;;		_TMR5_DefaultGateInterruptHandler
 16587 ;; This function uses a non-reentrant model
 16588 ;;
 16589                           
 16590                           	psect	text97
 16591  005E1E                     __ptext97:
 16592                           	callstack 0
 16593  005E1E                     _TMR5_Reload:
 16594                           	callstack 12
 16595  005E1E                     
 16596                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16597  005E1E  C18A  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16598  005E22  C18B  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16599  005E26  EC3C  F02E         	call	_TMR5_WriteTimer	;wreg free
 16600  005E2A  0012               	return		;funcret
 16601  005E2C                     __end_of_TMR5_Reload:
 16602                           	callstack 0
 16603                           
 16604 ;; *************** function _TMR5_WriteTimer *****************
 16605 ;; Defined at:
 16606 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16607 ;; Parameters:    Size  Location     Type
 16608 ;;  timerVal        2    8[COMRAM] unsigned short 
 16609 ;; Auto vars:     Size  Location     Type
 16610 ;;		None
 16611 ;; Return value:  Size  Location     Type
 16612 ;;                  1    wreg      void 
 16613 ;; Registers used:
 16614 ;;		wreg, status,2
 16615 ;; Tracked objects:
 16616 ;;		On entry : 0/0
 16617 ;;		On exit  : 0/0
 16618 ;;		Unchanged: 0/0
 16619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16624 ;;Total ram usage:        2 bytes
 16625 ;; Hardware stack levels used: 1
 16626 ;; This function calls:
 16627 ;;		Nothing
 16628 ;; This function is called by:
 16629 ;;		_TMR5_Reload
 16630 ;; This function uses a non-reentrant model
 16631 ;;
 16632                           
 16633                           	psect	text98
 16634  005C78                     __ptext98:
 16635                           	callstack 0
 16636  005C78                     _TMR5_WriteTimer:
 16637                           	callstack 12
 16638  005C78                     
 16639                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16640  005C78  A49A               	btfss	154,2,c	;volatile
 16641  005C7A  EF41  F02E         	goto	i2u633_41
 16642  005C7E  EF43  F02E         	goto	i2u633_40
 16643  005C82                     i2u633_41:
 16644  005C82  EF4C  F02E         	goto	i2l6577
 16645  005C86                     i2u633_40:
 16646  005C86                     
 16647                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16648  005C86  909A               	bcf	154,0,c	;volatile
 16649  005C88                     
 16650                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16651  005C88  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16652  005C8A  6E99               	movwf	153,c	;volatile
 16653  005C8C                     
 16654                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16655  005C8C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16656  005C92                     
 16657                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16658  005C92  809A               	bsf	154,0,c	;volatile
 16659                           
 16660                           ;mcc_generated_files/tmr5.c: 146:     }
 16661  005C94  EF51  F02E         	goto	i2l534
 16662  005C98                     i2l6577:
 16663                           
 16664                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16665  005C98  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16666  005C9A  6E99               	movwf	153,c	;volatile
 16667  005C9C                     
 16668                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16669  005C9C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16670  005CA2                     i2l534:
 16671  005CA2  0012               	return		;funcret
 16672  005CA4                     __end_of_TMR5_WriteTimer:
 16673                           	callstack 0
 16674                           
 16675 ;; *************** function _TMR5_ReadTimer *****************
 16676 ;; Defined at:
 16677 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;		None
 16680 ;; Auto vars:     Size  Location     Type
 16681 ;;  readVal         2   12[COMRAM] unsigned short 
 16682 ;;  readValLow      1   15[COMRAM] unsigned char 
 16683 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16684 ;; Return value:  Size  Location     Type
 16685 ;;                  2    8[COMRAM] unsigned short 
 16686 ;; Registers used:
 16687 ;;		wreg, status,2
 16688 ;; Tracked objects:
 16689 ;;		On entry : 0/0
 16690 ;;		On exit  : 0/0
 16691 ;;		Unchanged: 0/0
 16692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16694 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16696 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16697 ;;Total ram usage:        8 bytes
 16698 ;; Hardware stack levels used: 1
 16699 ;; This function calls:
 16700 ;;		Nothing
 16701 ;; This function is called by:
 16702 ;;		_TMR5_DefaultGateInterruptHandler
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           	psect	text99
 16707  005D18                     __ptext99:
 16708                           	callstack 0
 16709  005D18                     _TMR5_ReadTimer:
 16710                           	callstack 13
 16711  005D18                     
 16712                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16713  005D18  829A               	bsf	154,1,c	;volatile
 16714                           
 16715                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16716  005D1A  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16717                           
 16718                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16719  005D20  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16720  005D26                     
 16721                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16722  005D26  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16723  005D28  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16724  005D2A  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16725  005D2C  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16726  005D2E  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16727  005D32                     
 16728                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16729  005D32  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16730  005D36  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16731  005D3A  0012               	return		;funcret
 16732  005D3C                     __end_of_TMR5_ReadTimer:
 16733                           	callstack 0
 16734                           
 16735 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16736 ;; Defined at:
 16737 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16738 ;; Parameters:    Size  Location     Type
 16739 ;;		None
 16740 ;; Auto vars:     Size  Location     Type
 16741 ;;		None
 16742 ;; Return value:  Size  Location     Type
 16743 ;;                  1    wreg      void 
 16744 ;; Registers used:
 16745 ;;		wreg, status,2, status,0
 16746 ;; Tracked objects:
 16747 ;;		On entry : 0/0
 16748 ;;		On exit  : 0/0
 16749 ;;		Unchanged: 0/0
 16750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16755 ;;Total ram usage:        0 bytes
 16756 ;; Hardware stack levels used: 1
 16757 ;; This function calls:
 16758 ;;		Nothing
 16759 ;; This function is called by:
 16760 ;;		Interrupt level 2
 16761 ;; This function uses a non-reentrant model
 16762 ;;
 16763                           
 16764                           	psect	text100
 16765  005650                     __ptext100:
 16766                           	callstack 0
 16767  005650                     _SMT1_PR_ACQ_ISR:
 16768                           	callstack 15
 16769  005650                     
 16770                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16771  005650  0139               	movlb	57	; () banked
 16772  005652  9DA1               	bcf	161,6,b	;volatile
 16773  005654                     
 16774                           ; BSR set to: 57
 16775                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16776  005654  013F               	movlb	63	; () banked
 16777  005656  5115               	movf	21,w,b	;volatile
 16778  005658  6E48               	movwf	_smtPeriod^0,c	;volatile
 16779  00565A  5116               	movf	22,w,b	;volatile
 16780  00565C  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16781  00565E  5117               	movf	23,w,b	;volatile
 16782  005660  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16783  005662  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 16784  005664                     
 16785                           ; BSR set to: 63
 16786                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 16787  005664  013C               	movlb	60	; () banked
 16788  005666  AB60               	btfss	96,5,b	;volatile
 16789  005668  EF38  F02B         	goto	i2u716_41
 16790  00566C  EF3A  F02B         	goto	i2u716_40
 16791  005670                     i2u716_41:
 16792  005670  EF43  F02B         	goto	i2l7255
 16793  005674                     i2u716_40:
 16794  005674                     
 16795                           ; BSR set to: 60
 16796  005674  0E01               	movlw	1
 16797  005676  0101               	movlb	1	; () banked
 16798  005678  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16799  00567A  0E00               	movlw	0
 16800  00567C  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16801  00567E  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16802  005680  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16803  005682  EF4C  F02B         	goto	i2l856
 16804  005686                     i2l7255:
 16805                           
 16806                           ; BSR set to: 60
 16807  005686  0EFF               	movlw	255
 16808  005688  0101               	movlb	1	; () banked
 16809  00568A  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16810  00568C  0EFF               	movlw	255
 16811  00568E  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16812  005690  0EFF               	movlw	255
 16813  005692  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16814  005694  0EFF               	movlw	255
 16815  005696  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16816  005698                     i2l856:
 16817                           
 16818                           ; BSR set to: 1
 16819  005698  0011               	retfie		f
 16820  00569A                     __end_of_SMT1_PR_ACQ_ISR:
 16821                           	callstack 0
 16822                           
 16823 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 16824 ;; Defined at:
 16825 ;;		line 203 in file "mcc_generated_files/smt1.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;		None
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;		None
 16830 ;; Return value:  Size  Location     Type
 16831 ;;                  1    wreg      void 
 16832 ;; Registers used:
 16833 ;;		wreg, status,2, status,0
 16834 ;; Tracked objects:
 16835 ;;		On entry : 0/0
 16836 ;;		On exit  : 0/0
 16837 ;;		Unchanged: 0/0
 16838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16843 ;;Total ram usage:        0 bytes
 16844 ;; Hardware stack levels used: 1
 16845 ;; This function calls:
 16846 ;;		Nothing
 16847 ;; This function is called by:
 16848 ;;		Interrupt level 2
 16849 ;; This function uses a non-reentrant model
 16850 ;;
 16851                           
 16852                           	psect	text101
 16853  00551C                     __ptext101:
 16854                           	callstack 0
 16855  00551C                     _SMT1_PW_ACQ_ISR:
 16856                           	callstack 15
 16857  00551C                     
 16858                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 16859  00551C  0139               	movlb	57	; () banked
 16860  00551E  9FA1               	bcf	161,7,b	;volatile
 16861  005520                     
 16862                           ; BSR set to: 57
 16863                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 16864  005520  013F               	movlb	63	; () banked
 16865  005522  5118               	movf	24,w,b	;volatile
 16866  005524  0101               	movlb	1	; () banked
 16867  005526  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16868  005528  013F               	movlb	63	; () banked
 16869  00552A  5119               	movf	25,w,b	;volatile
 16870  00552C  0101               	movlb	1	; () banked
 16871  00552E  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16872  005530  013F               	movlb	63	; () banked
 16873  005532  511A               	movf	26,w,b	;volatile
 16874  005534  0101               	movlb	1	; () banked
 16875  005536  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16876  005538  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 16877  00553A                     
 16878                           ; BSR set to: 1
 16879                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 16880  00553A  013C               	movlb	60	; () banked
 16881  00553C  AB60               	btfss	96,5,b	;volatile
 16882  00553E  EFA3  F02A         	goto	i2u717_41
 16883  005542  EFA5  F02A         	goto	i2u717_40
 16884  005546                     i2u717_41:
 16885  005546  EFAE  F02A         	goto	i2l7265
 16886  00554A                     i2u717_40:
 16887  00554A                     
 16888                           ; BSR set to: 60
 16889  00554A  0E01               	movlw	1
 16890  00554C  0101               	movlb	1	; () banked
 16891  00554E  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16892  005550  0E00               	movlw	0
 16893  005552  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16894  005554  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16895  005556  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16896  005558  EFB7  F02A         	goto	i2l863
 16897  00555C                     i2l7265:
 16898                           
 16899                           ; BSR set to: 60
 16900  00555C  0EFF               	movlw	255
 16901  00555E  0101               	movlb	1	; () banked
 16902  005560  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16903  005562  0EFF               	movlw	255
 16904  005564  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16905  005566  0EFF               	movlw	255
 16906  005568  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16907  00556A  0EFF               	movlw	255
 16908  00556C  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16909  00556E                     i2l863:
 16910                           
 16911                           ; BSR set to: 1
 16912  00556E  0011               	retfie		f
 16913  005570                     __end_of_SMT1_PW_ACQ_ISR:
 16914                           	callstack 0
 16915                           
 16916 ;; *************** function _SMT1_Overflow_ISR *****************
 16917 ;; Defined at:
 16918 ;;		line 213 in file "mcc_generated_files/smt1.c"
 16919 ;; Parameters:    Size  Location     Type
 16920 ;;		None
 16921 ;; Auto vars:     Size  Location     Type
 16922 ;;		None
 16923 ;; Return value:  Size  Location     Type
 16924 ;;                  1    wreg      void 
 16925 ;; Registers used:
 16926 ;;		wreg, status,2
 16927 ;; Tracked objects:
 16928 ;;		On entry : 0/0
 16929 ;;		On exit  : 0/0
 16930 ;;		Unchanged: 0/0
 16931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16936 ;;Total ram usage:        0 bytes
 16937 ;; Hardware stack levels used: 1
 16938 ;; This function calls:
 16939 ;;		Nothing
 16940 ;; This function is called by:
 16941 ;;		Interrupt level 2
 16942 ;; This function uses a non-reentrant model
 16943 ;;
 16944                           
 16945                           	psect	text102
 16946  005CCC                     __ptext102:
 16947                           	callstack 0
 16948  005CCC                     _SMT1_Overflow_ISR:
 16949                           	callstack 15
 16950  005CCC                     
 16951                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 16952  005CCC  0139               	movlb	57	; () banked
 16953  005CCE  9BA1               	bcf	161,5,b	;volatile
 16954  005CD0                     
 16955                           ; BSR set to: 57
 16956                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 16957  005CD0  0E00               	movlw	0
 16958  005CD2  6E48               	movwf	_smtPeriod^0,c	;volatile
 16959  005CD4  0E00               	movlw	0
 16960  005CD6  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16961  005CD8  0E00               	movlw	0
 16962  005CDA  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16963  005CDC  0E00               	movlw	0
 16964  005CDE  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 16965                           
 16966                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 16967  005CE0  0E00               	movlw	0
 16968  005CE2  0101               	movlb	1	; () banked
 16969  005CE4  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16970  005CE6  0E00               	movlw	0
 16971  005CE8  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16972  005CEA  0E00               	movlw	0
 16973  005CEC  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16974  005CEE  0E00               	movlw	0
 16975  005CF0  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 16976  005CF2                     
 16977                           ; BSR set to: 1
 16978  005CF2  0011               	retfie		f
 16979  005CF4                     __end_of_SMT1_Overflow_ISR:
 16980                           	callstack 0
 16981                           
 16982                           ;
 16983                           ; Interrupt Vector Table @ 0x8
 16984                           ;
 16985                           
 16986                           	psect	ivt0x8
 16987  000008                     __pivt0x8:
 16988                           	callstack 0
 16989  000008                     ivt0x8_base:
 16990                           	callstack 0
 16991                           
 16992                           ; Vector 0 : SWINT
 16993  000008  17A9               	dw	_Default_ISR shr (0+2)
 16994                           
 16995                           ; Vector 1 : HLVD
 16996  00000A  17A9               	dw	_Default_ISR shr (0+2)
 16997                           
 16998                           ; Vector 2 : OSF
 16999  00000C  17A9               	dw	_Default_ISR shr (0+2)
 17000                           
 17001                           ; Vector 3 : CSW
 17002  00000E  17A9               	dw	_Default_ISR shr (0+2)
 17003                           
 17004                           ; Vector 4 : NVM
 17005  000010  17A9               	dw	_Default_ISR shr (0+2)
 17006                           
 17007                           ; Vector 5 : SCAN
 17008  000012  17A9               	dw	_Default_ISR shr (0+2)
 17009                           
 17010                           ; Vector 6 : CRC
 17011  000014  17A9               	dw	_Default_ISR shr (0+2)
 17012                           
 17013                           ; Vector 7 : IOC
 17014  000016  17A9               	dw	_Default_ISR shr (0+2)
 17015                           
 17016                           ; Vector 8 : INT0
 17017  000018  17A9               	dw	_Default_ISR shr (0+2)
 17018                           
 17019                           ; Vector 9 : ZCD
 17020  00001A  17A9               	dw	_Default_ISR shr (0+2)
 17021                           
 17022                           ; Vector 10 : AD
 17023  00001C  17A9               	dw	_Default_ISR shr (0+2)
 17024                           
 17025                           ; Vector 11 : ADT
 17026  00001E  17A9               	dw	_Default_ISR shr (0+2)
 17027                           
 17028                           ; Vector 12 : CMP1
 17029  000020  17A9               	dw	_Default_ISR shr (0+2)
 17030                           
 17031                           ; Vector 13 : SMT1
 17032  000022  1733               	dw	_SMT1_Overflow_ISR shr (0+2)
 17033                           
 17034                           ; Vector 14 : SMT1PRA
 17035  000024  1594               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17036                           
 17037                           ; Vector 15 : SMT1PRW
 17038  000026  1547               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17039                           
 17040                           ; Vector 16 : DMA1SCNT
 17041  000028  17A9               	dw	_Default_ISR shr (0+2)
 17042                           
 17043                           ; Vector 17 : DMA1DCNT
 17044  00002A  17A9               	dw	_Default_ISR shr (0+2)
 17045                           
 17046                           ; Vector 18 : DMA1OR
 17047  00002C  17A9               	dw	_Default_ISR shr (0+2)
 17048                           
 17049                           ; Vector 19 : DMA1A
 17050  00002E  17A9               	dw	_Default_ISR shr (0+2)
 17051                           
 17052                           ; Vector 20 : SPI1RX
 17053  000030  17A9               	dw	_Default_ISR shr (0+2)
 17054                           
 17055                           ; Vector 21 : SPI1TX
 17056  000032  17A9               	dw	_Default_ISR shr (0+2)
 17057                           
 17058                           ; Vector 22 : SPI1
 17059  000034  17A9               	dw	_Default_ISR shr (0+2)
 17060                           
 17061                           ; Vector 23 : I2C1RX
 17062  000036  17A9               	dw	_Default_ISR shr (0+2)
 17063                           
 17064                           ; Vector 24 : I2C1TX
 17065  000038  17A9               	dw	_Default_ISR shr (0+2)
 17066                           
 17067                           ; Vector 25 : I2C1
 17068  00003A  17A9               	dw	_Default_ISR shr (0+2)
 17069                           
 17070                           ; Vector 26 : I2C1E
 17071  00003C  17A9               	dw	_Default_ISR shr (0+2)
 17072                           
 17073                           ; Vector 27 : U1RX
 17074  00003E  1608               	dw	_UART1_rx_vect_isr shr (0+2)
 17075                           
 17076                           ; Vector 28 : U1TX
 17077  000040  15F9               	dw	_UART1_tx_vect_isr shr (0+2)
 17078                           
 17079                           ; Vector 29 : U1E
 17080  000042  17A9               	dw	_Default_ISR shr (0+2)
 17081                           
 17082                           ; Vector 30 : U1
 17083  000044  17A9               	dw	_Default_ISR shr (0+2)
 17084                           
 17085                           ; Vector 31 : TMR0
 17086  000046  17A9               	dw	_Default_ISR shr (0+2)
 17087                           
 17088                           ; Vector 32 : TMR1
 17089  000048  17A9               	dw	_Default_ISR shr (0+2)
 17090                           
 17091                           ; Vector 33 : TMR1G
 17092  00004A  17A9               	dw	_Default_ISR shr (0+2)
 17093                           
 17094                           ; Vector 34 : TMR2
 17095  00004C  17A9               	dw	_Default_ISR shr (0+2)
 17096                           
 17097                           ; Vector 35 : CCP1
 17098  00004E  17A9               	dw	_Default_ISR shr (0+2)
 17099                           
 17100                           ; Vector 36 : Undefined
 17101  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17102                           
 17103                           ; Vector 37 : NCO1
 17104  000052  17A9               	dw	_Default_ISR shr (0+2)
 17105                           
 17106                           ; Vector 38 : CWG1
 17107  000054  17A9               	dw	_Default_ISR shr (0+2)
 17108                           
 17109                           ; Vector 39 : CLC1
 17110  000056  17A9               	dw	_Default_ISR shr (0+2)
 17111                           
 17112                           ; Vector 40 : INT1
 17113  000058  17A9               	dw	_Default_ISR shr (0+2)
 17114                           
 17115                           ; Vector 41 : CMP2
 17116  00005A  17A9               	dw	_Default_ISR shr (0+2)
 17117                           
 17118                           ; Vector 42 : DMA2SCNT
 17119  00005C  17A9               	dw	_Default_ISR shr (0+2)
 17120                           
 17121                           ; Vector 43 : DMA2DCNT
 17122  00005E  17A9               	dw	_Default_ISR shr (0+2)
 17123                           
 17124                           ; Vector 44 : DMA2OR
 17125  000060  17A9               	dw	_Default_ISR shr (0+2)
 17126                           
 17127                           ; Vector 45 : DMA2A
 17128  000062  17A9               	dw	_Default_ISR shr (0+2)
 17129                           
 17130                           ; Vector 46 : I2C2RX
 17131  000064  17A9               	dw	_Default_ISR shr (0+2)
 17132                           
 17133                           ; Vector 47 : I2C2TX
 17134  000066  17A9               	dw	_Default_ISR shr (0+2)
 17135                           
 17136                           ; Vector 48 : I2C2
 17137  000068  17A9               	dw	_Default_ISR shr (0+2)
 17138                           
 17139                           ; Vector 49 : I2C2E
 17140  00006A  17A9               	dw	_Default_ISR shr (0+2)
 17141                           
 17142                           ; Vector 50 : U2RX
 17143  00006C  17A9               	dw	_Default_ISR shr (0+2)
 17144                           
 17145                           ; Vector 51 : U2TX
 17146  00006E  17A9               	dw	_Default_ISR shr (0+2)
 17147                           
 17148                           ; Vector 52 : U2E
 17149  000070  17A9               	dw	_Default_ISR shr (0+2)
 17150                           
 17151                           ; Vector 53 : U2
 17152  000072  17A9               	dw	_Default_ISR shr (0+2)
 17153                           
 17154                           ; Vector 54 : TMR3
 17155  000074  17A9               	dw	_Default_ISR shr (0+2)
 17156                           
 17157                           ; Vector 55 : TMR3G
 17158  000076  17A9               	dw	_Default_ISR shr (0+2)
 17159                           
 17160                           ; Vector 56 : TMR4
 17161  000078  1641               	dw	_TMR4_ISR shr (0+2)
 17162                           
 17163                           ; Vector 57 : CCP2
 17164  00007A  17A9               	dw	_Default_ISR shr (0+2)
 17165                           
 17166                           ; Vector 58 : Undefined
 17167  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17168                           
 17169                           ; Vector 59 : CWG2
 17170  00007E  17A9               	dw	_Default_ISR shr (0+2)
 17171                           
 17172                           ; Vector 60 : CLC2
 17173  000080  17A9               	dw	_Default_ISR shr (0+2)
 17174                           
 17175                           ; Vector 61 : INT2
 17176  000082  17A9               	dw	_Default_ISR shr (0+2)
 17177                           
 17178                           ; Vector 62 : Undefined
 17179  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17180                           
 17181                           ; Vector 63 : Undefined
 17182  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17183                           
 17184                           ; Vector 64 : Undefined
 17185  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17186                           
 17187                           ; Vector 65 : Undefined
 17188  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17189                           
 17190                           ; Vector 66 : Undefined
 17191  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17192                           
 17193                           ; Vector 67 : Undefined
 17194  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17195                           
 17196                           ; Vector 68 : Undefined
 17197  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17198                           
 17199                           ; Vector 69 : Undefined
 17200  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17201                           
 17202                           ; Vector 70 : TMR5
 17203  000094  17A9               	dw	_Default_ISR shr (0+2)
 17204                           
 17205                           ; Vector 71 : TMR5G
 17206  000096  16AA               	dw	_TMR5_GATE_ISR shr (0+2)
 17207                           
 17208                           ; Vector 72 : TMR6
 17209  000098  17A9               	dw	_Default_ISR shr (0+2)
 17210                           
 17211                           ; Vector 73 : CCP3
 17212  00009A  1683               	dw	_CCP3_CaptureISR shr (0+2)
 17213                           
 17214                           ; Vector 74 : CWG3
 17215  00009C  17A9               	dw	_Default_ISR shr (0+2)
 17216                           
 17217                           ; Vector 75 : CLC3
 17218  00009E  17A9               	dw	_Default_ISR shr (0+2)
 17219                           
 17220                           ; Vector 76 : Undefined
 17221  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17222                           
 17223                           ; Vector 77 : Undefined
 17224  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17225                           
 17226                           ; Vector 78 : Undefined
 17227  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17228                           
 17229                           ; Vector 79 : Undefined
 17230  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17231                           
 17232                           ; Vector 80 : CCP4
 17233  0000A8  1690               	dw	_CCP4_CaptureISR shr (0+2)
 17234                           
 17235                           ; Vector 81 : CLC4
 17236  0000AA  17A9               	dw	_Default_ISR shr (0+2)
 17237  0000AC                     ivt0x8_undefint:
 17238                           	callstack 0
 17239  0000AC  00FF               	reset	
 17240                           
 17241                           	psect	text103
 17242  000000                     __ptext103:
 17243                           	callstack 0
 17244  000000                     
 17245                           	psect	rparam
 17246  0000                     
 17247                           	psect	idloc
 17248                           
 17249                           ;Config register IDLOC0 @ 0x200000
 17250                           ;	unspecified, using default values
 17251  200000                     	org	2097152
 17252  200000  0FFF               	dw	4095
 17253                           
 17254                           ;Config register IDLOC1 @ 0x200002
 17255                           ;	unspecified, using default values
 17256  200002                     	org	2097154
 17257  200002  0FFF               	dw	4095
 17258                           
 17259                           ;Config register IDLOC2 @ 0x200004
 17260                           ;	unspecified, using default values
 17261  200004                     	org	2097156
 17262  200004  0FFF               	dw	4095
 17263                           
 17264                           ;Config register IDLOC3 @ 0x200006
 17265                           ;	unspecified, using default values
 17266  200006                     	org	2097158
 17267  200006  0FFF               	dw	4095
 17268                           
 17269                           ;Config register IDLOC4 @ 0x200008
 17270                           ;	unspecified, using default values
 17271  200008                     	org	2097160
 17272  200008  0FFF               	dw	4095
 17273                           
 17274                           ;Config register IDLOC5 @ 0x20000A
 17275                           ;	unspecified, using default values
 17276  20000A                     	org	2097162
 17277  20000A  0FFF               	dw	4095
 17278                           
 17279                           ;Config register IDLOC6 @ 0x20000C
 17280                           ;	unspecified, using default values
 17281  20000C                     	org	2097164
 17282  20000C  0FFF               	dw	4095
 17283                           
 17284                           ;Config register IDLOC7 @ 0x20000E
 17285                           ;	unspecified, using default values
 17286  20000E                     	org	2097166
 17287  20000E  0FFF               	dw	4095
 17288                           
 17289                           	psect	config
 17290                           
 17291                           ;Config register CONFIG1L @ 0x300000
 17292                           ;	External Oscillator Selection
 17293                           ;	FEXTOSC = OFF, Oscillator not enabled
 17294                           ;	Reset Oscillator Selection
 17295                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17296  300000                     	org	3145728
 17297  300000  8C                 	db	140
 17298                           
 17299                           ;Config register CONFIG1H @ 0x300001
 17300                           ;	Clock out Enable bit
 17301                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17302                           ;	PRLOCKED One-Way Set Enable bit
 17303                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17304                           ;	Clock Switch Enable bit
 17305                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17306                           ;	Fail-Safe Clock Monitor Enable bit
 17307                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17308  300001                     	org	3145729
 17309  300001  FF                 	db	255
 17310                           
 17311                           ;Config register CONFIG2L @ 0x300002
 17312                           ;	MCLR Enable bit
 17313                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17314                           ;	Power-up timer selection bits
 17315                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17316                           ;	Multi-vector enable bit
 17317                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17318                           ;	IVTLOCK bit One-way set enable bit
 17319                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17320                           ;	Low Power BOR Enable bit
 17321                           ;	LPBOREN = OFF, ULPBOR disabled
 17322                           ;	Brown-out Reset Enable bits
 17323                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17324  300002                     	org	3145730
 17325  300002  FF                 	db	255
 17326                           
 17327                           ;Config register CONFIG2H @ 0x300003
 17328                           ;	Brown-out Reset Voltage Selection bits
 17329                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17330                           ;	ZCD Disable bit
 17331                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17332                           ;	PPSLOCK bit One-Way Set Enable bit
 17333                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17334                           ;	Stack Full/Underflow Reset Enable bit
 17335                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17336                           ;	Debugger Enable bit
 17337                           ;	DEBUG = OFF, Background debugger disabled
 17338                           ;	Extended Instruction Set Enable bit
 17339                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17340  300003                     	org	3145731
 17341  300003  FF                 	db	255
 17342                           
 17343                           ;Config register CONFIG3L @ 0x300004
 17344                           ;	WDT Period selection bits
 17345                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17346                           ;	WDT operating mode
 17347                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17348  300004                     	org	3145732
 17349  300004  9F                 	db	159
 17350                           
 17351                           ;Config register CONFIG3H @ 0x300005
 17352                           ;	WDT Window Select bits
 17353                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17354                           ;	WDT input clock selector
 17355                           ;	WDTCCS = SC, Software Control
 17356  300005                     	org	3145733
 17357  300005  FF                 	db	255
 17358                           
 17359                           ;Config register CONFIG4L @ 0x300006
 17360                           ;	Boot Block Size selection bits
 17361                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17362                           ;	Boot Block enable bit
 17363                           ;	BBEN = OFF, Boot block disabled
 17364                           ;	Storage Area Flash enable bit
 17365                           ;	SAFEN = OFF, SAF disabled
 17366                           ;	Application Block write protection bit
 17367                           ;	WRTAPP = OFF, Application Block not write protected
 17368  300006                     	org	3145734
 17369  300006  FF                 	db	255
 17370                           
 17371                           ;Config register CONFIG4H @ 0x300007
 17372                           ;	Configuration Register Write Protection bit
 17373                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17374                           ;	Boot Block Write Protection bit
 17375                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17376                           ;	Data EEPROM Write Protection bit
 17377                           ;	WRTD = OFF, Data EEPROM not write-protected
 17378                           ;	SAF Write protection bit
 17379                           ;	WRTSAF = OFF, SAF not Write Protected
 17380                           ;	Low Voltage Programming Enable bit
 17381                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17382  300007                     	org	3145735
 17383  300007  FF                 	db	255
 17384                           
 17385                           ;Config register CONFIG5L @ 0x300008
 17386                           ;	PFM and Data EEPROM Code Protection bit
 17387                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17388  300008                     	org	3145736
 17389  300008  FF                 	db	255
 17390                           
 17391                           ;Config register CONFIG5H @ 0x300009
 17392                           ;	unspecified, using default values
 17393  300009                     	org	3145737
 17394  300009  FF                 	db	255
 17395                           tosu	equ	0x3FFF
 17396                           tosh	equ	0x3FFE
 17397                           tosl	equ	0x3FFD
 17398                           stkptr	equ	0x3FFC
 17399                           pclatu	equ	0x3FFB
 17400                           pclath	equ	0x3FFA
 17401                           pcl	equ	0x3FF9
 17402                           tblptru	equ	0x3FF8
 17403                           tblptrh	equ	0x3FF7
 17404                           tblptrl	equ	0x3FF6
 17405                           tablat	equ	0x3FF5
 17406                           prodh	equ	0x3FF4
 17407                           prodl	equ	0x3FF3
 17408                           indf0	equ	0x3FEF
 17409                           postinc0	equ	0x3FEE
 17410                           postdec0	equ	0x3FED
 17411                           preinc0	equ	0x3FEC
 17412                           plusw0	equ	0x3FEB
 17413                           fsr0h	equ	0x3FEA
 17414                           fsr0l	equ	0x3FE9
 17415                           wreg	equ	0x3FE8
 17416                           indf1	equ	0x3FE7
 17417                           postinc1	equ	0x3FE6
 17418                           postdec1	equ	0x3FE5
 17419                           preinc1	equ	0x3FE4
 17420                           plusw1	equ	0x3FE3
 17421                           fsr1h	equ	0x3FE2
 17422                           fsr1l	equ	0x3FE1
 17423                           bsr	equ	0x3FE0
 17424                           indf2	equ	0x3FDF
 17425                           postinc2	equ	0x3FDE
 17426                           postdec2	equ	0x3FDD
 17427                           preinc2	equ	0x3FDC
 17428                           plusw2	equ	0x3FDB
 17429                           fsr2h	equ	0x3FDA
 17430                           fsr2l	equ	0x3FD9
 17431                           status	equ	0x3FD8

Data Sizes:
    Strings     113
    Constant    0
    Data        3
    BSS         175
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3433_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[16]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[16]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[16]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _startAccell->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _setSteering->___awdiv
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _calcSteering->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    ___flsub->___fladd
    _checkBatt->___flge
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _startAccell->_printf
    _getCurve->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  207813
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  206666
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   70309
                                             14 BANK1      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0   11959
                                             35 BANK0      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   45105
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   44944
                                              6 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   44215
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43709
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32330
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             44 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2723
                                             19 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0    6892
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    4328
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1526
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9960
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    9389
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1216
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     877
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4313
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1165
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
     _getReverse
     _printf
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B0       7       68.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19B      32        0.0%
DATA                 0      0     19B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 14:58:37 2024

                             _CCP4_Initialize 5B6A                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 002C                                  ___fldiv@bexp 002B  
                                 _startAccell 3FA0                                  ___fldiv@sign 0024  
                                          l72 5E0C                                            l75 5D16  
                                          l69 5604                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 54BC                                           l404 55BA  
                                         l308 5474                                           l309 548E  
                                         l318 5E34                                           l520 564E  
                                         l441 5BC4                                           l362 5E52  
                                         l371 5E3E                                           l188 4CC0  
                                         l284 5104                                           l365 5E66  
                                         l359 5E5C                                           l368 5E48  
                                         l712 5A0A                                           l449 5E8E  
                                         l482 5B96                                           l723 5DAC  
                                         l555 5E70                                           l644 5C1E  
                                         l740 59A2                                           l709 5DC4  
                                         l581 5900                                           l726 59D6  
                                         l479 5E84                                           l751 5DDC  
                                         l737 5DF4                                           l754 596E  
                                         l923 5D94                                           l695 5E7A  
                                         l795 5B08                                           l893 5C4A  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 576A  
                                         _pad 4D86                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0019                               _TMR2_Initialize 5D7A  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 5E7C  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0066  
                          _UART1_Transmit_ISR 5726                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                     __end_of_CCP4_CaptureISR 5A74                                  ___fltol@exp1 0082  
                                        l1042 5518                                          ?_abs 0026  
                                        l2020 29E6                                          l2013 27CC  
                                        l2030 2B16                                          l2022 2A5E  
                                        l1054 5A84                                          l2023 2A4C  
                                        l1312 480A                                          l1320 34EA  
                                        l1240 4502                                          l1224 43EA  
                                        l2017 2B54                                          l1057 5AA4  
                                        l2121 4E46                                          l1313 481C  
                                        l2211 18D0                                          l1252 5E1C  
                                        l2116 4DCA                                          l1340 369E  
                                        l2061 3BAE                                          l1325 357C  
                                        l2054 3B16                                          l2119 4E0C  
                                        l2127 2F90                                          l4001 559C  
                                        l2057 3C72                                          l1249 522E  
                                        l1361 3ABE                                          l1257 52C0  
                                        l1513 3F9E                                          l2313 519A  
                                        l2321 5724                                          l2129 2F98  
                                        l1370 43CC                                          l4011 55B0  
                                        l4003 55A6                                          l2147 31D4  
                             _timer3ReloadVal 0186                                          l2068 3C0A  
                                        l4013 55B2                                          l4005 55AA  
                                        l4021 5CF4                                          l2333 57E2  
                                        l2165 1D20                                          l2077 5CCA  
                                        l1277 345E                                          l1269 411C  
                                        l1630 4D84                                          l1526 4280  
                                        l4015 55B4                                          l4007 55AC  
                                        l4031 4C70                                          l4023 4BF8  
                                        l1383 3C80                                          l2327 539A  
                                        l2183 1492                                          l2263 5328  
                                        l2352 5460                                          l2264 5330  
                                        l4105 5C20                                          l4017 55B6  
                                        l4009 55AE                                          l4041 4C7E  
                                        l4033 4C72                                          l4025 4C18  
                                        l1385 3CA4                                          l2337 4B14  
                                        l2257 213C                                          l2249 2242  
                                        l1386 3CB8                                          l2282 57A8  
                                        l2274 4A20                                          l1298 346E  
                                        l4019 55B8                                          l4043 4C80  
                                        l4035 4C74                                          l4027 4C1A  
                                        l4115 5DDE                                          l4131 5DAE  
                                        l1379 4BF6                                          l1387 3CE0  
                                        l1643 4FB6                                          l2291 37F8  
                                        l2347 5458                                          l1396 3E16  
                                        l4045 4C82                                          l4037 4C76  
                                        l4029 4C22                                          l1478 460E  
                                        l4047 5DF6                                          l4039 4C7C  
                                        l4071 5ADA                                          l2279 57A0  
                                        l1664 48DC                                          l2288 38B4  
                                        l4081 5B02                                          l4073 5AF8  
                                        l1673 58C8                                          l1658 5060  
                                        l2298 5890                                          l4059 54BE  
                                        l4083 5B04                                          l4075 5AFA  
                                        l4091 5D8C                                          l4093 5DC6  
                                        l4085 5D96                                          l4077 5AFC  
                                        l1669 4922                                          l4079 5B00  
                                        l4087 5D7A                                          l1927 2434  
                                        l1696 4716                                          l1944 254E  
                                        l1936 2704                                          l1928 2422  
                                        l4089 5D86                                          l1953 261E  
                                        l1929 23E8                                          l1954 260C  
                                        l1981 2EEE                                          ?_pad 0026  
                                        l1983 2D4E                                          l1992 2D94  
                                        l8001 2B44                                          l1969 56E0  
                                        l1994 2E0C                                          l1986 2D12  
                                        l7051 55D0                                          l8011 4CC2  
                                        l1995 2DFA                                          l7061 55EC  
                                        l7053 55D8                                          l8021 4CEE  
                                        l8013 4CC6                                          l8101 5058  
                                        l8005 569A                                          l7063 55F0  
                                        l7055 55DC                                          l7047 55BC  
                                        l8031 4D1C                                          l8023 4CF6  
                                        l8015 4CD4                                          l8111 485E  
                                        l8103 505E                                          l8007 56AC  
                                        l7065 55F8                                          l7057 55E0  
                                        l7049 55CC                                          l8041 4D56  
                                        l8033 4D24                                          l8025 4CFA  
                                        l8017 4CDC                                          l8121 48CA  
                                        l8113 488C                                          l7401 5464  
                                        l9001 32B6                                          l7067 55FC  
                                        l7059 55E4                                          l8051 4D7C  
                                        l8043 4D58                                          l8035 4D32  
                                        l8027 4D02                                          l8019 4CE0  
                                        l6451 452A                                          l6443 4504  
                                        l8123 491A                                          l8115 489C  
                                        l8107 481E                                          l8203 576A  
                                        l7411 54B4                                          l7403 5484  
                                        l8131 58A8                                          l8211 4982  
                                        l9011 32FC                                          l9003 32C6  
                                        l6701 5B7A                                          l6541 5E40  
                                        l8045 4D5E                                          l8037 4D38  
                                        l8029 4D14                                          l6461 4572  
                                        l6453 4538                                          l6445 4508  
                                        l7501 2372                                          l9101 3A6C  
                                        l8125 4920                                          l8117 48AA  
                                        l8109 484E                                          l6605 5E0E  
                                        l8205 5784                                          l7413 54B8  
                                        l7405 5490                                          l7421 5118  
                                        l8301 3068                                          l8061 4F22  
                                        l8133 58B8                                          l8221 49D4  
                                        l8213 49AA                                          l9021 3362  
                                        l9013 330E                                          l9005 32D8  
                                        l6703 5B86                                          l3991 5570  
                                        l6711 58DE                                          l6543 5E36  
                                        l8039 4D4E                                          l8047 4D64  
                                        l8151 467C                                          l8143 463C  
                                        l6471 45BC                                          l6463 457A  
                                        l6455 4548                                          l6447 4516  
                                        l7503 2376                                          l7511 2386  
                                        l9103 3A8A                                          l8119 48BC  
                                        l6391 5A76                                          l7407 54A2  
                                        l7415 54BA                                          l7423 512A  
                                        l8311 3126                                          l8303 306E  
                                        l8071 4F56                                          l8063 4F26  
                                        l8055 4F08                                          l8215 49B6  
                                        l8207 4924                                          l8231 5342  
                                        l9031 33B2                                          l9023 3376  
                                        l9015 3324                                          l9007 32E4  
                                        l6561 5E86                                          l6705 5B90  
                                        l3993 5572                                          l6713 58E2  
                                        l6721 561E                                          l6545 5E54  
                                        l8049 4D74                                          l8161 46AC  
                                        l8153 468A                                          l8145 4666  
                                        l8137 4610                                          l6481 45EE  
                                        l6473 45CC                                          l6465 4586  
                                        l6457 454C                                          l6449 4526  
                                        l9121 42B0                                          l7521 23F6  
                                        l7513 238A                                          l7505 237A  
                                        l7441 2272                                          l7433 2244  
                                        l9105 3A92                                          l6393 5A7C  
                                        l7409 54A4                                          l7417 5E2E  
                                        l7425 5134                                          l8321 3174  
                                        l8313 3140                                          l8305 30D2  
                                        l8081 4F90                                          l8073 4F5E  
                                        l8065 4F34                                          l8057 4F0C  
                                        l8129 5892                                          l8225 4A18  
                                        l8209 4944                                          l8233 5402  
                                        l8401 12F0                                          l9041 33E0  
                                        l9033 33BC                                          l9025 3388  
                                        l9017 3336                                          l9009 32EA  
                                        l6563 5E7C                                          l6707 5B94  
                                        l3995 557A                                          l6715 58FC  
                                        l6723 5638                                          l6547 5E4A  
                                        l6731 5062                                          l8171 46D6  
                                        l8163 46B6                                          l8147 4668  
                                        l8139 4628                                          l6483 45FE  
                                        l6475 45CE                                          l6467 4594  
                                        l6459 455C                                          l9131 435C  
                                        l9123 42B0                                          l9115 4282  
                                        l7603 262E                                          l7611 2684  
                                        l7531 2420                                          l7523 2402  
                                        l7515 23B4                                          l7507 237E  
                                        l7451 22AC                                          l7443 2282  
                                        l7435 2252                                          l9107 3AAE  
                                        l6395 5A80                                          l7427 5152  
                                        l7419 5106                                          l8323 3186  
                                        l8307 30EE                                          l8315 314E  
                                        l8075 4F6C                                          l8083 4F96  
                                        l8067 4F3C                                          l8059 4F1A  
                                        l8091 4FB8                                          l8219 49C2  
                                        l8251 373A                                          l8243 36A0  
                                        l8411 13BC                                          l9035 33C2  
                                        l9027 3396                                          l9019 334C  
                                        l3997 5584                                          l6709 58CA  
                                        l6581 5E72                                          l6565 5E68  
                                        l6725 563C                                          l6717 5606  
                                        l6549 5E5E                                          l6741 508C  
                                        l6733 5066                                          l8173 46E6  
                                        l8149 4678                                          l6477 45D8  
                                        l6469 459E                                          l9141 43B0  
                                        l9133 4360                                          l9125 432C  
                                        l9117 428E                                          l7621 26D6  
                                        l7613 2694                                          l7605 263A  
                                        l7541 2476                                          l7533 2442  
                                        l7525 2406                                          l7517 23D0  
                                        l7509 2382                                          l7461 22DA  
                                        l7453 22B2                                          l7445 2292  
                                        l7437 2260                                          l9109 3AB6  
                                        l9061 38B6                                          l6397 5A82  
                                        l7701 411E                                          l7429 5188  
                                        l8181 4D86                                          l8325 3192  
                                        l8317 3160                                          l8309 310C  
                                        l8085 4FA6                                          l8077 4F82  
                                        l8069 4F4E                                          l8093 4FE6  
                                        l8261 3858                                          l8245 36C0  
                                        l8229 5332                                          l8237 5438  
                                        l8501 184E                                          l8421 1440  
                                        l8413 13F0                                          l8405 1326  
                                        l8341 10A4                                          l8333 1074  
                                        l9037 33C6                                          l9029 33A4  
                                        l3999 559A                                          l6727 563E  
                                        l6719 561A                                          l6751 50A0  
                                        l6743 5090                                          l6735 5072  
                                        l8175 46F6                                          l8159 46A2  
                                        l6479 45DE                                          l6671 51CA  
                                        l9143 43B8                                          l9135 436C  
                                        l9127 4340                                          l9119 429C  
                                        l7631 26F4                                          l7623 26DC  
                                        l7615 26A4                                          l7607 2648  
                                        l7551 24B0                                          l7543 2484  
                                        l7535 2452                                          l7527 2414  
                                        l7519 23E0                                          l7471 230E  
                                        l7463 22DC                                          l7455 22C4  
                                        l7447 2294                                          l7439 2262  
                                        l9071 3902                                          l9063 38C4  
                                        l6399 5A92                                          l7711 4162  
                                        l7703 4122                                          l8191 4DD6  
                                        l8183 4D94                                          l8327 319A  
                                        l8319 316E                                          l8271 2EF0  
                                        l8087 4FAE                                          l8079 4F8A  
                                        l8095 4FF6                                          l8263 386C  
                                        l8255 37AC                                          l8247 3718  
                                        l8239 544A                                          l8511 18BC  
                                        l8503 1882                                          l8423 1452  
                                        l8431 149E                                          l8415 13F8  
                                        l8407 135A                                          l8351 10FA  
                                        l8343 10C8                                          l8335 107E  
                                        l9047 3402                                          l9039 33CE  
                                        l9055 3420                                          l9151 440A  
                                        l6681 5BA8                                          l6729 564A  
                                        l6761 50B4                                          l6753 50A4  
                                        l6745 5094                                          l6737 5082  
                                        l8177 4706                                          l8169 46CA  
                                        l6673 51FA                                          l6665 519C  
                                        l9145 43C4                                          l9137 4388  
                                        l9129 4348                                          l7625 26DE  
                                        l7617 26C4                                          l7609 2682  
                                        l7561 251C                                          l7553 24B2  
                                        l7545 2492                                          l7529 2416  
                                        l7481 234A                                          l7465 22EC  
                                        l7473 2316                                          l7457 22C6  
                                        l7449 229C                                          l9081 3952  
                                        l9073 3918                                          l9065 38DA  
                                        l7721 41CA                                          l7713 4182  
                                        l7705 4130                                          l7641 5704  
                                        l8193 4DEA                                          l8185 4DA8  
                                        l8329 31AC                                          l8281 2F6A  
                                        l8273 2F10                                          l7801 2CC6  
                                        l8097 5024                                          l8265 3894  
                                        l8257 37E8                                          l8249 372C  
                                        l8601 1BF2                                          l8521 1972  
                                        l8513 18C8                                          l8505 1896  
                                        l8441 14DE                                          l8425 1464  
                                        l8409 1360                                          l8417 142C  
                                        l8361 1128                                          l8353 110C  
                                        l8345 10D2                                          l8337 108E  
                                        l9049 3414                                          l9321 354E  
                                        l9161 4464                                          l9153 440E  
                                        l6683 5BB4                                          l6691 5C08  
                                        l6771 50D8                                          l6763 50B8  
                                        l6755 50A8                                          l6747 5098  
                                        l6739 5088                                          l6675 5226  
                                        l6667 51A4                                          l9139 4394  
                                        l7627 26E4                                          l7619 26C8  
                                        l7571 2574                                          l7563 251E  
                                        l7555 24BC                                          l7547 249E  
                                        l7539 2466                                          l7491 235E  
                                        l7483 234E                                          l7475 2326  
                                        l7467 22FC                                          l7459 22CC  
                                        l9083 3956                                          l9075 3924  
                                        l9067 38DE                                          l7731 4240  
                                        l7723 41F8                                          l7715 41A0  
                                        l7707 4150                                          l7635 56E2  
                                        l7643 57AA                                          l8195 4DEE  
                                        l8187 4DB6                                          l8291 2FC6  
                                        l8283 2F84                                          l8275 2F3A  
                                        l7811 2D10                                          l7803 2CD6  
                                        l8099 5034                                          l8267 38A4  
                                        l8259 381C                                          l8611 1C3C  
                                        l8603 1BF8                                          l8531 19BC  
                                        l8523 1984                                          l8515 18EC  
                                        l8507 189A                                          l8451 153A  
                                        l8443 1514                                          l8427 146C  
                                        l8419 143C                                          l8371 119C  
                                        l8355 1118                                          l8363 112E  
                                        l8347 10DA                                          l8339 109C  
                                        l6931 474C                                          l9323 3660  
                                        l9171 448E                                          l9163 4468  
                                        l9155 4412                                          l9147 43CE  
                                        l6685 5BBE                                          l6693 5C0C  
                                        l6773 5100                                          l6765 50BC  
                                        l6757 50AC                                          l6749 509C  
                                        l7901 2796                                          l6669 51BA  
                                        l7629 26F2                                          l7581 25A2  
                                        l7565 252E                                          l7549 24A2  
                                        l7557 24C2                                          l7493 2362  
                                        l7485 2352                                          l7477 2338  
                                        l7469 230C                                          l9093 3A16  
                                        l9085 396C                                          l9069 38FA  
                                        l9077 3930                                          l7661 3E2A  
                                        l7733 4260                                          l7725 4218  
                                        l7717 41A8                                          l7709 4154  
                                        l7637 56EE                                          l7645 57B6  
                                        l8197 4E1A                                          l8189 4DC2  
                                        l8293 2FCE                                          l8285 2FA0  
                                        l8277 2F5A                                          l7821 2D5E  
                                        l7813 2D1C                                          l7805 2CDE  
                                        l7741 2B70                                          l7653 585A  
                                        l8621 1C6E                                          l8613 1C48  
                                        l8605 1C0A                                          l8541 19F2  
                                        l8533 19CC                                          l8525 1992  
                                        l8517 1950                                          l8509 18AA  
                                        l8461 157E                                          l8453 154C  
                                        l8445 151C                                          l8437 14B0  
                                        l8429 1486                                          l8373 11B8  
                                        l8365 1154                                          l8381 1202  
                                        l8357 1120                                          l8349 10EC  
                                        l8701 1FBC                                          l9325 3438  
                                        l6941 4798                                          l6933 475E  
                                        l6925 4718                                          l9181 44D8  
                                        l9173 4492                                          l9165 4470  
                                        l9157 445A                                          l9149 43F8  
                                        l6687 5BC2                                          l6679 5B98  
                                        l6695 5C0E                                          l6767 50C0  
                                        l6759 50B0                                          l7911 27EC  
                                        l7903 27A6                                          l7583 25B0  
                                        l7575 2588                                          l7591 25CE  
                                        l7559 24E8                                          l7567 253E  
                                        l7495 2366                                          l7487 2356  
                                        l7479 2346                                          l9087 39FE  
                                        l9079 393C                                          l9327 3D30  
                                        l7671 3E80                                          l7663 3E4A  
                                        l7727 422A                                          l7719 41BC  
                                        l7399 5464                                          l7639 5700  
                                        l7647 57BA                                          l8199 4E2E  
                                        l8295 2FD8                                          l8287 2FB2  
                                        l8279 2F68                                          l7823 2D74  
                                        l7831 2DA4                                          l7815 2D3A  
                                        l7807 2CEE                                          l7751 2BA4  
                                        l7743 2B72                                          l8631 1CC8  
                                        l8615 1C50                                          l8607 1C24  
                                        l8551 1A26                                          l8543 19F6  
                                        l8535 19D0                                          l8519 195E  
                                        l8527 199A                                          l8471 15C8  
                                        l8463 1596                                          l8455 155A  
                                        l8439 14C2                                          l8447 1520  
                                        l8391 128C                                          l8383 1228  
                                        l8375 11D0                                          l8359 1124  
                                        l8711 209E                                          l6951 47E2  
                                        l6943 47AA                                          l6935 4768  
                                        l6927 4730                                          l9191 44FA  
                                        l9183 44EA                                          l9175 44A0  
                                        l9167 4478                                          l9159 445E  
                                        l6697 5C1A                                          l6689 5BF4  
                                        l6769 50CC                                          l7921 2834  
                                        l7905 27B6                                          l8801 3B50  
                                        l7585 25B8                                          l7577 2592  
                                        l7569 2564                                          l7593 25DC  
                                        l7497 236A                                          l7489 235A  
                                        l9329 3A36                                          l9089 3A0A  
                                        l7681 3ED4                                          l7673 3E8C  
                                        l7665 3E4E                                          l7657 3E18  
                                        l7729 4230                                          l7649 57D6  
                                        l8297 2FDE                                          l8289 2FC0  
                                        l7833 2DB2                                          l7825 2D7A  
                                        l7817 2D3C                                          l7809 2D02  
                                        l7761 2BD6                                          l7745 2B82  
                                        l7753 2BAC                                          l7737 2B56  
                                        l8633 1CDA                                          l8625 1CA2  
                                        l8617 1C62                                          l8609 1C2A  
                                        l8561 1AC4                                          l8553 1A2A  
                                        l8545 19FC                                          l8537 19D6  
                                        l8529 19AE                                          l8473 15DC  
                                        l8481 16D2                                          l8465 15A8  
                                        l8457 155E                                          l8449 1528  
                                        l8393 12A4                                          l8377 11DA  
                                        l8369 118A                                          l8641 4A22  
                                        l8713 20B0                                          l8721 217C  
                                        l8705 1FE8                                          l6953 4804  
                                        l6945 47C0                                          l6937 4780  
                                        l6929 473A                                          l9185 44EE  
                                        l9177 44B0                                          l9169 447C  
                                        l9193 5D3C                                          l6699 5B6A  
                                        l7931 2882                                          l7923 2840  
                                        l7915 2800                                          l7907 27BC  
                                        l8811 3BA4                                          l8803 3B58  
                                        l7595 25E0                                          l7587 25BC  
                                        l7579 25A0                                          l7499 236E  
                                        l9099 3A22                                          l7691 3F48  
                                        l7683 3EE6                                          l7675 3EAA  
                                        l7667 3E5C                                          l7659 3E1C  
                                        l8299 3060                                          l7843 2E1C  
                                        l7851 2E64                                          l7835 2DB6  
                                        l7827 2D84                                          l7819 2D4C  
                                        l7771 2C0A                                          l7763 2BD8  
                                        l7755 2BBC                                          l7747 2B92  
                                        l7739 2B62                                          l8635 1CE0  
                                        l8627 1CB4                                          l8619 1C68  
                                        l8571 1B22                                          l8539 19E2  
                                        l8547 1A02                                          l8555 1A30  
                                        l8563 1AC8                                          l8491 179E  
                                        l8483 16F0                                          l8475 1640  
                                        l8459 1570                                          l8467 15B0  
                                        l8395 12AE                                          l8387 125E  
                                        l8651 4A82                                          l8643 4A4C  
                                        l8723 21AA                                          l8731 21DE  
                                        l8715 20F8                                          l8707 2016  
                                        l6955 4804                                          l6947 47C8  
                                        l6939 4784                                          l9187 44F2  
                                        l9179 44C4                                          l9195 5D40  
                                        l7941 28E0                                          l7933 2892  
                                        l7925 285C                                          l7917 2810  
                                        l7909 27DC                                          l8821 3C1A  
                                        l8813 3BE0                                          l8805 3B64  
                                        l7597 25EE                                          l7589 25CC  
                                        l8661 5970                                          l7685 3F14  
                                        l7677 3EB2                                          l7693 3F4E  
                                        l7669 3E7C                                          l7861 2ECE  
                                        l7853 2E7E                                          l7845 2E28  
                                        l7837 2DC4                                          l7829 2D92  
                                        l7781 2C50                                          l7765 2BE8  
                                        l7773 2C12                                          l7757 2BC2  
                                        l7749 2BA2                                          l8629 1CC0  
                                        l8581 1B60                                          l8637 1CFC  
                                        l8573 1B32                                          l8565 1AE6  
                                        l8557 1A88                                          l8549 1A14  
                                        l8493 17AE                                          l8485 1724  
                                        l8477 1698                                          l8469 15B8  
                                        l8389 1270                                          l8653 4AA4  
                                        l8733 21F0                                          l8725 21BC  
                                        l8717 2150                                          l6949 47CC  
                                        l8901 3626                                          l9189 44F6  
                                        l9197 5D42                                          l7951 296A  
                                        l7943 28F0                                          l7935 28A2  
                                        l7927 2868                                          l7919 281A  
                                        l8831 3C62                                          l8823 3C1E  
                                        l8815 3BEC                                          l8807 3B96  
                                        l7599 2604                                          l8663 593C  
                                        l8751 3CC0                                          l7695 3F5E  
                                        l7687 3F34                                          l7679 3EC6  
                                        l7863 2EDC                                          l7855 2E94  
                                        l7847 2E36                                          l7839 2DF2  
                                        l7791 2C78                                          l7783 2C54  
                                        l7775 2C22                                          l7767 2BF8  
                                        l7759 2BC8                                          l8591 1B96  
                                        l8583 1B70                                          l8575 1B36  
                                        l8567 1B02                                          l8559 1ABC  
                                        l8495 17BE                                          l8487 1758  
                                        l8479 16CC                                          l8399 12D6  
                                        l8655 4AB6                                          l8647 4A58  
                                        l8727 21D0                                          l8671 1D72  
                                        l8903 3638                                          l9199 5D50  
                                        l7961 29E4                                          l7953 29A0  
                                        l7945 2910                                          l7937 28B2  
                                        l7929 2874                                          l7881 2724  
                                        l8825 3C42                                          l8817 3BFA  
                                        l8809 3B98                                          l8745 59D8  
                                        l8753 3CE8                                          l7697 3F7E  
                                        l7689 3F36                                          l7865 2EE2  
                                        l7857 2EAE                                          l7849 2E60  
                                        l7777 2C38                                          l7769 2C08  
                                        l8593 1BA2                                          l8585 1B78  
                                        l8577 1B46                                          l8569 1B14  
                                        l8497 17F2                                          l8489 176C  
                                        l8657 4AE8                                          l8649 4A66  
                                        l8681 1E02                                          l8673 1D76  
                                        l8737 21FE                                          l8665 1D22  
                                        l8841 5306                                          l7971 2A44  
                                        l7963 29F6                                          l7955 29AE  
                                        l7947 2920                                          l7939 28C2  
                                        l7891 276A                                          l7883 2734  
                                        l7875 2706                                          l8827 3C52  
                                        l8819 3C18                                          l8747 59A4  
                                        l8851 4B62                                          l8843 4B16  
                                        l8771 3DA2                                          l8755 3CF4  
                                        l8763 3D1C                                          l7867 2EE4  
                                        l7859 2ECA                                          l7795 2C8C  
                                        l7779 2C48                                          l7787 2C68  
                                        l8595 1BA8                                          l8587 1B86  
                                        l8579 1B58                                          l8499 184A  
                                        l8739 222C                                          l8683 1E42  
                                        l8675 1DA2                                          l8667 1D50  
                                        l8835 52C2                                          l8931 4008  
                                        l8923 3FA0                                          l7981 2AB2  
                                        l7965 2A04                                          l7957 29CC  
                                        l7949 2940                                          l7893 2770  
                                        l7885 2744                                          l7877 2714  
                                        l8829 3C60                                          l8861 4BBE  
                                        l8845 4B32                                          l8853 4B72  
                                        l8781 3DF6                                          l8773 3DAA  
                                        l8757 3CFC                                          l8765 3D5E  
                                        l8749 3C74                                          l7797 2CA6  
                                        l7789 2C78                                          l8597 1BCE  
                                        l8589 1B8E                                          l8693 1F32  
                                        l8685 1E70                                          l8677 1DB2  
                                        l8669 1D62                                          l8837 52CA  
                                        l8909 364C                                          l8941 407E  
                                        l8933 403C                                          l8925 3FB0  
                                        l7991 2B1A                                          l7975 2A6E  
                                        l7983 2AB6                                          l7967 2A08  
                                        l7959 29D6                                          l7895 2776  
                                        l7887 2754                                          l7879 2722  
                                        l8791 3AD2                                          l8855 4B8E  
                                        l8863 4BDE                                          l8847 4B4E  
                                        l8783 3E06                                          l8775 3DC6  
                                        l8767 3D7A                                          l8759 3D08  
                                        l7799 2CB6                                          l8599 1BEA  
                                        l8695 1F44                                          l8687 1E9E  
                                        l8679 1DF2                                          l8839 52D8  
                                        l8871 3470                                          l8951 40DE  
                                        l8943 4084                                          l8935 4058  
                                        l8927 3FB6                                          l7993 2B2A  
                                        l7985 2AD0                                          l7977 2A7A  
                                        l7969 2A16                                          l7897 2784  
                                        l7889 275A                                          l8793 3AE0  
                                        l8857 4BAA                                          l8849 4B56  
                                        l8777 3DD2                                          l8769 3D86  
                                        l8697 1F66                                          l8689 1EFA  
                                        l8865 5CA4                                          l8873 34EA  
                                        l8961 4118                                          l8953 40F4  
                                        l8937 4064                                          l8945 4094  
                                        l8929 3FE6                                          l7995 2B38  
                                        l7987 2AE4                                          l7979 2A88  
                                        l7899 2786                                          l8795 3B26  
                                        l8859 4BB2                                          l8779 3DEE  
                                        l8971 5258                                          l8963 5230  
                                        l8699 1F78                                          l8867 5CAE  
                                        l8891 35D8                                          l8875 3506  
                                        l8883 353A                                          l8955 40FE  
                                        l8947 40CA                                          l8939 407A  
                                        l7997 2B3A                                          l7989 2AFE  
                                        l8797 3B3C                                          l8789 3AC2  
                                        l8973 52A0                                          l8981 52BE  
                                        l8965 5236                                          l8893 35EC  
                                        l8885 3580                                          l8877 3512  
                                        l8957 4102                                          l8949 40D2  
                                        l7999 2B40                                          l8975 52A8  
                                        l8967 524C                                          l8991 323A  
                                        l8895 3600                                          l8887 3594  
                                        l8879 352E                                          l8959 4114  
                                        STR_1 103E                                          STR_2 1055  
                                        l8977 52B8                                          l8969 5254  
                                        l8993 3252                                          l8985 31D6  
                                        l8897 3612                                          l8889 35A8  
                                        STR_3 1025                                          STR_4 1001  
                                        l8995 3264                                          l8987 3202  
                                        STR_5 1015                                          STR_6 104A  
                                        l8997 3282                                          l8989 321E  
                                        STR_7 1032                                          STR_8 105F  
                                        l8999 329E                                          STR_9 1067  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          u6100 5A92  
                                        u6101 5A8E                                          u6200 45EE  
                                        u6201 45EA                                          _PMD0 0039C0  
                                        u2845 55A4                                          _PMD1 0039C1  
                                        u2846 55A6                                          u6150 4516  
                                        _PMD2 0039C2                                          u6151 4512  
                                        _PMD3 0039C3                                          u6160 4538  
                                        u7200 54B4                                          u8000 2E36  
                                        _PMD4 0039C4                                          u6161 4534  
                                        u7201 54B0                                          u8001 2E32  
                                        _PMD5 0039C5                                          u6170 4572  
                                        u7210 5118                                          u8010 2E7E  
                                        _PMD6 0039C6                                          u6171 456E  
                                        u7211 5114                                          u8011 2E7A  
                                        _PMD7 0039C7                                          u8100 27DC  
                                        u6180 4594                                          u6420 51BA  
                                        u7300 22EC                                          u7220 512A  
                                        u8020 2EAE                                          u8101 27D8  
                                        u6181 4590                                          u6421 51B6  
                                        u7301 22E8                                          u7221 5126  
                                        u8021 2EAA                                          u8110 27EC  
                                        u6190 45BC                                          u6430 51CA  
                                        u7310 22FC                                          u7230 5152  
                                        u8030 2EDC                                          u8111 27E8  
                                        u6191 45B8                                          u6431 51C6  
                                        u7311 22F8                                          u7231 514E  
                                        u8031 2ED8                                          u8200 2AD0  
                                        u8120 298A                                          u8040 2722  
                                        u7400 2442                                          u7320 2338  
                                        u7240 5188                                          u9000 119C  
                                        u8201 2ACC                                          u8041 271E  
                                        u7401 243E                                          u7321 2334  
                                        u7241 5184                                          u9001 1198  
                                        u8210 2AFE                                          u8130 29E4  
                                        u8050 2734                                          u7410 2452  
                                        u7330 2346                                          u7250 2260  
                                        u9010 1228                                          u8211 2AFA  
                                        u8131 29E0                                          u8051 2730  
                                        u7411 244E                                          u7331 2342  
                                        u7251 225C                                          u9011 1224  
                                        u8220 2B38                                          u8140 2A04  
                                        u8060 2744                                          u7500 25B0  
                                        u7420 2484                                          u7340 23B4  
                                        u7260 2272                                          u7180 5474  
                                        u8300 4F34                                          u9100 1486  
                                        u9020 1258                                          u6700 4798  
                                        u8221 2B34                                          u8141 2A00  
                                        u8125 2980                                          u8061 2740  
                                        u7501 25AC                                          u7421 2480  
                                        u7341 23B0                                          u7261 226E  
                                        u7181 5470                                          u8301 4F30  
                                        u9101 1482                                          u9021 1252  
                                        u6701 4794                                          u8230 4CD4  
                                        u8150 2A16                                          u8070 2784  
                                        u7510 25CC                                          u7430 2492  
                                        u7350 23CC                                          u7270 2282  
                                        u7190 5484                                          u8310 4F4E  
                                        u9110 14AC                                          u9030 125A  
                                        u6710 47AA                                          u8231 4CD0  
                                        u8151 2A12                                          u8071 2780  
                                        u7511 25C8                                          u7431 248E  
                                        u7351 23C6                                          u7271 227E  
                                        u7191 5480                                          u8311 4F4A  
                                        u9111 14A8                                          u6711 47A6  
                                        u8240 4CEE                                          u8160 2A44  
                                        u8080 2796                                          u7600 26A4  
                                        u7520 25DC                                          u7440 24B0  
                                        u7360 23CE                                          u7280 22C4  
                                        u8400 48AA                                          u8320 4F6C  
                                        u9200 15A8                                          u9120 14C2  
                                        u9040 1270                                          u6720 47C0  
                                        u8241 4CEA                                          u8161 2A40  
                                        u8081 2792                                          u7601 26A0  
                                        u7521 25D8                                          u7441 24AC  
                                        u7281 22C0                                          u8401 48A6  
                                        u8321 4F68                                          u9201 15A4  
                                        u9121 14BE                                          u9041 126C  
                                        u6721 47BC                                          u8250 4D14  
                                        u8170 2A5A                                          u8090 27A6  
                                        u7610 26C4                                          u7530 25EE  
                                        u7450 24E8                                          u7370 23F6  
                                        u7290 22DA                                          u8410 48CA  
                                        u8330 4F82                                          u9210 16F0  
                                        u9130 14DE                                          u9050 1322  
                                        u6730 47E2                                          u8251 4D10  
                                        u8171 2A56                                          u8091 27A2  
                                        u7611 26C0                                          u7531 25EA  
                                        u7451 24E4                                          u7371 23F2  
                                        u7291 22D6                                          u8411 48C6  
                                        u8331 4F7E                                          u9211 16EC  
                                        u9131 14DA                                          u9051 131E  
                                        u6731 47DE                                          u8260 4D32  
                                        u8180 2A6E                                          u8500 46F6  
                                        u7620 26D6                                          u7540 2604  
                                        u7460 252E                                          u7380 2414  
                                        u8420 491A                                          u8340 4FA6  
                                        u9300 1984                                          u9220 1758  
                                        u9140 1514                                          u9060 13B8  
                                        u6740 4800                                          u6660 4730  
                                        u8261 4D2E                                          u8181 2A6A  
                                        u8501 46F2                                          u7621 26D2  
                                        u7541 2600                                          u7461 252A  
                                        u7381 2410                                          u8421 4916  
                                        u7701 3E86                                          u8341 4FA2  
                                        u9301 1980                                          u9221 1754  
                                        u9141 1510                                          u9061 13B4  
                                        u6741 47FC                                          u6661 472C  
                                        u8270 4D4E                                          u8190 2A88  
                                        u7630 26F2                                          u7550 261A  
                                        u7470 2564                                          u7390 2434  
                                        u7710 3EAA                                          u8510 4D94  
                                        u8350 4FE6                                          u8430 58A8  
                                        u9310 1992                                          u9230 179E  
                                        u9150 153A                                          u9070 142C  
                                        u6670 474C                                          u8271 4D4A  
                                        u8191 2A84                                          u7631 26EE  
                                        u7551 2616                                          u7471 2560  
                                        u7391 2430                                          u7711 3EA6  
                                        u8511 4D90                                          u8351 4FE2  
                                        u8431 58A4                                          u9311 198E  
                                        u9231 179A                                          u9151 1536  
                                        u9071 1428                                          u6671 4748  
                                        u8280 4D74                                          u8440 4628  
                                        u7560 262E                                          u7480 2574  
                                        u7720 3ED4                                          u7800 4240  
                                        u7640 5724                                          u8520 4DB6  
                                        u8360 5024                                          u9400 1B86  
                                        u9320 19AE                                          u9240 17AE  
                                        u9160 154C                                          u9080 1452  
                                        u6680 475E                                          u8281 4D70  
                                        u8441 4624                                          u7561 262A  
                                        u7481 2570                                          u7721 3ED0  
                                        u7801 423C                                          u7641 5720  
                                        u8521 4DB2                                          u8361 5020  
                                        u9401 1B82                                          u9321 19AA  
                                        u9241 17AA                                          u9161 1548  
                                        u9081 144E                                          u6681 475A  
                                        u8450 465C                                          u7570 2648  
                                        u7490 25A0                                          u7730 3F14  
                                        u7650 57D6                                          u8530 4E0C  
                                        u8290 4F1A                                          u7810 2B70  
                                        u8370 5058                                          u8610 4A0E  
                                        u9410 1C0A                                          u9330 19BC  
                                        u9250 184A                                          u9170 155A  
                                        u9090 1464                                          u6690 4780  
                                        u7571 2644                                          u7491 259C  
                                        u7731 3F10                                          u7651 57D2  
                                        u8531 4E08                                          u8291 4F16  
                                        u7811 2B6C                                          u8371 5054  
                                        u8611 4A08                                          u9411 1C06  
                                        u9331 19B8                                          u9251 1846  
                                        u9171 1556                                          u9091 1460  
                                        u6691 477C                                          u8460 468A  
                                        u7580 2682                                          u8380 484E  
                                        u7740 3F5E                                          u8540 4E1A  
                                        u7900 2D10                                          u7820 2B82  
                                        u8620 4A10                                          u8700 373A  
                                        u7660 588A                                          u9420 1C24  
                                        u9340 1A14                                          u9260 1896  
                                        u9180 1570                                          u9500 4AB6  
                                        u8461 4686                                          u7581 267E  
                                        u8381 484A                                          u7741 3F5A  
                                        u8541 4E16                                          u7901 2D0C  
                                        u7821 2B7E                                          u8605 49E6  
                                        u8701 3736                                          u7661 5884  
                                        u9421 1C20                                          u9341 1A10  
                                        u9261 1892                                          u9181 156C  
                                        u9501 4AB2                                          u8470 469E  
                                        u7590 2694                                          u8390 488C  
                                        u7750 4130                                          u8550 5784  
                                        u7910 2D3A                                          u7830 2B92  
                                        u8630 5388                                          u7670 588C  
                                        u9430 1C3C                                          u9350 1AE6  
                                        u9270 18BC                                          u9190 157E  
                                        u9510 4AE8                                          u8471 469A  
                                        u8455 4652                                          u7591 2690  
                                        u8391 4888                                          u7751 412C  
                                        u8551 5780                                          u7911 2D36  
                                        u7831 2B8E                                          u9431 1C38  
                                        u9351 1AE2                                          u9271 18B8  
                                        u9191 157A                                          u9511 4AE4  
                                        u8480 46C6                                          u7680 3E2A  
                                        u7760 4162                                          u8800 2F3A  
                                        u7920 2D5E                                          u7840 2BD6  
                                        u8560 4964                                          u8720 37A8  
                                        u8640 539A                                          u9440 1C9C  
                                        u9360 1B02                                          u9280 195E  
                                        u9600 2016                                          u8481 46C2  
                                        u7681 3E26                                          u7761 415E  
                                        u8801 2F36                                          u7921 2D5A  
                                        u7841 2BD2                                          u8721 37A4  
                                        u8641 5396                                          u9441 1C96  
                                        u9361 1AFE                                          u9281 195A  
                                        u9601 2012                                          u8490 46E6  
                                        u7690 3E5C                                          u7770 41A0  
                                        u8810 2F68                                          u7930 2D74  
                                        u7850 2BE8                                          u8570 4982  
                                        u8730 37CC                                          u8650 5432  
                                        u9450 1C9E                                          u9370 1B14  
                                        u9290 1972                                          u9610 2098  
                                        u8491 46E2                                          u7691 3E58  
                                        u7771 419C                                          u8811 2F64  
                                        u7931 2D70                                          u7851 2BE4  
                                        u8571 497E                                          u8715 374E  
                                        u8651 542C                                          u9371 1B10  
                                        u9291 196E                                          u9611 2092  
                                        u9700 3DEE                                          u7780 41CA  
                                        u8900 3160                                          u8820 2F84  
                                        u7940 2D92                                          u7860 2BF8  
                                        u8580 49AA                                          u8740 37E8  
                                        u8716 3758                                          u8660 5434  
                                        u9460 1CB4                                          u9380 1B22  
                                        u9620 209A                                          u9540 1D50  
                                        u9525 5994                                          u9701 3DEA  
                                        u7781 41C6                                          u8901 315C  
                                        u8821 2F80                                          u7941 2D8E  
                                        u7861 2BF4                                          u8581 49A6  
                                        u8565 495A                                          u8741 37E4  
                                        u8717 3768                                          u8637 537A  
                                        u9461 1CB0                                          u9381 1B1E  
                                        u9541 1D4C                                          u9710 3AD2  
                                        u7790 41F8                                          u8910 316E  
                                        u8830 2FB2                                          u7950 2DB2  
                                        u7870 2C38                                          u8590 49D4  
                                        u8750 383C                                          u8670 544A  
                                        u9390 1B58                                          u9470 4A4C  
                                        u9630 20B0                                          u9550 1DB2  
                                        u9711 3ACE                                          u9535 5960  
                                        u7791 41F4                                          u8911 316A  
                                        u8831 2FAE                                          u7951 2DAE  
                                        u7871 2C34                                          u8591 49D0  
                                        u8735 37C2                                          u8671 5446  
                                        u9391 1B54                                          u9471 4A48  
                                        u9631 20AC                                          u9551 1DAE  
                                        u9800 3C60                                          u9720 3AE0  
                                        u8920 3186                                          u8840 2FC0  
                                        u7960 2DC4                                          u7880 2C78  
                                        u8760 3858                                          u8680 36E8  
                                        u9480 4A82                                          u9640 21AA  
                                        u9560 1E02                                          u9801 3C5C  
                                        u9721 3ADC                                          u8921 3182  
                                        u8841 2FBC                                          u7961 2DC0  
                                        u7881 2C74                                          u8761 3854  
                                        u9481 4A7E                                          u9641 21A6  
                                        u9561 1DFE                                          u9730 3B3C  
                                        u8850 30EE                                          u7970 2DF2  
                                        u7890 2CEE                                          u8770 3894  
                                        u8690 3718                                          u8930 109C  
                                        u9490 4AA4                                          u9570 1E70  
                                        u9810 5328                                          u9731 3B38  
                                        u8851 30EA                                          u7971 2DEE  
                                        u7891 2CEA                                          u8771 3890  
                                        u8755 3832                                          u8691 3714  
                                        u8931 1098                                          u9491 4AA0  
                                        u9571 1E6C                                          u9811 5324  
                                        u9740 3B92                                          u9820 4B32  
                                        u8860 310C                                          u8780 2F22  
                                        u7980 2E08                                          u8940 10EC  
                                        u9580 1E9E                                          u9900 4094  
                                        u9741 3B8E                                          u9821 4B2E  
                                        u8861 3108                                          u8781 2F1C  
                                        u7981 2E04                                          u8685 36DE  
                                        u8941 10E8                                          u9581 1E9A  
                                        u9901 4090                                          u9750 3BDC  
                                        u9830 4B4E                                          u9670 3D7A  
                                        u8870 3126                                          u8790 2F24  
                                        u7990 2E1C                                          u8950 10FA  
                                        u9590 1F44                                          u9910 40CA  
                                        u9751 3BD8                                          u9655 59FC  
                                        u9831 4B4A                                          u9671 3D76  
                                        u8871 3122                                          u7991 2E18  
                                        u8951 10F6                                          u9591 1F40  
                                        u9911 40C6                                          u9760 3BFA  
                                        u9840 4B8E                                          u9680 3DA2  
                                        u8880 3140                                          u8960 110C  
                                        u9920 4114                                          u9761 3BF6  
                                        u9665 59C8                                          u9841 4B8A  
                                        u9681 3D9E                                          u8881 313C  
                                        u8961 1108                                          u9921 4110  
                                        u9770 3C0A                                          u9850 4BAA  
                                        u9690 3DC6                                          u9930 524C  
                                        u8890 314E                                          u8970 1154  
                                        u9771 3C06                                          u9851 4BA6  
                                        u9691 3DC2                                          u9931 5248  
                                        u8891 314A                                          u8971 1150  
                                        u9780 3C18                                          u9940 52A0  
                                        u8980 1184                                          u9860 3506  
                                        u9781 3C14                                          u9941 529C  
                                        u8981 117E                                          u9861 3502  
                                        u9790 3C52                                          u8990 1186  
                                        u9950 321E                                          u9870 352E  
                                        u9791 3C4E                                          u9951 321A  
                                        u9871 352A                                          u9960 323A  
                                        u9880 3612                                          u9961 3236  
                                        u9881 360E                                          u9970 3252  
                                        u9890 3638                                          _TMR2 003FAA  
                                        u9971 324E                                          u9891 3634  
                                        u9980 3282                                          _TMR4 003F9E  
                                        u9981 327E                                          u9990 329E  
                                        u9991 329A                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 0134                                          _main 5D3C  
                                        _dtoa 2EF0                                          _loop 43CE  
                                        _prec 003C                                          _nout 0128  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                 ___fpclassifyf 4924  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 018A  
                             ___fldiv@new_exp 0025                               _TMR3_Initialize 58CA  
                             _PWM5_Initialize 5DDE                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                                  _tolower$3676 0020  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 5820  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 59A4  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 5E0E  
                               ___fltol@sign1 0081                               __end_of___aldiv 4610  
                             __end_of___aodiv 3FA0                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 5BC6  
                             __end_of___fladd 2706                                         ?_main 0001  
                                       ?_dtoa 0060                                         _ADCLK 003EFF  
                             __end_of___aomod 4282                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 2EF0  
                                       _ADREF 003EFD                               __end_of___awdiv 4D86  
                             __end_of___flneg 58CA                                         ?_loop 0001  
                                       STR_12 1063                                         STR_13 106B  
                                       STR_16 106F                                         STR_18 106F  
                             __end_of___awmod 4FB8                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2B56  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 56E2  
                             __end_of___fltol 4718                                         u10000 32B6  
                                       u10001 32B2                                         u10010 32D8  
                                       u10011 32D4                                         u10100 33FE  
                                       u10020 32FC                                         u10101 33FA  
                                       u10021 32F8                                         u10110 3414  
                                       u10030 330E                                         u10111 3410  
                                       u10031 330A                                         u10200 435C  
                                       u10120 38DA                                         u10040 3324  
                                       u10201 4358                                         u10121 38D6  
                                       u10041 3320                                         u10210 4388  
                                       u10130 38FA                                         u10050 3336  
                                       u10211 4384                                         u10131 38F6  
                                       u10051 3332                                         u10220 43B0  
                                       u10140 3918                                         u10060 334C  
                                       u10221 43AC                                         u10141 3914  
                                       u10061 3348                                         u10150 3952  
                                       u10070 3362                                         u10230 43F8  
                                       u10151 394E                                         u10071 335E  
                                       u10231 43F4                                         u10160 396C  
                                       u10080 3388                                         u10240 440A  
                                       u10161 3968                                         u10081 3384  
                                       u10241 4406                                         u10170 3A8A  
                                       u10090 33E0                                         u10250 445A  
                                       u10171 3A86                                         u10091 33DC  
                                       u10251 4456                                         u10180 3AAE  
                                       u10260 448E                                         u10181 3AAA  
                                       u10261 448A                                         u10190 4340  
                                       u10270 44A0                                         u10191 433C  
                                       u10271 449C                                         u10280 44D8  
                                       u10281 44D4                               ___awdiv@divisor 0016  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T3CLK 003FA9                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 5852                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 5816  
                                       i1l333 5764                                         i1l350 5EA0  
                                       i1l343 4F06                                         i1l336 5768  
                                       i1l353 5E9E                                         _U1TXB 003DEA  
                                       i1l347 5C76                                         i1l356 5E94  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 5EA4                                         i1l692 5BF2  
                                       i2l534 5CA2                                         i2l438 5B38  
                                       i2l446 5A3E                                         i2l552 5AD8  
                                       i1l688 5934                                         i2l529 5D3A  
                                       i2l537 5E2A                                         i1l698 5EA2  
                                       i2l476 5B68                                         i2l558 5D78  
                                       i2l487 5A72                           ??_UART1_rx_vect_isr 0012  
                                       i2l863 556E                                         i2l856 5698  
                                       i2l868 5CF2                               ___awdiv@counter 0018  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00C9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 5EA4  
                             _TMR4_Initialize 5BF4                               _PWM6_Initialize 5DC6  
                           _UART1_tx_vect_isr 57E4                              __end_of_TMR4_ISR 593C  
                     setSteering@steeringMode 001E                                         _delay 00F9  
                                       _flags 003E                                         _fputc 5106  
                                       _fputs 56E2                         __size_of_calcMotorPow 014C  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 003A                                         _putch 5E2C  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 5892  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 00E5                         __size_of_calcSteering 0230  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5E4A  
                 _UART1_SetRxInterruptHandler 5E40                       __end_of_CCP4_Initialize 5B98  
                              ?___fpclassifyf 0014                               __end_of_tolower 5462  
                             __end_of_strncmp 4B16           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 5EA2     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5EA0                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 585A                               _TMR5_Initialize 5606  
                             _PWM7_Initialize 5DAE                               __initialization 539C  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 5D5C                                  __end_of_dtoa 31D6  
                                __end_of_loop 4504                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 5D96                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                 __activetblptr 000003  
                                _calcMotorPow 4282          __size_of_UART1_SetTxInterruptHandler 000A  
                   __end_of_UART1_tx_vect_isr 581E                               _PWM8_Initialize 5D96  
                            _UART1_Initialize 5062                                  _calcSteering 3470  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      ?_fputc 0016                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 001F  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 59A4                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1243 5E9A  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                       __end_of_PWM5_Initialize 5DF6  
                     __end_of_TMR3_Initialize 5902                                        i1l7101 575E  
                                      i1l7111 4E90                                        i1l7103 4E48  
                                      i1l7121 4F02                                        i1l7113 4EA0  
                                      i1l7105 4E58                                        i1l7115 4EB0  
                                      i1l7107 4E68                                        i1l7045 5E96  
                                      i1l7117 4EC8                                        i1l7109 4E78  
                                      i1l7221 583A                                        i1l7119 4EE4  
                                      i1l7215 57EA                                        i1l7161 5BC6  
                                      i1l7241 590E                                        i1l7217 57FE  
                                      i1l7163 5BDA                                        i1l7243 5928  
                                      i1l7219 5826                                        i1l7091 5726  
                                      i1l7245 592C                                        i1l7093 5736  
                                      i1l7239 590A                                        i1l6551 5C4C  
                                      i1l7095 5748                                        i1l6553 5C5E  
                                      i1l7097 574A                                        i1l6555 5C60  
                                      i1l7099 575A                                        i1l6557 5C70  
                                      i1l6559 5C74                                        i1l6775 5E90  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      i2l7131 5B3A                                        i2l7123 5B0A  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      i2l7141 5D68                                        i2l7133 5B48  
                                      i2l7125 5B18                                        _INLVLE 003A84  
                                      i2l7143 5D70                                        i2l7231 5AA8  
                                      i2l7135 5B54                                        i2l7127 5B24  
                                      i2l7223 5A0C                                        i2l7145 5D74  
                                      i2l7233 5AAC                                        i2l7137 5B62  
                                      i2l7129 5B32                                        i2l7225 5A1C  
                                      i2l7251 5664                                        i2l7139 5D5C  
                                      i2l7235 5AC0                                        i2l7227 5A40  
                                      i2l7261 553A                                        i2l7253 5674  
                                      i2l7229 5A50                                        i2l7263 554A  
                                      i2l7255 5686                                        i2l7247 5650  
                                      i2l7265 555C                                        i2l7257 551C  
                                      i2l7249 5654                                        i2l7267 5CCC  
                                      i2l7259 5520                                        i2l6571 5C88  
                                      i2l7269 5CD0                                        i2l6573 5C8C  
                                      i2l6575 5C92                                        i2l6567 5C78  
                                      i2l6569 5C86                                        i2l6577 5C98  
                                      i2l6579 5C9C                                        i2l6781 5D32  
                                      i2l6777 5D18                                        i2l6785 5E1E  
                                      i2l6779 5D26                                  ?_setSteering 001C  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 5230  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 5E5E  
                            __end_of___xxtofl 3C74                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 3470                      __end_of_CCP3_SetCallBack 5E90  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                vfprintf@cfmt 00E3                                        ___flge 481E  
                                      ___fleq 4FB8                                     ??___aldiv 001C  
                                   ??___aodiv 0024                                     ??___fladd 0036  
                                   ??___aomod 0024                                     ??___fldiv 001C  
                                   ??___awdiv 0018                                     ??___flneg 0018  
                                   ??___awmod 0018                                     ??___flmul 0032  
                                   ??___flsub 003A                                     ??___fltol 007D  
                                      _efgtoa 1074                                 _CCP3_CallBack 018E  
                                      _floorf 36A0                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 5DDE                       __end_of_TMR4_Initialize 5C20  
                                      clear_0 53D2                                        clear_1 53DE  
                                      clear_2 53EA                              ___awdiv@quotient 001A  
                                      _motPow 012E                               ___awmod@divisor 0016  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                             ___awmod@counter 0018                                 _CCP4_CallBack 018C  
                                      _smtWay 0120                                        _printf 5CA4  
                                      pad@buf 0028                                        dtoa@fp 0060  
                            ?_CCP3_Initialize 0001                                        _strcpy 5332  
                                      _strlen 57AA                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 4BF8                               _ADCC_Initialize 54BE  
        __end_of_TMR4_DefaultInterruptHandler 5EA4         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 5EA2                                        fputc@c 0016  
                              _PMD_Initialize 5CF4                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 5ADA                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 5332                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 5E54         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 5E4A                     _UART1_DefaultErrorHandler 5E90  
                                   ??_tolower 001C                                     ??_strncmp 001A  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 01AC                                    ___flge@ff1 006D  
                             ??___fpclassifyf 0018                                    ___flge@ff2 0071  
                     __end_of_PWM7_Initialize 5DC6                       __end_of_TMR5_Initialize 5650  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 55BC                                  ___xxtofl@val 001C  
                                  ___fleq@ff1 0014                                    ___fleq@ff2 0018  
                                  __accesstop 0060                       __end_of__initialization 53FC  
                                  ___flneg@f1 0014                              ?_CCP4_Initialize 0001  
                         setSteering@steering 001C                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 0079                               _TMR5_WriteTimer 5C78  
                          __size_of_calcSpeed 020A                     calcMotorPow@setSpeedDelta 0085  
                    __end_of_CCP4_SetCallBack 5E86                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 5BF4                                  __pidataBANK0 5EA6  
                                __pidataBANK1 5E9C                            __size_of_checkBatt 0092  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                               startAccell@MPow 01A8  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 519C  
                               __end_of_fputs 5726                               fp__TMR4_10msISR 0000  
                               __end_of_putch 5E36                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 5DAE                        __end_of_PMD_Initialize 5D18  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 0194               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                             _calcSteering$4174 0085  
                                     ??_fputc 001A                     __end_of_SYSTEM_Initialize 5606  
                                     ??_fputs 0023                               _CLC3_Initialize 5C20  
                                     ??_putch 0015                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 00E5                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 004C                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 0184                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 551A  
                  __end_of_PWM6_LoadDutyValue 5970                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 5E72         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 5E68                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 002D                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01A0  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 4E48  
                                  _getReverse 4718                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 005C                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 5970                                    _distRightM 00F1  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 3AC0  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 0522  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 52C2                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 5CA4                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01A4  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 5106                                       ___aldiv 4504  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 3E18                                       ___fladd 2244  
                                     ___aomod 411E                                       ___fldiv 2B56  
                                     ___awdiv 4CC2                                       ___flneg 5892  
                                     ___awmod 4F08                                       ___flmul 2706  
                                     ___flsub 569A                                       ___fltol 4610  
                   __end_of_UART1_Receive_ISR 4F08                                     ?_vfprintf 019A  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                             __size_of_efgtoa 0CAE                               __size_of_floorf 0216  
                                     __pcinit 539C                     _TMR5_GateInterruptHandler 0188  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0044                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 5D3C                                       __ptext1 43CE  
                                     __ptext2 3FA0                                       __ptext3 3470  
                                     __ptext4 4718                                       __ptext5 31D6  
                                     __ptext6 5CA4                                       __ptext7 52C2  
                                     __ptext8 1D22                                       __ptext9 4A22  
                             __size_of_printf 0028                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 5C4C                         _OSCILLATOR_Initialize 5DF6  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                              ___awmod@dividend 0014  
               __size_of_CCP4_DefaultCallBack 0030                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                     _isupper 585A                                       efgtoa@c 0089  
                                     efgtoa@d 00A7                                       efgtoa@e 00BF  
                                     efgtoa@f 0085                                       efgtoa@g 00BB  
                                     efgtoa@h 00B1                                       efgtoa@i 00B9  
                                     efgtoa@l 00B5                                       efgtoa@m 00A1  
                                     efgtoa@n 00C1                                       efgtoa@p 00AB  
                                     efgtoa@t 009B                                       efgtoa@u 00C3  
                                     efgtoa@w 00AD                                     _IPR10bits 00398A  
                                     _smtDuty 0124                                     _T4HLTbits 003FA1  
                                  ??_getCurve 01A8                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                                       _tolower 5402  
                                     _strncmp 4A22                          end_of_initialization 53FC  
                                     floorf@e 0064                                     _T2RSTbits 003FAF  
                                     floorf@m 0060                                       floorf@u 0066  
                                     floorf@x 002D                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 5E40                   _UART1_SetTxInterruptHandler 5E36  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 2244                                    efgtoa@mode 00B0  
                           ?_CCP3_SetCallBack 0014                                    efgtoa@sign 00A9  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003A              __end_of_ADCC_GetSingleConversion 5AA6  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 5C4C  
                                     strcpy@d 001C                                       strlen@a 0016  
                                     strcpy@s 001A                                       strlen@s 0014  
                        __size_of_startAccell 017E                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0034                                   ___fladd@grs 0078  
                          getCurve@deltaRight 01AA                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0027                                   ___fldiv@rem 0020  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                    __size_of_CCP4_CaptureISR 0034             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 55BC  
                              __end_of___flge 4924                                __end_of___fleq 5062  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00CB  
                                 vfpfcnvrt@ct 00DF                                   vfpfcnvrt@fp 00C7  
                                 vfpfcnvrt@ll 00D1                                __end_of_efgtoa 1D22  
                           __size_of_TMR4_ISR 0038                                __end_of_floorf 38B6  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F527 0118  
                              __end_of_printf 5CCC                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                __end_of_strcpy 539C  
                              __end_of_strlen 57E4                                _TMR5_ReadTimer 5D18  
                         start_initialization 539C                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                                   __end_of_abs 57AA  
                                 __end_of_pad 4E48                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                   putch@txData 0015  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0108  
                                 _actMotorPow 00E7                         __end_of___fpclassifyf 4A22  
                               _uart1TxBuffer 0110                           __size_of_getReverse 0106  
                        __end_of_TMR4_10msISR 5E9C                                  _middleOffSet 01AE  
                                 vfprintf@fmt 019C                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 00ED  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                 __pdataBANK0 00FE                                   __pdataBANK1 01AE  
                                    ??_floorf 0031                    __end_of_PWM7_LoadDutyValue 5A0C  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 5D3C                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 5A74  
                                   ___fldiv@a 0018                                     ___fldiv@b 0014  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 0040  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 0190  
                               __pcstackBANK0 0060                                 __pcstackBANK1 019A  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 593C                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 0198  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5B3A  
                      __size_of_TMR4_CallBack 002E                                     _calcSpeed 38B6  
                           __size_of_getCurve 029A                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                   _checkBatt 5230                                  _currentSpeed 00E9  
                ?_UART1_SetRxInterruptHandler 0014                                     __pnvBANK1 0184  
                                 _efgtoa$3554 008F                                   _efgtoa$3563 0095  
                                 _efgtoa$3555 0091                                   _efgtoa$3564 0097  
                                 _efgtoa$3565 0099                                   _efgtoa$3559 0093  
                          setMotor@motorPower 0018                        _PIN_MANAGER_Initialize 4BF8  
                                   _dtoa$3530 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 5E5E         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 5E54                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 5E7C  
                                    ?___fldiv 0014                                      ?___awdiv 0014  
                                   __ptext100 5650                                     __ptext101 551C  
                                   __ptext102 5CCC                              ___aodiv@quotient 0026  
                                    ?___flneg 0014                                     __ptext103 0000  
           CCP3_DefaultCallBack@capturedValue 0001                                      ?___awmod 0014  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___flsub 0079                                      ?___fltol 0079  
                          ??_UART1_Initialize 0016                                     _distLeftM 00F5  
                                   _distFront 00FC                              _uart1RxLastError 0042  
                               ??_UART1_Write 0014                                     _distRight 00F3  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 00FA  
                           __size_of_vfprintf 0070                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                                   __smallconst 1000  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00FE           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 5EA0     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 5E9E                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 5650  
                               ?_calcSteering 0001                                      ?_isupper 0014  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 5AA8                                     _curveMode 00FB  
                                    ?_tolower 001A                                __size_of_fputc 0096  
                                    _T2CLKCON 003FAE                                __size_of_fputs 0044  
                                    ?_strncmp 0014                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                __size_of_putch 000A  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 5570  
                               ??_setSteering 001F                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 551C                               ___aldiv@counter 001C  
                                  ?_checkBatt 0001         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 5B6A  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u700_28 5BE0                                      i1u700_29 5BF2  
                                    i1u710_28 5840                                      i1u710_29 5852  
                                    i1u632_20 5C70                                      i1u632_21 5C6C  
                                    i1u715_20 5928                                      i1u707_20 57FE  
                                    i1u715_21 5924                                      i1u707_21 57FA  
                                    i1u709_20 583A                                      i1u708_28 5804  
                                    i1u709_21 5836                                      i1u708_29 5816  
                                    _PIR1bits 0039A1                                      i1u690_20 4E68  
                                    i1u690_21 4E64                                      i1u692_20 4EA0  
                                    i1u691_28 4E7E                                      i1u692_21 4E9C  
                                    i1u691_29 4E90                                      i1u694_20 4EE4  
                                    i1u693_28 4EB6                                      i1u694_21 4EE0  
                                    i1u693_29 4EC8                                      _PIR4bits 0039A4  
                                    i1u695_28 4EEA                                      i1u688_20 5736  
                                    i1u695_29 4EFE                                      i1u688_21 5732  
                                    i2u711_48 5A2A                                      i2u711_49 5A3E  
                                    i1u689_20 575A                                      i1u689_21 5756  
                                    i2u633_40 5C86                                      i2u713_40 5AC0  
                                    i2u712_48 5A5E                                      i2u633_41 5C82  
                                    i2u713_41 5ABC                                      i2u712_49 5A72  
                                    i1u699_20 5BDA                                      i1u699_21 5BD6  
                                    i2u714_48 5AC6                                      i2u714_49 5AD8  
                                    _PIR6bits 0039A6                                      i2u716_40 5674  
                                    i2u716_41 5670                                      i2u717_40 554A  
                                    i2u717_41 5546                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    i2u696_40 5B18                                      i2u696_41 5B14  
                                    i2u697_40 5B48                                      i2u697_41 5B44  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 5CCC  
                                    _TMR4_ISR 5904                    __end_of_UART1_Transmit_ISR 576A  
                               _TMR4_CallBack 5BC6                                     _smtPeriod 0048  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                                     _vfpfcnvrt 1D22  
                          ?_SMT1_Overflow_ISR 0001                             _getBatteryVoltage 5E0E  
                                ??_getReverse 0014                                ??_calcMotorPow 0083  
                                  _ADCON0bits 003EF8                                    _ADCON1bits 003EF9  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                          ?_getBatteryVoltage 0001                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 0083                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 54BE  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                                    vfpfcnvrt@c 00E2  
                                  vfpfcnvrt@f 00DB                           ??_getBatteryVoltage 0019  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 0006                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 004C                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0043                            __end_of_getReverse 481E  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 5CF4                           __end_of_setSteering 3E18  
                                  vfprintf@ap 019E                                      __Lrparam 0000  
                                  vfprintf@fp 019A                                   _oldDistLeft 00EF  
                               ??_startAccell 003A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 0087                     __end_of_getBatteryVoltage 5E1E  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___aodiv 0188                              __size_of___fladd 04C2  
                            __size_of___aomod 0164                              __size_of___fldiv 039A  
                            __size_of___awdiv 00C4                              __size_of___flneg 0038  
                            __size_of___awmod 00B0                              __size_of___flmul 0450  
                            __size_of___flsub 0048                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 5B0A  
                     __end_of_SMT1_PR_ACQ_ISR 569A                                    ?_vfpfcnvrt 00C7  
                             ___aodiv@divisor 001C                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                               ___aodiv@counter 0024  
                    _TMR4_SetInterruptHandler 5E72                            ___fpclassifyf@F465 011C  
                                    _actSpeed 519C          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 5E96                                      ___xxtofl 3AC0  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 5E2C  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 5570                                      _getCurve 31D6  
                                    __ptext10 1074                                      __ptext11 5402  
                                    __ptext20 4F08                                      __ptext12 585A  
                                    __ptext21 2EF0                                      __ptext13 5332  
                                    __ptext30 3E18                                      __ptext22 4D86  
                                    __ptext14 36A0                                      __ptext31 5230  
                                    __ptext23 57AA                                      __ptext15 4924  
                                    __ptext40 4282                                      __ptext32 3C74  
                                    __ptext24 56E2                                      __ptext16 569A  
                                    __ptext41 4B16                                      __ptext33 593C  
                                    __ptext25 5106                                      __ptext17 5892  
                                    __ptext50 55BC                                      __ptext42 59A4  
                                    __ptext34 5970                                      __ptext26 5E2C  
                                    __ptext18 4FB8                                      __ptext51 5062  
                                    __ptext43 59D8                                      __ptext35 5E0E  
                                    __ptext27 5462                                      __ptext19 2B56  
                                    __ptext60 5E72                                      __ptext52 5E36  
                                    __ptext44 519C                                      __ptext36 5A74  
                                    __ptext28 576A                                      __ptext61 58CA  
                                    __ptext53 5E40                                      __ptext45 4504  
                                    __ptext37 481E                                      __ptext29 411E  
                                    __ptext70 5DF6                                      __ptext62 5D7A  
                                    __ptext54 5E4A                                      __ptext46 3AC0  
                                    __ptext38 38B6                                      __ptext71 5570  
                                    __ptext63 5ADA                                      __ptext55 5E54  
                                    __ptext47 4610                                      __ptext39 2244  
                                    __ptext80 5820                                      __ptext72 5C20  
                                    __ptext64 5D96                                      __ptext56 5E5E  
                                    __ptext48 2706                                      __ptext81 4E48  
                                    __ptext73 5B6A                                      __ptext65 5DAE  
                                    __ptext57 5606                                      __ptext49 4CC2  
                                    __ptext90 5EA4                                      __ptext82 5E9E  
                                    __ptext74 5E7C                                      __ptext66 5DC6  
                                    __ptext58 5E68                                      __ptext91 5A0C  
                                    __ptext83 5EA0                                      __ptext75 5B98  
                                    __ptext67 5DDE                                      __ptext59 5BF4  
                                    __ptext92 5B0A                                      __ptext84 5E90  
                                    __ptext76 5E86                                      __ptext68 5CF4  
                                    __ptext93 5A40                                      __ptext85 5C4C  
                                    __ptext77 54BE                                      __ptext69 4BF8  
                                    __ptext94 5B3A                                      __ptext86 5904  
                                    __ptext78 57E4                                      __ptext95 5AA8  
                                    __ptext87 5BC6                                      __ptext79 5726  
                                    __ptext96 5D5C                                      __ptext88 5E96  
                                    __ptext97 5E1E                                      __ptext89 5EA2  
                                    __ptext98 5C78                                      __ptext99 5D18  
                            __size_of_isupper 0038                                      _distLeft 00F7  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 0083  
               __end_of_UART1_SetErrorHandler 5E68                              __size_of_tolower 0060  
                                  _T3GCONbits 003FA7                                    strcpy@dest 0014  
                            __size_of_strncmp 00F4                                   ??_checkBatt 003A  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                 __size_of_dtoa 02E6  
                                    _oldSpeed 012C                                    _T5GCONbits 003F9B  
                               __size_of_loop 0136                               _SMT1_Initialize 5ADA  
                                 _IVTLOCKbits 003FD4                                      _setMotor 4B16  
                                    _setSpeed 00EB                      __size_of_TMR5_WriteTimer 002C  
                                    efgtoa@fp 0083                                      efgtoa@ne 009F  
                                    efgtoa@pp 009D                                      efgtoa@ou 00A3  
                   _UART1_OverrunErrorHandler 0192  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 52C2  
                                   printf@fmt 01A0                    __end_of_PWM8_LoadDutyValue 59D8  
                             _CCP3_CaptureISR 5A0C                                   _UART1_Write 5462  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 5D7A     __size_of_TMR5_DefaultGateInterruptHandler 001E  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 5D5C                              ___aomod@dividend 0014  
                         __end_of_startAccell 411E                                _battCheckCount 0130  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0132                               ??_TMR5_GATE_ISR 0011  
                              _vfpfcnvrt$3583 00D9                   __end_of_UART1_RxDataHandler 5C78  
                                 _uart1RxHead 0045                          _CCP4_DefaultCallBack 5B3A  
                                 _uart1TxHead 0047                                   _uart1RxTail 0044  
                                 _uart1TxTail 0046                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 59D8                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 3C74                               _CCP4_CaptureISR 5A40  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 43CE  
                                   strcpy@src 0016                                      isupper@c 0014  
                                   strncmp@_l 0014                                     strncmp@_r 0016  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 36A0                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 00AF                                      printf@ap 01A6  
                            ??_TMR5_ReadTimer 000B                    __size_of_getBatteryVoltage 0010  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 5E96  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00CD  
                                 _reverseTime 012A                               ___aomod@counter 0024  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 5E1E  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                      tolower@c 001A  
                               actSpeed@speed 0024                        __size_of___fpclassifyf 00FE  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 0087  
                                    strncmp@l 001B                                      strncmp@n 0018  
                            _CCP3_SetCallBack 5E86                                      strncmp@r 001D  
                   __size_of_UART1_Initialize 00A4                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 5B98  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 0087  
                    _UART1_TxInterruptHandler 0196                                 ___fladd@signs 0075  
                         __end_of_Default_ISR 5EA6                       __end_of_SMT1_Initialize 5B0A  
                                ___aodiv@sign 0025                __end_of_PIN_MANAGER_Initialize 4CC2  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 0076  
                                ___fladd@bexp 0077                  ?_UART1_SetTxInterruptHandler 0014  
                                ___aomod@sign 0025                       __end_of_CCP3_CaptureISR 5A40  
